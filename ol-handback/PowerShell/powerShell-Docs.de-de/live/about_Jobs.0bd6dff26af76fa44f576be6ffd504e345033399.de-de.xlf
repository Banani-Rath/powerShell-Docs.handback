<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="de-de">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-1c394fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">c7c96b46a6f847ebe15864d35ff863dd83136ff8</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">reference\3.0\Microsoft.PowerShell.Core\About\about_Jobs.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions" />
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">9ef4634be1016a608032281138171794e715cb27</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">7148fd6a31045bc405e21fb68c7a8c1241c2030f</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>about_Jobs</source>
          <target state="translated">about_Jobs</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>powershell, cmdlet</source>
          <target state="translated">PowerShell-Cmdlets</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>About Jobs</source>
          <target state="translated">Informationen zu Aufträgen</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>about_Jobs</source>
          <target state="translated">about_Jobs</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>about_Jobs</source>
          <target state="translated">about_Jobs</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>SHORT DESCRIPTION</source>
          <target state="translated">KURZE BESCHREIBUNG</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Provides information about how Windows PowerShell background jobs run a command or expression in the background without interacting with the current session.</source>
          <target state="translated">Enthält Informationen, wie Windows PowerShell-Hintergrundaufträge einen Befehl oder Ausdruck die Ausführung im Hintergrund ohne Interaktion mit der aktuellen Sitzung.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>LONG DESCRIPTION</source>
          <target state="translated">LANGE BESCHREIBUNG</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>This topic explains how to run background jobs in Windows PowerShell on a local computer.</source>
          <target state="translated">In diesem Thema wird erläutert, wie Hintergrundaufträge in Windows PowerShell auf einem lokalen Computer ausgeführt wird.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>For information about running background jobs on remote computers, see about_Remote_Jobs.</source>
          <target state="translated">Informationen zum Ausführen von Hintergrundaufträgen auf Remotecomputern finden Sie unter "about_remote_jobs".</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>When you start a background job, the command prompt returns immediately, even if the job takes an extended time to complete.</source>
          <target state="translated">Beim Starten eines Auftrags im Hintergrund gibt die Befehlszeile sofort zurück, auch wenn der Auftrag eine längere Zeit in Anspruch nimmt.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>You can continue to work in the session without interruption while the job runs.</source>
          <target state="translated">Sie können ohne Unterbrechung in der Sitzung weiterarbeiten, während der Auftrag abgeschlossen wird.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>THE JOB CMDLETS</source>
          <target state="translated">DIE JOB-CMDLETS</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Start-Job        Starts a background job on a local computer.</source>
          <target state="translated">Start-Job startet ein Hintergrund Auftrag, auf einem lokalen Computer.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Get-Job          Gets the background jobs that were started in the current session.</source>
          <target state="translated">Ruft Get-Job Hintergrundaufträge, die in der aktuellen Sitzung gestartet wurden.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Receive-Job      Gets the results of background jobs.</source>
          <target state="translated">Empfangen von Auftrag ruft die Ergebnisse der Hintergrundaufträge.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Stop-Job         Stops a background job.</source>
          <target state="translated">Stop-Job beendet einen Hintergrundauftrag.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Wait-Job         Suppresses the command prompt until one or all jobs are complete.</source>
          <target state="translated">Wait-Job unterdrückt die Befehlszeile, bis eine oder alle Aufträge abgeschlossen sind.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Remove-Job       Deletes a background job.</source>
          <target state="translated">Remove-Job Löscht einen Hintergrundauftrag.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Invoke-Command   The AsJob parameter runs any command as a background job on a remote computer.</source>
          <target state="translated">Die Invoke-Command-AsJob-Parameter wird jeder Befehl als Hintergrundauftrag auf einem Remotecomputer ausgeführt.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>You can also use Invoke-Command to run any job command remotely, including a Start-Job command.</source>
          <target state="translated">Auch können Invoke-Command für alle Job-Befehls, einschließlich der Start-Job.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>HOW TO START A JOB ON THE LOCAL COMPUTER</source>
          <target state="translated">GEWUSST WIE: STARTEN SIE EINEN AUFTRAG AUF DEM LOKALEN COMPUTER</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>To start a background job on the local computer, use the Start-Job cmdlet.</source>
          <target state="translated">Verwenden Sie das Start-Job-Cmdlet, um einen Hintergrundauftrag auf dem lokalen Computer zu starten.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>To write a Start-Job command, enclose the command that the job runs in braces ( { } ).</source>
          <target state="translated">Schließen Sie den Befehl, den in geschweifte Klammern ({}) der Auftrag ausgeführt wird, um einen Start-Job-Befehl zu schreiben.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Use the ScriptBlock parameter to specify the command.</source>
          <target state="translated">Verwenden Sie den ScriptBlock-Parameter, um den Befehl anzugeben.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>The following command starts a background job that runs a Get-Process command on the local computer.</source>
          <target state="translated">Der folgende Befehl startet einen Hintergrundauftrag, der einen Get-Process-Befehl auf dem lokalen Computer ausgeführt wird.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Start-Job -ScriptBlock {Get-Process}</source>
          <target state="translated">Start-Job - ScriptBlock {Get-Process}</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>The Start-Job command returns an object that represents the job.</source>
          <target state="translated">Der Start-Job-Befehl gibt ein Objekt, das den Auftrag darstellt.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>The job object contains useful information about the job, but it does not contain the job results.</source>
          <target state="translated">Das Auftragsobjekt enthält nützliche Informationen zum Auftrag, aber keine Auftragsergebnisse.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Save the job object in a variable, and then use it with the other Job cmdlets to manage the background job.</source>
          <target state="translated">Speichern Sie das Auftragsobjekt in einer Variablen, und klicken Sie dann mit der Auftrags-Cmdlets verwenden Sie, den Hintergrundauftrag zu verwalten.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>The following command starts a job object and saves the resulting job object in the $job variable.</source>
          <target state="translated">Der folgende Befehl startet ein Auftragsobjekt und speichert das resultierende Auftragsobjekt in der $job-Variablen.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>$job = Start-Job -ScriptBlock {Get-Process}</source>
          <target state="translated">$job = Start-Job - ScriptBlock {Get-Process}</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>You can also use the Get-Job cmdlet to get objects that represent the jobs started in the current session.</source>
          <target state="translated">Das Get-Job-Cmdlet können auch Objekte abzurufen, die in der aktuellen Sitzung gestarteten Aufträgen darstellen.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Get-Job returns the same job object that Start-Job returns.</source>
          <target state="translated">Get-Job gibt dem gleiche Auftragsobjekt, Start-Job zurückgibt.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>GETTING JOB OBJECTS</source>
          <target state="translated">ERSTE AUFTRAGSOBJEKTE</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>To get object that represent the background jobs that were started in the current session, use the Get-Job cmdlet.</source>
          <target state="translated">Um das Objekt abrufen, das die Hintergrundaufträge darstellen, die in der aktuellen Sitzung gestartet wurden, verwenden Sie das Cmdlet Get-Job.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Without parameters, Get-Job returns all of the jobs that were started in the current session.</source>
          <target state="translated">Ohne Parameter gibt Get-Job aller Aufträge, die in der aktuellen Sitzung gestartet wurden.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>For example, the following command gets the jobs in the current session.</source>
          <target state="translated">Beispielsweise ruft die Aufträge mit der folgende Befehl in der aktuellen Sitzung ab.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>PS C:&gt;Get-Job</source>
          <target state="translated">PS C: &gt; Get-Job</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Id  Name  PSJobTypeName State      HasMoreData  Location   Command</source>
          <target state="translated">ID Name PSJobTypeName Zustand HasMoreData Befehl</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>1   Job1  BackgroundJob Running    True         localhost  Get-Process</source>
          <target state="translated">1 Job1 BackgroundJob ausgeführt wird "true" "localhost" Get-Process</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>You can also save the job object in a variable and use it to represent the job in a later command.</source>
          <target state="translated">Sie können auch das Auftragsobjekt in einer Variablen speichern und verwenden, um den Auftrag in einem späteren-Befehl dar.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>The following command gets the job with ID 1 and saves it in the $job variable.</source>
          <target state="translated">Der folgende Befehl ruft den Auftrag mit der ID 1 und speichert sie in der $job-Variablen.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>$job = Get-Job -Id 1</source>
          <target state="translated">$job = Get-Job-Id 1</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>The job object contains the state of the job, which indicates whether the job has finished.</source>
          <target state="translated">Das Auftragsobjekt enthält den Status des Auftrags, der angibt, ob der Auftrag abgeschlossen ist.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>A finished job has a state of "Complete" or "Failed".</source>
          <target state="translated">Ein Auftrag abgeschlossener ist ein Status "Abgeschlossen" oder "Fehler".</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>A job might also be blocked or running.</source>
          <target state="translated">Ein Auftrag möglicherweise auch blockierte oder ausgeführt.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Get-Job</source>
          <target state="translated">Get-Job</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Id  Name  PSJobTypeName State      HasMoreData  Location   Command</source>
          <target state="translated">ID Name PSJobTypeName Zustand HasMoreData Befehl</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>1   Job1  BackgroundJob Complete   True         localhost  Get-Process</source>
          <target state="translated">1 Job1 BackgroundJob vollständige True "localhost" Get-Process</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>GETTING THE RESULTS OF A JOB</source>
          <target state="translated">ABRUFEN VON AUFTRAGSERGEBNISSEN</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>When you run a background job, the results do not appear immediately.</source>
          <target state="translated">Wenn Sie einen Hintergrundauftrag ausführen, führen Sie die Ergebnisse nicht sofort angezeigt.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Instead, the Start-Job cmdlet returns a job object that represents the job, but it does not contain the results.</source>
          <target state="translated">Stattdessen das Start-Job-Cmdlet gibt ein Job-Objekt, das den Auftrag darstellt, aber er enthält keine Ergebnisse.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>To get the results of a background job, use the Receive-Job cmdlet.</source>
          <target state="translated">Verwenden Sie zum Abrufen der Ergebnisse eines Hintergrundauftrags die Receive-Job-Cmdlet.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>The following command uses the Receive-Job cmdlet to get the results of the job.</source>
          <target state="translated">Der folgende Befehl verwendet die Receive-Job-Cmdlet zum Abrufen der Ergebnisse des Auftrags.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>It uses a job object saved in the $job variable to identify the job.</source>
          <target state="translated">Er verwendet ein Job-Objekt, das in der Variablen $job gespeichert, um den Auftrag zu identifizieren.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Receive-Job -Job $job</source>
          <target state="translated">Empfangen-Job-Auftrag $job</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>The Receive-Job cmdlet returns the results of the job.</source>
          <target state="translated">Die Receive-Job-Cmdlet gibt die Ergebnisse des Auftrags.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>Handles  NPM(K)    PM(K)      WS(K) VM(M)   CPU(s)    Id ProcessName</source>
          <target state="translated">Npm(k): PM(k): ws(k): VM(m): CPU(s) Id Prozessname behandelt</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>103       4    11328       9692    56           1176 audiodg 804      14    12228      14108   100   101.74  1740 CcmExec 668       7     2672       6168   104    32.26   488 csrss</source>
          <target state="translated">103 4 11328 9692 und Ereignisquelle 56 1176 Audiodg 804 14 12228 14108 100 101.74 1740 CcmExec 668 7 2672 6168 104 32.26 488 Csrss</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>...</source>
          <target state="translated">...</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>You can also save the results of a job in a variable.</source>
          <target state="translated">Sie können auch die Ergebnisse eines Auftrags in einer Variablen speichern.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>The following command saves the results of the job in the $job variable to the $results variable.</source>
          <target state="translated">Der folgende Befehl speichert die Ergebnisse des Auftrags in der Variablen "$job" an die $results-Variable.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>$results = Receive-Job -Job $job</source>
          <target state="translated">$results = Receive-Job-Auftrag $job</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>And, you can save the results of the job in a file by using the redirection operator (&gt;) or the Out-File cmdlet.</source>
          <target state="translated">Und Sie können die Ergebnisse des Auftrags in einer Datei speichern, verwenden Sie den Umleitungsoperator (&gt;) oder die Out-File-Cmdlet.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>The following command uses the redirection operator to save the results of the job in the $job variable in the Results.txt file.</source>
          <target state="translated">Der folgende Befehl verwendet den Umleitungsoperator, um die Ergebnisse des Auftrags in der Variablen "$job" in der Datei Results.txt zu speichern.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>Receive-Job -Job $job &gt; results.txt</source>
          <target state="translated">Empfangen-Job-Auftrag $job &gt; results.txt</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>GETTING AND KEEPING PARTIAL JOB RESULTS</source>
          <target state="translated">ABRUFEN UND AKTUALISIEREN TEILWEISE JOB-ERGEBNISSE</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>The Receive-Job cmdlet gets the results of a background job.</source>
          <target state="translated">Die Receive-Job-Cmdlet Ruft die Ergebnisse eines Hintergrundauftrags ab.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>If the job is complete, Receive-Job gets all job results.</source>
          <target state="translated">Wenn der Auftrag abgeschlossen ist, ruft die Receive-Job alle Auftragsergebnisse.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>If the job is still running, Receive-Job gets the results that have been generated thus far.</source>
          <target state="translated">Wenn der Auftrag noch ausgeführt wird, ruft die Receive-Job die Ergebnisse, die bisher generiert wurden.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>You can run Receive-Job commands again to get the remaining results.</source>
          <target state="translated">Führen Sie Receive-Befehle erneut aus, um die verbleibenden Ergebnisse abzurufen.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>When Receive-Job returns results, by default, it deletes those results from the cache where job results are stored.</source>
          <target state="translated">Wenn Receive-Job standardmäßig Ergebnisse zurückgibt, werden die Ergebnisse aus dem Cache, wo die Ergebnisse des Auftrags gespeichert werden.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>If you run another Receive-Job command, you get only the results that are not yet received.</source>
          <target state="translated">Wenn Sie einen anderen Receive-Job-Befehl ausführen, erhalten Sie nur die Ergebnisse, die noch nicht empfangen werden.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>The following commands show the results of Receive-Job commands run before the job is complete.</source>
          <target state="translated">Die folgenden Befehle demonstrieren, dass die Ergebnisse der Receive-Befehle, die ausgeführt werden, bevor der Auftrag abgeschlossen ist.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>C:\PS&gt; Receive-Job -Job $job</source>
          <target state="translated">C:\PS &gt; Receive-Job-Auftrag $job</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>Handles  NPM(K)    PM(K)      WS(K) VM(M)   CPU(s)     Id ProcessName</source>
          <target state="translated">Npm(k): PM(k): ws(k): VM(m): CPU(s) Id Prozessname behandelt</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>103       4    11328       9692    56            1176 audiodg 804      14    12228      14108   100   101.74   1740 CcmExec</source>
          <target state="translated">103 4 11328 9692 und Ereignisquelle 56 1176 Audiodg 804 14 12228 14108 100 101.74 1740 CcmExec</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>C:\PS&gt; Receive-Job -Job $job</source>
          <target state="translated">C:\PS &gt; Receive-Job-Auftrag $job</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>Handles  NPM(K)    PM(K)      WS(K) VM(M)   CPU(s)     Id ProcessName</source>
          <target state="translated">Npm(k): PM(k): ws(k): VM(m): CPU(s) Id Prozessname behandelt</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>68       3     2632        664    29     0.36   1388 ccmsetup 749      22    21468      19940   203   122.13   3644 communicator 905       7     2980       2628    34   197.97    424 csrss 1121      25    28408      32940   174   430.14   3048 explorer</source>
          <target state="translated">68 3 2632 664 29 0,36 1388 Ccmsetup 749 22 21468 19940 203 122.13 3644 Communicator 905 7 2980 2628 34 197.97 424 Csrss 1121 25 28408 32940 174 430.14 3048 Explorer</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>To prevent Receive-Job from deleting the job results that it has returned, use the Keep parameter.</source>
          <target state="translated">Um zu verhindern, dass Receive-Job löschen die Ergebnisse des Auftrags, die es zurückgegeben wurde, verwenden Sie den Keep-Parameter.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>As a result, Receive-Job returns all of the results that have been generated until that time.</source>
          <target state="translated">Daher gibt Receive-Job alle Ergebnisse, die bis zu diesem Zeitpunkt generiert wurden.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>The following commands show the effect of using the Keep parameter on a job that is not yet complete.</source>
          <target state="translated">Die folgenden Befehle zeigen die Auswirkung der Verwendung von Keep-Parameter auf einen Auftrag, der noch nicht abgeschlossen ist.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>C:\PS&gt; Receive-Job -Job $job -Keep</source>
          <target state="translated">C:\PS &gt; Receive-Job-Auftrag $job-beibehalten</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>Handles  NPM(K)    PM(K)      WS(K) VM(M)   CPU(s)     Id ProcessName</source>
          <target state="translated">Npm(k): PM(k): ws(k): VM(m): CPU(s) Id Prozessname behandelt</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>103       4    11328       9692    56            1176 audiodg 804      14    12228      14108   100   101.74   1740 CcmExec</source>
          <target state="translated">103 4 11328 9692 und Ereignisquelle 56 1176 Audiodg 804 14 12228 14108 100 101.74 1740 CcmExec</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>C:\PS&gt; Receive-Job -Job $job -Keep</source>
          <target state="translated">C:\PS &gt; Receive-Job-Auftrag $job-beibehalten</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>Handles  NPM(K)    PM(K)      WS(K) VM(M)   CPU(s)     Id ProcessName</source>
          <target state="translated">Npm(k): PM(k): ws(k): VM(m): CPU(s) Id Prozessname behandelt</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>103       4    11328       9692    56            1176 audiodg 804      14    12228      14108   100   101.74   1740 CcmExec 68       3     2632        664    29     0.36   1388 ccmsetup 749      22    21468      19940   203   122.13   3644 communicator 905       7     2980       2628    34   197.97    424 csrss 1121      25    28408      32940   174   430.14   3048 explorer</source>
          <target state="translated">103 4 11328 9692 und Ereignisquelle 56 1176 Audiodg 804 14 12228 14108 100 101.74 1740 CcmExec 68 3 2632 664 29 0,36 1388 Ccmsetup 749 22 21468 19940 203 122.13 3644 Communicator 905 7 2980 2628 34 197.97 424 Csrss 1121 25 28408 32940 174 430.14 3048 Explorer</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>WAITING FOR THE RESULTS</source>
          <target state="translated">DIE ERGEBNISSE WARTET</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>If you run a command that takes a long time to complete, you can use the properties of the job object to determine when the job is complete.</source>
          <target state="translated">Wenn Sie einen Befehl, der eine lange Zeit ausführen in Anspruch nimmt, können Sie die Eigenschaften des Auftragsobjekts verwenden, um zu bestimmen, wann der Auftrag abgeschlossen ist.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>The following command uses the Get-Job object to get all of the background jobs in the current session.</source>
          <target state="translated">Der folgende Befehl verwendet das Get-Job-Objekt, um alle Hintergrundaufträge in der aktuellen Sitzung abzurufen.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>Get-Job</source>
          <target state="translated">Get-Job</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>The results appear in a table.</source>
          <target state="translated">Die Ergebnisse werden in einer Tabelle angezeigt.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>The status of the job appears in the State column.</source>
          <target state="translated">Der Status des Auftrags wird in der Spalte Status angezeigt.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>Id  Name  PSJobTypeName State      HasMoreData  Location   Command</source>
          <target state="translated">ID Name PSJobTypeName Zustand HasMoreData Befehl</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>1   Job1  BackgroundJob Complete    True         localhost  Get-Process 2   Job2  BackgroundJob Running     True         localhost  Get-EventLog -Log Syst... 3   Job3  BackgroundJob Complete    True         localhost  dir -Path C:<ph id="ph1">\*</ph> -Recurse</source>
          <target state="translated">1 Job1 BackgroundJob vollständige True "localhost" Get-Process 2 Job2 BackgroundJob ausgeführt wird "true" "localhost" Get-EventLog-Protokoll Syst.... 3 "job3" BackgroundJob vollständige True Localhost-Dir-Pfad C:<ph id="ph1">\*</ph> -Recurse</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>In this case, the State property reveals that Job 2 is still running.</source>
          <target state="translated">In diesem Fall werden die Status-Eigenschaft, dass der Auftrag 2 noch ausgeführt wird.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>If you were to use the Receive-Job cmdlet to get the job results now, the results would be incomplete.</source>
          <target state="translated">Würden Sie die Receive-Job-Cmdlet verwenden, um die Ergebnisse des Auftrags jetzt, würden die Ergebnisse unvollständig sein.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>You can use the Receive-Job cmdlet repeatedly to get all of the results.</source>
          <target state="translated">Sie können die Receive-Job-Cmdlet wiederholt verwenden, alle Ergebnisse abgerufen.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>By default, each time you use it, you get only the results that were not already received, but you can use the Keep parameter of the Receive-Job cmdlet to retain the results, even though they were already received.</source>
          <target state="translated">In der Standardeinstellung, bei der Verwendung erhalten Sie nur die Ergebnisse, die nicht bereits empfangen wurden, jedoch können den Keep-Parameter von der Receive-Job-Cmdlet die Ergebnisse beibehalten, obwohl sie bereits empfangen wurden.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>You can write the partial results to a file and then append newer results as they arrive or you can wait and check the state of the job later.</source>
          <target state="translated">Sie können die Teilergebnisse in eine Datei schreiben und fügen Sie neuere Ergebnisse als Eingang oder warten Sie, und überprüfen Sie den Status des Auftrags später.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>You can use the Wait parameter of the Receive-Job cmdlet, which does not return the command prompt until the job is complete and all results are available.</source>
          <target state="translated">Sie können die Wait-Parameter von der Receive-Job-Cmdlet erst zurückgegeben wird, die Befehlszeile der Auftrag abgeschlossen ist und alle Ergebnisse verfügbar sind.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>You can also use the Wait-Job cmdlet to wait for any or all of the results of the job.</source>
          <target state="translated">Die Wait-Job-Cmdlet können auch für einige oder alle der Ergebnisse des Auftrags zu warten.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>Wait-Job lets you wait for a particular job, for all jobs, or for any of the jobs to be completed.</source>
          <target state="translated">Wait-Job können Sie warten, für einen bestimmten Auftrag, für alle Aufträge oder für alle Aufträge abgeschlossen werden.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>The following command uses the Wait-Job cmdlet to wait for a job with</source>
          <target state="translated">Der folgende Befehl verwendet das Wait-Job-Cmdlet für einen Auftrag mit warten</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>ID 10.</source>
          <target state="translated">ID 10.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>Wait-Job -ID 10</source>
          <target state="translated">Wait-Job - ID 10</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>As a result, the Windows PowerShell prompt is suppressed until the job is completed.</source>
          <target state="translated">Als Ergebnis der Windows PowerShell-Aufforderung unterdrückt wird, bis der Auftrag abgeschlossen ist.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>You can also wait for a predetermined period of time.</source>
          <target state="translated">Sie können auch einen vordefinierten Zeitraum warten.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>This command uses the Timeout parameter to limit the wait to 120 seconds.</source>
          <target state="translated">Dieser Befehl verwendet den Timeout-Parameter, um die Wartezeit auf 120 Sekunden zu beschränken.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>When the time expires, the command prompt returns, but the job continues to run in the background.</source>
          <target state="translated">Wenn die Zeit abläuft, gibt die Befehlszeile, aber der Auftrag wird weiterhin im Hintergrund ausgeführt.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>Wait-Job -ID 10 -Timeout 120</source>
          <target state="translated">Wait-Job - ID 10 - Timeout 120</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>STOPPING A JOB</source>
          <target state="translated">BEIM BEENDEN EINES AUFTRAGS</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>To stop a background job, use the Stop-Job cmdlet.</source>
          <target state="translated">Verwenden Sie das Stop-Job-Cmdlet, um einen Hintergrundauftrag zu beenden.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>The following command starts a job to get every entry in the System event log.</source>
          <target state="translated">Der folgende Befehl startet einen Auftrag, um jedem Eintrag im Ereignisprotokoll Systems zu erhalten.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>It saves the job object in the $job variable.</source>
          <target state="translated">Es speichert das Auftragsobjekt in der $job-Variablen.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>$job = Start-Job -ScriptBlock {Get-EventLog -Log System}</source>
          <target state="translated">$job = Start-Job - ScriptBlock {Get-EventLog-Protokollsystem}</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>The following command stops the job.</source>
          <target state="translated">Der folgende Befehl beendet den Auftrag.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>It uses a pipeline operator (|) to send the job in the $job variable to Stop-Job.</source>
          <target state="translated">Er verwendet einen Pipelineoperator (|), Stop-Job der Auftrag in der $job-Variablen an.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>$job | Stop-Job</source>
          <target state="translated">$job | Stop-Job</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>DELETING A JOB</source>
          <target state="translated">BEIM LÖSCHEN EINES AUFTRAGS</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>To delete a background job, use the Remove-Job cmdlet.</source>
          <target state="translated">Um einen Hintergrundauftrag zu löschen, verwenden Sie das Cmdlet Remove-Job.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>The following command deletes the job in the $job variable.</source>
          <target state="translated">Der folgende Befehl löscht den Auftrag in der Variablen $job.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>Remove-Job -Job $job</source>
          <target state="translated">Remove-Job-Auftrag $job</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>INVESTIGATING A FAILED JOB</source>
          <target state="translated">UNTERSUCHEN EINES FEHLERHAFTEN AUFTRAGS</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>To find out why a job failed, use the Reason subproperty of the job object.</source>
          <target state="translated">Um finden Sie heraus, warum ein Auftrag misslungen ist, verwenden Sie den Grund Untereigenschaften des Auftragsobjekts.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>The following command starts a job without the required credentials.</source>
          <target state="translated">Der folgende Befehl startet einen Auftrag ohne die erforderlichen Anmeldeinformationen.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>It saves the job object in the $job variable.</source>
          <target state="translated">Es speichert das Auftragsobjekt in der $job-Variablen.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>$job = Start-Job -ScriptBlock {New-Item -Path HKLM:\Software\MyCompany}</source>
          <target state="translated">$job = Start-Job - ScriptBlock {New-Item - Pfad HKLM:\Software\MyCompany}</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>Id   Name  PSJobTypeName State    HasMoreData  Location   Command</source>
          <target state="translated">ID Name PSJobTypeName Zustand HasMoreData Befehl</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>1    Job1  BackgroundJob Failed   False        localhost  New-Item -Path HKLM:\S...</source>
          <target state="translated">1 Job1 BackgroundJob False ist fehlgeschlagen "localhost" New-Item - Pfad HKLM:\S...</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>The following command uses the Reason property to find the error that caused the job to fail.</source>
          <target state="translated">Der folgende Befehl verwendet die Grund-Eigenschaft, um den Fehler zu finden, der den Auftrag ein Fehler verursacht hat.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>$job.ChildJobs[0].JobStateInfo.Reason</source>
          <target state="translated">$job. ChildJobs [0]. JobStateInfo.Reason</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>In this case, the job failed because the remote computer required explicit credentials to run the command.</source>
          <target state="translated">In diesem Fall der Auftrag fehlgeschlagen der Remotecomputer explizite Anmeldeinformationen zum Ausführen des Befehls erforderlich.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>The value of the Reason property is:</source>
          <target state="translated">Der Wert der Eigenschaft Grund ist:</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>Connecting to remote server failed with the following error message : Access is denied.</source>
          <target state="translated">Herstellen einer Verbindung mit remote-Server mit der folgenden Fehlermeldung Fehler: Zugriff wurde verweigert.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>SEE ALSO</source>
          <target state="translated">SIEHE AUCH</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>about_Remote_Jobs about_Job_Details about_Remote about_PSSessions Start-Job Get-Job Receive-Job Stop-Job Wait-Job Remove-Job Invoke-Command</source>
          <target state="translated">About_Remote_Jobs About_Job_Details About_Remote About_PSSessions Start-Job Get-Job Receive-Job Stop-Job Wait-Job Remove-Job Invoke-Command</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>