<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" source-language="en-US" target-language="de-de">
    <body>
      <group id="main" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Separating Configuration and Environment Data</source>
          <target state="translated">Trennen von Konfiguration und Umgebungsdaten</target>         
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Applies To: Windows PowerShell 4.0, Windows PowerShell 5.0</source>
          <target state="translated">Gilt für: Windows PowerShell 4.0, Windows PowerShell 5.0</target>         
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>In Windows PowerShell Desired State Configuration (DSC), it is possible to separate configuration data from the logic of your configuration.</source>
          <target state="translated">In Windows PowerShell DSC ist es möglich, Konfigurationsdaten von der Logik der Konfiguration zu trennen.</target>         
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Another way to look at this is to consider the structural configuration (for example, a configuration might require that IIS be installed) as separate from the environmental configuration (that is, whether the situation is a test environment vs. a production one—the node names would be different, but the configuration applied to them would be the same).</source>
          <target state="translated">Eine weitere Betrachtungsweise ist, die strukturelle Konfiguration (z. B. eine Konfiguration, die die Installation von IIS voraussetzt) als von der Umgebungskonfiguration getrennt zu betrachten (also ob die Situation eine Testumgebung oder eine Produktionsumgebung ist. Die Knotennamen wären unterschiedlich, aber die darauf angewendete Konfiguration wäre identisch).</target>         
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>This has the following advantages:</source>
          <target state="translated">Dies bietet die folgenden Vorteile:</target>         
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>It allows you to reuse your configuration data for different resources, nodes, and configurations.</source>
          <target state="translated">Sie können die Konfigurationsdaten für die verschiedenen Ressourcen, Knoten und Konfigurationen wiederverwenden.</target>         
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Configuration logic is more reusable if it does not contain hard-coded data.</source>
          <target state="translated">Konfigurationslogik ist wiederverwendbarer, wenn sie keine hartcodierten Daten enthält.</target>         
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>This is similar to good scripting guidelines for functions.</source>
          <target state="translated">Dies gleicht guten Richtlinien der Skripterstellung für Funktionen.</target>         
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>If some of the data needs to change, you can make the changes in one location, thereby saving time and reducing errors.</source>
          <target state="translated">Wenn einige der Daten geändert werden müssen, können Sie die Änderungen an einer einzigen Stelle vornehmen und dadurch Zeit sparen und Fehler verringern.</target>         
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Basic concepts and examples</source>
          <target state="translated">Grundlegende Konzepte und Beispiele</target>         
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>To specify the environmental part of the configuration, DSC uses the <bpt id="p1">**</bpt>ConfigurationData<ept id="p1">**</ept> parameter, which is a hash table (or it can take a .psd1 file which contains the hash table).</source>
          <target state="translated">Um den Umgebungsteil der Konfiguration festzulegen, verwendet DSC den Parameter <bpt id="p1">**</bpt>ConfigurationData<ept id="p1">**</ept>, der eine Hashtabelle darstellt (bzw. eine PSD1-Datei, die die Hashtabelle enthält).</target>         
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>This hash table must have at least one key <bpt id="p2">**</bpt>AllNodes<ept id="p2">**</ept>, which has a structured value.</source>
          <target state="translated">Diese Hashtabelle muss mindestens einen Schlüssel enthalten (<bpt id="p2">**</bpt>AllNodes<ept id="p2">**</ept>), der über einen strukturierten Wert verfügt.</target>         
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>For example:</source>
          <target state="translated">Beispiel:</target>         
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Note the AllNodes key, whose value is an array.</source>
          <target state="translated">Notieren Sie den AllNodes-Schlüssel, dessen Wert ein Array ist.</target>         
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Each element of this array is also a hash table, which requires NodeName as a key:</source>
          <target state="translated">Jedes Element dieses Arrays ist auch eine Hashtabelle, die „NodeName“ als Schlüssel erfordert:</target>         
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Each hash table entry in AllNodes corresponds to configuration data to a node in the configuration.</source>
          <target state="translated">Jeder Eintrag der Hashtabelle in „AllNodes“ entspricht Konfigurationsdaten für einen Knoten in der Konfiguration.</target>         
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>In addition to the required NodeName key, you can add other keys to the hash table as well, for example:</source>
          <target state="translated">Zusätzlich zu dem erforderlichen NodeName-Schlüssel können Sie der Hashtabelle weitere Schlüssel hinzufügen, z. B.:</target>         
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>DSC offers three special variables to use in the configuration script:</source>
          <target state="translated">DSC stellt drei spezielle Variablen bereit, die Sie im Konfigurationsskript verwenden können:</target>         
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source><bpt id="p3">**</bpt>$AllNodes<ept id="p3">**</ept>: Refers to all of the nodes.</source>
          <target state="translated"><bpt id="p3">**</bpt>$AllNodes<ept id="p3">**</ept>: Bezieht sich auf alle Knoten.</target>         
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>You can use filtering with <bpt id="p4">**</bpt>.Where()<ept id="p4">**</ept> and <bpt id="p5">**</bpt>.ForEach()<ept id="p5">**</ept>, so instead of hard-coding node names to select particular nodes for action, you could write something like this to select VM-1 and VM-3 in the above example:</source>
          <target state="translated">Mit <bpt id="p4">**</bpt>.Where()<ept id="p4">**</ept> und <bpt id="p5">**</bpt>.ForEach()<ept id="p5">**</ept> können Sie Die Auswahl filtern. Anstatt also die Knoten für eine bestimmte Aktion mithilfe von hartcodierten Knotennamen auszuwählen, können Sie beispielsweise folgenden Code schreiben, um im oben stehenden Beispiel VM-1 und VM-3 auszuwählen:</target>         
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source><bpt id="p6">**</bpt>$Node<ept id="p6">**</ept>: Once the set of nodes is filtered, you can use $Node to refer to the particular entry.</source>
          <target state="translated"><bpt id="p6">**</bpt>$Node<ept id="p6">**</ept>: Nachdem Sie die Gruppe der Knoten gefiltert haben, können Sie mit „$Node“ auf einen bestimmten Eintrag verweisen.</target>         
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>For example:</source>
          <target state="translated">Beispiel:</target>         
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>To apply a property to all nodes, you can set NodeName = “*”.</source>
          <target state="translated">Um allen Knoten eine Eigenschaft zuzuweisen, Legen Sie „NodeName = *“ fest.</target>         
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>For example, to give every node the LogPath property, you could do this:</source>
          <target state="translated">Verwenden Sie z. B. folgenden Code, um allen Knoten die Eigenschaft „LogPath“ zuzuweisen:</target>         
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source><bpt id="p7">**</bpt>$ConfigurationData<ept id="p7">**</ept>: You can use this variable inside a configuration to access the configuration data hash table passed as a parameter.</source>
          <target state="translated"><bpt id="p7">**</bpt>$ConfigurationData<ept id="p7">**</ept>: Sie können diese Variable in einer Konfiguration verwenden, um auf die als Parameter übergebene Konfigurationsdaten-Hashtabelle zuzugreifen.</target>         
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>For example:</source>
          <target state="translated">Beispiel:</target>         
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>You can find a full example included in the <bpt id="p8">[</bpt>xWebAdministration module<ept id="p8">](https://powershellgallery.com/packages/xWebAdministration)</ept>.</source>
          <target state="translated">Ein vollständiges Beispiel finden Sie im <bpt id="p8">[</bpt>xWebAdministration-Modul<ept id="p8">](https://powershellgallery.com/packages/xWebAdministration)</ept>.</target>         
        </trans-unit>
      </group>
    </body>
  </file>
  <header xmlns="">
    <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">291278563679354d4a21858157c0679914131dd3</xliffext:olfilehash>
  </header>
</xliff>