<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="fr-fr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-56a7a5e" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">c9bc3460e25063347de3c594ef5ce437b0f8961d</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">scripting\getting-started\cookbooks\Working-with-Files-and-Folders.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions" />
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d5039c366166efb683e36c82aec4a9451c6ef704</xliffext:olskeletonhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Working with Files and Folders</source>
          <target state="translated">Utilisation de fichiers et dossiers</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>powershell,cmdlet</source>
          <target state="translated">powershell,applet de commande</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Working with Files and Folders</source>
          <target state="translated">Utilisation de fichiers et dossiers</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Navigating through Windows PowerShell drives and manipulating the items on them is similar to manipulating files and folders on Windows physical disk drives.</source>
          <target state="translated">La navigation dans des lecteurs Windows PowerShell et la manipulation des éléments qu’ils contiennent sont similaires à la manipulation de fichiers et dossiers sur des lecteurs de disques physiques Windows.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>We will discuss how to deal with specific file and folder manipulation tasks in this section.</source>
          <target state="translated">Cette section explique comment effectuer certaines tâches de manipulation de fichiers et dossiers.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Listing All the Files and Folders Within a Folder</source>
          <target state="translated">Affichage de la liste de tous les fichiers et dossiers figurant dans un dossier</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>You can get all items directly within a folder by using <bpt id="p1">**</bpt>Get<ph id="ph1">\-</ph>ChildItem<ept id="p1">**</ept>.</source>
          <target state="translated">Vous pouvez obtenir tous les éléments figurant directement dans un dossier à l’aide de l’applet de commande <bpt id="p1">**</bpt>Get<ph id="ph1">\-</ph>ChildItem<ept id="p1">**</ept>.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Add the optional <bpt id="p1">**</bpt>Force<ept id="p1">**</ept> parameter to display hidden or system items.</source>
          <target state="translated">Pour afficher les fichiers ou éléments système masqués, ajoutez le paramètre facultatif <bpt id="p1">**</bpt>Force<ept id="p1">**</ept>.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>For example, this command displays the direct contents of Windows PowerShell Drive C (which is the same as the Windows physical drive C):</source>
          <target state="translated">Par exemple, cette commande affiche le contenu direct du lecteur C de Windows PowerShell (qui est le même que le lecteur physique C de Windows) :</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The command lists only the directly contained items, much like using Cmd.exe's <bpt id="p1">**</bpt>DIR<ept id="p1">**</ept> command or <bpt id="p2">**</bpt>ls<ept id="p2">**</ept> in a UNIX shell.</source>
          <target state="translated">La commande répertorie uniquement les éléments contenus directement, de manière très similaire à la commande <bpt id="p1">**</bpt>DIR<ept id="p1">**</ept> de Cmd.exe ou à la commande <bpt id="p2">**</bpt>ls<ept id="p2">**</ept> dans un interpréteur de commande UNIX.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>In order to show contained items, you need to specify the <bpt id="p1">**</bpt><ph id="ph1">\-</ph>Recurse<ept id="p1">**</ept> parameter as well.</source>
          <target state="translated">Pour afficher les éléments contenus, vous devez également spécifier le paramètre <bpt id="p1">**</bpt><ph id="ph1">\-</ph>Recurse<ept id="p1">**</ept>.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>(This can take an extremely long time to complete.) To list everything on the C drive:</source>
          <target state="translated">(Cela peut prendre beaucoup de temps.) Pour répertorier tout ce qui figure sur le lecteur C :</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Get<ph id="ph1">\-</ph>ChildItem<ept id="p1">**</ept> can filter items with its <bpt id="p2">**</bpt>Path<ept id="p2">**</ept>, <bpt id="p3">**</bpt>Filter<ept id="p3">**</ept>, <bpt id="p4">**</bpt>Include<ept id="p4">**</ept>, and <bpt id="p5">**</bpt>Exclude<ept id="p5">**</ept> parameters, but those are typically based only on name.</source>
          <target state="translated">L’applet de commande <bpt id="p1">**</bpt>Get<ph id="ph1">\-</ph>ChildItem<ept id="p1">**</ept> peut filtrer les éléments avec ses paramètres <bpt id="p2">**</bpt>Path<ept id="p2">**</ept>, <bpt id="p3">**</bpt>Filter<ept id="p3">**</ept>, <bpt id="p4">**</bpt>Include<ept id="p4">**</ept> et <bpt id="p5">**</bpt>Exclude<ept id="p5">**</ept>, mais ceux-ci sont généralement basés uniquement sur le nom.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>You can perform complex filtering based on other properties of items by using <bpt id="p1">**</bpt>Where<ph id="ph1">\-</ph>Object<ept id="p1">**</ept>.</source>
          <target state="translated">Vous pouvez effectuer un filtrage complexe basé sur d’autres propriétés d’éléments à l’aide de l’applet de commande <bpt id="p1">**</bpt>Where<ph id="ph1">\-</ph>Object<ept id="p1">**</ept>.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>The following command finds all executables within the Program Files folder that were last modified after October 1, 2005 and which are neither smaller than 1 megabyte nor larger than 10 megabytes:</source>
          <target state="translated">La commande suivante recherche dans le dossier Program Files tous les exécutables modifiés après le 1er octobre 2005, dont la taille n’est pas inférieure à 1 Mo ou supérieure à 10 Mo :</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Copying Files and Folders</source>
          <target state="translated">Copie de fichiers et dossiers</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Copying is done with <bpt id="p1">**</bpt>Copy<ph id="ph1">\-</ph>Item<ept id="p1">**</ept>.</source>
          <target state="translated">La copie s’effectue à l’aide de l’applet de commande <bpt id="p1">**</bpt>Copy<ph id="ph1">\-</ph>Item<ept id="p1">**</ept>.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>The following command backs up C:<ph id="ph1">\\</ph>boot.ini to C:<ph id="ph2">\\</ph>boot.bak:</source>
          <target state="translated">La commande suivante sauvegarde C:<ph id="ph1">\\</ph>boot.ini dans C:<ph id="ph2">\\</ph>boot.bak :</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>If the destination file already exists, the copy attempt fails.</source>
          <target state="translated">Si le fichier de destination existe déjà, la tentative de copie échoue.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>To overwrite a pre<ph id="ph1">\-</ph>existing destination, use the Force parameter:</source>
          <target state="translated">Pour remplacer une destination préexistante, utilisez le paramètre Force :</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>This command works even when the destination is read<ph id="ph1">\-</ph>only.</source>
          <target state="translated">Cette commande fonctionne même lorsque la destination est en lecture seule.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Folder copying works the same way.</source>
          <target state="translated">La copie de dossier fonctionne de la même manière.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>This command copies the folder C:<ph id="ph1">\\</ph>temp<ph id="ph2">\\</ph>test1 to the new folder c:<ph id="ph3">\\</ph>temp<ph id="ph4">\\</ph>DeleteMe recursively:</source>
          <target state="translated">Cette commande copie le dossier C:<ph id="ph1">\\</ph>temp<ph id="ph2">\\</ph>temptest1 vers le nouveau dossier C:<ph id="ph3">\\</ph>temp<ph id="ph4">\\</ph>DeleteMe de façon récursive :</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>You can also copy a selection of items.</source>
          <target state="translated">Vous pouvez également copier une sélection d’éléments.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>The following command copies all .txt files contained anywhere in c:<ph id="ph1">\\</ph>data to c:<ph id="ph2">\\</ph>temp<ph id="ph3">\\</ph>text:</source>
          <target state="translated">La commande suivante copie tous les fichiers .txt contenus n’importe où dans C:<ph id="ph1">\\</ph>data vers C:<ph id="ph2">\\</ph>temp<ph id="ph3">\\</ph>text :</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>You can still use other tools to perform file system copies.</source>
          <target state="translated">Vous pouvez toujours utiliser d’autres outils pour effectuer des copies du système de fichiers.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>XCOPY, ROBOCOPY, and COM objects, such as the <bpt id="p1">**</bpt>Scripting.FileSystemObject,<ept id="p1">**</ept> all work in Windows PowerShell.</source>
          <target state="translated">Les objets XCOPY, ROBOCOPY et COM, tels que <bpt id="p1">**</bpt>Scripting.FileSystemObject<ept id="p1">**</ept>, fonctionnent tous dans Windows PowerShell.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>For example, you can use the Windows Script Host <bpt id="p1">**</bpt>Scripting.FileSystem COM<ept id="p1">**</ept> class to back up C:<ph id="ph1">\\</ph>boot.ini to C:<ph id="ph2">\\</ph>boot.bak:</source>
          <target state="translated">Par exemple, vous pouvez utiliser la classe Windows Script Host <bpt id="p1">**</bpt>Scripting.FileSystem COM<ept id="p1">**</ept> pour sauvegarder C:<ph id="ph1">\\</ph>boot.ini dans C:<ph id="ph2">\\</ph>boot.bak :</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Creating Files and Folders</source>
          <target state="translated">Création de fichiers et dossiers</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Creating new items works the same on all Windows PowerShell providers.</source>
          <target state="translated">La création de nouveaux éléments fonctionne de la même manière sur tous les fournisseurs Windows PowerShell.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>If a Windows PowerShell provider has more than one type of item—for example, the FileSystem Windows PowerShell provider distinguishes between directories and files—you need to specify the item type.</source>
          <target state="translated">Si un fournisseur Windows PowerShell a plus d’un type d’élément (par exemple, le fournisseur FileSystem de Windows PowerShell fait la distinction entre les répertoires et les fichiers), vous devez spécifier le type d’élément.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>This command creates a new folder C:<ph id="ph1">\\</ph>temp<ph id="ph2">\\</ph>New Folder:</source>
          <target state="translated">Cette commande crée un dossier C:<ph id="ph1">\\</ph>temp<ph id="ph2">\\</ph>New Folder :</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>This command creates a new empty file C:<ph id="ph1">\\</ph>temp<ph id="ph2">\\</ph>New Folder<ph id="ph3">\\</ph>file.txt</source>
          <target state="translated">Cette commande crée un fichier vide C:<ph id="ph1">\\</ph>temp<ph id="ph2">\\</ph>New Folder<ph id="ph3">\\</ph>file.txt</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Removing All Files and Folders Within a Folder</source>
          <target state="translated">Suppression de tous les fichiers et dossiers figurant dans un dossier</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>You can remove contained items using <bpt id="p1">**</bpt>Remove<ph id="ph1">\-</ph>Item<ept id="p1">**</ept>, but you will be prompted to confirm the removal if the item contains anything else.</source>
          <target state="translated">Vous pouvez supprimer des élément contenus à l’aide de l’applet de commande <bpt id="p1">**</bpt>Remove<ph id="ph1">\-</ph>Item<ept id="p1">**</ept>, mais vous devez confirmer la suppression si les éléments contiennent autre chose.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>For example, if you attempt to delete the folder C:<ph id="ph1">\\</ph>temp<ph id="ph2">\\</ph>DeleteMe that contains other items, Windows PowerShell prompts you for confirmation before deleting the folder:</source>
          <target state="translated">Par exemple, si vous tentez de supprimer le dossier C:<ph id="ph1">\\</ph>temp<ph id="ph2">\\</ph>DeleteMe contenant d’autres éléments, Windows PowerShell vous invite à confirmer la suppression :</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>If you do not want to be prompted for each contained item, specify the <bpt id="p1">**</bpt>Recurse<ept id="p1">**</ept> parameter:</source>
          <target state="translated">Si vous ne souhaitez pas être invité à confirmer la suppression de chaque élément contenu, spécifiez le paramètre <bpt id="p1">**</bpt>Recurse<ept id="p1">**</ept>:</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Mapping a Local Folder as a Windows Accessible Drive</source>
          <target state="translated">Mappage d’un dossier local en tant que lecteur Windows accessible</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>You can also map a local folder, using the <bpt id="p1">**</bpt>subst<ept id="p1">**</ept> command.</source>
          <target state="translated">Vous pouvez également mapper un dossier local à l’aide de la commande <bpt id="p1">**</bpt>subst<ept id="p1">**</ept>.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>The following command creates a local drive P: rooted in the local Program Files directory:</source>
          <target state="translated">La commande suivante crée un lecteur local P:, dans la racine du répertoire Program Files local :</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Just as with network drives, drives mapped within Windows PowerShell using <bpt id="p1">**</bpt>subst<ept id="p1">**</ept> are immediately visible to the Windows PowerShell shell.</source>
          <target state="translated">Comme les lecteurs réseau, les lecteurs mappés à l’intérieur de Windows PowerShell avec la commande <bpt id="p1">**</bpt>subst<ept id="p1">**</ept> sont immédiatement visibles pour l’interpréteur de commandes Windows PowerShell.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Reading a Text File into an Array</source>
          <target state="translated">Lecture d’un fichier texte dans un tableau</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>One of the more common storage formats for text data is in a file with separate lines treated as distinct data elements.</source>
          <target state="translated">L’un des formats de stockage courants pour les données de texte est celui d’un fichier contenant des lignes séparées traitées en tant qu’éléments de données distincts.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>Get<ph id="ph1">\-</ph>Content<ept id="p1">**</ept> cmdlet can be used to read an entire file in one step, as shown here:</source>
          <target state="translated">L’applet de commande <bpt id="p1">**</bpt>Get<ph id="ph1">\-</ph>Content<ept id="p1">**</ept> permet de lire un fichier entier en une seule étape, comme illustré ici :</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Get<ph id="ph1">\-</ph>Content<ept id="p1">**</ept> already treats the data read from the file as an array, with one element per line of file content.</source>
          <target state="translated">L’applet de commande <bpt id="p1">**</bpt>Get<ph id="ph1">\-</ph>Content<ept id="p1">**</ept> traite déjà les données lues à partir du fichier en tant que tableau, avec un élément par ligne de contenu du fichier.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>You can confirm this by checking the <bpt id="p1">**</bpt>Length<ept id="p1">**</ept> of the returned content:</source>
          <target state="translated">Vous pouvez vous en assurer en vérifiant la longueur (<bpt id="p1">**</bpt>longueur<ept id="p1">**</ept>) du contenu retourné :</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>This command is most useful for getting lists of information into Windows PowerShell directly.</source>
          <target state="translated">Cette commande est particulièrement utile pour obtenir des listes d’informations directement dans Windows PowerShell.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>For example, you might store a list of computer names or IP addresses in a file C:<ph id="ph1">\\</ph>temp<ph id="ph2">\\</ph>domainMembers.txt, with one name on each line of the file.</source>
          <target state="translated">Par exemple, vous pouvez stocker une liste de noms d’ordinateur ou d’adresses IP dans un fichier C:<ph id="ph1">\\</ph>temp<ph id="ph2">\\</ph>domainMembers.txt, avec un nom sur chaque ligne du fichier.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>You can use <bpt id="p1">**</bpt>Get<ph id="ph1">\-</ph>Content<ept id="p1">**</ept> to retrieve the file contents and put them in the variable <bpt id="p2">**</bpt>$Computers<ept id="p2">**</ept>:</source>
          <target state="translated">Vous pouvez utiliser l’applet de commande <bpt id="p1">**</bpt>Get<ph id="ph1">\-</ph>Content<ept id="p1">**</ept> pour récupérer le contenu du fichier et le placer dans la variable <bpt id="p2">**</bpt>$Computers<ept id="p2">**</ept> :</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>$Computers<ept id="p1">**</ept> is now an array containing a computer name in each element.</source>
          <target state="translated">La variable <bpt id="p1">**</bpt>$Computers<ept id="p1">**</ept> est désormais un tableau contenant un nom d’ordinateur dans chaque élément.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>