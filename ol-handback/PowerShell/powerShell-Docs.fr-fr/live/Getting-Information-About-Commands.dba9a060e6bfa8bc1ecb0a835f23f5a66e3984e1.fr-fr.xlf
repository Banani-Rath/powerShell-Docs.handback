<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="fr-fr">
    <header>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions" />
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">scripting\getting-started\fundamental\Getting-Information-About-Commands.md</xliffext:olfilepath>
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">a19601bd785ab91f5d8175acd081113e87a62a57</xliffext:olfilehash>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-39517ae" tool-company="Microsoft" />
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Getting Information About Commands</source>
          <target state="translated">Obtention d'informations sur les commandes</target>         
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Getting Information About Commands</source>
          <target state="translated">Obtention d'informations sur les commandes</target>         
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>The Windows PowerShell <bpt id="p1">**</bpt>Get\-Command<ept id="p1">**</ept> cmdlet gets all commands that are available in your current session.</source>
          <target state="translated">L’applet de commande Windows PowerShell <bpt id="p1">**</bpt>Get-Command<ept id="p1">**</ept> permet d’obtenir toutes les commandes disponibles dans la session active.</target>         
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>When you type <bpt id="p1">**</bpt>Get\-Command<ept id="p1">**</ept> at a Windows PowerShell prompt, you will see output similar to the following:</source>
          <target state="translated">Quand vous tapez <bpt id="p1">**</bpt>Get-Command<ept id="p1">**</ept> dans une invite Windows PowerShell, la sortie est similaire à ce qui suit :</target>         
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>This output looks a lot like the Help output of Cmd.exe: a tabular summary of internal commands.</source>
          <target state="translated">Cette sortie ressemble beaucoup à la sortie Help de Cmd.exe, à savoir un résumé des commandes internes sous forme de tableau.</target>         
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>In the excerpt of the <bpt id="p1">**</bpt>Get\-Command<ept id="p1">**</ept> command output shown above, every command shown has a CommandType of Cmdlet.</source>
          <target state="translated">Dans l’extrait de la sortie de la commande <bpt id="p1">**</bpt>Get-Command<ept id="p1">**</ept> ci-dessus, chaque commande est de type Cmdlet (« applet de commande »).</target>         
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>A cmdlet is Windows PowerShell's intrinsic command type – a type that corresponds roughly to the <bpt id="p1">**</bpt>dir<ept id="p1">**</ept> and <bpt id="p2">**</bpt>cd<ept id="p2">**</ept> commands of Cmd.exe and to built\-ins in UNIX shells such as BASH.</source>
          <target state="translated">Une applet de commande est un type de commande fondamental dans Windows PowerShell qui correspond approximativement aux commandes <bpt id="p1">**</bpt>dir<ept id="p1">**</ept> et <bpt id="p2">**</bpt>cd<ept id="p2">**</ept> de Cmd.exe et aux commandes intégrées dans les interpréteurs de commandes UNIX tels que BASH.</target>         
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>In the output of the <bpt id="p1">**</bpt>Get\-Command<ept id="p1">**</ept> command, all the definitions end with ellipses (...) to indicate that PowerShell cannot display all the content in the available space.</source>
          <target state="translated">Dans la sortie de la commande <bpt id="p1">**</bpt>Get-Command<ept id="p1">**</ept>, toutes les définitions se terminent par des points de suspension (...). Ceci indique que PowerShell ne peut pas afficher tout le contenu dans l’espace disponible.</target>         
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>When Windows PowerShell displays output, it formats the output as text and then arranges it to make the data fit cleanly into the window.</source>
          <target state="translated">Quand Windows PowerShell affiche la sortie, il la met en forme en tant que texte et la réorganise pour faire tenir les données dans la fenêtre.</target>         
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>We will talk about this later in the section on formatters.</source>
          <target state="translated">Nous aborderons ce sujet plus loin dans la section sur les formateurs.</target>         
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>Get\-Command<ept id="p1">**</ept> cmdlet has a <bpt id="p2">**</bpt>Syntax<ept id="p2">**</ept> parameter that gets the syntax of each cmdlet.</source>
          <target state="translated">L’applet de commande <bpt id="p1">**</bpt>Get-Command<ept id="p1">**</ept> dispose d’un paramètre <bpt id="p2">**</bpt>Syntax<ept id="p2">**</ept> qui permet d’obtenir la syntaxe de chaque applet de commande.</target>         
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>To get the syntax of the Get\-Help cmdlet, use the following command:</source>
          <target state="translated">Pour obtenir la syntaxe de l’applet de commande Get-Help, utilisez la commande suivante :</target>         
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Get\-Command Get\-Help \-Syntax</source>
          <target state="translated">Get-Command Get-Help -Syntax</target>         
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Displaying Available Command Types</source>
          <target state="translated">Affichage des types de commandes disponibles</target>         
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>Get\-Command<ept id="p1">**</ept> command does not list every command that is available in Windows PowerShell.</source>
          <target state="translated">La commande <bpt id="p1">**</bpt>Get-Command<ept id="p1">**</ept> ne répertorie pas toutes les commandes disponibles dans Windows PowerShell.</target>         
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Instead, the <bpt id="p1">**</bpt>Get\-Command<ept id="p1">**</ept> command lists only the cmdlets in the current session.</source>
          <target state="translated">La commande <bpt id="p1">**</bpt>Get-Command<ept id="p1">**</ept> répertorie uniquement les applets de commande dans la session active.</target>         
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Windows PowerShell actually supports several other types of commands.</source>
          <target state="translated">Windows PowerShell prend en charge plusieurs autres types de commandes.</target>         
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Aliases, functions, and scripts are also Windows PowerShell commands, although they are not discussed in detail in the Windows PowerShell User's Guide.</source>
          <target state="translated">Les alias, fonctions et scripts sont aussi des commandes Windows PowerShell, bien qu'ils ne soient pas abordés en détail dans le Guide d'utilisation de Windows PowerShell.</target>         
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>External files that are executable, or have a registered file type handler, are also classified as commands.</source>
          <target state="translated">Les fichiers externes exécutables ou possédant un gestionnaire de type de fichier inscrit sont également considérés comme des commandes.</target>         
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>To get all commands in the session, type:</source>
          <target state="translated">Pour obtenir toutes les commandes dans la session, tapez :</target>         
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Because this list includes external files in your search path, it may contain thousands of items.</source>
          <target state="translated">Étant donné que cette liste recense les fichiers externes dans votre chemin de recherche, elle peut contenir des milliers d'éléments.</target>         
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>It is more useful to look at a reduced set of commands.</source>
          <target state="translated">Il est plus judicieux d'examiner un ensemble réduit de commandes.</target>         
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>To get native commands of other types, use the <bpt id="p1">**</bpt>CommandType<ept id="p1">**</ept> parameter of the <bpt id="p2">**</bpt>Get\-Command<ept id="p2">**</ept> cmdlet.</source>
          <target state="translated">Pour obtenir les commandes natives d’autres types, utilisez le paramètre <bpt id="p1">**</bpt>CommandType<ept id="p1">**</ept> de l’applet de commande <bpt id="p2">**</bpt>Get-Command<ept id="p2">**</ept>.</target>         
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>The asterisk (\*) is used for wildcard matching in Windows PowerShell command arguments.</source>
          <target state="translated">L’astérisque (*) est utilisé comme caractère générique dans les arguments de commande Windows PowerShell.</target>         
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>The \* means "match one or more of any characters".</source>
          <target state="translated">Le symbole * représente un ou plusieurs caractères.</target>         
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>You can type <bpt id="p1">**</bpt>Get\-Command a\&amp;#42;<ept id="p1">**</ept> to find all commands that begin with the letter "a".</source>
          <target state="translated">Pour rechercher toutes les commandes dont le nom commence par la lettre « a », vous pouvez taper <bpt id="p1">**</bpt>Get-Command a&amp;#42;<ept id="p1">**</ept>.</target>         
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Unlike wildcard matching in Cmd.exe, Windows PowerShell's wildcard will also match a period.</source>
          <target state="translated">Contrairement aux caractères génériques dans Cmd.exe, un caractère générique peut représenter un point dans Windows PowerShell.</target>         
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>To get command aliases, which are the assigned nicknames of commands, type:</source>
          <target state="translated">Pour obtenir les alias des commandes, c'est-à-dire les surnoms affectés aux commandes, tapez :</target>         
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>To get the functions in the current session, type:</source>
          <target state="translated">Pour obtenir les fonctions dans la session active, tapez :</target>         
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>To display scripts in Windows PowerShell's search path, type:</source>
          <target state="translated">Pour afficher les scripts dans le chemin de recherche de Windows PowerShell, tapez :</target>         
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>