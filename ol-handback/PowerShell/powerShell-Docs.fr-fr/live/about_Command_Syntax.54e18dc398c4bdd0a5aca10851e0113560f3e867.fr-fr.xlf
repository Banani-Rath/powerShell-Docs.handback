<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="fr-fr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-1c394fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">e620fef5b62433070bfd04bc495056e564de41e9</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">reference\5.0\Microsoft.PowerShell.Core\About\about_Command_Syntax.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions" />
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fb14a85e5d6bab6ede692b8def05bad9317ec96c</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1c96b9be7b0637652b65b752c362b6c889bd55ba</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>about_Command_Syntax</source>
          <target state="translated">about_Command_Syntax</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>powershell, cmdlet</source>
          <target state="translated">applet de commande PowerShell</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>About Command Syntax</source>
          <target state="translated">À propos de la syntaxe de commande</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>about_Command_Syntax</source>
          <target state="translated">about_Command_Syntax</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>about_Command_Syntax</source>
          <target state="translated">about_Command_Syntax</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>SHORT DESCRIPTION</source>
          <target state="translated">DESCRIPTION COURTE</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Describes the syntax diagrams that are used in Windows PowerShell.</source>
          <target state="translated">Décrit les diagrammes de syntaxe qui sont utilisés dans Windows PowerShell.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>LONG DESCRIPTION</source>
          <target state="translated">DESCRIPTION DÉTAILLÉE</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>The Get-Help and Get-Command cmdlets display syntax diagrams to help you construct commands correctly.</source>
          <target state="translated">Les applets de commande Get-Help et Get-Command affichent des diagrammes de syntaxe pour vous aider à construire correctement les commandes.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>This topic explains how to interpret the syntax diagrams.</source>
          <target state="translated">Cette rubrique explique comment interpréter les diagrammes de syntaxe.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Syntax Diagrams Each paragraph in a command syntax diagram represents a valid form of the command.</source>
          <target state="translated">Les diagrammes de syntaxe de chaque paragraphe dans une syntaxe de commande diagramme représente une forme valide de la commande.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>To construct a command, follow the syntax diagram from left to right.</source>
          <target state="translated">Pour construire une commande, suivez le diagramme de syntaxe de gauche à droite.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Select from among the optional parameters and provide values for the placeholders.</source>
          <target state="translated">Faites votre choix parmi les paramètres facultatifs et fournir des valeurs pour les espaces réservés.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Windows PowerShell uses the following notation for syntax diagrams.</source>
          <target state="translated">Windows PowerShell utilise la notation suivante pour les diagrammes de syntaxe.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>&lt;command-name&gt; -<ph id="ph1">&lt;Required Parameter Name&gt;</ph> <ph id="ph2">&lt;Required Parameter Value&gt;</ph> [-<ph id="ph3">&lt;Optional Parameter Name&gt;</ph> <ph id="ph4">&lt;Optional Parameter Value&gt;</ph>] [-<ph id="ph5">&lt;Optional Switch Parameters&gt;</ph>] [-<ph id="ph6">&lt;Optional Parameter Name&gt;</ph>]</source>
          <target state="translated">&lt; nom de la commande &gt; -<ph id="ph1">&lt;Required Parameter Name&gt;</ph> <ph id="ph2">&lt;Required Parameter Value&gt;</ph> [-<ph id="ph3">&lt;Optional Parameter Name&gt;</ph> <ph id="ph4">&lt;Optional Parameter Value&gt;</ph>] [-<ph id="ph5">&lt;Optional Switch Parameters&gt;</ph>] [-<ph id="ph6">&lt;Optional Parameter Name&gt;</ph>]</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>The following is the syntax for the New-Alias cmdlet.</source>
          <target state="translated">Voici la syntaxe de l’applet de commande New-Alias.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>New-Alias [-Name] <ph id="ph1">&lt;string&gt;</ph> [-Value] <ph id="ph2">&lt;string&gt;</ph> [-Description <ph id="ph3">&lt;string&gt;</ph>] [-Force] [-Option {None | ReadOnly | Constant | Private | AllScope}] [-PassThru] [-Scope <ph id="ph4">&lt;string&gt;</ph>] [-Confirm] [-WhatIf] [<ph id="ph5">&lt;CommonParameters&gt;</ph>]</source>
          <target state="translated">Nouvel Alias [-nom] <ph id="ph1">&lt;string&gt;</ph> [-valeur] <ph id="ph2">&lt;string&gt;</ph> [-Description <ph id="ph3">&lt;string&gt;</ph>] [-Force] [-Option {None | ReadOnly | Constante | Privé | AllScope}] [-PassThru] [-étendue <ph id="ph4">&lt;string&gt;</ph>] [-confirmer] [-WhatIf] [<ph id="ph5">&lt;CommonParameters&gt;</ph>]</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>The syntax is capitalized for readability, but Windows PowerShell is case-insensitive.</source>
          <target state="translated">La syntaxe est en majuscules pour une meilleure lisibilité, mais Windows PowerShell respecte la casse.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>The syntax diagram has the following elements.</source>
          <target state="translated">Le diagramme de syntaxe comporte les éléments suivants.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Command name</source>
          <target state="translated">Nom de la commande</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Commands always begin with a command name, such as New-Alias.</source>
          <target state="translated">Commandes commencent toujours par un nom de commande, telles que New-Alias.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Type the command name or its alias, such a "gcm" for Get-Command.</source>
          <target state="translated">Tapez le nom de commande ou son alias, tel un « gcm » de Get-Command.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Parameters</source>
          <target state="translated">Paramètres</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>The parameters of a command are options that determine what the command does.</source>
          <target state="translated">Les paramètres d’une commande sont des options qui déterminent ce que fait la commande.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Some parameters take a "value," which is user input to the command.</source>
          <target state="translated">Certains paramètres de prennent une « valeur », qui est l’entrée d’utilisateur à la commande.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>For example, the Get-Help command has a Name parameter that lets you specify the name of the topic for which help is displayed.</source>
          <target state="translated">Par exemple, la commande Get-Help a un paramètre de nom qui vous permet de spécifier le nom de la rubrique pour laquelle l’aide est affichée.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>The topic name is the value of the Name parameter.</source>
          <target state="translated">Le nom de rubrique est la valeur du paramètre Name.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>In a Windows PowerShell command, parameter names always begin with a hyphen.</source>
          <target state="translated">Dans une commande Windows PowerShell, les noms de paramètre commencent toujours par un trait d’union.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>The hyphen tells Windows PowerShell that the item in the command is a parameter name.</source>
          <target state="translated">Le trait d’union indique à Windows PowerShell que l’élément dans la commande est un nom de paramètre.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>For example, to use the Name parameter of New-Alias, you type the following:</source>
          <target state="translated">Par exemple, pour utiliser le paramètre Name de New-Alias, vous tapez ce qui suit :</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>-Name</source>
          <target state="translated">-Name</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Parameters can be mandatory or optional.</source>
          <target state="translated">Paramètres peuvent être obligatoires ou facultatifs.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>In a syntax diagram, optional items are enclosed in brackets ([ ]).</source>
          <target state="translated">Dans un diagramme de syntaxe, les éléments facultatifs sont placés entre crochets ([]).</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>For more information about parameters, see about_Parameters.</source>
          <target state="translated">Pour plus d’informations, consultez about_Parameters.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Parameter Values</source>
          <target state="translated">Valeurs de paramètre</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>A parameter value is the input that the parameter takes.</source>
          <target state="translated">Une valeur de paramètre est l’entrée qui prend le paramètre.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Because Windows PowerShell is based on the Microsoft .NET Framework, parameter values are represented in the syntax diagram by their .NET type.</source>
          <target state="translated">Windows PowerShell étant basé sur Microsoft .NET Framework, les valeurs de paramètre sont représentées dans le diagramme de syntaxe par leur type .NET.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>For example, the Name parameter of Get-Help takes a String value, which is a text string, such as a single word or multiple words enclosed in quotation marks.</source>
          <target state="translated">Par exemple, le paramètre Name de Get-Help prend une valeur de chaîne, qui est une chaîne de texte, comme un mot unique ou plusieurs mots entourés guillemets.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>[-Name]</source>
          <target state="translated">[-Nom]</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>The .NET type of a parameter value is enclosed in angle brackets (&lt; &gt;) to indicate that it is placeholder for a value and not a literal that you type in a command.</source>
          <target state="translated">Type .NET de la valeur de paramètre est placé entre crochets pointus (&lt;&gt;) pour indiquer qu’il s’agit d’espace réservé pour une valeur et non comme un littéral que vous tapez dans une commande.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>To use the parameter, replace the .NET type placeholder with an object that has the specified .NET type.</source>
          <target state="translated">Pour utiliser le paramètre, remplacez l’espace réservé de type .NET avec un objet qui a le type .NET spécifié.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>For example, to use the Name parameter, type "-Name" followed by a string, such as the following:</source>
          <target state="translated">Par exemple, pour utiliser le paramètre Name, tapez «-nom » suivi d’une chaîne, telle que la suivante :</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>-Name MyAlias</source>
          <target state="translated">-Nom MyAlias</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Parameters with no values</source>
          <target state="translated">Paramètres sans valeurs</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Some parameters do not accept input, so they do not have a parameter value.</source>
          <target state="translated">Certains paramètres n’acceptent pas d’entrée, donc ils n’ont pas une valeur de paramètre.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Parameters without values are called "switch parameters" because they work like on/off switches.</source>
          <target state="translated">Paramètres sans valeurs sont appelées « paramètres de commutateur », car ils fonctionnent comme des commutateurs activé/désactivé.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>You include them (on) or you omit them (off) from a command.</source>
          <target state="translated">Vous les incluez (on) ou omettre (off) à partir d’une commande.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>To use a switch parameter, just type the parameter name, preceded by a hyphen.</source>
          <target state="translated">Pour utiliser un paramètre booléen, tapez simplement le nom du paramètre, précédé par un trait d’union.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>For example, to use the WhatIf parameter of the New-Alias cmdlet, type the following:</source>
          <target state="translated">Par exemple, pour utiliser le paramètre WhatIf de l’applet de commande New-Alias, tapez ce qui suit :</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>-WhatIf</source>
          <target state="translated">-WhatIf</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Parameter Sets</source>
          <target state="translated">Jeux de paramètres</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>The parameters of a command are listed in parameter sets.</source>
          <target state="translated">Les paramètres d’une commande sont répertoriés dans les jeux de paramètres.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Parameter sets look like the paragraphs of a syntax diagram.</source>
          <target state="translated">Présentation de jeux de paramètre comme les paragraphes d’un diagramme de syntaxe.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>The New-Alias cmdlet has one parameter set, but many cmdlets have multiple parameter sets.</source>
          <target state="translated">L’applet de commande New-Alias possède un paramètre de valeur, mais de nombreuses cmdlets ont plusieurs jeux de paramètres.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Some of the cmdlet parameters are unique to a parameter set, and others appear in multiple parameter sets.</source>
          <target state="translated">Certains paramètres d’applet de commande sont uniques à un ensemble de paramètres et d’autres apparaissent dans plusieurs jeux de paramètres.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>Each parameter set represents the format of a valid command.</source>
          <target state="translated">Chaque jeu de paramètres représente le format de commande valide.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>A parameter set includes only parameters that can be used together in a command.</source>
          <target state="translated">Un jeu de paramètres inclut uniquement les paramètres qui peuvent être utilisées ensemble dans une commande.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>If parameters cannot be used in the same command, they appear in separate parameter sets.</source>
          <target state="translated">Si les paramètres ne peuvent pas être utilisés dans la même commande, ils apparaissent dans les jeux de paramètres distincts.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>For example, the Get-Random cmdlet has the following parameter sets:</source>
          <target state="translated">Par exemple, l’applet de commande Get-Random a des jeux de paramètres suivants :</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>Get-Random [[-Maximum] <ph id="ph1">&lt;Object&gt;</ph>] [-Minimum <ph id="ph2">&lt;Object&gt;</ph>] [-SetSeed <ph id="ph3">&lt;int&gt;</ph>] [<ph id="ph4">&lt;CommonParameters&gt;</ph>]</source>
          <target state="translated">Get-Random [[-maximale] <ph id="ph1">&lt;Object&gt;</ph>] [-Minimum <ph id="ph2">&lt;Object&gt;</ph>] [-SetSeed <ph id="ph3">&lt;int&gt;</ph>] [<ph id="ph4">&lt;CommonParameters&gt;</ph>]</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>Get-Random [-InputObject] &lt;Object[]&gt; [-Count <ph id="ph1">&lt;int&gt;</ph>] [-SetSeed <ph id="ph2">&lt;int&gt;</ph>] [<ph id="ph3">&lt;CommonParameters&gt;</ph>]</source>
          <target state="translated">Get-Random [-InputObject] &lt; objet [] &gt; [-nombre <ph id="ph1">&lt;int&gt;</ph>] [-SetSeed <ph id="ph2">&lt;int&gt;</ph>] [<ph id="ph3">&lt;CommonParameters&gt;</ph>]</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>The first parameter set, which returns a random number, has the Minimum and Maximum parameters.</source>
          <target state="translated">Le premier jeu de paramètres, qui retourne un nombre aléatoire, a les paramètres Minimum et Maximum.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>The second parameter set, which returns a randomly selected object from a set of objects, includes the InputObject and Count parameters.</source>
          <target state="translated">Le deuxième jeu de paramètres, qui renvoie un objet sélectionné de façon aléatoire à partir d’un ensemble d’objets, inclut les paramètres InputObject et Count.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>Both parameter sets have the Set-Seed parameter and the common parameters.</source>
          <target state="translated">Les deux jeux de paramètres ont le paramètre de valeur initiale de l’ensemble et les paramètres courants.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>These parameter sets indicate that you can use the InputObject and Count parameters in the same command, but you cannot use the Maximum and Count parameters in the same command.</source>
          <target state="translated">Ces jeux de paramètres indique que vous pouvez utiliser les paramètres InputObject et Count dans la même commande, mais vous ne pouvez pas utiliser les paramètres Maximum et Count dans la même commande.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>You indicate which parameter set you want to use by using the parameters in that parameter set.</source>
          <target state="translated">Vous indiquez quel jeu de paramètres à utiliser avec les paramètres dans cette valeur de paramètre.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>However, every cmdlet also has a default parameter set.</source>
          <target state="translated">Toutefois, chaque cmdlet possède également un paramètre par défaut défini.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>The default parameter set is used when you do not specify parameters that are unique to a parameter set.</source>
          <target state="translated">Le jeu de paramètres par défaut est utilisé lorsque vous ne spécifiez pas de paramètres qui sont spécifiques à un ensemble de paramètres.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>For example, if you use Get-Random without parameters, Windows PowerShell assumes that you are using the Number parameter set and it returns a random number.</source>
          <target state="translated">Par exemple, si vous utilisez Get-Random sans paramètres, Windows PowerShell part du principe que vous utilisez le paramètre Number ensemble et qu’elle renvoie un nombre aléatoire.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>In each parameter set, the parameters appear in position order.</source>
          <target state="translated">Dans chaque jeu de paramètres, les paramètres apparaissent dans l’ordre de position.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>The order of parameters in a command matters only when you omit the optional parameter names.</source>
          <target state="translated">L’ordre des paramètres dans une commande est important que si vous omettez les noms de paramètre facultatif.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>When parameter names are omitted, Windows PowerShell assigns values to parameters by position and type.</source>
          <target state="translated">Lorsque les noms de paramètres sont omis, Windows PowerShell assigne des valeurs aux paramètres par position et par type.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>For more information about parameter position, see about_Parameters.</source>
          <target state="translated">Pour plus d’informations sur la position de paramètre, consultez about_Parameters.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>Symbols in Syntax Diagrams The syntax diagram lists the command name, the command parameters, and the parameter values.</source>
          <target state="translated">Les listes de diagramme de syntaxe les diagrammes de symboles dans la syntaxe du nom de commande, les paramètres de commande et les valeurs de paramètre.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>It also uses symbols to show how to construct a valid command.</source>
          <target state="translated">Il utilise également des symboles pour montrer comment construire une commande valide.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>The syntax diagrams use the following symbols:</source>
          <target state="translated">Les diagrammes de syntaxe utilisent les symboles suivants :</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>-- A hyphen (-) indicates a parameter name.</source>
          <target state="translated">--Un trait d’union (-) indique un nom de paramètre.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>In a command, type the hyphen immediately before the parameter name with no intervening spaces, as shown in the syntax diagram.</source>
          <target state="translated">Dans une commande, tapez le trait d’union immédiatement avant le nom du paramètre et sans espace, comme indiqué dans le diagramme de syntaxe.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>For example, to use the Name parameter of New-Alias, type:</source>
          <target state="translated">Par exemple, pour utiliser le paramètre Name de New-Alias, tapez :</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>-Name</source>
          <target state="translated">-Name</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>-- Angle brackets (&lt;&gt;) indicate placeholder text.</source>
          <target state="translated">--De crochets pointus (&lt;&gt;) indiquent le texte de l’espace réservé.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>You do not type the angle brackets or the placeholder text in a command.</source>
          <target state="translated">Vous ne tapez pas les crochets ou le texte d’espace réservé dans une commande.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>Instead, you replace it with the item that it describes.</source>
          <target state="translated">Au lieu de cela, vous le remplacer par l’élément qu’il décrit.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>Angle brackets are used to identify the .NET type of the value that a parameter takes.</source>
          <target state="translated">Crochets pointus sont utilisés pour identifier le type .NET de la valeur qui prend un paramètre.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>For example, to use the Name parameter of the New-Alias cmdlet, you replace the <ph id="ph1">&lt;string&gt;</ph> with a string, which is a single word or a group of words that are enclosed in quotation marks.</source>
          <target state="translated">Par exemple, pour utiliser le paramètre de nom de l’applet de commande New-Alias, vous remplacez le <ph id="ph1">&lt;string&gt;</ph> avec une chaîne, qui est un mot ou un groupe de mots qui sont placés entre guillemets.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>-- Brackets ([ ]) indicate optional items.</source>
          <target state="translated">--Entre crochets ([]) indiquent des éléments facultatifs.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>A parameter and its value can be optional, or the name of a required parameter can be optional.</source>
          <target state="translated">Un paramètre et sa valeur peuvent être facultatives ou le nom d’un paramètre requis peut être facultatif.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>For example, the Description parameter of New-Alias and its value are enclosed in brackets because they are both optional.</source>
          <target state="translated">Par exemple, le paramètre de Description de New-Alias et sa valeur placés entre crochets, car ils sont tous deux facultatifs.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>[-Description <ph id="ph1">&lt;string&gt;</ph>]</source>
          <target state="translated">[-Description <ph id="ph1">&lt;string&gt;</ph>]</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>The brackets also indicate that the Name parameter value (<ph id="ph1">&lt;string&gt;</ph>) is required, but the parameter name, "Name," is optional.</source>
          <target state="translated">Les crochets indiquent également que la valeur du paramètre Name (<ph id="ph1">&lt;string&gt;</ph>) est requis, mais le nom du paramètre « Name », est facultatif.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>[-Name]</source>
          <target state="translated">[-Nom]</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>-- A right and left bracket ([]) appended to a .NET type indicates that the parameter can accept one or multiple values of that type.</source>
          <target state="translated">--Un crochet de gauche et droit ([]) ajouté à un type .NET indique que le paramètre peut accepter une ou plusieurs valeurs de ce type.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>Enter the values in a comma-separated list.</source>
          <target state="translated">Entrez les valeurs dans une liste séparée par des virgules.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>For example, the Name parameter of the New-Alias cmdlet takes only one string, but the Name parameter of Get-Process can take one or many strings.</source>
          <target state="translated">Par exemple, le paramètre Name de l’applet de commande New-Alias prend uniquement une chaîne, mais le paramètre Name de Get-Process peut prendre une ou plusieurs chaînes.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>New-Alias [-Name]</source>
          <target state="translated">Nouvel Alias [-nom]</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>New-Alias -Name MyAlias</source>
          <target state="translated">Alias-nouveau - nom MyAlias</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>Get-Process [-Name] &lt;string[]&gt;</source>
          <target state="translated">Get-Process [-nom] &lt; chaîne [] &gt;</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>Get-Process -Name Explorer, Winlogon, Services</source>
          <target state="translated">Get-Process - Explorer, Winlogon, Services de noms</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>-- Braces ({}) indicate an "enumeration," which is a set of valid values for a parameter.</source>
          <target state="translated">--Les accolades ({}) indiquent une « énumération », qui est un ensemble de valeurs valides pour un paramètre.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>The values in the braces are separated by vertical bars ( | ).</source>
          <target state="translated">Les valeurs entre parenthèses sont séparées par des barres verticales (|).</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>These bars indicate an "exclusive or" choice, meaning that you can choose only one value from the set of values that are listed inside the braces.</source>
          <target state="translated">Ces barres indiquent un « exclusif ou « choix, ce qui signifie que vous pouvez choisir qu’une seule valeur de l’ensemble de valeurs qui sont répertoriées dans les accolades.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>For example, the syntax for the New-Alias cmdlet includes the following value enumeration for the Option parameter:</source>
          <target state="translated">Par exemple, la syntaxe de l’applet de commande New-Alias comprend l’énumération des valeurs suivantes pour le paramètre de l’Option :</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>-Option {None | ReadOnly | Constant | Private | AllScope}</source>
          <target state="translated">-Option {None | ReadOnly | Constante | Privé | AllScope}</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>The braces and vertical bars indicate that you can choose any one of the listed values for the Option parameter, such as ReadOnly or AllScope.</source>
          <target state="translated">Les accolades et les barres verticales indiquent que vous pouvez choisir l’une des valeurs répertoriées pour le paramètre d’Option, tel que ReadOnly ou AllScope.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>-Option ReadOnly</source>
          <target state="translated">-Option ReadOnly</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>Optional Items Brackets ([]) surround optional items.</source>
          <target state="translated">Facultatif, les éléments entre crochets ([]) entourent les éléments facultatifs.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>For example, in the New-Alias cmdlet syntax description, the Scope parameter is optional.</source>
          <target state="translated">Par exemple, dans la description de syntaxe applet de commande New-Alias, le paramètre d’étendue est facultatif.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>This is indicated in the syntax by the brackets around the parameter name and type:</source>
          <target state="translated">Cela est indiqué dans la syntaxe par les crochets autour du nom du paramètre et du type :</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>[-Scope <ph id="ph1">&lt;string&gt;</ph>]</source>
          <target state="translated">[-Étendue <ph id="ph1">&lt;string&gt;</ph>]</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>Both the following examples are correct uses of the New-Alias cmdlet:</source>
          <target state="translated">Les deux exemples suivants sont des utilisations correctes de l’applet de commande New-Alias :</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>New-Alias -Name utd -Value Update-TypeData New-Alias -Name utd -Value Update-TypeData -Scope global</source>
          <target state="translated">New-Alias - éviter de nom-valeur Update-TypeData New-Alias-éviter de nom-valeur Update-TypeData-étendue globale</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>A parameter name can be optional even if the value for that parameter is required.</source>
          <target state="translated">Un nom de paramètre peut être facultatif, même si la valeur pour ce paramètre est obligatoire.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>This is indicated in the syntax by the brackets around the parameter name but not the parameter type, as in this example from the New-Alias cmdlet:</source>
          <target state="translated">Cela est indiqué dans la syntaxe par les crochets autour du nom de paramètre, mais pas le type de paramètre, comme dans cet exemple à partir de l’applet de commande New-Alias :</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>[-Name] <ph id="ph1">&lt;string&gt;</ph> [-Value]</source>
          <target state="translated">[-Nom] <ph id="ph1">&lt;string&gt;</ph> [-Valeur]</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>The following  commands correctly use the New-Alias cmdlet.</source>
          <target state="translated">Les commandes suivantes utilisent correctement l’applet de commande New-Alias.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>The commands produce the same result.</source>
          <target state="translated">Les commandes produisent le même résultat.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>New-Alias -Name utd -Value Update-TypeData New-Alias -Name utd Update-TypeData New-Alias utd -Value Update-TypeData New-Alias utd Update-TypeData</source>
          <target state="translated">New-Alias - éviter de nom-valeur Update-TypeData New-Alias-éviter de Update-TypeData New-Alias utd nom-valeur Update-TypeData New-Alias utd Update-TypeData</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>If the parameter name is not included in the statement as typed, Windows PowerShell tries to use the position of the arguments to assign the values to parameters.</source>
          <target state="translated">Si le nom du paramètre n’est pas inclus dans l’instruction que vous avez tapé, Windows PowerShell essaie d’utiliser la position des arguments pour assigner des valeurs aux paramètres.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>The following example is not complete:</source>
          <target state="translated">L’exemple suivant n’est pas terminé :</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>New-Alias utd</source>
          <target state="translated">Éviter de nouvel Alias</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>This cmdlet requires values for both the Name and Value parameters.</source>
          <target state="translated">Cette applet de commande requiert des valeurs pour le nom et la valeur des paramètres.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>In syntax examples, brackets are also used in naming and casting to .NET Framework types.</source>
          <target state="translated">Dans les exemples de syntaxe, les crochets sont également utilisés dans d’affectation de noms et de la conversion en types .NET Framework.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>In this context, brackets do not indicate an element is optional.</source>
          <target state="translated">Dans ce contexte, les crochets n’indiquent pas qu'un élément est facultatif.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>KEYWORDS</source>
          <target state="translated">MOTS CLÉS</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>about_Symbols about_Punctuation about_Help_Syntax</source>
          <target state="translated">about_Symbols about_Punctuation about_Help_Syntax</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>SEE ALSO</source>
          <target state="translated">VOIR AUSSI</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>about_Parameters Get-Command Get-Help</source>
          <target state="translated">about_Parameters Get-Command Get-Help</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>