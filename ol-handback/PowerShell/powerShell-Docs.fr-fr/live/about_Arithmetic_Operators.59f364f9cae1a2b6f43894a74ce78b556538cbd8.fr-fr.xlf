<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="fr-fr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-1c394fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d5bbefa325acda21deae8c4e2ef6fb16728959f8</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">reference\3.0\Microsoft.PowerShell.Core\About\about_Arithmetic_Operators.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions" />
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">2622c5cfda3c65336599cd5440af72ff5c2e7c0d</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1cbfbd03e4b80aa8fe33af4f7940f868d8a8705a</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>about_Arithmetic_Operators</source>
          <target state="translated">about_Arithmetic_Operators</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>powershell, cmdlet</source>
          <target state="translated">applet de commande PowerShell</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>About Arithmetic Operators</source>
          <target state="translated">À propos des opérateurs arithmétiques</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>about_Arithmetic_Operators</source>
          <target state="translated">about_Arithmetic_Operators</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>about_Arithmetic_Operators</source>
          <target state="translated">about_Arithmetic_Operators</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>SHORT DESCRIPTION</source>
          <target state="translated">DESCRIPTION COURTE</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Describes the operators that perform arithmetic in Windows PowerShell.</source>
          <target state="translated">Décrit les opérateurs qui effectuent des opérations arithmétiques dans Windows PowerShell.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>LONG DESCRIPTION</source>
          <target state="translated">DESCRIPTION DÉTAILLÉE</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Arithmetic operators calculate numeric values.</source>
          <target state="translated">Opérateurs arithmétiques calculent des valeurs numériques.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>You can use one or more arithmetic operators to add, subtract, multiply, and divide values, and to calculate the remainder (modulus) of a division operation.</source>
          <target state="translated">Vous pouvez utiliser un ou plusieurs opérateurs arithmétiques pour ajouter, soustraire, multiplier et diviser les valeurs et pour calculer le reste (modulo) d’une opération de division.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>In addition, the addition operator (+) and multiplication operator (*) also operate on strings, arrays, and hash tables.</source>
          <target state="translated">En outre, l’opérateur d’addition (+) et l’opérateur de multiplication (*) également fonctionnent sur les chaînes, les tableaux et les tables de hachage.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>The addition operator concatenates the input.</source>
          <target state="translated">L’opérateur d’addition concatène l’entrée.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>The multiplication operator returns multiple copies of the input.</source>
          <target state="translated">L’opérateur de multiplication renvoie plusieurs copies de l’entrée.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>You can even mix object types in an arithmetic statement.</source>
          <target state="translated">Vous pouvez même combinaison de types d’objets dans une instruction arithmétique.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>The method that is used to evaluate the statement is determined by the type of the leftmost object in the expression.</source>
          <target state="translated">La méthode qui est utilisée pour évaluer l’instruction est déterminée par le type de l’objet le plus à gauche dans l’expression.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Beginning in Windows PowerShell 2.0, all arithmetic operators work on 64-bit numbers.</source>
          <target state="translated">À compter de Windows PowerShell 2.0, tous les opérateurs arithmétiques fonctionnent sur des nombres de 64 bits.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Beginning in Windows PowerShell 3.0, the -shr (shift-right) and -shl (shift-left) are added to support bitwise arithmetic in Windows PowerShell.</source>
          <target state="translated">À compter de Windows PowerShell 3.0, le - shr (décalage vers la droite) et - shl (décalage vers la gauche) sont ajoutés pour prendre en charge les opérations de bits arithmétiques dans Windows PowerShell.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Windows PowerShell supports the following arithmetic operators:</source>
          <target state="translated">Windows PowerShell prend en charge les opérateurs arithmétiques suivants :</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Operator  Description                             Example</source>
          <target state="translated">Exemple de Description (opérateur)</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Adds integers; concatenates strings,    6+2 arrays, and hash tables.</source>
          <target state="translated">Ajoute des entiers ; Concatène les chaînes, tableaux de 6 + 2 et tables de hachage.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>"file" + "name"</source>
          <target state="translated">« fichier » + « name »</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Subtracts one value from another        6-2 value.</source>
          <target state="translated">Soustrait une valeur d’une autre valeur 6-2.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>(get-date).date - 1</source>
          <target state="translated">.date (get-date) - 1</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Makes a number a negative number.</source>
          <target state="translated">Rend un nombre à un nombre négatif.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>-6+2</source>
          <target state="translated">-6+2</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>-4</source>
          <target state="translated">-4</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Multiplies integers; copies strings     62 and arrays the specified number of      "w" * 3 times.</source>
          <target state="translated">Multiplie des entiers ; copie des chaînes 62 et tableaux le nombre spécifié de « w » * 3 fois.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>/         Divides two values.</source>
          <target state="translated">/ Divise deux valeurs.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>6/2</source>
          <target state="translated">6/2</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>%         Returns the remainder of a division     7%2 operation.</source>
          <target state="translated">% Renvoie le reste d’une opération de %2 division 7.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>-shl      Shift-left                              100 -shl 2</source>
          <target state="translated">shl - MAJ-gauche 100 shl - 2</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>-shr      Shift-right                             100 -shr 1</source>
          <target state="translated">shr - MAJ-droite 100 shr - 1</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>OPERATOR PRECEDENCE</source>
          <target state="translated">PRIORITÉ DES OPÉRATEURS</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Windows PowerShell processes arithmetic operators in the following order:</source>
          <target state="translated">Windows PowerShell traite des opérateurs arithmétiques dans l’ordre suivant :</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Parentheses ()</source>
          <target state="translated">Entre parenthèses)</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>(for a negative number)</source>
          <target state="translated">(pour un nombre négatif)</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>*, /, %</source>
          <target state="translated">*, /, %</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>+, - (for subtraction)</source>
          <target state="translated">+,-(pour une soustraction)</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Windows PowerShell processes the expressions from left to right according to the precedence rules.</source>
          <target state="translated">Windows PowerShell traite les expressions de gauche à droite selon les règles de priorité.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>The following examples show the effect of the precedence rules:</source>
          <target state="translated">Les exemples suivants illustrent l’effet des règles de priorité :</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>C:\PS&gt; 3+6/3*4</source>
          <target state="translated">C:\PS &gt; 3 + 6/3 * 4</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>11</source>
          <target state="translated">11</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>C:\PS&gt; 10+4/2</source>
          <target state="translated">C:\PS &gt; 10 + 4/2</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>12</source>
          <target state="translated">12</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>C:\PS&gt; (10+4)/2</source>
          <target state="translated">C:\PS &gt; (10 + 4) / 2</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>7</source>
          <target state="translated">7</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>C:\PS&gt; (3+3)/ (1+1)</source>
          <target state="translated">C:\PS &gt; (3 + 3) / (1 + 1)</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>3</source>
          <target state="translated">3</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>The order in which Windows PowerShell evaluates expressions might differ from other programming and scripting languages that you have used.</source>
          <target state="translated">L’ordre dans lequel Windows PowerShell évalue les expressions peut-être différer dans d’autres langages de programmation et de scripts que vous avez utilisés.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>The following example shows a complicated assignment statement.</source>
          <target state="translated">L’exemple suivant illustre une instruction d’assignation compliquée.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>C:\PS&gt; $a = 0 C:\PS&gt; $b = 1,2 C:\PS&gt; $c = -1,-2</source>
          <target state="translated">C:\PS &gt; $un = 0 C:\PS &gt; $b = 1,2 C:\PS &gt; $c = -1, -2</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>C:\PS&gt; $b[$a] = $c[$a++]</source>
          <target state="translated">C:\PS &gt; $b [$un] = $c [$a ++]</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>C:\PS&gt; $b</source>
          <target state="translated">C:\PS &gt; $b</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>1</source>
          <target state="translated">1</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>-1</source>
          <target state="translated">-1</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>In this example, the expression $a++ is evaluated before $c[$a++].</source>
          <target state="translated">Dans cet exemple, l’expression $a ++ est évaluée avant $c [$a ++].</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Evaluating $a++ changes the value of $a.</source>
          <target state="translated">Évaluation des modifications a ++ $ $ la valeur un.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>The variable $a in $b[$a] equals 1, not 0, so the statement assigns a value to $b[1], not $b[0].</source>
          <target state="translated">La variable $un $b dans [$un] est égal à 1, et non à 0, pour l’instruction assigne une valeur à $b [1], pas $b [0].</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>DIVISION AND ROUNDING</source>
          <target state="translated">DIVISION ET ARRONDI</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>When the quotient of a division operation is an integer, Windows PowerShell rounds the value to the nearest integer.</source>
          <target state="translated">Lorsque le quotient d’une opération de division est un entier, Windows PowerShell arrondit la valeur à l’entier le plus proche.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>When the value is .5, it rounds to the nearest even integer.</source>
          <target state="translated">Lorsque la valeur est.5, il est arrondi à l’entier pair le plus proche.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>The following example shows the effect of rounding to the nearest even integer.</source>
          <target state="translated">L’exemple suivant montre l’effet de l’arrondi à l’entier pair le plus proche.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>C:\PS&gt;int</source>
          <target state="translated">C:\PS &gt; int</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>2</source>
          <target state="translated">2</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>C:\PS&gt;int</source>
          <target state="translated">C:\PS &gt; int</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>4</source>
          <target state="translated">4</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>ADDING AND MULTIPLYING NON-NUMERIC TYPES</source>
          <target state="translated">AJOUT ET EN MULTIPLIANT LES TYPES NON NUMÉRIQUES</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>You can add numbers, strings, arrays, and hash tables.</source>
          <target state="translated">Vous pouvez ajouter des nombres, chaînes, tableaux et les tables de hachage.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>And, you can multiply numbers, strings, and arrays.</source>
          <target state="translated">En outre, vous pouvez multiplier des nombres, des chaînes et des tableaux.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>However, you cannot multiply hash tables.</source>
          <target state="translated">Toutefois, vous ne peut pas multiplier des tables de hachage.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>When you add strings, arrays, or hash tables, the elements are concatenated.</source>
          <target state="translated">Lorsque vous ajoutez des chaînes, des tableaux ou des tables de hachage, les éléments sont concaténés.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>When you concatenate collections, such as arrays or hash tables, a new object is created that contains the objects from both collections.</source>
          <target state="translated">Lorsque vous concaténez des collections, telles que des tableaux ou des tables de hachage, un nouvel objet est créé qui contient les objets des deux collections.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>If you try to concatenate hash tables that have the same key, the operation fails.</source>
          <target state="translated">Si vous essayez de concaténer des tables de hachage qui ont la même clé, l’opération échoue.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>For example, the following commands create two arrays and then add them:</source>
          <target state="translated">Par exemple, les commandes suivantes créent deux tableaux et les ajouter :</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>C:\PS&gt; $a = 1,2,3 C:\PS&gt; $b = "A","B","C" C:\PS&gt; $a + $b</source>
          <target state="translated">C:\PS &gt; $un = 1,2,3 C:\PS &gt; $b = « A », « B », « C » C:\PS &gt; $un + $b</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>1</source>
          <target state="translated">1</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>2</source>
          <target state="translated">2</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>3</source>
          <target state="translated">3</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>A</source>
          <target state="translated">A</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>B</source>
          <target state="translated">B</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>C</source>
          <target state="translated">C</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>You can also perform arithmetic operations on objects of different types.</source>
          <target state="translated">Vous pouvez également effectuer des opérations arithmétiques sur les objets de types différents.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>The operation that Windows PowerShell performs is determined by the Microsoft .NET Framework type of the leftmost object in the operation.</source>
          <target state="translated">L’opération qui exécute Windows PowerShell est déterminée par le type de l’objet à l’extrême gauche dans l’opération de Microsoft .NET Framework.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>Windows PowerShell tries to convert all the objects in the operation to the .NET Framework type of the first object.</source>
          <target state="translated">Windows PowerShell essaie de convertir tous les objets dans l’opération de type .NET Framework du premier objet.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>If it succeeds in converting the objects, it performs the operation appropriate to the .NET Framework type of the first object.</source>
          <target state="translated">Si elle réussit à convertir les objets, il effectue l’opération appropriée pour le type .NET Framework du premier objet.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>If it fails to convert any of the objects, the operation fails.</source>
          <target state="translated">Si elle ne peut pas convertir les objets, l’opération échoue.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>The following example demonstrates the use of the addition and multiplication operators in operations that include different object types:</source>
          <target state="translated">L’exemple suivant illustre l’utilisation des opérateurs d’addition et la multiplication dans les opérations qui incluent des différents types d’objets :</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>C:\PS&gt; "file" + 16 file16</source>
          <target state="translated">C:\PS &gt; « fichier » + 16 file16</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>C:\PS&gt; $array = 1,2,3 C:\PS&gt; $array + 16</source>
          <target state="translated">C:\PS &gt; $array = 1,2,3 C:\PS &gt; $array + 16</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>1</source>
          <target state="translated">1</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>2</source>
          <target state="translated">2</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>3</source>
          <target state="translated">3</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>16</source>
          <target state="translated">16</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>C:\PS&gt; $array + "file"</source>
          <target state="translated">C:\PS &gt; $array + « fichier »</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>1</source>
          <target state="translated">1</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>2</source>
          <target state="translated">2</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>3</source>
          <target state="translated">3</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>file</source>
          <target state="translated">fichier</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>C:\PS&gt; "file" * 3 filefilefile</source>
          <target state="translated">C:\PS &gt; « fichier » * filefilefile 3</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>Because the method that is used to evaluate statements is determined by the leftmost object, addition and multiplication in Windows PowerShell are not strictly commutative.</source>
          <target state="translated">Étant donné que la méthode qui est utilisée pour évaluer des instructions est déterminée par l’objet à l’extrême gauche, addition et la multiplication dans Windows PowerShell ne sont pas strictement commutatives.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>For example, (a + b) does not always equal (b + a), and (ab) does not always equal (ba).</source>
          <target state="translated">Par exemple, (un + b) ne pas toujours être égal à (b + a), et (ab) n’est pas toujours égal (ba).</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>The following examples demonstrate this principle:</source>
          <target state="translated">Les exemples suivants illustrent ce principe :</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>C:\PS&gt; "file" + 2 file2</source>
          <target state="translated">C:\PS &gt; « fichier » + Fichier2 2</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>C:\PS&gt; 2 + "file" Cannot convert value "file" to type "System.Int32".</source>
          <target state="translated">C:\PS &gt; 2 + « fichier » ne peut pas convertir la valeur « file » en type « System.Int32 ».</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>Error: "Input string was not in a correct format."</source>
          <target state="translated">Erreur : « chaîne d’entrée n’est pas un format correct. »</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>At line:1 char:4</source>
          <target state="translated">Sur la ligne : 1 char : 4</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>2 + &lt;&lt;&lt;&lt;  "file"</source>
          <target state="translated">2 + &lt;&lt;&lt;&lt; « fichier »</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>C:\PS&gt; "file" * 3 filefilefile</source>
          <target state="translated">C:\PS &gt; « fichier » * filefilefile 3</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>C:\PS&gt; 3 * "file" Cannot convert value "file" to type "System.Int32".</source>
          <target state="translated">C:\PS &gt; 3 * « fichier » ne peut pas convertir la valeur « file » en type « System.Int32 ».</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>Error: "Input string was not in a correct format."</source>
          <target state="translated">Erreur : « chaîne d’entrée n’est pas un format correct. »</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>At line:1 char:4</source>
          <target state="translated">Sur la ligne : 1 char : 4</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>3 * &lt;&lt;&lt;&lt;  "file"</source>
          <target state="translated">3 * &lt;&lt;&lt;&lt; « fichier »</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>Hash tables are a slightly different case.</source>
          <target state="translated">Tables de hachage sont légèrement différentes.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>You can add hash tables.</source>
          <target state="translated">Vous pouvez ajouter des tables de hachage.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>And, you can add a hash table to an array.</source>
          <target state="translated">Et bien, vous pouvez ajouter une table de hachage à un tableau.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>However, you cannot add any other type to a hash table.</source>
          <target state="translated">Toutefois, vous ne peut pas ajouter un autre type à une table de hachage.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>The following examples show how to add hash tables to each other and to other objects:</source>
          <target state="translated">Les exemples suivants montrent comment ajouter des tables de hachage entre eux et à d’autres objets :</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>C:\PS&gt; $hash1 = @{a=1; b=2; c=3} C:\PS&gt; $hash2 = @{c1="Server01"; c2="Server02"} C:\PS&gt; $hash1 + $hash2</source>
          <target state="translated">C:\PS &gt; $hash1 = @{un = 1, b = 2 ; c = 3} C:\PS &gt; $hash2 = @{c1 = « Server01 » ; c2 = « Server02 »} C:\PS &gt; $hash1 + $hash2</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>Name                           Value</source>
          <target state="translated">Valeur de nom</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>c2                             Server02 a                              1 b                              2 c1                             Server01 c                              3</source>
          <target state="translated">c2                             Server02 a                              1 b                              2 c1                             Server01 c                              3</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>C:\PS&gt; $hash1 + 2 You can add another hash table only to a hash table.</source>
          <target state="translated">C:\PS &gt; $hash1 + 2, vous pouvez ajouter une autre table de hachage qu’à une table de hachage.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>At line:1 char:9</source>
          <target state="translated">À la ligne : 1 char : 9</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>$hash1 + &lt;&lt;&lt;&lt;  2</source>
          <target state="translated">$hash1 + &lt;&lt;&lt;&lt; 2</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>C:\PS&gt; 2 + $hash1 Cannot convert "System.Collections.Hashtable" to "System.Int32".</source>
          <target state="translated">C:\PS &gt; 2 + $hash1 ne peut pas convertir « System.Collections.Hashtable » à « System.Int32 ».</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>At line:1 char:4</source>
          <target state="translated">Sur la ligne : 1 char : 4</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>2 + &lt;&lt;&lt;&lt;  $hash1</source>
          <target state="translated">2 + &lt;&lt;&lt;&lt; $hash1</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>The following examples demonstrate that you can add a hash table to an array.</source>
          <target state="translated">Les exemples suivants montrent que vous pouvez ajouter une table de hachage dans un tableau.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>The entire hash table is added to the array as a single object.</source>
          <target state="translated">La table de hachage entier est ajoutée au tableau comme un objet unique.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>C:\PS&gt; $array = 1,2,3 C:\PS&gt; $array + $hash1</source>
          <target state="translated">C:\PS &gt; $array = 1,2,3 C:\PS &gt; $array + $hash1</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>1</source>
          <target state="translated">1</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>2</source>
          <target state="translated">2</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>3</source>
          <target state="translated">3</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>Name                           Value</source>
          <target state="translated">Valeur de nom</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>a                              1 b                              2 c                              3</source>
          <target state="translated">a                              1 b                              2 c                              3</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>C:\PS&gt; $sum = $array + $hash1 C:\PS&gt; $sum.count</source>
          <target state="translated">C:\PS &gt; $sum = $array + $hash1 C:\PS &gt; $sum.count</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>4</source>
          <target state="translated">4</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>C:\PS&gt; $sum[3] Name                           Value</source>
          <target state="translated">Valeur de nom C:\PS &gt; $sum [3]</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>a                              1 b                              2 c                              3</source>
          <target state="translated">a                              1 b                              2 c                              3</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>PS C:\ps-test&gt; $sum + $hash2</source>
          <target state="translated">PS &gt; $sum C:\ps-test + $hash2</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>1</source>
          <target state="translated">1</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>2</source>
          <target state="translated">2</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source>3</source>
          <target state="translated">3</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source>Name                           Value</source>
          <target state="translated">Valeur de nom</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source>a                              1 b                              2 c                              3 c2                             Server02</source>
          <target state="translated">a                              1 b                              2 c                              3 c2                             Server02</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source>The following example shows that you cannot add hash tables that contain the same key:</source>
          <target state="translated">L’exemple suivant montre que vous ne pouvez pas ajouter des tables de hachage qui contiennent la même clé :</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source>C:\PS&gt; $hash1 = @{a=1; b=2; c=3} C:\PS&gt; $hash2 = @{c="red"} C:\PS&gt; $hash1 + $hash2 Bad argument to operator '+': Item has already been added.</source>
          <target state="translated">C:\PS &gt; $hash1 = @{un = 1 ; b = 2 ; c = 3} C:\PS &gt; $hash2 = @{c = « red »} C:\PS &gt; $hash1 + $hash2 mauvais argument à l’opérateur « + » : élément a déjà été ajouté.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source>Key in dictionary: 'c'    Key being added: 'c'.</source>
          <target state="translated">Clé du dictionnaire : 'c' clé ajoutée : « c ».</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve">
          <source>At line:1 char:9</source>
          <target state="translated">À la ligne : 1 char : 9</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source>$hash1 + &lt;&lt;&lt;&lt;  $hash2</source>
          <target state="translated">$hash1 + &lt;&lt;&lt;&lt; $hash2</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source>Although the addition operators are very useful, use the assignment operators to add elements to hash tables and arrays.</source>
          <target state="translated">Bien que les opérateurs d’addition sont très utiles, utilisez les opérateurs d’assignation pour ajouter des éléments aux tableaux et aux tables de hachage.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source>For more information see about_assignment_operators.</source>
          <target state="translated">Pour plus d’informations, consultez about_assignment_operators.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve">
          <source>The following examples use the += assignment operator to add items to an array:</source>
          <target state="translated">Les exemples suivants utilisent l’opérateur d’assignation += pour ajouter des éléments dans un tableau :</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve">
          <source>C:\PS&gt;  $array</source>
          <target state="translated">C:\PS &gt; $array</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve">
          <source>1</source>
          <target state="translated">1</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve">
          <source>2</source>
          <target state="translated">2</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve">
          <source>3</source>
          <target state="translated">3</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve">
          <source>C:\PS&gt;  $array + "file"</source>
          <target state="translated">C:\PS &gt; $array + « fichier »</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve">
          <source>1</source>
          <target state="translated">1</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve">
          <source>2</source>
          <target state="translated">2</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve">
          <source>3</source>
          <target state="translated">3</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve">
          <source>file</source>
          <target state="translated">fichier</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve">
          <source>C:\PS&gt;  $array</source>
          <target state="translated">C:\PS &gt; $array</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve">
          <source>1</source>
          <target state="translated">1</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve">
          <source>2</source>
          <target state="translated">2</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve">
          <source>3</source>
          <target state="translated">3</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve">
          <source>C:\PS&gt;  $array += "file" C:\PS&gt;  $array</source>
          <target state="translated">C:\PS &gt; $array += « fichier » C:\PS &gt; $array</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve">
          <source>1</source>
          <target state="translated">1</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve">
          <source>2</source>
          <target state="translated">2</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve">
          <source>3</source>
          <target state="translated">3</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve">
          <source>file</source>
          <target state="translated">fichier</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve">
          <source>C:\PS&gt; $hash1</source>
          <target state="translated">C:\PS &gt; $hash1</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve">
          <source>Name                           Value</source>
          <target state="translated">Valeur de nom</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve">
          <source>a                              1 b                              2 c                              3</source>
          <target state="translated">a                              1 b                              2 c                              3</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve">
          <source>C:\PS&gt; $hash1 += @{e = 5} C:\PS&gt; $hash1</source>
          <target state="translated">C:\PS &gt; $hash1 += @{e = 5} C:\PS &gt; $hash1</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve">
          <source>Name                           Value</source>
          <target state="translated">Valeur de nom</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve">
          <source>a                              1 b                              2 e                              5 c                              3</source>
          <target state="translated">a                              1 b                              2 e                              5 c                              3</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve">
          <source>Windows PowerShell automatically selects the .NET Framework numeric type that best expresses the result without losing  precision.</source>
          <target state="translated">Windows PowerShell sélectionne automatiquement le type numérique de .NET Framework qui reflète au mieux le résultat sans perte de précision.</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve">
          <source>For example:</source>
          <target state="translated">Par exemple :</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve">
          <source>C:\PS&gt; 2 + 3.1</source>
          <target state="translated">C:\PS &gt; 2 + 3.1</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve">
          <source>5.1</source>
          <target state="translated">5.1</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve">
          <source>C:\PS&gt; (2).</source>
          <target state="translated">C:\PS &gt; (2).</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve">
          <source>GetType().FullName System.Int32 C:\PS&gt; (2 + 3.1).GetType().FullName System.Double</source>
          <target state="translated">GetType(). FullName System.Int32 C:\PS &gt; (2 + 3.1). GetType(). FullName System.Double</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve">
          <source>If the result of an operation is too large for the type, the type of the result is widened to accommodate the result, as in the following example:</source>
          <target state="translated">Si le résultat d’une opération est trop grand pour le type, le type du résultat est élargi pour recevoir le résultat, comme dans l’exemple suivant :</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve">
          <source>C:\PS&gt; (512MB).GetType().FullName System.Int32 C:\PS&gt; (512MB * 512MB).GetType().FullName System.Double</source>
          <target state="translated">C:\PS &gt; (512 Mo). GetType(). FullName System.Int32 C:\PS &gt; (512 Mo * 512 Mo). GetType(). FullName System.Double</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve">
          <source>The type of the result will not necessarily be the same as one of the operands.</source>
          <target state="translated">Le type du résultat sera pas nécessairement le même que l’un des opérandes.</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve">
          <source>In the following example, the negative value cannot be cast to an unsigned integer, and the unsigned integer is too large to be cast to Int32:</source>
          <target state="translated">Dans l’exemple suivant, la valeur négative ne peut pas être convertie en entier non signé et l’entier non signé est trop grand pour être converti en Int32 :</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve">
          <source>C:\PS&gt; ([int32]::minvalue + [uint32]::maxvalue).gettype().fullname System.Int64</source>
          <target state="translated">C:\PS &gt; ([int32] :: minvalue + [uint32] :: maxvalue) .gettype () .fullname System.Int64</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve">
          <source>In this example, Int64 can accommodate both types.</source>
          <target state="translated">Dans cet exemple, Int64 peut prendre en charge les deux types.</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve">
          <source>The System.Decimal type is an exception.</source>
          <target state="translated">Le type System.Decimal est une exception.</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve">
          <source>If either operand has the Decimal type, the result will be of the Decimal type.</source>
          <target state="translated">Si des opérandes sont de type Decimal, le résultat sera de type décimal.</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve">
          <source>If the result is too large for the Decimal type, it will not be cast to Double.</source>
          <target state="translated">Si le résultat est trop grand pour le type décimal, elle ne sera pas convertie en Double.</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve">
          <source>Instead, an error results.</source>
          <target state="translated">Au lieu de cela, une erreur se produit.</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve">
          <source>C:\PS&gt; <bpt id="p1">[</bpt>Decimal<ept id="p1">]</ept>::maxvalue</source>
          <target state="translated">C:\PS &gt; <bpt id="p1">[</bpt>décimal<ept id="p1">]</ept>:: maxvalue</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve">
          <source>79228162514264337593543950335</source>
          <target state="translated">79228162514264337593543950335</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve">
          <source>C:\PS&gt; <bpt id="p1">[</bpt>Decimal<ept id="p1">]</ept>::maxvalue + 1 Value was either too large or too small for a Decimal.</source>
          <target state="translated">C:\PS &gt; <bpt id="p1">[</bpt>décimal<ept id="p1">]</ept>:: maxvalue + 1 valeur était trop grande ou trop petite pour un nombre décimal.</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve">
          <source>At line:1 char:22</source>
          <target state="translated">À la ligne : 1 char : 22</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve">
          <source>Decimal</source>
          <target state="translated">Décimal</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve">
          <source>ARITHMETIC OPERATORS AND VARIABLES</source>
          <target state="translated">OPÉRATEURS ARITHMÉTIQUES ET VARIABLES</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve">
          <source>You can also use arithmetic operators with variables.</source>
          <target state="translated">Vous pouvez également utiliser des opérateurs arithmétiques avec des variables.</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve">
          <source>The operators act on the values of the variables.</source>
          <target state="translated">Les opérateurs agissent sur les valeurs des variables.</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve">
          <source>The following examples demonstrate the use of arithmetic operators with variables:</source>
          <target state="translated">Les exemples suivants illustrent l’utilisation des opérateurs arithmétiques avec des variables :</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve">
          <source>C:\PS&gt; $intA = 6 C:\PS&gt; $intB = 4 C:\PS&gt; $intA + $intB</source>
          <target state="translated">C:\PS &gt; $intA = 6 C:\PS &gt; $intB = 4 C:\PS &gt; $intA + $intB</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve">
          <source>10</source>
          <target state="translated">10</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve">
          <source>C:\PS&gt; $a = "Windows " C:\PS&gt; $b = "PowerShell " C:\PS&gt; $c = 2 C:\PS&gt; $a + $b + $c</source>
          <target state="translated">C:\PS &gt; $a = « Windows » C:\PS &gt; $b = « PowerShell » C:\PS &gt; $c = 2 C:\PS &gt; $un $c + $b</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve">
          <source>Windows PowerShell 2</source>
          <target state="translated">Windows PowerShell 2</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve">
          <source>ARITHMETIC OPERATORS AND COMMANDS</source>
          <target state="translated">OPÉRATEURS ARITHMÉTIQUES ET COMMANDES</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve">
          <source>Typically, you use the arithmetic operators in expressions with numbers, strings, and arrays.</source>
          <target state="translated">En règle générale, vous utilisez les opérateurs arithmétiques dans des expressions avec des nombres, des chaînes et des tableaux.</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve">
          <source>However, you can also use arithmetic operators with the objects that commands return and with the properties of those objects.</source>
          <target state="translated">Toutefois, vous pouvez également utiliser des opérateurs arithmétiques avec les objets qui retournent des commandes et les propriétés de ces objets.</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve">
          <source>The following examples show how to use the arithmetic operators in expressions with Windows PowerShell commands:</source>
          <target state="translated">Les exemples suivants montrent comment utiliser les opérateurs arithmétiques dans des expressions avec les commandes Windows PowerShell :</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve">
          <source>C:\PS&gt; get-date Wednesday, January 02, 2008 1:28:42 PM</source>
          <target state="translated">C:\PS &gt; get-date mercredi 02 janvier 2008 1:28:42 PM</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve">
          <source>C:\PS&gt; $day = new-timespan -day 1 C:\PS&gt; get-date + $day Thursday, January 03, 2008 1:34:52 PM</source>
          <target state="translated">C:\PS &gt; $day = nouveau timespan-1er jour C:\PS &gt; get-date + $day jeudi 03 janvier 2008 à 13:34:52</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve">
          <source>C:\PS&gt; get-process | where {($_.ws * 2) -gt 50mb} Handles  NPM(K)    PM(K)      WS(K) VM(M)   CPU(s)     Id ProcessName</source>
          <target state="translated">C:\PS &gt; get-process | où {($_.ws * 2) - gt 50 Mo} gère npm (k) PM (k) WS (k) VM (m) Id d’UC ProcessName</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve">
          <source>1896      39    50968      30620   264 1,572.55   1104 explorer</source>
          <target state="translated">1896 39 50968 30620 264 1,572.55 1104 explorer</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve">
          <source>12802      78   188468      81032   753 3,676.39   5676 OUTLOOK</source>
          <target state="translated">12802 78 188468 81032 753 3,676.39 5676 OUTLOOK</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve">
          <source>660       9    36168      26956   143    12.20    988 PowerShell 561      14     6592      28144   110 1,010.09    496 services 3476      80    34664      26092   234 ...45.69    876 svchost</source>
          <target state="translated">660 9 36168 26956 143 12.20 988 PowerShell 561 14 6592 28144 110 1,010.09 496 services 3476 80 34664 26092 234... 45.69 876 svchost</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve">
          <source>967      30    58804      59496   416   930.97   2508 WINWORD</source>
          <target state="translated">967 30 58804 59496 416 930.97 2508 WINWORD</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve">
          <source>EXAMPLES</source>
          <target state="translated">EXEMPLES</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve">
          <source>The following examples show how to use the arithmetic operators in Windows PowerShell:</source>
          <target state="translated">Les exemples suivants montrent comment utiliser les opérateurs arithmétiques dans Windows PowerShell :</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve">
          <source>C:\PS&gt; 1 + 1</source>
          <target state="translated">C:\PS &gt; 1 + 1</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve">
          <source>2</source>
          <target state="translated">2</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve">
          <source>C:\PS&gt; 1 - 1</source>
          <target state="translated">C:\PS &gt; 1-1</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve">
          <source>0</source>
          <target state="translated">0</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve">
          <source>C:\PS&gt; -(6 + 3)</source>
          <target state="translated">C:\PS &gt;-(6 + 3)</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve">
          <source>-9</source>
          <target state="translated">-9</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve">
          <source>C:\PS&gt; 6 * 2</source>
          <target state="translated">C:\PS &gt; 6 * 2</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve">
          <source>12</source>
          <target state="translated">12</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve">
          <source>C:\PS&gt; 7 / 2</source>
          <target state="translated">C:\PS &gt; 7 / 2</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve">
          <source>3.5</source>
          <target state="translated">3.5</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve">
          <source>C:\PS&gt; 7 % 2</source>
          <target state="translated">C:\PS &gt; 7 % 2</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve">
          <source>1</source>
          <target state="translated">1</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve">
          <source>C:\PS&gt; w * 3 www</source>
          <target state="translated">C:\PS &gt; w * www 3</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve">
          <source>C:\PS&gt; 3 * "w" Cannot convert value "w" to type "System.Int32".</source>
          <target state="translated">C:\PS &gt; 3 * « w » ne peut pas convertir la valeur « w » en type « System.Int32 ».</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve">
          <source>Error: "Input string was not in a correct format."</source>
          <target state="translated">Erreur : « chaîne d’entrée n’est pas un format correct. »</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve">
          <source>At line:1 char:4</source>
          <target state="translated">Sur la ligne : 1 char : 4</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve">
          <source>3 * &lt;&lt;&lt;&lt; "w"</source>
          <target state="translated">3 * &lt;&lt;&lt;&lt; « w »</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve">
          <source>PS C:\ps-test&gt; "Windows" + " " + "PowerShell" Windows PowerShell</source>
          <target state="translated">PS C:\ps-test &gt; « Windows » + "" + « PowerShell » Windows PowerShell</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve">
          <source>PS C:\ps-test&gt; $a = "Windows" + " " + "PowerShell" PS C:\ps-test&gt; $a Windows PowerShell</source>
          <target state="translated">PS C:\ps-test &gt; $a = « Windows » + » « + « PowerShell « PS C:\ps-test &gt; $un Windows PowerShell</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve">
          <source>C:\PS&gt; $a[0]</source>
          <target state="translated">C:\PS &gt; $[0]</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve">
          <source>W</source>
          <target state="translated">W</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve">
          <source>C:\PS&gt; $a = "TestFiles.txt" C:\PS&gt; $b = "C:\Logs<ph id="ph1">\"
</ph>C:\PS&gt; $b + $a C:\Logs\TestFiles.txt</source>
          <target state="translated">C:\PS &gt; $a = « TestFiles.txt » C:\PS &gt; $b = « C:\Logs<ph id="ph1">\"
</ph>C:\PS &gt; $b + $a C:\Logs\TestFiles.txt</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve">
          <source>C:\PS&gt; $a = 1,2,3 C:\PS&gt; $a + 4</source>
          <target state="translated">C:\PS &gt; $un = 1,2,3 C:\PS &gt; $un + 4</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve">
          <source>1</source>
          <target state="translated">1</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve">
          <source>2</source>
          <target state="translated">2</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve">
          <source>3</source>
          <target state="translated">3</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve">
          <source>4</source>
          <target state="translated">4</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve">
          <source>C:\PS&gt; $servers = @{0 = "LocalHost"; 1 = "Server01"; 2 = "Server02"} C:\PS&gt; $servers + @{3 = "Server03"} Name Value</source>
          <target state="translated">C:\PS &gt; $servers = @{0 = « LocalHost » ; 1 = « Server01 » ; 2 = « Server02 »} C:\PS &gt; $servers + @{3 = « Server03 »} nom de valeur</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve">
          <source>3 Server03 2 Server02 1 Server01 0 LocalHost</source>
          <target state="translated">Server03 3 Server02 2 1 Server01 LocalHost 0</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve">
          <source>C:\PS&gt; $servers Name Value</source>
          <target state="translated">Valeur de nom C:\PS &gt; $servers</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve">
          <source>2 Server02 1 Server01 0 LocalHost</source>
          <target state="translated">2 Server02 1 Server01 LocalHost 0</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve">
          <source>C:\PS&gt; $servers += @{3 = "Server03"} #Use assignment operator C:\PS&gt; $servers Name Value</source>
          <target state="translated">C:\PS &gt; $servers += @{3 = « Server03 »} #Use C:\PS &gt; $servers nom valeur l’opérateur d’assignation</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve">
          <source>3 Server03 2 Server02 1 Server01 0 LocalHost</source>
          <target state="translated">Server03 3 Server02 2 1 Server01 LocalHost 0</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve">
          <source>BITWISE ARITHMETIC IN WINDOWS POWERSHELL</source>
          <target state="translated">ARITHMÉTIQUE AU NIVEAU DU BIT DANS WINDOWS POWERSHELL</target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve">
          <source>Windows PowerShell supports the -shl (shift-left) and -shr (shift-right) operators for bitwise arithmetic.</source>
          <target state="translated">Windows PowerShell prend en charge les - shl (décalage vers la gauche) et les opérateurs de - shr (décalage vers la droite) pour l’arithmétique au niveau du bit.</target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve">
          <source>These operators are introduced in Windows PowerShell 3.0.</source>
          <target state="translated">Ces opérateurs sont introduits dans Windows PowerShell 3.0.</target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve">
          <source>In a bitwise shift-left operation, all bits are moved "n" places to the left, where "n" is the value of the right operand.</source>
          <target state="translated">Dans une opération de décalage vers la gauche au niveau du bit, tous les bits sont déplacés « n » place vers la gauche, où « n » est la valeur de l’opérande droit.</target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve">
          <source>A zero is inserted in the ones place.</source>
          <target state="translated">Insère un zéro dans les placer.</target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve">
          <source>When the left operand is an Integer (32-bit) value, the lower 5 bits of the right operand determine how many bits of the left operand are shifted.</source>
          <target state="translated">Lorsque l’opérande de gauche est un nombre entier (32 bits), les 5 bits de poids faible de l’opérande droit déterminent le nombre de bits de l’opérande de gauche est déplacé.</target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve">
          <source>When the left operand is a Long (64-bit) value, the lower 6 bits of the right operand determine how many bits of the left operand are shifted.</source>
          <target state="translated">Lorsque l’opérande de gauche est une valeur de type Long (64 bits), les 6 bits de poids faible de l’opérande droit déterminent le nombre de bits de l’opérande de gauche est déplacé.</target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve">
          <source>PS C:&gt; 21 -shl 1</source>
          <target state="translated">PS C: &gt; 21 - shl 1</target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve">
          <source>42</source>
          <target state="translated">42</target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve">
          <source>00010101  (21)</source>
          <target state="translated">00010101  (21)</target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve">
          <source>00101010  (42)</source>
          <target state="translated">00101010  (42)</target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve">
          <source>PS C:&gt; 21 -shl 2</source>
          <target state="translated">PS C: &gt; 21 - shl 2</target>       </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve">
          <source>84</source>
          <target state="translated">84</target>       </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve">
          <source>00010101  (21)</source>
          <target state="translated">00010101  (21)</target>       </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve">
          <source>00101010  (42)</source>
          <target state="translated">00101010  (42)</target>       </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve">
          <source>01010100  (84)</source>
          <target state="translated">01010100  (84)</target>       </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve">
          <source>In a bitwise shift-right operation, all bits are moved "n" places to the right, where "n" is specified by the right operand.</source>
          <target state="translated">Dans une opération de décalage vers la droite au niveau du bit, tous les bits sont déplacés « n » place vers la droite, où « n » est spécifié par l’opérande de droite.</target>       </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve">
          <source>The shift-right operator (-shr) inserts a zero in the left-most place when shifting a positive or unsigned value to the right.</source>
          <target state="translated">L’opérateur de décalage vers la droite (-shr) insère un zéro dans l’emplacement le plus à gauche lors du déplacement d’une valeur positive ou non signée à droite.</target>       </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve">
          <source>When the left operand is an Integer (32-bit) value, the lower 5 bits of the right operand determine how many bits of the left operand are shifted.</source>
          <target state="translated">Lorsque l’opérande de gauche est un nombre entier (32 bits), les 5 bits de poids faible de l’opérande droit déterminent le nombre de bits de l’opérande de gauche est déplacé.</target>       </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve">
          <source>When the left operand is a Long (64-bit) value, the lower 6 bits of the right operand determine how many bits of the left operand are shifted.</source>
          <target state="translated">Lorsque l’opérande de gauche est une valeur de type Long (64 bits), les 6 bits de poids faible de l’opérande droit déterminent le nombre de bits de l’opérande de gauche est déplacé.</target>       </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve">
          <source>PS C:&gt; 21 -shr 1</source>
          <target state="translated">PS C: &gt; 21 - shr 1</target>       </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve">
          <source>10</source>
          <target state="translated">10</target>       </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve">
          <source>00010101  (21)</source>
          <target state="translated">00010101  (21)</target>       </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve">
          <source>00001010  (10)</source>
          <target state="translated">00001010  (10)</target>       </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve">
          <source>PS C:&gt; 21 -shr 2</source>
          <target state="translated">PS C: &gt; 21 - shr 2</target>       </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve">
          <source>5</source>
          <target state="translated">5</target>       </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve">
          <source>00010101  (21)</source>
          <target state="translated">00010101  (21)</target>       </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve">
          <source>00001010  (10)</source>
          <target state="translated">00001010  (10)</target>       </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve">
          <source>00000101  ( 5)</source>
          <target state="translated">00000101  ( 5)</target>       </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve">
          <source>SEE ALSO</source>
          <target state="translated">VOIR AUSSI</target>       </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve">
          <source>about_arrays about_assignment_operators about_comparison_operators about_hash_tables about_operators about_variables Get-Date New-TimeSpan</source>
          <target state="translated">about_arrays about_assignment_operators about_comparison_operators about_hash_tables about_operators about_variables Get-Date New-TimeSpan</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>