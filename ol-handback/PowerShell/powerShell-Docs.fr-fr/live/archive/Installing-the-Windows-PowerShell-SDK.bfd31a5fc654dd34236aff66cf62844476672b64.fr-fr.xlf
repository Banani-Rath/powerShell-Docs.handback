<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="fr-fr">
    <header>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions" />
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">scripting\setup\Installing-the-Windows-PowerShell-SDK.md</xliffext:olfilepath>
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">9ba9ef3efe6a8ae85d96b59db53ad3a16bf57699</xliffext:olfilehash>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-3d52e17" tool-company="Microsoft" />
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Installing the Windows PowerShell SDK</source>
          <target state="translated">Installation du SDK Windows PowerShell</target>         
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Installing the Windows PowerShell SDK</source>
          <target state="translated">Installation du SDK Windows PowerShell</target>         
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>The following topic describes how to install the PowerShell SDK on different versions of Windows.</source>
          <target state="translated">La rubrique suivante explique comment installer le SDK PowerShell sur différentes versions de Windows.</target>         
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Installing Windows PowerShell 3.0 SDK for Windows 8 and Windows Server 2012<ph id="ph1">&lt;/title&gt;
    &lt;content&gt;
      &lt;para&gt;</ph>Windows PowerShell 3.0 is automatically installed with Windows 8 and Windows Server 2012.</source>
          <target state="translated">Installation du SDK Windows PowerShell 3.0 pour Windows 8 et Windows Server 2012<ph id="ph1">&lt;/title&gt;
    &lt;content&gt;
      &lt;para&gt;</ph>Windows PowerShell 3.0 est installé automatiquement avec Windows 8 et Windows Server 2012.</target>         
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>In addition, you can download and install the reference assemblies for Windows PowerShell 3.0 as part of the Windows 8 SDK.</source>
          <target state="translated">De plus, vous pouvez télécharger et installer les assemblys de référence pour Windows PowerShell 3.0 avec le SDK Windows 8.</target>         
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>These assemblies allow you to write cmdlets, providers, and host programs for Windows PowerShell 3.0.</source>
          <target state="translated">Ces assemblys permettent d’écrire des applets de commande, des fournisseurs et des programmes hôtes pour Windows PowerShell 3.0.</target>         
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>When you install the Windows SDK for Windows 8, the Windows PowerShell assemblies are automatically installed in the reference assembly folder, in \Program Files (x86)\Reference Assemblies\Microsoft\WindowsPowerShell\3.0.</source>
          <target state="translated">Quand vous installez le SDK Windows pour Windows 8, les assemblys Windows PowerShell sont automatiquement installés dans le dossier d’assemblys de référence, dans \Program Files (x86)\Reference Assemblies\Microsoft\WindowsPowerShell\3.0.</target>         
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>For more information, see the <ph id="ph1">&lt;externalLink&gt;&lt;linkText&gt;</ph>Windows 8 SDK download site<ph id="ph2">&lt;/linkText&gt;&lt;linkUri&gt;</ph>http://msdn.microsoft.com/windows/hardware/hh852363.aspx<ph id="ph3">&lt;/linkUri&gt;&lt;/externalLink&gt;</ph>.</source>
          <target state="translated">Pour plus d’informations, consultez le <ph id="ph1">&lt;externalLink&gt;&lt;linkText&gt;</ph>site de téléchargement du SDK Windows 8<ph id="ph2">&lt;/linkText&gt;&lt;linkUri&gt;</ph>http://msdn.microsoft.com/windows/hardware/hh852363.aspx<ph id="ph3">&lt;/linkUri&gt;&lt;/externalLink&gt;</ph>.</target>         
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Windows PowerShell code samples are also available on the Development Center.</source>
          <target state="translated">Des exemples de code Windows PowerShell sont aussi disponibles dans le Centre de développement.</target>         
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>For more information, see the Desktop code sample page on the <ph id="ph1">&lt;externalLink&gt;&lt;linkText&gt;</ph>Dev center site<ph id="ph2">&lt;/linkText&gt;&lt;linkUri&gt;</ph>http://code.msdn.microsoft.com/windowsdesktop/<ph id="ph3">&lt;/linkUri&gt;&lt;/externalLink&gt;</ph>.</source>
          <target state="translated">Pour plus d’informations, consultez la page d’exemples de code Windows Desktop sur le <ph id="ph1">&lt;externalLink&gt;&lt;linkText&gt;</ph>site Centre de développement<ph id="ph2">&lt;/linkText&gt;&lt;linkUri&gt;</ph>http://code.msdn.microsoft.com/windowsdesktop/<ph id="ph3">&lt;/linkUri&gt;&lt;/externalLink&gt;</ph>.</target>         
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>In addition, Windows PowerShell 3.0 is backwards-compatible with the Windows PowerShell 2.0 SDK, which includes a number of code samples.</source>
          <target state="translated">Par ailleurs, Windows PowerShell 3.0 est rétrocompatible avec le SDK Windows PowerShell 2.0 qui comprend un certain nombre d’exemples de code.</target>         
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>For more information on how to download the Windows PowerShell 2.0 SDK, see below.</source>
          <target state="translated">Pour plus d’informations sur la façon de télécharger le SDK Windows PowerShell 2.0, voir ci-dessous.</target>         
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>(Note that while the 2.0 code samples are compatible with Windows 8 and Windows PowerShell 3.0, you cannot install Windows PowerShell 2.0 on a Windows 8 platform.)</source>
          <target state="translated">(Même si les exemples de code 2.0 sont compatibles avec Windows 8 et Windows PowerShell 3.0, notez que vous ne pouvez pas installer Windows PowerShell 2.0 sur une plateforme Windows 8.)</target>         
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Installing Windows PowerShell 3.0 SDK for Windows 7 and Windows Server 2008 R2<ph id="ph1">&lt;/title&gt;
    &lt;content&gt;
      &lt;para&gt;</ph>Windows 7 and Windows Server 2008 R2 automatically have PowerShell 2.0 installed.</source>
          <target state="translated">Installation du SDK Windows PowerShell 3.0 pour Windows 7 et Windows Server 2008 R2<ph id="ph1">&lt;/title&gt;
    &lt;content&gt;
      &lt;para&gt;</ph>PowerShell 2.0 est automatiquement installé sur Windows 7 et Windows PowerShell 2008 R2.</target>         
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>In addition, you can install PowerShell 3.0 on these systems.</source>
          <target state="translated">Par ailleurs, vous pouvez installer PowerShell 3.0 sur ces systèmes.</target>         
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>(For more information, see <ph id="ph1">&lt;link xlink:href="6fbb0409-5a54-48ec-95e6-7f8b7d8c4969"&gt;</ph>Installing Windows PowerShell<ph id="ph2">&lt;/link&gt;</ph>.).</source>
          <target state="translated">(Pour plus d’informations, consultez <ph id="ph1">&lt;link xlink:href="6fbb0409-5a54-48ec-95e6-7f8b7d8c4969"&gt;</ph>Installing Windows PowerShell<ph id="ph2">&lt;/link&gt;</ph> (Installation de Windows PowerShell.).</target>         
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>As described above, you can also install the Windows 8 SDK on Windows 7 and Windows Server 2008 R2.</source>
          <target state="translated">Comme indiqué plus haut, vous pouvez aussi installer le SDK Windows 8 sur Windows 7 et Windows Server 2008 R2.</target>         
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Installing Windows PowerShell 2.0 SDK for Windows 7, Vista, XP, Server 2003, and Server 2008<ph id="ph1">&lt;/title&gt;
    &lt;content&gt;
      &lt;para&gt;</ph>The <ph id="ph2">&lt;token&gt;</ph>mshshort<ph id="ph3">&lt;/token&gt;</ph> 2.0 SDK provides the reference assemblies needed to write cmdlets, providers, and hosting applications, and it provides C# sample code that can be used as the starting point when you begin writing code.</source>
          <target state="translated">Installation du SDK Windows PowerShell 2.0 pour Windows 7, Vista, XP, Server 2003 et Server 2008<ph id="ph1">&lt;/title&gt;
    &lt;content&gt;
      &lt;para&gt;</ph>Le SDK <ph id="ph2">&lt;token&gt;</ph>mshshort<ph id="ph3">&lt;/token&gt;</ph> 2.0 fournit les assemblys de référence nécessaires à l’écriture d’applets de commande, de fournisseurs et d’applications d’hébergement. Il propose aussi un exemple de code C# qui peut vous servir de point de départ pour commencer à écrire du code.</target>         
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>To install this SDK, see <ph id="ph1">&lt;externalLink&gt;&lt;linkText&gt;</ph>Windows PowerShell 2.0 SDK<ph id="ph2">&lt;/linkText&gt;&lt;linkUri&gt;</ph>http://go.microsoft.com/fwlink/?LinkId=184611<ph id="ph3">&lt;/linkUri&gt;&lt;/externalLink&gt;</ph>.</source>
          <target state="translated">Pour installer ce SDK, consultez <ph id="ph1">&lt;externalLink&gt;&lt;linkText&gt;</ph>Windows PowerShell 2.0 SDK<ph id="ph2">&lt;/linkText&gt;&lt;linkUri&gt;</ph>http://go.microsoft.com/fwlink/?LinkId=184611<ph id="ph3">&lt;/linkUri&gt;&lt;/externalLink&gt;</ph>.</target>         
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Reference assemblies<ph id="ph1">&lt;/title&gt;
        &lt;content&gt;
          &lt;para&gt;</ph>Reference assemblies are installed in the following location by default: <ph id="ph2">&lt;codeInline&gt;</ph>c:\Program Files\Reference Assemblies\Microsoft\WindowsPowerShell\V1.0<ph id="ph3">&lt;/codeInline&gt;</ph>.<ph id="ph4">&lt;/para&gt;
          &lt;alert class="note"&gt;
            &lt;para&gt;</ph>Code that is compiled against the Windows PowerShell 2.0 assemblies cannot be loaded into Windows PowerShell 1.0 installations.</source>
          <target state="translated">Assemblys de référence<ph id="ph1">&lt;/title&gt;
        &lt;content&gt;
          &lt;para&gt;</ph>Par défaut, les assemblys de référence sont installés à l’emplacement suivant : <ph id="ph2">&lt;codeInline&gt;</ph>c:\Program Files\Reference Assemblies\Microsoft\WindowsPowerShell\V1.0<ph id="ph3">&lt;/codeInline&gt;</ph>.<ph id="ph4">&lt;/para&gt;
          &lt;alert class="note"&gt;
            &lt;para&gt;</ph>Le code compilé sur les assemblys Windows PowerShell 2.0 ne peut pas être chargé dans les installations de Windows PowerShell 1.0.</target>         
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>However, code that is compiled against the Windows PowerShell 1.0 assemblies can be loaded into Windows PowerShell 2.0 installations.</source>
          <target state="translated">En revanche, le code compilé sur les assemblys Windows PowerShell 1.0 peut être chargé dans les installations de Windows PowerShell 2.0.</target>         
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Samples<ph id="ph1">&lt;/title&gt;
        &lt;content&gt;
          &lt;para&gt;</ph>Code samples are installed in the following location by default: <ph id="ph2">&lt;codeInline&gt;</ph>C:\Program Files\Microsoft SDKs\Windows\v7.0\Samples\sysmgmt\WindowsPowerShell\<ph id="ph3">&lt;/codeInline&gt;</ph>.<ph id="ph4">&lt;/para&gt;
          &lt;para&gt;</ph>The following sections provide a brief description of what each sample does.</source>
          <target state="translated">Exemples<ph id="ph1">&lt;/title&gt;
        &lt;content&gt;
          &lt;para&gt;</ph>Par défaut, des exemples de code sont installés à l’emplacement suivant : <ph id="ph2">&lt;codeInline&gt;</ph>C:\Program Files\Microsoft SDKs\Windows\v7.0\Samples\sysmgmt\WindowsPowerShell\<ph id="ph3">&lt;/codeInline&gt;</ph>.<ph id="ph4">&lt;/para&gt;
          &lt;para&gt;</ph>Les sections suivantes proposent une brève description de la fonction de chaque exemple.</target>         
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Cmdlet samples<ph id="ph1">&lt;/title&gt;
            &lt;content&gt;
              &lt;definitionTable&gt;
                &lt;definedTerm&gt;</ph>GetProcessSample01<ph id="ph2">&lt;/definedTerm&gt;
                &lt;definition&gt;
                  &lt;para&gt;</ph>Shows how to write a simple cmdlet that gets all the processes on the local computer.<ph id="ph3">&lt;/para&gt;
                &lt;/definition&gt;
                &lt;definedTerm&gt;</ph>GetProcessSample02<ph id="ph4">&lt;/definedTerm&gt;
                &lt;definition&gt;
                  &lt;para&gt;</ph>Shows how to add parameters to the cmdlet.</source>
          <target state="translated">Exemples d’applets de commande<ph id="ph1">&lt;/title&gt;
            &lt;content&gt;
              &lt;definitionTable&gt;
                &lt;definedTerm&gt;</ph>GetProcessSample01<ph id="ph2">&lt;/definedTerm&gt;
                &lt;definition&gt;
                  &lt;para&gt;</ph>Montre comment écrire une applet de commande simple qui obtient tous les processus sur l’ordinateur local.<ph id="ph3">&lt;/para&gt;
                &lt;/definition&gt;
                &lt;definedTerm&gt;</ph>GetProcessSample02<ph id="ph4">&lt;/definedTerm&gt;
                &lt;definition&gt;
                  &lt;para&gt;</ph>Montre comment ajouter des paramètres à l’applet de commande.</target>         
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>The cmdlet takes one or more process names and returns the matching processes.<ph id="ph1">&lt;/para&gt;
                &lt;/definition&gt;
                &lt;definedTerm&gt;</ph>GetProcessSample03<ph id="ph2">&lt;/definedTerm&gt;
                &lt;definition&gt;
                  &lt;para&gt;</ph>Shows how to add parameters that accept input from the pipeline.<ph id="ph3">&lt;/para&gt;
                &lt;/definition&gt;
                &lt;definedTerm&gt;</ph>GetProcessSample04<ph id="ph4">&lt;/definedTerm&gt;
                &lt;definition&gt;
                  &lt;para&gt;</ph>Shows how to handle nonterminating errors.<ph id="ph5">&lt;/para&gt;
                &lt;/definition&gt;
                &lt;definedTerm&gt;</ph>GetProcessSample05<ph id="ph6">&lt;/definedTerm&gt;
                &lt;definition&gt;
                  &lt;para&gt;</ph>Shows how to display a list of specified processes.<ph id="ph7">&lt;/para&gt;
                &lt;/definition&gt;
                &lt;definedTerm&gt;</ph>SelectObject<ph id="ph8">&lt;/definedTerm&gt;
                &lt;definition&gt;
                  &lt;para&gt;</ph>Shows how to write a filter to select only certain objects.</source>
          <target state="translated">L’applet de commande prend un ou plusieurs noms de processus et retourne les processus correspondants.<ph id="ph1">&lt;/para&gt;
                &lt;/definition&gt;
                &lt;definedTerm&gt;</ph>GetProcessSample03<ph id="ph2">&lt;/definedTerm&gt;
                &lt;definition&gt;
                  &lt;para&gt;</ph>Montre comment ajouter des paramètres qui acceptent les entrées du pipeline.<ph id="ph3">&lt;/para&gt;
                &lt;/definition&gt;
                &lt;definedTerm&gt;</ph>GetProcessSample04<ph id="ph4">&lt;/definedTerm&gt;
                &lt;definition&gt;
                  &lt;para&gt;</ph>Montre comment gérer les erreurs sans fin d’exécution.<ph id="ph5">&lt;/para&gt;
                &lt;/definition&gt;
                &lt;definedTerm&gt;</ph>GetProcessSample05<ph id="ph6">&lt;/definedTerm&gt;
                &lt;definition&gt;
                  &lt;para&gt;</ph>Montre comment afficher une liste de processus spécifiés.<ph id="ph7">&lt;/para&gt;
                &lt;/definition&gt;
                &lt;definedTerm&gt;</ph>SelectObject<ph id="ph8">&lt;/definedTerm&gt;
                &lt;definition&gt;
                  &lt;para&gt;</ph>Montre comment écrire un filtre pour sélectionner uniquement certains objets.</target>         
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>SelectString<ph id="ph1">&lt;/definedTerm&gt;
                &lt;definition&gt;
                  &lt;para&gt;</ph>Shows how to search files for specified patterns.<ph id="ph2">&lt;/para&gt;
                &lt;/definition&gt;
                &lt;definedTerm&gt;</ph>StopProcessSample01<ph id="ph3">&lt;/definedTerm&gt;
                &lt;definition&gt;
                  &lt;para&gt;</ph>Shows how to implement a <ph id="ph4">&lt;parameterReference&gt;</ph>PassThru<ph id="ph5">&lt;/parameterReference&gt;</ph> parameter, and how to request user feedback by calls to the <ph id="ph6">&lt;codeEntityReference&gt;</ph>Overload:System.Management.Automation.Cmdlet.ShouldProcess<ph id="ph7">&lt;/codeEntityReference&gt;</ph> and <ph id="ph8">&lt;codeEntityReference&gt;</ph>Overload:System.Management.Automation.Cmdlet.ShouldContinue<ph id="ph9">&lt;/codeEntityReference&gt;</ph> methods.</source>
          <target state="translated">SelectString<ph id="ph1">&lt;/definedTerm&gt;
                &lt;definition&gt;
                  &lt;para&gt;</ph>Montre comment rechercher des modèles spécifiés dans des fichiers.<ph id="ph2">&lt;/para&gt;
                &lt;/definition&gt;
                &lt;definedTerm&gt;</ph>StopProcessSample01<ph id="ph3">&lt;/definedTerm&gt;
                &lt;definition&gt;
                  &lt;para&gt;</ph>Montre comment implémenter un paramètre <ph id="ph4">&lt;parameterReference&gt;</ph>PassThru<ph id="ph5">&lt;/parameterReference&gt;</ph> et comment demander des commentaires utilisateur en appelant les méthodes <ph id="ph6">&lt;codeEntityReference&gt;</ph>Overload:System.Management.Automation.Cmdlet.ShouldProcess<ph id="ph7">&lt;/codeEntityReference&gt;</ph> et <ph id="ph8">&lt;codeEntityReference&gt;</ph>Overload:System.Management.Automation.Cmdlet.ShouldContinue<ph id="ph9">&lt;/codeEntityReference&gt;</ph>.</target>         
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Users specify the <ph id="ph1">&lt;parameterReference&gt;</ph>PassThru<ph id="ph2">&lt;/parameterReference&gt;</ph> parameter when they want to force the cmdlet to return an object, <ph id="ph3">&lt;/para&gt;
                &lt;/definition&gt;
                &lt;definedTerm&gt;</ph>StopProcessSample02<ph id="ph4">&lt;/definedTerm&gt;
                &lt;definition&gt;
                  &lt;para&gt;</ph>Shows how to stop a specific process.<ph id="ph5">&lt;/para&gt;
                &lt;/definition&gt;
                &lt;definedTerm&gt;</ph>StopProcessSample03<ph id="ph6">&lt;/definedTerm&gt;
                &lt;definition&gt;
                  &lt;para&gt;</ph>Shows how to declare aliases for parameters and how to support wildcards.<ph id="ph7">&lt;/para&gt;
                &lt;/definition&gt;
                &lt;definedTerm&gt;</ph>StopProcessSample04<ph id="ph8">&lt;/definedTerm&gt;
                &lt;definition&gt;
                  &lt;para&gt;</ph>Shows how to declare parameter sets, the object that the cmdlet takes as input, and how to specify the default parameter set to use.</source>
          <target state="translated">Les utilisateurs spécifient le paramètre <ph id="ph1">&lt;parameterReference&gt;</ph>PassThru<ph id="ph2">&lt;/parameterReference&gt;</ph> quand ils veulent forcer l’applet de commande à retourner un objet, <ph id="ph3">&lt;/para&gt;
                &lt;/definition&gt;
                &lt;definedTerm&gt;</ph>StopProcessSample02<ph id="ph4">&lt;/definedTerm&gt;
                &lt;definition&gt;
                  &lt;para&gt;</ph>Montre comment arrêter un processus spécifique.<ph id="ph5">&lt;/para&gt;
                &lt;/definition&gt;
                &lt;definedTerm&gt;</ph>StopProcessSample03<ph id="ph6">&lt;/definedTerm&gt;
                &lt;definition&gt;
                  &lt;para&gt;</ph>Montre comment déclarer des alias de paramètres et comment prendre en charge les caractères génériques.<ph id="ph7">&lt;/para&gt;
                &lt;/definition&gt;
                &lt;definedTerm&gt;</ph>StopProcessSample04<ph id="ph8">&lt;/definedTerm&gt;
                &lt;definition&gt;
                  &lt;para&gt;</ph>Montre comment déclarer des jeux de paramètres, l’objet que prend l’applet de commande comme entrée et comment spécifier le jeu de paramètres à utiliser par défaut.</target>         
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Remoting samples<ph id="ph1">&lt;/title&gt;
            &lt;content&gt;
              &lt;definitionTable&gt;
                &lt;definedTerm&gt;</ph>RemoteRunspace01<ph id="ph2">&lt;/definedTerm&gt;
                &lt;definition&gt;
                  &lt;para&gt;</ph>Shows how to create a remote runspace that is used to establish a remote connection.<ph id="ph3">&lt;/para&gt;
                &lt;/definition&gt;
                &lt;definedTerm&gt;</ph>RemoteRunspacePool01<ph id="ph4">&lt;/definedTerm&gt;
                &lt;definition&gt;
                  &lt;para&gt;</ph>Shows how to construct a remote runspace pool and how to run multiple commands concurrently by using this pool.<ph id="ph5">&lt;/para&gt;
                &lt;/definition&gt;
                &lt;definedTerm&gt;</ph>Serialization01<ph id="ph6">&lt;/definedTerm&gt;
                &lt;definition&gt;
                  &lt;para&gt;</ph>Shows how to look at an existing .NET class and make sure that information from selected public properties of this class is preserved across serialization/deserialization.<ph id="ph7">&lt;/para&gt;
                &lt;/definition&gt;
                &lt;definedTerm&gt;</ph>Serialization02<ph id="ph8">&lt;/definedTerm&gt;
                &lt;definition&gt;
                  &lt;para&gt;</ph>Shows how to look at an existing .NET class and make sure that information from instance of this class is preserved across serialization/deserialization when the information is not available in public properties of the class.<ph id="ph9">&lt;/para&gt;
                &lt;/definition&gt;
                &lt;definedTerm&gt;</ph>Serialization03<ph id="ph10">&lt;/definedTerm&gt;
                &lt;definition&gt;
                  &lt;para&gt;</ph>Shows how to look at an existing .NET class and make sure that instances of this class and of derived classes are deserialized (rehydrated) into live .NET objects.</source>
          <target state="translated">Exemples de communication à distance<ph id="ph1">&lt;/title&gt;
            &lt;content&gt;
              &lt;definitionTable&gt;
                &lt;definedTerm&gt;</ph>RemoteRunspace01<ph id="ph2">&lt;/definedTerm&gt;
                &lt;definition&gt;
                  &lt;para&gt;</ph>Montre comment créer une instance d’exécution à distance servant à établir une connexion à distance.<ph id="ph3">&lt;/para&gt;
                &lt;/definition&gt;
                &lt;definedTerm&gt;</ph>RemoteRunspacePool01<ph id="ph4">&lt;/definedTerm&gt;
                &lt;definition&gt;
                  &lt;para&gt;</ph>Montre comment construire un pool d’instances d’exécution à distance et comment exécuter plusieurs commandes simultanément en utilisant ce pool.<ph id="ph5">&lt;/para&gt;
                &lt;/definition&gt;
                &lt;definedTerm&gt;</ph>Serialization01<ph id="ph6">&lt;/definedTerm&gt;
                &lt;definition&gt;
                  &lt;para&gt;</ph>Montre comment examiner une classe .NET existante et vérifier que les informations tirées des propriétés publiques sélectionnées de cette classe sont conservées à l’issue de la sérialisation/désérialisation.<ph id="ph7">&lt;/para&gt;
                &lt;/definition&gt;
                &lt;definedTerm&gt;</ph>Serialization02<ph id="ph8">&lt;/definedTerm&gt;
                &lt;definition&gt;
                  &lt;para&gt;</ph>Montre comment examiner une classe .NET existante et vérifier que les informations tirées de l’instance de cette classe sont conservées à l’issue de la sérialisation/désérialisation quand les informations ne sont pas disponibles dans les propriétés publiques de la classe.<ph id="ph9">&lt;/para&gt;
                &lt;/definition&gt;
                &lt;definedTerm&gt;</ph>Serialization03<ph id="ph10">&lt;/definedTerm&gt;
                &lt;definition&gt;
                  &lt;para&gt;</ph>Montre comment examiner une classe .NET existante et vérifier que les instances de cette classe et des classes dérivées sont désérialisées (réactivées) en objets .NET dynamiques.</target>         
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Event samples<ph id="ph1">&lt;/title&gt;
            &lt;content&gt;
              &lt;definitionTable&gt;
                &lt;definedTerm&gt;</ph>Event01<ph id="ph2">&lt;/definedTerm&gt;
                &lt;definition&gt;
                  &lt;para&gt;</ph>Shows how to create a cmdlet for event registration by deriving from ObjectEventRegistrationBase.<ph id="ph3">&lt;/para&gt;
                &lt;/definition&gt;
                &lt;definedTerm&gt;</ph>Event02<ph id="ph4">&lt;/definedTerm&gt;
                &lt;definition&gt;
                  &lt;para&gt;</ph>Shows how to shows how to receive notifications of <ph id="ph5">&lt;token&gt;</ph>mshshort<ph id="ph6">&lt;/token&gt;</ph> events that are generated on remote computers.</source>
          <target state="translated">Exemples d’événements<ph id="ph1">&lt;/title&gt;
            &lt;content&gt;
              &lt;definitionTable&gt;
                &lt;definedTerm&gt;</ph>Event01<ph id="ph2">&lt;/definedTerm&gt;
                &lt;definition&gt;
                  &lt;para&gt;</ph>Montre comment créer une applet de commande pour l’inscription d’événements en la faisant dériver de la classe ObjectEventRegistrationBase.<ph id="ph3">&lt;/para&gt;
                &lt;/definition&gt;
                &lt;definedTerm&gt;</ph>Event02<ph id="ph4">&lt;/definedTerm&gt;
                &lt;definition&gt;
                  &lt;para&gt;</ph>Montre comment recevoir des notifications d’événements <ph id="ph5">&lt;token&gt;</ph>mshshort<ph id="ph6">&lt;/token&gt;</ph> générés sur des ordinateurs distants.</target>         
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>It uses the PSEventReceived event exposed through the <ph id="ph1">&lt;codeEntityReference&gt;</ph>T:System.Management.Automation.Runspaces.Runspace<ph id="ph2">&lt;/codeEntityReference&gt;</ph> class.</source>
          <target state="translated">Il utilise l’événement PSEventReceived exposé via la classe <ph id="ph1">&lt;codeEntityReference&gt;</ph>T:System.Management.Automation.Runspaces.Runspace<ph id="ph2">&lt;/codeEntityReference&gt;</ph>.</target>         
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Hosting application samples<ph id="ph1">&lt;/title&gt;
            &lt;content&gt;
              &lt;definitionTable&gt;
                &lt;definedTerm&gt;</ph>Runspace01<ph id="ph2">&lt;/definedTerm&gt;
                &lt;definition&gt;
                  &lt;para&gt;</ph>Shows how to use the <ph id="ph3">&lt;codeEntityReference&gt;</ph>T:System.Management.Automation.PowerShell<ph id="ph4">&lt;/codeEntityReference&gt;</ph> class to run the <ph id="ph5">&lt;externalLink&gt;&lt;linkText&gt;</ph>Get-Process<ph id="ph6">&lt;/linkText&gt;&lt;linkUri&gt;</ph>http://go.microsoft.com/fwlink/?LinkId=113324<ph id="ph7">&lt;/linkUri&gt;&lt;/externalLink&gt;</ph> cmdlet synchronously.</source>
          <target state="translated">Exemples d’applications d’hébergement<ph id="ph1">&lt;/title&gt;
            &lt;content&gt;
              &lt;definitionTable&gt;
                &lt;definedTerm&gt;</ph>Runspace01<ph id="ph2">&lt;/definedTerm&gt;
                &lt;definition&gt;
                  &lt;para&gt;</ph>Montre comment utiliser la classe <ph id="ph3">&lt;codeEntityReference&gt;</ph>T:System.Management.Automation.PowerShell<ph id="ph4">&lt;/codeEntityReference&gt;</ph> pour exécuter l’applet de commande <ph id="ph5">&lt;externalLink&gt;&lt;linkText&gt;</ph>Get-Process<ph id="ph6">&lt;/linkText&gt;&lt;linkUri&gt;</ph>http://go.microsoft.com/fwlink/?LinkId=113324<ph id="ph7">&lt;/linkUri&gt;&lt;/externalLink&gt;</ph> de façon synchrone.</target>         
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;externalLink&gt;&lt;linkText&gt;</ph>Get-Process<ph id="ph2">&lt;/linkText&gt;&lt;linkUri&gt;</ph>http://go.microsoft.com/fwlink/?LinkId=113324<ph id="ph3">&lt;/linkUri&gt;&lt;/externalLink&gt;</ph> cmdlet returns <ph id="ph4">&lt;codeEntityReference&gt;</ph>T:System.Diagnostics.Process<ph id="ph5">&lt;/codeEntityReference&gt;</ph> objects for each process running on the local computer.<ph id="ph6">&lt;/para&gt;
                &lt;/definition&gt;
                &lt;definedTerm&gt;</ph>Runspace02<ph id="ph7">&lt;/definedTerm&gt;
                &lt;definition&gt;
                  &lt;para&gt;</ph>Shows how to use the <ph id="ph8">&lt;codeEntityReference&gt;</ph>T:System.Management.Automation.PowerShell<ph id="ph9">&lt;/codeEntityReference&gt;</ph> class to run the <ph id="ph10">&lt;externalLink&gt;&lt;linkText&gt;</ph>Get-Process<ph id="ph11">&lt;/linkText&gt;&lt;linkUri&gt;</ph>http://go.microsoft.com/fwlink/?LinkId=113324<ph id="ph12">&lt;/linkUri&gt;&lt;/externalLink&gt;</ph> and <ph id="ph13">&lt;externalLink&gt;&lt;linkText&gt;</ph>Sort-Object<ph id="ph14">&lt;/linkText&gt;&lt;linkUri&gt;</ph>http://go.microsoft.com/fwlink/?LinkID=113403<ph id="ph15">&lt;/linkUri&gt;&lt;/externalLink&gt;</ph> cmdlets synchronously.</source>
          <target state="translated">L’applet de commande <ph id="ph1">&lt;externalLink&gt;&lt;linkText&gt;</ph>Get-Process<ph id="ph2">&lt;/linkText&gt;&lt;linkUri&gt;</ph>http://go.microsoft.com/fwlink/?LinkId=113324<ph id="ph3">&lt;/linkUri&gt;&lt;/externalLink&gt;</ph> retourne des objets <ph id="ph4">&lt;codeEntityReference&gt;</ph>T:System.Diagnostics.Process<ph id="ph5">&lt;/codeEntityReference&gt;</ph> pour chaque processus s’exécutant sur l’ordinateur local.<ph id="ph6">&lt;/para&gt;
                &lt;/definition&gt;
                &lt;definedTerm&gt;</ph>Runspace02<ph id="ph7">&lt;/definedTerm&gt;
                &lt;definition&gt;
                  &lt;para&gt;</ph>Montre comment utiliser la classe <ph id="ph8">&lt;codeEntityReference&gt;</ph>T:System.Management.Automation.PowerShell<ph id="ph9">&lt;/codeEntityReference&gt;</ph> pour exécuter les applets de commande <ph id="ph10">&lt;externalLink&gt;&lt;linkText&gt;</ph>Get-Process<ph id="ph11">&lt;/linkText&gt;&lt;linkUri&gt;</ph>http://go.microsoft.com/fwlink/?LinkId=113324<ph id="ph12">&lt;/linkUri&gt;&lt;/externalLink&gt;</ph> et <ph id="ph13">&lt;externalLink&gt;&lt;linkText&gt;</ph>Sort-Object<ph id="ph14">&lt;/linkText&gt;&lt;linkUri&gt;</ph>http://go.microsoft.com/fwlink/?LinkID=113403<ph id="ph15">&lt;/linkUri&gt;&lt;/externalLink&gt;</ph> de façon synchrone.</target>         
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;externalLink&gt;&lt;linkText&gt;</ph>Get-Process<ph id="ph2">&lt;/linkText&gt;&lt;linkUri&gt;</ph>http://go.microsoft.com/fwlink/?LinkId=113324<ph id="ph3">&lt;/linkUri&gt;&lt;/externalLink&gt;</ph> cmdlet returns <ph id="ph4">&lt;codeEntityReference&gt;</ph>T:System.Diagnostics.Process<ph id="ph5">&lt;/codeEntityReference&gt;</ph> objects for each process running on the local computer, and the Sort-Object sorts the objects based on their <ph id="ph6">&lt;codeEntityReference&gt;</ph>P:System.Diagnostics.Process.Id<ph id="ph7">&lt;/codeEntityReference&gt;</ph> property.</source>
          <target state="translated">L’applet de commande <ph id="ph1">&lt;externalLink&gt;&lt;linkText&gt;</ph>Get-Process<ph id="ph2">&lt;/linkText&gt;&lt;linkUri&gt;</ph>http://go.microsoft.com/fwlink/?LinkId=113324<ph id="ph3">&lt;/linkUri&gt;&lt;/externalLink&gt;</ph> retourne des objets <ph id="ph4">&lt;codeEntityReference&gt;</ph>T:System.Diagnostics.Process<ph id="ph5">&lt;/codeEntityReference&gt;</ph> pour chaque processus s’exécutant sur l’ordinateur local, tandis que Sort-Object trie les objets en fonction de leur propriété <ph id="ph6">&lt;codeEntityReference&gt;</ph>P:System.Diagnostics.Process.Id<ph id="ph7">&lt;/codeEntityReference&gt;</ph>.</target>         
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>The results of these commands is displayed by using a <ph id="ph1">&lt;codeEntityReference&gt;</ph>T:System.Windows.Forms.DataGridView<ph id="ph2">&lt;/codeEntityReference&gt;</ph> control.<ph id="ph3">&lt;/para&gt;
                &lt;/definition&gt;
                &lt;definedTerm&gt;</ph>Runspace03<ph id="ph4">&lt;/definedTerm&gt;
                &lt;definition&gt;
                  &lt;para&gt;</ph>Shows how to use the <ph id="ph5">&lt;codeEntityReference&gt;</ph>T:System.Management.Automation.PowerShell<ph id="ph6">&lt;/codeEntityReference&gt;</ph> class to run a script synchronously, and how to handle non-terminating errors.</source>
          <target state="translated">Le résultat de ces commandes s’affiche au moyen d’un contrôle <ph id="ph1">&lt;codeEntityReference&gt;</ph>T:System.Windows.Forms.DataGridView<ph id="ph2">&lt;/codeEntityReference&gt;</ph>.<ph id="ph3">&lt;/para&gt;
                &lt;/definition&gt;
                &lt;definedTerm&gt;</ph>Runspace03<ph id="ph4">&lt;/definedTerm&gt;
                &lt;definition&gt;
                  &lt;para&gt;</ph>Montre comment utiliser la classe <ph id="ph5">&lt;codeEntityReference&gt;</ph>T:System.Management.Automation.PowerShell<ph id="ph6">&lt;/codeEntityReference&gt;</ph> pour exécuter un script de façon synchrone et comment gérer les erreurs sans fin d’exécution.</target>         
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>The script receives a list of process names and then retrieves those processes.</source>
          <target state="translated">Le script reçoit une liste de noms de processus et récupère ensuite ces processus.</target>         
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>The results of the script, including any non-terminating errors that were generated when running the script, are displayed in a console window.<ph id="ph1">&lt;/para&gt;
                &lt;/definition&gt;
                &lt;definedTerm&gt;</ph>Runspace04<ph id="ph2">&lt;/definedTerm&gt;
                &lt;definition&gt;
                  &lt;para&gt;</ph>Shows how to use the <ph id="ph3">&lt;codeEntityReference&gt;</ph>T:System.Management.Automation.PowerShell<ph id="ph4">&lt;/codeEntityReference&gt;</ph> class to run commands, and how to catch terminating errors that are thrown when running the commands.</source>
          <target state="translated">Le résultat du script, notamment les erreurs sans fin d’exécution qui ont été générées pendant l’exécution du script, s’affiche dans une fenêtre de console.<ph id="ph1">&lt;/para&gt;
                &lt;/definition&gt;
                &lt;definedTerm&gt;</ph>Runspace04<ph id="ph2">&lt;/definedTerm&gt;
                &lt;definition&gt;
                  &lt;para&gt;</ph>Montre comment utiliser la classe <ph id="ph3">&lt;codeEntityReference&gt;</ph>T:System.Management.Automation.PowerShell<ph id="ph4">&lt;/codeEntityReference&gt;</ph> pour exécuter des commandes et comment intercepter les erreurs avec fin d’exécution qui sont levées pendant l’exécution des commandes.</target>         
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Two commands are run, and the last command is passed a parameter argument that is not valid.</source>
          <target state="translated">Les commandes exécutées sont au nombre de deux, et la dernière se voit transmettre un argument de paramètre non valide.</target>         
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>As a result, no objects are returned and a terminating error is thrown.<ph id="ph1">&lt;/para&gt;
                &lt;/definition&gt;
                &lt;definedTerm&gt;</ph>Runspace05<ph id="ph2">&lt;/definedTerm&gt;
                &lt;definition&gt;
                  &lt;para&gt;</ph>Shows how to add a snap-in to an <ph id="ph3">&lt;codeEntityReference&gt;</ph>T:System.Management.Automation.Runspaces.InitialSessionState<ph id="ph4">&lt;/codeEntityReference&gt;</ph> object so that the cmdlet of the snap-in is available when the runspace is opened.</source>
          <target state="translated">En conséquence, aucun objet n’est retourné et une erreur avec fin d’exécution est levée.<ph id="ph1">&lt;/para&gt;
                &lt;/definition&gt;
                &lt;definedTerm&gt;</ph>Runspace05<ph id="ph2">&lt;/definedTerm&gt;
                &lt;definition&gt;
                  &lt;para&gt;</ph>Montre comment ajouter un composant logiciel enfichable à un objet <ph id="ph3">&lt;codeEntityReference&gt;</ph>T:System.Management.Automation.Runspaces.InitialSessionState<ph id="ph4">&lt;/codeEntityReference&gt;</ph> de telle sorte que l’applet de commande du composant logiciel enfichable soit disponible quand l’instance d’exécution est ouverte.</target>         
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>The snap-in provides a Get-Proc cmdlet (defined by the <ph id="ph1">&lt;legacyLink xlink:href="7b48bf80-cbf0-4cb1-8d5b-3b8d06196598"&gt;</ph>GetProcessSample01 Sample<ph id="ph2">&lt;/legacyLink&gt;</ph>) that is run synchronously by using a <ph id="ph3">&lt;codeEntityReference&gt;</ph>T:System.Management.Automation.PowerShell<ph id="ph4">&lt;/codeEntityReference&gt;</ph> object.<ph id="ph5">&lt;/para&gt;
                &lt;/definition&gt;
                &lt;definedTerm&gt;</ph>Runspace06<ph id="ph6">&lt;/definedTerm&gt;
                &lt;definition&gt;
                  &lt;para&gt;</ph>Shows how to add a module to an <ph id="ph7">&lt;codeEntityReference&gt;</ph>T:System.Management.Automation.Runspaces.InitialSessionState<ph id="ph8">&lt;/codeEntityReference&gt;</ph> object so that the module is loaded when the runspace is opened.</source>
          <target state="translated">Le composant logiciel enfichable fournit une applet de commande Get-Process (définie par l’<ph id="ph1">&lt;legacyLink xlink:href="7b48bf80-cbf0-4cb1-8d5b-3b8d06196598"&gt;</ph>exemple GetProcessSample01<ph id="ph2">&lt;/legacyLink&gt;</ph>) qui est exécutée de façon synchrone à l’aide d’un objet <ph id="ph3">&lt;codeEntityReference&gt;</ph>T:System.Management.Automation.PowerShell<ph id="ph4">&lt;/codeEntityReference&gt;</ph>.<ph id="ph5">&lt;/para&gt;
                &lt;/definition&gt;
                &lt;definedTerm&gt;</ph>Runspace06<ph id="ph6">&lt;/definedTerm&gt;
                &lt;definition&gt;
                  &lt;para&gt;</ph>Montre comment ajouter un module à un objet <ph id="ph7">&lt;codeEntityReference&gt;</ph>T:System.Management.Automation.Runspaces.InitialSessionState<ph id="ph8">&lt;/codeEntityReference&gt;</ph> de telle sorte que le module soit chargé quand l’instance d’exécution est ouverte.</target>         
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>The module provides a Get-Proc cmdlet (defined by the <ph id="ph1">&lt;legacyLink xlink:href="481f557d-3344-4d33-b2da-4736a0165181"&gt;</ph>GetProcessSample02 Sample<ph id="ph2">&lt;/legacyLink&gt;</ph>) that is run synchronously by using a <ph id="ph3">&lt;codeEntityReference&gt;</ph>T:System.Management.Automation.PowerShell<ph id="ph4">&lt;/codeEntityReference&gt;</ph> object.<ph id="ph5">&lt;/para&gt;
                &lt;/definition&gt;
                &lt;definedTerm&gt;</ph>Runspace07<ph id="ph6">&lt;/definedTerm&gt;
                &lt;definition&gt;
                  &lt;para&gt;</ph>Shows how to create a runspace, and then use that runspace to run two cmdlets synchronously by using a <ph id="ph7">&lt;codeEntityReference&gt;</ph>T:System.Management.Automation.PowerShell<ph id="ph8">&lt;/codeEntityReference&gt;</ph> object.<ph id="ph9">&lt;/para&gt;
                &lt;/definition&gt;
                &lt;definedTerm&gt;</ph>Runspace08<ph id="ph10">&lt;/definedTerm&gt;
                &lt;definition&gt;
                  &lt;para&gt;</ph>Shows how to add commands and arguments to the pipeline of a <ph id="ph11">&lt;codeEntityReference&gt;</ph>T:System.Management.Automation.PowerShell<ph id="ph12">&lt;/codeEntityReference&gt;</ph> object and how to run the commands synchronously.<ph id="ph13">&lt;/para&gt;
                &lt;/definition&gt;
                &lt;definedTerm&gt;</ph>Runspace09<ph id="ph14">&lt;/definedTerm&gt;
                &lt;definition&gt;
                  &lt;para&gt;</ph>Shows how to add a script to the pipeline of a <ph id="ph15">&lt;codeEntityReference&gt;</ph>T:System.Management.Automation.PowerShell<ph id="ph16">&lt;/codeEntityReference&gt;</ph> object and how to run the script asynchronously.</source>
          <target state="translated">Le module fournit une applet de commande Get-Process (définie par l’<ph id="ph1">&lt;legacyLink xlink:href="481f557d-3344-4d33-b2da-4736a0165181"&gt;</ph>exemple GetProcessSample02<ph id="ph2">&lt;/legacyLink&gt;</ph>) qui est exécuté de façon synchrone en utilisant un objet <ph id="ph3">&lt;codeEntityReference&gt;</ph>T:System.Management.Automation.PowerShell<ph id="ph4">&lt;/codeEntityReference&gt;</ph>.<ph id="ph5">&lt;/para&gt;
                &lt;/definition&gt;
                &lt;definedTerm&gt;</ph>Runspace07<ph id="ph6">&lt;/definedTerm&gt;
                &lt;definition&gt;
                  &lt;para&gt;</ph>Montre comment créer une instance d’exécution et s’en servir pour exécuter deux applets de commande de façon synchrone en utilisant un objet <ph id="ph7">&lt;codeEntityReference&gt;</ph>T:System.Management.Automation.PowerShell<ph id="ph8">&lt;/codeEntityReference&gt;</ph>.<ph id="ph9">&lt;/para&gt;
                &lt;/definition&gt;
                &lt;definedTerm&gt;</ph>Runspace08<ph id="ph10">&lt;/definedTerm&gt;
                &lt;definition&gt;
                  &lt;para&gt;</ph>Montre comment ajouter des commandes et des arguments au pipeline d’un objet <ph id="ph11">&lt;codeEntityReference&gt;</ph>T:System.Management.Automation.PowerShell<ph id="ph12">&lt;/codeEntityReference&gt;</ph> et comment exécuter les commandes de façon synchrone.<ph id="ph13">&lt;/para&gt;
                &lt;/definition&gt;
                &lt;definedTerm&gt;</ph>Runspace09<ph id="ph14">&lt;/definedTerm&gt;
                &lt;definition&gt;
                  &lt;para&gt;</ph>Montre comment ajouter un script au pipeline d’un objet <ph id="ph15">&lt;codeEntityReference&gt;</ph>T:System.Management.Automation.PowerShell<ph id="ph16">&lt;/codeEntityReference&gt;</ph> et comment exécuter le script de façon asynchrone.</target>         
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Events are used to handle the output of the script.<ph id="ph1">&lt;/para&gt;
                &lt;/definition&gt;
                &lt;definedTerm&gt;</ph>Runspace10<ph id="ph2">&lt;/definedTerm&gt;
                &lt;definition&gt;
                  &lt;para&gt;</ph>Shows how to create a default initial session state, how to add a cmdlet to the <ph id="ph3">&lt;codeEntityReference&gt;</ph>T:System.Management.Automation.Runspaces.InitialSessionState<ph id="ph4">&lt;/codeEntityReference&gt;</ph>, how to create a runspace that uses the initial session state, and how to run the command by using a <ph id="ph5">&lt;codeEntityReference&gt;</ph>T:System.Management.Automation.PowerShell<ph id="ph6">&lt;/codeEntityReference&gt;</ph> object.<ph id="ph7">&lt;/para&gt;
                &lt;/definition&gt;
                &lt;definedTerm&gt;</ph>Runspace11<ph id="ph8">&lt;/definedTerm&gt;
                &lt;definition&gt;
                  &lt;para&gt;</ph>Shows how to use the <ph id="ph9">&lt;codeEntityReference&gt;</ph>T:System.Management.Automation.ProxyCommand<ph id="ph10">&lt;/codeEntityReference&gt;</ph> class to create a proxy command that calls an existing cmdlet, but restricts the set of available parameters.</source>
          <target state="translated">Des événements sont utilisés pour gérer la sortie du script.<ph id="ph1">&lt;/para&gt;
                &lt;/definition&gt;
                &lt;definedTerm&gt;</ph>Runspace10<ph id="ph2">&lt;/definedTerm&gt;
                &lt;definition&gt;
                  &lt;para&gt;</ph>Montre comment créer un état de session initial par défaut, comment ajouter une applet de commande à <ph id="ph3">&lt;codeEntityReference&gt;</ph>T:System.Management.Automation.Runspaces.InitialSessionState<ph id="ph4">&lt;/codeEntityReference&gt;</ph>, comment créer une instance d’exécution qui utilise l’état de session initial et comment exécuter la commande en utilisant un objet <ph id="ph5">&lt;codeEntityReference&gt;</ph>T:System.Management.Automation.PowerShell<ph id="ph6">&lt;/codeEntityReference&gt;</ph>.<ph id="ph7">&lt;/para&gt;
                &lt;/definition&gt;
                &lt;definedTerm&gt;</ph>Runspace11<ph id="ph8">&lt;/definedTerm&gt;
                &lt;definition&gt;
                  &lt;para&gt;</ph>Montre comment utiliser la classe <ph id="ph9">&lt;codeEntityReference&gt;</ph>T:System.Management.Automation.ProxyCommand<ph id="ph10">&lt;/codeEntityReference&gt;</ph> pour créer une commande proxy qui appelle une applet de commande existante, mais qui limite le jeu de paramètres disponibles.</target>         
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>The proxy command is then added to an initial session state that is used to create a constrained runspace.</source>
          <target state="translated">La commande proxy est ensuite ajoutée à un état de session initial qui sert à créer une instance d’exécution contrainte.</target>         
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>This means that the user can access the functionality of the cmdlet only through the proxy command.<ph id="ph1">&lt;/para&gt;
                &lt;/definition&gt;
                &lt;definedTerm&gt;</ph>PowerShell01<ph id="ph2">&lt;/definedTerm&gt;
                &lt;definition&gt;
                  &lt;para&gt;</ph>Shows how to create a constrained runspace using an <ph id="ph3">&lt;codeEntityReference&gt;</ph>T:System.Management.Automation.Runspaces.InitialSessionState<ph id="ph4">&lt;/codeEntityReference&gt;</ph> object.<ph id="ph5">&lt;/para&gt;
                &lt;/definition&gt;
                &lt;definedTerm&gt;</ph>PowerShell02<ph id="ph6">&lt;/definedTerm&gt;
                &lt;definition&gt;
                  &lt;para&gt;</ph>Shows how to use a runspace pool to run multiple commands concurrently.</source>
          <target state="translated">Cela signifie que l’utilisateur ne peut accéder à la fonctionnalité de l’applet de commande qu’au moyen de la commande proxy.<ph id="ph1">&lt;/para&gt;
                &lt;/definition&gt;
                &lt;definedTerm&gt;</ph>PowerShell01<ph id="ph2">&lt;/definedTerm&gt;
                &lt;definition&gt;
                  &lt;para&gt;</ph>Montre comment créer une instance d’exécution contrainte en utilisant un objet <ph id="ph3">&lt;codeEntityReference&gt;</ph>T:System.Management.Automation.Runspaces.InitialSessionState<ph id="ph4">&lt;/codeEntityReference&gt;</ph>.<ph id="ph5">&lt;/para&gt;
                &lt;/definition&gt;
                &lt;definedTerm&gt;</ph>PowerShell02<ph id="ph6">&lt;/definedTerm&gt;
                &lt;definition&gt;
                  &lt;para&gt;</ph>Montre comment utiliser un pool d’instances d’exécution pour exécuter plusieurs commandes simultanément.</target>         
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Host samples<ph id="ph1">&lt;/title&gt;
            &lt;content&gt;
              &lt;definitionTable&gt;
                &lt;definedTerm&gt;</ph>Host01<ph id="ph2">&lt;/definedTerm&gt;
                &lt;definition&gt;
                  &lt;para&gt;</ph>Shows how to implement a host application that uses a custom host.</source>
          <target state="translated">Exemples d’hôtes<ph id="ph1">&lt;/title&gt;
            &lt;content&gt;
              &lt;definitionTable&gt;
                &lt;definedTerm&gt;</ph>Host01<ph id="ph2">&lt;/definedTerm&gt;
                &lt;definition&gt;
                  &lt;para&gt;</ph>Montre comment implémenter une application hôte qui utilise un hôte personnalisé.</target>         
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>In this sample a runspace is created that uses the custom host, and then the <ph id="ph1">&lt;codeEntityReference&gt;</ph>T:System.Management.Automation.PowerShell<ph id="ph2">&lt;/codeEntityReference&gt;</ph> API is used to run a script that calls “exit.”</source>
          <target state="translated">Dans cet exemple, l’instance d’exécution qui est créée utilise l’hôte personnalisé, puis l’API <ph id="ph1">&lt;codeEntityReference&gt;</ph>T:System.Management.Automation.PowerShell<ph id="ph2">&lt;/codeEntityReference&gt;</ph> est utilisée pour exécuter un script qui appelle « exit ».</target>         
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>The host application then looks at the output of the script and prints out the results.<ph id="ph1">&lt;/para&gt;
                &lt;/definition&gt;
                &lt;definedTerm&gt;</ph>Host02<ph id="ph2">&lt;/definedTerm&gt;
                &lt;definition&gt;
                  &lt;para&gt;</ph>Shows how to write a host application that uses the <ph id="ph3">&lt;token&gt;</ph>mshshort<ph id="ph4">&lt;/token&gt;</ph> runtime along with a custom host implementation.</source>
          <target state="translated">L’application hôte analyse ensuite la sortie du script et imprime les résultats.<ph id="ph1">&lt;/para&gt;
                &lt;/definition&gt;
                &lt;definedTerm&gt;</ph>Host02<ph id="ph2">&lt;/definedTerm&gt;
                &lt;definition&gt;
                  &lt;para&gt;</ph>Montre comment écrire une application hôte qui utilise le runtime <ph id="ph3">&lt;token&gt;</ph>mshshort<ph id="ph4">&lt;/token&gt;</ph> avec une implémentation d’hôte personnalisée.</target>         
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>The host application sets the host culture to German, runs the <ph id="ph1">&lt;externalLink&gt;&lt;linkText&gt;</ph>Get-Process<ph id="ph2">&lt;/linkText&gt;&lt;linkUri&gt;</ph>http://go.microsoft.com/fwlink/?LinkId=113324<ph id="ph3">&lt;/linkUri&gt;&lt;/externalLink&gt;</ph> cmdlet and displays the results as you would see them by using pwrsh.exe, and then prints out the current data and time in German.<ph id="ph4">&lt;/para&gt;
                &lt;/definition&gt;
                &lt;definedTerm&gt;</ph>Host03<ph id="ph5">&lt;/definedTerm&gt;
                &lt;definition&gt;
                  &lt;para&gt;</ph>Shows how to build an interactive console-based host application that reads commands from the command line, executes the commands, and then displays the results to the console.<ph id="ph6">&lt;/para&gt;
                &lt;/definition&gt;
                &lt;definedTerm&gt;</ph>Host04<ph id="ph7">&lt;/definedTerm&gt;
                &lt;definition&gt;
                  &lt;para&gt;</ph>Shows how to build an interactive console-based host application that reads commands from the command line, executes the commands, and then displays the results to the console.</source>
          <target state="translated">L’application hôte définit la culture de l’hôte sur l’allemand, exécute l’applet de commande <ph id="ph1">&lt;externalLink&gt;&lt;linkText&gt;</ph>Get-Process<ph id="ph2">&lt;/linkText&gt;&lt;linkUri&gt;</ph>http://go.microsoft.com/fwlink/?LinkId=113324<ph id="ph3">&lt;/linkUri&gt;&lt;/externalLink&gt;</ph> et affiche les résultats à l’aide de pwrsh.exe pour ensuite imprimer la date et l’heure actuelles en allemand.<ph id="ph4">&lt;/para&gt;
                &lt;/definition&gt;
                &lt;definedTerm&gt;</ph>Host03<ph id="ph5">&lt;/definedTerm&gt;
                &lt;definition&gt;
                  &lt;para&gt;</ph>Montre comment créer une application hôte basée sur une console interactive qui lit les commandes à partir de la ligne de commande, exécute les commandes, puis affiche les résultats dans la console.<ph id="ph6">&lt;/para&gt;
                &lt;/definition&gt;
                &lt;definedTerm&gt;</ph>Host04<ph id="ph7">&lt;/definedTerm&gt;
                &lt;definition&gt;
                  &lt;para&gt;</ph>Montre comment créer une application hôte basée sur une console interactive qui lit les commandes à partir de la ligne de commande, exécute les commandes, puis affiche les résultats dans la console.</target>         
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>This host application also supports displaying prompts that allow the user to specify multiple choices.<ph id="ph1">&lt;/para&gt;
                &lt;/definition&gt;
                &lt;definedTerm&gt;</ph>Host05<ph id="ph2">&lt;/definedTerm&gt;
                &lt;definition&gt;
                  &lt;para&gt;</ph>Shows how to build an interactive console-based host application that reads commands from the command line, executes the commands, and then displays the results to the console.</source>
          <target state="translated">Cette application hôte prend aussi en charge l’affichage d’invites qui permettent à l’utilisateur de spécifier plusieurs options.<ph id="ph1">&lt;/para&gt;
                &lt;/definition&gt;
                &lt;definedTerm&gt;</ph>Host05<ph id="ph2">&lt;/definedTerm&gt;
                &lt;definition&gt;
                  &lt;para&gt;</ph>Montre comment créer une application hôte basée sur une console interactive qui lit les commandes à partir de la ligne de commande, exécute les commandes, puis affiche les résultats dans la console.</target>         
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>This host application also supports calls to remote computers by using the <ph id="ph1">&lt;externalLink&gt;&lt;linkText&gt;</ph>Enter-PsSession<ph id="ph2">&lt;/linkText&gt;&lt;linkUri&gt;</ph>http://go.microsoft.com/fwlink/?LinkId=135210<ph id="ph3">&lt;/linkUri&gt;&lt;/externalLink&gt;</ph> and <ph id="ph4">&lt;externalLink&gt;&lt;linkText&gt;</ph>Exit-PsSession<ph id="ph5">&lt;/linkText&gt;&lt;linkUri&gt;</ph>http://go.microsoft.com/fwlink/?LinkId=135212<ph id="ph6">&lt;/linkUri&gt;&lt;/externalLink&gt;</ph> cmdlets.<ph id="ph7">&lt;/para&gt;
                &lt;/definition&gt;
                &lt;definedTerm&gt;</ph>Host06<ph id="ph8">&lt;/definedTerm&gt;
                &lt;definition&gt;
                  &lt;para&gt;</ph>Shows how to build an interactive console-based host application that reads commands from the command line, executes the commands, and then displays the results to the console.</source>
          <target state="translated">Cette application hôte prend aussi en charge les appels aux ordinateurs distants à l’aide des applets de commande <ph id="ph1">&lt;externalLink&gt;&lt;linkText&gt;</ph>Enter-PsSession<ph id="ph2">&lt;/linkText&gt;&lt;linkUri&gt;</ph>http://go.microsoft.com/fwlink/?LinkId=135210<ph id="ph3">&lt;/linkUri&gt;&lt;/externalLink&gt;</ph> et <ph id="ph4">&lt;externalLink&gt;&lt;linkText&gt;</ph>Exit-PsSession<ph id="ph5">&lt;/linkText&gt;&lt;linkUri&gt;</ph>http://go.microsoft.com/fwlink/?LinkId=135212<ph id="ph6">&lt;/linkUri&gt;&lt;/externalLink&gt;</ph>.<ph id="ph7">&lt;/para&gt;
                &lt;/definition&gt;
                &lt;definedTerm&gt;</ph>Host06<ph id="ph8">&lt;/definedTerm&gt;
                &lt;definition&gt;
                  &lt;para&gt;</ph>Montre comment créer une application hôte basée sur une console interactive qui lit les commandes à partir de la ligne de commande, exécute les commandes, puis affiche les résultats dans la console.</target>         
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>In addition, this sample uses the Tokenizer APIs to specify the color of the text that is entered by the user.</source>
          <target state="translated">Par ailleurs, cet exemple utilise les API génératrices de jetons pour spécifier la couleur du texte entré par l’utilisateur.</target>         
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Provider samples<ph id="ph1">&lt;/title&gt;
            &lt;content&gt;
              &lt;definitionTable&gt;
                &lt;definedTerm&gt;</ph>AccessDBProviderSample01<ph id="ph2">&lt;/definedTerm&gt;
                &lt;definition&gt;
                  &lt;para&gt;</ph>Shows how to declare a provider class that derives directly from the <ph id="ph3">&lt;codeEntityReference&gt;</ph>T:System.Management.Automation.Provider.CmdletProvider<ph id="ph4">&lt;/codeEntityReference&gt;</ph> class.</source>
          <target state="translated">Exemples de fournisseurs<ph id="ph1">&lt;/title&gt;
            &lt;content&gt;
              &lt;definitionTable&gt;
                &lt;definedTerm&gt;</ph>AccessDBProviderSample01<ph id="ph2">&lt;/definedTerm&gt;
                &lt;definition&gt;
                  &lt;para&gt;</ph>Montre comment déclarer une classe de fournisseur qui dérive directement de la classe <ph id="ph3">&lt;codeEntityReference&gt;</ph>T:System.Management.Automation.Provider.CmdletProvider<ph id="ph4">&lt;/codeEntityReference&gt;</ph>.</target>         
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>It is included here only for completeness.<ph id="ph1">&lt;/para&gt;
                &lt;/definition&gt;
                &lt;definedTerm&gt;</ph>AccessDBProviderSample02<ph id="ph2">&lt;/definedTerm&gt;
                &lt;definition&gt;
                  &lt;para&gt;</ph>Shows how to overwrite the <ph id="ph3">&lt;codeEntityReference&gt;</ph>M:System.Management.Automation.Provider.DriveCmdletProvider.NewDrive(System.Management.Automation.PSDriveInfo)<ph id="ph4">&lt;/codeEntityReference&gt;</ph> and <ph id="ph5">&lt;codeEntityReference&gt;</ph>M:System.Management.Automation.Provider.DriveCmdletProvider.RemoveDrive(System.Management.Automation.PSDriveInfo)<ph id="ph6">&lt;/codeEntityReference&gt;</ph> methods to support calls to the New-PSDrive and Remove-PSDrive cmdlets.</source>
          <target state="translated">Il est indiqué ici uniquement par souci d’exhaustivité.<ph id="ph1">&lt;/para&gt;
                &lt;/definition&gt;
                &lt;definedTerm&gt;</ph>AccessDBProviderSample02<ph id="ph2">&lt;/definedTerm&gt;
                &lt;definition&gt;
                  &lt;para&gt;</ph>Montre comment remplacer les méthodes <ph id="ph3">&lt;codeEntityReference&gt;</ph>M:System.Management.Automation.Provider.DriveCmdletProvider.NewDrive(System.Management.Automation.PSDriveInfo)<ph id="ph4">&lt;/codeEntityReference&gt;</ph> et <ph id="ph5">&lt;codeEntityReference&gt;</ph>M:System.Management.Automation.Provider.DriveCmdletProvider.RemoveDrive(System.Management.Automation.PSDriveInfo)<ph id="ph6">&lt;/codeEntityReference&gt;</ph> pour prendre en charge les appels aux applets de commande New-PSDrive et Remove-PSDrive.</target>         
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>The provider class in this sample derives from the <ph id="ph1">&lt;codeEntityReference&gt;</ph>T:System.Management.Automation.Provider.DriveCmdletProvider<ph id="ph2">&lt;/codeEntityReference&gt;</ph> class.<ph id="ph3">&lt;/para&gt;
                &lt;/definition&gt;
                &lt;definedTerm&gt;</ph>AccessDBProviderSample03<ph id="ph4">&lt;/definedTerm&gt;
                &lt;definition&gt;
                  &lt;para&gt;</ph>Shows how to overwrite the <ph id="ph5">&lt;codeEntityReference&gt;</ph>M:System.Management.Automation.Provider.ItemCmdletProvider.GetItem(System.String)<ph id="ph6">&lt;/codeEntityReference&gt;</ph> and <ph id="ph7">&lt;codeEntityReference&gt;</ph>M:System.Management.Automation.Provider.ItemCmdletProvider.SetItem(System.String,System.Object)<ph id="ph8">&lt;/codeEntityReference&gt;</ph> methods to support calls to the Get-Item and Set-Item cmdlets.</source>
          <target state="translated">La classe de fournisseur de cet exemple dérive de la classe <ph id="ph1">&lt;codeEntityReference&gt;</ph>T:System.Management.Automation.Provider.DriveCmdletProvider<ph id="ph2">&lt;/codeEntityReference&gt;</ph>.<ph id="ph3">&lt;/para&gt;
                &lt;/definition&gt;
                &lt;definedTerm&gt;</ph>AccessDBProviderSample03<ph id="ph4">&lt;/definedTerm&gt;
                &lt;definition&gt;
                  &lt;para&gt;</ph>Montre comment remplacer les méthodes <ph id="ph5">&lt;codeEntityReference&gt;</ph>M:System.Management.Automation.Provider.ItemCmdletProvider.GetItem(System.String)<ph id="ph6">&lt;/codeEntityReference&gt;</ph> et <ph id="ph7">&lt;codeEntityReference&gt;</ph>M:System.Management.Automation.Provider.ItemCmdletProvider.SetItem(System.String,System.Object)<ph id="ph8">&lt;/codeEntityReference&gt;</ph> pour prendre en charge les appels aux applets de commande Get-Item et Set-Item.</target>         
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>The provider class in this sample derives from the <ph id="ph1">&lt;codeEntityReference&gt;</ph>T:System.Management.Automation.Provider.ItemCmdletProvider<ph id="ph2">&lt;/codeEntityReference&gt;</ph> class.<ph id="ph3">&lt;/para&gt;
                &lt;/definition&gt;
                &lt;definedTerm&gt;</ph>AccessDBProviderSample04<ph id="ph4">&lt;/definedTerm&gt;
                &lt;definition&gt;
                  &lt;para&gt;</ph>Shows how to overwrite container methods to support calls to the Copy-Item, Get-ChildItem, New-Item, and Remove-Item cmdlets.</source>
          <target state="translated">La classe de fournisseur de cet exemple dérive de la classe <ph id="ph1">&lt;codeEntityReference&gt;</ph>T:System.Management.Automation.Provider.ItemCmdletProvider<ph id="ph2">&lt;/codeEntityReference&gt;</ph>.<ph id="ph3">&lt;/para&gt;
                &lt;/definition&gt;
                &lt;definedTerm&gt;</ph>AccessDBProviderSample04<ph id="ph4">&lt;/definedTerm&gt;
                &lt;definition&gt;
                  &lt;para&gt;</ph>Montre comment remplacer les méthodes de conteneur pour prendre en charge les appels aux applets de commande Copy-Item, Get-ChildItem, New-Item et Remove-Item.</target>         
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>These methods should be implemented when the data store contains items that are containers.</source>
          <target state="translated">Ces méthodes doivent être implémentées quand le magasin de données contient des éléments de type conteneur.</target>         
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>A container is a group of child items under a common parent item.</source>
          <target state="translated">Un conteneur est un groupe d’éléments enfants qui descendent d’un même élément parent.</target>         
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>The provider class in this sample derives from the <ph id="ph1">&lt;codeEntityReference&gt;</ph>T:System.Management.Automation.Provider.ItemCmdletProvider<ph id="ph2">&lt;/codeEntityReference&gt;</ph> class.<ph id="ph3">&lt;/para&gt;
                &lt;/definition&gt;
                &lt;definedTerm&gt;</ph>AccessDBProviderSample05<ph id="ph4">&lt;/definedTerm&gt;
                &lt;definition&gt;
                  &lt;para&gt;</ph>Shows how to overwrite container methods to support calls to the Move-Item and Join-Path cmdlets.</source>
          <target state="translated">La classe de fournisseur de cet exemple dérive de la classe <ph id="ph1">&lt;codeEntityReference&gt;</ph>T:System.Management.Automation.Provider.ItemCmdletProvider<ph id="ph2">&lt;/codeEntityReference&gt;</ph>.<ph id="ph3">&lt;/para&gt;
                &lt;/definition&gt;
                &lt;definedTerm&gt;</ph>AccessDBProviderSample05<ph id="ph4">&lt;/definedTerm&gt;
                &lt;definition&gt;
                  &lt;para&gt;</ph>Montre comment remplacer les méthodes de conteneur pour prendre en charge les appels aux applets de commande Move-Item et Join-Path.</target>         
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>These methods should be implemented when the user needs to move items within a container and if the data store contains nested containers.</source>
          <target state="translated">Ces méthodes doivent être implémentées quand l’utilisateur a besoin de déplacer des éléments dans un conteneur et si le magasin de données contient des conteneurs imbriqués.</target>         
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>The provider class in this sample derives from the <ph id="ph1">&lt;codeEntityReference&gt;</ph>T:System.Management.Automation.Provider.NavigationCmdletProvider<ph id="ph2">&lt;/codeEntityReference&gt;</ph> class.<ph id="ph3">&lt;/para&gt;
                &lt;/definition&gt;
                &lt;definedTerm&gt;</ph>AccessDBProviderSample06<ph id="ph4">&lt;/definedTerm&gt;
                &lt;definition&gt;
                  &lt;para&gt;</ph>Shows how to overwrite content methods to support calls to the Clear-Content, Get-Content, and Set-Content cmdlets.</source>
          <target state="translated">La classe de fournisseur de cet exemple dérive de la classe <ph id="ph1">&lt;codeEntityReference&gt;</ph>T:System.Management.Automation.Provider.NavigationCmdletProvider<ph id="ph2">&lt;/codeEntityReference&gt;</ph>.<ph id="ph3">&lt;/para&gt;
                &lt;/definition&gt;
                &lt;definedTerm&gt;</ph>AccessDBProviderSample06<ph id="ph4">&lt;/definedTerm&gt;
                &lt;definition&gt;
                  &lt;para&gt;</ph>Montre comment remplacer les méthodes de contenu pour prendre en charge les appels aux applets de commande Clear-Content, Get-Content et Set-Content.</target>         
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>These methods should be implemented when the user needs to manage the content of the items in the data store.</source>
          <target state="translated">Ces méthodes doivent être implémentées quand l’utilisateur a besoin de gérer le contenu des éléments situés dans le magasin de données.</target>         
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>The provider class in this sample derives from the <ph id="ph1">&lt;codeEntityReference&gt;</ph>T:System.Management.Automation.Provider.NavigationCmdletProvider<ph id="ph2">&lt;/codeEntityReference&gt;</ph> class, and it implements the <ph id="ph3">&lt;codeEntityReference&gt;</ph>T:System.Management.Automation.Provider.IContentCmdletProvider<ph id="ph4">&lt;/codeEntityReference&gt;</ph> interface.</source>
          <target state="translated">La classe de fournisseur de cet exemple dérive de la classe <ph id="ph1">&lt;codeEntityReference&gt;</ph>T:System.Management.Automation.Provider.NavigationCmdletProvider<ph id="ph2">&lt;/codeEntityReference&gt;</ph> et implémente l’interface <ph id="ph3">&lt;codeEntityReference&gt;</ph>T:System.Management.Automation.Provider.IContentCmdletProvider<ph id="ph4">&lt;/codeEntityReference&gt;</ph>.</target>         
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>