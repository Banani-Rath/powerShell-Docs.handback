<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="fr-fr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-1c394fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">3f4d6c6e698f636aead229ad01535100b7796fc6</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">reference\3.0\Microsoft.PowerShell.Core\About\about_Type_Operators.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions" />
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ff4e40984083d62c3f648d9f19fe32be23c3be5e</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">410c464fc9702383f4f9a560e9f362d0b9c6d5f9</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>about_Type_Operators</source>
          <target state="translated">about_Type_Operators</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>powershell, cmdlet</source>
          <target state="translated">applet de commande PowerShell</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>About Type Operators</source>
          <target state="translated">À propos des opérateurs de Type</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>about_Type_Operators</source>
          <target state="translated">about_Type_Operators</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>about_Type_Operators</source>
          <target state="translated">about_Type_Operators</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>SHORT DESCRIPTION</source>
          <target state="translated">DESCRIPTION COURTE</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Describes the operators that work with Microsoft .NET Framework types.</source>
          <target state="translated">Décrit les opérateurs qui fonctionnent avec des types Microsoft .NET Framework.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>LONG DESCRIPTION</source>
          <target state="translated">DESCRIPTION DÉTAILLÉE</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>The Boolean type operators (-is and -isNot) tell whether an object is an instance of a specified .NET Framework type.</source>
          <target state="translated">Les opérateurs de type booléen (-est et - isNot) indiquent si un objet est une instance d’un type .NET Framework spécifié.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The -is operator returns a value of TRUE if the type matches and a value of FALSE otherwise.</source>
          <target state="translated">-Opérateur is renvoie la valeur TRUE si le type correspond à et la valeur FALSE dans le cas contraire.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>The -isNot operator returns a value of FALSE if the type matches and a value of TRUE otherwise.</source>
          <target state="translated">L’opérateur isNot - renvoie la valeur FALSE si le type correspond à et la valeur TRUE dans le cas contraire.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>The -as operator tries to convert the input object to the specified .NET Framework type.</source>
          <target state="translated">Le - opérateur tente de convertir l’objet d’entrée pour le type .NET Framework spécifié.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>If it succeeds, it returns the converted object.</source>
          <target state="translated">Si elle réussit, elle retourne l’objet converti.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>It if fails, it returns nothing.</source>
          <target state="translated">Il si échoue, il ne retourne rien.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>It does not return an error.</source>
          <target state="translated">Il ne renvoie pas d’erreur.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>The following table lists the type operators in  Windows PowerShell�.</source>
          <target state="translated">Le tableau suivant répertorie les opérateurs de type dans Windows PowerShell.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>The syntax of the type operators is as follows:</source>
          <target state="translated">La syntaxe des opérateurs de type est la suivante :</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>You can also use the following syntax:</source>
          <target state="translated">Vous pouvez également utiliser la syntaxe suivante :</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>To specify the .NET Framework type, enclose the type name in brackets ([ ]), or enter the type as a string, such as [DateTime] or "DateTime" for System.DateTime.</source>
          <target state="translated">Pour spécifier le type .NET Framework, placez le nom de type entre crochets ([]), ou entrez le type comme une chaîne, telles que [horodatage] ou « DateTime » pour System.DateTime.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>If the type is not at the root of the system namespace, specify the full name of the object type.</source>
          <target state="translated">Si le type n’est pas à la racine de l’espace de noms système, spécifiez le nom complet du type d’objet.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>You can omit "System.".</source>
          <target state="translated">Vous pouvez omettre « System. ».</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>For example, to specify System.Diagnostics.Process, enter [System.Diagnostics.Process], [Diagnostics.Process], or "diagnostics.process".</source>
          <target state="translated">Par exemple, pour spécifier System.Diagnostics.Process, entrez [System.Diagnostics.Process], [Diagnostics.Process], ou « diagnostics.process ».</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>The type operators always return a Boolean value, even if the input is a collection of objects.</source>
          <target state="translated">Les opérateurs de type retournent toujours une valeur booléenne, même si l’entrée est une collection d’objets.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>However, when the input is a collection, the type operators match the .NET Framework type of the collection.</source>
          <target state="translated">Toutefois, lorsque l’entrée est une collection, les opérateurs de type correspondent au type de .NET Framework de la collection.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>They do not match the type of each object, even when all of the objects are of the same type.</source>
          <target state="translated">Ils ne correspondent pas le type de chaque objet, même si tous les objets sont du même type.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>To find the .NET Framework type of an object, use the Get-Member cmdlet.</source>
          <target state="translated">Pour rechercher le type .NET Framework d’un objet, utilisez l’applet de commande Get-Member.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Or, use the GetType method of all the objects together with the FullName property of this method.</source>
          <target state="translated">Sinon, utilisez la méthode GetType de tous les objets avec la propriété FullName de cette méthode.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>For example, the following statement gets the type of the return value of a Get-Culture command:</source>
          <target state="translated">Par exemple, l’instruction suivante obtient le type de la valeur de retour d’une commande Get-Culture :</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>EXAMPLES</source>
          <target state="translated">EXEMPLES</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>The following examples show some uses of the Type operators:</source>
          <target state="translated">Les exemples suivants montrent quelques utilisations des opérateurs de Type :</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>The following example shows that when the input is a collection of objects, the matching type is the .NET Framework type of the collection, not the type of the individual objects in the collection.</source>
          <target state="translated">L’exemple suivant montre que lorsque l’entrée est une collection d’objets, le type de correspondance est le type .NET Framework de la collection, et non le type des objets individuels dans la collection.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>In this example, although both the Get-Culture and Get-UICulture cmdlets return System.Globalization.CultureInfo objects, a collection of these objects is a System.Object array.</source>
          <target state="translated">Dans cet exemple, bien que les applets de commande Get-UICulture et Culture Get retournent des objets System.Globalization.CultureInfo, une collection de ces objets est un tableau de System.Object.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>The following examples show how to use the -as operator.</source>
          <target state="translated">Les exemples suivants montrent comment utiliser le - en tant qu’opérateur.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>The following example shows that when the -as operator cannot convert the input object to the .NET Framework type, it returns nothing.</source>
          <target state="translated">L’exemple suivant montre que lorsque l’option - opérateur ne peut pas convertir l’objet d’entrée pour le type .NET Framework, il ne retourne rien.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>SEE ALSO</source>
          <target state="translated">VOIR AUSSI</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>about_Operators</source>
          <target state="translated">about_Operators</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>