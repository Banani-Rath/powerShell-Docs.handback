<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="md" source-language="en-US" target-language="fr-fr">
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Generate PowerShell Cmdlets based on OData Endpoint</source>
          <target state="translated">Générer des applets de commande PowerShell basées sur un point de terminaison OData</target>         
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Generate Windows PowerShell cmdlets based on an OData endpoint</source>
          <target state="translated">Générer des applets de commande Windows PowerShell basées sur un point de terminaison OData</target>         
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Export-ODataEndpointProxy<ept id="p1">**</ept> is a cmdlet that generates a set of Windows PowerShell cmdlets based on the functionality exposed by a given OData endpoint.</source>
          <target state="translated"><bpt id="p1">**</bpt>Export-ODataEndpointProxy<ept id="p1">**</ept> est une applet de commande qui génère un ensemble d’applets de commande Windows PowerShell basé sur les fonctionnalités exposées par un point de terminaison OData donné.</target>         
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>The following example shows how to use this new cmdlet:</source>
          <target state="translated">L’exemple suivant montre comment utiliser cette nouvelle applet de commande :</target>         
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>\# Basic use case of Export-ODataEndpointProxy</source>
          <target state="translated">\# Cas d’usage de base d’Export-ODataEndpointProxy</target>         
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>There are still parts of key use cases in development for this functionality, including, but not limited to:</source>
          <target state="translated">Certaines parties des principaux cas d’usage de cette fonctionnalité sont toujours en développement, y compris :</target>         
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Associations</source>
          <target state="translated">Associations</target>         
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Passing streams</source>
          <target state="translated">Transfert de flux</target>         
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Generate Windows PowerShell cmdlets based on an OData endpoint with ODataUtils</source>
          <target state="translated">Générer des applets de commande Windows PowerShell basées sur un point de terminaison OData avec ODataUtils</target>         
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The ODataUtils module allows generation of Windows PowerShell cmdlets from REST endpoints that support OData.</source>
          <target state="translated">Le module ODataUtils permet de générer des applets de commande Windows PowerShell à partir de points de terminaison REST qui prennent en charge OData.</target>         
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>The following incremental enhancements are in the Microsoft.PowerShell.ODataUtils Windows PowerShell module.</source>
          <target state="translated">Le module Windows PowerShell Microsoft.PowerShell.ODataUtils offre les améliorations incrémentielles suivantes.</target>         
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Channel additional information from server-side endpoint to client side.</source>
          <target state="translated">Informations supplémentaires sur les canaux du point de terminaison côté serveur vers le côté client.</target>         
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Client-side paging support</source>
          <target state="translated">Prise en charge de la pagination côté client</target>         
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Server-side filtering by using the -Select parameter</source>
          <target state="translated">Filtrage côté serveur à l’aide du paramètre -Select</target>         
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Support for web request headers</source>
          <target state="translated">Prise en charge des en-têtes de demande web</target>         
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>The proxy cmdlets generated by the Export-ODataEndPointProxy cmdlet provide additional information (not mentioned in the $metadata used during the client-side proxy generation) from the server side OData endpoint on the Information stream (a new Windows PowerShell 5.0 feature).</source>
          <target state="translated">Les applets de commande du proxy générées par l’applet de commande Export-ODataEndPointProxy fournissent des informations supplémentaires (non mentionnées dans les métadonnées utilisées lors de la génération du proxy côté client) à partir du point de terminaison OData côté serveur sur le flux d’informations (une nouvelle fonctionnalité de Windows PowerShell 5.0).</target>         
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Here is an example of how to get that information.</source>
          <target state="translated">Voici un exemple qui montre comment obtenir ces informations.</target>         
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>You can get the records from the server side in batches by using client-side paging support.</source>
          <target state="translated">Vous pouvez obtenir les enregistrements à partir du côté serveur par lots grâce à la prise en charge de la pagination côté client.</target>         
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>This is useful when you must get a large amount of data from the server over the network.</source>
          <target state="translated">C’est utile quand vous devez obtenir une grande quantité de données à partir du serveur par le biais du réseau.</target>         
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>The generated proxy cmdlets support the –Select parameter which you can use as a filter to receive only the record properties that the client needs.</source>
          <target state="translated">Les applets de commande du proxy générées prennent en charge le paramètre –Select, que vous pouvez utiliser comme filtre pour recevoir uniquement les propriétés d’enregistrements dont le client a besoin.</target>         
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>This reduces the amount of data that is transferred over the network, because the filtering occurs on the server side.</source>
          <target state="translated">Cela réduit la quantité de données transférées sur le réseau, car le filtrage s’effectue sur le serveur.</target>         
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>The Export-ODataEndpointProxy cmdlet, and the proxy cmdlets generated by it, now support the Headers parameter (supply values as a hash table), which you can use to channel any additional information that is expected by the server-side OData endpoint.</source>
          <target state="translated">L’applet de commande Export-ODataEndpointProxy et les applets de commande du proxy qu’elle génère prennent désormais en charge le paramètre Headers (fournissez des valeurs sous forme de table de hachage), que vous pouvez utiliser pour transmettre toute information supplémentaire attendue par le point de terminaison OData côté serveur.</target>         
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>In the following example, you can channel a Subscription key through Headers for services that are expecting a Subscription key for authentication.</source>
          <target state="translated">Dans l’exemple suivant, vous pouvez transmettre une clé d’abonnement par le biais de Headers pour les services qui attendent une clé d’abonnement pour l’authentification.</target>         
        </trans-unit>
      </group>
    </body>
  </file>
  <header xmlns="">
    <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">8849fb46853f12318dd34781d07085419737d196</xliffext:olfilehash>
  </header>
</xliff>