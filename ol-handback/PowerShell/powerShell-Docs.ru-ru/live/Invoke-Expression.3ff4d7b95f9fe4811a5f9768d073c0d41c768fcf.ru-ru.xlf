<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ru-ru">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-1c394fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">898b0484045119b4ac6cdbc406640789b88711aa</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">reference\3.0\Microsoft.PowerShell.Utility\Invoke-Expression.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions" />
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">964acafe73dd0196ee0f33882ecbbc70b209613b</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">5669df1d4242564a798e28f9ec0d085e010618d5</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>powershell, cmdlet</source>
          <target state="translated">PowerShell, командлет</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Invoke-Expression</source>
          <target state="translated">Invoke-Expression</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Invoke-Expression</source>
          <target state="translated">Invoke-Expression</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>SYNOPSIS</source>
          <target state="translated">КРАТКИЙ ОБЗОР</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Runs commands or expressions on the local computer.</source>
          <target state="translated">Выполняет команды или выражения на локальном компьютере.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>SYNTAX</source>
          <target state="translated">СИНТАКСИС</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>DESCRIPTION</source>
          <target state="translated">ОПИСАНИЕ</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>The Invoke-Expression cmdlet evaluates or runs a specified string as a command and returns the results of the expression or command.</source>
          <target state="translated">Командлет Invoke-Expression анализирует или выполняет указанную строку как команду и возвращает результат выражения или команды.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Without Invoke-Expression, a string submitted at the command line would be returned (echoed) unchanged.</source>
          <target state="translated">Если не использовать командлет Invoke-Expression, строка, указанная в командной строке, будет возвращена без изменений.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>EXAMPLES</source>
          <target state="translated">ПРИМЕРЫ</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>-------------------------- EXAMPLE 1 --------------------------</source>
          <target state="translated">-------------------------- ПРИМЕР 1 --------------------------</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>This example demonstrates the use of Invoke-Expression to evaluate an expression.</source>
          <target state="translated">В этом примере демонстрируется использование командлета Invoke-Expression для вычисления выражения.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Without Invoke-Expression, the expression is printed, but not evaluated.</source>
          <target state="translated">Если не использовать командлет Invoke-Expression, выражение будет напечатано, но не будет вычислено.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>The first command assigns a value of "Get-Process" (a string) to the $command variable.</source>
          <target state="translated">Первая команда присваивает значение Get-Process (строку) переменной $command.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>The second command shows the effect of typing the variable name at the command line.</source>
          <target state="translated">Вторая команда демонстрирует результат ввода имени переменной в командной строке.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Windows PowerShell echoes the string.</source>
          <target state="translated">Среда Windows PowerShell возвращает строку без изменений.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>The third command uses Invoke-Expression to evaluate the string.</source>
          <target state="translated">В третьей команде командлет Invoke-Expression используется для вычисления строки.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>-------------------------- EXAMPLE 2 --------------------------</source>
          <target state="translated">-------------------------- EXAMPLE 2 --------------------------</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>These commands use Invoke-Expression to run a script, TestScript.ps1, on the local computer.</source>
          <target state="translated">Эти команды используют командлет Invoke-Expression для выполнения сценария TestScript.ps1 на локальном компьютере.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>The two commands are equivalent.</source>
          <target state="translated">Команды эквивалентны.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>The first uses the Command parameter to specify the command to run.</source>
          <target state="translated">В первой из них используется параметр Command для указания выполняемой команды.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>The second uses a pipeline operator (|) to send the command string to Invoke-Expression.</source>
          <target state="translated">Во второй используется оператор конвейера (|) для передачи строки команды в командлет Invoke-Expression.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>-------------------------- EXAMPLE 3 --------------------------</source>
          <target state="translated">-------------------------- EXAMPLE 3 --------------------------</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>This example runs a command string that is saved in the $Command variable.</source>
          <target state="translated">В этом примере выполняется строка команды, сохраненная в переменной $Command.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>The command string is enclosed in single quotation marks because it includes a variable, $<bpt id="p1">_</bpt>, which represents the current object. If it were enclosed in double quotation marks, the $<ept id="p1">_</ept> variable would be replaced by its value before it was saved in the $Command variable.</source>
          <target state="translated">Строка команды заключена в одинарные кавычки, поскольку она содержит переменную, $<bpt id="p1">_</bpt>, которая представляет текущий объект. Если она была заключена в двойные кавычки, $<ept id="p1">_</ept> переменной необходимо заменить его значение перед сохранением в переменной $Command.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>-------------------------- EXAMPLE 4 --------------------------</source>
          <target state="translated">-------------------------- EXAMPLE 4 --------------------------</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>This command retrieves and runs the first example in the Get-EventLog cmdlet help topic.</source>
          <target state="translated">Эта команда извлекает и выполняет первый пример в разделе справки по командлету Get-EventLog.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>To run an example of a different cmdlet, change the value of the $cmdlet_name variable to the name of the cmdlet.</source>
          <target state="translated">Чтобы выполнить пример для другого командлета, измените значение переменной $cmdlet_name на имя этого командлета.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>And, change the $example_number variable to the example number you want to run.</source>
          <target state="translated">Кроме того, измените значение переменной $example_number на номер примера, который необходимо выполнить.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>The command will fail if the example number is not valid.</source>
          <target state="translated">Команда завершится сбоем, если номер примера недействителен.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>PARAMETERS</source>
          <target state="translated">ПАРАМЕТРЫ</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>-Command</source>
          <target state="translated">-Command</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Specifies the command or expression to run.</source>
          <target state="translated">Указывает команду или выражение для выполнения.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Type the command or expression or enter a variable that contains the command or expression.</source>
          <target state="translated">Введите команду или выражение либо укажите переменную, которая содержит команду или выражение.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>The Command parameter is required.</source>
          <target state="translated">Параметр Command является обязательным.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>CommonParameters</source>
          <target state="translated">CommonParameters</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutVariable, -OutBuffer, -PipelineVariable, -Verbose, -WarningAction, and -WarningVariable.</source>
          <target state="translated">Этот командлет поддерживает общие параметры:-Debug, - ErrorAction, - ErrorVariable, - InformationAction, - InformationVariable, - OutVariable,-OutBuffer, - PipelineVariable, - Verbose, - WarningAction и - WarningVariable.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>For more information, see about_CommonParameters (http://go.microsoft.com/fwlink/?LinkID=113216).</source>
          <target state="translated">Дополнительные сведения см. в разделе about_CommonParameters (http://go.microsoft.com/fwlink/?LinkID=113216).</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>INPUTS</source>
          <target state="translated">ВХОДНЫЕ ДАННЫЕ</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>System.String or PSObject</source>
          <target state="translated">System.String или PSObject</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>You can pipe an object that represents the command to Invoke-Expression.</source>
          <target state="translated">Объект, представляющий команду, можно передать в командлет Invoke-Expression по конвейеру.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Use the $input automatic variable to represent the input objects in the command.</source>
          <target state="translated">Используйте автоматическую переменную $input для представления входных объектов в команде.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>OUTPUTS</source>
          <target state="translated">ВЫХОДНЫЕ ДАННЫЕ</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>PSObject</source>
          <target state="translated">PSObject</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Returns the output that is generated by the invoked command (the value of the Command parameter).</source>
          <target state="translated">Возвращает выходные данные, созданные вызванной командой (значение параметра Command).</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>NOTES</source>
          <target state="translated">ПРИМЕЧАНИЯ</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>An expression is a statement that can be evaluated and produces a result, such as a Windows PowerShell command.</source>
          <target state="translated">Выражение является инструкцией, можно оценить и выдает результат, например команду Windows PowerShell.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Take reasonable precautions when using the Invoke-Expression cmdlet in scripts.</source>
          <target state="translated">Принимайте разумные меры предосторожности при использовании командлета Invoke-Expression в сценариях.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>When using Invoke-Expression to run a command that the user enters, verify that the command is safe to run before running it.</source>
          <target state="translated">При использовании командлета Invoke-Expression для выполнения команды, введенной пользователем, убедитесь в том, что команда безопасна для выполнения.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>In general, it is best to design your script with predefined input options, rather than allowing freeform input.</source>
          <target state="translated">Как правило, при создании сценариев лучше предусматривать предварительно определенные варианты входных данных, не допуская ввода данных в свободной форме.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>RELATED LINKS</source>
          <target state="translated">СВЯЗАННЫЕ ССЫЛКИ</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Invoke-Command</source>
          <target state="translated">Invoke-Command</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>