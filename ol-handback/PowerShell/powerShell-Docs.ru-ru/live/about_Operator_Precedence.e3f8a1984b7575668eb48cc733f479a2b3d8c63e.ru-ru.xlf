<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ru-ru">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-1c394fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">0a0800de22bb8f9beacceefada71fca137c2b960</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">reference\4.0\Microsoft.PowerShell.Core\About\about_Operator_Precedence.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions" />
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">e626cd6ab1d0ee46986ca80785e3c93301f2b8a5</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">38499558304974aacfe4a41d2a64e8c60090a4b1</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>about_Operator_Precedence</source>
          <target state="translated">about_Operator_Precedence</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>powershell, cmdlet</source>
          <target state="translated">PowerShell, командлет</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>About Operator Precedence</source>
          <target state="translated">О приоритет операторов</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>about_Operator_Precedence</source>
          <target state="translated">about_Operator_Precedence</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>TOPIC</source>
          <target state="translated">РАЗДЕЛ</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>about_Operator_Precedence</source>
          <target state="translated">about_Operator_Precedence</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>SHORT DESCRIPTION</source>
          <target state="translated">КРАТКОЕ ОПИСАНИЕ</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Lists the Windows PowerShell operators in precedence order.</source>
          <target state="translated">Содержит список операторов Windows PowerShell в порядке очередности.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>[This topic was contributed by Kirk Munro, a Windows PowerShell MVP from Ottawa, Ontario]</source>
          <target state="translated">[Этот раздел был, представленные Манро Кирк, MVP Windows PowerShell из Оттава, Онтарио]</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>LONG DESCRIPTION</source>
          <target state="translated">ПОДРОБНОЕ ОПИСАНИЕ</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Windows PowerShell operators let you construct simple, but powerful expressions.</source>
          <target state="translated">Операторы Windows PowerShell позволяют создать простой, но мощный выражения.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>This topic lists the operators in precedence order.</source>
          <target state="translated">В этом разделе перечислены операторы, перечисленные в порядке очередности.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Precedence order is the order in which Windows PowerShell evaluates the operators when multiple operators appear in the same expression.</source>
          <target state="translated">Очередность выполнения: порядок, в котором Windows PowerShell вычисляет операторы, если несколько операторов находятся в одном выражении.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>When operators have equal precedence, Windows PowerShell evaluates them from left to right.</source>
          <target state="translated">Если операторы имеют одинаковый приоритет, Windows PowerShell выполняет обработку слева направо.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>The exceptions are the assignment operators, the cast operators, and the negation operators (!, -not, -bnot), which are evaluated from right to left.</source>
          <target state="translated">Исключениями являются операторы присваивания, операторов приведения типов и операторы отрицания (!, - нет, - bnot), которые вычисляются слева направо.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>You can use enclosures, such as parentheses, to override the standard precedence order and force Windows PowerShell to evaluate the enclosed part of an expression before an unenclosed part.</source>
          <target state="translated">Можно использовать корпуса, таких как круглые скобки, чтобы переопределить стандартный порядок и заставить Windows PowerShell для оценки закрытой часть выражения перед unenclosed часть.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>In the following list, operators are listed in the order that they are evaluated.</source>
          <target state="translated">В следующем списке перечислены операторы в порядке их приоритета.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Operators on the same line, or in the same group, have equal precedence.</source>
          <target state="translated">Операторы в одной строке или в той же группе имеют одинаковый приоритет.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>The Operator column lists the operators.</source>
          <target state="translated">В столбце оператор перечислены операторы.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>The Reference column lists the Windows PowerShell Help topic in which the operator is described.</source>
          <target state="translated">Ссылочный столбец перечислены в разделе справки Windows PowerShell, в которой описан оператора.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>To display the topic, type "get-help &lt;topic-name&gt;".</source>
          <target state="translated">Чтобы отобразить раздел, введите «get-help &lt; имя раздела &gt;».</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>OPERATOR                         REFERENCE</source>
          <target state="translated">СПРАВОЧНИК ПО ОПЕРАТОРАМ</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>$()  @()                         about_Operators</source>
          <target state="translated">$ () @ about_Operators)</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>.</source>
          <target state="translated"> .</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>(dereference) :: (static)      about_Operators</source>
          <target state="translated">(разыменования):: about_Operators (статический)</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>[0] (index operator)             about_Operators</source>
          <target state="translated">[0] about_Operators (оператор индекса)</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>[int] (cast operators)           about_Operators</source>
          <target state="translated">[int] about_Operators (операторы приведения)</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>-split (unary) -join (unary)     about_Split, about_Join</source>
          <target state="translated">-разбиение (унарный) - соединения (унарный) about_Split, about_Join</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>, (comma operator)               about_Operators</source>
          <target state="translated">, about_Operators (Оператор-запятая)</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>++ --                            about_Assignment_Operators</source>
          <target state="translated">++--about_Assignment_Operators</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>-not !</source>
          <target state="translated">-не!</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>-bNot                     about_Logical_Operators, about_Comparison_Operators</source>
          <target state="translated">about_Logical_Operators - bNot, about_Comparison_Operators</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>..</source>
          <target state="translated">..</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>(range operator)              about_Operators</source>
          <target state="translated">about_Operators (оператор диапазона)</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>-f (format operator)             about_Operators</source>
          <target state="translated">about_Operators -f (формат оператор)</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>/ %                            about_Arithmetic_Operators</source>
          <target state="translated">/ % about_Arithmetic_Operators</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>about_Arithmetic_Operators</source>
          <target state="translated">about_Arithmetic_Operators</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>The following group of operators have equal precedence.</source>
          <target state="translated">Следующую группу Операторы имеют одинаковый приоритет.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Their case-sensitive and explicitly case-insensitive variants have the same precedence.</source>
          <target state="translated">Их варианты с учетом регистра и без учета регистра в явном виде имеют одинаковый приоритет.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>-split (binary)                  about_Split -join (binary)                   about_Join -is  -isnot  -as                 about_Type_Operators -eq  -ne  -gt  -gt  -lt  -le     about_Comparison_Operators -like  -notlike                  about_comparison_operators -match  -notmatch                about_comparison_operators -in -notIn                       about_comparison_operators -contains -notContains           about_comparison_operators -replace                         about_comparison_operators</source>
          <target state="translated">-разбиения (двоичный) about_Split-join (двоичный) about_Join-— - isnot-как about_Type_Operators - gt - ne - eq - gt - lt-le about_Comparison_Operators-как - notlike about_comparison_operators-соответствует about_comparison_operators - notmatch-в about_comparison_operators - notIn-содержит оператор не содержит - about_comparison_operators-замените about_comparison_operators</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>The list resumes here with the following operators in precedence order:</source>
          <target state="translated">Список здесь возобновляется с помощью следующих операторов в порядке приоритетности:</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>-band -bor -bxor                 about_Comparison_Operators</source>
          <target state="translated">-about_Comparison_Operators - bxor - bor полосы</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>-and -or -xor                    about_Comparison_Operators</source>
          <target state="translated">- и - или about_Comparison_Operators - xor</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>.</source>
          <target state="translated"> .</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>(dot-source)  &amp; (call)         about_Scopes, about_Operators</source>
          <target state="translated">(точка источник) &amp; about_Scopes (звонок), about_Operators</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>| (pipeline operator)            about_Operators</source>
          <target state="translated">| about_Operators (конвейерный оператор)</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>2&gt;  2&gt;&gt;  2&gt;&amp;1             about_Redirection</source>
          <target state="translated">2 &gt; 2 &gt;&gt; 2 &gt; &amp; 1 about_Redirection</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>=  +=  -=  *=  /= %=             about_Assignment_Operators</source>
          <target state="translated">= +=-= * = / = % = about_Assignment_Operators</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>EXAMPLES</source>
          <target state="translated">ПРИМЕРЫ</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>The following two commands show the arithmetic operators and the effect of using parentheses to force Windows PowerShell to evaluate the enclosed part of the expression first.</source>
          <target state="translated">Следующие две команды Показать арифметические операторы и эффект от использования скобки для принудительного Windows PowerShell в закрытой части выражения вычисляются в первую очередь.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>C:\PS&gt; 2 + 3 * 4</source>
          <target state="translated">C:\PS &gt; 2 + 3 * 4</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>14</source>
          <target state="translated">14</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>C:\PS&gt; (2 + 3) * 4</source>
          <target state="translated">C:\PS &gt; (2 + 3) * 4</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>20</source>
          <target state="translated">20</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>The following example gets the read-only text files from the local directory and saves them in the $read_only variable.</source>
          <target state="translated">Следующий пример возвращает только для чтения текстовых файлов из локального каталога и сохраняет их в переменной read_only.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>$read_only = get-childitem *.txt | where-object {$_.isReadOnly}</source>
          <target state="translated">$read_only = get-childitem *.txt | WHERE-object {$_.isReadOnly}</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>It is equivalent to the following example.</source>
          <target state="translated">Это эквивалентно следующему примеру.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>$read_only = ( get-childitem *.txt | where-object {$_.isReadOnly} )</source>
          <target state="translated">$read_only = (get-childitem *.txt | where-object {$_.isReadOnly})</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>Because the pipeline operator (|) has a higher precedence than the assignment operator (=), the files that the Get-ChildItem cmdlet gets are sent to the Where-Object cmdlet for filtering before they are assigned to the $read_only variable.</source>
          <target state="translated">Поскольку оператор конвейера (|) имеет более высокий приоритет, чем оператор присваивания (=), файлы, которые возвращает командлет Get-ChildItem отправляются в командлет Where-Object для фильтрации перед присваиванием переменной read_only.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>The following example demonstrates that the index operator takes precedence over the cast operator.</source>
          <target state="translated">В следующем примере показано, что оператор индекса имеет приоритет над оператора приведения.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>The first expression creates an array of three strings.</source>
          <target state="translated">Первое выражение создает массив из трех строк.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>Then, it uses the index operator with a value of 0 to select the first object in the array, which is the first string.</source>
          <target state="translated">Затем он использует оператор индекса со значением 0 для выбора первого объекта в массиве, который является первой строкой.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>Finally, it casts the selected object as a string.</source>
          <target state="translated">Наконец он приводит выбранного объекта как строку.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>In this case, the cast has no effect.</source>
          <target state="translated">В этом случае приведение не оказывает влияния.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>C:\PS&gt; [string]@('Windows','PowerShell','2.0')[0] Windows</source>
          <target state="translated">C:\PS &gt; string]@('Windows','PowerShell','2.0') [0] [Windows</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>The second expression uses parentheses to force the cast operation to occur before the index selection.</source>
          <target state="translated">Второе выражение используются скобки для принудительного выполнения операции приведения перед Выбор индекса.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>As a result, the entire array is cast as a (single) string.</source>
          <target state="translated">В результате весь массив преобразуется в строку (отдельный).</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>Then, the index operator selects the first item in the string array, which is the first character.</source>
          <target state="translated">Затем оператор индекса выбирает первый элемент в массиве строк, который является первым символом.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>C:\PS&gt; ([string]@('Windows','PowerShell','2.0'))[0]</source>
          <target state="translated">C:\PS &gt; ([string]@('Windows','PowerShell','2.0')) [0]</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>W</source>
          <target state="translated">W</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>In the following example, because the -gt (greater-than) operator has a higher precedence than the -and (logical AND) operator, the result of the expression is FALSE.</source>
          <target state="translated">В следующем примере поскольку - gt (больше-чем) оператор имеет более высокий приоритет, чем и (логическое и) оператор, результатом выражения является значение FALSE.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>C:\PS&gt; 2 -gt 4 -and 1 False</source>
          <target state="translated">C:\PS &gt; 2 - gt-4 - и 1 False</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>It is equivalent to the following expression.</source>
          <target state="translated">Это эквивалентно следующее выражение.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>C:\PS&gt; (2 -gt 4) -and 1 False</source>
          <target state="translated">C:\PS &gt; (2 - gt-4) — и False, 1</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>If the -and operator had higher precedence, the answer would be TRUE.</source>
          <target state="translated">Если и оператор бы более высокий приоритет, результатом будет значение TRUE.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>C:\PS&gt; 2 -gt (4 -and 1) True</source>
          <target state="translated">C:\PS &gt; 2 - gt (4 - и 1) значение True</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>However, this example demonstrates an important principle of managing operator precedence.</source>
          <target state="translated">Однако в этом примере демонстрируется важнейшим принципом управление приоритета операторов.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>When an expression is difficult for people to interpret, use parentheses to force the evaluation order, even when it forces the default operator precedence.</source>
          <target state="translated">Если выражение трудны для интерпретации, следует используйте скобки для принудительного порядка оценки, даже в том случае, если он заставляет приоритет операторов по умолчанию.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>The parentheses make your intentions clear to people who are reading and maintaining your scripts.</source>
          <target state="translated">Скобки внести свои намерения снимите людей, которые читают и поддержка сценариев.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>SEE ALSO</source>
          <target state="translated">СМ. ТАКЖЕ</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>about_Assignment_Operators about_Comparison_Operators about_Join about_Logical_Operators about_Operators about_Redirection about_Scopes about_Split about_Type_Operators</source>
          <target state="translated">about_Assignment_Operators about_Comparison_Operators about_Join about_Logical_Operators about_Operators about_Redirection about_Scopes about_Split about_Type_Operators</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>