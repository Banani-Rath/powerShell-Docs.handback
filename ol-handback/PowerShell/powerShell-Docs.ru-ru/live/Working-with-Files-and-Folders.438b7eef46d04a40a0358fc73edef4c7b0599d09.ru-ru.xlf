<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ru-ru">
    <header>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions" />
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">scripting\getting-started\cookbooks\Working-with-Files-and-Folders.md</xliffext:olfilepath>
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">c9bc3460e25063347de3c594ef5ce437b0f8961d</xliffext:olfilehash>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-39517ae" tool-company="Microsoft" />
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Working with Files and Folders</source>
          <target state="translated">Работа с файлами и папками</target>         
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Working with Files and Folders</source>
          <target state="translated">Работа с файлами и папками</target>         
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Navigating through Windows PowerShell drives and manipulating the items on them is similar to manipulating files and folders on Windows physical disk drives.</source>
          <target state="translated">Просмотр содержимого дисков Windows PowerShell и управление хранящимися на них элементами аналогично управлению файлами и папками на физических дисках Windows.</target>         
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>We will discuss how to deal with specific file and folder manipulation tasks in this section.</source>
          <target state="translated">В этом разделе мы обсудим выполнение отдельных задач управления файлами и папками.</target>         
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Listing All the Files and Folders Within a Folder</source>
          <target state="translated">Получение списка файлов и папок, содержащихся в папке</target>         
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>You can get all items directly within a folder by using <bpt id="p1">**</bpt>Get\-ChildItem<ept id="p1">**</ept>.</source>
          <target state="translated">Извлечь все элементы непосредственно из папки можно с помощью командлета <bpt id="p1">**</bpt>Get-ChildItem<ept id="p1">**</ept>.</target>         
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Add the optional <bpt id="p1">**</bpt>Force<ept id="p1">**</ept> parameter to display hidden or system items.</source>
          <target state="translated">Для отображения скрытых и системных элементов добавьте необязательный параметр <bpt id="p1">**</bpt>Force<ept id="p1">**</ept>.</target>         
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>For example, this command displays the direct contents of Windows PowerShell Drive C (which is the same as the Windows physical drive C):</source>
          <target state="translated">Например, эта команда отображает непосредственное содержимое диска C Windows PowerShell (которое совпадает с содержимым физического диска C Windows):</target>         
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>The command lists only the directly contained items, much like using Cmd.exe's <bpt id="p1">**</bpt>DIR<ept id="p1">**</ept> command or <bpt id="p2">**</bpt>ls<ept id="p2">**</ept> in a UNIX shell.</source>
          <target state="translated">Эта команда выводит только элементы, содержащиеся на диске непосредственно, так же как и команда <bpt id="p1">**</bpt>DIR<ept id="p1">**</ept> оболочки Cmd.exe или команда <bpt id="p2">**</bpt>ls<ept id="p2">**</ept> оболочки UNIX.</target>         
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>In order to show contained items, you need to specify the <bpt id="p1">**</bpt>\-Recurse<ept id="p1">**</ept> parameter as well.</source>
          <target state="translated">Для показа вложенных элементов необходимо также указать параметр <bpt id="p1">**</bpt>-Recurse<ept id="p1">**</ept>.</target>         
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>(This can take an extremely long time to complete.) To list everything on the C drive:</source>
          <target state="translated">(Время выполнения этой операции будет очень велико.) Для вывода всего содержимого диска C введите:</target>         
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Get\-ChildItem<ept id="p1">**</ept> can filter items with its <bpt id="p2">**</bpt>Path<ept id="p2">**</ept>, <bpt id="p3">**</bpt>Filter<ept id="p3">**</ept>, <bpt id="p4">**</bpt>Include<ept id="p4">**</ept>, and <bpt id="p5">**</bpt>Exclude<ept id="p5">**</ept> parameters, but those are typically based only on name.</source>
          <target state="translated">Командлет <bpt id="p1">**</bpt>Get-ChildItem<ept id="p1">**</ept> позволяет отфильтровать элементы с помощью параметров <bpt id="p2">**</bpt>Path<ept id="p2">**</ept>, <bpt id="p3">**</bpt>Filter<ept id="p3">**</ept>, <bpt id="p4">**</bpt>Include<ept id="p4">**</ept> и <bpt id="p5">**</bpt>Exclude<ept id="p5">**</ept>, но обычно осуществляется лишь фильтрация по имени.</target>         
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>You can perform complex filtering based on other properties of items by using <bpt id="p1">**</bpt>Where\-Object<ept id="p1">**</ept>.</source>
          <target state="translated">Сложную фильтрацию на основе других свойств элементов можно выполнить с помощью командлета <bpt id="p1">**</bpt>Where-Object<ept id="p1">**</ept>.</target>         
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>The following command finds all executables within the Program Files folder that were last modified after October 1, 2005 and which are neither smaller than 1 megabyte nor larger than 10 megabytes:</source>
          <target state="translated">Следующая команда находит все исполняемые файлы в папке Program Files, которые были в последний раз изменены после 1 октября 2005 г. и размер которых не менее одного мегабайта и не более десяти мегабайт:</target>         
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Copying Files and Folders</source>
          <target state="translated">Копирование файлов и папок</target>         
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Copying is done with <bpt id="p1">**</bpt>Copy\-Item<ept id="p1">**</ept>.</source>
          <target state="translated">Копирование выполняется с помощью командлета <bpt id="p1">**</bpt>Copy-Item<ept id="p1">**</ept>.</target>         
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>The following command backs up C:\\boot.ini to C:\\boot.bak:</source>
          <target state="translated">Следующая команда создает резервную копию C:\boot.bak для файла C:\boot.ini:</target>         
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>If the destination file already exists, the copy attempt fails.</source>
          <target state="translated">Если целевой файл уже существует, то попытка копирования завершается неудачей.</target>         
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>To overwrite a pre\-existing destination, use the Force parameter:</source>
          <target state="translated">Для того чтобы перезаписать существующий целевой файл, используйте параметр Force:</target>         
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>This command works even when the destination is read\-only.</source>
          <target state="translated">Эта команда работает, даже если целевой объект доступен только для чтения.</target>         
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Folder copying works the same way.</source>
          <target state="translated">Так же выполняется и копирование папок.</target>         
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>This command copies the folder C:\\temp\\test1 to the new folder c:\\temp\\DeleteMe recursively:</source>
          <target state="translated">Эта команда рекурсивно копирует папку "C:\temp\test1" в новую папку "c:\temp\DeleteMe":</target>         
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>You can also copy a selection of items.</source>
          <target state="translated">Можно также скопировать избранные элементы.</target>         
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>The following command copies all .txt files contained anywhere in c:\\data to c:\\temp\\text:</source>
          <target state="translated">Следующая команда копирует все файлы .txt, содержащиеся в папке "c:\data", в папку "c:\temp\text":</target>         
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>You can still use other tools to perform file system copies.</source>
          <target state="translated">Для копирования элементов файловой системы можно использовать и другие средства.</target>         
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>XCOPY, ROBOCOPY, and COM objects, such as the <bpt id="p1">**</bpt>Scripting.FileSystemObject,<ept id="p1">**</ept> all work in Windows PowerShell.</source>
          <target state="translated">В Windows PowerShell по-прежнему работают команды XCOPY, ROBOCOPY и такие COM-объекты, как <bpt id="p1">**</bpt>Scripting.FileSystemObject<ept id="p1">**</ept>.</target>         
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>For example, you can use the Windows Script Host <bpt id="p1">**</bpt>Scripting.FileSystem COM<ept id="p1">**</ept> class to back up C:\\boot.ini to C:\\boot.bak:</source>
          <target state="translated">Например, можно воспользоваться COM-классом <bpt id="p1">**</bpt>Scripting.FileSystem<ept id="p1">**</ept> сервера сценариев Windows для создания резервной копии файла C:\boot.ini в файле C:\boot.bak:</target>         
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Creating Files and Folders</source>
          <target state="translated">Создание файлов и папок</target>         
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Creating new items works the same on all Windows PowerShell providers.</source>
          <target state="translated">Создание новых элементов осуществляется одинаковым образом всеми поставщиками Windows PowerShell.</target>         
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>If a Windows PowerShell provider has more than one type of item—for example, the FileSystem Windows PowerShell provider distinguishes between directories and files—you need to specify the item type.</source>
          <target state="translated">Если поставщик Windows PowerShell поддерживает более одного типа элементов (например, поставщик Windows PowerShell FileSystem различает каталоги и файлы), необходимо указать тип элемента.</target>         
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>This command creates a new folder C:\\temp\\New Folder:</source>
          <target state="translated">Эта команда создает папку "C:\temp\New Folder":</target>         
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>This command creates a new empty file C:\\temp\\New Folder\\file.txt</source>
          <target state="translated">Эта команда создает пустой файл "C:\temp\New Folder\file.txt":</target>         
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Removing All Files and Folders Within a Folder</source>
          <target state="translated">Удаление всех файлов и папок, содержащихся в папке</target>         
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>You can remove contained items using <bpt id="p1">**</bpt>Remove\-Item<ept id="p1">**</ept>, but you will be prompted to confirm the removal if the item contains anything else.</source>
          <target state="translated">Удалить вложенные элементы можно с помощью командлета <bpt id="p1">**</bpt>Remove-Item<ept id="p1">**</ept>, однако он потребует подтверждение удаления, если элемент сам что-нибудь содержит.</target>         
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>For example, if you attempt to delete the folder C:\\temp\\DeleteMe that contains other items, Windows PowerShell prompts you for confirmation before deleting the folder:</source>
          <target state="translated">Например, при попытке удаления папки "C:\temp\DeleteMe", которая содержит другие элементы, Windows PowerShell предварительно предложит подтвердить удаление этой папки:</target>         
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>If you do not want to be prompted for each contained item, specify the <bpt id="p1">**</bpt>Recurse<ept id="p1">**</ept> parameter:</source>
          <target state="translated">Если подтверждение для каждого вложенного элемента нежелательно, задайте параметр <bpt id="p1">**</bpt>Recurse<ept id="p1">**</ept>:</target>         
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Mapping a Local Folder as a Windows Accessible Drive</source>
          <target state="translated">Отображение локальной папки в виде диска, доступного в Windows</target>         
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>You can also map a local folder, using the <bpt id="p1">**</bpt>subst<ept id="p1">**</ept> command.</source>
          <target state="translated">Отобразить локальную папку можно с помощью команды <bpt id="p1">**</bpt>subst<ept id="p1">**</ept>.</target>         
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>The following command creates a local drive P: rooted in the local Program Files directory:</source>
          <target state="translated">Следующая команда создает локальный диск P:, корневым каталогом которого является локальный каталог Program Files:</target>         
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Just as with network drives, drives mapped within Windows PowerShell using <bpt id="p1">**</bpt>subst<ept id="p1">**</ept> are immediately visible to the Windows PowerShell shell.</source>
          <target state="translated">Как и в случае сетевых дисков, диски, отображенные в оболочке Windows PowerShell с помощью команды <bpt id="p1">**</bpt>subst<ept id="p1">**</ept>, немедленно становятся доступными оболочке Windows PowerShell.</target>         
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Reading a Text File into an Array</source>
          <target state="translated">Чтение текстового файла в массив</target>         
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>One of the more common storage formats for text data is in a file with separate lines treated as distinct data elements.</source>
          <target state="translated">Одним из наиболее общих форматов хранения текстовых данных является файл, отдельные строки которого рассматриваются как отдельные элементы.</target>         
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>Get\-Content<ept id="p1">**</ept> cmdlet can be used to read an entire file in one step, as shown here:</source>
          <target state="translated">Командлет <bpt id="p1">**</bpt>Get-Content<ept id="p1">**</ept> используется для чтения всего файла за один шаг, как показано далее:</target>         
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Get\-Content<ept id="p1">**</ept> already treats the data read from the file as an array, with one element per line of file content.</source>
          <target state="translated">Командлет <bpt id="p1">**</bpt>Get-Content<ept id="p1">**</ept> сразу рассматривает данные, считанные из файла, как массив с одним элементом на строку содержимого файла.</target>         
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>You can confirm this by checking the <bpt id="p1">**</bpt>Length<ept id="p1">**</ept> of the returned content:</source>
          <target state="translated">Убедиться в этом можно, проверив свойство <bpt id="p1">**</bpt>Length<ept id="p1">**</ept> полученного содержимого:</target>         
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>This command is most useful for getting lists of information into Windows PowerShell directly.</source>
          <target state="translated">Эта команда наиболее полезна для непосредственного ввода в Windows PowerShell информационных списков.</target>         
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>For example, you might store a list of computer names or IP addresses in a file C:\\temp\\domainMembers.txt, with one name on each line of the file.</source>
          <target state="translated">Например, можно хранить в файле "C:\temp\domainMembers.txt" список имен компьютеров или IP-адресов по одному имени на каждую строку файла.</target>         
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>You can use <bpt id="p1">**</bpt>Get\-Content<ept id="p1">**</ept> to retrieve the file contents and put them in the variable <bpt id="p2">**</bpt>$Computers<ept id="p2">**</ept>:</source>
          <target state="translated">Можно использовать командлет <bpt id="p1">**</bpt>Get-Content<ept id="p1">**</ept>, чтобы извлечь содержимое файла и поместить его в переменную <bpt id="p2">**</bpt>$Computers<ept id="p2">**</ept>:</target>         
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>$Computers<ept id="p1">**</ept> is now an array containing a computer name in each element.</source>
          <target state="translated">Теперь переменная <bpt id="p1">**</bpt>$Computers<ept id="p1">**</ept> представляет собой массив, содержащий в каждом элементе имя компьютера.</target>         
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>