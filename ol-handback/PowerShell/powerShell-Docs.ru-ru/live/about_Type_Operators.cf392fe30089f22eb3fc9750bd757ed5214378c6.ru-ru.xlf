<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ru-ru">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-1c394fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">aceb61f7555341bffff6174b47d35e17c6265026</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">reference\4.0\Microsoft.PowerShell.Core\About\about_Type_Operators.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions" />
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">18085df7cb3aa4cc19bbaf334e24d3a9ed3ac926</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">410c464fc9702383f4f9a560e9f362d0b9c6d5f9</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>about_Type_Operators</source>
          <target state="translated">about_Type_Operators</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>powershell, cmdlet</source>
          <target state="translated">PowerShell, командлет</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>About Type Operators</source>
          <target state="translated">Об операторах</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>about_Type_Operators</source>
          <target state="translated">about_Type_Operators</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>about_Type_Operators</source>
          <target state="translated">about_Type_Operators</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>SHORT DESCRIPTION</source>
          <target state="translated">КРАТКОЕ ОПИСАНИЕ</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Describes the operators that work with Microsoft .NET Framework types.</source>
          <target state="translated">Описывает операторы, которые работают с типами Microsoft .NET Framework.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>LONG DESCRIPTION</source>
          <target state="translated">ПОДРОБНОЕ ОПИСАНИЕ</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>The Boolean type operators (-is and -isNot) tell whether an object is an instance of a specified .NET Framework type.</source>
          <target state="translated">Операторы логический тип (-— и - isNot) определить, является ли объект экземпляром указанного типа .NET Framework.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The -is operator returns a value of TRUE if the type matches and a value of FALSE otherwise.</source>
          <target state="translated">Оператор возвращает значение TRUE, если тип совпадает и значение FALSE в противном случае.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>The -isNot operator returns a value of FALSE if the type matches and a value of TRUE otherwise.</source>
          <target state="translated">Оператор - isNot в противном случае возвращает значение FALSE, если соответствующий тип и значение TRUE.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>The -as operator tries to convert the input object to the specified .NET Framework type.</source>
          <target state="translated">- Как оператор предпринимает попытку преобразования входного объекта в указанный тип .NET Framework.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>If it succeeds, it returns the converted object.</source>
          <target state="translated">В случае успеха, он возвращает преобразованный объект.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>It if fails, it returns nothing.</source>
          <target state="translated">Он если завершается с ошибкой, он не возвращает ничего.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>It does not return an error.</source>
          <target state="translated">Он не возвращает ошибку.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>The following table lists the type operators in  Windows PowerShell�.</source>
          <target state="translated">В следующей таблице перечислены операторы типа в Windows PowerShell.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>The syntax of the type operators is as follows:</source>
          <target state="translated">Синтаксис операторов типа выглядит следующим образом:</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>You can also use the following syntax:</source>
          <target state="translated">Кроме того, можно использовать следующий синтаксис:</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>To specify the .NET Framework type, enclose the type name in brackets ([ ]), or enter the type as a string, such as [DateTime] or "DateTime" for System.DateTime.</source>
          <target state="translated">Чтобы указать тип .NET Framework, заключите имя типа в квадратные скобки ([]) или введите тип как строки, например [DateTime] или «DateTime» System.DateTime.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>If the type is not at the root of the system namespace, specify the full name of the object type.</source>
          <target state="translated">Если тип не в корневом пространстве имен system, укажите полное имя типа объекта.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>You can omit "System.".</source>
          <target state="translated">Параметр «System».</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>For example, to specify System.Diagnostics.Process, enter [System.Diagnostics.Process], [Diagnostics.Process], or "diagnostics.process".</source>
          <target state="translated">Например, чтобы указать System.Diagnostics.Process, введите [System.Diagnostics.Process] [Diagnostics.Process] или «diagnostics.process».</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>The type operators always return a Boolean value, even if the input is a collection of objects.</source>
          <target state="translated">Операторы типа всегда возвращают логическое значение, даже если вход — коллекция объектов.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>However, when the input is a collection, the type operators match the .NET Framework type of the collection.</source>
          <target state="translated">Тем не менее если входные данные — это коллекция, операторы тип соответствует типу .NET Framework коллекции.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>They do not match the type of each object, even when all of the objects are of the same type.</source>
          <target state="translated">Они не совпадают тип каждого объекта, даже в том случае, если все объекты имеют тот же тип.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>To find the .NET Framework type of an object, use the Get-Member cmdlet.</source>
          <target state="translated">Чтобы найти тип объекта .NET Framework, используйте командлет Get-Member.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Or, use the GetType method of all the objects together with the FullName property of this method.</source>
          <target state="translated">Или используйте метод GetType всех объектов вместе с свойства FullName этого метода.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>For example, the following statement gets the type of the return value of a Get-Culture command:</source>
          <target state="translated">Например следующая инструкция возвращает тип возвращаемого значения команда Get-Culture:</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>EXAMPLES</source>
          <target state="translated">ПРИМЕРЫ</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>The following examples show some uses of the Type operators:</source>
          <target state="translated">В следующих примерах применениям операторы типа:</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>The following example shows that when the input is a collection of objects, the matching type is the .NET Framework type of the collection, not the type of the individual objects in the collection.</source>
          <target state="translated">В следующем примере показано, что если входные данные — это совокупность объектов, совпадающий тип является типом .NET Framework коллекции, а не тип отдельных объектов в коллекции.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>In this example, although both the Get-Culture and Get-UICulture cmdlets return System.Globalization.CultureInfo objects, a collection of these objects is a System.Object array.</source>
          <target state="translated">В этом примере несмотря на то, что командлеты Get-Culture и Get UICulture возвращают объекты System.Globalization.CultureInfo коллекцию этих объектов является массивом System.Object.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>The following examples show how to use the -as operator.</source>
          <target state="translated">Следующие примеры демонстрируют использование - как оператор.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>The following example shows that when the -as operator cannot convert the input object to the .NET Framework type, it returns nothing.</source>
          <target state="translated">В следующем примере показано, когда как оператор не может преобразовать входной объект типа платформы .NET Framework, он возвращает значение nothing.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>SEE ALSO</source>
          <target state="translated">СМ. ТАКЖЕ</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>about_Operators</source>
          <target state="translated">about_Operators</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>