<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ru-ru">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-1c394fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">128b330f029b09d6d15ebc5a1cda9c52bf275293</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">reference\5.0\Microsoft.PowerShell.Core\ForEach-Object.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions" />
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">879467f5044fb17e5a8f5454d8866973d9eb2aff</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">c6c78fd8c27534de8e0cc7bbe70b148ad56501c1</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>powershell, cmdlet</source>
          <target state="translated">PowerShell, командлет</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>ForEach-Object</source>
          <target state="translated">ForEach-Object</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>ForEach-Object</source>
          <target state="translated">ForEach-Object</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>SYNOPSIS</source>
          <target state="translated">КРАТКИЙ ОБЗОР</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Performs an operation against each item in a collection of input objects.</source>
          <target state="translated">Выполняет операцию для каждого элемента в коллекции входных объектов.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>SYNTAX</source>
          <target state="translated">СИНТАКСИС</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>ScriptBlockSet (Default)</source>
          <target state="translated">ScriptBlockSet (по умолчанию)</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>PropertyAndMethodSet</source>
          <target state="translated">PropertyAndMethodSet</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>DESCRIPTION</source>
          <target state="translated">ОПИСАНИЕ</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>ForEach-Object<ept id="p1">**</ept> cmdlet performs an operation on each item in a collection of input objects.</source>
          <target state="translated"> <bpt id="p1">**</bpt>ForEach-Object<ept id="p1">**</ept> выполняет операцию для каждого элемента в коллекции входных объектов.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>The input objects can be piped to the cmdlet or specified by using the <bpt id="p1">*</bpt>InputObject<ept id="p1">*</ept> parameter.</source>
          <target state="translated">Входные объекты можно по конвейеру в командлет или с помощью <bpt id="p1">*</bpt>InputObject<ept id="p1">*</ept> параметр.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Starting in Windows PowerShell 3.0, there are two different ways to construct a <bpt id="p1">**</bpt>ForEach-Object<ept id="p1">**</ept> command.</source>
          <target state="translated">Начиная с Windows PowerShell 3.0, существует два способа создания <bpt id="p1">**</bpt>ForEach-Object<ept id="p1">**</ept> команды.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Script block<ept id="p1">**</ept>.</source>
          <target state="translated"><bpt id="p1">**</bpt>Блок сценария<ept id="p1">**</ept>.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>You can use a script block to specify the operation.</source>
          <target state="translated">Можно использовать блок скрипта, чтобы указать операцию.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Within the script block, use the $_ variable to represent the current object.</source>
          <target state="translated">В блоке скрипта используйте переменную $_ для представления текущего объекта.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>The script block is the value of the <bpt id="p1">*</bpt>Process<ept id="p1">*</ept> parameter.</source>
          <target state="translated">Блок скрипта является значение <bpt id="p1">*</bpt>процесс<ept id="p1">*</ept> параметр.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>The script block can contain any Windows PowerShell script.</source>
          <target state="translated">Блок скрипта может содержать любой скрипт Windows PowerShell.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>For example, the following command gets the value of the <bpt id="p1">**</bpt>ProcessName<ept id="p1">**</ept> property of each process on the computer.</source>
          <target state="translated">Например, следующая команда возвращает значение <bpt id="p1">**</bpt>ProcessName<ept id="p1">**</ept> каждого процесса на компьютере.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Operation statement<ept id="p1">**</ept>.</source>
          <target state="translated"><bpt id="p1">**</bpt>Инструкция<ept id="p1">**</ept>.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>You can also write an operation statement, which is much more like natural language.</source>
          <target state="translated">Можно также написать инструкцию операции, которая гораздо больше похож на естественный язык.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>You can use the operation statement to specify a property value or call a method.</source>
          <target state="translated">С помощью инструкции операции можно указать значение свойства или вызвать метод.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Operation statements were introduced in Windows PowerShell 3.0.</source>
          <target state="translated">Инструкции операций появились в Windows PowerShell 3.0.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>For example, the following command also gets the value of the <bpt id="p1">**</bpt>ProcessName<ept id="p1">**</ept> property of each process on the computer.</source>
          <target state="translated">Например, следующая команда также получает значение <bpt id="p1">**</bpt>ProcessName<ept id="p1">**</ept> каждого процесса на компьютере.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>When using the script block format, in addition to using the script block that describes the operations that are performed on each input object, you can provide two additional script blocks.</source>
          <target state="translated">При использовании формата блока скрипта можно указать два дополнительных блока в дополнение к блоку, описывающему операции, выполняемые с каждым входным объектом.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>The Begin script block, which is the value of the <bpt id="p1">*</bpt>Begin<ept id="p1">*</ept> parameter, runs before this cmdlet processes the first input object.</source>
          <target state="translated">Блок сценариев Begin, который является значением <bpt id="p1">*</bpt>Начать<ept id="p1">*</ept> выполняется перед обработкой первого входного объекта этого командлета.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>The End script block, which is the value of the <bpt id="p1">*</bpt>End<ept id="p1">*</ept> parameter, runs after this cmdlet processes the last input object.</source>
          <target state="translated">Блок сценариев End, который является значением <bpt id="p1">*</bpt>End<ept id="p1">*</ept> выполняется после этого командлет обрабатывает последнего входного объекта.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>EXAMPLES</source>
          <target state="translated">ПРИМЕРЫ</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Example 1: Divide integers in an array</source>
          <target state="translated">Пример 1: Деление целых чисел в массив</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>This command takes an array of three integers and divides each one of them by 1024.</source>
          <target state="translated">Эта команда принимает массив из трех целых чисел и делит каждое число на 1024.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Example 2: Get the length of all the files in a directory</source>
          <target state="translated">Пример 2: Получение длины всех файлов в каталоге</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>This command gets the files and directories in the Windows PowerShell installation directory ($pshome) and passes them to the <bpt id="p1">**</bpt>ForEach-Object<ept id="p1">**</ept> cmdlet.</source>
          <target state="translated">Эта команда возвращает файлы и каталоги в каталоге установки Windows PowerShell ($pshome) и передает их <bpt id="p1">**</bpt>ForEach-Object<ept id="p1">**</ept> командлета.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>If the object is not a directory, the script block gets the name of the file, divides the value of its <bpt id="p1">**</bpt>Length<ept id="p1">**</ept> property by 1024, and adds a space (" ") to separate it from the next entry.</source>
          <target state="translated">Если объект не является каталогом, блок скрипта возвращает имя файла, делит значение его <bpt id="p1">**</bpt>Длина<ept id="p1">**</ept> свойство на 1024 и добавляет пробел («») и отделяет его от следующей записи.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>The cmdlet uses the <bpt id="p1">**</bpt>PSISContainer<ept id="p1">**</ept> property to determine whether an object is a directory.</source>
          <target state="translated">Командлет использует <bpt id="p1">**</bpt>PSISContainer<ept id="p1">**</ept> Свойства, чтобы определить, является ли объект каталога.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Example 3: Operate on the most recent System events</source>
          <target state="translated">Пример 3: Оперируют самые последние события системы</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>This command gets the 1000 most recent events from the System event log and stores them in the $Events variable.</source>
          <target state="translated">Эта команда возвращает 1000 последних событий из системного журнала событий и сохраняет их в переменной $Events.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>It then pipes the events to the <bpt id="p1">**</bpt>ForEach-Object<ept id="p1">**</ept> cmdlet.</source>
          <target state="translated">Затем он передает события <bpt id="p1">**</bpt>ForEach-Object<ept id="p1">**</ept> командлета.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">*</bpt>Begin<ept id="p1">*</ept> parameter displays the current date and time.</source>
          <target state="translated"> <bpt id="p1">*</bpt>Начать<ept id="p1">*</ept> параметра отображает текущую дату и время.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Next, the <bpt id="p1">*</bpt>Process<ept id="p1">*</ept> parameter uses the <bpt id="p2">**</bpt>Out-File<ept id="p2">**</ept> cmdlet to create a text file that is named events.txt and stores the message property of each of the events in that file.</source>
          <target state="translated">Далее, <bpt id="p1">*</bpt>процесс<ept id="p1">*</ept> использует параметр <bpt id="p2">**</bpt>командлет Out-File<ept id="p2">**</ept> командлет, чтобы создать текстовый файл с именем events.txt и сохраняет свойство сообщения для каждого события в этом файле.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Last, the <bpt id="p1">*</bpt>End<ept id="p1">*</ept> parameter is used to display the date and time after all of the processing has completed.</source>
          <target state="translated">Последнее, <bpt id="p1">*</bpt>End<ept id="p1">*</ept> параметр используется для отображения даты и времени в конце концов Обработка завершена.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Example 4: Change the value of a Registry key</source>
          <target state="translated">Пример 4: Измените значение раздела реестра</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>This command changes the value of the <bpt id="p1">**</bpt>RemotePath<ept id="p1">**</ept> registry entry in all of the subkeys under the HKCU:\Network key to uppercase text.</source>
          <target state="translated">Эта команда изменяет значение <bpt id="p1">**</bpt>RemotePath<ept id="p1">**</ept> реестра во всех подразделах \network на текст в верхнем регистре.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>You can use this format to change the form or content of a registry entry value.</source>
          <target state="translated">Этот формат можно использовать для изменения формы или содержимого раздела реестра.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Each subkey in the <bpt id="p1">**</bpt>Network<ept id="p1">**</ept> key represents a mapped network drive that will reconnect at logon.</source>
          <target state="translated">Каждый подраздел <bpt id="p1">**</bpt>сети<ept id="p1">**</ept> ключ представляет сопоставленный сетевой диск, который будет подключаться при входе в систему.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>RemotePath<ept id="p1">**</ept> entry contains the UNC path of the connected drive.</source>
          <target state="translated"> <bpt id="p1">**</bpt>RemotePath<ept id="p1">**</ept> запись содержит UNC-путь подключенного диска.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>For example, if you map the E: drive to <ph id="ph1">\\\\</ph>Server\Share, there will be an E subkey of HKCU:\Network and the value of the <bpt id="p1">**</bpt>RemotePath<ept id="p1">**</ept> registry entry in the E subkey will be <ph id="ph2">\\\\</ph>Server\Share.</source>
          <target state="translated">Например, если сопоставить диск E: для <ph id="ph1">\\\\</ph>«сервер\общий ресурс», будет существовать подраздел E для HKCU: \network, а значение <bpt id="p1">**</bpt>RemotePath<ept id="p1">**</ept> записи реестра в подраздел E будет <ph id="ph2">\\\\</ph>«сервер\общий ресурс».</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>The command uses the Get-ItemProperty cmdlet to get all of the subkeys of the <bpt id="p1">**</bpt>Network<ept id="p1">**</ept> key and the Set-ItemProperty cmdlet to change the value of the <bpt id="p2">**</bpt>RemotePath<ept id="p2">**</ept> registry entry in each key.</source>
          <target state="translated">Команда использует командлет Get-ItemProperty для получения всех подразделов <bpt id="p1">**</bpt>сети<ept id="p1">**</ept> ключа и командлет Set-ItemProperty, чтобы изменить значение <bpt id="p2">**</bpt>RemotePath<ept id="p2">**</ept> запись реестра в каждом ключе.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>In the <bpt id="p1">**</bpt>Set-ItemProperty<ept id="p1">**</ept> command, the path is the value of the <bpt id="p2">**</bpt>PSPath<ept id="p2">**</ept> property of the registry key.</source>
          <target state="translated">В <bpt id="p1">**</bpt>Set-ItemProperty<ept id="p1">**</ept> команды путь имеет значение <bpt id="p2">**</bpt>PSPath<ept id="p2">**</ept> свойство раздела реестра.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>This is a property of the Microsoft .NET Framework object that represents the registry key, not a registry entry.</source>
          <target state="translated">Это свойство объекта Microsoft .NET Framework, который представляет раздел реестра, а не запись реестра.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>The command uses the <bpt id="p1">**</bpt>ToUpper()<ept id="p1">**</ept> method of the <bpt id="p2">**</bpt>RemotePath<ept id="p2">**</ept> value, which is a string (REG_SZ).</source>
          <target state="translated">Команда использует <bpt id="p1">**</bpt>ToUpper()<ept id="p1">**</ept> метод <bpt id="p2">**</bpt>RemotePath<ept id="p2">**</ept> значение, которое является строкой (REG_SZ).</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Because <bpt id="p1">**</bpt>Set-ItemProperty<ept id="p1">**</ept> is changing the property of each key, the <bpt id="p2">**</bpt>ForEach-Object<ept id="p2">**</ept> cmdlet is required to access the property.</source>
          <target state="translated">Поскольку <bpt id="p1">**</bpt>Set-ItemProperty<ept id="p1">**</ept> изменяет свойство каждого ключа <bpt id="p2">**</bpt>ForEach-Object<ept id="p2">**</ept> необходим для доступа к свойству.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Example 5: Use the $Null automatic variable</source>
          <target state="translated">Пример 5: Использование автоматической переменной $Null</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>This example shows the effect of piping the $Null automatic variable to the <bpt id="p1">**</bpt>ForEach-Object<ept id="p1">**</ept> cmdlet.</source>
          <target state="translated">В этом примере показано влияние передачи автоматической переменной $Null <bpt id="p1">**</bpt>ForEach-Object<ept id="p1">**</ept> командлета.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Because Windows PowerShell treats null as an explicit placeholder, the <bpt id="p1">**</bpt>ForEach-Object<ept id="p1">**</ept> cmdlet generates a value for $Null, just as it does for other objects that you pipe to it.</source>
          <target state="translated">Поскольку Windows PowerShell интерпретирует null как явный местозаполнитель, <bpt id="p1">**</bpt>ForEach-Object<ept id="p1">**</ept> создает значение для $Null, так же, как для других объектов, которые необходимо передать.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>For more information about the $Null automatic variable, see about_Automatic_Variables.</source>
          <target state="translated">Дополнительные сведения об автоматической переменной $Null см. в разделе about_Automatic_Variables.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Example 6: Get property values</source>
          <target state="translated">Пример 6: Получение значений свойств</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>These commands gets the value of the <bpt id="p1">**</bpt>Path<ept id="p1">**</ept> property of all installed Windows PowerShell modules.</source>
          <target state="translated">Эти команды возвращают значение <bpt id="p1">**</bpt>путь<ept id="p1">**</ept> всех установленных модулей Windows PowerShell.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>They use the <bpt id="p1">*</bpt>MemberName<ept id="p1">*</ept> parameter to specify the <bpt id="p2">**</bpt>Path<ept id="p2">**</ept> property of modules.</source>
          <target state="translated">Они используют <bpt id="p1">*</bpt>MemberName<ept id="p1">*</ept> для указания <bpt id="p2">**</bpt>путь<ept id="p2">**</ept> модулей.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>The second command is equivalent to the first.</source>
          <target state="translated">Вторая команда эквивалента первой.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>It uses the <bpt id="p1">**</bpt>Foreach<ept id="p1">**</ept> alias of the <bpt id="p2">**</bpt>ForEach-Object<ept id="p2">**</ept> cmdlet and omits the name of the <bpt id="p3">*</bpt>MemberName<ept id="p3">*</ept> parameter, which is optional.</source>
          <target state="translated">Он использует <bpt id="p1">**</bpt>Foreach<ept id="p1">**</ept> псевдоним <bpt id="p2">**</bpt>ForEach-Object<ept id="p2">**</ept> командлета и опускает имя <bpt id="p3">*</bpt>MemberName<ept id="p3">*</ept> параметр, который является необязательным.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>ForEach-Object<ept id="p1">**</ept> cmdlet is very useful for getting property values, because it gets the value without changing the type, unlike the <bpt id="p2">**</bpt>Format<ept id="p2">**</ept> cmdlets or the Select-Object cmdlet, which change the property value type.</source>
          <target state="translated"> <bpt id="p1">**</bpt>ForEach-Object<ept id="p1">**</ept> очень полезен для получения значений свойств, так как он возвращает значение без изменения типа, в отличие от <bpt id="p2">**</bpt>формата<ept id="p2">**</ept> командлетов или командлет Select-Object, который изменить свойство тип значения.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>Example 7: Split module names into component names</source>
          <target state="translated">Пример 7: Имена модулей разделить имена компонентов</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>These commands split two dot-separated module names into their component names.</source>
          <target state="translated">Эти команды разделяют два имени модуля, разделенных точкой, на имена компонентов.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>The commands call the <bpt id="p1">**</bpt>Split<ept id="p1">**</ept> method of strings.</source>
          <target state="translated">Вызов команды <bpt id="p1">**</bpt>разбиения<ept id="p1">**</ept> метод строк.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>The three commands use different syntax, but they are equivalent and interchangeable.</source>
          <target state="translated">Три команды используют различный синтаксис, но они эквивалентны и являются взаимозаменяемыми.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>The first command uses the traditional syntax, which includes a script block and the current object operator ($_).</source>
          <target state="translated">Первая команда использует традиционный синтаксис, который включает блок скрипта и оператор текущего объекта ($_).</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>It uses the dot syntax to specify the method and parentheses to enclose the delimiter argument.</source>
          <target state="translated">Точечный синтаксис применяется для указания метода, а аргумент разделителя заключается в круглые скобки.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>The second command uses the <bpt id="p1">*</bpt>MemberName<ept id="p1">*</ept> parameter to specify the <bpt id="p2">**</bpt>Split<ept id="p2">**</ept> method and the <bpt id="p3">*</bpt>ArgumentName<ept id="p3">*</ept> parameter to identify the dot (".") as the split delimiter.</source>
          <target state="translated">Вторая команда использует <bpt id="p1">*</bpt>MemberName<ept id="p1">*</ept> для указания <bpt id="p2">**</bpt>разбиения<ept id="p2">**</ept> метод и <bpt id="p3">*</bpt>ArgumentName<ept id="p3">*</ept> параметр для определения точки («.») в качестве разделителя разбиения.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>The third command uses the <bpt id="p1">**</bpt>Foreach<ept id="p1">**</ept> alias of the <bpt id="p2">**</bpt>Foreach-Object<ept id="p2">**</ept> cmdlet and omits the names of the <bpt id="p3">*</bpt>MemberName<ept id="p3">*</ept> and <bpt id="p4">*</bpt>ArgumentList<ept id="p4">*</ept> parameters, which are optional.</source>
          <target state="translated">Третья команда использует <bpt id="p1">**</bpt>Foreach<ept id="p1">**</ept> псевдоним <bpt id="p2">**</bpt>Foreach-Object<ept id="p2">**</ept> командлета и опускает имена <bpt id="p3">*</bpt>MemberName<ept id="p3">*</ept> и <bpt id="p4">*</bpt>ArgumentList<ept id="p4">*</ept> Параметры, которые не являются обязательными.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>The output of these three commands, shown below, is identical.</source>
          <target state="translated">Выходные данные этих трех команд, показанные ниже, идентичны.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Split<ept id="p1">**</ept> is just one of many useful methods of strings.</source>
          <target state="translated"><bpt id="p1">**</bpt>Разделение<ept id="p1">**</ept> является всего лишь одним из многих полезных методов строк.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>To see all of the properties and methods of strings, pipe a string to the Get-Member cmdlet.</source>
          <target state="translated">Чтобы просмотреть все свойства и методы строк, передайте строку в командлет Get-Member.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>PARAMETERS</source>
          <target state="translated">ПАРАМЕТРЫ</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>-ArgumentList</source>
          <target state="translated">-ArgumentList</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>Specifies an array of arguments to a method call.</source>
          <target state="translated">Указывает массив аргументов для вызова метода.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>This parameter was introduced in Windows PowerShell 3.0.</source>
          <target state="translated">Этот параметр впервые появился в Windows PowerShell 3.0.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>-Begin</source>
          <target state="translated">— Начать</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>Specifies a script block that runs before this cmdlet processes any input objects.</source>
          <target state="translated">Указывает блок скрипта, который выполняется перед обработкой входных объектов этого командлета.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>-Confirm</source>
          <target state="translated">-Confirm</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>Prompts you for confirmation before running the cmdlet.Prompts you for confirmation before running the cmdlet.</source>
          <target state="translated">Запрашивает подтверждение перед запуском командлета. Запрашивает подтверждение перед запуском командлета.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>-End</source>
          <target state="translated">-End</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>Specifies a script block that runs after this cmdlet processes all input objects.</source>
          <target state="translated">Указывает блок скрипта, который выполняется после этот командлет обрабатывает входные объекты.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>-InputObject</source>
          <target state="translated">-InputObject</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>Specifies the input objects.</source>
          <target state="translated">Задает входные объекты.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source><bpt id="p1">*</bpt>ForEach-Object<ept id="p1">*</ept> runs the script block or operation statement on each input object.</source>
          <target state="translated"><bpt id="p1">*</bpt>ForEach-Object<ept id="p1">*</ept> запускает инструкцию блока или операция скрипта для каждого входного объекта.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>Enter a variable that contains the objects, or type a command or expression that gets the objects.</source>
          <target state="translated">Введите переменную, которая содержит объекты, или команду или выражение, которое возвращает объекты.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>When you use the <bpt id="p1">*</bpt>InputObject<ept id="p1">*</ept> parameter with <bpt id="p2">**</bpt>ForEach-Object<ept id="p2">**</ept>, instead of piping command results to <bpt id="p3">**</bpt>ForEach-Object<ept id="p3">**</ept>, the <bpt id="p4">*</bpt>InputObject<ept id="p4">*</ept> value is treated as a single object.</source>
          <target state="translated">При использовании <bpt id="p1">*</bpt>InputObject<ept id="p1">*</ept> параметр с <bpt id="p2">**</bpt>ForEach-Object<ept id="p2">**</ept>, вместо передачи результатов команды к <bpt id="p3">**</bpt>ForEach-Object<ept id="p3">**</ept>,  <bpt id="p4">*</bpt>InputObject<ept id="p4">*</ept> значение рассматривается как один объект.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>This is true even if the value is a collection that is the result of a command, such as <ph id="ph1">`-InputObject (Get-Process)`</ph>.</source>
          <target state="translated">Это верно, даже если значение представляет собой коллекцию, являющийся результатом выполнения команды, такие как <ph id="ph1">`-InputObject (Get-Process)`</ph>.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>Because <bpt id="p1">*</bpt>InputObject<ept id="p1">*</ept> cannot return individual properties from an array or collection of objects, we recommend that if you use <bpt id="p2">**</bpt>ForEach-Object<ept id="p2">**</ept> to perform operations on a collection of objects for those objects that have specific values in defined properties, you use <bpt id="p3">**</bpt>ForEach-Object<ept id="p3">**</ept> in the pipeline, as shown in the examples in this topic.</source>
          <target state="translated">Поскольку <bpt id="p1">*</bpt>InputObject<ept id="p1">*</ept> не возвращает отдельные свойства из массива или коллекции объектов, рекомендуется, чтобы при использовании <bpt id="p2">**</bpt>ForEach-Object<ept id="p2">**</ept> для выполнения операций с коллекцией объектов для объектов, имеющих определенные значения определенных свойств используйте <bpt id="p3">**</bpt>ForEach-Object<ept id="p3">**</ept> в конвейере, как показано в примерах этого раздела.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>-MemberName</source>
          <target state="translated">-Имя пользователя</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>Specifies the property to get or the method to call.</source>
          <target state="translated">Указывает свойство, которое необходимо получить, или метод, который требуется вызвать.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>Wildcard characters are permitted, but work only if the resulting string resolves to a unique value.</source>
          <target state="translated">Подстановочные знаки разрешены, но работать только в том случае, если результирующая строка указывает уникальное значение.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>If, for example, you run <ph id="ph1">`Get-Process | ForEach -MemberName *Name`</ph>, and more than one member exists with a name that contains the string Name, such as the <bpt id="p1">**</bpt>ProcessName<ept id="p1">**</ept> and <bpt id="p2">**</bpt>Name<ept id="p2">**</ept> properties, the command fails.</source>
          <target state="translated">Если, например, можно запускать <ph id="ph1">`Get-Process | ForEach -MemberName *Name`</ph>, и существует более одного члена с именем, которое содержит строковое имя, например <bpt id="p1">**</bpt>ProcessName<ept id="p1">**</ept> и <bpt id="p2">**</bpt>имя<ept id="p2">**</ept> Свойства, команда завершается ошибкой.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>This parameter was introduced in Windows PowerShell 3.0.</source>
          <target state="translated">Этот параметр впервые появился в Windows PowerShell 3.0.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>-Process</source>
          <target state="translated">-Процесс</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>Specifies the operation that is performed on each input object.</source>
          <target state="translated">Указывает операцию, которая выполняется с каждым входным объектом.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>Enter a script block that describes the operation.</source>
          <target state="translated">Введите блок скрипта, который описывает операцию.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>-RemainingScripts</source>
          <target state="translated">-RemainingScripts</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>Specifies all script blocks that are not taken by the <bpt id="p1">*</bpt>Process<ept id="p1">*</ept> parameter.</source>
          <target state="translated">Указывает все блоки скриптов, не занятых <bpt id="p1">*</bpt>процесс<ept id="p1">*</ept> параметр.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>This parameter was introduced in Windows PowerShell 3.0.</source>
          <target state="translated">Этот параметр впервые появился в Windows PowerShell 3.0.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>-WhatIf</source>
          <target state="translated">-WhatIf</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>Shows what would happen if the cmdlet runs.</source>
          <target state="translated">Показывает, что произойдет при запуске командлета.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>The cmdlet is not run.Shows what would happen if the cmdlet runs.</source>
          <target state="translated">Командлет не запущен. Показывает, что произойдет при запуске командлета.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>The cmdlet is not run.</source>
          <target state="translated">Командлет не запущен.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>CommonParameters</source>
          <target state="translated">CommonParameters</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutVariable, -OutBuffer, -PipelineVariable, -Verbose, -WarningAction, and -WarningVariable.</source>
          <target state="translated">Этот командлет поддерживает общие параметры:-Debug, - ErrorAction, - ErrorVariable, - InformationAction, - InformationVariable, - OutVariable,-OutBuffer, - PipelineVariable, - Verbose, - WarningAction и - WarningVariable.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>For more information, see about_CommonParameters (http://go.microsoft.com/fwlink/?LinkID=113216).</source>
          <target state="translated">Дополнительные сведения см. в разделе about_CommonParameters (http://go.microsoft.com/fwlink/?LinkID=113216).</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>INPUTS</source>
          <target state="translated">ВХОДНЫЕ ДАННЫЕ</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>System.Management.Automation.PSObject</source>
          <target state="translated">System.Management.Automation.PSObject</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>You can pipe any object to this cmdlet.</source>
          <target state="translated">Можно передать любой объект в этот командлет.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>OUTPUTS</source>
          <target state="translated">ВЫХОДНЫЕ ДАННЫЕ</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>System.Management.Automation.PSObject</source>
          <target state="translated">System.Management.Automation.PSObject</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>This cmdlet returns objects that are determined by the input.</source>
          <target state="translated">Этот командлет возвращает объекты, которые определяются путем ввода.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>NOTES</source>
          <target state="translated">ПРИМЕЧАНИЯ</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>ForEach-Object<ept id="p1">**</ept> cmdlet works much like the <bpt id="p2">**</bpt>Foreach<ept id="p2">**</ept> statement, except that you cannot pipe input to a <bpt id="p3">**</bpt>Foreach<ept id="p3">**</ept> statement.</source>
          <target state="translated"> <bpt id="p1">**</bpt>ForEach-Object<ept id="p1">**</ept> работает подобно <bpt id="p2">**</bpt>Foreach<ept id="p2">**</ept> инструкции, за исключением того, что невозможно передать входные данные в <bpt id="p3">**</bpt>Foreach<ept id="p3">**</ept> инструкции.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>For more information about the <bpt id="p1">**</bpt>Foreach<ept id="p1">**</ept> statement, see about_Foreach (http://go.microsoft.com/fwlink/?LinkID=113229) in the Microsoft TechNet library.</source>
          <target state="translated">Дополнительные сведения о <bpt id="p1">**</bpt>Foreach<ept id="p1">**</ept> инструкции см. в разделе about_Foreach (http://go.microsoft.com/fwlink/?LinkID=113229) в библиотеке Microsoft TechNet.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>RELATED LINKS</source>
          <target state="translated">СВЯЗАННЫЕ ССЫЛКИ</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>about_Automatic_Variables</source>
          <target state="translated">about_Automatic_Variables</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>about_ForEach</source>
          <target state="translated">about_ForEach</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>about_Script_Blocks</source>
          <target state="translated">about_Script_Blocks</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>Get-ItemProperty</source>
          <target state="translated">Командлет Get-ItemProperty</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>Get-Member</source>
          <target state="translated">Get-Member</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>Select-Object</source>
          <target state="translated">Select-Object</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>Set-ItemProperty</source>
          <target state="translated">Set-ItemProperty</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>