<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ru-ru">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-db30baf" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">955d00f61a8222ff83797fbc923357c6d85cad7a</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">scripting\getting-started\cookbooks\Redirecting-Data-with-Out---Cmdlets.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions" />
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Redirecting Data with Out   Cmdlets</source>
          <target state="translated">Перенаправление данных с помощью командлетов Out</target>         
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Redirecting Data with Out-* Cmdlets</source>
          <target state="translated">Перенаправление данных с помощью командлетов Out-*</target>         
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Windows PowerShell provides several cmdlets that let you control data output directly.</source>
          <target state="translated">Windows PowerShell предоставляет несколько командлетов, позволяющих напрямую управлять выходными данными.</target>         
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>These cmdlets share two important characteristics.</source>
          <target state="translated">Эти командлеты обладают двумя важными характеристиками.</target>         
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>First, they generally transform data to some form of text.</source>
          <target state="translated">Во-первых, в общем случае они преобразуют данные в некоторую форму текста.</target>         
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>They do this because they output the data to system components that require text input.</source>
          <target state="translated">Это вызвано тем, что они выводят данные в системные компоненты, принимающие текстовые входные данные.</target>         
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>This means they need to represent the objects as text.</source>
          <target state="translated">Поэтому они должны представлять объекты в виде текста.</target>         
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Therefore, the text is formatted as you see it in the Windows PowerShell console window.</source>
          <target state="translated">Таким образом, текст форматируется в том виде, в котором отображается в окне консоли Windows PowerShell.</target>         
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Second, these cmdlets use the Windows PowerShell verb <bpt id="p1">**</bpt>Out<ept id="p1">**</ept> because they send information out from Windows PowerShell to somewhere else.</source>
          <target state="translated">Во-вторых, эти командлеты используют глагол <bpt id="p1">**</bpt>Out<ept id="p1">**</ept> Windows PowerShell, так как отправляют сведения из Windows PowerShell в другое место.</target>         
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>Out<ph id="ph1">\-</ph>Host<ept id="p1">**</ept> cmdlet is no exception: the host window display is outside of Windows PowerShell.</source>
          <target state="translated">Командлет <bpt id="p1">**</bpt>Out<ph id="ph1">\-</ph>Host<ept id="p1">**</ept> не является исключением: отображение основного окна выходит за пределы Windows PowerShell.</target>         
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>This is important because when data is sent out of Windows PowerShell, it is actually removed.</source>
          <target state="translated">Это важно, так как при отправке данных из Windows PowerShell они фактически удаляются.</target>         
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>You can see this if you try to create a pipeline that pages data to the host window, and then attempt to format it as a list, as shown here:</source>
          <target state="translated">Это можно увидеть, если попытаться создать конвейер, выводящий страницы данных в основное окно, а затем попробовать отформатировать их в виде списка, как показано ниже:</target>         
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>You might expect the command to display pages of process information in list format.</source>
          <target state="translated">Можно ожидать, что команда отобразит страницы сведений о процессах в формате списка.</target>         
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Instead, it displays the default tabular list:</source>
          <target state="translated">Вместо этого она отображает табличный список по умолчанию:</target>         
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>Out<ph id="ph1">\-</ph>Host<ept id="p1">**</ept> cmdlet sends the data directly to the console, so the <bpt id="p2">**</bpt>Format<ph id="ph2">\-</ph>List<ept id="p2">**</ept> command never receives anything to format.</source>
          <target state="translated">Командлет <bpt id="p1">**</bpt>Out<ph id="ph1">\-</ph>Host<ept id="p1">**</ept> отправляет данные непосредственно в консоль, поэтому команда <bpt id="p2">**</bpt>Format<ph id="ph2">\-</ph>List<ept id="p2">**</ept> не получает ничего для форматирования.</target>         
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>The correct way to structure this command is to put the <bpt id="p1">**</bpt>Out<ph id="ph1">\-</ph>Host<ept id="p1">**</ept> cmdlet at the end of the pipeline as shown below.</source>
          <target state="translated">Правильный способ использования этой команды заключается в том, чтобы поместить командлет <bpt id="p1">**</bpt>Out<ph id="ph1">\-</ph>Host<ept id="p1">**</ept> в конце конвейера, как показано ниже.</target>         
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>This causes the process data to be formatted in a list before being paged and displayed.</source>
          <target state="translated">В результате перед разбиением на страницы и отображением данные процессов форматируются в виде списка.</target>         
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>This applies to all of the <bpt id="p1">**</bpt>Out<ept id="p1">**</ept> cmdlets.</source>
          <target state="translated">Это касается всех командлетов <bpt id="p1">**</bpt>Out<ept id="p1">**</ept>.</target>         
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">**</bpt>Out<ept id="p1">**</ept> cmdlet should always appear at the end of the pipeline.</source>
          <target state="translated">Командлет <bpt id="p1">**</bpt>Out<ept id="p1">**</ept> должен всегда находиться в конце конвейера.</target>         
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>All the <bpt id="p1">**</bpt>Out<ept id="p1">**</ept> cmdlets render output as text, using the formatting in effect for the console window, including line length limits.</source>
          <target state="translated">Все командлеты <bpt id="p1">**</bpt>Out<ept id="p1">**</ept> отображают выходные данные в виде текста, используя при этом действующее в окне консоли форматирование, включая ограничения длины строки.</target>         
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Paging Console Output (Out<ph id="ph1">\-</ph>Host)</source>
          <target state="translated">Разбиение выходных данных консоли на страницы (Out<ph id="ph1">\-</ph>Host)</target>         
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>By default, Windows PowerShell sends data to the host window, which is exactly what the Out<ph id="ph1">\-</ph>Host cmdlet does.</source>
          <target state="translated">По умолчанию Windows PowerShell отправляет данные в основное окно, именно это и делает командлет Out<ph id="ph1">\-</ph>Host.</target>         
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>The primary use for the Out<ph id="ph1">\-</ph>Host cmdlet is paging data as we discussed earlier.</source>
          <target state="translated">Как мы уже упоминали, основным назначением командлета Out<ph id="ph1">\-</ph>Host является разбиение на страницы.</target>         
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>For example, the following command uses Out<ph id="ph1">\-</ph>Host to page the output of the Get<ph id="ph2">\-</ph>Command cmdlet:</source>
          <target state="translated">Например, следующая команда использует Out<ph id="ph1">\-</ph>Host для разбиения выходных данных командлета Get<ph id="ph2">\-</ph>Command на страницы:</target>         
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>You can also use the <bpt id="p1">**</bpt>more<ept id="p1">**</ept> function to page data.</source>
          <target state="translated">Для разбиения на страницы также можно использовать функцию <bpt id="p1">**</bpt>more<ept id="p1">**</ept>.</target>         
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>In Windows PowerShell, <bpt id="p1">**</bpt>more<ept id="p1">**</ept> is a function that calls <bpt id="p2">**</bpt>Out<ph id="ph1">\-</ph>Host <ph id="ph2">\-</ph>Paging<ept id="p2">**</ept>.</source>
          <target state="translated">В Windows PowerShell функция <bpt id="p1">**</bpt>more<ept id="p1">**</ept> вызывает <bpt id="p2">**</bpt>Out<ph id="ph1">\-</ph>Host <ph id="ph2">\-</ph>Paging<ept id="p2">**</ept>.</target>         
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>The following command demonstrates using the <bpt id="p1">**</bpt>more<ept id="p1">**</ept> function to page the output of Get<ph id="ph1">\-</ph>Command:</source>
          <target state="translated">Следующая команда демонстрирует использование функции <bpt id="p1">**</bpt>more<ept id="p1">**</ept> для разбиения выходных данных Get<ph id="ph1">\-</ph>Command на страницы:</target>         
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>If you include one or more filenames as arguments to the more function, the function will read the specified files and page their contents to the host:</source>
          <target state="translated">Если включить в функцию more одно или несколько имен файлов в качестве аргументов, она считывает указанные файлы, разбивает их содержимое на страницы и передает его на узел:</target>         
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Discarding Output (Out<ph id="ph1">\-</ph>Null)</source>
          <target state="translated">Удаление выходных данных (Out<ph id="ph1">\-</ph>Null)</target>         
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>Out<ph id="ph1">\-</ph>Null<ept id="p1">**</ept> cmdlet is designed to immediately discard any input it receives.</source>
          <target state="translated">Командлет <bpt id="p1">**</bpt>Out<ph id="ph1">\-</ph>Null<ept id="p1">**</ept> предназначен для немедленного удаления всех получаемых входных данных.</target>         
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>This is useful for discarding unnecessary data that you get as a side<ph id="ph1">\-</ph>effect of running a command.</source>
          <target state="translated">Это удобно для удаления посторонних данных, получаемых при выполнении команды.</target>         
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>When type the following command, you do not get anything back from the command:</source>
          <target state="translated">При вводе следующей команды никакие данные не возвращаются:</target>         
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>Out<ph id="ph1">\-</ph>Null<ept id="p1">**</ept> cmdlet does not discard error output.</source>
          <target state="translated">Командлет <bpt id="p1">**</bpt>Out<ph id="ph1">\-</ph>Null<ept id="p1">**</ept> не удаляет выходные данные ошибок.</target>         
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>For example, if you enter the following command, a message is displayed informing you that Windows PowerShell does not recognize 'Is<ph id="ph1">\-</ph>NotACommand':</source>
          <target state="translated">Например, если ввести следующую команду, появляется сообщение о том, что Windows PowerShell не распознает "Is<ph id="ph1">\-</ph>NotACommand":</target>         
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Printing Data (Out<ph id="ph1">\-</ph>Printer)</source>
          <target state="translated">Печать данных (Out<ph id="ph1">\-</ph>Printer)</target>         
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>You can print data by using the <bpt id="p1">**</bpt>Out<ph id="ph1">\-</ph>Printer<ept id="p1">**</ept> cmdlet.</source>
          <target state="translated">Данные можно распечатать с помощью командлета <bpt id="p1">**</bpt>Out<ph id="ph1">\-</ph>Printer<ept id="p1">**</ept>.</target>         
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>Out<ph id="ph1">\-</ph>Printer<ept id="p1">**</ept> cmdlet will use your default printer if you do not provide a printer name.</source>
          <target state="translated">Если имя принтера не задано, командлет <bpt id="p1">**</bpt>Out<ph id="ph1">\-</ph>Printer<ept id="p1">**</ept> использует принтер по умолчанию.</target>         
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>You can use any Windows<ph id="ph1">\-</ph>based printer by specifying its display name.</source>
          <target state="translated">Можно использовать любой принтер, совместимый с Windows, указав его отображаемое имя.</target>         
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>There is no need for any kind of printer port mapping or even a real physical printer.</source>
          <target state="translated">Сопоставление портов и даже наличие физического принтера при этом не требуется.</target>         
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>For example, if you have the Microsoft Office document imaging tools installed, you can send the data to an image file by typing:</source>
          <target state="translated">Например, при наличии установленных средств Microsoft Office Document Imaging можно отправить данные в файл образа, введя следующее:</target>         
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Saving Data (Out<ph id="ph1">\-</ph>File)</source>
          <target state="translated">Сохранение данных (Out<ph id="ph1">\-</ph>File)</target>         
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>You can send output to a file instead of the console window by using the <bpt id="p1">**</bpt>Out<ph id="ph1">\-</ph>File<ept id="p1">**</ept> cmdlet.</source>
          <target state="translated">С помощью командлета <bpt id="p1">**</bpt>Out<ph id="ph1">\-</ph>File<ept id="p1">**</ept> выходные данные можно отправить в файл, а не в окно консоли.</target>         
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>The following command line sends a list of processes to the file <bpt id="p1">**</bpt>C:<ph id="ph1">\\</ph>temp<ph id="ph2">\\</ph>processlist.txt<ept id="p1">**</ept>:</source>
          <target state="translated">Следующая команда отправляет список процессов в файл <bpt id="p1">**</bpt>C:<ph id="ph1">\\</ph>temp<ph id="ph2">\\</ph>processlist.txt<ept id="p1">**</ept>:</target>         
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>The results of using the <bpt id="p1">**</bpt>Out<ph id="ph1">\-</ph>File<ept id="p1">**</ept> cmdlet may not be what you expect if you are used to traditional output redirection.</source>
          <target state="translated">Результаты использования командлета <bpt id="p1">**</bpt>Out<ph id="ph1">\-</ph>File<ept id="p1">**</ept> могут отличаться от ожидаемых, если вы привыкли к стандартному перенаправлению выходных данных.</target>         
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>To understand its behavior, you must be aware of the context in which the <bpt id="p1">**</bpt>Out<ph id="ph1">\-</ph>File<ept id="p1">**</ept> cmdlet operates.</source>
          <target state="translated">Чтобы понять поведение командлета <bpt id="p1">**</bpt>Out<ph id="ph1">\-</ph>File<ept id="p1">**</ept>, необходимо помнить о контексте его выполнения.</target>         
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>By default, the <bpt id="p1">**</bpt>Out<ph id="ph1">\-</ph>File<ept id="p1">**</ept> cmdlet creates a Unicode file.</source>
          <target state="translated">По умолчанию командлет <bpt id="p1">**</bpt>Out<ph id="ph1">\-</ph>File<ept id="p1">**</ept> создает файл в кодировке Юникод.</target>         
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>This is the best default in the long run, but it means that tools that expect ASCII files will not work correctly with the default output format.</source>
          <target state="translated">В долгосрочной перспективе это лучший вариант по умолчанию, однако при нем средства, ожидающие файлы в кодировке ASCII, будут работать неправильно.</target>         
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>You can change the default output format to ASCII by using the <bpt id="p1">**</bpt>Encoding<ept id="p1">**</ept> parameter:</source>
          <target state="translated">Формат вывода по умолчанию можно изменить на ASCII с помощью параметра <bpt id="p1">**</bpt>Encoding<ept id="p1">**</ept>:</target>         
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Out<ph id="ph1">\-</ph>file<ept id="p1">**</ept> formats file contents to look like console output.</source>
          <target state="translated"><bpt id="p1">**</bpt>Out<ph id="ph1">\-</ph>File<ept id="p1">**</ept> форматирует содержимое файлов, чтобы оно было похоже на выходные данные консоли.</target>         
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>This causes the output to be truncated just as it is in a console window in most circumstances.</source>
          <target state="translated">В результате выходные данные усекаются, как в большинстве случаев и происходит в окне консоли.</target>         
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>For example, if you run the following command:</source>
          <target state="translated">Например, если выполнить следующую команду:</target>         
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>The output will look like this:</source>
          <target state="translated">Результат будет выглядеть так:</target>         
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>To get output that does not force line wraps to match the screen width, you can use the <bpt id="p1">**</bpt>Width<ept id="p1">**</ept> parameter to specify line width.</source>
          <target state="translated">Чтобы получить выходные данные без принудительных переносов по словам по ширине экрана, можно использовать параметр <bpt id="p1">**</bpt>Width<ept id="p1">**</ept> для указания ширины строки.</target>         
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Because <bpt id="p1">**</bpt>Width<ept id="p1">**</ept> is a 32<ph id="ph1">\-</ph>bit integer parameter, the maximum value it can have is 2147483647.</source>
          <target state="translated">Поскольку параметр <bpt id="p1">**</bpt>Width<ept id="p1">**</ept> — это 32<ph id="ph1">\-</ph>разрядное целое число, его максимальное значение равно 2147483647.</target>         
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Type the following to set the line width to this maximum value:</source>
          <target state="translated">Введите следующую команду, чтобы установить ширину строки в максимальное значение:</target>         
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>Out<ph id="ph1">\-</ph>File<ept id="p1">**</ept> cmdlet is most useful when you want to save output as it would have displayed on the console.</source>
          <target state="translated">Командлет <bpt id="p1">**</bpt>Out<ph id="ph1">\-</ph>File<ept id="p1">**</ept> наиболее полезен, если требуется сохранить выходные данные в том виде, в котором они отображались бы на консоли.</target>         
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>For finer control over output format, you need more advanced tools.</source>
          <target state="translated">Для более точного управления форматом выходных данных требуются более сложные средства.</target>         
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>We will look at those in the next chapter, along with some details about object manipulation.</source>
          <target state="translated">Мы рассмотрим их в следующей главе, где приведены и дополнительные сведения о работе с объектами.</target>         
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>