<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ru-ru">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-db30baf" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">9ba9ef3efe6a8ae85d96b59db53ad3a16bf57699</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">scripting\setup\Installing-the-Windows-PowerShell-SDK.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions" />
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Installing the Windows PowerShell SDK</source>
          <target state="translated">Установка пакета SDK для Windows PowerShell</target>         
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Installing the Windows PowerShell SDK</source>
          <target state="translated">Установка пакета SDK для Windows PowerShell</target>         
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>The following topic describes how to install the PowerShell SDK on different versions of Windows.</source>
          <target state="translated">В следующей статье описывается, как установить пакет PowerShell SDK на разные версии Windows.</target>         
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Installing Windows PowerShell 3.0 SDK for Windows 8 and Windows Server 2012<ph id="ph1">&lt;/title&gt;
    &lt;content&gt;
      &lt;para&gt;</ph>Windows PowerShell 3.0 is automatically installed with Windows 8 and Windows Server 2012.</source>
          <target state="translated">Установка Windows PowerShell 3.0 SDK для Windows 8 и Windows Server 2012<ph id="ph1">&lt;/title&gt;
    &lt;content&gt;
      &lt;para&gt;</ph>Windows PowerShell 3.0 устанавливается автоматически с Windows 8 и Windows Server 2012.</target>         
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>In addition, you can download and install the reference assemblies for Windows PowerShell 3.0 as part of the Windows 8 SDK.</source>
          <target state="translated">Вы также можете скачать и установить ссылочные сборки для Windows PowerShell 3.0 в составе Windows 8 SDK.</target>         
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>These assemblies allow you to write cmdlets, providers, and host programs for Windows PowerShell 3.0.</source>
          <target state="translated">Эти сборки позволяют написать командлеты, поставщики и ведущие программы для Windows PowerShell 3.0.</target>         
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>When you install the Windows SDK for Windows 8, the Windows PowerShell assemblies are automatically installed in the reference assembly folder, in \Program Files (x86)\Reference Assemblies\Microsoft\WindowsPowerShell\3.0.</source>
          <target state="translated">При установке Windows SDK для Windows 8 сборки Windows PowerShell автоматически устанавливаются в папку ссылочной сборки, в "\Program Files (x86)\Reference Assemblies\Microsoft\WindowsPowerShell\3.0".</target>         
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>For more information, see the <ph id="ph1">&lt;externalLink&gt;&lt;linkText&gt;</ph>Windows 8 SDK download site<ph id="ph2">&lt;/linkText&gt;&lt;linkUri&gt;</ph>http://msdn.microsoft.com/windows/hardware/hh852363.aspx<ph id="ph3">&lt;/linkUri&gt;&lt;/externalLink&gt;</ph>.</source>
          <target state="translated">Дополнительные сведения см. <ph id="ph1">&lt;externalLink&gt;&lt;linkText&gt;</ph>на сайте скачивания Windows 8 SDK<ph id="ph2">&lt;/linkText&gt;&lt;linkUri&gt;</ph>http://msdn.microsoft.com/windows/hardware/hh852363.aspx<ph id="ph3">&lt;/linkUri&gt;&lt;/externalLink&gt;</ph>.</target>         
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Windows PowerShell code samples are also available on the Development Center.</source>
          <target state="translated">Примеры кода Windows PowerShell также доступны в Центре разработки.</target>         
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>For more information, see the Desktop code sample page on the <ph id="ph1">&lt;externalLink&gt;&lt;linkText&gt;</ph>Dev center site<ph id="ph2">&lt;/linkText&gt;&lt;linkUri&gt;</ph>http://code.msdn.microsoft.com/windowsdesktop/<ph id="ph3">&lt;/linkUri&gt;&lt;/externalLink&gt;</ph>.</source>
          <target state="translated">Дополнительные сведения см. на странице примеров кода классических приложений на <ph id="ph1">&lt;externalLink&gt;&lt;linkText&gt;</ph>сайте Центра разработки<ph id="ph2">&lt;/linkText&gt;&lt;linkUri&gt;</ph>http://code.msdn.microsoft.com/windowsdesktop/<ph id="ph3">&lt;/linkUri&gt;&lt;/externalLink&gt;</ph>.</target>         
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>In addition, Windows PowerShell 3.0 is backwards-compatible with the Windows PowerShell 2.0 SDK, which includes a number of code samples.</source>
          <target state="translated">Кроме того, Windows PowerShell 3.0 обратно совместим с Windows PowerShell 2.0 SDK, в который входит ряд примеров кода.</target>         
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>For more information on how to download the Windows PowerShell 2.0 SDK, see below.</source>
          <target state="translated">Дополнительные сведения о том, как скачать Windows PowerShell 2.0 SDK, см. ниже.</target>         
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>(Note that while the 2.0 code samples are compatible with Windows 8 and Windows PowerShell 3.0, you cannot install Windows PowerShell 2.0 on a Windows 8 platform.)</source>
          <target state="translated">(Обратите внимание, что, хотя примеры кода 2.0 совместимы с Windows 8 и Windows PowerShell 3.0, невозможно установить Windows PowerShell 2.0 на платформу Windows 8.)</target>         
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Installing Windows PowerShell 3.0 SDK for Windows 7 and Windows Server 2008 R2<ph id="ph1">&lt;/title&gt;
    &lt;content&gt;
      &lt;para&gt;</ph>Windows 7 and Windows Server 2008 R2 automatically have PowerShell 2.0 installed.</source>
          <target state="translated">Установка Windows PowerShell 3.0 SDK в Windows 7 и Windows Server 2008 R2<ph id="ph1">&lt;/title&gt;
    &lt;content&gt;
      &lt;para&gt;</ph>Windows 7 и Windows Server 2008 R2 автоматически включают PowerShell 2.0 в установку.</target>         
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>In addition, you can install PowerShell 3.0 on these systems.</source>
          <target state="translated">Вы также можете установить PowerShell 3.0 в этих системах.</target>         
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>(For more information, see <ph id="ph1">&lt;link xlink:href="6fbb0409-5a54-48ec-95e6-7f8b7d8c4969"&gt;</ph>Installing Windows PowerShell<ph id="ph2">&lt;/link&gt;</ph>.).</source>
          <target state="translated">(Дополнительные сведения см. в статье <ph id="ph1">&lt;link xlink:href="6fbb0409-5a54-48ec-95e6-7f8b7d8c4969"&gt;</ph>Установка Windows PowerShell<ph id="ph2">&lt;/link&gt;</ph>.)</target>         
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>As described above, you can also install the Windows 8 SDK on Windows 7 and Windows Server 2008 R2.</source>
          <target state="translated">Как описано выше, вы также можете установить Windows 8 SDK на Windows 7 и Windows Server 2008 R2.</target>         
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Installing Windows PowerShell 2.0 SDK for Windows 7, Vista, XP, Server 2003, and Server 2008<ph id="ph1">&lt;/title&gt;
    &lt;content&gt;
      &lt;para&gt;</ph>The <ph id="ph2">&lt;token&gt;</ph>mshshort<ph id="ph3">&lt;/token&gt;</ph> 2.0 SDK provides the reference assemblies needed to write cmdlets, providers, and hosting applications, and it provides C# sample code that can be used as the starting point when you begin writing code.</source>
          <target state="translated">Установка Windows PowerShell 2.0 SDK в Windows 7, Windows Vista, Windows XP, Windows Server 2003 и Windows Server 2008<ph id="ph1">&lt;/title&gt;
    &lt;content&gt;
      &lt;para&gt;</ph>Пакет <ph id="ph2">&lt;token&gt;</ph>mshshort<ph id="ph3">&lt;/token&gt;</ph> 2.0 SDK предоставляет ссылочные сборки, необходимые для написания командлетов, поставщиков и ведущих приложений, а также пример кода C#, который можно использовать в качестве начальной точки при написании кода.</target>         
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>To install this SDK, see <ph id="ph1">&lt;externalLink&gt;&lt;linkText&gt;</ph>Windows PowerShell 2.0 SDK<ph id="ph2">&lt;/linkText&gt;&lt;linkUri&gt;</ph>http://go.microsoft.com/fwlink/?LinkId=184611<ph id="ph3">&lt;/linkUri&gt;&lt;/externalLink&gt;</ph>.</source>
          <target state="translated">Сведения об установке этого пакета SDK см. в статье <ph id="ph1">&lt;externalLink&gt;&lt;linkText&gt;</ph>Windows PowerShell 2.0 SDK<ph id="ph2">&lt;/linkText&gt;&lt;linkUri&gt;</ph>http://go.microsoft.com/fwlink/?LinkId=184611<ph id="ph3">&lt;/linkUri&gt;&lt;/externalLink&gt;</ph>.</target>         
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Reference assemblies<ph id="ph1">&lt;/title&gt;
        &lt;content&gt;
          &lt;para&gt;</ph>Reference assemblies are installed in the following location by default: <ph id="ph2">&lt;codeInline&gt;</ph>c:\Program Files\Reference Assemblies\Microsoft\WindowsPowerShell\V1.0<ph id="ph3">&lt;/codeInline&gt;</ph>.<ph id="ph4">&lt;/para&gt;
          &lt;alert class="note"&gt;
            &lt;para&gt;</ph>Code that is compiled against the Windows PowerShell 2.0 assemblies cannot be loaded into Windows PowerShell 1.0 installations.</source>
          <target state="translated">Ссылочные сборки<ph id="ph1">&lt;/title&gt;
        &lt;content&gt;
          &lt;para&gt;</ph>Ссылочные сборки устанавливаются в следующем расположении по умолчанию: <ph id="ph2">&lt;codeInline&gt;</ph>c:\Program Files\Reference Assemblies\Microsoft\WindowsPowerShell\V1.0<ph id="ph3">&lt;/codeInline&gt;</ph>.<ph id="ph4">&lt;/para&gt;
          &lt;alert class="note"&gt;
            &lt;para&gt;</ph>Код, который компилируется в сборках Windows PowerShell 2.0, невозможно загрузить в установках Windows PowerShell 1.0.</target>         
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>However, code that is compiled against the Windows PowerShell 1.0 assemblies can be loaded into Windows PowerShell 2.0 installations.</source>
          <target state="translated">Однако код, который компилируется в сборках Windows PowerShell 1.0, можно загрузить в установках Windows PowerShell 2.0.</target>         
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Samples<ph id="ph1">&lt;/title&gt;
        &lt;content&gt;
          &lt;para&gt;</ph>Code samples are installed in the following location by default: <ph id="ph2">&lt;codeInline&gt;</ph>C:\Program Files\Microsoft SDKs\Windows\v7.0\Samples\sysmgmt\WindowsPowerShell\<ph id="ph3">&lt;/codeInline&gt;</ph>.<ph id="ph4">&lt;/para&gt;
          &lt;para&gt;</ph>The following sections provide a brief description of what each sample does.</source>
          <target state="translated">Примеры<ph id="ph1">&lt;/title&gt;
        &lt;content&gt;
          &lt;para&gt;</ph>Примеры кода устанавливаются в следующем расположении по умолчанию: <ph id="ph2">&lt;codeInline&gt;</ph>C:\Program Files\Microsoft SDKs\Windows\v7.0\Samples\sysmgmt\WindowsPowerShell\<ph id="ph3">&lt;/codeInline&gt;</ph>.<ph id="ph4">&lt;/para&gt;
          &lt;para&gt;</ph>В следующих разделах предоставляется краткое описание функций каждого примера.</target>         
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Cmdlet samples<ph id="ph1">&lt;/title&gt;
            &lt;content&gt;
              &lt;definitionTable&gt;
                &lt;definedTerm&gt;</ph>GetProcessSample01<ph id="ph2">&lt;/definedTerm&gt;
                &lt;definition&gt;
                  &lt;para&gt;</ph>Shows how to write a simple cmdlet that gets all the processes on the local computer.<ph id="ph3">&lt;/para&gt;
                &lt;/definition&gt;
                &lt;definedTerm&gt;</ph>GetProcessSample02<ph id="ph4">&lt;/definedTerm&gt;
                &lt;definition&gt;
                  &lt;para&gt;</ph>Shows how to add parameters to the cmdlet.</source>
          <target state="translated">Примеры командлетов<ph id="ph1">&lt;/title&gt;
            &lt;content&gt;
              &lt;definitionTable&gt;
                &lt;definedTerm&gt;</ph>GetProcessSample01<ph id="ph2">&lt;/definedTerm&gt;
                &lt;definition&gt;
                  &lt;para&gt;</ph>Показывает, как написать простой командлет, который получает все процессы на локальном компьютере.<ph id="ph3">&lt;/para&gt;
                &lt;/definition&gt;
                &lt;definedTerm&gt;</ph>GetProcessSample02<ph id="ph4">&lt;/definedTerm&gt;
                &lt;definition&gt;
                  &lt;para&gt;</ph>Показывает, как добавить параметры в командлет.</target>         
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>The cmdlet takes one or more process names and returns the matching processes.<ph id="ph1">&lt;/para&gt;
                &lt;/definition&gt;
                &lt;definedTerm&gt;</ph>GetProcessSample03<ph id="ph2">&lt;/definedTerm&gt;
                &lt;definition&gt;
                  &lt;para&gt;</ph>Shows how to add parameters that accept input from the pipeline.<ph id="ph3">&lt;/para&gt;
                &lt;/definition&gt;
                &lt;definedTerm&gt;</ph>GetProcessSample04<ph id="ph4">&lt;/definedTerm&gt;
                &lt;definition&gt;
                  &lt;para&gt;</ph>Shows how to handle nonterminating errors.<ph id="ph5">&lt;/para&gt;
                &lt;/definition&gt;
                &lt;definedTerm&gt;</ph>GetProcessSample05<ph id="ph6">&lt;/definedTerm&gt;
                &lt;definition&gt;
                  &lt;para&gt;</ph>Shows how to display a list of specified processes.<ph id="ph7">&lt;/para&gt;
                &lt;/definition&gt;
                &lt;definedTerm&gt;</ph>SelectObject<ph id="ph8">&lt;/definedTerm&gt;
                &lt;definition&gt;
                  &lt;para&gt;</ph>Shows how to write a filter to select only certain objects.</source>
          <target state="translated">Командлет принимает одно имя процесса или несколько и возвращает совпадающие процессы.<ph id="ph1">&lt;/para&gt;
                &lt;/definition&gt;
                &lt;definedTerm&gt;</ph>GetProcessSample03<ph id="ph2">&lt;/definedTerm&gt;
                &lt;definition&gt;
                  &lt;para&gt;</ph>Показывает, как добавить параметры, принимающие входящие данные конвейера.<ph id="ph3">&lt;/para&gt;
                &lt;/definition&gt;
                &lt;definedTerm&gt;</ph>GetProcessSample04<ph id="ph4">&lt;/definedTerm&gt;
                &lt;definition&gt;
                  &lt;para&gt;</ph>Показывает, как обработать устранимые ошибки.<ph id="ph5">&lt;/para&gt;
                &lt;/definition&gt;
                &lt;definedTerm&gt;</ph>GetProcessSample05<ph id="ph6">&lt;/definedTerm&gt;
                &lt;definition&gt;
                  &lt;para&gt;</ph>Показывает, как отобразить список указанных процессов.<ph id="ph7">&lt;/para&gt;
                &lt;/definition&gt;
                &lt;definedTerm&gt;</ph>SelectObject<ph id="ph8">&lt;/definedTerm&gt;
                &lt;definition&gt;
                  &lt;para&gt;</ph>Показывает, как написать фильтр для выбора только определенных объектов.</target>         
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>SelectString<ph id="ph1">&lt;/definedTerm&gt;
                &lt;definition&gt;
                  &lt;para&gt;</ph>Shows how to search files for specified patterns.<ph id="ph2">&lt;/para&gt;
                &lt;/definition&gt;
                &lt;definedTerm&gt;</ph>StopProcessSample01<ph id="ph3">&lt;/definedTerm&gt;
                &lt;definition&gt;
                  &lt;para&gt;</ph>Shows how to implement a <ph id="ph4">&lt;parameterReference&gt;</ph>PassThru<ph id="ph5">&lt;/parameterReference&gt;</ph> parameter, and how to request user feedback by calls to the <ph id="ph6">&lt;codeEntityReference&gt;</ph>Overload:System.Management.Automation.Cmdlet.ShouldProcess<ph id="ph7">&lt;/codeEntityReference&gt;</ph> and <ph id="ph8">&lt;codeEntityReference&gt;</ph>Overload:System.Management.Automation.Cmdlet.ShouldContinue<ph id="ph9">&lt;/codeEntityReference&gt;</ph> methods.</source>
          <target state="translated">SelectString<ph id="ph1">&lt;/definedTerm&gt;
                &lt;definition&gt;
                  &lt;para&gt;</ph>Показывает, как искать в файлах указанные шаблоны.<ph id="ph2">&lt;/para&gt;
                &lt;/definition&gt;
                &lt;definedTerm&gt;</ph>StopProcessSample01<ph id="ph3">&lt;/definedTerm&gt;
                &lt;definition&gt;
                  &lt;para&gt;</ph>Показывает, как реализовать параметр <ph id="ph4">&lt;parameterReference&gt;</ph>PassThru<ph id="ph5">&lt;/parameterReference&gt;</ph> и запросить отзывы пользователей вызовами в методы <ph id="ph6">&lt;codeEntityReference&gt;</ph>Overload:System.Management.Automation.Cmdlet.ShouldProcess<ph id="ph7">&lt;/codeEntityReference&gt;</ph> и <ph id="ph8">&lt;codeEntityReference&gt;</ph>Overload:System.Management.Automation.Cmdlet.ShouldContinue<ph id="ph9">&lt;/codeEntityReference&gt;</ph>.</target>         
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Users specify the <ph id="ph1">&lt;parameterReference&gt;</ph>PassThru<ph id="ph2">&lt;/parameterReference&gt;</ph> parameter when they want to force the cmdlet to return an object, <ph id="ph3">&lt;/para&gt;
                &lt;/definition&gt;
                &lt;definedTerm&gt;</ph>StopProcessSample02<ph id="ph4">&lt;/definedTerm&gt;
                &lt;definition&gt;
                  &lt;para&gt;</ph>Shows how to stop a specific process.<ph id="ph5">&lt;/para&gt;
                &lt;/definition&gt;
                &lt;definedTerm&gt;</ph>StopProcessSample03<ph id="ph6">&lt;/definedTerm&gt;
                &lt;definition&gt;
                  &lt;para&gt;</ph>Shows how to declare aliases for parameters and how to support wildcards.<ph id="ph7">&lt;/para&gt;
                &lt;/definition&gt;
                &lt;definedTerm&gt;</ph>StopProcessSample04<ph id="ph8">&lt;/definedTerm&gt;
                &lt;definition&gt;
                  &lt;para&gt;</ph>Shows how to declare parameter sets, the object that the cmdlet takes as input, and how to specify the default parameter set to use.</source>
          <target state="translated">Пользователи указывают параметр <ph id="ph1">&lt;parameterReference&gt;</ph>PassThru<ph id="ph2">&lt;/parameterReference&gt;</ph>, когда хотят принудительно вернуть объект. <ph id="ph3">&lt;/para&gt;
                &lt;/definition&gt;
                &lt;definedTerm&gt;</ph>StopProcessSample02<ph id="ph4">&lt;/definedTerm&gt;
                &lt;definition&gt;
                  &lt;para&gt;</ph>Показывает, как остановить определенный процесс.<ph id="ph5">&lt;/para&gt;
                &lt;/definition&gt;
                &lt;definedTerm&gt;</ph>StopProcessSample03<ph id="ph6">&lt;/definedTerm&gt;
                &lt;definition&gt;
                  &lt;para&gt;</ph>Показывает, как объявить псевдонимы для параметров и как обеспечить поддержку для подстановочных знаков.<ph id="ph7">&lt;/para&gt;
                &lt;/definition&gt;
                &lt;definedTerm&gt;</ph>StopProcessSample04<ph id="ph8">&lt;/definedTerm&gt;
                &lt;definition&gt;
                  &lt;para&gt;</ph>Показывает, как объявить наборы параметров, объект, который командлет принимает как входные данные, и как указать набор параметров для использования по умолчанию.</target>         
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Remoting samples<ph id="ph1">&lt;/title&gt;
            &lt;content&gt;
              &lt;definitionTable&gt;
                &lt;definedTerm&gt;</ph>RemoteRunspace01<ph id="ph2">&lt;/definedTerm&gt;
                &lt;definition&gt;
                  &lt;para&gt;</ph>Shows how to create a remote runspace that is used to establish a remote connection.<ph id="ph3">&lt;/para&gt;
                &lt;/definition&gt;
                &lt;definedTerm&gt;</ph>RemoteRunspacePool01<ph id="ph4">&lt;/definedTerm&gt;
                &lt;definition&gt;
                  &lt;para&gt;</ph>Shows how to construct a remote runspace pool and how to run multiple commands concurrently by using this pool.<ph id="ph5">&lt;/para&gt;
                &lt;/definition&gt;
                &lt;definedTerm&gt;</ph>Serialization01<ph id="ph6">&lt;/definedTerm&gt;
                &lt;definition&gt;
                  &lt;para&gt;</ph>Shows how to look at an existing .NET class and make sure that information from selected public properties of this class is preserved across serialization/deserialization.<ph id="ph7">&lt;/para&gt;
                &lt;/definition&gt;
                &lt;definedTerm&gt;</ph>Serialization02<ph id="ph8">&lt;/definedTerm&gt;
                &lt;definition&gt;
                  &lt;para&gt;</ph>Shows how to look at an existing .NET class and make sure that information from instance of this class is preserved across serialization/deserialization when the information is not available in public properties of the class.<ph id="ph9">&lt;/para&gt;
                &lt;/definition&gt;
                &lt;definedTerm&gt;</ph>Serialization03<ph id="ph10">&lt;/definedTerm&gt;
                &lt;definition&gt;
                  &lt;para&gt;</ph>Shows how to look at an existing .NET class and make sure that instances of this class and of derived classes are deserialized (rehydrated) into live .NET objects.</source>
          <target state="translated">Примеры удаленного взаимодействия<ph id="ph1">&lt;/title&gt;
            &lt;content&gt;
              &lt;definitionTable&gt;
                &lt;definedTerm&gt;</ph>RemoteRunspace01<ph id="ph2">&lt;/definedTerm&gt;
                &lt;definition&gt;
                  &lt;para&gt;</ph>Показывает, как создать удаленное пространство выполнения, которое используется для установки удаленного подключения.<ph id="ph3">&lt;/para&gt;
                &lt;/definition&gt;
                &lt;definedTerm&gt;</ph>RemoteRunspacePool01<ph id="ph4">&lt;/definedTerm&gt;
                &lt;definition&gt;
                  &lt;para&gt;</ph>Показывает, как создать пул удаленных пространств выполнения и запустить несколько команд одновременно с помощью этого пула.<ph id="ph5">&lt;/para&gt;
                &lt;/definition&gt;
                &lt;definedTerm&gt;</ph>Serialization01<ph id="ph6">&lt;/definedTerm&gt;
                &lt;definition&gt;
                  &lt;para&gt;</ph>Показывает, как проанализировать существующий класс .NET и гарантировать, что данные из выбранных общедоступных свойств этого класса сохранятся при сериализации и десериализации.<ph id="ph7">&lt;/para&gt;
                &lt;/definition&gt;
                &lt;definedTerm&gt;</ph>Serialization02<ph id="ph8">&lt;/definedTerm&gt;
                &lt;definition&gt;
                  &lt;para&gt;</ph>Показывает, как проанализировать существующий класс .NET и гарантировать, что данные из экземпляра этого класса сохранятся при сериализации и десериализации, когда они отсутствуют в общедоступных свойствах этого класса.<ph id="ph9">&lt;/para&gt;
                &lt;/definition&gt;
                &lt;definedTerm&gt;</ph>Serialization03<ph id="ph10">&lt;/definedTerm&gt;
                &lt;definition&gt;
                  &lt;para&gt;</ph>Показывает, как проанализировать существующий класс .NET и гарантировать, что экземпляры этого и производных классов десериализуются (восстанавливаются) в рабочие объекты .NET.</target>         
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Event samples<ph id="ph1">&lt;/title&gt;
            &lt;content&gt;
              &lt;definitionTable&gt;
                &lt;definedTerm&gt;</ph>Event01<ph id="ph2">&lt;/definedTerm&gt;
                &lt;definition&gt;
                  &lt;para&gt;</ph>Shows how to create a cmdlet for event registration by deriving from ObjectEventRegistrationBase.<ph id="ph3">&lt;/para&gt;
                &lt;/definition&gt;
                &lt;definedTerm&gt;</ph>Event02<ph id="ph4">&lt;/definedTerm&gt;
                &lt;definition&gt;
                  &lt;para&gt;</ph>Shows how to shows how to receive notifications of <ph id="ph5">&lt;token&gt;</ph>mshshort<ph id="ph6">&lt;/token&gt;</ph> events that are generated on remote computers.</source>
          <target state="translated">Примеры событий<ph id="ph1">&lt;/title&gt;
            &lt;content&gt;
              &lt;definitionTable&gt;
                &lt;definedTerm&gt;</ph>Event01<ph id="ph2">&lt;/definedTerm&gt;
                &lt;definition&gt;
                  &lt;para&gt;</ph>Показывает, как создать командлет для регистрации событий, производных от ObjectEventRegistrationBase.<ph id="ph3">&lt;/para&gt;
                &lt;/definition&gt;
                &lt;definedTerm&gt;</ph>Event02<ph id="ph4">&lt;/definedTerm&gt;
                &lt;definition&gt;
                  &lt;para&gt;</ph>Показывает, как получить уведомления о событиях <ph id="ph5">&lt;token&gt;</ph>mshshort<ph id="ph6">&lt;/token&gt;</ph>, которые создаются на удаленных компьютерах.</target>         
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>It uses the PSEventReceived event exposed through the <ph id="ph1">&lt;codeEntityReference&gt;</ph>T:System.Management.Automation.Runspaces.Runspace<ph id="ph2">&lt;/codeEntityReference&gt;</ph> class.</source>
          <target state="translated">Использует событие PSEventReceived, предоставленное в классе <ph id="ph1">&lt;codeEntityReference&gt;</ph>T:System.Management.Automation.Runspaces.Runspace<ph id="ph2">&lt;/codeEntityReference&gt;</ph>.</target>         
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Hosting application samples<ph id="ph1">&lt;/title&gt;
            &lt;content&gt;
              &lt;definitionTable&gt;
                &lt;definedTerm&gt;</ph>Runspace01<ph id="ph2">&lt;/definedTerm&gt;
                &lt;definition&gt;
                  &lt;para&gt;</ph>Shows how to use the <ph id="ph3">&lt;codeEntityReference&gt;</ph>T:System.Management.Automation.PowerShell<ph id="ph4">&lt;/codeEntityReference&gt;</ph> class to run the <ph id="ph5">&lt;externalLink&gt;&lt;linkText&gt;</ph>Get-Process<ph id="ph6">&lt;/linkText&gt;&lt;linkUri&gt;</ph>http://go.microsoft.com/fwlink/?LinkId=113324<ph id="ph7">&lt;/linkUri&gt;&lt;/externalLink&gt;</ph> cmdlet synchronously.</source>
          <target state="translated">Примеры ведущих приложений<ph id="ph1">&lt;/title&gt;
            &lt;content&gt;
              &lt;definitionTable&gt;
                &lt;definedTerm&gt;</ph>Runspace01<ph id="ph2">&lt;/definedTerm&gt;
                &lt;definition&gt;
                  &lt;para&gt;</ph>Показывает, как использовать класс <ph id="ph3">&lt;codeEntityReference&gt;</ph>T:System.Management.Automation.PowerShell<ph id="ph4">&lt;/codeEntityReference&gt;</ph> для синхронного запуска командлета <ph id="ph5">&lt;externalLink&gt;&lt;linkText&gt;</ph>Get-Process<ph id="ph6">&lt;/linkText&gt;&lt;linkUri&gt;</ph>http://go.microsoft.com/fwlink/?LinkId=113324<ph id="ph7">&lt;/linkUri&gt;&lt;/externalLink&gt;</ph>.</target>         
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;externalLink&gt;&lt;linkText&gt;</ph>Get-Process<ph id="ph2">&lt;/linkText&gt;&lt;linkUri&gt;</ph>http://go.microsoft.com/fwlink/?LinkId=113324<ph id="ph3">&lt;/linkUri&gt;&lt;/externalLink&gt;</ph> cmdlet returns <ph id="ph4">&lt;codeEntityReference&gt;</ph>T:System.Diagnostics.Process<ph id="ph5">&lt;/codeEntityReference&gt;</ph> objects for each process running on the local computer.<ph id="ph6">&lt;/para&gt;
                &lt;/definition&gt;
                &lt;definedTerm&gt;</ph>Runspace02<ph id="ph7">&lt;/definedTerm&gt;
                &lt;definition&gt;
                  &lt;para&gt;</ph>Shows how to use the <ph id="ph8">&lt;codeEntityReference&gt;</ph>T:System.Management.Automation.PowerShell<ph id="ph9">&lt;/codeEntityReference&gt;</ph> class to run the <ph id="ph10">&lt;externalLink&gt;&lt;linkText&gt;</ph>Get-Process<ph id="ph11">&lt;/linkText&gt;&lt;linkUri&gt;</ph>http://go.microsoft.com/fwlink/?LinkId=113324<ph id="ph12">&lt;/linkUri&gt;&lt;/externalLink&gt;</ph> and <ph id="ph13">&lt;externalLink&gt;&lt;linkText&gt;</ph>Sort-Object<ph id="ph14">&lt;/linkText&gt;&lt;linkUri&gt;</ph>http://go.microsoft.com/fwlink/?LinkID=113403<ph id="ph15">&lt;/linkUri&gt;&lt;/externalLink&gt;</ph> cmdlets synchronously.</source>
          <target state="translated">Командлет <ph id="ph1">&lt;externalLink&gt;&lt;linkText&gt;</ph>Get-Process<ph id="ph2">&lt;/linkText&gt;&lt;linkUri&gt;</ph>http://go.microsoft.com/fwlink/?LinkId=113324<ph id="ph3">&lt;/linkUri&gt;&lt;/externalLink&gt;</ph> возвращает объекты <ph id="ph4">&lt;codeEntityReference&gt;</ph>T:System.Diagnostics.Process<ph id="ph5">&lt;/codeEntityReference&gt;</ph> для каждого процесса, запущенного на локальном компьютере.<ph id="ph6">&lt;/para&gt;
                &lt;/definition&gt;
                &lt;definedTerm&gt;</ph>Runspace02<ph id="ph7">&lt;/definedTerm&gt;
                &lt;definition&gt;
                  &lt;para&gt;</ph>Показывает, как использовать класс <ph id="ph8">&lt;codeEntityReference&gt;</ph>T:System.Management.Automation.PowerShell<ph id="ph9">&lt;/codeEntityReference&gt;</ph> для синхронного запуска командлетов <ph id="ph10">&lt;externalLink&gt;&lt;linkText&gt;</ph>Get-Process<ph id="ph11">&lt;/linkText&gt;&lt;linkUri&gt;</ph>http://go.microsoft.com/fwlink/?LinkId=113324<ph id="ph12">&lt;/linkUri&gt;&lt;/externalLink&gt;</ph> и <ph id="ph13">&lt;externalLink&gt;&lt;linkText&gt;</ph>Sort-Object<ph id="ph14">&lt;/linkText&gt;&lt;linkUri&gt;</ph>http://go.microsoft.com/fwlink/?LinkID=113403<ph id="ph15">&lt;/linkUri&gt;&lt;/externalLink&gt;</ph>.</target>         
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;externalLink&gt;&lt;linkText&gt;</ph>Get-Process<ph id="ph2">&lt;/linkText&gt;&lt;linkUri&gt;</ph>http://go.microsoft.com/fwlink/?LinkId=113324<ph id="ph3">&lt;/linkUri&gt;&lt;/externalLink&gt;</ph> cmdlet returns <ph id="ph4">&lt;codeEntityReference&gt;</ph>T:System.Diagnostics.Process<ph id="ph5">&lt;/codeEntityReference&gt;</ph> objects for each process running on the local computer, and the Sort-Object sorts the objects based on their <ph id="ph6">&lt;codeEntityReference&gt;</ph>P:System.Diagnostics.Process.Id<ph id="ph7">&lt;/codeEntityReference&gt;</ph> property.</source>
          <target state="translated">Командлет <ph id="ph1">&lt;externalLink&gt;&lt;linkText&gt;</ph>Get-Process<ph id="ph2">&lt;/linkText&gt;&lt;linkUri&gt;</ph>http://go.microsoft.com/fwlink/?LinkId=113324<ph id="ph3">&lt;/linkUri&gt;&lt;/externalLink&gt;</ph> возвращает объекты <ph id="ph4">&lt;codeEntityReference&gt;</ph>T:System.Diagnostics.Process<ph id="ph5">&lt;/codeEntityReference&gt;</ph> для каждого процесса, выполняющегося на локальном компьютере, а Sort-Object сортирует объекты на основе свойства <ph id="ph6">&lt;codeEntityReference&gt;</ph>P:System.Diagnostics.Process.Id<ph id="ph7">&lt;/codeEntityReference&gt;</ph>.</target>         
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>The results of these commands is displayed by using a <ph id="ph1">&lt;codeEntityReference&gt;</ph>T:System.Windows.Forms.DataGridView<ph id="ph2">&lt;/codeEntityReference&gt;</ph> control.<ph id="ph3">&lt;/para&gt;
                &lt;/definition&gt;
                &lt;definedTerm&gt;</ph>Runspace03<ph id="ph4">&lt;/definedTerm&gt;
                &lt;definition&gt;
                  &lt;para&gt;</ph>Shows how to use the <ph id="ph5">&lt;codeEntityReference&gt;</ph>T:System.Management.Automation.PowerShell<ph id="ph6">&lt;/codeEntityReference&gt;</ph> class to run a script synchronously, and how to handle non-terminating errors.</source>
          <target state="translated">Результаты этих команд отображаются с помощью элемента управления <ph id="ph1">&lt;codeEntityReference&gt;</ph>T:System.Windows.Forms.DataGridView<ph id="ph2">&lt;/codeEntityReference&gt;</ph>.<ph id="ph3">&lt;/para&gt;
                &lt;/definition&gt;
                &lt;definedTerm&gt;</ph>Runspace03<ph id="ph4">&lt;/definedTerm&gt;
                &lt;definition&gt;
                  &lt;para&gt;</ph>Показывает, как использовать класс <ph id="ph5">&lt;codeEntityReference&gt;</ph>T:System.Management.Automation.PowerShell<ph id="ph6">&lt;/codeEntityReference&gt;</ph> для синхронного запуска скрипта и как обработать устранимые ошибки.</target>         
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>The script receives a list of process names and then retrieves those processes.</source>
          <target state="translated">Скрипт получает список имен процессов, а затем извлекает эти процессы.</target>         
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>The results of the script, including any non-terminating errors that were generated when running the script, are displayed in a console window.<ph id="ph1">&lt;/para&gt;
                &lt;/definition&gt;
                &lt;definedTerm&gt;</ph>Runspace04<ph id="ph2">&lt;/definedTerm&gt;
                &lt;definition&gt;
                  &lt;para&gt;</ph>Shows how to use the <ph id="ph3">&lt;codeEntityReference&gt;</ph>T:System.Management.Automation.PowerShell<ph id="ph4">&lt;/codeEntityReference&gt;</ph> class to run commands, and how to catch terminating errors that are thrown when running the commands.</source>
          <target state="translated">Результаты работы скрипта, включая устранимые ошибки, созданные при запуске скрипта, отображаются в окне консоли.<ph id="ph1">&lt;/para&gt;
                &lt;/definition&gt;
                &lt;definedTerm&gt;</ph>Runspace04<ph id="ph2">&lt;/definedTerm&gt;
                &lt;definition&gt;
                  &lt;para&gt;</ph>Показывает, как использовать класс <ph id="ph3">&lt;codeEntityReference&gt;</ph>T:System.Management.Automation.PowerShell<ph id="ph4">&lt;/codeEntityReference&gt;</ph> для запуска команд и как собирать неустранимые ошибки, возникающие при их запуске.</target>         
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Two commands are run, and the last command is passed a parameter argument that is not valid.</source>
          <target state="translated">Выполняются две команды, и последняя получает недопустимый аргумент параметра.</target>         
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>As a result, no objects are returned and a terminating error is thrown.<ph id="ph1">&lt;/para&gt;
                &lt;/definition&gt;
                &lt;definedTerm&gt;</ph>Runspace05<ph id="ph2">&lt;/definedTerm&gt;
                &lt;definition&gt;
                  &lt;para&gt;</ph>Shows how to add a snap-in to an <ph id="ph3">&lt;codeEntityReference&gt;</ph>T:System.Management.Automation.Runspaces.InitialSessionState<ph id="ph4">&lt;/codeEntityReference&gt;</ph> object so that the cmdlet of the snap-in is available when the runspace is opened.</source>
          <target state="translated">В результате объекты не возвращаются и возникает неустранимая ошибка.<ph id="ph1">&lt;/para&gt;
                &lt;/definition&gt;
                &lt;definedTerm&gt;</ph>Runspace05<ph id="ph2">&lt;/definedTerm&gt;
                &lt;definition&gt;
                  &lt;para&gt;</ph>Показывает, как добавить оснастку в объект <ph id="ph3">&lt;codeEntityReference&gt;</ph>T:System.Management.Automation.Runspaces.InitialSessionState<ph id="ph4">&lt;/codeEntityReference&gt;</ph>, чтобы командлет оснастки был доступен при открытии пространства выполнения.</target>         
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>The snap-in provides a Get-Proc cmdlet (defined by the <ph id="ph1">&lt;legacyLink xlink:href="7b48bf80-cbf0-4cb1-8d5b-3b8d06196598"&gt;</ph>GetProcessSample01 Sample<ph id="ph2">&lt;/legacyLink&gt;</ph>) that is run synchronously by using a <ph id="ph3">&lt;codeEntityReference&gt;</ph>T:System.Management.Automation.PowerShell<ph id="ph4">&lt;/codeEntityReference&gt;</ph> object.<ph id="ph5">&lt;/para&gt;
                &lt;/definition&gt;
                &lt;definedTerm&gt;</ph>Runspace06<ph id="ph6">&lt;/definedTerm&gt;
                &lt;definition&gt;
                  &lt;para&gt;</ph>Shows how to add a module to an <ph id="ph7">&lt;codeEntityReference&gt;</ph>T:System.Management.Automation.Runspaces.InitialSessionState<ph id="ph8">&lt;/codeEntityReference&gt;</ph> object so that the module is loaded when the runspace is opened.</source>
          <target state="translated">Оснастка предоставляет командлет Get-Proc (определенный <ph id="ph1">&lt;legacyLink xlink:href="7b48bf80-cbf0-4cb1-8d5b-3b8d06196598"&gt;</ph>примером GetProcessSample01<ph id="ph2">&lt;/legacyLink&gt;</ph>), который выполняется синхронно, используя объект <ph id="ph3">&lt;codeEntityReference&gt;</ph>T:System.Management.Automation.PowerShell<ph id="ph4">&lt;/codeEntityReference&gt;</ph>.<ph id="ph5">&lt;/para&gt;
                &lt;/definition&gt;
                &lt;definedTerm&gt;</ph>Runspace06<ph id="ph6">&lt;/definedTerm&gt;
                &lt;definition&gt;
                  &lt;para&gt;</ph>Показывает, как добавить модуль в объект <ph id="ph7">&lt;codeEntityReference&gt;</ph>T:System.Management.Automation.Runspaces.InitialSessionState<ph id="ph8">&lt;/codeEntityReference&gt;</ph>, чтобы он загрузился при открытии пространства выполнения.</target>         
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>The module provides a Get-Proc cmdlet (defined by the <ph id="ph1">&lt;legacyLink xlink:href="481f557d-3344-4d33-b2da-4736a0165181"&gt;</ph>GetProcessSample02 Sample<ph id="ph2">&lt;/legacyLink&gt;</ph>) that is run synchronously by using a <ph id="ph3">&lt;codeEntityReference&gt;</ph>T:System.Management.Automation.PowerShell<ph id="ph4">&lt;/codeEntityReference&gt;</ph> object.<ph id="ph5">&lt;/para&gt;
                &lt;/definition&gt;
                &lt;definedTerm&gt;</ph>Runspace07<ph id="ph6">&lt;/definedTerm&gt;
                &lt;definition&gt;
                  &lt;para&gt;</ph>Shows how to create a runspace, and then use that runspace to run two cmdlets synchronously by using a <ph id="ph7">&lt;codeEntityReference&gt;</ph>T:System.Management.Automation.PowerShell<ph id="ph8">&lt;/codeEntityReference&gt;</ph> object.<ph id="ph9">&lt;/para&gt;
                &lt;/definition&gt;
                &lt;definedTerm&gt;</ph>Runspace08<ph id="ph10">&lt;/definedTerm&gt;
                &lt;definition&gt;
                  &lt;para&gt;</ph>Shows how to add commands and arguments to the pipeline of a <ph id="ph11">&lt;codeEntityReference&gt;</ph>T:System.Management.Automation.PowerShell<ph id="ph12">&lt;/codeEntityReference&gt;</ph> object and how to run the commands synchronously.<ph id="ph13">&lt;/para&gt;
                &lt;/definition&gt;
                &lt;definedTerm&gt;</ph>Runspace09<ph id="ph14">&lt;/definedTerm&gt;
                &lt;definition&gt;
                  &lt;para&gt;</ph>Shows how to add a script to the pipeline of a <ph id="ph15">&lt;codeEntityReference&gt;</ph>T:System.Management.Automation.PowerShell<ph id="ph16">&lt;/codeEntityReference&gt;</ph> object and how to run the script asynchronously.</source>
          <target state="translated">Модуль предоставляет командлет Get-Proc (определенный <ph id="ph1">&lt;legacyLink xlink:href="481f557d-3344-4d33-b2da-4736a0165181"&gt;</ph>примером GetProcessSample02<ph id="ph2">&lt;/legacyLink&gt;</ph>), который выполняется синхронно, используя объект <ph id="ph3">&lt;codeEntityReference&gt;</ph>T:System.Management.Automation.PowerShell<ph id="ph4">&lt;/codeEntityReference&gt;</ph>.<ph id="ph5">&lt;/para&gt;
                &lt;/definition&gt;
                &lt;definedTerm&gt;</ph>Runspace07<ph id="ph6">&lt;/definedTerm&gt;
                &lt;definition&gt;
                  &lt;para&gt;</ph>Показывает, как создать область выполнения, а затем использовать ее для синхронного выполнения двух командлетов с использованием объекта <ph id="ph7">&lt;codeEntityReference&gt;</ph>T:System.Management.Automation.PowerShell<ph id="ph8">&lt;/codeEntityReference&gt;</ph>.<ph id="ph9">&lt;/para&gt;
                &lt;/definition&gt;
                &lt;definedTerm&gt;</ph>Runspace08<ph id="ph10">&lt;/definedTerm&gt;
                &lt;definition&gt;
                  &lt;para&gt;</ph>Показывает, как добавлять команды и аргументы в конвейер объекта <ph id="ph11">&lt;codeEntityReference&gt;</ph>T:System.Management.Automation.PowerShell<ph id="ph12">&lt;/codeEntityReference&gt;</ph> и как синхронно выполнять команды.<ph id="ph13">&lt;/para&gt;
                &lt;/definition&gt;
                &lt;definedTerm&gt;</ph>Runspace09<ph id="ph14">&lt;/definedTerm&gt;
                &lt;definition&gt;
                  &lt;para&gt;</ph>Показывает, как добавить скрипт в конвейер объекта <ph id="ph15">&lt;codeEntityReference&gt;</ph>T:System.Management.Automation.PowerShell<ph id="ph16">&lt;/codeEntityReference&gt;</ph> и как асинхронно выполнить скрипт.</target>         
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Events are used to handle the output of the script.<ph id="ph1">&lt;/para&gt;
                &lt;/definition&gt;
                &lt;definedTerm&gt;</ph>Runspace10<ph id="ph2">&lt;/definedTerm&gt;
                &lt;definition&gt;
                  &lt;para&gt;</ph>Shows how to create a default initial session state, how to add a cmdlet to the <ph id="ph3">&lt;codeEntityReference&gt;</ph>T:System.Management.Automation.Runspaces.InitialSessionState<ph id="ph4">&lt;/codeEntityReference&gt;</ph>, how to create a runspace that uses the initial session state, and how to run the command by using a <ph id="ph5">&lt;codeEntityReference&gt;</ph>T:System.Management.Automation.PowerShell<ph id="ph6">&lt;/codeEntityReference&gt;</ph> object.<ph id="ph7">&lt;/para&gt;
                &lt;/definition&gt;
                &lt;definedTerm&gt;</ph>Runspace11<ph id="ph8">&lt;/definedTerm&gt;
                &lt;definition&gt;
                  &lt;para&gt;</ph>Shows how to use the <ph id="ph9">&lt;codeEntityReference&gt;</ph>T:System.Management.Automation.ProxyCommand<ph id="ph10">&lt;/codeEntityReference&gt;</ph> class to create a proxy command that calls an existing cmdlet, but restricts the set of available parameters.</source>
          <target state="translated">События используются для обработки выходных данных скрипта.<ph id="ph1">&lt;/para&gt;
                &lt;/definition&gt;
                &lt;definedTerm&gt;</ph>Runspace10<ph id="ph2">&lt;/definedTerm&gt;
                &lt;definition&gt;
                  &lt;para&gt;</ph>Показывает, как создать начальное состояние сеанса по умолчанию, добавить командлет в <ph id="ph3">&lt;codeEntityReference&gt;</ph>T:System.Management.Automation.Runspaces.InitialSessionState<ph id="ph4">&lt;/codeEntityReference&gt;</ph>, создать пространство выполнения, которое использует начальное состояние сеанса, и как выполнить команду с использованием объекта <ph id="ph5">&lt;codeEntityReference&gt;</ph>T:System.Management.Automation.PowerShell<ph id="ph6">&lt;/codeEntityReference&gt;</ph>.<ph id="ph7">&lt;/para&gt;
                &lt;/definition&gt;
                &lt;definedTerm&gt;</ph>Runspace11<ph id="ph8">&lt;/definedTerm&gt;
                &lt;definition&gt;
                  &lt;para&gt;</ph>Показывает, как использовать класс <ph id="ph9">&lt;codeEntityReference&gt;</ph>T:System.Management.Automation.ProxyCommand<ph id="ph10">&lt;/codeEntityReference&gt;</ph> для создания прокси-команды, которая вызывает существующий командлет, но ограничивает набор доступных параметров.</target>         
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>The proxy command is then added to an initial session state that is used to create a constrained runspace.</source>
          <target state="translated">Прокси-команда затем добавляется в начальное состояние сеанса, который используется для создания ограниченного пространства выполнения.</target>         
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>This means that the user can access the functionality of the cmdlet only through the proxy command.<ph id="ph1">&lt;/para&gt;
                &lt;/definition&gt;
                &lt;definedTerm&gt;</ph>PowerShell01<ph id="ph2">&lt;/definedTerm&gt;
                &lt;definition&gt;
                  &lt;para&gt;</ph>Shows how to create a constrained runspace using an <ph id="ph3">&lt;codeEntityReference&gt;</ph>T:System.Management.Automation.Runspaces.InitialSessionState<ph id="ph4">&lt;/codeEntityReference&gt;</ph> object.<ph id="ph5">&lt;/para&gt;
                &lt;/definition&gt;
                &lt;definedTerm&gt;</ph>PowerShell02<ph id="ph6">&lt;/definedTerm&gt;
                &lt;definition&gt;
                  &lt;para&gt;</ph>Shows how to use a runspace pool to run multiple commands concurrently.</source>
          <target state="translated">Это означает, что пользователь может получить доступ к функциям этого командлета только через прокси-команду.<ph id="ph1">&lt;/para&gt;
                &lt;/definition&gt;
                &lt;definedTerm&gt;</ph>PowerShell01<ph id="ph2">&lt;/definedTerm&gt;
                &lt;definition&gt;
                  &lt;para&gt;</ph>Показывает, как создать ограниченное пространство выполнения с помощью объекта <ph id="ph3">&lt;codeEntityReference&gt;</ph>T:System.Management.Automation.Runspaces.InitialSessionState<ph id="ph4">&lt;/codeEntityReference&gt;</ph>.<ph id="ph5">&lt;/para&gt;
                &lt;/definition&gt;
                &lt;definedTerm&gt;</ph>PowerShell02<ph id="ph6">&lt;/definedTerm&gt;
                &lt;definition&gt;
                  &lt;para&gt;</ph>Показывает, как использовать пул пространств выполнения для одновременного запуска нескольких команд.</target>         
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Host samples<ph id="ph1">&lt;/title&gt;
            &lt;content&gt;
              &lt;definitionTable&gt;
                &lt;definedTerm&gt;</ph>Host01<ph id="ph2">&lt;/definedTerm&gt;
                &lt;definition&gt;
                  &lt;para&gt;</ph>Shows how to implement a host application that uses a custom host.</source>
          <target state="translated">Примеры узлов<ph id="ph1">&lt;/title&gt;
            &lt;content&gt;
              &lt;definitionTable&gt;
                &lt;definedTerm&gt;</ph>Host01<ph id="ph2">&lt;/definedTerm&gt;
                &lt;definition&gt;
                  &lt;para&gt;</ph>Показывает, как реализовать ведущее приложение, которое использует пользовательский узел.</target>         
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>In this sample a runspace is created that uses the custom host, and then the <ph id="ph1">&lt;codeEntityReference&gt;</ph>T:System.Management.Automation.PowerShell<ph id="ph2">&lt;/codeEntityReference&gt;</ph> API is used to run a script that calls “exit.”</source>
          <target state="translated">В этом примере создается пространство выполнения, которое использует пользовательский узел, а затем API <ph id="ph1">&lt;codeEntityReference&gt;</ph>T:System.Management.Automation.PowerShell<ph id="ph2">&lt;/codeEntityReference&gt;</ph> используется для выполнения скрипта, который вызывает "exit".</target>         
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>The host application then looks at the output of the script and prints out the results.<ph id="ph1">&lt;/para&gt;
                &lt;/definition&gt;
                &lt;definedTerm&gt;</ph>Host02<ph id="ph2">&lt;/definedTerm&gt;
                &lt;definition&gt;
                  &lt;para&gt;</ph>Shows how to write a host application that uses the <ph id="ph3">&lt;token&gt;</ph>mshshort<ph id="ph4">&lt;/token&gt;</ph> runtime along with a custom host implementation.</source>
          <target state="translated">После ведущее приложение ищет выходные данные скрипта и отображает результаты.<ph id="ph1">&lt;/para&gt;
                &lt;/definition&gt;
                &lt;definedTerm&gt;</ph>Host02<ph id="ph2">&lt;/definedTerm&gt;
                &lt;definition&gt;
                  &lt;para&gt;</ph>Показывает, как написать ведущее приложение, которое использует среду выполнения <ph id="ph3">&lt;token&gt;</ph>mshshort<ph id="ph4">&lt;/token&gt;</ph> с реализацией пользовательского узла.</target>         
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>The host application sets the host culture to German, runs the <ph id="ph1">&lt;externalLink&gt;&lt;linkText&gt;</ph>Get-Process<ph id="ph2">&lt;/linkText&gt;&lt;linkUri&gt;</ph>http://go.microsoft.com/fwlink/?LinkId=113324<ph id="ph3">&lt;/linkUri&gt;&lt;/externalLink&gt;</ph> cmdlet and displays the results as you would see them by using pwrsh.exe, and then prints out the current data and time in German.<ph id="ph4">&lt;/para&gt;
                &lt;/definition&gt;
                &lt;definedTerm&gt;</ph>Host03<ph id="ph5">&lt;/definedTerm&gt;
                &lt;definition&gt;
                  &lt;para&gt;</ph>Shows how to build an interactive console-based host application that reads commands from the command line, executes the commands, and then displays the results to the console.<ph id="ph6">&lt;/para&gt;
                &lt;/definition&gt;
                &lt;definedTerm&gt;</ph>Host04<ph id="ph7">&lt;/definedTerm&gt;
                &lt;definition&gt;
                  &lt;para&gt;</ph>Shows how to build an interactive console-based host application that reads commands from the command line, executes the commands, and then displays the results to the console.</source>
          <target state="translated">Ведущее приложение задает в качестве языка и региональных параметров узла немецкий, запускает командлет <ph id="ph1">&lt;externalLink&gt;&lt;linkText&gt;</ph>Get-Process<ph id="ph2">&lt;/linkText&gt;&lt;linkUri&gt;</ph>http://go.microsoft.com/fwlink/?LinkId=113324<ph id="ph3">&lt;/linkUri&gt;&lt;/externalLink&gt;</ph> и отображает результаты, как при использовании pwrsh.exe, а затем отображает текущие дату и время на немецком.<ph id="ph4">&lt;/para&gt;
                &lt;/definition&gt;
                &lt;definedTerm&gt;</ph>Host03<ph id="ph5">&lt;/definedTerm&gt;
                &lt;definition&gt;
                  &lt;para&gt;</ph>Показывает, как выполнить сборку интерактивного консольного ведущего приложения, которое читает команды командной строки, выполняет их, а затем отображает результаты в консоли.<ph id="ph6">&lt;/para&gt;
                &lt;/definition&gt;
                &lt;definedTerm&gt;</ph>Host04<ph id="ph7">&lt;/definedTerm&gt;
                &lt;definition&gt;
                  &lt;para&gt;</ph>Показывает, как выполнить сборку интерактивного консольного ведущего приложения, которое читает команды из командной строки, выполняет их, а затем отображает результаты в консоли.</target>         
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>This host application also supports displaying prompts that allow the user to specify multiple choices.<ph id="ph1">&lt;/para&gt;
                &lt;/definition&gt;
                &lt;definedTerm&gt;</ph>Host05<ph id="ph2">&lt;/definedTerm&gt;
                &lt;definition&gt;
                  &lt;para&gt;</ph>Shows how to build an interactive console-based host application that reads commands from the command line, executes the commands, and then displays the results to the console.</source>
          <target state="translated">Это ведущее приложение также поддерживает отображение подсказок, которые позволяют пользователю указать несколько вариантов.<ph id="ph1">&lt;/para&gt;
                &lt;/definition&gt;
                &lt;definedTerm&gt;</ph>Host05<ph id="ph2">&lt;/definedTerm&gt;
                &lt;definition&gt;
                  &lt;para&gt;</ph>Показывает, как выполнить сборку интерактивного консольного ведущего приложения, которое читает команды из командной строки, выполняет их, а затем отображает результаты в консоли.</target>         
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>This host application also supports calls to remote computers by using the <ph id="ph1">&lt;externalLink&gt;&lt;linkText&gt;</ph>Enter-PsSession<ph id="ph2">&lt;/linkText&gt;&lt;linkUri&gt;</ph>http://go.microsoft.com/fwlink/?LinkId=135210<ph id="ph3">&lt;/linkUri&gt;&lt;/externalLink&gt;</ph> and <ph id="ph4">&lt;externalLink&gt;&lt;linkText&gt;</ph>Exit-PsSession<ph id="ph5">&lt;/linkText&gt;&lt;linkUri&gt;</ph>http://go.microsoft.com/fwlink/?LinkId=135212<ph id="ph6">&lt;/linkUri&gt;&lt;/externalLink&gt;</ph> cmdlets.<ph id="ph7">&lt;/para&gt;
                &lt;/definition&gt;
                &lt;definedTerm&gt;</ph>Host06<ph id="ph8">&lt;/definedTerm&gt;
                &lt;definition&gt;
                  &lt;para&gt;</ph>Shows how to build an interactive console-based host application that reads commands from the command line, executes the commands, and then displays the results to the console.</source>
          <target state="translated">Это ведущее приложение также поддерживает вызов удаленных компьютеров с использованием командлетов <ph id="ph1">&lt;externalLink&gt;&lt;linkText&gt;</ph>Enter-PsSession<ph id="ph2">&lt;/linkText&gt;&lt;linkUri&gt;</ph>http://go.microsoft.com/fwlink/?LinkId=135210<ph id="ph3">&lt;/linkUri&gt;&lt;/externalLink&gt;</ph> и <ph id="ph4">&lt;externalLink&gt;&lt;linkText&gt;</ph>Exit-PsSession<ph id="ph5">&lt;/linkText&gt;&lt;linkUri&gt;</ph>http://go.microsoft.com/fwlink/?LinkId=135212<ph id="ph6">&lt;/linkUri&gt;&lt;/externalLink&gt;</ph>.<ph id="ph7">&lt;/para&gt;
                &lt;/definition&gt;
                &lt;definedTerm&gt;</ph>Host06<ph id="ph8">&lt;/definedTerm&gt;
                &lt;definition&gt;
                  &lt;para&gt;</ph>Показывает, как выполнить сборку интерактивного консольного ведущего приложения, которое читает команды из командной строки, выполняет их, а затем отображает результаты в консоли.</target>         
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>In addition, this sample uses the Tokenizer APIs to specify the color of the text that is entered by the user.</source>
          <target state="translated">Кроме того, в этом примере используются интерфейсы API создателя токенов для указания цвета текста, вводимого пользователем.</target>         
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Provider samples<ph id="ph1">&lt;/title&gt;
            &lt;content&gt;
              &lt;definitionTable&gt;
                &lt;definedTerm&gt;</ph>AccessDBProviderSample01<ph id="ph2">&lt;/definedTerm&gt;
                &lt;definition&gt;
                  &lt;para&gt;</ph>Shows how to declare a provider class that derives directly from the <ph id="ph3">&lt;codeEntityReference&gt;</ph>T:System.Management.Automation.Provider.CmdletProvider<ph id="ph4">&lt;/codeEntityReference&gt;</ph> class.</source>
          <target state="translated">Примеры поставщиков<ph id="ph1">&lt;/title&gt;
            &lt;content&gt;
              &lt;definitionTable&gt;
                &lt;definedTerm&gt;</ph>AccessDBProviderSample01<ph id="ph2">&lt;/definedTerm&gt;
                &lt;definition&gt;
                  &lt;para&gt;</ph>Показывает, как объявить класс поставщика, производный непосредственно от класса <ph id="ph3">&lt;codeEntityReference&gt;</ph>T:System.Management.Automation.Provider.CmdletProvider<ph id="ph4">&lt;/codeEntityReference&gt;</ph>.</target>         
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>It is included here only for completeness.<ph id="ph1">&lt;/para&gt;
                &lt;/definition&gt;
                &lt;definedTerm&gt;</ph>AccessDBProviderSample02<ph id="ph2">&lt;/definedTerm&gt;
                &lt;definition&gt;
                  &lt;para&gt;</ph>Shows how to overwrite the <ph id="ph3">&lt;codeEntityReference&gt;</ph>M:System.Management.Automation.Provider.DriveCmdletProvider.NewDrive(System.Management.Automation.PSDriveInfo)<ph id="ph4">&lt;/codeEntityReference&gt;</ph> and <ph id="ph5">&lt;codeEntityReference&gt;</ph>M:System.Management.Automation.Provider.DriveCmdletProvider.RemoveDrive(System.Management.Automation.PSDriveInfo)<ph id="ph6">&lt;/codeEntityReference&gt;</ph> methods to support calls to the New-PSDrive and Remove-PSDrive cmdlets.</source>
          <target state="translated">Он включается здесь только для полноты.<ph id="ph1">&lt;/para&gt;
                &lt;/definition&gt;
                &lt;definedTerm&gt;</ph>AccessDBProviderSample02<ph id="ph2">&lt;/definedTerm&gt;
                &lt;definition&gt;
                  &lt;para&gt;</ph>Показывает, как перезаписать методы <ph id="ph3">&lt;codeEntityReference&gt;</ph>M:System.Management.Automation.Provider.DriveCmdletProvider.NewDrive(System.Management.Automation.PSDriveInfo)<ph id="ph4">&lt;/codeEntityReference&gt;</ph> и <ph id="ph5">&lt;codeEntityReference&gt;</ph>M:System.Management.Automation.Provider.DriveCmdletProvider.RemoveDrive(System.Management.Automation.PSDriveInfo)<ph id="ph6">&lt;/codeEntityReference&gt;</ph> для поддержки вызовов в командлеты New-PSDrive и Remove-PSDrive.</target>         
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>The provider class in this sample derives from the <ph id="ph1">&lt;codeEntityReference&gt;</ph>T:System.Management.Automation.Provider.DriveCmdletProvider<ph id="ph2">&lt;/codeEntityReference&gt;</ph> class.<ph id="ph3">&lt;/para&gt;
                &lt;/definition&gt;
                &lt;definedTerm&gt;</ph>AccessDBProviderSample03<ph id="ph4">&lt;/definedTerm&gt;
                &lt;definition&gt;
                  &lt;para&gt;</ph>Shows how to overwrite the <ph id="ph5">&lt;codeEntityReference&gt;</ph>M:System.Management.Automation.Provider.ItemCmdletProvider.GetItem(System.String)<ph id="ph6">&lt;/codeEntityReference&gt;</ph> and <ph id="ph7">&lt;codeEntityReference&gt;</ph>M:System.Management.Automation.Provider.ItemCmdletProvider.SetItem(System.String,System.Object)<ph id="ph8">&lt;/codeEntityReference&gt;</ph> methods to support calls to the Get-Item and Set-Item cmdlets.</source>
          <target state="translated">Класс поставщика в этом примере является производным от класса <ph id="ph1">&lt;codeEntityReference&gt;</ph>T:System.Management.Automation.Provider.DriveCmdletProvider<ph id="ph2">&lt;/codeEntityReference&gt;</ph>.<ph id="ph3">&lt;/para&gt;
                &lt;/definition&gt;
                &lt;definedTerm&gt;</ph>AccessDBProviderSample03<ph id="ph4">&lt;/definedTerm&gt;
                &lt;definition&gt;
                  &lt;para&gt;</ph>Показывает, как перезаписать методы <ph id="ph5">&lt;codeEntityReference&gt;</ph>M:System.Management.Automation.Provider.ItemCmdletProvider.GetItem(System.String)<ph id="ph6">&lt;/codeEntityReference&gt;</ph> и <ph id="ph7">&lt;codeEntityReference&gt;</ph>M:System.Management.Automation.Provider.ItemCmdletProvider.SetItem(System.String,System.Object)<ph id="ph8">&lt;/codeEntityReference&gt;</ph> для поддержки вызовов в командлеты Get-Item и Set-Item.</target>         
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>The provider class in this sample derives from the <ph id="ph1">&lt;codeEntityReference&gt;</ph>T:System.Management.Automation.Provider.ItemCmdletProvider<ph id="ph2">&lt;/codeEntityReference&gt;</ph> class.<ph id="ph3">&lt;/para&gt;
                &lt;/definition&gt;
                &lt;definedTerm&gt;</ph>AccessDBProviderSample04<ph id="ph4">&lt;/definedTerm&gt;
                &lt;definition&gt;
                  &lt;para&gt;</ph>Shows how to overwrite container methods to support calls to the Copy-Item, Get-ChildItem, New-Item, and Remove-Item cmdlets.</source>
          <target state="translated">Класс поставщика в этом примере является производным от класса <ph id="ph1">&lt;codeEntityReference&gt;</ph>T:System.Management.Automation.Provider.ItemCmdletProvider<ph id="ph2">&lt;/codeEntityReference&gt;</ph>.<ph id="ph3">&lt;/para&gt;
                &lt;/definition&gt;
                &lt;definedTerm&gt;</ph>AccessDBProviderSample04<ph id="ph4">&lt;/definedTerm&gt;
                &lt;definition&gt;
                  &lt;para&gt;</ph>Показывает, как перезаписать методы контейнера для поддержки вызовов в командлеты Copy-Item, Get-ChildItem, New-Item и Remove-Item.</target>         
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>These methods should be implemented when the data store contains items that are containers.</source>
          <target state="translated">Эти методы должны быть реализованы, когда хранилище данных содержит элементы, являющиеся контейнерами.</target>         
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>A container is a group of child items under a common parent item.</source>
          <target state="translated">Контейнер — это группа дочерних элементов в составе общего родительского элемента.</target>         
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>The provider class in this sample derives from the <ph id="ph1">&lt;codeEntityReference&gt;</ph>T:System.Management.Automation.Provider.ItemCmdletProvider<ph id="ph2">&lt;/codeEntityReference&gt;</ph> class.<ph id="ph3">&lt;/para&gt;
                &lt;/definition&gt;
                &lt;definedTerm&gt;</ph>AccessDBProviderSample05<ph id="ph4">&lt;/definedTerm&gt;
                &lt;definition&gt;
                  &lt;para&gt;</ph>Shows how to overwrite container methods to support calls to the Move-Item and Join-Path cmdlets.</source>
          <target state="translated">Класс поставщика в этом примере является производным от класса <ph id="ph1">&lt;codeEntityReference&gt;</ph>T:System.Management.Automation.Provider.ItemCmdletProvider<ph id="ph2">&lt;/codeEntityReference&gt;</ph>.<ph id="ph3">&lt;/para&gt;
                &lt;/definition&gt;
                &lt;definedTerm&gt;</ph>AccessDBProviderSample05<ph id="ph4">&lt;/definedTerm&gt;
                &lt;definition&gt;
                  &lt;para&gt;</ph>Показывает, как перезаписать методы контейнера для поддержки вызовов в командлеты Move-Item и Join-Path.</target>         
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>These methods should be implemented when the user needs to move items within a container and if the data store contains nested containers.</source>
          <target state="translated">Эти методы должны быть реализованы, когда пользователю требуется переместить элементы в контейнере, если хранилище данных содержит вложенные контейнеры.</target>         
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>The provider class in this sample derives from the <ph id="ph1">&lt;codeEntityReference&gt;</ph>T:System.Management.Automation.Provider.NavigationCmdletProvider<ph id="ph2">&lt;/codeEntityReference&gt;</ph> class.<ph id="ph3">&lt;/para&gt;
                &lt;/definition&gt;
                &lt;definedTerm&gt;</ph>AccessDBProviderSample06<ph id="ph4">&lt;/definedTerm&gt;
                &lt;definition&gt;
                  &lt;para&gt;</ph>Shows how to overwrite content methods to support calls to the Clear-Content, Get-Content, and Set-Content cmdlets.</source>
          <target state="translated">Класс поставщика в этом примере является производным от класса <ph id="ph1">&lt;codeEntityReference&gt;</ph>T:System.Management.Automation.Provider.NavigationCmdletProvider<ph id="ph2">&lt;/codeEntityReference&gt;</ph>.<ph id="ph3">&lt;/para&gt;
                &lt;/definition&gt;
                &lt;definedTerm&gt;</ph>AccessDBProviderSample06<ph id="ph4">&lt;/definedTerm&gt;
                &lt;definition&gt;
                  &lt;para&gt;</ph>Показывает, как перезаписать методы содержимого для поддержки вызовов в командлеты Clear-Content, Get-Content и Set-Content.</target>         
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>These methods should be implemented when the user needs to manage the content of the items in the data store.</source>
          <target state="translated">Эти методы должны быть реализованы, когда пользователю требуется управлять содержимым элементов в хранилище данных.</target>         
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>The provider class in this sample derives from the <ph id="ph1">&lt;codeEntityReference&gt;</ph>T:System.Management.Automation.Provider.NavigationCmdletProvider<ph id="ph2">&lt;/codeEntityReference&gt;</ph> class, and it implements the <ph id="ph3">&lt;codeEntityReference&gt;</ph>T:System.Management.Automation.Provider.IContentCmdletProvider<ph id="ph4">&lt;/codeEntityReference&gt;</ph> interface.</source>
          <target state="translated">Класс поставщика в этом примере является производным от класса <ph id="ph1">&lt;codeEntityReference&gt;</ph>T:System.Management.Automation.Provider.NavigationCmdletProvider<ph id="ph2">&lt;/codeEntityReference&gt;</ph>, он реализует интерфейс <ph id="ph3">&lt;codeEntityReference&gt;</ph>T:System.Management.Automation.Provider.IContentCmdletProvider<ph id="ph4">&lt;/codeEntityReference&gt;</ph>.</target>         
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>