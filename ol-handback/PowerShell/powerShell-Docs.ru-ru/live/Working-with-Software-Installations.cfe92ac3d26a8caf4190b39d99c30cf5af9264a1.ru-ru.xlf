<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ru-ru">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-4fb33c9" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">13fdac5369d70289d7a0b5115a04879f707e47fc</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">scripting\getting-started\cookbooks\Working-with-Software-Installations.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions" />
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">5ecd71d441d3188fa61a8a2cd3ea5f959da5734f</xliffext:olskeletonhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Working with Software Installations</source>
          <target state="translated">Работа с программами установки программного обеспечения</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>powershell,cmdlet</source>
          <target state="translated">powershell,командлет</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Working with Software Installations</source>
          <target state="translated">Работа с программами установки программного обеспечения</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Applications that are designed to use Windows Installer can be accessed through WMI's <bpt id="p1">**</bpt>Win32_Product<ept id="p1">**</ept> class, but not all applications in use today use the Windows Installer.</source>
          <target state="translated">Доступ к приложениям, использующим установщик Windows, можно получить в классе <bpt id="p1">**</bpt>Win32_Product<ept id="p1">**</ept> WMI, но не все современные приложения используют установщик Windows.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Because the Windows Installer provides the widest range of standard techniques for working with installable applications, we will focus primarily on those applications.</source>
          <target state="translated">Так как установщик Windows предоставляет самый широкий ряд стандартных методов работы с устанавливаемыми приложениями, обратим внимание в первую очередь на эти приложения.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Applications that use alternate setup routines will generally not be managed by the Windows Installer.</source>
          <target state="translated">Установщик Windows обычно не управляет приложениями, использующими другие процедуры установки.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Specific techniques for working with those applications will depend on the installer software and decisions made by the application developer.</source>
          <target state="translated">Конкретные техники работы с этими приложениями будут зависеть от программного обеспечения установщика и решений, принятых разработчиком приложения.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Applications that are installed by copying the application files to the computer usually cannot be managed by using techniques discussed here.</source>
          <target state="translated">Приложения, которые устанавливаются путем копирования файлов приложения на компьютер, обычно не могут управляться методами, описанными здесь.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>You can manage these applications as files and folders by using the techniques discussed in the "Working With Files and Folders" section.</source>
          <target state="translated">Вы можете управлять этими приложениями, как файлами и папками, с помощью способов, приведенных в разделе "Работа с файлами и папками".</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Listing Windows Installer Applications</source>
          <target state="translated">Создание списков приложений установщика Windows</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>To list the applications installed with the Windows Installer on a local or remote system, use the following simple WMI query:</source>
          <target state="translated">Чтобы создать список приложений, установленных с помощью установщика Windows в локальной или удаленной системе, используйте следующий простой запрос WMI:</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>To display all of the properties of the Win32_Product object to the display, use the Properties parameter of the formatting cmdlets, such as the Format-List cmdlet, with a value of <ph id="ph1">\*</ph> (all).</source>
          <target state="translated">Чтобы отобразить все свойства объекта Win32_Product, используйте параметр Properties командлетов форматирования, например Format-List, со значением <ph id="ph1">\*</ph> (все).</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Or, you could use the <bpt id="p1">**</bpt>Get-WmiObject Filter<ept id="p1">**</ept> parameter to select only Microsoft .NET Framework 2.0.</source>
          <target state="translated">Можно также использовать параметр <bpt id="p1">**</bpt>Get-WmiObject Filter<ept id="p1">**</ept>, чтобы выбрать только Microsoft .NET Framework 2.0.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Because the filter used in this command is a WMI filter, it uses WMI Query Language (WQL) syntax, not Windows PowerShell syntax.</source>
          <target state="translated">Так как фильтр, использованный в этой команде, является фильтром WMI, он использует синтаксис языка запросов WMI (WQL), а не синтаксис Windows PowerShell.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Instead,:</source>
          <target state="translated">Вместо этого:</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Note that WQL queries frequently use characters, such as spaces or equal signs, that have a special meaning in Windows PowerShell.</source>
          <target state="translated">Обратите внимание, что в запросах WQL часто используются символы (например, пробелы или знаки равенства), которые имеют особое значение в Windows PowerShell.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>For this reason, it is prudent to always enclose the value of the Filter parameter in quotation marks.</source>
          <target state="translated">По этой причине целесообразно всегда заключать значение параметра фильтра в кавычки.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>You can also use the Windows PowerShell escape character, a backtick (<ph id="ph1">\`</ph>), although it may not improve readability.</source>
          <target state="translated">Кроме того, можно использовать escape-символ Windows PowerShell — обратный апостроф (<ph id="ph1">\`</ph>), хотя это может ухудшить удобочитаемость.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>The following command is equivalent to the previous command and returns the same results, but uses the backtick to escape special characters, instead of quoting the entire filter string.</source>
          <target state="translated">Следующая команда эквивалентна предыдущей и возвращает те же результаты, но использует обратный апостроф в качестве escape-символа для специальных знаков вместо того, чтобы заключать в кавычки всю строку фильтра.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>To list only the properties that interest you, use the Property parameter of the formatting cmdlets to list the desired properties.</source>
          <target state="translated">Чтобы создать список только интересующих вас свойств, используйте параметр Property командлетов форматирования.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Finally, to find only the names of installed applications, a simple <bpt id="p1">**</bpt>Format-Wide<ept id="p1">**</ept> statement simplifies the output:</source>
          <target state="translated">Наконец, чтобы найти имена только установленных приложений, упростите выходные данные с помощью оператора <bpt id="p1">**</bpt>Format-Wide<ept id="p1">**</ept>:</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Although we now have several ways to look at applications that used the Windows Installer for installation, we have not considered other applications.</source>
          <target state="translated">Несмотря на то что теперь нам известно несколько способов поиска приложений, использовавших установщик Windows, другие приложения не были рассмотрены.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Because most standard applications register their uninstaller with Windows, we can work with those locally by finding them in the Windows registry.</source>
          <target state="translated">Так как большинство стандартных приложений регистрируют программу удаления в Windows, с ними можно работать локально, в реестре Windows.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Listing All Uninstallable Applications</source>
          <target state="translated">Создание списка всех удаленных приложений</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Although there is no guaranteed way to find every application on a system, it is possible to find all programs with listings displayed in the Add or Remove Programs dialog box.</source>
          <target state="translated">Несмотря на то что не существует гарантированного способа найти все приложения в системе, можно найти все программы со списками, отображенными в диалоговом окне "Добавление или удаление программ".</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Add or Remove Programs finds these applications in the following registry key:</source>
          <target state="translated">В окне "Добавление или удаление программ" выполняется поиск этих приложений в следующем разделе реестра:</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>HKEY_LOCAL_MACHINE<ph id="ph1">\\</ph>Software<ph id="ph2">\\</ph>Microsoft<ph id="ph3">\\</ph>Windows<ph id="ph4">\\</ph>CurrentVersion<ph id="ph5">\\</ph>Uninstall<ept id="p1">**</ept>.</source>
          <target state="translated"><bpt id="p1">**</bpt>HKEY_LOCAL_MACHINE<ph id="ph1">\\</ph>Software<ph id="ph2">\\</ph>Microsoft<ph id="ph3">\\</ph>Windows<ph id="ph4">\\</ph>CurrentVersion<ph id="ph5">\\</ph>Uninstall<ept id="p1">**</ept>.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>We can also examine this key to find applications.</source>
          <target state="translated">В этом разделе также можно найти приложения.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>To make it easier to view the Uninstall key, we can map a Windows PowerShell drive to this registry location:</source>
          <target state="translated">Чтобы упростить просмотр раздела "Удаление", можно сопоставить диск Windows PowerShell с данным расположением реестра:</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>HKLM:<ept id="p1">**</ept> drive is mapped to the root of <bpt id="p2">**</bpt>HKEY_LOCAL_MACHINE<ept id="p2">**</ept>, so we used that drive in the path to the Uninstall key.</source>
          <target state="translated">Диск <bpt id="p1">**</bpt>HKLM:<ept id="p1">**</ept> сопоставляется с корнем <bpt id="p2">**</bpt>HKEY_LOCAL_MACHINE<ept id="p2">**</ept>, поэтому этот диск используется в пути к разделу Uninstall.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Instead of <bpt id="p1">**</bpt>HKLM:<ept id="p1">**</ept> we could have specified the registry path by using either <bpt id="p2">**</bpt>HKLM<ept id="p2">**</ept> or <bpt id="p3">**</bpt>HKEY_LOCAL_MACHINE<ept id="p3">**</ept>.</source>
          <target state="translated">Вместо <bpt id="p1">**</bpt>HKLM:<ept id="p1">**</ept> можно было указать путь к реестру с помощью <bpt id="p2">**</bpt>HKLM<ept id="p2">**</ept> или <bpt id="p3">**</bpt>HKEY_LOCAL_MACHINE<ept id="p3">**</ept>.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>The advantage of using an existing registry drive is that we can use tab-completion to fill in the keys names, so we do not need to type them.</source>
          <target state="translated">Преимущество использования диска существующего реестра состоит в том, что теперь можно использовать клавишу TAB для заполнения названий разделов, а не вводить их.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>We now have a drive named "Uninstall" that can be used to quickly and conveniently look for application installations.</source>
          <target state="translated">Теперь диск с именем "Удаление" можно использовать для быстрого и удобного поиска установок приложений.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>We can find the number of installed applications by counting the number of registry keys in the Uninstall: Windows PowerShell drive:</source>
          <target state="translated">Количество установленных приложений можно найти, подсчитав количество разделов реестра в разделе "Uninstall" для диска Windows PowerShell:</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>We can search this list of applications further by using a variety of techniques, beginning with <bpt id="p1">**</bpt>Get-ChildItem<ept id="p1">**</ept>.</source>
          <target state="translated">С помощью разных методов, начиная с <bpt id="p1">**</bpt>Get-ChildItem<ept id="p1">**</ept>, можно дальше выполнять поиск в списке приложений.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>To get a list of applications and save them in the <bpt id="p1">**</bpt>$UninstallableApplications<ept id="p1">**</ept> variable, use the following command:</source>
          <target state="translated">Чтобы получить список приложений и сохранить их в переменную <bpt id="p1">**</bpt>$UninstallableApplications<ept id="p1">**</ept>, используйте следующую команду:</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>We are using a lengthy variable name here for clarity.</source>
          <target state="translated">В данном случае длинное имя переменной используется для ясности.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>In actual use, there is no reason to use long names.</source>
          <target state="translated">При фактическом использовании нет причин использовать длинные имена.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Although you can use tab-completion for variable names, you can also use 1–2 character names for speed.</source>
          <target state="translated">Хотя имена переменных можно заполнять нажатием клавиши TAB, для скорости можно использовать имена из 1—2 символов.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Longer, descriptive names are most useful when you are developing code for reuse.</source>
          <target state="translated">Длинные описательные имена полезны при разработке кода для повторного использования.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>To display the values of the registry entries in the registry keys under Uninstall, use the GetValue method of the registry keys.</source>
          <target state="translated">Чтобы отобразить значения записей реестра в подразделах реестра раздела "Удаление", используйте метод GetValue.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>The value of the method is the name of the registry entry.</source>
          <target state="translated">Значение метода является записью реестра.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>For example, to find the display names of applications in the Uninstall key, use the following command:</source>
          <target state="translated">Например, чтобы найти отображаемые имена приложений в разделе "Удаление", используйте следующую команду:</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>There is no guarantee that these values are unique.</source>
          <target state="translated">Нет никакой гарантии, что эти значения уникальны.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>In the following example, two installed items appear as "Windows Media Encoder 9 Series":</source>
          <target state="translated">В следующем примере два установленных элемента отображаются как Windows Media Encoder 9 Series:</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Installing Applications</source>
          <target state="translated">Установка приложений</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>You can use the <bpt id="p1">**</bpt>Win32_Product<ept id="p1">**</ept> class to install Windows Installer packages, remotely or locally.</source>
          <target state="translated">Вы можете использовать класс <bpt id="p1">**</bpt>Win32_Product<ept id="p1">**</ept> для удаленной или локальной установки пакетов установщика Windows.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>On Windows Vista, Windows Server 2008, and later versions of Windows, to install an application, you must start Windows PowerShell with the "Run as administrator" option.</source>
          <target state="translated">Чтобы установить приложение в Windows Vista, Windows Server 2008 и более поздних версиях Windows, необходимо запустить Windows PowerShell с параметром "Запустить от имени администратора".</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>When installing remotely, use a Universal Naming Convention (UNC) network path to specify the path to the .msi package, because the WMI subsystem does not understand Windows PowerShell paths.</source>
          <target state="translated">При удаленной установке используйте сетевой UNC-путь, чтобы указать путь к пакету MSI, так как подсистема WMI не распознает пути Windows PowerShell.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>For example, to install the NewPackage.msi package located in the network share <ph id="ph1">\\\\</ph>AppServ<ph id="ph2">\\</ph>dsp on the remote computer PC01, type the following command at the Windows PowerShell prompt:</source>
          <target state="translated">Например, чтобы установить пакет NewPackage.msi, расположенный в общей сетевой папке <ph id="ph1">\\\\</ph>AppServ<ph id="ph2">\\</ph>dsp на удаленном компьютере PC01, введите следующую команду в командной строке Windows PowerShell:</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Applications that do not use Windows Installer technology may have application-specific methods available for automated deployment.</source>
          <target state="translated">Приложения, которые не используют метод установщика Windows, могут включать специальные методы для автоматического развертывания конкретного приложения.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>To determine whether there is a method for deployment automation, check the documentation for the application or consult the application vendor's support system.</source>
          <target state="translated">Чтобы определить, существует ли метод автоматического развертывания, проверьте документацию приложения или обратитесь в службу поддержки поставщика приложения.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>In some cases, even if the application vendor did not specifically design the application for installation automation, the installer software manufacturer may have some techniques for automation.</source>
          <target state="translated">В некоторых случаях даже в том случае, если поставщик приложения не разрабатывал способы автоматической установки в приложении, производитель программного обеспечения установщика мог включить некоторые методы автоматизации.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Removing Applications</source>
          <target state="translated">Удаление приложений</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Removing a Windows Installer package by using Windows PowerShell works in approximately the same way as installing a package.</source>
          <target state="translated">Удаление пакета установщика Windows с помощью Windows PowerShell работает примерно так же, как и установка пакета.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>Here is an example that selects the package to uninstall based on its name; in some cases it may be easier to filter with the <bpt id="p1">**</bpt>IdentifyingNumber<ept id="p1">**</ept>:</source>
          <target state="translated">Далее представлен пример, в котором пакет для удаления выбирается на основе имени. В некоторых случаях его может быть проще отфильтровать с помощью <bpt id="p1">**</bpt>IdentifyingNumber<ept id="p1">**</ept>:</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Removing other applications is not quite so simple, even when done locally.</source>
          <target state="translated">Удаление других приложений не так просто, даже если оно выполняется локально.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>We can find the command line uninstallation strings for these applications by extracting the <bpt id="p1">**</bpt>UninstallString<ept id="p1">**</ept> property.</source>
          <target state="translated">Строки удаления командной строки для этих приложений можно найти путем извлечения свойства <bpt id="p1">**</bpt>UninstallString<ept id="p1">**</ept>.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>This method works for Windows Installer applications and for older programs appearing under the Uninstall key:</source>
          <target state="translated">Этот способ работает для приложений установщика Windows и более старых программ, отображающихся в разделе "Удаление":</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>You can filter the output by the display name, if you like:</source>
          <target state="translated">Выходные данные при необходимости можно отфильтровать по отображаемому имени:</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>However, these strings may not be directly usable from the Windows PowerShell prompt without some modification.</source>
          <target state="translated">Однако эти строки невозможно напрямую использовать из командной строки Windows PowerShell без внесения некоторых изменений.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>Upgrading Windows Installer Applications</source>
          <target state="translated">Обновление приложений установщика Windows</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>To upgrade an application, you need to know the name of the application and the path to the application upgrade package.</source>
          <target state="translated">Чтобы обновить приложение, необходимо знать название приложения и путь к пакету обновлений приложения.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>With that information, you can upgrade an application with a single Windows PowerShell command:</source>
          <target state="translated">Получив эти сведения, можно обновить приложение с помощью одной команды Windows PowerShell:</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>