<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ru-ru">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-56a7a5e" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">db5f410c8f84949c969f21ed59ac48a4e31e91fd</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">scripting\getting-started\fundamental\Understanding-Important-Windows-PowerShell-Concepts.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions" />
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">9899b997eb3f0fab1c30143868cbd8d7890b0ce5</xliffext:olskeletonhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Understanding Important Windows PowerShell Concepts</source>
          <target state="translated">Основные сведения о важных концепциях Windows PowerShell</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>powershell,cmdlet</source>
          <target state="translated">powershell,командлет</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Understanding Important Windows PowerShell Concepts</source>
          <target state="translated">Основные сведения о важных концепциях Windows PowerShell</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>The Windows PowerShell design integrates concepts from many different environments.</source>
          <target state="translated">Структура Windows PowerShell вобрала в себя концепции из многих различных сред.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Several of them are familiar to people with experience in specific shells or programming environments, but very few people will know about all of them.</source>
          <target state="translated">Некоторые из них знакомы пользователям с опытом работы в конкретных оболочках или средах программирования, но очень немногие знают их все.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Looking at some of these concepts provides a useful overview of the shell.</source>
          <target state="translated">Обзор некоторых из этих концепций поможет лучше разобраться в работе оболочки.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Commands Are Not Text<ph id="ph1">\-</ph>Based</source>
          <target state="translated">Команды не основаны на тексте</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Unlike traditional command<ph id="ph1">\-</ph>line interface commands, Windows PowerShell cmdlets are designed to deal with objects <ph id="ph2">\-</ph> structured information that is more than just a string of characters appearing on the screen.</source>
          <target state="translated">В отличие от команд традиционных интерфейсов командной строки, командлеты Windows PowerShell предназначены для работы с объектами, то есть структурированной информацией, которая представляет собой нечто большее, чем просто набор отображаемых на экране символов.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Command output always carries along extra information that you can use if you need it.</source>
          <target state="translated">Выходные данные команды всегда содержат дополнительную информацию, которую при необходимости можно использовать.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>We will discuss this topic in depth in this document.</source>
          <target state="translated">В настоящем документе мы рассмотрим этот аспект подробнее.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>If you have used text<ph id="ph1">\-</ph>processing tools to process command<ph id="ph2">\-</ph>line data in the past, you will find that they behave differently if you try to use them in Windows PowerShell.</source>
          <target state="translated">Если ранее вы уже использовали средства обработки текста для работы с данными командной строки, вы поймете, что в Windows PowerShell они работают иначе.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>In most cases, you do not need text<ph id="ph1">\-</ph>processing tools to extract specific information.</source>
          <target state="translated">В большинстве случаев для получения конкретных сведений средства обработки текста не нужны.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>You can access portions of the data directly by using standard Windows PowerShell object manipulation commands.</source>
          <target state="translated">Стандартные команды для работы с объектами Windows PowerShell позволяют получить прямой доступ к фрагментам данных.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>The Command Family Is Extensible</source>
          <target state="translated">Семейство команд является расширяемым</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Interfaces such as Cmd.exe do not provide a way for you to directly extend the built<ph id="ph1">\-</ph>in command set.</source>
          <target state="translated">Такие интерфейсы, как Cmd.exe, не позволяют расширить набор встроенных команд напрямую.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>You can create external command<ph id="ph1">\-</ph>line tools that run in Cmd.exe, but these external tools do not have services, such as Help integration, and Cmd.exe does not automatically know that they are valid commands.</source>
          <target state="translated">Можно создать внешние программы командной строки, запускаемые в Cmd.exe, но у них нет служб, таких как интеграция справки, и Cmd.exe не может автоматически определить, что это допустимые команды.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>The native binary commands in Windows PowerShell, known as <bpt id="p1">*</bpt>cmdlets<ept id="p1">*</ept> (pronounced command<ph id="ph1">\-</ph>lets), can be augmented by cmdlets that you create and that you add to Windows PowerShell by using snap<ph id="ph2">\-</ph>ins.</source>
          <target state="translated">Собственные двоичные команды в Windows PowerShell, известные как <bpt id="p1">*</bpt>командлеты<ept id="p1">*</ept>, можно дополнить командлетами, созданными самостоятельно и добавленными в Windows PowerShell с помощью оснасток.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Windows PowerShell <bpt id="p1">*</bpt>snap<ph id="ph1">\-</ph>ins<ept id="p1">*</ept> are compiled, just like binary tools in any other interface.</source>
          <target state="translated"><bpt id="p1">*</bpt>Оснастки<ept id="p1">*</ept> Windows PowerShell компилируются аналогично двоичным средствам в любом другом интерфейсе.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>You can use them to add Windows PowerShell providers to the shell, as well as new cmdlets.</source>
          <target state="translated">Их можно использовать для добавления поставщиков Windows PowerShell в оболочку, а также новых командлетов.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Because of the special nature of the Windows PowerShell internal commands, we will refer to them as <bpt id="p1">*</bpt>cmdlets<ept id="p1">*</ept>.</source>
          <target state="translated">Из-за специализированного характера внутренних команд Windows PowerShell мы будем называть их <bpt id="p1">*</bpt>командлетами<ept id="p1">*</ept>.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Windows PowerShell can run commands other than cmdlets.</source>
          <target state="translated">Помимо командлетов Windows PowerShell может выполнять и другие команды.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>We will not be discussing them in detail in the Windows PowerShell User's Guide, but they are useful to know about as categories of command types.</source>
          <target state="translated">Мы не будем подробно рассматривать их в руководстве пользователя Windows PowerShell, однако знания об этих категориях типов команд могут пригодиться.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Windows PowerShell supports scripts that are analogous to UNIX shell scripts and Cmd.exe batch files, but have a .ps1 file name extension.</source>
          <target state="translated">Windows PowerShell поддерживает сценарии, которые аналогичны сценариям оболочки UNIX и пакетным файлам Cmd.exe, но имеют расширение PS1.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Windows PowerShell also allows you to create internal functions that can be used directly in the interface or in scripts.</source>
          <target state="translated">Windows PowerShell также позволяет создавать внутренние функции для использования непосредственно в интерфейсе или сценариях.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Windows PowerShell Handles Console Input and Display</source>
          <target state="translated">Windows PowerShell обрабатывает ввод и отображение данных в консоли</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>When you type a command, Windows PowerShell always processes the command<ph id="ph1">\-</ph>line input directly.</source>
          <target state="translated">При вводе команды Windows PowerShell всегда обрабатывает входные данные командной строки напрямую.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Windows PowerShell also formats the output that you see on the screen.</source>
          <target state="translated">Windows PowerShell также форматирует выходные данные на экране.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>This is significant because it reduces the work required of each cmdlet and ensures that you can always do things the same way regardless of which cmdlet you are using.</source>
          <target state="translated">Это важно, поскольку уменьшает трудозатраты на каждый командлет и обеспечивает согласованность работы независимо от используемого командлета.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>One example of how this simplifies life for both tool developers and users is command<ph id="ph1">\-</ph>line Help.</source>
          <target state="translated">Одним из примеров того, как это упрощает жизнь разработчиками и пользователям, является справка командной строки.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Traditional command<ph id="ph1">\-</ph>line tools have their own schemes for requesting and displaying Help.</source>
          <target state="translated">Традиционные программы командной строки используют собственные схемы для запроса и отображения справки.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Some command<ph id="ph1">\-</ph>line tools use <bpt id="p1">**</bpt><ph id="ph2">\/</ph>?<ept id="p1">**</ept></source>
          <target state="translated">Некоторые программы используют <bpt id="p1">**</bpt><ph id="ph2">\/</ph>?<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>to trigger the Help display; others use <bpt id="p1">**</bpt><ph id="ph1">\-</ph>?<ept id="p1">**</ept>, <bpt id="p2">**</bpt><ph id="ph2">\/</ph>H<ept id="p2">**</ept>, or even <bpt id="p3">**</bpt><ph id="ph3">\/\/</ph><ept id="p3">**</ept>.</source>
          <target state="translated">для отображения справки; другие используют <bpt id="p1">**</bpt><ph id="ph1">\-</ph>?<ept id="p1">**</ept>, <bpt id="p2">**</bpt><ph id="ph2">\/</ph>H<ept id="p2">**</ept> или даже <bpt id="p3">**</bpt><ph id="ph3">\/\/</ph><ept id="p3">**</ept>.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Some will display Help in a GUI window, rather than in the console display.</source>
          <target state="translated">Некоторые отображают справку в окне графического пользовательского интерфейса, а не в окне консоли.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Some complex tools, such as application updaters, unpack internal files before displaying their Help.</source>
          <target state="translated">Некоторые сложные средства, такие как средства обновления приложений, распаковывают внутренние файлы перед отображением справки.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>If you use the wrong parameter, the tool might ignore what you typed and begin performing a task automatically.</source>
          <target state="translated">Если используется неправильный параметр, средство может пропустить введенные данные и автоматически начать выполнение задачи.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>When you enter a command in Windows PowerShell, everything you enter is automatically parsed and pre<ph id="ph1">\-</ph>processed by Windows PowerShell.</source>
          <target state="translated">При указании команды в Windows PowerShell система автоматически анализирует и предварительно обрабатывает все вводимые данные.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>If you use the <bpt id="p1">**</bpt><ph id="ph1">\-</ph>?<ept id="p1">**</ept></source>
          <target state="translated">Если вы используете параметр <bpt id="p1">**</bpt><ph id="ph1">\-</ph>?<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>parameter with a Windows PowerShell cmdlet, it always means "show me Help for this command".</source>
          <target state="translated">с командлетом Windows PowerShell, это всегда означает "показать справку для этой команды".</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Cmdlet developers do not have to parse the command; they only need to provide the Help text.</source>
          <target state="translated">Анализировать команду разработчикам командлетов не нужно, достаточно лишь предоставить текст справки.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>It is important to understand that the Help features of Windows PowerShell are available even when you run traditional command<ph id="ph1">\-</ph>line tools in Windows PowerShell.</source>
          <target state="translated">Важно понимать, что функции справки Windows PowerShell являются доступными даже при запуске традиционных программ командной строки в Windows PowerShell.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Windows PowerShell processes the parameters and passes the results to the external tools.</source>
          <target state="translated">Windows PowerShell обрабатывает параметры и передает результаты во внешние средства.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>If you run an graphic application in Windows PowerShell, the window for the application opens.</source>
          <target state="translated">При запуске графического приложения в Windows PowerShell для него открывается окно.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Windows PowerShell intervenes only when processing the command<ph id="ph1">\-</ph>line input you supply or the application output returned to the console window; it does not affect how the application works internally.</source>
          <target state="translated">Windows PowerShell вмешивается в процесс только при обработке указанных вами входных данных команды или при возврате выходных данных приложения в окно консоли. На внутреннюю работу приложения система не влияет.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Windows PowerShell Uses Some C<ph id="ph1">\#</ph> Syntax</source>
          <target state="translated">Windows PowerShell использует некоторую часть синтаксиса C<ph id="ph1">\#</ph></target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Windows PowerShell has syntax features and keywords that are very similar to those used in the C<ph id="ph1">\#</ph> programming language, because Windows PowerShell is based on the .NET Framework.</source>
          <target state="translated">Windows PowerShell содержит функции и ключевые слова синтаксиса, которые очень похожи на применяемые в языке C<ph id="ph1">\#</ph>, поскольку Windows PowerShell основана на платформе .NET Framework.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Learning Windows PowerShell will make it much easier to learn C<ph id="ph1">\#</ph>, if you are interested in the language.</source>
          <target state="translated">Знакомство с Windows PowerShell значительно упростит освоение C<ph id="ph1">\#</ph>, если вам это требуется.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>If you are not a C<ph id="ph1">\#</ph> programmer, this similarity is not important.</source>
          <target state="translated">Если вы не программируете на C<ph id="ph1">\#</ph>, данный аспект не имеет значения.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>However, if you are already familiar with C<ph id="ph1">\#</ph>, the similarities can make learning Windows PowerShell much easier.</source>
          <target state="translated">Однако, если вы уже знакомы с C<ph id="ph1">\#</ph>, описанные сходства значительно упрощают изучение Windows PowerShell.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>