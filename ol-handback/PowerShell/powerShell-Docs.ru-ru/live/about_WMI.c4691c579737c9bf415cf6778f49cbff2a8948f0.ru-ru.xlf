<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ru-ru">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-1c394fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">8ef5aef3b1694ed901f376c0082b4271f8028b6e</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">reference\3.0\Microsoft.PowerShell.Core\About\about_WMI.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions" />
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">884ab348c06e8167b1aa40f6aceca367d3d44f08</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">68b540d4c9f6790f17e57e1b9cd515304fd0953d</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>about_WMI</source>
          <target state="translated">about_WMI</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>powershell, cmdlet</source>
          <target state="translated">PowerShell, командлет</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>About WMI</source>
          <target state="translated">О WMI</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>about_WMI</source>
          <target state="translated">about_WMI</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>about_WMI</source>
          <target state="translated">about_WMI</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>SHORT DESCRIPTION</source>
          <target state="translated">КРАТКОЕ ОПИСАНИЕ</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Windows Management Instrumentation (WMI) uses the Common Information Model (CIM) to represent systems, applications, networks, devices, and other manageable components of the modern enterprise.</source>
          <target state="translated">Инструментарий управления Windows (WMI) для представления систем, приложений, сетей, устройств и других управляемых компонентов современного предприятия используется информационной модели (CIM).</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>LONG DESCRIPTION</source>
          <target state="translated">ПОДРОБНОЕ ОПИСАНИЕ</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Windows Management Instrumentation (WMI) is Microsoft’s implementation of Web-Based Enterprise Management (WBEM), the industry standard.</source>
          <target state="translated">Инструментарий управления Windows (WMI) является реализацией Майкрософт веб-управления предприятием (WBEM), отраслевой стандарт.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Classic WMI uses DCOM to communicate with networked devices to manage remote systems.</source>
          <target state="translated">Классический WMI использует DCOM для связи с сетевых устройств для управления удаленными системами.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Windows PowerShell� 3.0 introduces a CIM provider model that uses WinRM to remove the dependency on DCOM.</source>
          <target state="translated">Windows PowerShell 3.0 введена модель поставщика CIM, использует WinRM, чтобы удалить зависимость от DCOM.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>This CIM provider model also uses new WMI provider APIs that enable developers to write  Windows PowerShell cmdlets in native code (C<ph id="ph1">\+\+</ph>).</source>
          <target state="translated">Эта модель CIM поставщика также использует новый поставщик WMI API, позволяющие разработчикам создавать командлеты Windows PowerShell в машинном коде (C<ph id="ph1">\+\+</ph>).</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Do not confuse WMI providers with  Windows PowerShell providers.</source>
          <target state="translated">Не следует путать поставщиков WMI с помощью поставщиков Windows PowerShell.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Many Windows features have an associated WMI provider that exposes their management capabilities.</source>
          <target state="translated">Многие функции Windows имеют связанный поставщик WMI, который предоставляет возможности управления.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>To get WMI providers, run a WMI query that gets instances of the __Provider WMI class, such as the following query.</source>
          <target state="translated">Чтобы получить поставщиков WMI, выполните запрос WMI, который возвращает экземпляры __Provider класс WMI, например, следующий запрос.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>THREE COMPONENTS OF WMI</source>
          <target state="translated">ТРИ КОМПОНЕНТА WMI</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>The following three components of WMI interact with  Windows PowerShell: Namespaces, Providers, and Classes.</source>
          <target state="translated">Следующие три компонента WMI взаимодействовать с Windows PowerShell: классы, пространства имен и поставщиков.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>WMI Namespaces organize WMI providers and WMI classes into groups of related components.</source>
          <target state="translated">Пространства имен WMI поставщики WMI и классов WMI объединять группы связанных компонентов.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>In this way, they are similar to .NET Framework namespaces.</source>
          <target state="translated">Таким образом они схожи с пространствами имен .NET Framework.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Namespaces are not physical locations, but are more like logical databases.</source>
          <target state="translated">Пространства имен не физического расположения, но больше похожи на логические базы данных.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>All WMI namespaces are instances of the __Namespace system class.</source>
          <target state="translated">Все пространства имен WMI являются экземплярами класса __Namespace системы.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>The default WMI namespace is Root<ph id="ph1">\/</ph>CIMV2 (since Microsoft Windows 2000).</source>
          <target state="translated">Пространство имен WMI по умолчанию является корневым<ph id="ph1">\/</ph>CIMV2 (начиная с Microsoft Windows 2000).</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>To use  Windows PowerShell to get WMI namespaces in the current session, use a command with the following format.</source>
          <target state="translated">Для использования Windows PowerShell для получения пространств имен WMI в текущем сеансе, введите команду в следующем формате.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>To get WMI namespaces in other namespaces, use the Namespace parameter to change the location of the search.</source>
          <target state="translated">Чтобы получить пространств имен WMI в других пространствах имен, используйте параметр пространства имен для изменения расположения для поиска.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>The following command finds WMI namespaces that reside in the Root<ph id="ph1">\/</ph>Cimv2<ph id="ph2">\/</ph>Applications namespace.</source>
          <target state="translated">Следующая команда находит пространств имен WMI, находятся в корне<ph id="ph1">\/</ph>Cimv2<ph id="ph2">\/</ph>пространства имен приложения.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>WMI namespaces are hierarchical.</source>
          <target state="translated">Пространства имен WMI являются иерархическими.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Therefore, obtaining a list of all namespaces on a particular system requires performing a recursive query starting at the root namespace.</source>
          <target state="translated">Таким образом для получения списка всех пространств имен в конкретной системе требуется выполнить рекурсивный запрос, начиная с корневого пространства имен.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>WMI Providers expose information about Windows manageable objects.</source>
          <target state="translated">Поставщики WMI предоставляют сведения об управляемых объектах Windows.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>A provider retrieves data from a component, and passes that data through WMI to a management application, such as  Windows PowerShell.</source>
          <target state="translated">Поставщик получает данные из компонента и передает эти данные с помощью инструментария WMI для приложения управления, такие как Windows PowerShell.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Most WMI providers are dynamic providers, which means that they obtain the data dynamically when it is requested through the management application.</source>
          <target state="translated">Большинство поставщиков WMI, динамические поставщиков, это означает, что они данных получают динамически при его запросе с помощью приложения управления.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>FINDING WMI CLASSES</source>
          <target state="translated">ПОИСК КЛАССОВ WMI</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>In a default installation of Windows 8, there are more than 1,100 WMI classes in Root<ph id="ph1">\/</ph>Cimv2.</source>
          <target state="translated">В установке Windows 8, существуют более 1 100 классы WMI в корневом каталоге<ph id="ph1">\/</ph>Cimv2.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>With this many WMI classes, the challenge becomes identifying the appropriate WMI class to use to perform a specific task.</source>
          <target state="translated">Такое количество классов WMI задача становится определение соответствующего класса WMI для выполнения определенной задачи.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Windows PowerShell 3.0 provides two ways to find WMI classes that are related to a specific topic.</source>
          <target state="translated">Windows PowerShell 3.0 предоставляет два способа поиска классов WMI, относящиеся к конкретной теме.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>For example,to find WMI classes in the root\CIMV2 WMI namespace that are related to disks, you can use a query such as the one shown here.</source>
          <target state="translated">Например для поиска классов WMI в пространстве имен WMI root\CIMV2, которые связаны с дисков, можно использовать запрос, как показано ниже.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>To find WMI classes that are related to memory, you might use a query such as the one shown here.</source>
          <target state="translated">Чтобы найти классов WMI, относящиеся к памяти, можно использовать запрос, как показано ниже.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>The CIM cmdlets also provide the ability to discover WMI classes.</source>
          <target state="translated">Командлеты CIM также предоставляют возможность обнаружения классов WMI.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>To do this, use the Get-CIMClass cmdlet.</source>
          <target state="translated">Чтобы сделать это, используйте командлет Get-CIMClass.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>The command shown here lists WMI classes related to video.</source>
          <target state="translated">Команда, показанный здесь список классов WMI, связанные с видео.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Tab expansion works when changing WMI namespaces, and therefore use of tab expansion makes sub-WMI namespaces easily discoverable.</source>
          <target state="translated">Вкладка расширения работает при изменении пространства имен WMI, и таким образом использование расширение функций клавиши tab делает пространств имен sub WMI простой для восприятия.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>In the following example, the Get-CimClass cmdlet lists WMI classes related to power settings.</source>
          <target state="translated">В следующем примере командлет Get-CimClass список классов WMI, связанных с параметрами управления питанием.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>To find it, type the root<ph id="ph1">\/</ph>CIMV2<ph id="ph2">\/</ph> WMI namespace, and then press type the root<ph id="ph3">\/</ph>CIMV2<ph id="ph4">\/</ph> WMI namespace, and then press the Tab key several times until the power namespace appears.</source>
          <target state="translated">Чтобы найти его, введите корневой<ph id="ph1">\/</ph>CIMV2<ph id="ph2">\/</ph> пространство имен WMI, а затем нажмите клавишу введите корневой<ph id="ph3">\/</ph>CIMV2<ph id="ph4">\/</ph> пространство имен WMI и затем нажмите клавишу Tab ключ несколько раз, пока не появится имен power.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Here is the command:</source>
          <target state="translated">Вот как это делается:</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>