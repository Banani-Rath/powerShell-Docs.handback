<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ru-ru">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-4fb33c9" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">94117fcf337ecf550d6df1d167e608ba64582c03</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">scripting\getting-started\cookbooks\Removing-Objects-from-the-Pipeline--Where-Object-.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions" />
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">7fa4618eddb532a8e2ff37aa1f858213b75153b9</xliffext:olskeletonhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Removing Objects from the Pipeline  Where Object</source>
          <target state="translated">Удаление объектов из конвейера с помощью Where-Object</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>powershell,cmdlet</source>
          <target state="translated">powershell,командлет</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Removing Objects from the Pipeline (Where-Object)</source>
          <target state="translated">Удаление объектов из конвейера (Where-Object)</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>In Windows PowerShell, you often generate and pass along more objects to a pipeline than you want.</source>
          <target state="translated">В Windows PowerShell часто создается и передается в конвейер большее количество объектов, чем требуется.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>You can specify the properties of particular objects to display by using the <bpt id="p1">**</bpt>Format<ept id="p1">**</ept> cmdlets, but this does not help with the problem of removing entire objects from the display.</source>
          <target state="translated">Чтобы указать свойства конкретного объекта, которые требуется отобразить, можно воспользоваться командлетом <bpt id="p1">**</bpt>Format<ept id="p1">**</ept>, но это не позволяет решить проблему удаления с экрана всех объектов.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>You may want to filter objects before the end of a pipeline, so you can perform actions on only a subset of the initially-generated objects.</source>
          <target state="translated">Может потребоваться отфильтровать объекты до достижения конца конвейера, чтобы выполнить те или иные действия только с подмножеством объектов, созданных изначально.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Windows PowerShell includes a <bpt id="p1">**</bpt>Where-Object<ept id="p1">**</ept> cmdlet that allows you to test each object in the pipeline and only pass it along the pipeline if it meets a particular test condition.</source>
          <target state="translated">В Windows PowerShell есть командлет <bpt id="p1">**</bpt>Where-Object<ept id="p1">**</ept>, позволяющий проверить каждый объект в конвейере и передать его дальше, только если он удовлетворяет условию теста.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Objects that do not pass the test are removed from the pipeline.</source>
          <target state="translated">Объекты, не прошедшие проверку, удаляются из конвейера.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>You supply the test condition as the value of the <bpt id="p1">**</bpt>Where-ObjectFilterScript<ept id="p1">**</ept> parameter.</source>
          <target state="translated">Условие теста передается в виде значения параметра <bpt id="p1">**</bpt>Where-ObjectFilterScript<ept id="p1">**</ept>.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Performing Simple Tests with Where-Object</source>
          <target state="translated">Выполнение простых проверок с использованием командлета Where-Object</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>The value of <bpt id="p1">**</bpt>FilterScript<ept id="p1">**</ept> is a <bpt id="p2">*</bpt>script block<ept id="p2">*</ept> -  one or more Windows PowerShell commands surrounded by braces {} - that evaluates to true or false.</source>
          <target state="translated">Значение <bpt id="p1">**</bpt>FilterScript<ept id="p1">**</ept> представляет собой <bpt id="p2">*</bpt>блок сценария<ept id="p2">*</ept> — одну или несколько команд Windows PowerShell, заключенных в фигурные скобки {}, — результатом которого могут быть значения True или False.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>These script blocks can be very simple, but creating them requires knowing about another Windows PowerShell concept, comparison operators.</source>
          <target state="translated">Такие блоки сценариев могут быть очень простыми, но для их создания требуется понимание другой концепции Windows PowerShell, а именно операторов сравнения.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>A comparison operator compares the items that appear on each side of it.</source>
          <target state="translated">Оператор сравнения сравнивает элементы, расположенные с обеих сторон оператора.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Comparison operators begin with a '-' character and are followed by a name.</source>
          <target state="translated">Запись операторов сравнения начинается знаком "-", после которого следует имя оператора.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Basic comparison operators work on almost any kind of object.</source>
          <target state="translated">Основные операторы сравнения работают, как правило, с любыми видами объектов.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>The more advanced comparison operators might only work on text or arrays.</source>
          <target state="translated">Более сложные операторы сравнения работают только с текстом или массивами.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>By default, when working with text, Windows PowerShell comparison operators are case-insensitive.</source>
          <target state="translated">По умолчанию при работе с текстом в Windows PowerShell операторы сравнения нечувствительны к регистру.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Due to parsing considerations, symbols such as &lt;,&gt;, and = are not used as comparison operators.</source>
          <target state="translated">Исходя из соображений синтаксического анализа, такие знаки, как "&lt;", "&gt;" и "=", не используются в качестве операторов сравнения.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Instead, comparison operators are comprised of letters.</source>
          <target state="translated">Вместо этого операторы сравнения записываются в буквенной форме.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>The basic comparison operators are listed in the following table.</source>
          <target state="translated">Основные операторы сравнения перечислены в таблице ниже.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Comparison Operator</source>
          <target state="translated">Оператор сравнения</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Meaning</source>
          <target state="translated">Значение</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Example (returns true)</source>
          <target state="translated">Пример (возвращает значение True)</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>-eq</source>
          <target state="translated">-eq</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>is equal to</source>
          <target state="translated">равно</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>1 -eq 1</source>
          <target state="translated">1 -eq 1</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>-ne</source>
          <target state="translated">-ne</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Is not equal to</source>
          <target state="translated">не равно</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>1 -ne 2</source>
          <target state="translated">1 -ne 2</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>-lt</source>
          <target state="translated">-lt</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Is less than</source>
          <target state="translated">меньше</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>1 -lt 2</source>
          <target state="translated">1 -lt 2</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>-le</source>
          <target state="translated">-le</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Is less than or equal to</source>
          <target state="translated">меньше или равно</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>1 -le 2</source>
          <target state="translated">1 -le 2</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>-gt</source>
          <target state="translated">-gt</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Is greater than</source>
          <target state="translated">больше</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>2 -gt 1</source>
          <target state="translated">2 -gt 1</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>-ge</source>
          <target state="translated">-ge</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Is greater than or equal to</source>
          <target state="translated">больше или равно</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>2 -ge 1</source>
          <target state="translated">2 -ge 1</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>-like</source>
          <target state="translated">-like</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Is like (wildcard comparison for text)</source>
          <target state="translated">сравнение на совпадение с учетом подстановочного знака в тексте</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>"file.doc" -like "f<ph id="ph1">\*</ph>.do?"</source>
          <target state="translated">"file.doc" -like "f<ph id="ph1">\*</ph>.do?"</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>-notlike</source>
          <target state="translated">-notlike</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Is not like (wildcard comparison for text)</source>
          <target state="translated">сравнение на несовпадение с учетом подстановочного знака в тексте</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>"file.doc" -notlike "p<ph id="ph1">\*</ph>.doc"</source>
          <target state="translated">"file.doc" -notlike "p<ph id="ph1">\*</ph>.doc"</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>-contains</source>
          <target state="translated">-contains</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Contains</source>
          <target state="translated">Содержит</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>1,2,3 -contains 1</source>
          <target state="translated">1,2,3 -contains 1</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>-notcontains</source>
          <target state="translated">-notcontains</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Does not contain</source>
          <target state="translated">не содержит</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>1,2,3 -notcontains 4</source>
          <target state="translated">1,2,3 -notcontains 4</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Where-Object script blocks use the special variable '$_' to refer to the current object in the pipeline.</source>
          <target state="translated">В блоках сценариев командлета Where-Object для обращения к текущему объекту конвейера используется специальная переменная $_.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Here is an example of how it works.</source>
          <target state="translated">Ниже приведен пример использования этой переменной.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>If you have a list of numbers, and only want to return the ones that are less than 3, you can use Where-Object to filter the numbers by typing:</source>
          <target state="translated">Если в списке содержатся числа и требуется вернуть только те, которые меньше 3, в командлете Where-Object можно настроить фильтр чисел.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Filtering Based on Object Properties</source>
          <target state="translated">Фильтрация, основанная на свойствах объектов</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Since $_ refers to the current pipeline object, we can access its properties for our tests.</source>
          <target state="translated">Так как переменная $_ ссылается на текущий объект конвейера, для выполнения проверок можно обратиться к ее свойствам.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>As an example, we can look at the Win32_SystemDriver class in WMI.</source>
          <target state="translated">Например, в инструментарии WMI можно просмотреть класс Win32_SystemDriver.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>There might be hundreds of system drivers on a particular system, but you might only be interested in a particular set of the system drivers, such as those which are currently running.</source>
          <target state="translated">В какой-то конкретной системе могут содержаться сотни системных драйверов, но для проверки необходим определенный набор системных драйверов — таких, которые запущены в данный момент.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>If you use Get-Member to view Win32_SystemDriver members (<bpt id="p1">**</bpt>Get-WmiObject -Class Win32_SystemDriver | Get-Member -MemberType Property<ept id="p1">**</ept>) you will see that the relevant property is State, and that it has a value of "Running" when the driver is running.</source>
          <target state="translated">Если для просмотра объектов класса Win32_SystemDriver использовать командлет Get-Member (<bpt id="p1">**</bpt>Get-WmiObject -Class Win32_SystemDriver | Get-Member -MemberType Property<ept id="p1">**</ept>), можно увидеть, что соответствующее свойство State принимает значение Running, когда драйвер запущен.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>You can filter the system drivers, selecting only the running ones by typing:</source>
          <target state="translated">Таким образом, фильтровать системные драйверы и выбирать только запущенные можно с помощью строки:</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>This still produces a long list.</source>
          <target state="translated">В результате будет получен длинный список.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>You may want to filter to only select the drivers set to start automatically by testing the StartMode value as well:</source>
          <target state="translated">Отфильтровать эти драйверы и выбирать только такие, запуск которых выполняется автоматически, можно проверкой значения StartMode:</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>This gives us a lot of information we no longer need because we know that the drivers are running.</source>
          <target state="translated">Результат выполнения этой команды содержит много ненужных сведений, поскольку драйверы, запущенные в данный момент, уже известны.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>In fact, the only information we probably need at this point are the name and the display name.</source>
          <target state="translated">В действительности, из всех сведений на данном этапе требуется только имя и отображаемое имя.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>The following command includes only those two properties, resulting in much simpler output:</source>
          <target state="translated">Следующая команда включает только эти два свойства, что дает более простые выходные данные:</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>There are two Where-Object elements in the above command, but they can be expressed in a single Where-Object element by using the -and logical operator, like this:</source>
          <target state="translated">Приведенная выше команда содержит два элемента Where-Object, но их можно объединить, используя знак "-" и логический оператор.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>The standard logical operators are listed in the following table.</source>
          <target state="translated">Стандартные логические операторы перечислены в следующей таблице.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>Logical Operator</source>
          <target state="translated">Логический оператор</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>Meaning</source>
          <target state="translated">Значение</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>Example (returns true)</source>
          <target state="translated">Пример (возвращает значение True)</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>-and</source>
          <target state="translated">-and</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>Logical and; true if both sides are true</source>
          <target state="translated">Логическое И; возвращает значение True, если оба операнда принимают значение True</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>(1 -eq 1) -and (2 -eq 2)</source>
          <target state="translated">(1 -eq 1) -and (2 -eq 2)</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>-or</source>
          <target state="translated">-or</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>Logical or; true if either side is true</source>
          <target state="translated">Логическое ИЛИ; возвращает значение True, если один из операндов принимает значение True</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>(1 -eq 1) -or (1 -eq 2)</source>
          <target state="translated">(1 -eq 1) -or (1 -eq 2)</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>-not</source>
          <target state="translated">-not</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>Logical not; reverses true and false</source>
          <target state="translated">Логическое НЕ; изменяет значение (True или False) на противоположное</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>-not (1 -eq 2)</source>
          <target state="translated">-not (1 -eq 2)</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>Logical not; reverses true and false</source>
          <target state="translated">Логическое НЕ; изменяет значение (True или False) на противоположное</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>(1 -eq 2)</source>
          <target state="translated">(1 -eq 2)</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>