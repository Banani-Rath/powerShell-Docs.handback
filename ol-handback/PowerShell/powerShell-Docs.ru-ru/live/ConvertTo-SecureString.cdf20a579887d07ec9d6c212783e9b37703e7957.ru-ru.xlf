<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ru-ru">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-1c394fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f0fae75edd382305179c2a1a41503ba5afcbd098</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">reference\3.0\Microsoft.PowerShell.Security\ConvertTo-SecureString.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions" />
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">3a7f9a512448177ddd062439d4e079c7e9aaa5ca</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d5ab6f0bcf897cd0f2fa41abe31c783eb0b3b172</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>powershell, cmdlet</source>
          <target state="translated">PowerShell, командлет</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>ConvertTo-SecureString</source>
          <target state="translated">Командлет ConvertTo-SecureString.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>ConvertTo-SecureString</source>
          <target state="translated">Командлет ConvertTo-SecureString.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>SYNOPSIS</source>
          <target state="translated">КРАТКИЙ ОБЗОР</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Converts encrypted standard strings to secure strings.</source>
          <target state="translated">Преобразует стандартные зашифрованные строки в защищенные.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>It can also convert plain text to secure strings.</source>
          <target state="translated">Кроме того, он конвертирует простой текст в защищенные строки.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>It is used with ConvertFrom-SecureString and Read-Host.</source>
          <target state="translated">Используется вместе с командлетами ConvertFrom-SecureString и Read-Host.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>SYNTAX</source>
          <target state="translated">СИНТАКСИС</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Secure (Default)</source>
          <target state="translated">Безопасность (по умолчанию)</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>PlainText</source>
          <target state="translated">Обычный текст</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Open</source>
          <target state="translated">Открыть</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>DESCRIPTION</source>
          <target state="translated">ОПИСАНИЕ</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>The ConvertTo-SecureString cmdlet converts encrypted standard strings into secure strings.</source>
          <target state="translated">Командлет ConvertTo-SecureString преобразует стандартные зашифрованные строки в защищенные.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>It can also convert plain text to secure strings.</source>
          <target state="translated">Кроме того, он конвертирует простой текст в защищенные строки.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>It is used with ConvertFrom-SecureString and Read-Host.</source>
          <target state="translated">Используется вместе с командлетами ConvertFrom-SecureString и Read-Host.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>The secure string created by the cmdlet can be used with cmdlets or functions that require a parameter of type SecureString.</source>
          <target state="translated">Защищенную строку, созданную этим командлетом, можно использовать с командлетами или функциями, которые требует параметра типа SecureString.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>The secure string can be converted back to an encrypted, standard string using the ConvertFrom-SecureString cmdlet.</source>
          <target state="translated">Защищенную строку можно преобразовать обратно в зашифрованную стандартную строку с помощью командлета ConvertFrom-SecureString.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>This enables it to be stored in a file for later use.</source>
          <target state="translated">Это позволит сохранить ее в файле для последующего использования.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>If the standard string being converted was encrypted with ConvertFrom-SecureString using a specified key, that same key must be provided as the value of the Key or SecureKey parameter of the ConvertTo-SecureString cmdlet.</source>
          <target state="translated">Если преобразуемая стандартная строка была зашифрована с помощью командлета ConvertFrom-SecureString с использованием указанного ключа, тот же ключ необходимо ввести в качестве значения параметра Key или SecureKey командлета ConvertTo-SecureString.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>EXAMPLES</source>
          <target state="translated">ПРИМЕРЫ</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>-------------------------- EXAMPLE 1 --------------------------</source>
          <target state="translated">-------------------------- ПРИМЕР 1 --------------------------</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>This example shows how to create a secure string from user input, convert the secure string to an encrypted standard string, and then convert the encrypted standard string back to a secure string.</source>
          <target state="translated">В этом примере показано, как создать защищенную строку из введенных пользователем данных и преобразовать ее в зашифрованную стандартную строку, а затем обратно в защищенную строку.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>The first command uses the AsSecureString parameter of the Read-Host cmdlet to create a secure string.</source>
          <target state="translated">Первая команда использует параметр AsSecureString командлета Read-Host, чтобы создать защищенную строку.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>After you enter the command, any characters that you type are converted into a secure string and then saved in the $secure variable.</source>
          <target state="translated">После ввода команды любые указанные символы преобразуются в защищенную строку и сохраняются в переменную $secure.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>The second command displays the contents of the $secure variable.</source>
          <target state="translated">Вторая команда отображает содержимое переменной $secure.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Because the $secure variable contains a secure string, Windows PowerShell displays only the System.Security.SecureString type.</source>
          <target state="translated">Поскольку переменная $secure содержит защищенную строку, Windows PowerShell отображает только тип System.Security.SecureString.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>The third command uses the ConvertFrom-SecureString cmdlet to convert the secure string in the $secure variable into an encrypted standard string.</source>
          <target state="translated">Третья команда с помощью конвейерного оператора (|) преобразует защищенную строку из переменной $secure в стандартную зашифрованную строку.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>It saves the result in the $encrypted variable.</source>
          <target state="translated">Результат сохраняется в переменную $encrypted.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>The fourth command displays the encrypted string in the value of the $encrypted variable.</source>
          <target state="translated">Четвертая команда отображает зашифрованную строку в значении переменной $encrypted.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>The fifth command uses the ConvertTo-SecureString cmdlet to convert the encrypted standard string in the $encrypted variable back into a secure string.</source>
          <target state="translated">Пятая команда с помощью командлета ConvertTo-SecureString преобразует стандартную зашифрованную строку из переменной $encrypted обратно в защищенную строку.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>It saves the result in the $secure2 variable.</source>
          <target state="translated">Результат сохраняется в переменную $secure2.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>The sixth command displays the value of the $secure2 variable.</source>
          <target state="translated">Шестая команда отображает содержимое переменной $secure2.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>The SecureString type indicates that the command was successful.</source>
          <target state="translated">Тип SecureString показывает, что команда выполнена успешно.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>-------------------------- EXAMPLE 2 --------------------------</source>
          <target state="translated">-------------------------- EXAMPLE 2 --------------------------</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>This example shows how to create a secure string from an encrypted standard string that is saved in a file.</source>
          <target state="translated">В этом примере показано, как создать защищенную строку из стандартной зашифрованной строки, сохраненной в файл.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>The first command uses the AsSecureString parameter of the Read-Host cmdlet to create a secure string.</source>
          <target state="translated">Первая команда использует параметр AsSecureString командлета Read-Host, чтобы создать защищенную строку.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>After you enter the command, any characters that you type are converted into a secure string and then saved in the $secure variable.</source>
          <target state="translated">После ввода команды любые указанные символы преобразуются в защищенную строку и сохраняются в переменную $secure.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>The second command uses the ConvertFrom-SecureString cmdlet to convert the secure string in the $secure variable into an encrypted standard string by using the specified key.</source>
          <target state="translated">Вторая команда с помощью конвейерного оператора (|) преобразует защищенную строку из переменной $secure в стандартную зашифрованную строку, используя указанный ключ.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>The contents are saved in the $encrypted variable.</source>
          <target state="translated">Содержимое сохраняется в переменную $encrypted.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>The third command uses a pipeline operator (|) to send the value of the $encrypted variable to the Set-Content cmdlet, which saves the value in the Encrypted.txt file.</source>
          <target state="translated">Третья команда с помощью конвейерного оператора (|) отправляет значение переменной $encrypted в командлет Set-Content, который сохраняет его в файле Encrypted.txt.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>The fourth command uses the Get-Content cmdlet to get the encrypted standard string in the Encrypted.txt file.</source>
          <target state="translated">Четвертая команда с помощью командлета Get-Content получает стандартную зашифрованную строку из файла Encrypted.txt.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>The command uses a pipeline operator to send the encrypted string to the ConvertTo-SecureString cmdlet, which converts it to a secure string by using the specified key.</source>
          <target state="translated">С помощью конвейерного оператора команда отправляет зашифрованную строку в командлет ConvertTo-SecureString, который преобразует его в защищенную строку с помощью указанного ключа.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>The results are saved in the $secure2 variable.</source>
          <target state="translated">Результаты сохраняется в переменную $secure2.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>-------------------------- EXAMPLE 3 --------------------------</source>
          <target state="translated">-------------------------- EXAMPLE 3 --------------------------</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>This command converts the plain text string "P@ssW0rD!"</source>
          <target state="translated">Эта команда преобразует обычную текстовую строку «P@ssW0rD!»</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>into a secure string and stores the result in the $secure_string_pwd variable.</source>
          <target state="translated">в защищенную строку и сохраняет результат в переменную $secure_string_pwd.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>To use the AsPlainText parameter, the Force parameter must also be included in the command.</source>
          <target state="translated">Чтобы использовать параметр AsPlainText, команда также должна содержать параметр Force.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>PARAMETERS</source>
          <target state="translated">ПАРАМЕТРЫ</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>-AsPlainText</source>
          <target state="translated">-AsPlainText</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Specifies a plain text string to convert to a secure string.</source>
          <target state="translated">Указывает обычную текстовую строку для преобразования в защищенную.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>The secure string cmdlets help protect confidential text.</source>
          <target state="translated">Командлеты защищенной строки помогают защищать секретные тексты.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>The text is encrypted for privacy and is deleted from computer memory after it is used.</source>
          <target state="translated">Текст шифруется в целях конфиденциальности и после использования удаляется из памяти компьютера.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>If you use this parameter to provide plain text as input,  the system cannot protect that input in this manner.</source>
          <target state="translated">Если этот параметр используется для ввода обычного текста в качестве входных данных, система не может защитить таким образом.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>To use this parameter, you must also specify the Force parameter.</source>
          <target state="translated">Чтобы использовать этот параметр, необходимо также указать параметр Force.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>-Force</source>
          <target state="translated">-Force</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>Confirms that you understand the implications of using  the AsPlainText parameter and still want to use it.</source>
          <target state="translated">Подтверждает понимать последствия применения параметра AsPlainText и по-прежнему требуется использовать.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>-Key</source>
          <target state="translated">-Ключ</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Specifies the encryption key to use when converting a secure string into an encrypted standard string.</source>
          <target state="translated">Указывает ключ шифрования для преобразования защищенной строки в зашифрованную стандартную.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>Valid key lengths are 16, 24, and 32 bytes.</source>
          <target state="translated">Допустимая длина ключа — 16, 24 и 32 байта.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>-SecureKey</source>
          <target state="translated">-SecureKey</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>Specifies the encryption key to use when converting a secure string into an encrypted standard string.</source>
          <target state="translated">Указывает ключ шифрования для преобразования защищенной строки в зашифрованную стандартную.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>The key must be provided in the format of a secure string.</source>
          <target state="translated">Ключ должен быть предоставлен в формате защищенной строки.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>The secure string is converted to a byte array before being used as the key.</source>
          <target state="translated">Перед использованием в качестве ключа защищенная строка преобразуется в массив байтов.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>Valid key lengths are 16, 24, and 32 bytes.</source>
          <target state="translated">Допустимая длина ключа — 16, 24 и 32 байта.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>-String</source>
          <target state="translated">-Строка</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>Specifies the string to convert to a secure string.</source>
          <target state="translated">Задает строку для преобразования в защищенную строку.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>CommonParameters</source>
          <target state="translated">CommonParameters</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutVariable, -OutBuffer, -PipelineVariable, -Verbose, -WarningAction, and -WarningVariable.</source>
          <target state="translated">Этот командлет поддерживает общие параметры:-Debug, - ErrorAction, - ErrorVariable, - InformationAction, - InformationVariable, - OutVariable,-OutBuffer, - PipelineVariable, - Verbose, - WarningAction и - WarningVariable.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>For more information, see about_CommonParameters (http://go.microsoft.com/fwlink/?LinkID=113216).</source>
          <target state="translated">Дополнительные сведения см. в разделе about_CommonParameters (http://go.microsoft.com/fwlink/?LinkID=113216).</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>INPUTS</source>
          <target state="translated">ВХОДНЫЕ ДАННЫЕ</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>System.String</source>
          <target state="translated">System.String</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>You can pipe a standard encrypted string to ConvertTo-SecureString.</source>
          <target state="translated">Стандартную зашифрованную строку можно передать в командлет ConvertTo-SecureString по конвейеру.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>OUTPUTS</source>
          <target state="translated">ВЫХОДНЫЕ ДАННЫЕ</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>System.Security.SecureString</source>
          <target state="translated">System.Security.SecureString</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>ConvertTo-SecureString returns a SecureString object.</source>
          <target state="translated">Командлет ConvertTo-SecureString возвращает объект SecureString.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>NOTES</source>
          <target state="translated">ПРИМЕЧАНИЯ</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>RELATED LINKS</source>
          <target state="translated">СВЯЗАННЫЕ ССЫЛКИ</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>ConvertFrom-SecureString</source>
          <target state="translated">ConvertFrom-SecureString.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>Read-Host</source>
          <target state="translated">Read-Host</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>