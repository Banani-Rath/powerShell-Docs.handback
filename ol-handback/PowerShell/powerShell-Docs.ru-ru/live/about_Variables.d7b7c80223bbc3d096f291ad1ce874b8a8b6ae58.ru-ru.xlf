<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ru-ru">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-1c394fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">0030e078e99f7d161206da37ff16f138f18dd615</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">reference\4.0\Microsoft.PowerShell.Core\About\about_Variables.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions" />
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fe3873bcf5954c1e6c22a683a49f7eeb2188d1dc</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">7622ae399e04da9dadd862070e13e0bf821557b3</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>about_Variables</source>
          <target state="translated">about_Variables</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>powershell, cmdlet</source>
          <target state="translated">PowerShell, командлет</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>About Variables</source>
          <target state="translated">О переменных</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>about_Variables</source>
          <target state="translated">about_Variables</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>about_Variables</source>
          <target state="translated">about_Variables</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>SHORT DESCRIPTION</source>
          <target state="translated">КРАТКОЕ ОПИСАНИЕ</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Describes how variables store values that can be used in  Windows PowerShell�.</source>
          <target state="translated">Описывает, как переменные хранят значения, которые можно использовать в Windows PowerShell.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>LONG DESCRIPTION</source>
          <target state="translated">ПОДРОБНОЕ ОПИСАНИЕ</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>You can store all types of values in  Windows PowerShell variables.</source>
          <target state="translated">Можно сохранить все типы значений в переменных Windows PowerShell.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>They are typically used to store the results of commands and to store elements that are used in commands and expressions, such as names, paths, settings, and values.</source>
          <target state="translated">Они обычно используются для сохранения результатов команды и для хранения элементов, которые используются в командах и выражения, такие как имена, пути, параметры и значения.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>A variable is a unit of memory in which values are stored.</source>
          <target state="translated">Переменная — это единица памяти, в котором хранятся значения.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>In  Windows PowerShell, variables are represented by text strings that begin with a dollar sign ($), such as $a, $process, or $my_var.</source>
          <target state="translated">В Windows PowerShell, переменные представлены в виде текстовых строк, которые начинаются со знака доллара ($), например $a $process, или $my_var.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Variable names are not case-sensitive.</source>
          <target state="translated">Имена переменных не учитывают регистр.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Variable names can include spaces and special characters, but these are difficult to use and should be avoided.</source>
          <target state="translated">Имена переменных может включать пробелы и специальные символы, но их сложно использовать и его следует избегать.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>There are several different types of variables in  Windows PowerShell.</source>
          <target state="translated">Существует несколько различных типов переменных в Windows PowerShell.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>-- User-created variables: User-created variables are created and maintained by the user.</source>
          <target state="translated">--Созданные пользователем переменные: созданные пользователем переменные создаются и настраиваются пользователем.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>By default, the variables that you create at the  Windows PowerShell command line exist only while the  Windows PowerShell window is open, and they are lost when you close the window.</source>
          <target state="translated">По умолчанию переменные, которые создаются в командной строке Windows PowerShell существует только в том случае, когда откройте окно Windows PowerShell, и они будут потеряны при закрытии окна.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>To save a variable, add it to your  Windows PowerShell profile.</source>
          <target state="translated">Чтобы сохранить переменную, добавьте его в свой профиль Windows PowerShell.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>You can also create variables in scripts with global, script, or local scope.-- Automatic variables: Automatic variables store the state of  Windows PowerShell.</source>
          <target state="translated">Можно также создать переменные в сценарии глобального, сценария или локальной области.--автоматические переменные: автоматические переменные сохранения состояния Windows PowerShell.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>These variables are created by  Windows PowerShell, and  Windows PowerShell changes their values as required to maintain their accuracy.</source>
          <target state="translated">Эти переменные создаются с помощью Windows PowerShell и Windows PowerShell изменяет их значения, необходимые для обеспечения их точности.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Users cannot change the value of these variables.</source>
          <target state="translated">Пользователи не могут изменять значения этих переменных.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>For example, the $PSHome variable stores the path to the  Windows PowerShell installation directory.</source>
          <target state="translated">Например переменная $PSHome сохраняет путь к каталогу установки Windows PowerShell.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>For more information, a list, and a description of the automatic variables, see about_Automatic_Variables.</source>
          <target state="translated">Дополнительные сведения см. список и описание автоматические переменные в разделе about_Automatic_Variables.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>-- Preference variables: Preference variables store user preferences for  Windows PowerShell.</source>
          <target state="translated">--Привилегированные переменные: привилегированные переменные хранятся настройки пользователя для Windows PowerShell.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>These variables are created by  Windows PowerShell and are populated with default values.</source>
          <target state="translated">Эти переменные создаются с помощью Windows PowerShell и заполняются значениями по умолчанию.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Users can change the values of these variables.</source>
          <target state="translated">Пользователи могут изменять значения этих переменных.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>For example, the $MaximumHistoryCount variable determines the maximum number of entries in the session history.</source>
          <target state="translated">Например переменная $MaximumHistoryCount определяет максимальное число записей в журнале сеанса.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>For more information, a list, and a description of the preference variables, see about_Preference_Variables.</source>
          <target state="translated">Дополнительные сведения см. список и описание переменных настройки в разделе about_Preference_Variables.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>WORKING WITH VARIABLES</source>
          <target state="translated">РАБОТА С ПЕРЕМЕННЫМИ</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>To create a new variable, use an assignment statement to assign a value to the variable.</source>
          <target state="translated">Чтобы создать новую переменную, используйте оператор назначения для присвоения значения переменной.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>You do not have to declare the variable  before using it.</source>
          <target state="translated">Необходимо объявить переменную перед его использованием.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>The default value of all variables is $null.</source>
          <target state="translated">Значение по умолчанию всех переменных — $null.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>For example:</source>
          <target state="translated">Например:</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Variables are very useful for storing the results of commands.</source>
          <target state="translated">Переменные очень полезны для хранения результатов команды.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>For example:</source>
          <target state="translated">Например:</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>To display the value of a variable, type the variable name, preceded by a dollar sign ($).</source>
          <target state="translated">Чтобы просмотреть значение переменной, введите имя переменной предшествует знак доллара ($).</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>For example:</source>
          <target state="translated">Например:</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>To change the value of a variable, assign a new value to the variable.</source>
          <target state="translated">Чтобы изменить значение переменной, присвойте новое значение переменной.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>The following examples displays the value of the $MyVariable variable, changes the value of the variable, and then displays the new value.</source>
          <target state="translated">В следующих примерах отображает значение переменной $MyVariable, изменяет значение переменной и затем отображается новое значение.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>To delete the value of a variable, use the Clear-Variable cmdlet or change the value to $null.</source>
          <target state="translated">Чтобы удалить значение переменной, используйте командлет Clear-Variable или измените значение $null.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>To delete the variable, use the Remove-Variable or Remove-Item cmdlets.</source>
          <target state="translated">Чтобы удалить переменную, используйте командлеты Remove-Variable или Remove-Item.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>(These cmdlets are discussed later in this topic.)</source>
          <target state="translated">(Эти командлеты обсуждаются далее в этом разделе).</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>To get a list of all of the variables in your  Windows PowerShell session, type:</source>
          <target state="translated">Чтобы получить список всех переменных в текущем сеансе Windows PowerShell, введите:</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>TYPES OF VARIABLES</source>
          <target state="translated">ТИПЫ ПЕРЕМЕННЫХ</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>You can store any type of object in a variable, including integers, strings, arrays, hash tables, and objects that represent processes, services, event logs, and computers.</source>
          <target state="translated">Объект любого типа можно хранить в переменной, включая целые числа, строки, массивы, хэш-таблиц и объектов, представляющих процессы, службы, журналы событий и компьютеров.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Windows PowerShell variables are "loosely typed," which means that they are not limited to a particular type of object.</source>
          <target state="translated">Переменные Windows PowerShell «слабо типизированы,» означает, что они не ограничиваются определенного типа объекта.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>A single variable can even contain a collection (an "array") of different types of objects at the same time.</source>
          <target state="translated">Переменная даже может содержать коллекцию («массив») различных типов объектов, в то же время.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>The data type of a variable, which is a .NET Framework type, is determined by the .NET types of the values of the variable.</source>
          <target state="translated">Тип данных переменной, которая имеет тип .NET Framework, определяется типами .NET значения переменной.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>For example:</source>
          <target state="translated">Например:</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>You can use a type attribute and cast notation to ensure that a variable can contain only objects of the specified type or objects that can be converted to that type.</source>
          <target state="translated">Можно использовать атрибут типа и приведения нотации, чтобы убедиться, что переменная может содержать только объекты заданного типа или объекты, которые могут быть преобразованы в этот тип.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>If you try to assign a value of another type,  Windows PowerShell tries to convert the value to its type.</source>
          <target state="translated">При попытке присвоить значение другого типа, Windows PowerShell пытается преобразовать значение в его тип.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>If it cannot, the assignment statement fails.</source>
          <target state="translated">Если это невозможно, оператор присваивания завершается ошибкой.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>To use cast notation, enter a type name, enclosed in brackets, before the variable name (on the left side of the assignment statement).</source>
          <target state="translated">Чтобы использовать нотации, введите имя типа, заключенных в скобки, перед именем переменной (в левой части оператора присваивания).</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>The following example creates an $number variable that can contain only integers, a $words variable that can contain only strings, and a $dates variable that can contain only DateTime objects.</source>
          <target state="translated">В следующем примере создается переменная $number, который может содержать только целые числа, $words переменную, которая может содержать только строки и $dates переменную, которая может содержать только объекты DateTime.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>USING VARIABLES IN COMMANDS AND EXPRESSIONS</source>
          <target state="translated">ИСПОЛЬЗОВАНИЕ ПЕРЕМЕННЫХ В КОМАНДЫ И ВЫРАЖЕНИЯ</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>To use a variable in a command or expression, type the variable name, preceded by the dollar sign ($).</source>
          <target state="translated">Чтобы использовать переменную в команду или выражение, введите имя переменной предшествует знак доллара ($).</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>If the variable name (and dollar sign) are not enclosed in quotation marks, or if they are enclosed in double quotation marks ("), the value of the variable is used in the command or expression.</source>
          <target state="translated">Если переменной имя (и знак доллара) не заключаются в кавычки, или, заключенные в двойные кавычки ("«), значение переменной используется в команду или выражение.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>If the variable name (and dollar sign) are enclosed in single quotation marks, ('), the variable name is used in the expression.</source>
          <target state="translated">Если имя переменной (и знак доллара) заключаются в одинарные кавычки ('), имя переменной используется в выражении.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>For example, the first command gets the value of the $profile variable, which is the path to the  Windows PowerShell user profile file in the  Windows PowerShell console.</source>
          <target state="translated">Например первая команда возвращает значение переменной $profile, — это путь к файлу профиля пользователя Windows PowerShell в консоли Windows PowerShell.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>The second command opens the file in Notepad, and the  third and fourth commands use the name of the variable in an expression.</source>
          <target state="translated">Вторая команда открывает файл в Блокноте и третья и четвертая команды использовать имя переменной в выражении.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>For more information about using quotation marks in  Windows PowerShell, see about_Quoting_Rules.</source>
          <target state="translated">Дополнительные сведения об использовании кавычек в Windows PowerShell см. в разделе about_Quoting_Rules.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>VARIABLE NAMES THAT INCLUDE SPECIAL CHARACTERS</source>
          <target state="translated">ИМЕНА ПЕРЕМЕННЫХ, КОТОРЫЕ СОДЕРЖАТ СПЕЦИАЛЬНЫЕ СИМВОЛЫ</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>Variable names begin with a dollar sign.</source>
          <target state="translated">Имена переменных начинаться со знака доллара.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>They can include alphanumeric characters and special characters.</source>
          <target state="translated">Они могут включать буквы, цифры и специальные символы.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>The length of the variable name is limited only by available memory.</source>
          <target state="translated">Длина имени переменной, ограничен только объемом доступной памяти.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>Whenever possible, variable names should include only alphanumeric characters and the underscore character (_).Variable names that include spaces and other special characters, are difficult to use and should be avoided.</source>
          <target state="translated">Когда это возможно, имена переменных должен включать только буквы, цифры и символ подчеркивания (_). Имена переменных, которые включают в себя пробелы и другие специальные символы, сложно использовать и его следует избегать.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>To create or display a variable name that includes spaces or special characters, enclose the variable name in braces.</source>
          <target state="translated">Чтобы создавать или отображать имя переменной, которая содержит пробелы или специальные символы, заключите имя переменной в фигурные скобки.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>This directs  Windows PowerShell to interpret the characters in the variable name literally.</source>
          <target state="translated">В этом случае Windows PowerShell буквально интерпретировать символы в имени переменной.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>For example, the following command creates and then displays a variable named "save-items".</source>
          <target state="translated">Например следующая команда создает и выведет переменной с именем «Сохранить элементы».</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>The following command gets the child items in the directory that is represented by the "ProgramFiles(x86)" environment variable.</source>
          <target state="translated">Следующая команда возвращает дочерние элементы в каталоге, который представлен в переменной среды «ProgramFiles(x86)».</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>To refer to a variable name that includes braces, enclose the variable name in braces, and use the backtick (escape) character to escape the braces.</source>
          <target state="translated">Для ссылки на имя переменной, которая включает фигурные скобки, заключите имя переменной в скобки и используйте апострофа (escape) для escape-фигурные скобки.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>For example, to create a variable named "this{value}is" with a value of 1, type:</source>
          <target state="translated">Например чтобы создать переменную с именем «{value} —» со значением 1, введите:</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>VARIABLES AND SCOPE</source>
          <target state="translated">ПЕРЕМЕННЫЕ И ОБЛАСТИ</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>By default, variables are available only in the scope in which they are created.</source>
          <target state="translated">По умолчанию переменные доступны только в области, в котором они были созданы.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>For example, a variable that you create in a function is available only within the function.</source>
          <target state="translated">Например переменную, которая создается в функции доступен только в пределах функции.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>A variable that you create in a script is available only within the script (unless you dot-source the script, which adds it to the current scope).</source>
          <target state="translated">Переменную, которая создается в скрипте доступна только в рамках сценария (если точка исходного скрипта, который добавляет ее к текущей области).</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>You can use a scope modifier to change the default scope of the variable.</source>
          <target state="translated">Чтобы изменить область по умолчанию переменной можно использовать модификатор области.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>The following expression creates a variable named "Computers".</source>
          <target state="translated">Приведенное далее выражение создает переменную с именем «Компьютеры».</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>The variable has a global scope, even when it is created in a script or function.</source>
          <target state="translated">Переменная имеет глобальную область, даже в том случае, если оно создано в сценарии или функции.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>For more information, see about_Scopes.</source>
          <target state="translated">Дополнительные сведения см. в разделе about_Scopes.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>SAVING VARIABLES</source>
          <target state="translated">СОХРАНЕНИЕ ПЕРЕМЕННЫЕ</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>Variables that you create are available only in the session in which you create them.</source>
          <target state="translated">Переменные, которые создаются доступны только в сеансе, в котором они созданы.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>They are lost when you close your session.</source>
          <target state="translated">Они будут потеряны при закрытии сеанса.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>To create the in every  Windows PowerShell session that you start, add the variable to your  Windows PowerShell profile.</source>
          <target state="translated">Чтобы создать в каждом сеансе Windows PowerShell при запуске, добавить в свой профиль Windows PowerShell.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>For example, to change the value of the $VerbosePreference variable in every  Windows PowerShell session, add the following command to your  Windows PowerShell profile.</source>
          <target state="translated">Например чтобы изменить значение переменной $VerbosePreference в каждом сеансе Windows PowerShell, добавьте следующую команду в профиль Windows PowerShell.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>You can add this command to your profile by opening the profile file in a text editor, such as Notepad.</source>
          <target state="translated">Эту команду можно добавить в профиль, открыв файл профиля в текстовый редактор, например Блокнот.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>For more information about  Windows PowerShell profiles, see about_profiles.</source>
          <target state="translated">Дополнительные сведения о профилях Windows PowerShell см. в разделе about_profiles.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>THE VARIABLE: DRIVE</source>
          <target state="translated">ПЕРЕМЕННАЯ: ДИСКА</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>Windows PowerShell Variable provider creates a Variable: drive that looks and acts like a file system drive, but it contains the variables in your session and their values.</source>
          <target state="translated">Поставщик Windows PowerShell Variable создает переменную: диск, который выглядит и работает как диск файловой системы, но содержит переменные сеанса и соответствующие значения.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>To change to the variable: drive, type:</source>
          <target state="translated">Изменение переменной: буква d, введите:</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>To list the items (variables) in the Variable: drive, use the Get-Item or Get-ChildItem cmdlets.</source>
          <target state="translated">Для получения списка элементов (переменные) в переменной: диска, используйте командлет Get-Item или Get-ChildItem.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>For example:</source>
          <target state="translated">Например:</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>To get the value of a particular variable, use file system notation to specify the name of the drive and the name of the variable.</source>
          <target state="translated">Чтобы получить значение определенной переменной, нотация файловой системы для укажите имя диска и имя переменной.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>For example, to get the $PSCulture automatic variable, use the following command.</source>
          <target state="translated">Например чтобы получить автоматической переменной $PSCulture, используйте следующую команду.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>For more information about the Variable: drive and the  Windows PowerShell Variable provider, type "get-help variable".</source>
          <target state="translated">Дополнительные сведения о переменной: диск и поставщик переменной Windows PowerShell, введите «get-help переменной».</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>THE VARIABLE CMDLETS</source>
          <target state="translated">КОМАНДЛЕТЫ ПЕРЕМЕННОЙ</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>Windows PowerShell includes a set of cmdlets that are designed to manage variables.</source>
          <target state="translated">Windows PowerShell включает набор командлетов, предназначенных для управления переменными.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>To get help for these cmdlets, type: "Get-Help &lt;cmdlet-hame&gt;".</source>
          <target state="translated">Чтобы получить справку для этих командлетов, введите: «Get-Help &lt; имя для командлета &gt;».</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>SEE ALSO</source>
          <target state="translated">СМ. ТАКЖЕ</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>about_Automatic_Variables</source>
          <target state="translated">about_Automatic_Variables</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>about_Environment_Variables</source>
          <target state="translated">about_Environment_Variables</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>about_Preference_Variables</source>
          <target state="translated">about_Preference_Variables</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>about_Profiles</source>
          <target state="translated">about_Profiles</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>about_Quoting_Rules</source>
          <target state="translated">about_Quoting_Rules</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>about_Scopes</source>
          <target state="translated">about_Scopes</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>