<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-1c394fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">b71ab51740e4ae835b3fe0541a4f89dd91b49f3c</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">reference\3.0\Microsoft.PowerShell.Core\About\about_Split.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions" />
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">4494a91d3697a81167a272227f32b5bbcc646931</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fba4bd3a743b20011d38d7384e1b1d6701f571a6</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>about_Split</source>
          <target state="translated">about_Split</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>powershell, cmdlet</source>
          <target state="translated">powershell コマンドレット</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>About Split</source>
          <target state="translated">分割について</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>about_Split</source>
          <target state="translated">about_Split</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>about_Split</source>
          <target state="translated">about_Split</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>SHORT DESCRIPTION</source>
          <target state="translated">概要</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Explains how to use the Split operator to split one or more strings into substrings.</source>
          <target state="translated">分割操作を使用して部分文字列に 1 つまたは複数の文字列を分割する方法について説明します。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>LONG DESCRIPTION</source>
          <target state="translated">詳細説明</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>The Split operator splits one or more strings into substrings.</source>
          <target state="translated">Split 操作は、1 つまたは複数の文字列を部分文字列に分割します。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>You can change the following elements of the Split operation:</source>
          <target state="translated">Split 操作の次の要素を変更することができます。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>-- Delimiter.</source>
          <target state="translated">区切り記号です。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>The default is whitespace, but you can specify characters, strings, patterns, or script blocks that specify the delimiter.</source>
          <target state="translated">既定値は空白文字が文字、文字列、パターン、または区切り記号を指定するスクリプト ブロックを指定することができます。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>The Split operator in Windows PowerShell uses a regular expression in the delimiter, rather than a simple character.</source>
          <target state="translated">Windows PowerShell で分割演算子では、単純な文字ではなく、区切り記号で正規表現を使用します。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>-- Maximum number of substrings.</source>
          <target state="translated">-最大の部分文字列数。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>The default is to return all substrings.</source>
          <target state="translated">既定では、すべての部分文字列を返します。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>If you specify a number less than the number of substrings, the remaining substrings are concatenated in the last substring.</source>
          <target state="translated">多数の部分文字列より小さい値を指定する場合、残りの部分文字列が最後の部分文字列に連結されます。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>-- Options that specify the conditions under which the delimiter is matched, such as SimpleMatch and Multiline.</source>
          <target state="translated">-を区切り文字が一致すると、SimpleMatch や複数行などの条件を指定するオプションです。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>SYNTAX</source>
          <target state="translated">構文</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>The following diagram shows the syntax for the -split operator.</source>
          <target state="translated">次の図は、構文分割演算子。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>The parameter names do not appear in the command.</source>
          <target state="translated">パラメーター名は、コマンドには表示されません。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Include only the parameter values.</source>
          <target state="translated">パラメーターの値のみが含まれます。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>The values must appear in the order specified in the syntax diagram.</source>
          <target state="translated">値は、この構文ダイアグラムで指定された順序で表示する必要があります。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>-Split</source>
          <target state="translated">分割</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>-Split <ph id="ph1">&lt;Delimiter&gt;</ph>[,&lt;Max-substrings&gt;[,"<ph id="ph2">&lt;Options&gt;</ph>"]]</source>
          <target state="translated">-分割 <ph id="ph1">&lt;Delimiter&gt;</ph>[、&lt; Max 部分文字列 &gt; [,"<ph id="ph2">&lt;Options&gt;</ph>"]</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>-Split {<ph id="ph1">&lt;ScriptBlock&gt;</ph>} [,&lt;Max-substrings&gt;]</source>
          <target state="translated">-分割 {<ph id="ph1">&lt;ScriptBlock&gt;</ph>} [、&lt; Max 部分文字列 &gt;]</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>You can substitute -iSplit or -cSplit for -split in any binary Split statement (a Split statement that includes a delimiter or script block).</source>
          <target state="translated">どのバイナリ分割ステートメント (区切り記号またはスクリプト ブロックを含む分割ステートメント) に分割 iSplit - または --cSplit を置き換えることができます。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>The -iSplit and -split operators are case-insensitive.</source>
          <target state="translated">-ISplit および分割演算子が区別されます。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>The -cSplit operator is case-sensitive, meaning that case is considered when the delimiter rules are applied.</source>
          <target state="translated">-CSplit 演算子は、大文字小文字を区別するケースが区切り記号の規則が適用されたときと見なされたです。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>PARAMETERS</source>
          <target state="translated">パラメータ</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Specifies one or more strings to be split.</source>
          <target state="translated">1 つまたは複数の文字列を分割することを指定します。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>If you submit multiple strings, all the strings are split using the same delimiter rules.</source>
          <target state="translated">複数の文字列を送信する場合、区切り記号と同じ規則を使用してすべての文字列が分割されます。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Example:</source>
          <target state="translated">次に例を示します。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>-split "red yellow blue green" red yellow blue green</source>
          <target state="translated">-"緑赤い黄色 blue"を分割赤、黄色青い緑</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>The characters that identify the end of a substring.</source>
          <target state="translated">部分文字列の末尾を識別する文字。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>The default delimiter is whitespace, including spaces and non-printable characters, such as newline (<ph id="ph1">`n) and tab (`</ph>t).</source>
          <target state="translated">既定の区切り記号は、空白、空白および改行文字などの印刷不可能な文字を含む (<ph id="ph1">`n) and tab (`</ph>t)。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>When the strings are split, the delimiter is omitted from all the substrings.</source>
          <target state="translated">文字列を分割すると、区切り記号はすべての部分文字列から省略されます。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Example:</source>
          <target state="translated">次に例を示します。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>"Lastname:FirstName:Address" -split ":" Lastname FirstName Address</source>
          <target state="translated">"Lastname:FirstName:Address"-分割":"Lastname FirstName アドレス</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>By default, the delimiter is omitted from the results.</source>
          <target state="translated">既定では、区切り記号は結果から除外します。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>To preserve all or part of the delimiter, enclose in parentheses the part that you want to preserve.</source>
          <target state="translated">区切り記号のすべてまたは一部を保持するために保持し部分をかっこで囲みます。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>If the &lt;Max-substrings&gt; parameter is added, this takes precedence when your command splits up the collection.</source>
          <target state="translated">&lt; Max サブスト リング &gt; パラメーターを追加すると、これが優先されますコマンドは、コレクションに分割する場合。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>If you opt to include a delimiter as part of the output, the command returns the delimiter as part of the output; however, splitting the string to return the delimiter as part of output does not count as a split.</source>
          <target state="translated">コマンドの出力の一部として区切り記号を含めるを選択すると、出力の一部として区切り記号が返されますただし、区切り文字を出力の一部として返される文字列の分割は、分割としてはカウントされません。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>.Examples:</source>
          <target state="translated">.例:</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>"Lastname:FirstName:Address" -split "(:)" Lastname</source>
          <target state="translated">"Lastname:FirstName:Address"-「(:)」の分割[氏名]</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>:</source>
          <target state="translated">:</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>FirstName</source>
          <target state="translated">姓</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>:</source>
          <target state="translated">:</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Address</source>
          <target state="translated">番地</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>"Lastname/:/FirstName/:/Address" -split "/(:)/" Lastname</source>
          <target state="translated">"Lastname/: FirstName/://アドレス"-分割"/(:) と"Lastname</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>:</source>
          <target state="translated">:</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>FirstName</source>
          <target state="translated">姓</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>:</source>
          <target state="translated">:</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Address</source>
          <target state="translated">番地</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>In the following example, &lt;Max-substrings&gt; is set to 3.</source>
          <target state="translated">次の例では、&lt; Max サブスト リング &gt; では 3 に設定します。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>This results in three splits of the string values, but a total of five strings in the resulting output; the delimiter is included after the splits, until the maximum of three substrings is reached.</source>
          <target state="translated">これは、結果、文字列値の 3 つの分割が結果の出力で 5 つの文字列の合計区切り記号は 3 つの部分文字列の最大数に到達するまで、分割後に含まれます。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>Additional delimiters in the final substring become part of the substring.</source>
          <target state="translated">最後の部分文字列内で追加の区切り記号では、部分文字列の一部になります。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>'Chocolate-Vanilla-Strawberry-Blueberry' -split '(-)', 3;</source>
          <target state="translated">' チョコレート-バニラ、ストロベリー-Blueberry' - 分割 (-)、3 です。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Chocolate</source>
          <target state="translated">チョコレート</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>Vanilla</source>
          <target state="translated">バニラ</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>Strawberry-Blueberry</source>
          <target state="translated">ストロベリー Blueberry</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>&lt;Max-substrings&gt; Specifies the maximum number of times that a string is split.</source>
          <target state="translated">&lt; Max 部分文字列 &gt; を文字列は、分割された回数の最大数を指定します。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>The default is all the substrings split by the delimiter.</source>
          <target state="translated">既定では、区切り記号で分割するすべての部分文字列です。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>If there are more substrings, they are concatenated to the final substring.</source>
          <target state="translated">複数の部分文字列がある場合は、それらは最後の部分文字列に連結されます。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>If there are fewer substrings, all the substrings are returned.</source>
          <target state="translated">以下の部分文字列がある場合は、すべての部分文字列が返されます。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>A value of 0 and negative values return all the substrings.</source>
          <target state="translated">0 の値と負の値は、すべての部分文字列を返します。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>Max-substrings does not specify the maximum number of objects that are returned; its value equals the maximum number of times that a string is split.</source>
          <target state="translated">部分文字列の最大数が、返されるオブジェクトの最大数を指定しません。その値は、文字列が分割された回数の最大数と等しい。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>If you submit more than one string (an array of strings) to the Split operator , the Max-substrings limit is applied to each string separately.</source>
          <target state="translated">分割操作を 1 つ以上の文字列 (文字列の配列) を送信すると、部分文字列の最大制限は個別に各文字列に適用されます。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>Example:</source>
          <target state="translated">次に例を示します。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>$c = "Mercury,Venus,Earth,Mars,Jupiter,Saturn,Uranus,Neptune" $c -split ",", 5 Mercury Venus Earth Mars Jupiter,Saturn,Uranus,Neptune</source>
          <target state="translated">$c ="Mercury、venus (金星)、地球、Mars、木星、土星、天王星、海王星"$c-分割「,」, 5 Mercury venus (金星) 地球 Mars 木星、土星、天王星、海王星</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>An expression that specifies rules for applying the delimiter.</source>
          <target state="translated">区切り記号を適用するルールを指定する式。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>The expression must evaluate to $true or $false.</source>
          <target state="translated">式は、$true または $false を評価する必要があります。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>Enclose the script block in braces.</source>
          <target state="translated">スクリプト ブロックを中かっこで囲みます。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>Example:</source>
          <target state="translated">次に例を示します。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>$c = "Mercury,Venus,Earth,Mars,Jupiter,Saturn,Uranus,Neptune" $c -split {$-eq "e" -or $-eq "p"}</source>
          <target state="translated">$c ="Mercury、venus (金星)、地球、Mars、木星、土星、天王星、海王星"$c-分割 {$-eq"e"、または $-eq"p"}</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>M</source>
          <target state="translated">M</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>rcury,V nus,Earth,Mars,Ju it r,Saturn,Uranus,N</source>
          <target state="translated">rcury、V できるようになる地球、Mars、Ju、r、土星、天王星、N</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>tun</source>
          <target state="translated">tun</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>Enclose the option name in quotation marks.</source>
          <target state="translated">オプション名を引用符で囲みます。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>Options are valid only when the &lt;Max-substrings&gt; parameter is used in the statement.</source>
          <target state="translated">オプションは、ステートメントで &lt; Max サブスト リング &gt; パラメーターが使用される場合にのみ有効です。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>The syntax for the Options parameter is:</source>
          <target state="translated">Options パラメーターの構文です。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>"SimpleMatch [,IgnoreCase]"</source>
          <target state="translated">「SimpleMatch [, IgnoreCase]」</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>"[RegexMatch] [,IgnoreCase] [,CultureInvariant] [,IgnorePatternWhitespace] [,ExplicitCapture] [,Singleline | ,Multiline]"</source>
          <target state="translated">"[RegexMatch] [、IgnoreCase] [、CultureInvariant] [、IgnorePatternWhitespace] [、ExplicitCapture] [、単一行 | 複数行]"</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>The SimpleMatch options are:</source>
          <target state="translated">SimpleMatch オプションがあります。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>-- SimpleMatch: Use simple string comparison when evaluating the delimiter.</source>
          <target state="translated">-SimpleMatch: 区切り記号を評価するときに、単純な文字列比較を使用します。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>Cannot be used with RegexMatch.</source>
          <target state="translated">RegexMatch では使用できません。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>-- IgnoreCase: Forces case-insensitive matching, even if the -cSplit operator is specified.</source>
          <target state="translated">-IgnoreCase: フォース小文字を区別しない照合 - cSplit 演算子が指定されている場合でもです。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>The RegexMatch options are:</source>
          <target state="translated">RegexMatch オプションがあります。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>-- RegexMatch: Use regular expression matching to evaluate the delimiter.</source>
          <target state="translated">-RegexMatch: 区切り記号の評価に一致する正規表現を使用します。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>This is the default behavior.</source>
          <target state="translated">これは既定の動作です。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>Cannot be used with SimpleMatch.</source>
          <target state="translated">SimpleMatch では使用できません。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>-- IgnoreCase: Forces case-insensitive matching, even if the -cSplit operator is specified.</source>
          <target state="translated">-IgnoreCase: フォース小文字を区別しない照合 - cSplit 演算子が指定されている場合でもです。</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>-- CultureInvariant: Ignores cultural differences in language when evaluting the delimiter.</source>
          <target state="translated">-CultureInvariant: 言語のカルチャの違いを無視ときに、区切り記号を評価します。</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>Valid only with RegexMatch.</source>
          <target state="translated">RegexMatch でのみ有効です。</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>-- IgnorePatternWhitespace: Ignores unescaped whitespace and comments marked with the number sign (#).</source>
          <target state="translated">-IgnorePatternWhitespace: エスケープ解除された空白文字および番号記号でマークされたコメントは無視されます (#)。</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>Valid only with RegexMatch.</source>
          <target state="translated">RegexMatch でのみ有効です。</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>-- Multiline: Multiline mode recognizes the start and end of lines and strings.</source>
          <target state="translated">-複数行: 複数行モードは開始と終了の線および文字列を認識します。</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>Valid only with RegexMatch.</source>
          <target state="translated">RegexMatch でのみ有効です。</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>Singleline is the default.</source>
          <target state="translated">単一行では、既定値です。</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>-- Singleline: Singleline mode recognizes only the start and end of strings.</source>
          <target state="translated">-単一行: 単一行モードは、先頭と文字列の末尾のみを認識します。</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>Valid only with RegexMatch.</source>
          <target state="translated">RegexMatch でのみ有効です。</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>Singleline is the default.</source>
          <target state="translated">単一行では、既定値です。</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>-- ExplicitCapture: Ignores non-named match groups so that only explicit capture groups are returned in the result list.</source>
          <target state="translated">-ExplicitCapture: 一致の名前のないグループが無視され、結果の一覧でのみ明示的なキャプチャ グループが返されます。</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>Valid only with RegexMatch.</source>
          <target state="translated">RegexMatch でのみ有効です。</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>UNARY and BINARY SPLIT OPERATORS</source>
          <target state="translated">単項演算子および二項分割演算子</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>The unary split operator (-split <ph id="ph1">&lt;string&gt;</ph>) has higher precedence than a comma.</source>
          <target state="translated">単項演算子の分割 (-分割 <ph id="ph1">&lt;string&gt;</ph>) コンマよりも優先順位が高い。</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>As a result, if you submit a comma-separated list of strings to the unary split operator, only the first string (before the first comma) is split.</source>
          <target state="translated">その結果、単項演算子を分割する文字列のコンマ区切りのリストを送信する場合 (最初のコンマ) の前に最初の文字列のみが分割されます。</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>To split more than one string, use the binary split operator (<ph id="ph1">&lt;string&gt;</ph> -split <ph id="ph2">&lt;delimiter&gt;</ph>).</source>
          <target state="translated">1 つ以上の文字列を分割するバイナリ分割演算子を使用 (<ph id="ph1">&lt;string&gt;</ph> -分割 <ph id="ph2">&lt;delimiter&gt;</ph>)。</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>Enclose all the strings in parentheses, or store the strings in a variable, and then submit the variable to the split operator.</source>
          <target state="translated">すべての文字列は、かっこで囲みますまたは、文字列は、変数に保存し、分割操作するための変数に送信します。</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>Consider the following example:</source>
          <target state="translated">次の例について考えます。</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>-split "1 2", "a b"</source>
          <target state="translated">-分割"1 2"、"a b"</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>1</source>
          <target state="translated">1 で保護されたプロセスとして起動されました</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>2</source>
          <target state="translated">2</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>a b</source>
          <target state="translated">b</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>"1 2", "a b" -split " "</source>
          <target state="translated">"1 2"、"a b"- 分割""</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>1</source>
          <target state="translated">1 で保護されたプロセスとして起動されました</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>2</source>
          <target state="translated">2</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>a b</source>
          <target state="translated">b</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>-split ("1 2", "a b")</source>
          <target state="translated">-分割 ("1 2"、"a b")</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>1</source>
          <target state="translated">1 で保護されたプロセスとして起動されました</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>2</source>
          <target state="translated">2</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>a b</source>
          <target state="translated">b</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>$a = "1 2", "a b" -split $a</source>
          <target state="translated">a = $"1 2"、"a b"-$ を分割します。</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>1</source>
          <target state="translated">1 で保護されたプロセスとして起動されました</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>2</source>
          <target state="translated">2</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>a b</source>
          <target state="translated">b</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>EXAMPLES</source>
          <target state="translated">例</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>The following statement splits the string at whitespace.</source>
          <target state="translated">次のステートメントでは、空白文字で文字列を分割します。</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>C:\PS&gt; -split "Windows PowerShell 2.0`nWindows PowerShell with remoting"</source>
          <target state="translated">C:\PS &gt; に"Windows PowerShell 2.0' nWindows PowerShell リモート処理では"の分割</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>Windows PowerShell</source>
          <target state="translated">Windows PowerShell</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>2.0</source>
          <target state="translated">2.0</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>Windows PowerShell with remoting</source>
          <target state="translated">Windows PowerShell リモート処理を</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>The following statement splits the string at any comma.</source>
          <target state="translated">次のステートメントでは、すべてのコンマの位置の文字列を分割します。</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>C:\PS&gt; "Mercury,Venus,Earth,Mars,Jupiter,Saturn,Uranus,Neptune" -split ','</source>
          <target state="translated">C:\PS &gt;"Mercury、venus (金星)、地球、Mars、木星、土星、天王星、海王星"-分割 ','</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>Mercury Venus Earth Mars Jupiter Saturn Uranus Neptune</source>
          <target state="translated">Mercury 金星地球 Mars 木星土星天王星海王星</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>The following statement splits the string at the pattern "er".</source>
          <target state="translated">次のステートメントで文字列を分割パターン"er"です。</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>C:\PS&gt;"Mercury,Venus,Earth,Mars,Jupiter,Saturn,Uranus,Neptune" -split 'er'</source>
          <target state="translated">C:\PS &gt;"Mercury、venus (金星)、地球、Mars、木星、土星、天王星、海王星"-分割 'er' '</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>M</source>
          <target state="translated">M</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>cury,Venus,Earth,Mars,Jupit ,Saturn,Uranus,Neptune</source>
          <target state="translated">cury、venus (金星)、地球、Mars、Jupit、土星、天王星、海王星</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>The following statement performs a case-sensitive split at the letter "N".</source>
          <target state="translated">次のステートメントでは、英字"N"の大文字小文字を区別分割を実行します。</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>C:\PS&gt; "Mercury,Venus,Earth,Mars,Jupiter,Saturn,Uranus,Neptune" -cSplit 'N'</source>
          <target state="translated">C:\PS &gt;"Mercury、venus (金星)、地球、Mars、木星、土星、天王星、海王星"- cSplit ' n '</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>Mercury,Venus,Earth,Mars,Jupiter,Saturn,Uranus, eptune</source>
          <target state="translated">Mercury、venus (金星)、地球、Mars、木星、土星、天王星、eptune</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source>The following statement splits the string at "e" and "t".</source>
          <target state="translated">次のステートメントでは、"e"と"t"で文字列を分割します。</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source>C:\PS&gt; "Mercury,Venus,Earth,Mars,Jupiter,Saturn,Uranus,Neptune" -split '[et]'</source>
          <target state="translated">C:\PS &gt;"Mercury、venus (金星)、地球、Mars、木星、土星、天王星、海王星"の '[et]' の分割</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source>M</source>
          <target state="translated">M</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source>rcury,V nus, ar h,Mars,Jupi</source>
          <target state="translated">rcury、V できるようになる、ar h、Mars、Jupi</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source>r,Sa urn,Uranus,N p un</source>
          <target state="translated">r、Sa urn、天王星、N p 解除</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source>The following statement splits the string at "e" and "r", but limits the resulting substrings to six substrings.</source>
          <target state="translated">次のステートメントは、"e"と"r"で文字列を分割が 6 つの部分文字列の結果として得られる部分文字列を制限します。</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve">
          <source>C:\PS&gt; "Mercury,Venus,Earth,Mars,Jupiter,Saturn,Uranus,Neptune" -split '[er]', 6</source>
          <target state="translated">C:\PS &gt;"Mercury、venus (金星)、地球、Mars、木星、土星、天王星、海王星"の '[er]'、6 の分割</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source>M</source>
          <target state="translated">M</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source>cu y,V nus, arth,Mars,Jupiter,Saturn,Uranus,Neptune</source>
          <target state="translated">cu y、V できるようになる、arth、Mars、木星、土星、天王星、海王星</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source>The following statement splits a string into three substrings.</source>
          <target state="translated">次のステートメントは、次の 3 つの部分文字列に、文字列を分割します。</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve">
          <source>C:\PS&gt; "a,b,c,d,e,f,g,h" -split ",", 3</source>
          <target state="translated">C:\PS &gt;"a、b、c、d、e、f、g、h"の分割「,」, 3</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve">
          <source>a b c,d,e,f,g,h</source>
          <target state="translated">b c、d、e、f、g、h</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve">
          <source>The following statement splits two strings into three substrings.</source>
          <target state="translated">次のステートメントは、次の 3 つの部分文字列に 2 つの文字列を分割します。</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve">
          <source>(The limit is applied to each string independently.)</source>
          <target state="translated">(制限が適用各文字列を個別にします。)</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve">
          <source>C:\PS&gt; "a,b,c,d", "e,f,g,h" -split ",", 3</source>
          <target state="translated">C:\PS &gt;"a、b、c、d"、「e、f、g、h」の分割「,」, 3</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve">
          <source>a b c,d e f g,h</source>
          <target state="translated">b c、d e f g、h</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve">
          <source>The following statement splits each line in the here-string at the first digit.</source>
          <target state="translated">次のステートメントでは、最初の桁にヒア文字列内の各行を分割します。</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve">
          <source>It uses the Multiline option to recognize the beginning of each line and string.</source>
          <target state="translated">それぞれの行と文字列の先頭を認識するのに、複数行オプションを使用します。</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve">
          <source>The 0 represents the "return all" value of the Max-substrings parameter.</source>
          <target state="translated">0 では、「すべてを返す」パラメーターの値、最大の部分文字列を表します。</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve">
          <source>You can use options, such as Multiline, only when the Max-substrings value is specified.</source>
          <target state="translated">部分文字列の最大値が指定されている場合にのみ、複数行などのオプションを使用することができます。</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve">
          <source>C:\PS&gt; $a = @' 1The first line.</source>
          <target state="translated">C:\PS &gt; $、= @' 1 合 1 行目。</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve">
          <source>2The second line.</source>
          <target state="translated">2The 2 行目。</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve">
          <source>3The third of three lines.</source>
          <target state="translated">3The 3 行の 3 番目です。</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve">
          <source>'@</source>
          <target state="translated">'@</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve">
          <source>C:\PS&gt; $a -split "^\d", 0, "multiline"</source>
          <target state="translated">C:\PS &gt; $a の分割"^ \d"、0、「複数行」</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve">
          <source>The first line.</source>
          <target state="translated">1 行目。</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve">
          <source>The second line.</source>
          <target state="translated">2 番目の行。</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve">
          <source>The third of three lines.</source>
          <target state="translated">次の 3 つの行の 3 分です。</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve">
          <source>The following statement uses the SimpleMatch option to direct the -split operator to interpret the dot (.) delimiter literally.</source>
          <target state="translated">次のステートメントでは、SimpleMatch オプションを使用して、直接分割操作を指定するドット (.) の区切り文字の解釈をそのままにします。</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve">
          <source>With the default, RegexMatch, the dot enclosed in quotation marks (".") is interpreted to match any character except for a newline character.</source>
          <target state="translated">RegexMatch の既定値は、ドットは引用符で囲む ("です。") は改行文字を除く任意の文字に一致するように解釈されます。</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve">
          <source>As a result, the Split statement returns a blank line for every character except newline.</source>
          <target state="translated">その結果、分割ステートメントでは、改行を除くすべての文字に空白行が返されます。</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve">
          <source>The 0 represents the "return all" value of the Max-substrings parameter.</source>
          <target state="translated">0 では、「すべてを返す」パラメーターの値、最大の部分文字列を表します。</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve">
          <source>You can use options, such as SimpleMatch, only when the Max-substrings value is specified.</source>
          <target state="translated">部分文字列の最大値が指定されている場合にのみ、SimpleMatch などのオプションを使用することができます。</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve">
          <source>C:\PS&gt; "This.is.a.test" -split ".", 0, "simplematch"</source>
          <target state="translated">C:\PS &gt;"This.is.a.test"-分割"します", 0,"simplematch"。</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve">
          <source>This is a test</source>
          <target state="translated">これはテストです。</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve">
          <source>The following statement splits the string at one of two delimiters, depending on the value of a variable.</source>
          <target state="translated">次のステートメントでは、変数の値に応じて、次の 2 つの区切り記号のいずれかで文字列を分割します。</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve">
          <source>C:\PS&gt; $i = 1 C:\PS&gt; $c = "LastName, FirstName; Address, City, State, Zip" C:\PS&gt; $c -split {if ($i -lt 1) {$-eq ","} else {$-eq ";"}}</source>
          <target state="translated">C:\PS &gt; $i 1 C:\PS &gt; $c = ="姓, 名です。住所、市区町村、都道府県、郵便番号"C:\PS &gt; $c-分割 {場合 ($i lt 1) {$-eq「,」} else {$-eq";"}}</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve">
          <source>LastName, FirstName Address, City, State, Zip</source>
          <target state="translated">LastName、FirstName アドレス、City、State、Zip します。</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve">
          <source>The following split statements split an XML file first at the angle bracket and then at the semicolon.</source>
          <target state="translated">次のステートメントを分割では、山かっこでは最初に、その後、セミコロン、XML ファイルを分割します。</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve">
          <source>The result is a readable version of the XML file.</source>
          <target state="translated">XML ファイルの読み取り可能なバージョンになります。</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve">
          <source>C:\PS&gt; get-process PowerShell | export-clixml ps.xml C:\PS&gt; $x = import-clixml ps.xml C:\PS&gt; $x = $x -split "&lt;" C:\PS&gt; $x = $x -split ";"</source>
          <target state="translated">C:\PS &gt;、get-process PowerShell |export-clixml コマンドレット ps.xml C:\PS &gt; $x import-clixml コマンドレットを ps.xml C:\PS &gt; $x の = = $x-分割"&lt;"C:\PS &gt; $x = $x-分割「;」</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve">
          <source>To display the result, type "$x".</source>
          <target state="translated">結果を表示するには、"$x"を入力します。</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve">
          <source>C:\PS&gt; $x</source>
          <target state="translated">C:\PS &gt; $x</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve">
          <source>@{__NounName=Process Name=PowerShell Handles=428</source>
          <target state="translated">@{__NounName プロセス名を = PowerShell ハンドルの = = 428</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve">
          <source>VM=150081536</source>
          <target state="translated">VM 150081536 =</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve">
          <source>WS=34840576</source>
          <target state="translated">WS = 34840576</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve">
          <source>PM=36253696</source>
          <target state="translated">PM 36253696 =</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve">
          <source>...</source>
          <target state="translated">...</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve">
          <source>SEE ALSO</source>
          <target state="translated">関連項目</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve">
          <source>Split-Path about_Operators about_Comparison_Operators about_Join</source>
          <target state="translated">Split-path about_Operators about_Comparison_Operators about_Join</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>