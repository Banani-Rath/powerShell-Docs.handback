<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-1c394fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">a1ec87a086a0af01db5e0beb810878119b81be63</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">reference\3.0\Microsoft.PowerShell.Core\About\about_Environment_Variables.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions" />
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">b43e022282dcc8805e924f2036a94637b7220bf1</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">7cd3261c98a26b5673f496a1fa3ec35c6c022a6a</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>about_Environment_Variables</source>
          <target state="translated">about_Environment_Variables</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>powershell, cmdlet</source>
          <target state="translated">powershell コマンドレット</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>About Environment Variables</source>
          <target state="translated">環境変数について</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>about_Environment_Variables</source>
          <target state="translated">about_Environment_Variables</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>about_Environment_Variables</source>
          <target state="translated">about_Environment_Variables</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>SHORT DESCRIPTION</source>
          <target state="translated">概要</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Describes how to access Windows environment variables in Windows PowerShell.</source>
          <target state="translated">Windows PowerShell での Windows 環境変数にアクセスする方法をについて説明します。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>LONG DESCRIPTION</source>
          <target state="translated">詳細説明</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Environment variables store information about the operating system environment.</source>
          <target state="translated">環境変数は、オペレーティング システム環境に関する情報を格納します。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>This information includes details such as the operating system path, the number of processors used by the operating system, and the location of temporary folders.</source>
          <target state="translated">この情報には、オペレーティング システムのパス、オペレーティング システムと一時フォルダーの場所で使用されるプロセッサの数などの詳細情報が含まれています。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>The environment variables store data that is used by the operating system and other programs.</source>
          <target state="translated">環境変数は、オペレーティング システムおよびその他のプログラムによって使用されるデータを格納します。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>For example, the WINDIR environment variable contains the location of the Windows installation directory.</source>
          <target state="translated">たとえば、WINDIR 環境変数には、Windows のインストール ディレクトリの場所が含まれています。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Programs can query the value of this variable to determine where Windows operating system files are located.</source>
          <target state="translated">プログラムでは、Windows オペレーティング システム ファイルの場所を特定するには、この変数の値を照会できます。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Windows PowerShell lets you view and change Windows environment variables, including the variables set in the registry, and those set for a particular session.</source>
          <target state="translated">Windows PowerShell では、表示し、レジストリに設定された変数や、特定のセッション用の設定など、Windows 環境変数を変更することができます。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>The Windows PowerShell environment provider simplifies this process by making it easy to view and change the environment variables.</source>
          <target state="translated">Windows PowerShell environment プロバイダーは、簡単に表示し、環境変数を変更することで、このプロセスを簡略化します。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Unlike other types of variables in Windows PowerShell, environment variables and their values are inherited by child sessions, such as local background jobs and the sessions in which module members run.</source>
          <target state="translated">Windows PowerShell で変数の他の型とは異なり、環境変数とその値がローカルのバック グラウンド ジョブ モジュールのメンバーが実行されるセッションなどの子のセッションによって継承されます。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>This makes environment variables well suited to storing values that are needed in both parent and child sessions.</source>
          <target state="translated">これにより、環境変数は親と子の両方のセッションで必要な値を格納するに最適なものです。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Windows PowerShell Environment Provider The Windows PowerShell environment provider lets you access Windows environment variables in Windows PowerShell in a Windows PowerShell drive (the Env: drive).</source>
          <target state="translated">Windows PowerShell 環境プロバイダー、Windows PowerShell environment プロバイダーを使用すると、Windows PowerShell ドライブに Windows PowerShell で Windows 環境変数へのアクセス (Env: ドライブ) です。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>This drive looks much like a file system drive.</source>
          <target state="translated">このドライブは、ファイル システム ドライブのように見えます。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>To go to the Env: drive, type:</source>
          <target state="translated">Env に移動する: ドライブを入力します。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Set-Location Env:</source>
          <target state="translated">Set-location Env:</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Then, to display the contents of the Env: drive, type:</source>
          <target state="translated">次に、環境変数の内容を表示、: ドライブは、入力します。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Get-ChildItem</source>
          <target state="translated">Get-ChildItem</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>You can view the environment variables in the Env: drive from any other Windows PowerShell drive, and you can go into the Env: drive to view and change the environment variables.</source>
          <target state="translated">Env で環境変数を表示することができます。 他の Windows PowerShell ドライブからドライブが Env に移行できます: ドライブを表示および環境変数を変更します。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Environment Variable Objects In Windows PowerShell, each environment variable is represented by an object that is an instance of the System.Collections.DictionaryEntry class.</source>
          <target state="translated">環境変数のオブジェクトで Windows PowerShell、各環境変数は System.Collections.DictionaryEntry クラスのインスタンスであるオブジェクトによって表されます。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>In each DictionaryEntry object, the name of the environment variable is the dictionary key.</source>
          <target state="translated">各 DictionaryEntry オブジェクトでは、環境変数の名前は、ディクショナリのキーです。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>The value of the variable is the dictionary value.</source>
          <target state="translated">変数の値は、ディクショナリの値です。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>To display an environment variable in Windows PowerShell, get an object that represents the variable, and then display the values of the object properties.</source>
          <target state="translated">Windows PowerShell では、環境変数を表示するには、変数を表すオブジェクトを取得し、オブジェクトのプロパティの値を表示します。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>When you change an environment variable in Windows PowerShell, use the methods that are associated with the DictionaryEntry object.</source>
          <target state="translated">Windows PowerShell で環境変数を変更すると、DictionaryEntry オブジェクトに関連付けられているメソッドを使用します。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>To display the properties and methods of the object that represents an environment variable in Windows PowerShell, use the Get-Member cmdlet.</source>
          <target state="translated">プロパティと Windows PowerShell で環境変数を表すオブジェクトのメソッドを表示するには、Get-member コマンドレットを使用します。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>For example, to display the methods and properties of all the objects in the Env: drive, type:</source>
          <target state="translated">たとえば、env メソッドおよびすべてのオブジェクトのプロパティを表示する: ドライブは、入力します。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Get-Item -Path Env:* | Get-Member</source>
          <target state="translated">Get-item - パス Env: * |メンバーの取得</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Displaying Environment Variables You can use the cmdlets that contain the Item noun (the Item cmdlets) to display and change the values of environment variables.</source>
          <target state="translated">環境変数を表示すると、表示し、環境変数の値を変更する、名詞「Item」(Item コマンドレット) を含むコマンドレットを使用できます。 します</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Because environment variables do not have child items, the output of Get-Item and Get-ChildItem is the same.</source>
          <target state="translated">環境変数は子項目を持っていないために、Get-item、Get-childitem の出力は、同じになります。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>When you refer to an environment variable, type the Env: drive name followed by the name of the variable.</source>
          <target state="translated">環境変数を参照するときの入力、Env: ドライブ名の後に、変数の名前。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>For example, to display the value of the COMPUTERNAME environment variable, type:</source>
          <target state="translated">たとえば、COMPUTERNAME 環境変数の値を表示するには、次のように入力します。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Get-Childitem Env:Computername</source>
          <target state="translated">Get-childitem Env:Computername</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>To display the values of all the environment variables, type:</source>
          <target state="translated">すべての環境変数の値を表示するには、次のように入力します。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Get-ChildItem Env:</source>
          <target state="translated">Get-childitem Env:</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>By default, Windows PowerShell displays the environment variables in the order in which it retrieves them.</source>
          <target state="translated">既定では、Windows PowerShell は、取得の順序で、環境変数を表示します。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>To sort the list of environment variables by variable name, pipe the output of a Get-ChildItem command to the Sort-Object cmdlet.</source>
          <target state="translated">変数名で環境変数の一覧を並べ替えるには、Sort-object コマンドレットに Get-childitem コマンドの出力をパイプします。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>For example, from any Windows PowerShell drive, type:</source>
          <target state="translated">たとえば、すべての Windows PowerShell ドライブから次のように入力します。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Get-ChildItem Env: | Sort Name</source>
          <target state="translated">Get-childitem Env: |並べ替えの名前</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>You can also go into the Env: drive by using the Set-Location cmdlet:</source>
          <target state="translated">Env に移動することも: Set-location コマンドレットを使用してドライブ。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Set-Location Env:</source>
          <target state="translated">Set-location Env:</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>When you are in the Env: drive, you can omit the Env: drive name from the path.</source>
          <target state="translated">起動したら、Env: ドライブ、Env を省略することができます: パスからドライブ名。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>For example, to display all the environment variables, type:</source>
          <target state="translated">たとえば、すべての環境変数を表示するには、次のように入力します。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Get-ChildItem</source>
          <target state="translated">Get-ChildItem</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>To display the value of the COMPUTERNAME variable from within the Env: drive, type:</source>
          <target state="translated">Env 内からコンピューター名の変数の値を表示する: ドライブを入力します。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Get-ChildItem ComputerName</source>
          <target state="translated">Get-childitem のコンピューター名</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>You can also display and change the values of environment variables without using a cmdlet by using the expression parser in Windows PowerShell.</source>
          <target state="translated">表示し、Windows powershell 式パーサーを使用して、コマンドレットを使用することがなく環境変数の値を変更できます。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>To display the value of an environment variable, use the following syntax:</source>
          <target state="translated">環境変数の値を表示するには、次の構文を使用します。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>$Env:&lt;variable-name&gt;</source>
          <target state="translated">$Env:path: &lt; 変数名 &gt;</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>For example, to display the value of the WINDIR environment variable, type the following command at the Windows PowerShell command prompt:</source>
          <target state="translated">たとえば、WINDIR 環境変数の値を表示するには、Windows PowerShell コマンド プロンプトで次のコマンドを入力します。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>$Env:windir</source>
          <target state="translated">$Env:path: windir</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>In this syntax, the dollar sign ($) indicates a variable, and the drive name indicates an environment variable.</source>
          <target state="translated">この構文で、ドル記号 ($) が、変数に示し、ドライブ名が環境変数を示します。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Changing Environment Variables To make a persistent change to an environment variable, use System in Control Panel (Advanced tab or the Advanced System Settings item) to store the change in the registry.</source>
          <target state="translated">変化する環境変数環境変数に永続的な変更を加えるを使用して、システム コントロール パネル ([詳細] タブまたはシステムの詳細設定])、レジストリに変更を保存します。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>When you change environment variables in Windows PowerShell, the change affects only the current session.</source>
          <target state="translated">Windows PowerShell で環境変数を変更すると、変更は現在のセッションのみに影響します。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>This behavior resembles the behavior of the Set command in Windows-based environments and the Setenv command in UNIX-based environments.</source>
          <target state="translated">この動作では、Windows ベースの環境での Set コマンドおよび UNIX ベースの環境で Setenv コマンドの動作に似ています。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>You must also have permission to change the values of the variables.</source>
          <target state="translated">変数の値を変更するアクセス許可も必要です。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>If you try to change a value without sufficient permission, the command fails, and Windows PowerShell displays an error.</source>
          <target state="translated">ための十分なアクセス許可がない値を変更しようとすると、コマンドは失敗し、Windows PowerShell には、エラーが表示されます。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>You can change the values of variables without using a cmdlet by using the following syntax:</source>
          <target state="translated">次の構文を使用して、コマンドレットを使用せず、変数の値を変更できます。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>$Env:&lt;variable-name&gt; = "&lt;new-value&gt;"</source>
          <target state="translated">$Env:path: &lt; 変数名 &gt; =「&lt; 値 &gt;」</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>For example, to append ";c:\temp" to the value of the Path environment variable, use the following syntax:</source>
          <target state="translated">例については、追加する"; c:\temp"を Path 環境変数の値には、次の構文を使用します。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>$Env:path = $env:path + ";c:\temp"</source>
          <target state="translated">$Env:path: パス = $env:path: パス +"; c:\temp"</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>You can also use the Item cmdlets, such as Set-Item, Remove-Item, and Copy-Item to change the values of environment variables.</source>
          <target state="translated">セット アイテムなどの項目コマンドレットを使用することもできます環境変数の値を変更するには、Remove-item、およびアイテムのコピー。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>For example, to use the Set-Item cmdlet to append ";c:\temp" to the value of the Path environment variable, use the following syntax:</source>
          <target state="translated">例については、Set-item コマンドレットを使用して追加するに"; c:\temp"を Path 環境変数の値には、次の構文を使用します。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>Set-Item -Path Env:Path -Value ($Env:Path + ";C:\Temp")</source>
          <target state="translated">Set-item-path パス Env:Path-値 ($env:path: パス +";C:\Temp")</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>In this command, the value is enclosed in parentheses so that it is interpreted as a unit.</source>
          <target state="translated">このコマンドで、単位として解釈されるように、値はかっこで囲まれます。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>Saving Changes to Environment Variables To create or change the value of an environment variable in every Windows PowerShell session, add the change to your Windows PowerShell profile.</source>
          <target state="translated">環境変数への変更の保存の作成しすべての Windows PowerShell セッションで環境変数の値を変更、変更を Windows PowerShell プロファイルに追加します。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>For example, to add the C:\Temp directory to the Path environment variable in every Windows PowerShell session, add the following command to your Windows PowerShell profile.</source>
          <target state="translated">たとえば、すべての Windows PowerShell セッションで、C:\Temp ディレクトリを Path 環境変数に追加するには、Windows PowerShell プロファイルに、次のコマンドを追加します。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>$Env:Path = $Env:Path + ";C:\Temp"</source>
          <target state="translated">$Env:path: パス = $env:path: パス +";C:\Temp"</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>To add the command to an existing profile, such as the CurrentUser,AllHosts profile, type:</source>
          <target state="translated">CurrentUser、AllHosts プロファイルなど、既存のプロファイルにコマンドを追加するには、次のように入力します。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>Add-Content -Path $Profile.CurrentUserAllHosts -Value '$Env:Path = $Env:Path + ";C:\Temp"'</source>
          <target state="translated">Add-content パス $Profile.CurrentUserAllHosts-値 ' $env:path: パス = $env:path: パス +";C:\Temp"'</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>Environment Variables That Store Preferences Windows PowerShell features can use environment variables to store user preferences.</source>
          <target state="translated">環境変数を保存設定 Windows PowerShell の機能は、ユーザー設定を格納するのに環境変数を使用することができます。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>These variables work like preference variables, but they are inherited by child sessions of the sessions in which they are created.</source>
          <target state="translated">これらの変数がユーザー設定変数のように動作しますが、作成されたセッションの子のセッションによって継承されます。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>For more information about preference variables, see about_preference_variables.</source>
          <target state="translated">ユーザー設定変数の詳細については、「about_preference_variables を参照してください。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>The environment variables that store preferences include:</source>
          <target state="translated">環境設定を格納する環境変数は次のとおりです。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>PSExecutionPolicyPreference Stores the execution policy set for the current session.</source>
          <target state="translated">PSExecutionPolicyPreference ストア実行ポリシーは、現在のセッションの設定。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>This environment variable exists only when you set an execution policy for a single session.</source>
          <target state="translated">この環境変数は、1 つのセッションの実行ポリシーを設定する場合にのみ存在します。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>You can do this in two different ways.</source>
          <target state="translated">これは、2 つの方法で行うことができます。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>-- Use PowerShell.exe to start a session at the command line and use its ExecutionPolicy parameter to set the execution policy for the session.</source>
          <target state="translated">--を使用して PowerShell.exe コマンドラインでセッションを開始し、その実行ポリシー パラメーターを使用して、セッションの実行ポリシーを設定します。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>-- Use the Set-ExecutionPolicy cmdlet.</source>
          <target state="translated">-Set-executionpolicy コマンドレットを使用します。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>Use the Scope parameter with a value of "Process".</source>
          <target state="translated">"Process"の値を持つスコープのパラメーターを使用します。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>For more information, see about_Execution_Policies.</source>
          <target state="translated">詳細については、「about_Execution_Policies」を参照してください。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>PSModulePath Stores the paths to the default module directories.</source>
          <target state="translated">Psmodulepath 環境変数は、既定のモジュール ディレクトリへのパスを格納します。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>Windows PowerShell looks for modules in the specified directories when you do not specify a full path to a module.</source>
          <target state="translated">Windows PowerShell は、モジュールへの完全パスが指定されなかったときに、指定されたディレクトリ内のモジュールを探します。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>The default value of $Env:PSModulePath is:</source>
          <target state="translated">$Env:path の既定値: psmodulepath 環境変数は。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>$home\Documents\WindowsPowerShell\Modules; $pshome\Modules</source>
          <target state="translated">$home \documents\windowspowershell\modules です。$pshome \modules</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>Windows PowerShell sets the value of "$pshome\Modules" in the registry.</source>
          <target state="translated">Windows PowerShell では、"$pshome \modules"の値をレジストリに設定します。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>It sets the value of "$home\Documents\WindowsPowerShell\Modules" each time you start Windows PowerShell.</source>
          <target state="translated">Windows PowerShell を起動するたびに、"$home \documents\windowspowershell\modules"の値を設定します。</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>In addition, setup programs that install modules in other directories, such as the Program Files directory, can append their locations to the value of PSModulePath.</source>
          <target state="translated">さらに、Program Files ディレクトリなど、他のディレクトリにモジュールをインストールするセットアップ プログラムでは、psmodulepath 環境変数の値にそれらの場所を追加できます。</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>To change the default module directories for the current session, use the following command format to change the value of the PSModulePath environment variable.</source>
          <target state="translated">現在のセッションに対して既定のモジュール ディレクトリを変更するには、PSModulePath 環境変数の値を変更するのに次のコマンド形式を使用します。</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>For example, to add the "C:\Program Files\Fabrikam\Modules" directory to the value of the PSModulePath environment variable, type:</source>
          <target state="translated">たとえば、"C:\Program Files\Fabrikam\Modules"ディレクトリを PSModulePath 環境変数の値を追加する次のように入力します。</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>$Env:PSModulePath = $Env:PSModulePath + ";C:\Program Files\Fabrikam\Modules"</source>
          <target state="translated">$Env:path: psmodulepath 環境変数 $env:path を =: PSModulePath +";C:\Program Files\Fabrikam\Modules"</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>The semi-colon (;) in the command separates the new path from the path that precedes it in the list.</source>
          <target state="translated">コマンドのセミコロン (;) は一覧で新しいパスをそれに先行するパスから分けます。</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>To change the value of PSModulePath in every session, add the previous command to your Windows PowerShell profile or use the SetEnvironmentVariable method of the Environment class.</source>
          <target state="translated">Psmodulepath 環境変数の値を変更すると、すべてのセッションで、前のコマンドを Windows PowerShell プロファイルに追加するか、環境のクラスの SetEnvironmentVariable メソッドを使用します。</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>The following command uses the GetEnvironmentVariable method to get the machine setting of PSModulePath and the SetEnvironmentVariable method to add the C:\Program Files\Fabrikam\Modules path to the value.</source>
          <target state="translated">次のコマンドでは、GetEnvironmentVariable メソッドを使用して、C:\Program Files\Fabrikam\Modules パス値を追加するには、psmodulepath 環境変数と SetEnvironmentVariable メソッドのマシンの設定を取得します。</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>$path = [System.Environment]::GetEnvironmentVariable("PSModulePath", "Machine") [System.Environment]::SetEnvironmentVariable("PSModulePath", $path + ` ";C:\Program Files\Fabrikam\Modules", "Machine")</source>
          <target state="translated">$path = [System.Environment]::GetEnvironmentVariable ("PSModulePath"、「コンピューター」) [System.Environment]::SetEnvironmentVariable ($path"PSModulePath"+ '";C:\Program Files\Fabrikam\Modules"、「コンピューター」)</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>To add a path to the user setting, change the target value to User.</source>
          <target state="translated">ユーザー設定にパスを追加するには、ターゲット値をユーザーに変更します。</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>$path = [System.Environment]::GetEnvironmentVariable("PSModulePath", "User") [System.Environment]::SetEnvironmentVariable("PSModulePath", $path + ` ";$home\Documents\Fabrikam\Modules", "User")</source>
          <target state="translated">$path = [System.Environment]::GetEnvironmentVariable ("PSModulePath"、「ユーザー」) [System.Environment]::SetEnvironmentVariable ($path"PSModulePath"+ '"; $home\Documents\Fabrikam\Modules"、「ユーザー」)</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>For more information about the methods of the System.Environment class, see "Environment Methods" in MSDN at http://go.microsoft.com/fwlink/?LinkId=242783.</source>
          <target state="translated">System.Environment クラスの詳細については、メソッドは、http://go.microsoft.com/fwlink/?LinkId=242783 で MSDN の「環境メソッド」を参照してください。</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>You can add also add a command that changes the value to your profile or use System in Control Panel to change the value of the PSModulePath environment variable in the registry.</source>
          <target state="translated">追加するプロファイルに値を変更するコマンドを追加またはコントロール パネルのシステムを使用して、レジストリの PSModulePath 環境変数の値を変更します。</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>For more information, see about_Modules.</source>
          <target state="translated">詳細については、about_Modules を参照してください。</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>SEE ALSO</source>
          <target state="translated">関連項目</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>Environment (provider) about_Modules</source>
          <target state="translated">環境 (プロバイダー) about_Modules</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>