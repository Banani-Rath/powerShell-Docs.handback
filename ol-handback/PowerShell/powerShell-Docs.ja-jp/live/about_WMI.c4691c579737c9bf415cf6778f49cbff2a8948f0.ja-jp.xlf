<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-1c394fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">8ef5aef3b1694ed901f376c0082b4271f8028b6e</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">reference\3.0\Microsoft.PowerShell.Core\About\about_WMI.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions" />
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">884ab348c06e8167b1aa40f6aceca367d3d44f08</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">68b540d4c9f6790f17e57e1b9cd515304fd0953d</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>about_WMI</source>
          <target state="translated">about_WMI</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>powershell, cmdlet</source>
          <target state="translated">powershell コマンドレット</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>About WMI</source>
          <target state="translated">WMI に関する説明</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>about_WMI</source>
          <target state="translated">about_WMI</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>about_WMI</source>
          <target state="translated">about_WMI</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>SHORT DESCRIPTION</source>
          <target state="translated">概要</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Windows Management Instrumentation (WMI) uses the Common Information Model (CIM) to represent systems, applications, networks, devices, and other manageable components of the modern enterprise.</source>
          <target state="translated">Windows Management Instrumentation (WMI) では、Common Information Model (CIM) を使用して、システム、アプリケーション、ネットワーク、デバイス、および、現代の企業の管理可能な他のコンポーネントを表します。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>LONG DESCRIPTION</source>
          <target state="translated">詳細説明</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Windows Management Instrumentation (WMI) is Microsoft’s implementation of Web-Based Enterprise Management (WBEM), the industry standard.</source>
          <target state="translated">Windows Management Instrumentation (WMI) は、マイクロソフトの Web ベース エンタープライズ管理 (WBEM) 業界標準の実装です。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Classic WMI uses DCOM to communicate with networked devices to manage remote systems.</source>
          <target state="translated">従来の WMI では、リモート システムを管理するネットワークに接続されたデバイスとの通信に DCOM を使用します。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Windows PowerShell� 3.0 introduces a CIM provider model that uses WinRM to remove the dependency on DCOM.</source>
          <target state="translated">Windows PowerShell 3.0 では、WinRM を使用して、DCOM に依存関係を削除する CIM プロバイダー モデルについて説明します。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>This CIM provider model also uses new WMI provider APIs that enable developers to write  Windows PowerShell cmdlets in native code (C<ph id="ph1">\+\+</ph>).</source>
          <target state="translated">この CIM プロバイダー モデルも新しい WMI プロバイダー開発者はネイティブ コードで Windows PowerShell コマンドレットを記述できるようにする Api を使用 (C<ph id="ph1">\+\+</ph>)。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Do not confuse WMI providers with  Windows PowerShell providers.</source>
          <target state="translated">Windows PowerShell プロバイダーと一緒に使用する WMI プロバイダーを混同しないでください。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Many Windows features have an associated WMI provider that exposes their management capabilities.</source>
          <target state="translated">多くの Windows 機能の管理機能を公開する関連の WMI プロバイダーがあります。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>To get WMI providers, run a WMI query that gets instances of the __Provider WMI class, such as the following query.</source>
          <target state="translated">WMI プロバイダーを取得するには、__Provider 次のクエリなどの WMI クラスのインスタンスを取得する WMI クエリを実行します。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>THREE COMPONENTS OF WMI</source>
          <target state="translated">WMI の 3 つのコンポーネント</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>The following three components of WMI interact with  Windows PowerShell: Namespaces, Providers, and Classes.</source>
          <target state="translated">Windows PowerShell と WMI の次の 3 つのコンポーネントが対話: 名前空間、プロバイダー、およびクラスです。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>WMI Namespaces organize WMI providers and WMI classes into groups of related components.</source>
          <target state="translated">WMI 名前空間は、関連するコンポーネントのグループに WMI プロバイダーと WMI クラスを整理します。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>In this way, they are similar to .NET Framework namespaces.</source>
          <target state="translated">これにより、.NET Framework 名前空間に似ています。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Namespaces are not physical locations, but are more like logical databases.</source>
          <target state="translated">名前空間は、物理的な場所ではありませんが、論理データベースに近いものです。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>All WMI namespaces are instances of the __Namespace system class.</source>
          <target state="translated">すべての WMI 名前空間は、_ _namespace システム クラスのインスタンスです。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>The default WMI namespace is Root<ph id="ph1">\/</ph>CIMV2 (since Microsoft Windows 2000).</source>
          <target state="translated">既定の WMI 名前空間がルート<ph id="ph1">\/</ph>CIMV2 (Microsoft Windows 2000) 以降。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>To use  Windows PowerShell to get WMI namespaces in the current session, use a command with the following format.</source>
          <target state="translated">現在のセッションでの WMI 名前空間を取得する Windows PowerShell を使用するには、次の形式で、コマンドを使用します。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>To get WMI namespaces in other namespaces, use the Namespace parameter to change the location of the search.</source>
          <target state="translated">他の名前空間を WMI 名前空間を取得するのにには、検索の場所を変更するのに名前空間パラメーターを使用します。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>The following command finds WMI namespaces that reside in the Root<ph id="ph1">\/</ph>Cimv2<ph id="ph2">\/</ph>Applications namespace.</source>
          <target state="translated">次のコマンドは、ルートに存在する WMI 名前空間を検索<ph id="ph1">\/</ph>Cimv2<ph id="ph2">\/</ph>アプリケーションの名前空間。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>WMI namespaces are hierarchical.</source>
          <target state="translated">WMI 名前空間は、階層的です。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Therefore, obtaining a list of all namespaces on a particular system requires performing a recursive query starting at the root namespace.</source>
          <target state="translated">したがって、特定のシステム上のすべての名前空間の一覧を取得するには、ルート名前空間から始まる再帰クエリを実行する必要があります。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>WMI Providers expose information about Windows manageable objects.</source>
          <target state="translated">WMI プロバイダーは、Windows の管理可能なオブジェクトに関する情報を公開します。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>A provider retrieves data from a component, and passes that data through WMI to a management application, such as  Windows PowerShell.</source>
          <target state="translated">プロバイダーは、コンポーネントからデータを取得し、WMI を使用してデータを Windows PowerShell などの管理アプリケーションに渡します。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Most WMI providers are dynamic providers, which means that they obtain the data dynamically when it is requested through the management application.</source>
          <target state="translated">ほとんどの WMI プロバイダーは動的なプロバイダーは、管理アプリケーションで要求されたときに動的にデータを取得することです。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>FINDING WMI CLASSES</source>
          <target state="translated">検索する WMI クラス</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>In a default installation of Windows 8, there are more than 1,100 WMI classes in Root<ph id="ph1">\/</ph>Cimv2.</source>
          <target state="translated">Windows 8 の既定のインストール、1,100 以上の WMI クラスにあるルート<ph id="ph1">\/</ph>Cimv2 します。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>With this many WMI classes, the challenge becomes identifying the appropriate WMI class to use to perform a specific task.</source>
          <target state="translated">課題では、このような多数の WMI クラスを使用して、特定のタスクを実行する適切な WMI クラスを識別するになります。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Windows PowerShell 3.0 provides two ways to find WMI classes that are related to a specific topic.</source>
          <target state="translated">Windows PowerShell 3.0 では、特定のトピックに関連する WMI クラスを検索する 2 つの方法を提供します。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>For example,to find WMI classes in the root\CIMV2 WMI namespace that are related to disks, you can use a query such as the one shown here.</source>
          <target state="translated">たとえば、WMI クラスをディスクに関連付けられている root \cimv2 WMI 名前空間を検索する例で示したようなクエリを使用することができます。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>To find WMI classes that are related to memory, you might use a query such as the one shown here.</source>
          <target state="translated">メモリに関連する WMI クラスを検索するには、例で示したようなクエリを使用する場合があります。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>The CIM cmdlets also provide the ability to discover WMI classes.</source>
          <target state="translated">CIM コマンドレットは、WMI クラスを検出する機能も提供します。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>To do this, use the Get-CIMClass cmdlet.</source>
          <target state="translated">これを行うには、Get CIMClass コマンドレットを使用します。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>The command shown here lists WMI classes related to video.</source>
          <target state="translated">WMI クラスの一覧を次に示すコマンドは、ビデオに関連します。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Tab expansion works when changing WMI namespaces, and therefore use of tab expansion makes sub-WMI namespaces easily discoverable.</source>
          <target state="translated">WMI 名前空間を変更する場合は、拡張のしくみをタブ、したがってタブ拡張の使用は sub WMI 名前空間に簡単に探索可能です。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>In the following example, the Get-CimClass cmdlet lists WMI classes related to power settings.</source>
          <target state="translated">次の例では、Get CimClass コマンドレットは、電源設定に関連する WMI クラスを一覧表示します。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>To find it, type the root<ph id="ph1">\/</ph>CIMV2<ph id="ph2">\/</ph> WMI namespace, and then press type the root<ph id="ph3">\/</ph>CIMV2<ph id="ph4">\/</ph> WMI namespace, and then press the Tab key several times until the power namespace appears.</source>
          <target state="translated">これを検索するには、ルートを入力<ph id="ph1">\/</ph>CIMV2<ph id="ph2">\/</ph> WMI 名前空間を押してから入力ルート<ph id="ph3">\/</ph>CIMV2<ph id="ph4">\/</ph> キー電源名前空間が表示されるまで何度もの WMI 名前空間とし、Tab キーを押します。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Here is the command:</source>
          <target state="translated">コマンドを次に示します。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>