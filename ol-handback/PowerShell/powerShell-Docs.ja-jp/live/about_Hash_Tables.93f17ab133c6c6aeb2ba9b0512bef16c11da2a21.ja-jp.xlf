<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-1c394fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">8fcbe3e987f2d14b144a6c21191919bc3fea7e87</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">reference\5.0\Microsoft.PowerShell.Core\About\about_Hash_Tables.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions" />
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">aed214fd53da692f7059a6cddfa441513e0fd160</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">7b8c3d0d0e062d467078c08c7b61c8f63d01bc7a</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>about_Hash_Tables</source>
          <target state="translated">about_Hash_Tables</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>powershell, cmdlet</source>
          <target state="translated">powershell コマンドレット</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>About Hash Tables</source>
          <target state="translated">ハッシュ テーブルについて</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>about_Hash_Tables</source>
          <target state="translated">about_Hash_Tables</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>about_Hash_Tables</source>
          <target state="translated">about_Hash_Tables</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>SHORT DESCRIPTION</source>
          <target state="translated">概要</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Describes how to create, use, and sort hash tables in Windows PowerShell.</source>
          <target state="translated">作成、使用、および Windows PowerShell でハッシュ テーブルを並べ替える方法について説明します。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>LONG DESCRIPTION</source>
          <target state="translated">詳細説明</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>A hash table, also known as a dictionary or associative array, is a compact data structure that stores one or more key<ph id="ph1">\/</ph>value pairs.</source>
          <target state="translated">ハッシュ テーブル、ディクショナリまたは連想配列とも呼ばれますが、1 つまたは複数のキーを格納するコンパクトなデータ構造<ph id="ph1">\/</ph>値のペアです。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>For example, a hash table might contain a series of IP addresses and computer names, where the IP addresses are the keys and the computer names are the values, or vice versa.</source>
          <target state="translated">たとえば、ハッシュ テーブルは、一連の IP アドレスと、IP アドレスは、キー、コンピューター名、値、コンピューター名を含めることがまたはその逆です。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>In Windows PowerShell, each hash table is a Hashtable (System.Collections.Hashtable) object.</source>
          <target state="translated">Windows PowerShell では、各ハッシュ テーブルは、ハッシュ テーブル (System.Collections.Hashtable) オブジェクトです。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>You can use the properties and methods of Hashtable objects in Windows PowerShell.</source>
          <target state="translated">Windows PowerShell では、プロパティとハッシュ テーブルのオブジェクトのメソッドを使用できます。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Beginning in Windows PowerShell 3.0, you can use the [ordered] attribute to create an ordered dictionary (System.Collections.Specialized.OrderedDictionary) in Windows PowerShell.</source>
          <target state="translated">Windows PowerShell 3.0 以降では、[ordered] 属性を Windows PowerShell での順序付けられた辞書 (System.Collections.Specialized.OrderedDictionary) の作成を使用することができます。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Ordered dictionaries differ from hash tables in that the keys always appear in the order in which you list them.</source>
          <target state="translated">順序付けられた辞書は、ハッシュ テーブルとは異なり、キーは常に一覧表示の順序で表示されます。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>The order of keys in a hash table is not determined.</source>
          <target state="translated">ハッシュ テーブル内のキーの順序は決まっていません。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>The keys and value in hash tables are also .NET objects.</source>
          <target state="translated">キーと値をハッシュ テーブルでは、.NET オブジェクトではまたです。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>They are most often strings or integers, but they can have any object type.</source>
          <target state="translated">ほとんどの多くの場合、文字列または整数が任意のオブジェクト型を持つことができます。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>You can also create nested hash tables, in which the value of a key is another hash table.</source>
          <target state="translated">キーの値が別のハッシュ テーブルは、入れ子になったハッシュ テーブルを作成することもできます。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Hash tables are frequently used because they are very efficient for finding and retrieving data.</source>
          <target state="translated">データの検索と取得は非常に効率であるために、ハッシュ テーブルがよく使用されます。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>You can use hash tables to store lists and to create calculated properties in Windows PowerShell.</source>
          <target state="translated">リストを格納し、Windows PowerShell での計算のプロパティの作成は、ハッシュ テーブルを使用できます。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>And, Windows PowerShell has a cmdlet, ConvertFrom-StringData, that converts strings to a hash table.</source>
          <target state="translated">また、Windows PowerShell では、コマンドレットでは、Convertfrom-stringdata は、文字列をハッシュ テーブルに変換します。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Syntax</source>
          <target state="translated">構文</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>The syntax of a hash table is as follows:</source>
          <target state="translated">ハッシュ テーブルの構文は次のとおりです。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>The syntax of an ordered dictionary is as follows:</source>
          <target state="translated">順序付けられた辞書の構文は次のとおりです。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>The [ordered] attribute was introduced in Windows PowerShell 3.0.</source>
          <target state="translated">[Ordered] 属性は、Windows PowerShell 3.0 で導入されました。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Creating Hash Tables</source>
          <target state="translated">ハッシュ テーブルを作成します。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>To create a hash table, follow these guidelines:</source>
          <target state="translated">ハッシュ テーブルを作成するには、次のガイドラインに従います。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Begin the hash table with an at sign (@).</source>
          <target state="translated">ハッシュ テーブルを開始、アット マーク (@)。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Enclose the hash table in braces ({}).</source>
          <target state="translated">ハッシュ テーブルは、中かっこ ({}) で囲みます。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Enter one or more key<ph id="ph1">\/</ph>value pairs for the content of the hash table.</source>
          <target state="translated">1 つまたは複数のキーを入力して<ph id="ph1">\/</ph>コンテンツのハッシュ テーブルのペアの値します。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Use an equal sign (<ph id="ph1">\=</ph>) to separate each key from its value.</source>
          <target state="translated">等号 (=) を使用して (<ph id="ph1">\=</ph>) 各キーの値と区別します。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Use a semicolon (;) or a line break to separate the key<ph id="ph1">\/</ph>value pairs.</source>
          <target state="translated">セミコロン (;) または行の区切りを使用して、キーを分離する<ph id="ph1">\/</ph>値のペアです。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Key that contains spaces must be enclosed in quotation marks.</source>
          <target state="translated">スペースが含まれるキーは、引用符で囲む必要があります。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Values must be valid Windows PowerShell expressions.</source>
          <target state="translated">値は、Windows PowerShell、有効な式である必要があります。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Strings must appear in quotation marks, even if they do not include spaces.</source>
          <target state="translated">スペースが含まれていない場合でも、文字列が、引用符で表示する必要があります。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>To manage the hash table, save it in a variable.</source>
          <target state="translated">ハッシュ テーブルを管理するには、変数に保存します。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>When assigning an ordered hash table to a variable, place the [ordered] attribute before the "@" symbol.</source>
          <target state="translated">配置する前に、[ordered] 属性の順序付けられたハッシュ テーブルを変数に代入する場合、"@"記号。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>If you place it before the variable name, the command fails.</source>
          <target state="translated">変数名の前に配置する場合、コマンドは失敗します。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>To create an empty hash table in the value of $hash, type:</source>
          <target state="translated">$Hash の値に空のハッシュ テーブルを作成するには、次のように入力します。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>You can also add keys and values to a hash table when you create it.</source>
          <target state="translated">させてもかまいませんキーと値をハッシュ テーブルを作成するとします。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>For example, the following statement creates a hash table with three keys.</source>
          <target state="translated">たとえば、次のステートメントは、3 つのキーをハッシュ テーブルを作成します。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Creating Ordered Dictionaries</source>
          <target state="translated">順序付けられた辞書を作成します。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>You can create an ordered dictionary by adding an object of the OrderedDictiory type, but the easiest way to create an ordered dictionary is use the [Ordered] attribute.</source>
          <target state="translated">OrderedDictiory 型のオブジェクトを追加して順序付けられた辞書を作成することができますが、順序付けられた辞書を作成する最も簡単な方法は、[Ordered] 属性を使用します。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>The [ordered] attribute is introduced in Windows PowerShell 3.0.</source>
          <target state="translated">[Ordered] 属性は、Windows PowerShell 3.0 で導入されました。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Place the attribute immediately before the "@" symbol.</source>
          <target state="translated">属性を配置する直前に、"@"記号。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>You can use ordered dictionaries in the same way that you use hash tables.</source>
          <target state="translated">ハッシュ テーブルを使用して同じ方法では、順序付けられた辞書を使用できます。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Either type can be used as the value of parameters that take a hash table or dictionary (iDictionary).</source>
          <target state="translated">いずれかの型をハッシュ テーブルまたは辞書 (iDictionary) を受け取るパラメーターの値として使用できます。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>You cannot use the [ordered] attribute to convert or cast a hash hash table.</source>
          <target state="translated">[Ordered] 属性は、変換またはキャスト ハッシュ ハッシュ テーブルを使用することはできません。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>If you place the ordered attribute before the variable name, the command fails with the following error message.</source>
          <target state="translated">変数名の前に、ordered 属性を配置すると、コマンドは、次のエラー メッセージで失敗します。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>To correct the expression, move the [ordered] attribute.</source>
          <target state="translated">式を解決するには、[ordered] 属性を移動します。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>You can cast an ordered dictionary to a hash table, but you cannot recover the ordered attribute, even if you clear the variable and enter new values.</source>
          <target state="translated">ハッシュ テーブルに順序付けられた辞書をキャストすることができますが、変数をクリアし、新しい値を入力した場合でも、ordered 属性を回復することはできません。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>To re-establish the order, you must remove and recreate the variable.</source>
          <target state="translated">順序を再確立する必要があるには、削除し、変数を再作成します。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Displaying Hash Tables</source>
          <target state="translated">ハッシュ テーブルを表示します。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>To display a hash table that is saved in a variable, type the variable name.</source>
          <target state="translated">変数に保存されているハッシュ テーブルを表示するには、変数名を入力します。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>By default, a hash tables is displayed as a table with one column for keys and one for values.</source>
          <target state="translated">既定では、ハッシュ テーブルは、キーの 1 つの列と値のいずれかを含むテーブルとして表示されます。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>Hash tables have Keys and Values properties.</source>
          <target state="translated">ハッシュ テーブルには、キーと値のプロパティがあります。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Use dot notation to display all of the keys or all of the values.</source>
          <target state="translated">すべてのキー、またはすべての値を表示するのにには、ドット表記を使用します。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Each key name is also a property of the hash table, and its value is the value of the key-name property.</source>
          <target state="translated">各キーの名前も、ハッシュ テーブルのプロパティは、その値は、キー名プロパティの値。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>Use the following format to display the property values.</source>
          <target state="translated">プロパティ値を表示するのにには、次の形式を使用します。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>For example:</source>
          <target state="translated">たとえば、次のように入力します。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>Hash tables have a Count property that indicates the number of key-value pairs in the hash table.</source>
          <target state="translated">ハッシュ テーブルには、ハッシュ テーブルにキー/値ペアの数を示す Count プロパティが設定されています。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>Hash table tables are not arrays, so you cannot use an integer as an index into the hash table, but you can use a key name to index into the hash table.</source>
          <target state="translated">ハッシュ テーブルのテーブルからは、配列のインデックスとしてハッシュ テーブルに整数を使用することはできませんが、ハッシュ テーブルにインデックスのキー名を使用することができます。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>If the key is a string value, enclose the key name in quotation marks.</source>
          <target state="translated">キーが文字列値の場合は、キー名を引用符で囲みます。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>For example:</source>
          <target state="translated">たとえば、次のように入力します。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>Adding and Removing Keys and Values</source>
          <target state="translated">追加して、キーと値を削除します。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>To add keys and values to a hash table, use the following command format.</source>
          <target state="translated">ハッシュ テーブルにキーと値を追加するには、次のコマンド形式を使用します。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>For example, to add a "Time" key with a value of "Now" to the hash table, use the following statement format.</source>
          <target state="translated">たとえば、"Time"キーに「現在」の値をハッシュ テーブルを追加するには、次のステートメント形式を使用します。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>You can also add keys and values to a hash table by using the Add method of the System.Collections.Hashtable object.</source>
          <target state="translated">System.Collections.Hashtable のオブジェクトの Add メソッドを使用して、ハッシュ テーブルにキーと値を追加することができますもします。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>The Add method has the following syntax:</source>
          <target state="translated">Add メソッドには、次の構文があります。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>For example, to add a "Time" key with a value of "Now" to the hash table, use the following statement format.</source>
          <target state="translated">たとえば、"Time"キーに「現在」の値をハッシュ テーブルを追加するには、次のステートメント形式を使用します。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>And, you can add keys and values to a hash table by using the addition operator (<ph id="ph1">\+</ph>) to add a hash table to an existing hash table.</source>
          <target state="translated">また、追加できますキーと値をハッシュ テーブル加算演算子を使用して (<ph id="ph1">\+</ph>) をハッシュ テーブルを既存のハッシュ テーブルに追加します。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>For example, the following statement adds a "Time" key with a value of "Now" to the hash table in the $hash variable.</source>
          <target state="translated">たとえば、次のステートメントは、$hash 変数のハッシュ テーブルに"Time"キーに「現在」の値を追加します。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>You can also add values that are stored in variables.</source>
          <target state="translated">変数に格納されている値を追加することもできます。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>You cannot use a subtraction operator to remove a key<ph id="ph1">\/</ph>value pair from a hash table, but you can use the Remove method of the Hashtable object.</source>
          <target state="translated">減算演算子を使用してキーを削除することはできません<ph id="ph1">\/</ph>、ハッシュ テーブルから値のペアは、ハッシュ テーブル オブジェクトの Remove メソッドを使用できます。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>The Remove method takes the key as its value.</source>
          <target state="translated">キーは、Remove メソッドは、その値として受け取ります。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>The Remove method has the following syntax:</source>
          <target state="translated">Remove メソッドには、次の構文があります。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>For example, to remove the Time<ph id="ph1">\=</ph>Now key<ph id="ph2">\/</ph>value pair from the hash table in the value of the $hash variable, type:</source>
          <target state="translated">たとえば、時刻を削除する<ph id="ph1">\=</ph>キーのようになりました<ph id="ph2">\/</ph>$hash 変数の型の値のハッシュ テーブルのペアの値します。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>You can use all of the properties and methods of Hashtable objects in Windows PowerShell, including Contains, Clear, Clone, and CopyTo.</source>
          <target state="translated">すべてのプロパティとチェック ボックスをオフに値を含むを含む、Windows PowerShell、クローン、CopyTo 内のハッシュ テーブル オブジェクトのメソッドを使用することができます。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>For more information about Hashtable objects, see "System.Collections.Hashtable" on MSDN.</source>
          <target state="translated">ハッシュ テーブルのオブジェクトに関する詳細については、MSDN の"System.Collections.Hashtable"を参照してください。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>Object Types in HashTables</source>
          <target state="translated">ハッシュ テーブル内のオブジェクトの種類</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>The keys and values in a hash table can have any .NET object type, and a single hash table can have keys and values of multiple types.</source>
          <target state="translated">キーとハッシュ テーブル内の値に、任意の .NET オブジェクト型を指定することがあり、1 つのハッシュ テーブルには、キーと複数の種類の値を保持できます。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>The following statement creates a hash table of process name strings and process object values and saves it in the $p variable.</source>
          <target state="translated">次のステートメントでは、プロセス名の文字列とプロセス オブジェクトの値のハッシュ テーブルを作成し、$p 変数に保存します。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>You can display the hash table in $p and use the key-name properties to display the values.</source>
          <target state="translated">$P に保存されたハッシュ テーブルを表示し、キー名のプロパティを使用して値を表示することができます。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>The keys in a hash table can also be any .NET type.</source>
          <target state="translated">ハッシュ テーブル内のキーには、任意の .NET 型ことができます。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>The following statement adds a key<ph id="ph1">\/</ph>value pair to the hash table in the $p variable.</source>
          <target state="translated">次のステートメントは、キーを追加<ph id="ph1">\/</ph>値のペアを $p 変数にハッシュ テーブルにします。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>The key is a Service object that represents the WinRM service, and the value is the current status of the service.</source>
          <target state="translated">キーは、WinRM サービスを表すサービス オブジェクトでの値は、サービスの現在の状態です。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>You can display and access the new key<ph id="ph1">\/</ph>value pair by using the same methods that you use for other pairs in the hash table.</source>
          <target state="translated">表示し、新しいキーにアクセス<ph id="ph1">\/</ph>ハッシュ テーブルには、他のペアを使用するものと同じメソッドを使用して、値のペアです。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>The keys and values in a hash table can also be Hashtable objects.</source>
          <target state="translated">キーとハッシュ テーブル内の値には、ハッシュ テーブル オブジェクトことができます。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>The following statement adds key<ph id="ph1">\/</ph>value pair to the hash table in the $p variable in which the key is a string, Hash2, and the value is a hash table with three key<ph id="ph2">\/</ph>value pairs.</source>
          <target state="translated">次のステートメントは、キーを追加<ph id="ph1">\/</ph>値のペアをキーは、文字列、Hash2 の値が 3 つのキーを持つハッシュ テーブルでは、$p 変数にハッシュ テーブルに<ph id="ph2">\/</ph>値のペアです。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>You can display and access the new values by using the same methods.</source>
          <target state="translated">表示して、同じメソッドを使用して、新しい値にアクセスできます。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>Sorting Keys and Values</source>
          <target state="translated">キーと値の並べ替え</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>The items in a hash table are intrinsically unordered.</source>
          <target state="translated">ハッシュ テーブル内の項目では、本質的に順序付けされません。</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>The key<ph id="ph1">\/</ph>value pairs might appear in a different order each time that you display them.</source>
          <target state="translated">キー<ph id="ph1">\/</ph>表示する別の順序たびに値のペアが表示されます。</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>Although you cannot sort a hash table, you can use the GetEnumerator method of hash tables to enumerate the keys and values, and then use the Sort-Object cmdlet to sort the enumerated values for display.</source>
          <target state="translated">ハッシュ テーブルを並べ替えることはできませんが、ハッシュ テーブルの GetEnumerator メソッドを使用して、キーと値を列挙し、表示の列挙値の並べ替えを Sort-object コマンドレットを使用できます。</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>For example, the following commands enumerate the keys and values in the hash table in the $p variable and then sort the keys in alphabetical order.</source>
          <target state="translated">たとえば、次のコマンドは、キーと、$p 変数にハッシュ テーブル内の値を列挙し、アルファベット順のキーを並べ替えます。</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>The following command uses the same procedure to sort the hash values in descending order.</source>
          <target state="translated">次のコマンドは、ハッシュ値を降順の並べ替えに同じ手順を使用します。</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>Creating Objects from Hash Tables</source>
          <target state="translated">ハッシュ テーブルからオブジェクトを作成します。</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>Beginning in Windows PowerShell 3.0, you can create an object from a hash table of properties and property values.</source>
          <target state="translated">Windows PowerShell 3.0 以降では、プロパティとプロパティ値のハッシュ テーブルからオブジェクトを作成できます。</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>The syntax is as follows:</source>
          <target state="translated">構文は次のとおりです。</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>This method works only for classes that have a null constructor, that is, a constructor that has no parameters.</source>
          <target state="translated">このメソッドは、null のコンス トラクター パラメーターをとらないコンス トラクターは、あるクラスに対してのみ機能します。</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>The object properties must be public and settable.</source>
          <target state="translated">オブジェクトのプロパティは、パブリック、設定可能にする必要があります。</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>For more information, see about_Object_Creation.</source>
          <target state="translated">詳細については、about_Object_Creation を参照してください。</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>ConvertFrom-StringData</source>
          <target state="translated">ConvertFrom-StringData</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>The ConvertFrom-StringData cmdlet converts a string or a here-string of key<ph id="ph1">\/</ph>value pairs into a hash table.</source>
          <target state="translated">Convertfrom-stringdata コマンドレットは、文字列またはキーのヒア文字列に変換します。<ph id="ph1">\/</ph>をハッシュ テーブルに値のペアです。</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>You can use the ConvertFrom-StringData cmdlet safely in the Data section of a script, and you can use it with the Import-LocalizedData cmdlet to display user messages in the user-interface (UI) culture of the current user.</source>
          <target state="translated">Convertfrom-stringdata コマンドレットを安全に使用するには、スクリプトのデータ セクションに、現在のユーザーのユーザー インターフェイス (UI) カルチャでユーザー メッセージを表示する Import-localizeddata コマンドレットを使用できます。</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>Here-strings are especially useful when the values in the hash table include quotation marks.</source>
          <target state="translated">ヒア文字列は、ハッシュ テーブル内の値は引用符を含める場合に特に便利です。</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>(For more information about here-strings, see about_Quoting_Rules.)</source>
          <target state="translated">(ここでは文字列の詳細については、about_Quoting_Rules を参照してください)。</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>The following example shows how to create a here-string of the user messages in the previous example and how to use ConvertFrom-StringData to convert them from a string into a hash table.</source>
          <target state="translated">次の例では、前の例でユーザー メッセージのヒア文字列を作成する方法と、Convertfrom-stringdata を使用してハッシュ テーブルに、文字列から変換する方法を示します。</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>The following command creates a here-string of the key<ph id="ph1">\/</ph>value pairs and then saves it in the $string variable.</source>
          <target state="translated">次のコマンドは、キーのヒア文字列を作成<ph id="ph1">\/</ph>値のペアを含み、$string 変数に保存されます。</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>This command uses the ConvertFrom-StringData cmdlet to convert the here-string into a hash table.</source>
          <target state="translated">このコマンドでは、Convertfrom-stringdata コマンドレットを使用して、ヒア文字列をハッシュ テーブルに変換します。</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>For more information about here-strings, see about_Quoting_Rules.</source>
          <target state="translated">ここでは文字列の詳細については、about_Quoting_Rules を参照してください。</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>SEE ALSO</source>
          <target state="translated">関連項目</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>about_Arrays</source>
          <target state="translated">about_Arrays</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>about_Object_Creation</source>
          <target state="translated">about_Object_Creation</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>about_Quoting_Rules</source>
          <target state="translated">about_Quoting_Rules</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>about_Script_Internationalization</source>
          <target state="translated">about_Script_Internationalization</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>ConvertFrom-StringData</source>
          <target state="translated">ConvertFrom-StringData</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>Import-LocalizedData</source>
          <target state="translated">Import-localizeddata</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>"System.Collections.Hashtable" on MSDN</source>
          <target state="translated">MSDN の"System.Collections.Hashtable"</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>