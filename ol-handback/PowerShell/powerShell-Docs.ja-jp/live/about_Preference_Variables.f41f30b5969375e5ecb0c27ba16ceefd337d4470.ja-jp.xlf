<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-1c394fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">97a798a059b2b47ddb5962a44fd63fa8861c3f10</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">reference\5.0\Microsoft.PowerShell.Core\About\about_Preference_Variables.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions" />
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">7bf1bc756437879d16c15eb18d20e6d3b2171d87</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">c1444f805dcb7dd038ddb0f6eaaadbf1defaf60f</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>about_Preference_Variables</source>
          <target state="translated">about_Preference_Variables</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>powershell, cmdlet</source>
          <target state="translated">powershell コマンドレット</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>About Preference Variables</source>
          <target state="translated">ユーザー設定変数について</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>about_preference_variables</source>
          <target state="translated">about_preference_variables</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>SHORT DESCRIPTION</source>
          <target state="translated">概要</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Variables that customize the behavior of Windows PowerShell</source>
          <target state="translated">Windows PowerShell の動作をカスタマイズする変数</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>LONG DESCRIPTION</source>
          <target state="translated">詳細説明</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Windows PowerShell includes a set of variables that enable you to customize its behavior.</source>
          <target state="translated">Windows PowerShell には、その動作をカスタマイズするための変数のセットが含まれています。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>These "preference variables" work like the options in GUI-based systems.</source>
          <target state="translated">これらの「ユーザー設定変数」は、GUI ベースのシステムで、オプションと同様に動作します。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The preference variables affect the Windows PowerShell operating environment and all commands run in the environment.</source>
          <target state="translated">ユーザー設定変数が Windows PowerShell の運用環境に影響し、環境内のすべてのコマンドを実行します。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>In many cases, the cmdlets have parameters that you can use to override the preference behavior for a specific command.</source>
          <target state="translated">多くの場合は、コマンドレットは、特定のコマンドの基本設定の動作をオーバーライドして使用できるパラメーターを持ちます。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>The following table lists the preference variables and their default values.</source>
          <target state="translated">次の表は、ユーザー設定変数とその既定値を示します。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Variable                             Default Value</source>
          <target state="translated">変数の既定値</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>$ConfirmPreference                   High $DebugPreference                     SilentlyContinue $ErrorActionPreference               Continue $ErrorView                           NormalView $FormatEnumerationLimit              4 $InformationPreference               SilentlyContinue $LogCommandHealthEvent               False (not logged) $LogCommandLifecycleEvent            False (not logged) $LogEngineHealthEvent                True (logged) $LogEngineLifecycleEvent             True (logged) $LogProviderLifecycleEvent           True (logged) $LogProviderHealthEvent              True (logged) $MaximumAliasCount                   4096 $MaximumDriveCount                   4096 $MaximumErrorCount                   256 $MaximumFunctionCount                4096 $MaximumHistoryCount                 4096 $MaximumVariableCount                4096 $OFS                                 (Space character (" ")) $OutputEncoding                      ASCIIEncoding object $ProgressPreference                  Continue $PSDefaultParameterValues            (None - empty hash table) $PSEmailServer                       (None) $PSModuleAutoLoadingPreference       All $PSSessionApplicationName            WSMAN $PSSessionConfigurationName          http://schemas.microsoft.com/PowerShell/microsoft.PowerShell $PSSessionOption                     (See below) $VerbosePreference                   SilentlyContinue $WarningPreference                   Continue $WhatIfPreference                    0</source>
          <target state="translated">$ConfirmPreference 高 $DebugPreference SilentlyContinue $ErrorActionPreference 続行 $ErrorView モード $FormatEnumerationLimit 4 $InformationPreference SilentlyContinue $ (ログイン) LogCommandHealthEvent False (いないログに記録された) $LogCommandLifecycleEvent False (ログインしていない) $LogEngineHealthEvent True $LogEngineLifecycleEvent (ログイン) True $LogProviderLifecycleEvent True (ログイン) $LogProviderHealthEvent True (ログイン) $MaximumAliasCount 4096 $MaximumDriveCount 4096 $MaximumErrorCount 256 $MaximumFunctionCount 4096 $MaximumHistoryCount 4096 $MaximumVariableCount 4096 $OFS (空白文字 ("")) $OutputEncoding ASCIIEncoding オブジェクト $ProgressPreference                 (なし) $PSEmailServer $PSModuleAutoLoadingPreference すべて $PSSessionApplicationName WSMAN $PSSessionConfigurationName http://schemas.microsoft.com/PowerShell/microsoft.PowerShell $PSSessionOption (下記参照) $ $PSDefaultParameterValues (なし - 空のハッシュ テーブル) を引き続き VerbosePreference SilentlyContinue $WarningPreference 続行 $WhatIfPreference 0</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Windows PowerShell also includes the following environment variables that store user preferences.</source>
          <target state="translated">Windows PowerShell には、ユーザー設定を格納する次の環境変数も含まれています。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>For more information about these environment variables, see about_Environment_Variables.</source>
          <target state="translated">これらの環境変数の詳細については、about_Environment_Variables を参照してください。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Variable</source>
          <target state="translated">変数</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>PSExecutionPolicyPreference PSModulePath</source>
          <target state="translated">PSExecutionPolicyPreference psmodulepath 環境変数</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>WORKING WITH PREFERENCE VARIABLES</source>
          <target state="translated">ユーザー設定変数を使用します。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>This document describes each of the preference variables.</source>
          <target state="translated">このドキュメントでは、ユーザー設定変数のそれぞれについて説明します。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>To display the current value of a specific preference variable, type the name of the variable.</source>
          <target state="translated">特定のユーザー設定変数の現在の値を表示するには、変数の名前を入力します。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>In response, Windows PowerShell provides the value.</source>
          <target state="translated">応答では、Windows PowerShell は、値を提供します。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>For example, the following command displays the value of the $ConfirmPreference variable.</source>
          <target state="translated">たとえば、次のコマンドは、$ConfirmPreference 変数の値を表示します。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>PS&gt; $ConfirmPreference High</source>
          <target state="translated">PS &gt; $ConfirmPreference 高</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>To change the value of a variable, use an assignment statement.</source>
          <target state="translated">変数の値を変更するには、代入ステートメントを使用します。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>For example, the following statement assigns the value "Medium" to the $ConfirmPreference variable.</source>
          <target state="translated">たとえば、次のステートメントは、$ConfirmPreference 変数に値"Medium"を割り当てます。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>PS&gt; $ConfirmPreference = "Medium"</source>
          <target state="translated">PS &gt; $ConfirmPreference ="Medium"</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Like all variables, the values that you set are specific to the current Windows PowerShell session.</source>
          <target state="translated">すべての変数のように設定した値は、現在の Windows PowerShell セッションに固有です。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>To make them effective in all Windows PowerShell session, add them to your Windows PowerShell profile.</source>
          <target state="translated">すべての Windows PowerShell セッションで有効にするには、Windows PowerShell プロファイルに追加します。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>For more information, see about_Profiles.</source>
          <target state="translated">詳細については、「about_Profiles」を参照してください。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>WORKING REMOTELY</source>
          <target state="translated">リモート作業</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>When you run commands on a remote computer, the remote commands are subject only to the preferences set in the Windows PowerShell client on the remote computer.</source>
          <target state="translated">リモート コンピューターでコマンドを実行すると、リモートのコマンドは、リモート コンピューター上の Windows PowerShell クライアントの設定にのみ。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>For example, when you run a remote command, the value of the $DebugPreference variable on remote computer determines how Windows PowerShell responds to debugging messages.</source>
          <target state="translated">たとえば、リモート コマンドを実行するとリモート コンピューターで、$DebugPreference 変数の値のデバッグ メッセージを Windows PowerShell の応答方法を決定します。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>For more information about remote commands, see about_remote.</source>
          <target state="translated">リモート コマンドの詳細については、about_remote に関するページを参照してください。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>$ConfirmPreference Determines whether Windows PowerShell automatically prompts you for confirmation before running a cmdlet or function.</source>
          <target state="translated">$ConfirmPreference を決定するかどうか Windows PowerShell に自動的に確認メッセージを表示するコマンドレットや関数を実行する前にします。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>When the value of the $ConfirmPreference variable (High, Medium, Low) is less than or equal to the risk assigned to the cmdlet or function (High, Medium, Low), Windows PowerShell automatically prompts you for confirmation before running the cmdlet or function.</source>
          <target state="translated">$ConfirmPreference 変数 (高、中、低) の値が、コマンドレットまたは関数 (高、中、低) に割り当てられているリスク以下の場合は、Windows PowerShell に自動的に確認を求められますコマンドレットまたは関数を実行する前にします。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>If the value of the $ConfirmPreference variable is None, Windows PowerShell never automatically prompts you before running a cmdlet or function.</source>
          <target state="translated">$ConfirmPreference 変数の値が None の場合は、Windows PowerShell 自動的に表示されたら、コマンドレットまたは関数を実行する前にします。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>To change the confirming behavior for all cmdlets and functions in the session, change the value of the $ConfirmPreference variable.</source>
          <target state="translated">セッションのすべてのコマンドレットと関数の確認動作を変更するには、$ConfirmPreference 変数の値を変更します。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>To override the $ConfirmPreference for a single command, use the Confirm parameter of the cmdlet or function.</source>
          <target state="translated">1 つのコマンドの $ConfirmPreference を無効にするには、コマンドレットまたは関数の確認入力パラメーターを使用します。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>To request confirmation, use -Confirm.</source>
          <target state="translated">使用の確認を要求することを確認します。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>To suppress confirmation, use -Confirm:$false</source>
          <target state="translated">確認を抑制するのには、- を使用して確認: $false</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Valid values of $ConfirmPreference:</source>
          <target state="translated">$ConfirmPreference の有効な値:</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>None:    Windows PowerShell does not prompt automatically.</source>
          <target state="translated">None: Windows PowerShell プロンプトが表示されません自動的にします。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>To request confirmation of a particular command, use the Confirm parameter of the cmdlet or function.</source>
          <target state="translated">特定のコマンドの確認を要求するには、コマンドレットまたは関数の確認入力パラメーターを使用します。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Low:     Windows PowerShell prompts for confirmation before running cmdlets or functions with a low, medium, or high risk.</source>
          <target state="translated">低: Windows PowerShell は、low、medium、またはリスクの高いコマンドレットまたは関数を実行する前に確認を求められます。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Medium:  Windows PowerShell prompts for confirmation before running cmdlets or functions with a medium, or high risk.</source>
          <target state="translated">中: Windows PowerShell は、中、またはリスクの高いコマンドレットまたは関数を実行する前に確認を求められます。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>High:    Windows PowerShell prompts for confirmation before running cmdlets or functions with a high risk.</source>
          <target state="translated">高: Windows PowerShell の入力を求める高リスクとコマンドレットまたは関数を実行する前に確認します。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>DETAILED EXPLANATION</source>
          <target state="translated">詳細な説明</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>When the actions of a cmdlet or function significantly affect the system, such as those that delete data or use a significant amount of system resources, Windows PowerShell can automatically prompt you for confirmation before performing the action.</source>
          <target state="translated">コマンドレットや関数の動作は、データを削除するなど、大量のシステム リソースを使用するものなど、システムを大きく左右するときに Windows PowerShell を自動的に表示し、操作を実行する前に確認。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>For example,</source>
          <target state="translated">例:</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>PS&gt; remove-item file.txt</source>
          <target state="translated">PS &gt; file.txt の削除と項目</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Confirm Are you sure you want to perform this action?</source>
          <target state="translated">確認は、この操作を実行することを確認するか。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Performing operation "Remove File" on Target "C:\file.txt".</source>
          <target state="translated">ターゲット"c:\file.txt."で「ファイルの削除」操作を実行しています。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>[Y] Yes  [A] Yes to All  [N] No  [L] No to All  [S] Suspend  [?] Help (default is "Y"):</source>
          <target state="translated">[Y] はい [A] ありません [L] いいえすべて [S] 中断 [?] [N] を [はい]ヘルプ (既定値は"Y"):</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>The estimate of the risk is an attribute of the cmdlet or function known as its "ConfirmImpact".</source>
          <target state="translated">リスクの見積もり量は、コマンドレットまたはその"ConfirmImpact"と呼ばれる関数の属性です。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>Users cannot change it.</source>
          <target state="translated">ユーザーは、それを変更できません。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Cmdlets and functions that might pose a risk to the system have a Confirm parameter that you can use to request or suppress confirmation for a single command.</source>
          <target state="translated">コマンドレットと、システムのリスクを引き起こす可能性がある関数には、要求または確認を 1 つのコマンドを非表示に使用できる Confirm パラメーターが含まれています。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Because most cmdlets and functions use the default risk value (ConfirmImpact) of Medium, and the default value of $ConfirmPreference is High, automatic confirmation rarely occurs.</source>
          <target state="translated">ほとんどのコマンドレットと関数は、既定のリスク値 (ConfirmImpact) 中を使用して、$ConfirmPreference の既定値が高い、自動確認はめったに発生します。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>However, you can activate automatic confirmation by changing the value of $ConfirmPreference to Medium or Low.</source>
          <target state="translated">ただし、中、または低に $ConfirmPreference の値を変更することで、自動確認をアクティブにできます。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>EXAMPLES</source>
          <target state="translated">例</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>This example shows the effect of the default value of $ConfirmPreference.</source>
          <target state="translated">この例では、$ConfirmPreference の既定値の効果を示します。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>The High value only confirms high-risk cmdlets and functions.</source>
          <target state="translated">大きな値には、危険度の高いコマンドレットと関数のみを確認します。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>Since most cmdlets and functions are medium risk, they are not automatically confirmed.</source>
          <target state="translated">ほとんどのコマンドレットと関数が中程度のリスクのため、それらは自動的には確認できません。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>PS&gt; $confirmpreference              #Get the current value of the High                                 variable</source>
          <target state="translated">PS &gt; $confirmpreference #Get 高変数の現在の値</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>PS&gt; remove-item temp1.txt           #Delete a file PS&gt;                                 #Deleted without confirmation</source>
          <target state="translated">PS &gt; temp1.txt #Delete ファイル PS を削除する項目 &gt; #Deleted 確認なし</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>PS&gt; remove-item temp2.txt -confirm  #Use the Confirm parameter to request confirmation</source>
          <target state="translated">PS &gt; 削除項目 temp2.txt-#Use Confirm パラメータは、要求の確認をすることを確認</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>Confirm Are you sure you want to perform this action?</source>
          <target state="translated">確認は、この操作を実行することを確認するか。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>Performing operation "Remove File" on Target "C:\temp2.txt".</source>
          <target state="translated">ターゲット"C:\temp2.txt"で「ファイルの削除」操作を実行しています。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>[Y] Yes  [A] Yes to All  [N] No  [L] No to All  [S] Suspend  [?] Help (default is "Y"):</source>
          <target state="translated">[Y] はい [A] ありません [L] いいえすべて [S] 中断 [?] [N] を [はい]ヘルプ (既定値は"Y"):</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>The following example shows the effect of changing the value of $ConfirmPreference to Medium.</source>
          <target state="translated">次の例では、"中"に $ConfirmPreference の値を変更した効果を示します。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>Because most cmdlets and function are medium-risk, they are automatically confirmed.</source>
          <target state="translated">ほとんどのコマンドレットと関数は危険性の中であるため、自動的に確認します。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>To suppress the confirmation prompt for a single command, use the Confirm parameter with a value of $false</source>
          <target state="translated">1 つのコマンドについての確認メッセージを抑制するのには、値を $false で Confirm パラメータを使用します。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>PS&gt; $confirmpreference = "Medium"  #Change the value of $ConfirmPreference PS&gt; remove-item temp2.txt          #Deleting a file triggers confirmation</source>
          <target state="translated">PS &gt; $confirmpreference"Medium"#Change $ConfirmPreference PS の値を = &gt; 削除項目 temp2.txt #Deleting ファイル確認をトリガーします。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>Confirm Are you sure you want to perform this action?</source>
          <target state="translated">確認は、この操作を実行することを確認するか。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>Performing operation "Remove File" on Target "C:\temp2.txt".</source>
          <target state="translated">ターゲット"C:\temp2.txt"で「ファイルの削除」操作を実行しています。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>[Y] Yes  [A] Yes to All  [N] No  [L] No to All  [S] Suspend  [?] Help (default is "Y"):</source>
          <target state="translated">[Y] はい [A] ありません [L] いいえすべて [S] 中断 [?] [N] を [はい]ヘルプ (既定値は"Y"):</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>PS&gt; remove-item temp3.txt -confirm:$false   #Use Confirm parameter to suppress confirmation PS&gt;</source>
          <target state="translated">PS &gt; temp3.txt を削除する項目のことを確認します PS の確認を $false #Use 確認パラメーター &gt;。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>$DebugPreference Determines how Windows PowerShell responds to debugging messages generated by a script, cmdlet or provider, or by a Write-Debug command at the command line.</source>
          <target state="translated">$DebugPreference は、Windows PowerShell がデバッグのコマンドラインで、Write-debug コマンド スクリプト、コマンドレットまたはプロバイダーによって生成されるメッセージに応答する方法を決定します。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>Some cmdlets display debugging messages, which are typically very technical messages designed for programmers and technical support professionals.</source>
          <target state="translated">一部のコマンドレットでは、プログラマやテクニカル サポート担当者用に設計された、非常に技術的なメッセージは、通常のデバッグ メッセージを表示します。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>By default, debugging messages are not displayed, but you can display debugging messages by changing the value of $DebugPreference.</source>
          <target state="translated">既定では、デバッグ メッセージは表示されませんが、$DebugPreference の値を変更することによってデバッグ メッセージを表示することができます。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>You can also use the Debug common parameter of a cmdlet to display or hide the debugging messages for a specific command.</source>
          <target state="translated">また、または特定のコマンドのデバッグ メッセージを非表示に、コマンドレットの Debug 共通パラメーターを使用することができます。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>For more information, type: "get-help about_commonparameters".</source>
          <target state="translated">詳細については、入力:「get-help about_commonparameters」です。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>Valid values: Stop:               Displays the debug message and stops executing.</source>
          <target state="translated">有効な値: 停止: デバッグ メッセージが表示され、実行を停止します。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>Writes an error to the console.</source>
          <target state="translated">エラーをコンソールに書き込みます。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>Inquire:            Displays the debug message and asks you whether you want to continue.</source>
          <target state="translated">照会する: では、デバッグ メッセージが表示され、続行するかどうかを確認します。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>Note that adding the Debug common parameter to a command--when the command is configured to generate a debugging message--changes the value of the $DebugPreference variable to Inquire.</source>
          <target state="translated">追加する、デバッグ コマンド--に共通のパラメーター - デバッグ メッセージを生成するコマンドが構成されている、$DebugPreference 変数の値に変わります Inquire です。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>Continue:           Displays the debug message and continues with execution.</source>
          <target state="translated">続行します。 では、デバッグ メッセージが表示され、実行を続行します。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>SilentlyContinue:   No effect.</source>
          <target state="translated">SilentlyContinue: 何も起こりません。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>The debug message is not (Default)           displayed and execution continues without interruption.</source>
          <target state="translated">デバッグ メッセージは、(既定値) が表示され、実行が中断されることがなく継続ではありません。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>EXAMPLES</source>
          <target state="translated">例</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>The following examples show the effect of changing the values of $DebugPreference when a Write-Debug command is entered at the command line.</source>
          <target state="translated">次の例では、コマンドラインで、Write-debug コマンドを入力するときに、$DebugPreference の値を変更した効果を示します。</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>The change affects all debugging messages, including those generated by cmdlets and scripts.</source>
          <target state="translated">コマンドレットとスクリプトによって生成されたものを含むすべてのデバッグ メッセージが変更されます。</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>The examples also show the use of the Debug common parameter, which displays or hides the debugging messages related to a single command.</source>
          <target state="translated">例では、表示、または 1 つのコマンドに関連するデバッグ メッセージを非表示に Debug 共通パラメーターの使用を示します。</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>This example shows the effect of the default value, "SilentlyContinue."</source>
          <target state="translated">この例は、"SilentlyContinue"で、既定値の効果を示しています。</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>The debug message is not displayed and processing continues.</source>
          <target state="translated">デバッグ メッセージは表示されず、処理を続行します。</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>The final command uses the Debug parameter to override the preference for a single command.</source>
          <target state="translated">最後のコマンドでは、Debug パラメーターを使用して、1 つのコマンドを優先順位をオーバーライドします。</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>PS&gt; $debugpreference                    # Get the current value of SilentlyContinue                          $DebugPreference</source>
          <target state="translated">PS &gt; $debugpreference # SilentlyContinue $DebugPreference の現在の値を取得します。</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>PS&gt; write-debug "Hello, World" PS&gt;                                     # The debug message is not displayed.</source>
          <target state="translated">PS &gt; write-debug「こんにちは, World」の PS &gt; # デバッグ メッセージは表示されません。</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>PS&gt; write-debug "Hello, World" -Debug   # Use the Debug parameter DEBUG: Hello, World                     # The debug message is displayed and confirmation is requested.</source>
          <target state="translated">PS &gt;「こんにちは, World」、write-debug-# を使用してデバッグの Debug パラメーターをデバッグ: こんにちは, World # デバッグ メッセージが表示され、確認を要求します。</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>Confirm Continue with this operation?</source>
          <target state="translated">この操作を続行を確認するか。</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>[Y] Yes  [A] Yes to All  [H] Halt Command  [S] Suspend  [?] Help (default is "Y"):</source>
          <target state="translated">[Y] [はい]、[A] [はい] にすべての [H] Halt コマンド [S] 中断 [?]ヘルプ (既定値は"Y"):</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>This example shows the effect of the "Continue" value.</source>
          <target state="translated">この例では、"Continue"の値の効果を示します。</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>The final command uses the Debug parameter with a value of $false to suppress the message for a single command.</source>
          <target state="translated">最後のコマンドを抑制する状況について 1 つのコマンドは、メッセージの値を $false に Debug パラメーターを使用します。</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>PS&gt; $debugpreference = "Continue"   # Change the value to "Continue"</source>
          <target state="translated">PS &gt; $debugpreference ="Continue"#"Continue"に値を変更します。</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>PS&gt; write-debug "Hello, World" DEBUG: Hello, World                 # The debug message is displayed PS&gt;                                   and processing continues.</source>
          <target state="translated">PS &gt;「こんにちは, World」、write-debug デバッグ: こんにちは, World デバッグ メッセージは、# 表示 PS &gt; 処理を続行します。</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>PS&gt; write-debug "Hello, World" -Debug:$false Use the Debug parameter with false.</source>
          <target state="translated">PS &gt; write-debug「こんにちは, World」のデバッグ: $false が false で、Debug パラメーターを使用します。</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>PS&gt;                                 # The debug message is not displayed.</source>
          <target state="translated">PS &gt; # デバッグ メッセージは表示されません。</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>This example shows the effect of the "Stop" value.</source>
          <target state="translated">この例では、「停止」の値の効果を示します。</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>The final command uses the Debug parameter with a value of $false to suppress the message for a single command.</source>
          <target state="translated">最後のコマンドを抑制する状況について 1 つのコマンドは、メッセージの値を $false に Debug パラメーターを使用します。</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>PS&gt; $debugpreference = "Stop"       #Change the value to "Stop" PS&gt; write-debug "Hello, World" DEBUG: Hello, World Write-Debug : Command execution stopped because the shell variable "DebugPreference" is set to Stop.</source>
          <target state="translated">PS &gt; $debugpreference ="Stop"#Change 値を"Stop"PS &gt;「こんにちは, World」、write-debug デバッグ: こんにちは, World Write-debug: コマンドの実行、シェル変数"DebugPreference"が Stop に設定されているために停止しました。</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>At line:1 char:12</source>
          <target state="translated">行: 1 文字: 12 に</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>write-debug  &lt;&lt;&lt;&lt; "Hello, World"</source>
          <target state="translated">write-debug &lt;&lt;&lt;&lt;「こんにちは, World」</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>PS&gt; write-debug "Hello, World" -Debug:$false Use the Debug parameter with $false PS&gt;                                 # The debug message is not displayed and processing is not stopped.</source>
          <target state="translated">PS &gt; write-debug「こんにちは, World」のデバッグ: $false を $false PS Debug パラメーターを使用して &gt; # デバッグ メッセージは表示されず、処理は停止されません。</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>This example shows the effect of the "Inquire" value.</source>
          <target state="translated">この例では、"Inquire"値の効果を示します。</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>The final command uses the Debug parameter with a value of $false to suppress the message for a single command.</source>
          <target state="translated">最後のコマンドを抑制する状況について 1 つのコマンドは、メッセージの値を $false に Debug パラメーターを使用します。</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>PS&gt; $debugpreference = "Inquire" PS&gt; write-debug "Hello, World" DEBUG: Hello, World</source>
          <target state="translated">PS &gt; $debugpreference ="Inquire"PS &gt; write-debug「こんにちは, World」のデバッグ: こんにちは, World</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>Confirm Continue with this operation?</source>
          <target state="translated">この操作を続行を確認するか。</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>[Y] Yes  [A] Yes to All  [H] Halt Command  [S] Suspend  [?] Help (default is "Y"):</source>
          <target state="translated">[Y] [はい]、[A] [はい] にすべての [H] Halt コマンド [S] 中断 [?]ヘルプ (既定値は"Y"):</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>PS&gt; write-debug "Hello, World" -Debug:$false Use the Debug parameter with $false PS&gt;                                 # The debug message is not displayed and processing continues without interruption.</source>
          <target state="translated">PS &gt; write-debug「こんにちは, World」のデバッグ: $false を $false PS Debug パラメーターを使用して &gt; # デバッグ メッセージは表示されず、処理を中断することがなく続行します。</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>$ErrorActionPreference Determines how Windows PowerShell responds to a non-terminating error (an error that does not stop the cmdlet processing) at the command line or in a script, cmdlet, or provider, such as the errors generated by the Write-Error cmdlet.</source>
          <target state="translated">$ErrorActionPreference は、コマンドラインやスクリプト、コマンドレット、または書き込みエラー コマンドレットによって生成されるエラーなどのプロバイダーで Windows PowerShell が終了しないエラー (エラー コマンドレットの処理を停止しませんが) にどのように応答する方法を決定します。</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>You can also use the ErrorAction common parameter of a cmdlet to override the preference for a specific command.</source>
          <target state="translated">コマンドレットの ErrorAction 共通パラメーターは、特定のコマンドの基本設定を上書きするも行えます。</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>Valid values: Stop:               Displays the error message and stops executing.</source>
          <target state="translated">有効な値: 停止: エラー メッセージが表示され、実行を停止します。</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>Inquire:            Displays the error message and asks you whether you want to continue.</source>
          <target state="translated">照会する: エラー メッセージを表示し、続行するかどうかを確認します。</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>Continue:           Displays the error message and continues (Default)           executing.</source>
          <target state="translated">続行します。 エラー メッセージを表示し、(既定値) の実行を続行します。</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>Suspend:            Automatically suspends a workflow job to allow for further investigation.</source>
          <target state="translated">Suspend: 詳しい調査のために許可するようにワークフロー ジョブが自動的に停止します。</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>After investigation, the workflow can be resumed.</source>
          <target state="translated">調査の結果、ワークフローを再開することができます。</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>SilentlyContinue:   No effect.</source>
          <target state="translated">SilentlyContinue: 何も起こりません。</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>The error message is not displayed and execution continues without interruption.</source>
          <target state="translated">エラー メッセージは表示されず、実行が中断されることがなく続行します。</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>NOTE: The Ignore value of the ErrorAction common parameter is not a valid value of the $ErrorActionPreference variable.</source>
          <target state="translated">注: ErrorAction 共通パラメーターの無視する値は、$ErrorActionPreference 変数の有効な値ではありません。</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>The Ignore value is intended for per-command use, not for use as saved preference.</source>
          <target state="translated">Ignore 値は、コマンドごとの使用、保存されている設定として使用しないでください適しています。</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>Neither $ErrorActionPreference nor the ErrorAction common parameter affect how Windows PowerShell responds to terminating errors (those that stop cmdlet processing).</source>
          <target state="translated">$ErrorActionPreference でも、ErrorAction 共通パラメーターは、Windows PowerShell が終了するエラー (コマンドレットの処理を停止するもの) にどのように応答する方法に影響します。</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>For more information about the ErrorAction common parameter, see about_CommonParameters (http://go.microsoft.com/fwlink/?LinkID=113216).</source>
          <target state="translated">ErrorAction 共通パラメーターの詳細については、「about_CommonParameters (http://go.microsoft.com/fwlink/?LinkID=113216) を参照してください。</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>EXAMPLES</source>
          <target state="translated">例</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>These examples show the effect of the different values of $ErrorActionPreference and the use of the ErrorAction common parameter to override the preference for a single command.</source>
          <target state="translated">これらの例では、$ErrorActionPreference のそれぞれの値と、1 つのコマンドを優先順位を上書きするには、ErrorAction 共通パラメーターの使用の結果を表示します。</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>The ErrorAction parameter has the same valid values as the $ErrorActionPreference variable.</source>
          <target state="translated">ErrorAction パラメーターには、$ErrorActionPreference 変数と同じ有効な値があります。</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>This example shows the effect of the Continue value, which is the default.</source>
          <target state="translated">この例では、既定値は、続行の値の効果を示します。</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>PS&gt; $erroractionpreference Continue# Display the value of the preference.</source>
          <target state="translated">優先順位の値 PS &gt; $erroractionpreference 続行 # 表示をします。</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>PS&gt; write-error "Hello, World" Generate a non-terminating error.</source>
          <target state="translated">PS &gt;「こんにちは, World」の書き込みエラーは、未終了エラーを生成します。</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>write-error "Hello, World" : Hello, World The error message is displayed and execution continues.</source>
          <target state="translated">「こんにちは, World」の書き込みエラー: こんにちは、世界中のエラー メッセージが表示され、実行が続けられます。</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>PS&gt; write-error "Hello, World" -ErrorAction:SilentlyContinue Use the ErrorAction parameter with a value of "SilentlyContinue".</source>
          <target state="translated">PS &gt;「こんにちは, World」の書き込みエラー-erroraction: SilentlyContinue"SilentlyContinue"の値を持つ ErrorAction パラメーターを使用します。</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>PS&gt; The error message is not displayed and execution continues.</source>
          <target state="translated">PS &gt; エラー メッセージは表示されず、実行が続けられます。</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source>This example shows the effect of the SilentlyContinue value.</source>
          <target state="translated">この例では、SilentlyContinue 値の効果を示します。</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source>PS&gt; $ErrorActionPreference = "SilentlyContinue" Change the value of the preference.</source>
          <target state="translated">PS &gt; $ErrorActionPreference ="SilentlyContinue"設定の値を変更します。</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source>PS&gt; write-error "Hello, World" Generate an error message.</source>
          <target state="translated">PS &gt;「こんにちは, World」の書き込みエラーがエラー メッセージを生成します。</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source>PS&gt; Error message is suppressed.</source>
          <target state="translated">PS &gt; エラー メッセージは表示されません。</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source>PS&gt; write-error "Hello, World" -erroraction:continue Use the ErrorAction parameter with a value of "Continue".</source>
          <target state="translated">PS &gt; 書き込みエラー「こんにちは, World」-erroraction: ErrorAction パラメーターに"Continue"の値の使用を継続します。</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source>write-error "Hello, World" -erroraction:continue : Hello, World The error message is displayed and execution continues.</source>
          <target state="translated">書き込みエラー「こんにちは, World」-erroraction: 続行: こんにちは、世界中のエラー メッセージが表示され、実行が続けられます。</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve">
          <source>This example shows the effect of a real error.</source>
          <target state="translated">この例では、実際のエラーの影響を示します。</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source>In this case, the command gets a non-existent file, nofile.txt.</source>
          <target state="translated">この場合は、コマンドの取得に存在していないファイル、nofile.txt です。</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source>The example also uses the ErrorAction common parameter to override the preference.</source>
          <target state="translated">また、基本設定を上書きするのに ErrorAction 共通パラメーターを使用します。</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source>PS&gt; $erroractionpreference SilentlyContinue        # Display the value of the preference.</source>
          <target state="translated">PS &gt; $erroractionpreference SilentlyContinue # は、基本設定の値を表示します。</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve">
          <source>PS&gt; get-childitem -path nofile.txt PS&gt;                     # Error message is suppressed.</source>
          <target state="translated">PS &gt;、get-childitem-パス nofile.txt PS &gt; # エラー メッセージは表示されません。</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve">
          <source>PS&gt; $ErrorActionPreference = "Continue" Change the value to Continue.</source>
          <target state="translated">PS &gt; $ErrorActionPreference ="Continue"[続行] に値を変更します。</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve">
          <source>PS&gt; get-childitem -path nofile.txt Get-ChildItem : Cannot find path 'C:\nofile.txt' because it does not exist.</source>
          <target state="translated">PS &gt;、get-childitem-パス nofile.txt Get-childitem: が存在しないために、パス 'C:\nofile.txt' が見つかりません。</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve">
          <source>At line:1 char:4</source>
          <target state="translated">行: 1 文字: 4</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve">
          <source>get-childitem  &lt;&lt;&lt;&lt; nofile.txt</source>
          <target state="translated">get-childitem &lt;&lt;&lt;&lt; nofile.txt</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve">
          <source>PS&gt; get-childitem -path nofile.txt -erroraction SilentlyContinue Use the ErrorAction parameter PS&gt; Error message is suppressed.</source>
          <target state="translated">PS &gt;、get-childitem-パス nofile.txt-erroraction SilentlyContinue PS ErrorAction パラメーターを使用して &gt; エラー メッセージは表示されません。</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve">
          <source>PS&gt; $ErrorActionPreference = "Inquire" Change the value to Inquire.</source>
          <target state="translated">PS &gt; $ErrorActionPreference ="Inquire"Inquire に値を変更します。</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve">
          <source>PS&gt; get-childitem -path nofile.txt</source>
          <target state="translated">PS &gt;、get-childitem-パス nofile.txt</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve">
          <source>Confirm Cannot find path 'C:\nofile.txt' because it does not exist.</source>
          <target state="translated">確認が存在しないために、パス 'C:\nofile.txt' が見つかりません。</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve">
          <source>[Y] Yes  [A] Yes to All  [H] Halt Command  [S] Suspend  [?] Help (default is "Y"): y</source>
          <target state="translated">[Y] [はい]、[A] [はい] にすべての [H] Halt コマンド [S] 中断 [?]ヘルプ (既定値は"Y"): y</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve">
          <source>Get-ChildItem : Cannot find path 'C:\nofile.txt' because it does not exist.</source>
          <target state="translated">存在しないために、Get-childitem: はパス 'C:\nofile.txt' を見つけることはできません。</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve">
          <source>At line:1 char:4</source>
          <target state="translated">行: 1 文字: 4</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve">
          <source>get-childitem  &lt;&lt;&lt;&lt; nofile.txt</source>
          <target state="translated">get-childitem &lt;&lt;&lt;&lt; nofile.txt</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve">
          <source>PS&gt; $ErrorActionPreference = "Continue" Change the value to Continue.</source>
          <target state="translated">PS &gt; $ErrorActionPreference ="Continue"[続行] に値を変更します。</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve">
          <source>PS&gt; Get-Childitem nofile.txt -erroraction "Inquire" Use the ErrorAction parameter to override the preference value.</source>
          <target state="translated">PS &gt; Get-childitem nofile.txt erroraction"Inquire"では、ErrorAction パラメーターを使用して、優先順位の値をオーバーライドします。</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve">
          <source>Confirm Cannot find path 'C:\nofile.txt' because it does not exist.</source>
          <target state="translated">確認が存在しないために、パス 'C:\nofile.txt' が見つかりません。</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve">
          <source>[Y] Yes  [A] Yes to All  [H] Halt Command  [S] Suspend  [?] Help (default is "Y"):</source>
          <target state="translated">[Y] [はい]、[A] [はい] にすべての [H] Halt コマンド [S] 中断 [?]ヘルプ (既定値は"Y"):</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve">
          <source>$ErrorView Determines the display format of error messages in Windows PowerShell.</source>
          <target state="translated">$ErrorView Windows PowerShell でのエラー メッセージの表示形式を決定します。</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve">
          <source>Valid values: NormalView:         A detailed view designed for most users.</source>
          <target state="translated">有効な値: モード: ほとんどのユーザー用に設計された詳細を表示します。</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve">
          <source>(default)           Consists of a description of the error, the name of the object involved in the error, and arrows (&lt;&lt;&lt;&lt;) that point to the words in the command that caused the error.</source>
          <target state="translated">(既定値)          エラーと矢印に関係するオブジェクトの名前で、エラーの説明で構成されます (&lt;&lt;&lt;&lt;) にエラーが発生したコマンド内の単語を指します。</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve">
          <source>CategoryView:       A succinct, structured view designed for production environments.</source>
          <target state="translated">CategoryView: 簡潔な構造化されたビュー実稼働環境向けに設計します。</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve">
          <source>The format is: {Category}: ({TargetName}:{TargetType}):[{Activity}], {Reason}</source>
          <target state="translated">形式: {カテゴリ}: ({TargetName}: {TargetType}): [{活動}] {reason}</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve">
          <source>For more information about the fields in CategoryView, see "ErrorCategoryInfo class" in the Windows PowerShell SDK.</source>
          <target state="translated">CategoryView 内のフィールドの詳細については、次を参照してください。 Windows PowerShell SDK の「ErrorCategoryInfo クラス」です。</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve">
          <source>EXAMPLES</source>
          <target state="translated">例</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve">
          <source>These example show the effect of the ErrorView values.</source>
          <target state="translated">次の例では、ErrorView 値の効果を表示します。</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve">
          <source>This example shows how an error appears when the value of $ErrorView is NormalView.</source>
          <target state="translated">この例では、$ErrorView の値がモードのときのエラーの表示方法を示します。</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve">
          <source>In this case, the Get-ChildItem command is used to find a non-existent file.</source>
          <target state="translated">この場合は、Get-childitem コマンドを使用して、存在しないファイルを検索します。</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve">
          <source>PS&gt; $ErrorView                         # Verify the value.</source>
          <target state="translated">PS &gt; $ErrorView # は、値を確認します。</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve">
          <source>NormalView</source>
          <target state="translated">モード</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve">
          <source>PS&gt; get-childitem nofile.txt           # Find a non-existent file.</source>
          <target state="translated">PS &gt;、get-childitem nofile.txt # 検索に存在していないファイルです。</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve">
          <source>Get-ChildItem : Cannot find path 'C:\nofile.txt' because it does not exist.</source>
          <target state="translated">存在しないために、Get-childitem: はパス 'C:\nofile.txt' を見つけることはできません。</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve">
          <source>At line:1 char:14</source>
          <target state="translated">行: 1 文字: 14</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve">
          <source>get-childitem  &lt;&lt;&lt;&lt; nofile.txt</source>
          <target state="translated">get-childitem &lt;&lt;&lt;&lt; nofile.txt</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve">
          <source>This example shows how the same error appears when the value of $ErrorView is CategoryView.</source>
          <target state="translated">この例では、同じエラーが $ErrorView の値が CategoryView を表示する方法を示します。</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve">
          <source>PS&gt; $ErrorView = "CategoryView"        # Change the value to CategoryView</source>
          <target state="translated">PS &gt; $ErrorView ="CategoryView"# CategoryView に値を変更します。</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve">
          <source>PS&gt; get-childitem nofile.txt ObjectNotFound: (C:\nofile.txt:String) [Get-ChildItem], ItemNotFoundException</source>
          <target state="translated">PS &gt;、get-childitem nofile.txt ObjectNotFound: (C:\nofile.txt:String) [Get-childitem] ItemNotFoundException</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve">
          <source>This example demonstrates that the value of ErrorView only affects the error display; it does not change the structure of the error object that is stored in the $error automatic variable.</source>
          <target state="translated">この例では、ErrorView の値がエラーの表示のみに影響します。$error 自動変数に格納されているエラー オブジェクトの構造は変わりません。</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve">
          <source>For information about the $error automatic variable, see about_automatic_variables.</source>
          <target state="translated">$Error 自動変数については、「about_automatic_variables」を参照してください。</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve">
          <source>This command takes the ErrorRecord object associated with the most recent error in the error array (element 0) and formats all of the properties of the error object in a list.</source>
          <target state="translated">このコマンドは、オブジェクトを受け取り、ErrorRecord エラー配列 (要素 0) には、最新のエラーに関連付けられているし、すべての一覧で、エラー オブジェクトのプロパティを書式設定します。</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve">
          <source>PS&gt; $error[0] | format-list -property * -force</source>
          <target state="translated">PS &gt; $error [0] |format-list の-プロパティ *-強制実行</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve">
          <source>Exception    : System.Management.Automation.ItemNotFoundException: Cannot find path 'C:\nofile.txt' because it does not exist.</source>
          <target state="translated">例外: System.Management.Automation.ItemNotFoundException: が存在しないために、パス 'C:\nofile.txt' が見つかりません。</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve">
          <source>at System.Management.Automation.SessionStateInternal.GetChildItems(String path, Boolean recurse, CmdletProviderContext context) at System.Management.Automation.ChildItemCmdletProviderIntrinsics.Get(String path, Boolean recurse, CmdletProviderContext context) at Microsoft.PowerShell.Commands.GetChildItemCommand.ProcessRecord() TargetObject          : C:\nofile.txt CategoryInfo          : ObjectNotFound: (C:\nofile.txt:String) [Get-ChildItem], ItemNotFoundException FullyQualifiedErrorId : PathNotFound,Microsoft.PowerShell.Commands.GetChildItemCommand ErrorDetails          : InvocationInfo        : System.Management.Automation.InvocationInfo</source>
          <target state="translated">System.Management.Automation.SessionStateInternal.GetChildItems (パスの文字列、ブール recurse、CmdletProviderContext コンテキスト) で Microsoft.PowerShell.Commands.GetChildItemCommand.ProcessRecord() TargetObject System.Management.Automation.ChildItemCmdletProviderIntrinsics.Get (パスの文字列、ブール recurse、CmdletProviderContext コンテキスト) である: C:\nofile.txt CategoryInfo: ObjectNotFound: (C:\nofile.txt:String) [Get-childitem] ItemNotFoundException FullyQualifiedErrorId: PathNotFound,Microsoft.PowerShell.Commands.GetChildItemCommand ErrorDetails: InvocationInfo: System.Management.Automation.InvocationInfo</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve">
          <source>$FormatEnumerationLimit Determines how many enumerated items are included in a display.</source>
          <target state="translated">$FormatEnumerationLimit では、ディスプレイに列挙された項目の数が含まれるを決定します。</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve">
          <source>This variable does not affect the underlying objects; just the display.</source>
          <target state="translated">この変数では、基になるオブジェクトには影響しません表示するだけです。</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve">
          <source>When the value of $FormatEnumerationLimit is less than the number of enumerated items, Windows PowerShell adds an ellipsis (...) to indicate items not shown.</source>
          <target state="translated">$FormatEnumerationLimit の値が列挙アイテムの数よりも少ない場合は、Windows PowerShell は表示されない項目の横に省略記号 (...) を追加します。</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve">
          <source>Valid values: Integers (Int32) Default value: 4</source>
          <target state="translated">有効な値: 整数 (Int32) の既定値: 4</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve">
          <source>EXAMPLES</source>
          <target state="translated">例</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve">
          <source>This example shows how to use the $FormatEnumerationLimit variable to improve the display of enumerated items.</source>
          <target state="translated">この例では、$FormatEnumerationLimit 変数を使用して列挙アイテムの表示を向上する方法を示します。</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve">
          <source>The command in this example generates a table that lists all of the services running on the computer in two groups; one for running services and one for stopped services.</source>
          <target state="translated">この例のコマンドには、すべての 2 つのグループのコンピューターで実行されるサービスの一覧を表示するテーブルが生成されます。サービスと 1 つずつ停止したサービスを実行する 1 つです。</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve">
          <source>It uses a Get-Service command to get all of the services, and then send the results through the pipeline to the Group-Object cmdlet, which groups the results by the service status.</source>
          <target state="translated">Get-service コマンドを使用して、サービスをすべて取得し、サービスの状態で結果をグループ化する Group-object コマンドレットにパイプラインを使用して、結果を送信します。</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve">
          <source>The resulting display is a table that lists the status in the Name column and the processes with that status in the Group column.</source>
          <target state="translated">結果の表示では、[名前] 列と、プロセスでその状態が [グループ] 列の状態を一覧表示するテーブルです。</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve">
          <source>(To change the column labels, use a hash table.</source>
          <target state="translated">(列ラベルを変更するには、ハッシュ テーブルを使用します。</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve">
          <source>For more information, see the examples in "get-help format-table -examples".)</source>
          <target state="translated">詳細については、例を参照してください"get-help を表の書式設定の例"です。)。</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve">
          <source>There are a maximum of 4 services listed in the Group column for each status.</source>
          <target state="translated">各状態の [グループ] 列に表示されている 4 つのサービスの最大数があります。</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve">
          <source>To increase the number of items listed, increase the value of $FormatEnumerationLimit to 1000.</source>
          <target state="translated">で表示される項目の数を増加させるのには、1000 $FormatEnumerationLimit の値を大ききます。</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve">
          <source>In the resulting display, the list in the Group column is now limited by the line length.</source>
          <target state="translated">グループ列の一覧は、結果の表示で、行の長さによって制限されますようになりました。</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve">
          <source>In the final command in the example, use the Wrap parameter of Format-Table to display all of the processes in each Status group.</source>
          <target state="translated">例では最後のコマンドでは、各状態グループ内のすべてのプロセスを表示するのに表形式のラップ パラメーターを使用します。</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve">
          <source>PS&gt; $formatenumerationlimit         # Find the current value 4</source>
          <target state="translated">PS &gt; $formatenumerationlimit # 4 の現在の値を検索します。</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve">
          <source>PS&gt; get-service | group-object -property status List all services grouped by status</source>
          <target state="translated">PS &gt; get service |グループ オブジェクトのプロパティの状態を状態別にグループ化のすべてのサービスを一覧表示</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve">
          <source>Count Name                      Group</source>
          <target state="translated">カウントの名前のグループ</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve">
          <source>60 Running                   {AdtAgent, ALG, Ati HotKey Poller, AudioSrv...}</source>
          <target state="translated">{AdtAgent、ALG、Ati ホットキーのポーリング、AudioSrv...} 60 の実行</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve">
          <source>41 Stopped                   {Alerter, AppMgmt, aspnet_state, ATI Smart...}</source>
          <target state="translated">41 Stopped {Alerter、AppMgmt、aspnet_state、ATI スマート...}</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve">
          <source>The list is truncated after 4 items.</source>
          <target state="translated">一覧は、4 つの項目の後に切り捨てられます。</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve">
          <source>PS&gt; $formatenumerationlimit = 1000 Increase the limit to 1000.</source>
          <target state="translated">PS &gt; $formatenumerationlimit = 1000 の増加を 1000 以下に制限します。</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve">
          <source>PS&gt; get-service | group-object -property status Repeat the command.</source>
          <target state="translated">PS &gt; get service |グループ オブジェクトのプロパティの状態は、コマンドを繰り返し実行します。</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve">
          <source>Count Name     Group</source>
          <target state="translated">カウントの名前のグループ</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve">
          <source>60 Running  {AdtAgent, ALG, Ati HotKey Poller, AudioSrv, BITS, CcmExec... 41 Stopped  {Alerter, AppMgmt, aspnet_state, ATI Smart, Browser, CiSvc...</source>
          <target state="translated">{AdtAgent ALG、Ati ホットキーのポーリング、AudioSrv、BITS CcmExec... 60 の実行41 Stopped {Alerter、AppMgmt、aspnet_state、ATI スマート、ブラウザー、CiSvc.</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve">
          <source>PS&gt; get-service | group-object -property status | format-table -wrap Add the Wrap parameter.</source>
          <target state="translated">PS &gt; get service |グループ オブジェクトのプロパティの状態 |表の書式設定の追加 Wrap パラメーターをラップします。</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve">
          <source>Count Name       Group</source>
          <target state="translated">カウントの名前のグループ</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve">
          <source>60 Running    {AdtAgent, ALG, Ati HotKey Poller, AudioSrv, BITS, CcmExec, Client for NFS, CryptSvc, DcomLaunch, Dhcp, dmserver, Dnscache, ERSvc, Eventlog, EventSystem, FwcAgent, helpsvc, HidServ, IISADMIN, InoRPC, InoRT, InoTask, lanmanserver, lanmanworkstation, LmHosts, MDM, Netlogon, Netman, Nla, NtLmSsp, PlugPlay, PolicyAgent, ProtectedStorage, RasMan, RemoteRegistry, RpcSs, SamSs, Schedule, seclogon, SENS, SharedAccess, ShellHWDetection, SMT PSVC, Spooler, srservice, SSDPSRV, stisvc, TapiSrv, TermService, Themes, TrkWks, UMWdf, W32Time, W3SVC, WebClient, winmgmt, wscsvc, wuauserv, WZCSVC, zzInterix}</source>
          <target state="translated">60 実行 {AdtAgent、ALG、Ati ホットキーのポーリング、AudioSrv、BITS、CcmExec、NFS、証明書サービス、DcomLaunch、Dhcp、dmserver、用のクライアント、Dnscache、ERSvc、イベント ログ、EventSystem FwcAgent、helpsvc、HidServ、IISADMIN、InoRPC、InoRT、InoTask、lanmanserver、lanmanworkstation、LmHosts、MDM、Netlogon、Netman、Nla、NtLmSsp、PlugPlay、PolicyAgent、ProtectedStorage、RasMan、RemoteRegistry、RpcSs、SamSs、スケジュール、seclogon、SENS、SharedAccess、ShellHWDetection、SMT PSVC、スプーラー srservice、SSDPSRV、stisvc、TapiSrv、TermService、テーマ、TrkWks、UMWdf、W32Time、W3SVC、WebClient、winmgmt、wscsvc、wuauserv、WZCSVC、zzInterix}</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve">
          <source>41 Stopped    {Alerter, AppMgmt, aspnet_state, ATI Smart, Browser, CiSvc, ClipSrv, clr_optimization_v2.0.50727_32, COMSysApp, CronService, dmadmin, FastUserSwitchingCompatibility, HTTPFilter, ImapiService, Mapsvc, Messenger, mnmsrvc, MSDTC, MSIServer, msvsmon80, NetDDE, NetDDEdsdm, NtmsSvc, NVSvc, ose, RasAuto, RDSessMgr, RemoteAccess, RpcLocator, SCardSvr, SwPrv, SysmonLog, TlntSvr, upnphost, UPS, VSS, WmdmPmSN, Wmi, WmiApSrv, xmlprov}</source>
          <target state="translated">41 Stopped {Alerter、AppMgmt、aspnet_state、ATI スマート、ブラウザー、CiSvc、ClipSrv、clr_optimization_v2.0.50727_32、COMSysApp CronService、dmadmin FastUserSwitchingCompatibility、HTTPFilter、ImapiService、Mapsvc、Messenger、mnmsrvc、MSDTC、MSIServer、msvsmon80、NetDDE、NetDDEdsdm、NtmsSvc、NVSvc、ose、RasAuto、RDSessMgr、リモート アクセス、RpcLocator、SCardSvr、SwPrv、SysmonLog、TlntSvr、upnphost、UPS、VSS、WmdmPmSN、Wmi、WmiApSrv、xmlprov}</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve">
          <source>$InformationPreference The $InformationPreference variable lets you set information stream preferences (specifically, informational messages that you have added to commands or scripts by adding the Write-Information cmdlet, and want displayed to users) for a Windows PowerShell session.</source>
          <target state="translated">ストリームの基本設定 (具体的には、情報メッセージ、情報の書き込みコマンドレットを追加することでコマンドまたはスクリプトに追加し、ユーザーに表示される) の情報を設定する $InformationPreference、$InformationPreference 変数により、Windows PowerShell セッションにします。</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve">
          <source>The value of the -InformationAction parameter, if used, overrides the current value of the $InformationPreference variable.</source>
          <target state="translated">-InformationAction パラメーターの値を使用する場合は、$InformationPreference 変数の現在の値を上書きします。</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve">
          <source>Valid values: Stop:               Stops a command or script at an occurrence of the Write-Information command.</source>
          <target state="translated">有効な値: 停止: コマンド プロンプトまたは情報の書き込みコマンドの発生したときにスクリプトを停止します。</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve">
          <source>Inquire:            Displays the informational message that you specify in a Write-Information command, then asks whether you want to continue.</source>
          <target state="translated">照会する: を情報の書き込みコマンドで指定した情報メッセージを表示し、続行するかどうかを確認します。</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve">
          <source>Continue:           Displays the informational message, and continues running.</source>
          <target state="translated">続行します。 情報メッセージを表示し、実行が継続します。</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve">
          <source>Suspend:            Automatically suspends a workflow job after a Write-Information command is carried out, to allow users to see the messages before continuing.</source>
          <target state="translated">続行する前に、メッセージが表示できるようにする情報の書き込みコマンドは実行が、後に、ワークフロー ジョブを中断に自動的に中断します。 します。</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve">
          <source>The workflow can be resumed at the user’s discretion.</source>
          <target state="translated">ユーザーの判断では、ワークフローを再開できます。</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve">
          <source>SilentlyContinue:   No effect.</source>
          <target state="translated">SilentlyContinue: 何も起こりません。</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve">
          <source>The informational messages are not (Default)             displayed, and the script continues without interruption.</source>
          <target state="translated">情報メッセージは、(既定値) が表示され、スクリプトは中断せずに続行することはありません。</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve">
          <source>$Log<bpt id="p1">*</bpt>Event The Log<ept id="p1">*</ept>Event preference variables determine which types of events are written to the Windows PowerShell event log in Event Viewer.</source>
          <target state="translated">$Log<bpt id="p1">*</bpt>イベント ログ<ept id="p1">*</ept>イベントの種類は、イベント ビューアーで Windows PowerShell イベント ログに書き込まれるイベントのユーザー設定変数を決定します。</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve">
          <source>By default, only engine and provider events are logged, but you can use the Log*Event preference variables to customize your log, such as logging events about commands.</source>
          <target state="translated">既定では、エンジンとプロバイダーのイベントのみがログ記録、ログを使用することが * コマンドに関するイベントの記録など、ログをカスタマイズするイベントのユーザー設定変数です。</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve">
          <source>The Log*Event preference variables are as follows:</source>
          <target state="translated">ログ * イベントのユーザー設定変数が次のようには。</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve">
          <source>$LogCommandHealthEvent: Logs errors and exceptions in command initialization and processing.</source>
          <target state="translated">$LogCommandHealthEvent: コマンドの初期化と処理のエラーと例外をログに記録します。</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve">
          <source>Default = $false (not logged).</source>
          <target state="translated">既定値 = $false (ログに記録されません)。</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve">
          <source>$LogCommandLifecycleEvent: Logs the starting and stopping of commands and command pipelines and security exceptions in command discovery.</source>
          <target state="translated">$LogCommandLifecycleEvent: コマンド検出の開始と停止のコマンドとコマンド パイプラインおよびセキュリティの例外をログに記録します。</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve">
          <source>Default = $false (not logged).</source>
          <target state="translated">既定値 = $false (ログに記録されません)。</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve">
          <source>$LogEngineHealthEvent: Logs errors and failures of sessions.</source>
          <target state="translated">$LogEngineHealthEvent: エラーおよびセッションのエラー ログに記録します。</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve">
          <source>Default = $true (logged).</source>
          <target state="translated">既定値 = $true (ログイン)。</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve">
          <source>$LogEngineLifecycleEvent: Logs the opening and closing of sessions.</source>
          <target state="translated">$LogEngineLifecycleEvent: タグとセッションの終了をログに記録します。</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve">
          <source>Default = $true (logged).</source>
          <target state="translated">既定値 = $true (ログイン)。</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve">
          <source>$LogProviderHealthEvent: Logs provider errors, such as read and write errors, lookup errors, and invocation errors.</source>
          <target state="translated">$LogProviderHealthEvent: ログ プロバイダーのエラーなど、読み書き可能なエラー、参照エラー、および呼び出しエラー。</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve">
          <source>Default = $true (logged).</source>
          <target state="translated">既定値 = $true (ログイン)。</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve">
          <source>$LogProviderLifecycleEvent: Logs adding and removing of Windows PowerShell providers.</source>
          <target state="translated">$LogProviderLifecycleEvent: 追加して、Windows PowerShell プロバイダーの削除をログに記録します。</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve">
          <source>Default = $true (logged).</source>
          <target state="translated">既定値 = $true (ログイン)。</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve">
          <source>(For information about Windows PowerShell providers, type: "get-help about_provider".</source>
          <target state="translated">(Windows PowerShell プロバイダーについては、入力:"get-help about_provider"です。</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve">
          <source>To enable a Log*Event, type the variable with a value of $true, for example:</source>
          <target state="translated">ログを有効にする * イベント、$true の値を含む変数を入力します。</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve">
          <source>$LogCommandLifeCycleEvent</source>
          <target state="translated">$LogCommandLifeCycleEvent</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve">
          <source>or -</source>
          <target state="translated">または、</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve">
          <source>$LogCommandLifeCycleEvent = $true</source>
          <target state="translated">$LogCommandLifeCycleEvent = $true</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve">
          <source>To disable an event type, type the variable with a value of $false, for example:</source>
          <target state="translated">イベントの種類を無効にするには、たとえば $false の値を含む変数を入力します。</target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve">
          <source>$LogCommandLifeCycleEvent = $false</source>
          <target state="translated">$LogCommandLifeCycleEvent = $false</target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve">
          <source>The events that you enable are effective only for the current Windows PowerShell console.</source>
          <target state="translated">有効にしたイベントは、現在の Windows PowerShell コンソールに対してのみ有効です。</target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve">
          <source>To apply the configuration to all consoles, save the variable settings in your Windows PowerShell profile.</source>
          <target state="translated">すべてのコンソールに、構成を適用するには、Windows PowerShell プロファイルに変数の設定を保存します。</target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve">
          <source>$MaximumAliasCount Determines how many aliases are permitted in a Windows PowerShell session.</source>
          <target state="translated">$MaximumAliasCount では、Windows PowerShell セッションでいくつのエイリアスが許可されているを決定します。</target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve">
          <source>The default value, 4096, should be sufficient for most uses, but you can adjust it to meet your needs.</source>
          <target state="translated">既定値は 4096 はほとんどの用途のための十分なはずですが、ニーズに合わせて調整できます。</target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve">
          <source>Valid values: 1024 - 32768 (Int32) Default: 4096</source>
          <target state="translated">有効な値: 1024 32768 (Int32) の既定値: 4096</target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve">
          <source>To count the aliases on your system, type:</source>
          <target state="translated">システム上のエイリアスをカウントするには、次のように入力します。</target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve">
          <source>(get-alias).count</source>
          <target state="translated">(get エイリアス) .count</target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve">
          <source>$MaximumDriveCount Determines how many Windows PowerShell drives are permitted in a given session.</source>
          <target state="translated">$MaximumDriveCount では、Windows PowerShell ドライブの数が特定のセッションで許可されているを決定します。</target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve">
          <source>This includes file system drives and data stores that are exposed by Windows PowerShell providers and appear as drives, such as the Alias: and HKLM: drives.</source>
          <target state="translated">これには、Windows PowerShell プロバイダーによって公開され、エイリアスなどのドライブとして表示されるファイル システム ドライブとデータ ストアが含まれます:、HKLM: ドライブです。</target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve">
          <source>Valid values: 1024 - 32768 (Int32) Default: 4096</source>
          <target state="translated">有効な値: 1024 32768 (Int32) の既定値: 4096</target>       </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve">
          <source>To count the aliases on your system, type:</source>
          <target state="translated">システム上のエイリアスをカウントするには、次のように入力します。</target>       </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve">
          <source>(get-psdrive).count</source>
          <target state="translated">(get psdrive) .count</target>       </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve">
          <source>$MaximumErrorCount Determines how many errors are saved in the error history for the session.</source>
          <target state="translated">$MaximumErrorCount 決定エラーの数、保存エラー履歴にセッションされます。</target>       </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve">
          <source>Valid values: 256 - 32768 (Int32) Default: 256</source>
          <target state="translated">有効な値: 256 32768 (Int32) の既定値: 256</target>       </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve">
          <source>Objects that represent each retained error are stored in the $Error automatic variable.</source>
          <target state="translated">保持されている各エラーを表すオブジェクトは、$Error 自動変数に格納されます。</target>       </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve">
          <source>This variable contains an array of error record objects, one for each error.</source>
          <target state="translated">この変数には、各エラーのいずれかのエラー レコード オブジェクトの配列が含まれています。</target>       </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve">
          <source>The most recent error is the first object in the array ($Error[0]).</source>
          <target state="translated">最新のエラー ($Error[0]) 配列の最初のオブジェクトはします。</target>       </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve">
          <source>To count the errors on your system, use the Count property of the $Error array.</source>
          <target state="translated">システムでエラーをカウントするには、$Error 配列の Count プロパティを使用します。</target>       </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve">
          <source>Type:</source>
          <target state="translated">次のように入力します。</target>       </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve">
          <source>$Error.count</source>
          <target state="translated">$Error.count</target>       </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve">
          <source>To display a specific error, use array notation to display the error.</source>
          <target state="translated">特定のエラーを表示するのにには、エラーを表示するのに配列表記を使用します。</target>       </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve">
          <source>For example, to see the most recent error, type:</source>
          <target state="translated">たとえば、最新のエラーを表示するには、次のように入力します。</target>       </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve">
          <source>$Error[0]</source>
          <target state="translated">$Error [0]</target>       </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve">
          <source>To display the oldest retained error, type:</source>
          <target state="translated">最も古い保持されているエラーを表示するには、次のように入力します。</target>       </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve">
          <source>$Error[($Error.Count -1]</source>
          <target state="translated">$Error [($Error.Count-1]</target>       </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve">
          <source>To display the properties of the ErrorRecord object, type:</source>
          <target state="translated">ErrorRecord オブジェクトのプロパティを表示するには、次のように入力します。</target>       </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve">
          <source>$Error[0] | format-list -property * -force</source>
          <target state="translated">$Error [0] |format-list の-プロパティ *-強制実行</target>       </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve">
          <source>In this command, the Force parameter overrides the special formatting of ErrorRecord objects and reverts to the conventional format.</source>
          <target state="translated">このコマンドでは、Force パラメーターは、ErrorRecord オブジェクトの特殊な書式設定をオーバーライドし、標準的な形式に戻します。</target>       </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve">
          <source>To delete all errors from the error history, use the Clear method of the error array.</source>
          <target state="translated">すべてのエラーをエラーの履歴から削除するには、エラー配列の Clear メソッドを使用します。</target>       </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve">
          <source>PS&gt; $Error.count 17 PS&gt; $Error.clear() PS&gt; PS&gt; $Error.count 0</source>
          <target state="translated">PS &gt; $Error.count 17 PS &gt; $Error.clear() PS &gt; PS &gt; $Error.count 0</target>       </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve">
          <source>To find all properties and methods of an error array, use the Get-Member cmdlet with its InputObject parameter.</source>
          <target state="translated">すべてのプロパティとをエラー配列のメソッドを検索するには、その InputObject パラメーターを持つ、Get-member コマンドレットを使用します。</target>       </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve">
          <source>When you pipe a collection of objects to Get-Member, Get-Member displays the properties and methods of the objects in the collection.</source>
          <target state="translated">Get-member にオブジェクトのコレクションをパイプすると、Get-member はコレクション内にプロパティと、オブジェクトのメソッドを表示します。</target>       </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve">
          <source>When you use the InputObject parameter of Get-Member, Get-Member displays the properties and methods of the collection.</source>
          <target state="translated">Get-member の InputObject パラメーターを使用すると、Get-member は、プロパティとメソッドのコレクションを表示します。</target>       </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve">
          <source>$MaximumFunctionCount Determines how many functions are permitted in a given session.</source>
          <target state="translated">$MaximumFunctionCount では、特定のセッションにどれだけの機能は使用を決定します。</target>       </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve">
          <source>Valid values: 1024 - 32768 (Int32) Default: 4096</source>
          <target state="translated">有効な値: 1024 32768 (Int32) の既定値: 4096</target>       </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve">
          <source>To see the functions in your session, use the Windows PowerShell Function: drive that is exposed by the Windows PowerShell Function provider.</source>
          <target state="translated">セッションで関数を参照するには、Windows PowerShell 関数を使用します。 Windows PowerShell Function プロバイダーによって公開されているドライブです。</target>       </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve">
          <source>(For more information about the Function provider, type "get-help function").</source>
          <target state="translated">(関数プロバイダーに関する詳細については、「get-help 関数」を入力します。)</target>       </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve">
          <source>To list the functions in the current session, type:</source>
          <target state="translated">現在のセッションで関数の一覧を次のように入力します。</target>       </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve">
          <source>get-childitem function:</source>
          <target state="translated">get-childitem 関数:</target>       </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve">
          <source>To count the functions in the current session, type:</source>
          <target state="translated">現在のセッションで数える関数には、次のように入力します。</target>       </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve">
          <source>(get-childitem function:).count</source>
          <target state="translated">(、get-childitem 関数:) .count</target>       </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve">
          <source>$MaximumHistoryCount Determines how many commands are saved in the command history for the current session.</source>
          <target state="translated">$MaximumHistoryCount 決定コマンドの数、保存コマンド履歴に、現在のセッションされます。</target>       </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve">
          <source>Valid values: 1 - 32768 (Int32) Default: 4096</source>
          <target state="translated">有効な値: 1 32768 (Int32) の既定値: 4096</target>       </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve">
          <source>To determine the number of commands current saved in the command history, type:</source>
          <target state="translated">コマンド履歴に保存されているコマンドの現在の数を調べるには、次のように入力します。</target>       </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve">
          <source>(get-history).count</source>
          <target state="translated">(履歴の取得) .count</target>       </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve">
          <source>To see the command saved in your session history, use the Get-History cmdlet.</source>
          <target state="translated">セッションの履歴に保存されているコマンドを表示するには、Get-history コマンドレットを使用します。</target>       </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve">
          <source>For more information, see about_History (http://go.microsoft.com/fwlink/?LinkID=113233).</source>
          <target state="translated">詳細については、about_History (http://go.microsoft.com/fwlink/?LinkID=113233) を参照してください。</target>       </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve">
          <source>NOTE: In Windows PowerShell 2.0, the default value of the $MaximumHistoryCount variable is 64.</source>
          <target state="translated">注: Windows PowerShell 2.0 で $MaximumHistoryCount 変数の既定値には 64 です。</target>       </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve">
          <source>$MaximumVariableCount Determines how many variables are permitted in a given session, including automatic variables, preference variables, and the variables that you create in commands and scripts.</source>
          <target state="translated">変数の数は $MaximumVariableCount 決定自動変数、ユーザー設定変数のコマンドやスクリプトを作成する変数など、特定のセッションで許可されます。</target>       </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve">
          <source>Valid values: 1024 - 32768 (Int32) Default: 4096</source>
          <target state="translated">有効な値: 1024 32768 (Int32) の既定値: 4096</target>       </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve">
          <source>To see the variables in your session, use the Get-Variable cmdlet and the features of the Windows PowerShell Variable: drive and the Windows PowerShell Variable provider.</source>
          <target state="translated">Get-variable コマンドレットと、Windows PowerShell 変数の機能を使用して、変数をセッションに表示する: ドライブと、Windows PowerShell Variable プロバイダー。</target>       </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve">
          <source>For information about the Variable provider, type "get-help variable".</source>
          <target state="translated">Variable プロバイダーについては、「get-help 変数」を入力します。</target>       </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve">
          <source>To find the current number of variables on the system, type:</source>
          <target state="translated">システムの変数の現在の数を検索するには、次のように入力します。</target>       </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve">
          <source>(get-variable).count</source>
          <target state="translated">(get 変数) .count</target>       </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve">
          <source>$OFS Output Field Separator.</source>
          <target state="translated">$OFS 出力フィールドの区切り記号。</target>       </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve">
          <source>Specifies the character that separates the elements of an array when the array is converted to a string.</source>
          <target state="translated">文字列に変換されると、配列、配列の要素を区切る文字を指定します。</target>       </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve">
          <source>Valid values: Any string.</source>
          <target state="translated">有効な値: 任意の文字列です。</target>       </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve">
          <source>Default: Space</source>
          <target state="translated">既定値: 領域</target>       </trans-unit>
        <trans-unit id="412" translate="yes" xml:space="preserve">
          <source>By default, the $OFS variable does not exist and the output file separator is a space, but you can add this variable and set it to any string.</source>
          <target state="translated">既定では、$OFS 変数が存在しないと、出力ファイルの区切り記号はスペース、この変数を追加し、任意の文字列に設定します。</target>       </trans-unit>
        <trans-unit id="413" translate="yes" xml:space="preserve">
          <source>EXAMPLES</source>
          <target state="translated">例</target>       </trans-unit>
        <trans-unit id="414" translate="yes" xml:space="preserve">
          <source>This example shows that a space is used to separate the values when an array is converted to a string.</source>
          <target state="translated">この例では、スペースを使用して、配列は、文字列に変換するときに、値を分割することを示します。</target>       </trans-unit>
        <trans-unit id="415" translate="yes" xml:space="preserve">
          <source>In this case, an array of integers is stored in a variable and then the variable is cast as a string.</source>
          <target state="translated">この場合は、整数の配列が変数に格納し、変数を文字列としてキャストし、します。</target>       </trans-unit>
        <trans-unit id="416" translate="yes" xml:space="preserve">
          <source>PS&gt; $array = 1,2,3                 # Store an array of integers.</source>
          <target state="translated">PS &gt; $array = 1,2,3 # ストア整数の配列。</target>       </trans-unit>
        <trans-unit id="417" translate="yes" xml:space="preserve">
          <source>PS&gt; [string]$array                 # Cast the array to a string.</source>
          <target state="translated">PS &gt; [string] $array # は、文字列の配列をキャストします。</target>       </trans-unit>
        <trans-unit id="418" translate="yes" xml:space="preserve">
          <source>1 2 3                              # Spaces separate the elements</source>
          <target state="translated">1 2 3 # スペースは、要素を区切る</target>       </trans-unit>
        <trans-unit id="419" translate="yes" xml:space="preserve">
          <source>To change the separator, add the $OFS variable by assigning a value to it.</source>
          <target state="translated">区切り記号を変更するには、値を代入によって $OFS 変数を追加します。</target>       </trans-unit>
        <trans-unit id="420" translate="yes" xml:space="preserve">
          <source>To work correctly, the variable must be named $OFS.</source>
          <target state="translated">正常に機能するには、変数を $OFS を指定する必要があります。</target>       </trans-unit>
        <trans-unit id="421" translate="yes" xml:space="preserve">
          <source>PS&gt; $OFS = "+"                     # Create $OFS and assign a "+"</source>
          <target state="translated">PS &gt; $OFS =「+」# $OFS を作成し、割り当てる、「+」</target>       </trans-unit>
        <trans-unit id="422" translate="yes" xml:space="preserve">
          <source>PS&gt; [string]$array                 # Repeat the command 1+2+3                              # Plus signs separate the elements</source>
          <target state="translated">PS &gt; [string] $array # コマンドを繰り返し実行 1 + 2 + 3 # プラス記号は、要素を区切る</target>       </trans-unit>
        <trans-unit id="423" translate="yes" xml:space="preserve">
          <source>To restore the default behavior, you can assign a space (" ") to the value of $OFS or delete the variable.</source>
          <target state="translated">既定の動作を復元するには、スペースを割り当てることができます ("") $OFS または削除、変数の値にします。</target>       </trans-unit>
        <trans-unit id="424" translate="yes" xml:space="preserve">
          <source>This command deletes the variable and then verifies that the separator is a space.</source>
          <target state="translated">このコマンドでは、変数を削除し、区切り記号が空白であることを確認します。</target>       </trans-unit>
        <trans-unit id="425" translate="yes" xml:space="preserve">
          <source>PS&gt; Remove-Variable OFS            # Delete $OFS PS&gt;</source>
          <target state="translated">PS &gt; Remove-variable OFS # Delete $OFS PS &gt;</target>       </trans-unit>
        <trans-unit id="426" translate="yes" xml:space="preserve">
          <source>PS&gt; [string]$array                 # Repeat the command 1 2 3                              # Spaces separate the elements</source>
          <target state="translated">PS &gt; [string] $array # 繰り返しますコマンド 1 2 3 # スペースの個別の要素</target>       </trans-unit>
        <trans-unit id="427" translate="yes" xml:space="preserve">
          <source>$OutputEncoding Determines the character encoding method that Windows PowerShell uses when it sends text to other applications.</source>
          <target state="translated">$OutputEncoding では、文字エンコーディングの Windows PowerShell が他のアプリケーションにテキストを送信するときに使用する方法を決定します。</target>       </trans-unit>
        <trans-unit id="428" translate="yes" xml:space="preserve">
          <source>For example, if an application returns Unicode strings to Windows PowerShell, you might need to change the value to UnicodeEncoding to send the characters correctly.</source>
          <target state="translated">たとえば、アプリケーションでは、Windows PowerShell に Unicode 文字列が返された場合は、文字を正しく送信する UnicodeEncoding に値を変更する必要があります。</target>       </trans-unit>
        <trans-unit id="429" translate="yes" xml:space="preserve">
          <source>Valid values: Objects derived from an Encoding class, such as ASCIIEncoding, SBCSCodePageEncoding, UTF7Encoding, UTF8Encoding, UTF32Encoding, and UnicodeEncoding.</source>
          <target state="translated">有効な値: ASCIIEncoding、SBCSCodePageEncoding、UTF7Encoding、UTF8Encoding、UTF32Encoding、UnicodeEncoding など、Encoding クラスから派生したオブジェクト。</target>       </trans-unit>
        <trans-unit id="430" translate="yes" xml:space="preserve">
          <source>Default: ASCIIEncoding object (System.Text.ASCIIEncoding)</source>
          <target state="translated">既定値: ASCIIEncoding オブジェクト (System.Text.ASCIIEncoding)</target>       </trans-unit>
        <trans-unit id="431" translate="yes" xml:space="preserve">
          <source>EXAMPLES</source>
          <target state="translated">例</target>       </trans-unit>
        <trans-unit id="432" translate="yes" xml:space="preserve">
          <source>This example shows how to make the FINDSTR command in Windows work in Windows PowerShell on a computer that is localized for a language that uses Unicode characters, such as Chinese.</source>
          <target state="translated">この例では、Windows の FINDSTR コマンドを中国語などの Unicode 文字を使用する言語にローカライズされているコンピューターで Windows PowerShell で動作する方法を示します。</target>       </trans-unit>
        <trans-unit id="433" translate="yes" xml:space="preserve">
          <source>The first command finds the value of $OutputEncoding.</source>
          <target state="translated">最初のコマンドは、$OutputEncoding の値を検索します。</target>       </trans-unit>
        <trans-unit id="434" translate="yes" xml:space="preserve">
          <source>Because the value is an encoding object, display only its EncodingName property.</source>
          <target state="translated">値は、エンコーディング オブジェクトであるため、EncodingName プロパティのみを表示します。</target>       </trans-unit>
        <trans-unit id="435" translate="yes" xml:space="preserve">
          <source>PS&gt; $OutputEncoding.EncodingName  # Find the current value US-ASCII</source>
          <target state="translated">PS &gt; $OutputEncoding.EncodingName # US-ASCII の現在の値を検索します。</target>       </trans-unit>
        <trans-unit id="436" translate="yes" xml:space="preserve">
          <source>In this example, a FINDSTR command is used to search for two Chinese characters that are present in the Test.txt file.</source>
          <target state="translated">この例では FINDSTR コマンドは、Test.txt ファイルに存在する 2 つの中国語の文字を検索するために使用します。</target>       </trans-unit>
        <trans-unit id="437" translate="yes" xml:space="preserve">
          <source>When this FINDSTR command is run in the Windows Command Prompt (Cmd.exe), FINDSTR finds the characters in the text file.</source>
          <target state="translated">この FINDSTR コマンドで、Windows コマンド プロンプト (Cmd.exe) の実行時 FINDSTR はテキスト ファイル内の文字を検索します。</target>       </trans-unit>
        <trans-unit id="438" translate="yes" xml:space="preserve">
          <source>However, when you run the same FINDSTR command in Windows PowerShell, the characters are not found because the Windows PowerShell sends them to FINDSTR in ASCII text, instead of in Unicode text.</source>
          <target state="translated">ただし、Windows PowerShell で同じ FINDSTR コマンドを実行すると、文字が見つからない、Windows PowerShell に送って FINDSTR ASCII テキスト形式での代わりに Unicode テキストのためです。</target>       </trans-unit>
        <trans-unit id="439" translate="yes" xml:space="preserve">
          <source>PS&gt; findstr &lt;Unicode-characters&gt;  # Use findstr to search.</source>
          <target state="translated">PS &gt; findstr &lt; Unicode 文字 &gt; # 使用 findstr を検索します。</target>       </trans-unit>
        <trans-unit id="440" translate="yes" xml:space="preserve">
          <source>PS&gt;                               # None found.</source>
          <target state="translated">PS &gt; # を何も検出します。</target>       </trans-unit>
        <trans-unit id="441" translate="yes" xml:space="preserve">
          <source>To make the command work in Windows PowerShell, set the value of $OutputEncoding to the value of the OutputEncoding property of the console, which is based on the locale selected for Windows.</source>
          <target state="translated">このコマンドを Windows PowerShell で動作するためには、選択した Windows のロケールに基づくと、コンソールの OutputEncoding プロパティの値に $OutputEncoding の値を設定します。</target>       </trans-unit>
        <trans-unit id="442" translate="yes" xml:space="preserve">
          <source>Because OutputEncoding is a static property of the console, use double-colons (::) in the command.</source>
          <target state="translated">OutputEncoding は、コンソールの静的プロパティであるため、コマンドでダブル コロン (:) を使用します。</target>       </trans-unit>
        <trans-unit id="443" translate="yes" xml:space="preserve">
          <source>PS&gt; $OutputEncoding = [console]::outputencoding PS&gt;                               # Set the value equal to the OutputEncoding property of the console.</source>
          <target state="translated">PS &gt; $OutputEncoding = [コンソール]:: outputencoding PS &gt; # がコンソールの OutputEncoding プロパティに等しい値を設定します。</target>       </trans-unit>
        <trans-unit id="444" translate="yes" xml:space="preserve">
          <source>PS&gt; $OutputEncoding.EncodingName OEM United States Find the resulting value.</source>
          <target state="translated">PS &gt; $OutputEncoding.EncodingName OEM 米国が結果の値を検索します。</target>       </trans-unit>
        <trans-unit id="445" translate="yes" xml:space="preserve">
          <source>As a result of this change, the FINDSTR command finds the characters.</source>
          <target state="translated">この変更の結果は、FINDSTR コマンドは、文字を検索します。</target>       </trans-unit>
        <trans-unit id="446" translate="yes" xml:space="preserve">
          <source>PS&gt; findstr &lt;Unicode-characters&gt; test.txt:         &lt;Unicode-characters&gt;</source>
          <target state="translated">PS &gt; test.txt の findstr &lt; Unicode 文字 &gt;: &lt; Unicode 文字 &gt;</target>       </trans-unit>
        <trans-unit id="447" translate="yes" xml:space="preserve">
          <source>Use findstr to search.</source>
          <target state="translated">Findstr を使用すると、検索できます。</target>       </trans-unit>
        <trans-unit id="448" translate="yes" xml:space="preserve">
          <source>It find the characters in the text file.</source>
          <target state="translated">テキスト ファイルに文字を検索します。</target>       </trans-unit>
        <trans-unit id="449" translate="yes" xml:space="preserve">
          <source>$ProgressPreference Determines how Windows PowerShell responds to progress updates generated by a script, cmdlet or provider, such as the progress bars generated by the Write-Progress cmdlet.</source>
          <target state="translated">$ProgressPreference では、Windows PowerShell スクリプト、コマンドレットまたは Write-progress コマンドレットで生成される進行状況バーなどのプロバイダーによって生成される進行状況の更新の応答方法を決定します。</target>       </trans-unit>
        <trans-unit id="450" translate="yes" xml:space="preserve">
          <source>The Write-Progress cmdlet creates progress bars that depict the status of a command.</source>
          <target state="translated">Write-progress コマンドレットでは、コマンドのステータスを表す進行状況バーを作成します。</target>       </trans-unit>
        <trans-unit id="451" translate="yes" xml:space="preserve">
          <source>Valid values: Stop:               Does not display the progress bar.</source>
          <target state="translated">有効な値: 停止: 進行状況バーは表示されません。</target>       </trans-unit>
        <trans-unit id="452" translate="yes" xml:space="preserve">
          <source>Instead, it displays an error message and stops executing.</source>
          <target state="translated">代わりに、エラー メッセージが表示され、実行を停止します。</target>       </trans-unit>
        <trans-unit id="453" translate="yes" xml:space="preserve">
          <source>Inquire:            Does not display the progress bar.</source>
          <target state="translated">照会する: 進行状況バーは表示されません。</target>       </trans-unit>
        <trans-unit id="454" translate="yes" xml:space="preserve">
          <source>Prompts for permission to continue.</source>
          <target state="translated">続行する許可を要求します。</target>       </trans-unit>
        <trans-unit id="455" translate="yes" xml:space="preserve">
          <source>If you reply with Y or A, it displays the progress bar.</source>
          <target state="translated">Y または A で返信する場合は、進行状況バーが表示されます。</target>       </trans-unit>
        <trans-unit id="456" translate="yes" xml:space="preserve">
          <source>Continue:           Displays the progress bar and continues with (Default)           execution.</source>
          <target state="translated">続行します。 進行状況バーを表示し、(既定値) の実行を続行します。</target>       </trans-unit>
        <trans-unit id="457" translate="yes" xml:space="preserve">
          <source>SilentlyContinue:   Executes the command, but does not display the progress bar.</source>
          <target state="translated">SilentlyContinue: コマンドを実行するが、進行状況バーは表示されません。</target>       </trans-unit>
        <trans-unit id="458" translate="yes" xml:space="preserve">
          <source>$PSEmailServer Specifies the default e-mail server that is used to send e-mail messages.</source>
          <target state="translated">$PSEmailServer 電子メール メッセージの送信に使用される既定の電子メール サーバーを指定します。</target>       </trans-unit>
        <trans-unit id="459" translate="yes" xml:space="preserve">
          <source>This preference variable is used by cmdlets that send e-mail, such as the Send-MailMessage cmdlet.</source>
          <target state="translated">このユーザー設定変数は、Send-mailmessage コマンドレットなどの電子メールを送信するコマンドレットによって使用されます。</target>       </trans-unit>
        <trans-unit id="460" translate="yes" xml:space="preserve">
          <source>$PSDefaultParameterValues Specifies default values for the parameters of cmdlets and advanced functions.</source>
          <target state="translated">$PSDefaultParameterValues を指定コマンドレットおよび高度な関数のパラメーターの値を既定値。</target>       </trans-unit>
        <trans-unit id="461" translate="yes" xml:space="preserve">
          <source>The value of $PSDefaultParameterValues is a hash table where the key consists of the cmdlet name and parameter name separated by a colon (:) and the value is a custom default value that you specify.</source>
          <target state="translated">$PSDefaultParameterValues の値は、コマンドレット名とパラメーターの名前のキーで構成されているハッシュ テーブルがコロン (:) で区切られ、値は、指定したカスタムの既定値です。</target>       </trans-unit>
        <trans-unit id="462" translate="yes" xml:space="preserve">
          <source>This variable was introduced in Windows PowerShell 3.0</source>
          <target state="translated">この変数は、Windows PowerShell 3.0 で導入されました</target>       </trans-unit>
        <trans-unit id="463" translate="yes" xml:space="preserve">
          <source>For more information about this preference variable, see about_Parameters_Default_Values.</source>
          <target state="translated">このユーザー設定変数の詳細については、about_Parameters_Default_Values を参照してください。</target>       </trans-unit>
        <trans-unit id="464" translate="yes" xml:space="preserve">
          <source>$PSModuleAutoloadingPreference Enables and disables automatic importing of modules in the session.</source>
          <target state="translated">$PSModuleAutoloadingPreference が有効にして自動セッションにモジュールのインポートを無効になります。</target>       </trans-unit>
        <trans-unit id="465" translate="yes" xml:space="preserve">
          <source>"All" is the default.</source>
          <target state="translated">"All" は既定値です。</target>       </trans-unit>
        <trans-unit id="466" translate="yes" xml:space="preserve">
          <source>Regardless of the value of this variable, you can use the Import-Module cmdlet to import a module.</source>
          <target state="translated">この変数の値に関係なく、Import-module コマンドレットを使用して、モジュールをインポートすることができます。</target>       </trans-unit>
        <trans-unit id="467" translate="yes" xml:space="preserve">
          <source>Valid values are:</source>
          <target state="translated">有効な値は、</target>       </trans-unit>
        <trans-unit id="468" translate="yes" xml:space="preserve">
          <source>All    Modules are imported automatically on first-use.</source>
          <target state="translated">すべてのモジュールは、最初の使用に自動的にインポートされます。</target>       </trans-unit>
        <trans-unit id="469" translate="yes" xml:space="preserve">
          <source>To import a module, get (Get-Command) or use any command in the module.</source>
          <target state="translated">モジュールをインポートするには、(Get-command) を取得またはモジュール内のいずれかのコマンドを使用します。</target>       </trans-unit>
        <trans-unit id="470" translate="yes" xml:space="preserve">
          <source>ModuleQualified Modules are imported automatically only when a user uses the module-qualified name of a command in the module.</source>
          <target state="translated">ModuleQualified モジュールは、ユーザーは、モジュールのコマンドのモジュールで修飾された名前を使用する場合のみ自動的にインポートされます。</target>       </trans-unit>
        <trans-unit id="471" translate="yes" xml:space="preserve">
          <source>For example, if the user types "MyModule\MyCommand", Windows PowerShell imports the MyModule module.</source>
          <target state="translated">たとえば、"MyModule\MyCommand"を入力すると、Windows PowerShell は MyModule モジュールをインポートします。</target>       </trans-unit>
        <trans-unit id="472" translate="yes" xml:space="preserve">
          <source>None   Automatic importing of modules is disabled in the session.</source>
          <target state="translated">[なし] モジュールの自動インポートにより、セッションは無効です。</target>       </trans-unit>
        <trans-unit id="473" translate="yes" xml:space="preserve">
          <source>To import a module, use the Import-Module cmdlet.</source>
          <target state="translated">モジュールをインポートするには、Import-module コマンドレットを使用します。</target>       </trans-unit>
        <trans-unit id="474" translate="yes" xml:space="preserve">
          <source>For more information about automatic importing of modules, see about_Modules (http://go.microsoft.com/fwlink/?LinkID=144311).</source>
          <target state="translated">モジュールの自動インポートの詳細については、about_Modules (http://go.microsoft.com/fwlink/?LinkID=144311) を参照してください。</target>       </trans-unit>
        <trans-unit id="475" translate="yes" xml:space="preserve">
          <source>$PSSessionApplicationName Specifies the default application name for a remote command that uses WS-Management technology.</source>
          <target state="translated">$PSSessionApplicationName Ws-management テクノロジを使用するリモート コマンドの既定のアプリケーション名を指定します。</target>       </trans-unit>
        <trans-unit id="476" translate="yes" xml:space="preserve">
          <source>The system default application name is WSMAN, but you can use this preference variable to change the default.</source>
          <target state="translated">システム既定のアプリケーション名は WSMAN、ですが、このユーザー設定変数を使用するには、既定値を変更します。</target>       </trans-unit>
        <trans-unit id="477" translate="yes" xml:space="preserve">
          <source>The application name is the last node in a connection URI.</source>
          <target state="translated">アプリケーション名は、接続 URI の最後のノードです。</target>       </trans-unit>
        <trans-unit id="478" translate="yes" xml:space="preserve">
          <source>For example, the application name in the following sample URI is WSMAN.</source>
          <target state="translated">たとえば、次の URI の例では、アプリケーション名には WSMAN です。</target>       </trans-unit>
        <trans-unit id="479" translate="yes" xml:space="preserve">
          <source>http://Server01:8080/WSMAN</source>
          <target state="translated">http://Server01:8080/WSMAN</target>       </trans-unit>
        <trans-unit id="480" translate="yes" xml:space="preserve">
          <source>The default application name is used when the remote command does not specify a connection URI or an application name.</source>
          <target state="translated">既定のアプリケーション名は、リモートのコマンドは、接続 URI またはアプリケーション名を指定していないときに使用されます。</target>       </trans-unit>
        <trans-unit id="481" translate="yes" xml:space="preserve">
          <source>The WinRM service uses the application name to select a listener to service the connection request.</source>
          <target state="translated">WinRM サービスは、アプリケーション名を使用して、接続要求を処理するリスナーを選択します。</target>       </trans-unit>
        <trans-unit id="482" translate="yes" xml:space="preserve">
          <source>The value of this parameter should match the value of the URLPrefix property of a listener on the remote computer.</source>
          <target state="translated">このパラメーターの値は、リモート コンピューター上のリスナーの URLPrefix プロパティの値に一致している必要があります。</target>       </trans-unit>
        <trans-unit id="483" translate="yes" xml:space="preserve">
          <source>To override the system default and the value of this variable, and select a different application name for a particular session, use the ConnectionURI or ApplicationName parameters of the New-PSSession, Enter-PSSession or Invoke-Command cmdlets.</source>
          <target state="translated">システムの既定値と、この変数の値をオーバーライドし、特定のセッションの別のアプリケーション名を選択するには、New-pssession、Enter-pssession、または Invoke-command コマンドレットの ConnectionURI または ApplicationName パラメーターを使用します。</target>       </trans-unit>
        <trans-unit id="484" translate="yes" xml:space="preserve">
          <source>This preference variable is set on the local computer, but it specifies a listener on the remote computer.</source>
          <target state="translated">このユーザー設定変数がローカル コンピューターの設定が、リモート コンピューター上のリスナーを指定します。</target>       </trans-unit>
        <trans-unit id="485" translate="yes" xml:space="preserve">
          <source>If the application name that you specify does not exist on the remote computer, the command to establish the session fails.</source>
          <target state="translated">指定したアプリケーション名がリモート コンピューター上にない場合、セッションを確立するためのコマンドは失敗します。</target>       </trans-unit>
        <trans-unit id="486" translate="yes" xml:space="preserve">
          <source>$PSSessionConfigurationName Specifies the default session configuration that is used for PSSessions created in the current session.</source>
          <target state="translated">$PSSessionConfigurationName 指定 Pssession に使用される既定のセッション構成は、現在のセッションで作成されます。</target>       </trans-unit>
        <trans-unit id="487" translate="yes" xml:space="preserve">
          <source>This preference variable is set on the local computer, but it specifies a session configuration that is located on the remote computer.</source>
          <target state="translated">このユーザー設定変数がローカル コンピューターの設定が、リモート コンピューターに配置されているセッション構成を指定します。</target>       </trans-unit>
        <trans-unit id="488" translate="yes" xml:space="preserve">
          <source>The value of the $PSSessionConfigurationName variable is a fully qualified resource URI.</source>
          <target state="translated">$PSSessionConfigurationName 変数の値は、完全修飾リソース URI です。</target>       </trans-unit>
        <trans-unit id="489" translate="yes" xml:space="preserve">
          <source>The default value:</source>
          <target state="translated">既定値:</target>       </trans-unit>
        <trans-unit id="490" translate="yes" xml:space="preserve">
          <source>http://schemas.microsoft.com/PowerShell/microsoft.PowerShell</source>
          <target state="translated">http://schemas.microsoft.com/PowerShell/microsoft.PowerShell</target>       </trans-unit>
        <trans-unit id="491" translate="yes" xml:space="preserve">
          <source>indicates the Microsoft.PowerShell session configuration on the remote computer.</source>
          <target state="translated">リモート コンピューター上の Microsoft.PowerShell セッション構成を示します。</target>       </trans-unit>
        <trans-unit id="492" translate="yes" xml:space="preserve">
          <source>If you specify only a configuration name, the following schema URI is prepended:</source>
          <target state="translated">構成名のみを指定する次のスキーマ URI が先頭に追加されます。</target>       </trans-unit>
        <trans-unit id="493" translate="yes" xml:space="preserve">
          <source>http://schemas.microsoft.com/PowerShell/</source>
          <target state="translated">http://schemas.microsoft.com/PowerShell/</target>       </trans-unit>
        <trans-unit id="494" translate="yes" xml:space="preserve">
          <source>You can override the default and select a different session configuration for a particular session by using the ConfigurationName parameter of the New-PSSession, Enter-PSSession or Invoke-Command cmdlets.</source>
          <target state="translated">既定値をオーバーライドし、New-pssession、Enter-pssession、または Invoke-command コマンドレットの ConfigurationName パラメーターを使用して、特定のセッションの別のセッション構成を選択できます。</target>       </trans-unit>
        <trans-unit id="495" translate="yes" xml:space="preserve">
          <source>You can change the value of this variable at any time.</source>
          <target state="translated">この変数の値は、いつでも変更できます。</target>       </trans-unit>
        <trans-unit id="496" translate="yes" xml:space="preserve">
          <source>When you do, remember that the session configuration that you select must exist on the remote computer.</source>
          <target state="translated">操作を実行すると、選択したセッション構成の存在しない限り、リモート コンピューター上に注意してください。</target>       </trans-unit>
        <trans-unit id="497" translate="yes" xml:space="preserve">
          <source>If it does not, the command to create a session that uses the session configuration fails.</source>
          <target state="translated">そうでない場合は、セッション構成を使用するセッションを作成するコマンドが失敗します。</target>       </trans-unit>
        <trans-unit id="498" translate="yes" xml:space="preserve">
          <source>This preference variable does not determine which local session configurations are used when remote users create a session that connects to this computer.</source>
          <target state="translated">このユーザー設定変数は、どのローカル セッション構成は、リモート ユーザーがこのコンピューターに接続するセッションを作成するときに使用を特定できません。</target>       </trans-unit>
        <trans-unit id="499" translate="yes" xml:space="preserve">
          <source>However, you can use the permissions for the local session configurations to determine which users may use them.</source>
          <target state="translated">ただし、ローカル セッション構成のアクセス許可を使用すると、どのユーザーが使用を決定します。</target>       </trans-unit>
        <trans-unit id="500" translate="yes" xml:space="preserve">
          <source>$PSSessionOption Establishes the default values for advanced user options in a remote session.</source>
          <target state="translated">$PSSessionOption 設定の既定値の高度なユーザー オプション リモート セッションでします。</target>       </trans-unit>
        <trans-unit id="501" translate="yes" xml:space="preserve">
          <source>These option preferences override the system default values for session options.</source>
          <target state="translated">これらのオプション設定では、セッション オプションのシステムの既定値をオーバーライドします。</target>       </trans-unit>
        <trans-unit id="502" translate="yes" xml:space="preserve">
          <source>The $PSSessionOption variable contains a PSSessionOption object (System.Management.Automation.Remoting.PSSessionObject).</source>
          <target state="translated">$PSSessionOption 変数には、PSSessionOption オブジェクト (System.Management.Automation.Remoting.PSSessionObject) が含まれています。</target>       </trans-unit>
        <trans-unit id="503" translate="yes" xml:space="preserve">
          <source>Each property of the object represents a session option.</source>
          <target state="translated">オブジェクトの各プロパティは、セッション オプションを表します。</target>       </trans-unit>
        <trans-unit id="504" translate="yes" xml:space="preserve">
          <source>For example, the NoCompression property turns of data compression during the session.</source>
          <target state="translated">たとえば、セッション中にデータ圧縮の NoCompression プロパティがオンにします。</target>       </trans-unit>
        <trans-unit id="505" translate="yes" xml:space="preserve">
          <source>By default, the $PSSessionOption variable contains a PSSessionOption object with the default values for all options, as shown below.</source>
          <target state="translated">既定では、$PSSessionOption 変数には、次のようにすべてのオプションの既定値を使用して、PSSessionOption オブジェクトが含まれます。</target>       </trans-unit>
        <trans-unit id="506" translate="yes" xml:space="preserve">
          <source>MaximumConnectionRedirectionCount : 5 NoCompression                     : False NoMachineProfile                  : False ProxyAccessType                   : None ProxyAuthentication               : Negotiate ProxyCredential                   : SkipCACheck                       : False SkipCNCheck                       : False SkipRevocationCheck               : False OperationTimeout                  : 00:03:00 NoEncryption                      : False UseUTF16                          : False IncludePortInSPN                  : False OutputBufferingMode               : None Culture                           : UICulture                         : MaximumReceivedDataSizePerCommand : MaximumReceivedObjectSize         : 209715200 ApplicationArguments              : OpenTimeout                       : 00:03:00 CancelTimeout                     : 00:01:00 IdleTimeout                       : -00:00:00.0010000</source>
          <target state="translated">MaximumConnectionRedirectionCount: 5 NoCompression: False NoMachineProfile: False ProxyAccessType: None ProxyAuthentication: ProxyCredential をネゴシエート: SkipCACheck: False SkipCNCheck: False SkipRevocationCheck: False OperationTimeout: 00時 03分: 00 NoEncryption: False UseUTF16: False IncludePortInSPN: False OutputBufferingMode: カルチャなし: UICulture: MaximumReceivedDataSizePerCommand: MaximumReceivedObjectSize: 209715200 ApplicationArguments: OpenTimeout: 00時 03分: 00 CancelTimeout: 00時 01分: 00 IdleTimeout:-00:00:00.0010000</target>       </trans-unit>
        <trans-unit id="507" translate="yes" xml:space="preserve">
          <source>For descriptions of these options, see the help topic for the New-PSSessionOption cmdlet.</source>
          <target state="translated">これらのオプションの説明については、New-pssessionoption コマンドレットのヘルプ トピックを参照してください。</target>       </trans-unit>
        <trans-unit id="508" translate="yes" xml:space="preserve">
          <source>To change the value of the $PSSessionOption preference variable, use the New-PSSessionOption cmdlet to create a PSSessionOption object with the option values you prefer.</source>
          <target state="translated">$PSSessionOption ユーザー設定変数の値を変更するのにには、必要に応じてオプションの値を使用して、PSSessionOption オブジェクトを作成するのに New-pssessionoption コマンドレットを使用します。</target>       </trans-unit>
        <trans-unit id="509" translate="yes" xml:space="preserve">
          <source>Save the output in a variable called $PSSessionOption.</source>
          <target state="translated">$PSSessionOption という名前の変数に出力を保存します。</target>       </trans-unit>
        <trans-unit id="510" translate="yes" xml:space="preserve">
          <source>For example,</source>
          <target state="translated">例:</target>       </trans-unit>
        <trans-unit id="511" translate="yes" xml:space="preserve">
          <source>$PSSessionOption = New-PSSessionOption -NoCompression</source>
          <target state="translated">$PSSessionOption = 新しい PSSessionOption NoCompression</target>       </trans-unit>
        <trans-unit id="512" translate="yes" xml:space="preserve">
          <source>To use the $PSSessionOption preference variable in every Windows PowerShell session, add a New-PSSessionOption command that creates the $PSSessionOption variable to your Windows PowerShell profile.</source>
          <target state="translated">$PSSessionOption ユーザー設定変数をすべての Windows PowerShell セッションを使用するには、Windows PowerShell プロファイルに $PSSessionOption 変数を作成する New-pssessionoption コマンドを追加します。</target>       </trans-unit>
        <trans-unit id="513" translate="yes" xml:space="preserve">
          <source>You can also set custom options for a particular remote session.</source>
          <target state="translated">特定のリモート セッションのカスタム オプションを設定することもできます。</target>       </trans-unit>
        <trans-unit id="514" translate="yes" xml:space="preserve">
          <source>The options that you set take precedence over the system defaults and the value of the $PSSessionOption preference variable.</source>
          <target state="translated">設定したオプションは、システムの既定値と、$PSSessionOption 環境変数の値よりも優先されます。</target>       </trans-unit>
        <trans-unit id="515" translate="yes" xml:space="preserve">
          <source>To set custom session options, use the New-PSSessionOption cmdlet to create a PSSessionOption object.</source>
          <target state="translated">カスタム セッション オプションを設定するのにには、New-pssessionoption コマンドレットを使用して、PSSessionOption オブジェクトを作成します。</target>       </trans-unit>
        <trans-unit id="516" translate="yes" xml:space="preserve">
          <source>Then, use the PSSessionOption object as the value of the SessionOption parameter in cmdlets that create a session, such as New-PSSession, Enter-PSSession, and Invoke-Command.</source>
          <target state="translated">次に、PSSessionOption オブジェクトを New-pssession、Enter-pssession、Invoke-command コマンドレットなどのセッションを作成するコマンドレットの SessionOption パラメーターの値として使用します。</target>       </trans-unit>
        <trans-unit id="517" translate="yes" xml:space="preserve">
          <source>For more information about the New-PSSessionOption cmdlet, see the help topic for New-PSSessionOption.</source>
          <target state="translated">New-pssessionoption コマンドレットに関する詳細については、New-pssessionoption のヘルプ トピックを参照してください。</target>       </trans-unit>
        <trans-unit id="518" translate="yes" xml:space="preserve">
          <source>For more information about remote commands and sessions, see about_Remote and about_PSSessions.</source>
          <target state="translated">リモート コマンドとセッションに関する詳細については、about_remote に関するページと about_PSSessions を参照してください。</target>       </trans-unit>
        <trans-unit id="519" translate="yes" xml:space="preserve">
          <source>For more information about using a profile, see about_Profiles.</source>
          <target state="translated">詳細については、プロファイルを使用して、about_Profiles を参照してください。</target>       </trans-unit>
        <trans-unit id="520" translate="yes" xml:space="preserve">
          <source>$VerbosePreference Determines how Windows PowerShell responds to verbose messages generated by a script, cmdlet or provider, such as the messages generated by the Write-Verbose cmdlet.</source>
          <target state="translated">$VerbosePreference では、Windows PowerShell がスクリプト、コマンドレットまたは Write-verbose コマンドレットによって生成されたメッセージなどのプロバイダーによって生成された詳細メッセージに応答する方法を決定します。</target>       </trans-unit>
        <trans-unit id="521" translate="yes" xml:space="preserve">
          <source>Typically, verbose messages describe the actions performed to execute a command.</source>
          <target state="translated">通常、詳細メッセージは、コマンドを実行する実行される操作について説明します。</target>       </trans-unit>
        <trans-unit id="522" translate="yes" xml:space="preserve">
          <source>By default, verbose messages are not displayed, but you can change this behavior by changing the value of $VerbosePreference.</source>
          <target state="translated">既定では、詳細メッセージは表示されませんが、$VerbosePreference の値を変更することでこの動作を変更することができます。</target>       </trans-unit>
        <trans-unit id="523" translate="yes" xml:space="preserve">
          <source>You can also use the Verbose common parameter of a cmdlet to display or hide the verbose messages for a specific command.</source>
          <target state="translated">コマンドレットの場合は、Verbose 共通パラメーターを使用して、または特定のコマンドの詳細メッセージを非表示にもできます。</target>       </trans-unit>
        <trans-unit id="524" translate="yes" xml:space="preserve">
          <source>For more information, type: "get-help about_commonparameters".</source>
          <target state="translated">詳細については、入力:「get-help about_commonparameters」です。</target>       </trans-unit>
        <trans-unit id="525" translate="yes" xml:space="preserve">
          <source>Valid values: Stop:               Displays the verbose message and an error message and then stops executing.</source>
          <target state="translated">有効な値: 停止: 詳細メッセージとエラー メッセージが表示され、実行は停止します。</target>       </trans-unit>
        <trans-unit id="526" translate="yes" xml:space="preserve">
          <source>Inquire:            Displays the verbose message and then displays a prompt that asks you whether you want to continue.</source>
          <target state="translated">詳細メッセージを表示を照会する: し、続行するかどうかを確認するプロンプトを表示します。</target>       </trans-unit>
        <trans-unit id="527" translate="yes" xml:space="preserve">
          <source>Continue:           Displays the verbose message and then continues with execution.</source>
          <target state="translated">続行します。 詳細メッセージを表示し、実行を続行します。</target>       </trans-unit>
        <trans-unit id="528" translate="yes" xml:space="preserve">
          <source>SilentlyContinue:   Does not display the verbose message.</source>
          <target state="translated">SilentlyContinue: では、詳細メッセージは表示されません。</target>       </trans-unit>
        <trans-unit id="529" translate="yes" xml:space="preserve">
          <source>Continues executing.</source>
          <target state="translated">実行し続けます。</target>       </trans-unit>
        <trans-unit id="530" translate="yes" xml:space="preserve">
          <source>(Default)</source>
          <target state="translated">EnterprisePublishing</target>       </trans-unit>
        <trans-unit id="531" translate="yes" xml:space="preserve">
          <source>EXAMPLES</source>
          <target state="translated">例</target>       </trans-unit>
        <trans-unit id="532" translate="yes" xml:space="preserve">
          <source>These examples show the effect of the different values of $VerbosePreference and the use of the Verbose common parameter to override the preference value.</source>
          <target state="translated">これらの例では、$VerbosePreference のそれぞれの値と、優先順位の値をオーバーライドする場合は、Verbose 共通パラメーターの使用の結果を表示します。</target>       </trans-unit>
        <trans-unit id="533" translate="yes" xml:space="preserve">
          <source>This example shows the effect of the SilentlyContinue value, which is the default.</source>
          <target state="translated">この例では、既定値は SilentlyContinue 値の効果を示します。</target>       </trans-unit>
        <trans-unit id="534" translate="yes" xml:space="preserve">
          <source>PS&gt; $VerbosePreference             # Find the current value.</source>
          <target state="translated">PS &gt; $VerbosePreference # は、現在の値を検索します。</target>       </trans-unit>
        <trans-unit id="535" translate="yes" xml:space="preserve">
          <source>SilentlyContinue</source>
          <target state="translated">SilentlyContinue</target>       </trans-unit>
        <trans-unit id="536" translate="yes" xml:space="preserve">
          <source>PS&gt; Write-Verbose "Verbose message test."</source>
          <target state="translated">PS &gt; Write-verbose"詳細メッセージ test"</target>       </trans-unit>
        <trans-unit id="537" translate="yes" xml:space="preserve">
          <source>PS&gt;                                # Write a verbose message.</source>
          <target state="translated">PS &gt; # は、詳細メッセージを記述します。</target>       </trans-unit>
        <trans-unit id="538" translate="yes" xml:space="preserve">
          <source>Message is not displayed.</source>
          <target state="translated">メッセージは表示されません。</target>       </trans-unit>
        <trans-unit id="539" translate="yes" xml:space="preserve">
          <source>PS&gt; Write-Verbose "Verbose message test."</source>
          <target state="translated">PS &gt; Write-verbose"詳細メッセージ test"</target>       </trans-unit>
        <trans-unit id="540" translate="yes" xml:space="preserve">
          <source>-verbose VERBOSE: Verbose message test.</source>
          <target state="translated">-詳細 VERBOSE: 詳細メッセージをテストします。</target>       </trans-unit>
        <trans-unit id="541" translate="yes" xml:space="preserve">
          <source>Use the Verbose parameter.</source>
          <target state="translated">Verbose パラメーターを使用します。</target>       </trans-unit>
        <trans-unit id="542" translate="yes" xml:space="preserve">
          <source>This example shows the effect of the Continue value.</source>
          <target state="translated">この例では、続行値の効果を示します。</target>       </trans-unit>
        <trans-unit id="543" translate="yes" xml:space="preserve">
          <source>PS&gt; $VerbosePreference = "Continue" Change the value to Continue.</source>
          <target state="translated">PS &gt; $VerbosePreference ="Continue"[続行] に値を変更します。</target>       </trans-unit>
        <trans-unit id="544" translate="yes" xml:space="preserve">
          <source>PS&gt; Write-Verbose "Verbose message test."</source>
          <target state="translated">PS &gt; Write-verbose"詳細メッセージ test"</target>       </trans-unit>
        <trans-unit id="545" translate="yes" xml:space="preserve">
          <source>Write a verbose message.</source>
          <target state="translated">詳細メッセージを記述します。</target>       </trans-unit>
        <trans-unit id="546" translate="yes" xml:space="preserve">
          <source>VERBOSE: Verbose message test.</source>
          <target state="translated">詳細: 詳細メッセージをテストします。</target>       </trans-unit>
        <trans-unit id="547" translate="yes" xml:space="preserve">
          <source>Message is displayed.</source>
          <target state="translated">メッセージが表示されます。</target>       </trans-unit>
        <trans-unit id="548" translate="yes" xml:space="preserve">
          <source>PS&gt; Write-Verbose "Verbose message test."</source>
          <target state="translated">PS &gt; Write-verbose"詳細メッセージ test"</target>       </trans-unit>
        <trans-unit id="549" translate="yes" xml:space="preserve">
          <source>-verbose:$false Use the Verbose parameter with a value of $false.</source>
          <target state="translated">詳細: $false $false の値を持つ、Verbose パラメーターを使用します。</target>       </trans-unit>
        <trans-unit id="550" translate="yes" xml:space="preserve">
          <source>PS&gt; Message is not displayed.</source>
          <target state="translated">PS &gt; メッセージは表示されません。</target>       </trans-unit>
        <trans-unit id="551" translate="yes" xml:space="preserve">
          <source>This example shows the effect of the Stop value.</source>
          <target state="translated">この例では、停止の値の効果を示します。</target>       </trans-unit>
        <trans-unit id="552" translate="yes" xml:space="preserve">
          <source>PS&gt; $VerbosePreference = "Stop" Change the value to Stop.</source>
          <target state="translated">PS &gt; $VerbosePreference ="Stop"を Stop に値を変更します。</target>       </trans-unit>
        <trans-unit id="553" translate="yes" xml:space="preserve">
          <source>PS&gt; Write-Verbose "Verbose message test."</source>
          <target state="translated">PS &gt; Write-verbose"詳細メッセージ test"</target>       </trans-unit>
        <trans-unit id="554" translate="yes" xml:space="preserve">
          <source>Write a verbose message.</source>
          <target state="translated">詳細メッセージを記述します。</target>       </trans-unit>
        <trans-unit id="555" translate="yes" xml:space="preserve">
          <source>VERBOSE: Verbose message test.</source>
          <target state="translated">詳細: 詳細メッセージをテストします。</target>       </trans-unit>
        <trans-unit id="556" translate="yes" xml:space="preserve">
          <source>Write-Verbose : Command execution stopped because the shell variable "VerbosePreference" is set to Stop.</source>
          <target state="translated">シェル変数"VerbosePreference"が Stop に設定されているために、コマンドの実行停止 Write-verbose: します。</target>       </trans-unit>
        <trans-unit id="557" translate="yes" xml:space="preserve">
          <source>At line:1 char:14</source>
          <target state="translated">行: 1 文字: 14</target>       </trans-unit>
        <trans-unit id="558" translate="yes" xml:space="preserve">
          <source>Write-Verbose  &lt;&lt;&lt;&lt; "Verbose message test."</source>
          <target state="translated">Write-verbose &lt;&lt;&lt;&lt;"詳細メッセージ test"</target>       </trans-unit>
        <trans-unit id="559" translate="yes" xml:space="preserve">
          <source>PS&gt; Write-Verbose "Verbose message test."</source>
          <target state="translated">PS &gt; Write-verbose"詳細メッセージ test"</target>       </trans-unit>
        <trans-unit id="560" translate="yes" xml:space="preserve">
          <source>-verbose:$false Use the Verbose parameter with a value of $false PS&gt; Message is not displayed.</source>
          <target state="translated">-詳細: $false Verbose パラメーターを使用して、値 $false PS は &gt; メッセージは表示されません。</target>       </trans-unit>
        <trans-unit id="561" translate="yes" xml:space="preserve">
          <source>This example shows the effect of the Inquire value.</source>
          <target state="translated">この例では、inquire です。 値の効果を示します。</target>       </trans-unit>
        <trans-unit id="562" translate="yes" xml:space="preserve">
          <source>PS&gt; $VerbosePreference = "Inquire" Change the value to Inquire.</source>
          <target state="translated">PS &gt; $VerbosePreference ="Inquire"Inquire に値を変更します。</target>       </trans-unit>
        <trans-unit id="563" translate="yes" xml:space="preserve">
          <source>PS&gt; Write-Verbose "Verbose message test."</source>
          <target state="translated">PS &gt; Write-verbose"詳細メッセージ test"</target>       </trans-unit>
        <trans-unit id="564" translate="yes" xml:space="preserve">
          <source>VERBOSE: Verbose message test.</source>
          <target state="translated">詳細: 詳細メッセージをテストします。</target>       </trans-unit>
        <trans-unit id="565" translate="yes" xml:space="preserve">
          <source>Write a verbose message.</source>
          <target state="translated">詳細メッセージを記述します。</target>       </trans-unit>
        <trans-unit id="566" translate="yes" xml:space="preserve">
          <source>Confirm Continue with this operation?</source>
          <target state="translated">この操作を続行を確認するか。</target>       </trans-unit>
        <trans-unit id="567" translate="yes" xml:space="preserve">
          <source>[Y] Yes  [A] Yes to All  [H] Halt Command  [S] Suspend  [?] Help (default is "Y"): y PS&gt;</source>
          <target state="translated">[Y] [はい]、[A] [はい] にすべての [H] Halt コマンド [S] 中断 [?]ヘルプ (既定値は"Y"): y PS &gt;</target>       </trans-unit>
        <trans-unit id="568" translate="yes" xml:space="preserve">
          <source>PS&gt; Write-Verbose "Verbose message test."</source>
          <target state="translated">PS &gt; Write-verbose"詳細メッセージ test"</target>       </trans-unit>
        <trans-unit id="569" translate="yes" xml:space="preserve">
          <source>-verbose:$false Use the Verbose parameter.</source>
          <target state="translated">詳細: $false、Verbose パラメーターを使用します。</target>       </trans-unit>
        <trans-unit id="570" translate="yes" xml:space="preserve">
          <source>PS&gt; Message is not displayed.</source>
          <target state="translated">PS &gt; メッセージは表示されません。</target>       </trans-unit>
        <trans-unit id="571" translate="yes" xml:space="preserve">
          <source>$WarningPreference Determines how Windows PowerShell responds to warning messages generated by a script, cmdlet or provider, such as the messages generated by the Write-Warning cmdlet.</source>
          <target state="translated">$WarningPreference では、Windows PowerShell がスクリプト、コマンドレットまたは Write-warning コマンドレットによって生成されたメッセージなどのプロバイダーによって生成される警告メッセージに応答する方法を決定します。</target>       </trans-unit>
        <trans-unit id="572" translate="yes" xml:space="preserve">
          <source>By default, warning messages are displayed and execution continues, but you can change this behavior by changing the value of $WarningPreference.</source>
          <target state="translated">既定では、警告メッセージが表示されますが、実行が継続、$WarningPreference の値を変更することでこの動作を変更することができます。</target>       </trans-unit>
        <trans-unit id="573" translate="yes" xml:space="preserve">
          <source>You can also use the WarningAction common parameter of a cmdlet to determine how Windows PowerShell responds to warnings from a particular command.</source>
          <target state="translated">警告に特定のコマンドから Windows PowerShell の応答を決定するのにコマンドレットの WarningAction 共通パラメーターを使用することもことができます。</target>       </trans-unit>
        <trans-unit id="574" translate="yes" xml:space="preserve">
          <source>For more information, type: "get-help about_commonparameters".</source>
          <target state="translated">詳細については、入力:「get-help about_commonparameters」です。</target>       </trans-unit>
        <trans-unit id="575" translate="yes" xml:space="preserve">
          <source>Valid values: Stop:               Displays the warning message and an error message and then stops executing.</source>
          <target state="translated">有効な値: 停止: 警告メッセージとエラー メッセージが表示され、実行は停止します。</target>       </trans-unit>
        <trans-unit id="576" translate="yes" xml:space="preserve">
          <source>Inquire:            Displays the warning message and then prompts for permission to continue.</source>
          <target state="translated">警告メッセージが表示を照会する: され、続行するように求められます。</target>       </trans-unit>
        <trans-unit id="577" translate="yes" xml:space="preserve">
          <source>Continue:           Displays the warning message and then (Default)           continues executing.</source>
          <target state="translated">します。 続行警告メッセージを表示し、(既定値) の実行が続けられます。</target>       </trans-unit>
        <trans-unit id="578" translate="yes" xml:space="preserve">
          <source>SilentlyContinue:   Does not display the warning message.</source>
          <target state="translated">SilentlyContinue: では、警告メッセージは表示されません。</target>       </trans-unit>
        <trans-unit id="579" translate="yes" xml:space="preserve">
          <source>Continues executing.</source>
          <target state="translated">実行し続けます。</target>       </trans-unit>
        <trans-unit id="580" translate="yes" xml:space="preserve">
          <source>EXAMPLES</source>
          <target state="translated">例</target>       </trans-unit>
        <trans-unit id="581" translate="yes" xml:space="preserve">
          <source>These examples show the effect of the different values of $WarningPreference and the use of the WarningAction common parameter to override the preference value.</source>
          <target state="translated">これらの例では、$WarningPreference のそれぞれの値と、優先順位の値を上書きする WarningAction 共通パラメーターの使用の結果を表示します。</target>       </trans-unit>
        <trans-unit id="582" translate="yes" xml:space="preserve">
          <source>This example shows the effect of the Continue value, which is the default.</source>
          <target state="translated">この例では、既定値は、続行の値の効果を示します。</target>       </trans-unit>
        <trans-unit id="583" translate="yes" xml:space="preserve">
          <source>PS&gt; $WarningPreference    # Find the current value.</source>
          <target state="translated">PS &gt; $WarningPreference # は、現在の値を検索します。</target>       </trans-unit>
        <trans-unit id="584" translate="yes" xml:space="preserve">
          <source>Continue</source>
          <target state="translated">続行</target>       </trans-unit>
        <trans-unit id="585" translate="yes" xml:space="preserve">
          <source>Write a warning message.</source>
          <target state="translated">警告メッセージを記述します。</target>       </trans-unit>
        <trans-unit id="586" translate="yes" xml:space="preserve">
          <source>PS&gt; Write-Warning "This action can delete data."</source>
          <target state="translated">PS &gt; Write-warning「は、この操作は、データを削除できます」</target>       </trans-unit>
        <trans-unit id="587" translate="yes" xml:space="preserve">
          <source>WARNING: This action can delete data.</source>
          <target state="translated">警告: この操作はデータを削除することができます。</target>       </trans-unit>
        <trans-unit id="588" translate="yes" xml:space="preserve">
          <source>Use the WarningAction parameter to suppress the warning for this command PS&gt; Write-Warning "This action can delete data."</source>
          <target state="translated">このコマンドの PS の警告を抑制して WarningAction パラメーターを使用して &gt; Write-warning「は、この操作は、データを削除できます」</target>       </trans-unit>
        <trans-unit id="589" translate="yes" xml:space="preserve">
          <source>-warningaction silentlycontinue</source>
          <target state="translated">-warningaction silentlycontinue</target>       </trans-unit>
        <trans-unit id="590" translate="yes" xml:space="preserve">
          <source>This example shows the effect of the SilentlyContinue value.</source>
          <target state="translated">この例では、SilentlyContinue 値の効果を示します。</target>       </trans-unit>
        <trans-unit id="591" translate="yes" xml:space="preserve">
          <source>PS&gt; $WarningPreference = "SilentlyContinue" Change the value to SilentlyContinue.</source>
          <target state="translated">PS &gt; $WarningPreference ="SilentlyContinue"SilentlyContinue に値を変更します。</target>       </trans-unit>
        <trans-unit id="592" translate="yes" xml:space="preserve">
          <source>PS&gt; Write-Warning "This action can delete data."</source>
          <target state="translated">PS &gt; Write-warning「は、この操作は、データを削除できます」</target>       </trans-unit>
        <trans-unit id="593" translate="yes" xml:space="preserve">
          <source>PS&gt;                        # Write a warning message.</source>
          <target state="translated">PS &gt; # は、警告メッセージを記述します。</target>       </trans-unit>
        <trans-unit id="594" translate="yes" xml:space="preserve">
          <source>PS&gt; Write-Warning "This action can delete data."</source>
          <target state="translated">PS &gt; Write-warning「は、この操作は、データを削除できます」</target>       </trans-unit>
        <trans-unit id="595" translate="yes" xml:space="preserve">
          <source>-warningaction stop Use the WarningAction parameter to stop processing when this command generates a warning.</source>
          <target state="translated">-warningaction 停止では、WarningAction パラメーターを使用して、このコマンドは、警告を生成するときの処理を停止します。</target>       </trans-unit>
        <trans-unit id="596" translate="yes" xml:space="preserve">
          <source>WARNING: This action can delete data.</source>
          <target state="translated">警告: この操作はデータを削除することができます。</target>       </trans-unit>
        <trans-unit id="597" translate="yes" xml:space="preserve">
          <source>Write-Warning : Command execution stopped because the shell variable "WarningPreference" is set to Stop.</source>
          <target state="translated">書き込み-警告: シェル変数"WarningPreference"が Stop に設定されているために、コマンドの実行が停止しました。</target>       </trans-unit>
        <trans-unit id="598" translate="yes" xml:space="preserve">
          <source>At line:1 char:14</source>
          <target state="translated">行: 1 文字: 14</target>       </trans-unit>
        <trans-unit id="599" translate="yes" xml:space="preserve">
          <source>Write-Warning &lt;&lt;&lt;&lt;  "This action can delete data."</source>
          <target state="translated">Write-warning &lt;&lt;&lt;&lt;「は、この操作は、データを削除できます」</target>       </trans-unit>
        <trans-unit id="600" translate="yes" xml:space="preserve">
          <source>-warningaction stop</source>
          <target state="translated">warningaction-停止</target>       </trans-unit>
        <trans-unit id="601" translate="yes" xml:space="preserve">
          <source>This example shows the effect of the Inquire value.</source>
          <target state="translated">この例では、inquire です。 値の効果を示します。</target>       </trans-unit>
        <trans-unit id="602" translate="yes" xml:space="preserve">
          <source>PS&gt; $WarningPreference = "Inquire" Change the value to Inquire.</source>
          <target state="translated">PS &gt; $WarningPreference ="Inquire"Inquire に値を変更します。</target>       </trans-unit>
        <trans-unit id="603" translate="yes" xml:space="preserve">
          <source>PS&gt; Write-Warning "This action can delete data."</source>
          <target state="translated">PS &gt; Write-warning「は、この操作は、データを削除できます」</target>       </trans-unit>
        <trans-unit id="604" translate="yes" xml:space="preserve">
          <source>Write a warning message.</source>
          <target state="translated">警告メッセージを記述します。</target>       </trans-unit>
        <trans-unit id="605" translate="yes" xml:space="preserve">
          <source>WARNING: This action can delete data.</source>
          <target state="translated">警告: この操作はデータを削除することができます。</target>       </trans-unit>
        <trans-unit id="606" translate="yes" xml:space="preserve">
          <source>Confirm Continue with this operation?</source>
          <target state="translated">この操作を続行を確認するか。</target>       </trans-unit>
        <trans-unit id="607" translate="yes" xml:space="preserve">
          <source>[Y] Yes  [A] Yes to All  [H] Halt Command  [S] Suspend  [?] Help (default is "Y"): y PS&gt;</source>
          <target state="translated">[Y] [はい]、[A] [はい] にすべての [H] Halt コマンド [S] 中断 [?]ヘルプ (既定値は"Y"): y PS &gt;</target>       </trans-unit>
        <trans-unit id="608" translate="yes" xml:space="preserve">
          <source>PS&gt; Write-Warning "This action can delete data."</source>
          <target state="translated">PS &gt; Write-warning「は、この操作は、データを削除できます」</target>       </trans-unit>
        <trans-unit id="609" translate="yes" xml:space="preserve">
          <source>-warningaction silentlycontinue PS&gt;                         # Use the WarningAction parameter to change the response to a warning for the current command.</source>
          <target state="translated">-warningaction silentlycontinue PS &gt; # では、WarningAction パラメーターを使用して、現在のコマンドの警告に応答を変更します。</target>       </trans-unit>
        <trans-unit id="610" translate="yes" xml:space="preserve">
          <source>This example shows the effect of the Stop value.</source>
          <target state="translated">この例では、停止の値の効果を示します。</target>       </trans-unit>
        <trans-unit id="611" translate="yes" xml:space="preserve">
          <source>PS&gt; $WarningPreference = "Stop" Change the value to Stop.</source>
          <target state="translated">PS &gt; $WarningPreference ="Stop"を Stop に値を変更します。</target>       </trans-unit>
        <trans-unit id="612" translate="yes" xml:space="preserve">
          <source>PS&gt; Write-Warning "This action can delete data."</source>
          <target state="translated">PS &gt; Write-warning「は、この操作は、データを削除できます」</target>       </trans-unit>
        <trans-unit id="613" translate="yes" xml:space="preserve">
          <source>Write a warning message.</source>
          <target state="translated">警告メッセージを記述します。</target>       </trans-unit>
        <trans-unit id="614" translate="yes" xml:space="preserve">
          <source>WARNING: This action can delete data.</source>
          <target state="translated">警告: この操作はデータを削除することができます。</target>       </trans-unit>
        <trans-unit id="615" translate="yes" xml:space="preserve">
          <source>Write-Warning : Command execution stopped because the shell variable "WarningPreference" is set to Stop.</source>
          <target state="translated">書き込み-警告: シェル変数"WarningPreference"が Stop に設定されているために、コマンドの実行が停止しました。</target>       </trans-unit>
        <trans-unit id="616" translate="yes" xml:space="preserve">
          <source>At line:1 char:14</source>
          <target state="translated">行: 1 文字: 14</target>       </trans-unit>
        <trans-unit id="617" translate="yes" xml:space="preserve">
          <source>Write-Warning  &lt;&lt;&lt;&lt; "This action can delete data."</source>
          <target state="translated">Write-warning &lt;&lt;&lt;&lt;「は、この操作は、データを削除できます」</target>       </trans-unit>
        <trans-unit id="618" translate="yes" xml:space="preserve">
          <source>PS&gt; Write-Warning "This action can delete data."</source>
          <target state="translated">PS &gt; Write-warning「は、この操作は、データを削除できます」</target>       </trans-unit>
        <trans-unit id="619" translate="yes" xml:space="preserve">
          <source>-warningaction inquire WARNING: This action can delete data.</source>
          <target state="translated">-warningaction が警告を照会します。 この操作は、データを削除できます。</target>       </trans-unit>
        <trans-unit id="620" translate="yes" xml:space="preserve">
          <source>Confirm Continue with this operation?</source>
          <target state="translated">この操作を続行を確認するか。</target>       </trans-unit>
        <trans-unit id="621" translate="yes" xml:space="preserve">
          <source>[Y] Yes  [A] Yes to All  [H] Halt Command  [S] Suspend  [?] Help (default is "Y"): Use the WarningAction parameter to change the response to a warning for the current command.</source>
          <target state="translated">[Y] [はい]、[A] [はい] にすべての [H] Halt コマンド [S] 中断 [?]ヘルプ (既定値は"Y"): WarningAction パラメーターを使用して、現在のコマンドに対する警告への応答を変更します。</target>       </trans-unit>
        <trans-unit id="622" translate="yes" xml:space="preserve">
          <source>$WhatIfPreference Determines whether WhatIf is automatically enabled for every command that supports it.</source>
          <target state="translated">$WhatIfPreference では、WhatIf がこれをサポートするすべてのコマンドを自動的に有効にするかどうかを決定します。</target>       </trans-unit>
        <trans-unit id="623" translate="yes" xml:space="preserve">
          <source>When WhatIf is enabled, the cmdlet reports the expected effect of the command, but does not execute the command.</source>
          <target state="translated">WhatIf を有効にすると、コマンドレットは、コマンドの期待どおりの効果を報告しますが、コマンドを実行できません。</target>       </trans-unit>
        <trans-unit id="624" translate="yes" xml:space="preserve">
          <source>Valid values: 0:                  WhatIf is not automatically enabled.</source>
          <target state="translated">有効な値: 0: WhatIf が自動的に有効にできません。</target>       </trans-unit>
        <trans-unit id="625" translate="yes" xml:space="preserve">
          <source>To (Default)           enable it manually, use the WhatIf parameter of the command.</source>
          <target state="translated">(既定値) 有効にするには、手動でのコマンドは、WhatIf パラメーターを使用します。</target>       </trans-unit>
        <trans-unit id="626" translate="yes" xml:space="preserve">
          <source>1:                  WhatIf is automatically enabled on any command that supports it.</source>
          <target state="translated">1: WhatIf がこれをサポートする任意のコマンドで自動的に有効にします。</target>       </trans-unit>
        <trans-unit id="627" translate="yes" xml:space="preserve">
          <source>Users can use the WhatIf command with a value of False to disable it manually (WhatIf:$false).</source>
          <target state="translated">ユーザーは手動で無効にする、値 False は WhatIf コマンドを使用することができます (WhatIf: $false)。</target>       </trans-unit>
        <trans-unit id="628" translate="yes" xml:space="preserve">
          <source>DETAILED EXPLANATION</source>
          <target state="translated">詳細な説明</target>       </trans-unit>
        <trans-unit id="629" translate="yes" xml:space="preserve">
          <source>When a cmdlet supports WhatIf, the cmdlet reports the expected effect of the command, instead of executing the command.</source>
          <target state="translated">コマンドレットでは、WhatIf をサポートするときに、コマンドレットは、予想どおりのコマンドを実行する代わりに、コマンドの結果を報告します。</target>       </trans-unit>
        <trans-unit id="630" translate="yes" xml:space="preserve">
          <source>For example, instead of deleting the test.txt file in response to a Remove-Item command, Windows PowerShell reports what it would delete.</source>
          <target state="translated">たとえば、Remove-item コマンドへの応答にある test.txt ファイルを削除するには、代わりに Windows PowerShell 報告削除ようにします。</target>       </trans-unit>
        <trans-unit id="631" translate="yes" xml:space="preserve">
          <source>A subsequent Get-Childitem command confirms that the file was not deleted.</source>
          <target state="translated">その後、Get-childitem コマンドでは、ファイルが削除されていないことを確認します。</target>       </trans-unit>
        <trans-unit id="632" translate="yes" xml:space="preserve">
          <source>PS&gt; remove-item test.txt What if: Performing operation "Remove-Item" on Target "Item: C:\test.txt PS&gt; get-childitem test.txt</source>
          <target state="translated">PS &gt; test.txt をどう削除項目: 操作"Remove-item"ターゲットを実行して"項目: C:\test.txt PS &gt;、get-childitem test.txt</target>       </trans-unit>
        <trans-unit id="633" translate="yes" xml:space="preserve">
          <source>Directory: Microsoft.PowerShell.Core\FileSystem::C:</source>
          <target state="translated">ディレクトリ: Microsoft.PowerShell.Core\FileSystem::C:</target>       </trans-unit>
        <trans-unit id="634" translate="yes" xml:space="preserve">
          <source>Mode                LastWriteTime     Length     Name</source>
          <target state="translated">モード LastWriteTime 長さ名</target>       </trans-unit>
        <trans-unit id="635" translate="yes" xml:space="preserve">
          <source>-a---         7/29/2006   7:15 PM         84     test.txt</source>
          <target state="translated">は、---2006 年 7 月 29 日 7時 15分 PM 84 test.txt</target>       </trans-unit>
        <trans-unit id="636" translate="yes" xml:space="preserve">
          <source>EXAMPLES</source>
          <target state="translated">例</target>       </trans-unit>
        <trans-unit id="637" translate="yes" xml:space="preserve">
          <source>These examples show the effect of the different values of $WhatIfPreference.</source>
          <target state="translated">これらの例では、$WhatIfPreference のそれぞれの値の結果を表示します。</target>       </trans-unit>
        <trans-unit id="638" translate="yes" xml:space="preserve">
          <source>They also show how to use the WhatIf cmdlet parameter to override the preference value for a specific command.</source>
          <target state="translated">WhatIf コマンドレットのパラメーターを使用して、特定のコマンドの優先順位の値をオーバーライドする方法も示します。</target>       </trans-unit>
        <trans-unit id="639" translate="yes" xml:space="preserve">
          <source>This example shows the effect of the 0 (not enabled) value, which is the default.</source>
          <target state="translated">この例では、既定値は、0 (有効になっていない) 値の効果を示します。</target>       </trans-unit>
        <trans-unit id="640" translate="yes" xml:space="preserve">
          <source>PS&gt; $whatifpreference 0                         # Check the current value.</source>
          <target state="translated">PS &gt; $whatifpreference 0 # 現在の値を確認します。</target>       </trans-unit>
        <trans-unit id="641" translate="yes" xml:space="preserve">
          <source>PS&gt; get-childitem test.txt | format-list FullName FullName : C:\test.txt Verify that the file exists.</source>
          <target state="translated">PS &gt;、get-childitem test.txt |format-list の FullName FullName: C:\test.txt では、ファイルが存在することを確認します。</target>       </trans-unit>
        <trans-unit id="642" translate="yes" xml:space="preserve">
          <source>PS&gt; remove-item test.txt PS&gt;                       # Delete the file.</source>
          <target state="translated">PS &gt; test.txt PS を削除する項目 &gt; # は、ファイルを削除します。</target>       </trans-unit>
        <trans-unit id="643" translate="yes" xml:space="preserve">
          <source>PS&gt; get-childitem test.txt | format-list -property FullName Verify that the file is deleted.</source>
          <target state="translated">PS &gt;、get-childitem test.txt |形式の一覧のプロパティが FullName は、ファイルが削除されていることを確認します。</target>       </trans-unit>
        <trans-unit id="644" translate="yes" xml:space="preserve">
          <source>Get-ChildItem : Cannot find path 'C:\test.txt' because it does not exist.</source>
          <target state="translated">存在しないために、Get-childitem: はパス 'C:\test.txt' を見つけることはできません。</target>       </trans-unit>
        <trans-unit id="645" translate="yes" xml:space="preserve">
          <source>At line:1 char:14</source>
          <target state="translated">行: 1 文字: 14</target>       </trans-unit>
        <trans-unit id="646" translate="yes" xml:space="preserve">
          <source>get-childitem  &lt;&lt;&lt;&lt; test.txt | format-list fullname</source>
          <target state="translated">get-childitem &lt;&lt;&lt;&lt; test.txt |format-list の fullname</target>       </trans-unit>
        <trans-unit id="647" translate="yes" xml:space="preserve">
          <source>This example shows the effect of using the WhatIf parameter when the value of $WhatIfPreference is 0.</source>
          <target state="translated">この例を $WhatIfPreference の値が 0 である場合は、WhatIf パラメーターを使用する効果を示します。</target>       </trans-unit>
        <trans-unit id="648" translate="yes" xml:space="preserve">
          <source>PS&gt; get-childitem test2.txt | format-list -property FullName FullName : C:\test2.txt Verify that the file exists.</source>
          <target state="translated">PS &gt;、get-childitem test2.txt |format-list の-プロパティ FullName FullName: C:\test2.txt では、ファイルが存在することを確認します。</target>       </trans-unit>
        <trans-unit id="649" translate="yes" xml:space="preserve">
          <source>PS&gt; remove-item test2.txt -whatif What if: Performing operation "Remove File" on Target "C:\test2.txt".</source>
          <target state="translated">PS &gt; 削除項目 test2.txt-whatif 場合: ターゲット"C:\test2.txt"で「ファイルの削除」操作を実行します。</target>       </trans-unit>
        <trans-unit id="650" translate="yes" xml:space="preserve">
          <source>Use the WhatIf parameter</source>
          <target state="translated">WhatIf パラメーターを使用してください。</target>       </trans-unit>
        <trans-unit id="651" translate="yes" xml:space="preserve">
          <source>PS&gt; get-childitem test2.txt | format-list -property FullName FullName : C:\test2.txt Verify that the file was not deleted</source>
          <target state="translated">PS &gt;、get-childitem test2.txt |format-list の-プロパティ FullName FullName: C:\test2.txt では、ファイルが削除されていないことを確認</target>       </trans-unit>
        <trans-unit id="652" translate="yes" xml:space="preserve">
          <source>This example shows the effect of the 1 (WhatIf enabled) value.</source>
          <target state="translated">この例では、1 (有効になっている WhatIf) 値の効果を示します。</target>       </trans-unit>
        <trans-unit id="653" translate="yes" xml:space="preserve">
          <source>When you use Remove-Item to delete a cmdlet, Remove-Item displays the path to the file that it would delete, but it does not delete the file.</source>
          <target state="translated">Remove-item を使用して、コマンドレットを削除するときに、削除する項目を削除する、ファイル パスが表示されますが、ファイルは削除されません。</target>       </trans-unit>
        <trans-unit id="654" translate="yes" xml:space="preserve">
          <source>PS&gt; $whatifpreference = 1 PS&gt; $whatifpreference 1                        # Change the value.</source>
          <target state="translated">PS &gt; $whatifpreference = 1 PS &gt; $whatifpreference 1 # 値を変更します。</target>       </trans-unit>
        <trans-unit id="655" translate="yes" xml:space="preserve">
          <source>PS&gt; remove-item test.txt What if: Performing operation "Remove File" on Target "C:\test.txt".</source>
          <target state="translated">PS &gt; 削除項目 test.txt 場合: ターゲット"C:\test.txt"で「ファイルの削除」操作を実行します。</target>       </trans-unit>
        <trans-unit id="656" translate="yes" xml:space="preserve">
          <source>Try to delete a file.</source>
          <target state="translated">ファイルを削除しようとしてください。</target>       </trans-unit>
        <trans-unit id="657" translate="yes" xml:space="preserve">
          <source>PS&gt; get-childitem test.txt | format-list FullName FullName : C:\test.txt Verify that the file exists.</source>
          <target state="translated">PS &gt;、get-childitem test.txt |format-list の FullName FullName: C:\test.txt では、ファイルが存在することを確認します。</target>       </trans-unit>
        <trans-unit id="658" translate="yes" xml:space="preserve">
          <source>This example shows how to delete a file when the value of $WhatIfPreference is 1.</source>
          <target state="translated">この例では、$WhatIfPreference の値が 1 である場合は、ファイルを削除する方法を示します。</target>       </trans-unit>
        <trans-unit id="659" translate="yes" xml:space="preserve">
          <source>It uses the WhatIf parameter with a value of $false.</source>
          <target state="translated">値を $false に、WhatIf パラメーターを使用します。</target>       </trans-unit>
        <trans-unit id="660" translate="yes" xml:space="preserve">
          <source>PS&gt; remove-item test.txt -whatif:$false Use the WhatIf parameter with $false.</source>
          <target state="translated">PS &gt; 削除項目 test.txt-whatif: $false は $false で WhatIf パラメーターを使用します。</target>       </trans-unit>
        <trans-unit id="661" translate="yes" xml:space="preserve">
          <source>This example demonstrates that some cmdlets support WhatIf behavior and others do not.</source>
          <target state="translated">この例では、一部のコマンドレットは、WhatIf の動作をサポートし、そうでないことを示します。</target>       </trans-unit>
        <trans-unit id="662" translate="yes" xml:space="preserve">
          <source>In this example, in which the value of $WhatIfPreference is 1 (enabled), a Get-Process command, which does not support WhatIf, is executed, but a Stop-Process command performs the WhatIf behavior.</source>
          <target state="translated">この例では $WhatIfPreference の値が 1 (有効)、WhatIf をサポートしていない、Get-process コマンドを実行するが、Stop-process コマンドは、WhatIf の動作を実行します。</target>       </trans-unit>
        <trans-unit id="663" translate="yes" xml:space="preserve">
          <source>You can override the WhatIf behavior of the Stop-Process command by using the WhatIf parameter with a value of $false.</source>
          <target state="translated">値を $false に、WhatIf パラメーターを使用して、Stop-process コマンドの WhatIf 動作をオーバーライドできます。</target>       </trans-unit>
        <trans-unit id="664" translate="yes" xml:space="preserve">
          <source>PS&gt; $whatifpreference = 1 Change the value to 1.</source>
          <target state="translated">PS &gt; $whatifpreference = 1 を 1 に値を変更します。</target>       </trans-unit>
        <trans-unit id="665" translate="yes" xml:space="preserve">
          <source>PS&gt; get-process winword A Get-Process command completes.</source>
          <target state="translated">PS &gt;、get-process winword A Get-process コマンドが完了するとします。</target>       </trans-unit>
        <trans-unit id="666" translate="yes" xml:space="preserve">
          <source>Handles  NPM(K)    PM(K)      WS(K) VM(M)   CPU(s)     Id ProcessName</source>
          <target state="translated">Npm (k) pm (k) ws (k) vm (m) [CPU Id ProcessName を処理します。</target>       </trans-unit>
        <trans-unit id="667" translate="yes" xml:space="preserve">
          <source>234       8     6324      15060   154     0.36   2312 WINWORD</source>
          <target state="translated">234 8 6324 15060 154 0.36 2312 WINWORD</target>       </trans-unit>
        <trans-unit id="668" translate="yes" xml:space="preserve">
          <source>PS&gt; stop-process -name winword What if: Performing operation "Stop-Process" on Target "WINWORD (2312)".</source>
          <target state="translated">PS &gt; 停止プロセス - winword という名前をどのような場合: 演算"Stop-process"ターゲット"WINWORD (2312)"を実行します。</target>       </trans-unit>
        <trans-unit id="669" translate="yes" xml:space="preserve">
          <source>A Stop-Process command uses WhatIf.</source>
          <target state="translated">Stop-process コマンドでは、WhatIf を使用します。</target>       </trans-unit>
        <trans-unit id="670" translate="yes" xml:space="preserve">
          <source>PS&gt; stop-process -name winword  -whatif:$false PS&gt;                      # WhatIf:$false overrides the preference.</source>
          <target state="translated">PS &gt; 停止プロセス - winword-whatif という名前を: $false PS &gt; # WhatIf: $false に設定が上書きされます。</target>       </trans-unit>
        <trans-unit id="671" translate="yes" xml:space="preserve">
          <source>PS&gt; get-process winword Get-Process : Cannot find a process with the name 'winword'.</source>
          <target state="translated">PS &gt;、get-process winword Get-process: 'winword' という名前を持つプロセスを検索することはできません。</target>       </trans-unit>
        <trans-unit id="672" translate="yes" xml:space="preserve">
          <source>Verify the process name and call the cmdlet again.</source>
          <target state="translated">プロセス名を確認し、再びコマンドレットを呼び出します。</target>       </trans-unit>
        <trans-unit id="673" translate="yes" xml:space="preserve">
          <source>At line:1 char:12</source>
          <target state="translated">行: 1 文字: 12 に</target>       </trans-unit>
        <trans-unit id="674" translate="yes" xml:space="preserve">
          <source>get-process  &lt;&lt;&lt;&lt; winword Verify that the process is stopped.</source>
          <target state="translated">get process &lt;&lt;&lt;&lt; winword プロセスが停止したことを確認してください。</target>       </trans-unit>
        <trans-unit id="675" translate="yes" xml:space="preserve">
          <source>SEE ALSO</source>
          <target state="translated">関連項目</target>       </trans-unit>
        <trans-unit id="676" translate="yes" xml:space="preserve">
          <source>about_Automatic_Variables about_CommonParameters about_Environment_Variables about_Profiles about_Remote about_Scopes about_Variables</source>
          <target state="translated">about_Automatic_Variables about_CommonParameters about_Environment_Variables about_Profiles about_Remote about_Scopes about_Variables</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>