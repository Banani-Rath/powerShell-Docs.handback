<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-1c394fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">9147b413ef624c56e36336dedd776fdc4419f8fd</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">reference\5.0\Microsoft.PowerShell.Utility\ConvertTo-Html.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions" />
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">52243095a15e13374738f1e83c5c115373473d98</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">db96ab0891a40d282d915f8123be877cd58766b1</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>powershell, cmdlet</source>
          <target state="translated">powershell コマンドレット</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>ConvertTo-Html</source>
          <target state="translated">ConvertTo-Html</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>ConvertTo-Html</source>
          <target state="translated">ConvertTo-Html</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>SYNOPSIS</source>
          <target state="translated">概要</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Converts Microsoft .NET Framework objects into HTML that can be displayed in a Web browser.</source>
          <target state="translated">Microsoft .NET Framework オブジェクトを Web ブラウザーで表示可能な HTML に変換します。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>SYNTAX</source>
          <target state="translated">構文</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Page (Default)</source>
          <target state="translated">ページ (既定値)</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Fragment</source>
          <target state="translated">フラグメント</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>DESCRIPTION</source>
          <target state="translated">説明</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>ConvertTo-Html<ept id="p1">**</ept> cmdlet converts .NET Framework objects into HTML that can be displayed in a Web browser.</source>
          <target state="translated"> <bpt id="p1">**</bpt>Convertto-html<ept id="p1">**</ept> コマンドレットは、.NET Framework オブジェクトを Web ブラウザーで表示できる HTML に変換します。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>You can use this cmdlet to display the output of a command in a Web page.</source>
          <target state="translated">このコマンドレットを使用すると、Web ページにコマンドの出力を表示できます。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>You can use the parameters of <bpt id="p1">**</bpt>ConvertTo-Html<ept id="p1">**</ept> to select object properties, to specify a table or list format, to specify the HTML page title, to add text before and after the object, and to return only the table or list fragment, instead of a strict DTD page.</source>
          <target state="translated">パラメーターを使用する <bpt id="p1">**</bpt>Convertto-html<ept id="p1">**</ept> 、オブジェクトの前後にテキストを追加して、テーブルまたは一覧フラグメントを返す、HTML ページ タイトルを指定するテーブルまたは一覧の形式を指定する、オブジェクトのプロパティを選択する厳密な DTD ではなくページです。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>When you submit multiple objects to <bpt id="p1">**</bpt>ConvertTo-Html<ept id="p1">**</ept>, Windows PowerShell creates the table, or a list, based on the properties of the first object that you submit.</source>
          <target state="translated">複数のオブジェクトを送信すると <bpt id="p1">**</bpt>Convertto-html<ept id="p1">**</ept>, 、Windows PowerShell は、テーブル、または送信する最初のオブジェクトのプロパティを基に、リストを作成します。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>If the remaining objects do not have one of the specified properties, the property value of that object is an empty cell.</source>
          <target state="translated">残りのオブジェクトに指定したプロパティのいずれかがない場合は、そのオブジェクトのプロパティ値が空のセルになります。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>If the remaining objects have additional properties, those property values are not included in the file.</source>
          <target state="translated">残りのオブジェクトに追加のプロパティがある場合は、これらのプロパティ値は、ファイルには含まれません。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>EXAMPLES</source>
          <target state="translated">例</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Example 1: Create a web page to display the date</source>
          <target state="translated">例 1: 日付を表示する web ページを作成します。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>This command creates an HTML page that displays the properties of the current date.</source>
          <target state="translated">このコマンドは、現在の日付のプロパティを表示する HTML ページを作成します。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>It uses the <bpt id="p1">*</bpt>InputObject<ept id="p1">*</ept> parameter to submit the results of a Get-Date command to the <bpt id="p2">**</bpt>ConvertTo-Html<ept id="p2">**</ept> cmdlet.</source>
          <target state="translated">使用して、 <bpt id="p1">*</bpt>InputObject<ept id="p1">*</ept> Get-date コマンドの結果を送信するパラメーター、 <bpt id="p2">**</bpt>Convertto-html<ept id="p2">**</ept> コマンドレットです。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Example 2: Create a web page to display PowerShell aliases</source>
          <target state="translated">例 2: PowerShell エイリアスを表示する web ページを作成します。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>This command creates an HTML page that lists the Windows PowerShell aliases in the current console.</source>
          <target state="translated">このコマンドは、現在のコンソールに Windows PowerShell エイリアスを一覧表示する HTML ページを作成します。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>The command uses the Get-Alias cmdlet to get the aliases.</source>
          <target state="translated">このコマンドは、Get-alias コマンドレットを使用してエイリアスを取得します。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>It uses the pipeline operator (|) to send the aliases to the <bpt id="p1">**</bpt>ConvertTo-Html<ept id="p1">**</ept> cmdlet, which creates the HTML page.</source>
          <target state="translated">エイリアスを送信し、パイプライン演算子 (|) を使用、 <bpt id="p1">**</bpt>Convertto-html<ept id="p1">**</ept> コマンドレットに渡して、HTML ページを作成します。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Example 3: Create a web page to display PowerShell events</source>
          <target state="translated">例 3: PowerShell イベントを表示する web ページを作成します。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>This command creates an HTML page called pslog.htm that displays the events in the Windows PowerShell event log on the local computer.</source>
          <target state="translated">このコマンドは、ローカル コンピューター上の Windows PowerShell イベント ログでイベントを表示する pslog.htm と呼ばれる HTML ページを作成します。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>It uses the Get-EventLog cmdlet to get the events in the Windows PowerShell log and then uses the pipeline operator (|) to send the events to the <bpt id="p1">**</bpt>ConvertTo-Html<ept id="p1">**</ept> cmdlet.</source>
          <target state="translated">Get-eventlog コマンドレットを使用して、Windows PowerShell ログ内のイベントを取得し、イベントを送信し、パイプライン演算子 (|) を使用してその、 <bpt id="p1">**</bpt>Convertto-html<ept id="p1">**</ept> コマンドレットです。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>The command also uses the redirection operator (<ph id="ph1">\&gt;</ph>) to send the HTML code to the pslog.htm file.</source>
          <target state="translated">コマンドでは、リダイレクト演算子も使用して (<ph id="ph1">\&gt;</ph>)、pslog.htm ファイルを HTML コードを送信します。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Example 4: Create a web page to display processes</source>
          <target state="translated">例 4: がプロセスを表示する web ページを作成します。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>These commands create and open an HTML page that lists the name, path, and company of the processes on the local computer.</source>
          <target state="translated">これらのコマンドは、ローカル コンピューター上のプロセスの名前、パス、および会社を一覧表示する HTML ページを作成し、開きます。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>The first command uses the Get-Process cmdlet to get objects that represent the processes running on the computer.</source>
          <target state="translated">最初のコマンドは、Get-Service コマンドレットを使用してコンピューターで実行中のプロセスを表すオブジェクトを取得します。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>The command uses the pipeline operator (|) to send the process objects to the <bpt id="p1">**</bpt>ConvertTo-Html<ept id="p1">**</ept> cmdlet.</source>
          <target state="translated">コマンドは、パイプライン演算子 (|) をプロセス オブジェクトを送信するを使用、 <bpt id="p1">**</bpt>Convertto-html<ept id="p1">**</ept> コマンドレットです。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>The command uses the <bpt id="p1">*</bpt>Property<ept id="p1">*</ept> parameter to select three properties of the process objects to be included in the table.</source>
          <target state="translated">コマンドを使用して、 <bpt id="p1">*</bpt>プロパティ<ept id="p1">*</ept> パラメーター テーブルに含まれるプロセス オブジェクトの 3 つのプロパティを選択します。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>The command uses the <bpt id="p1">*</bpt>Title<ept id="p1">*</ept> parameter to specify a title for the HTML page.</source>
          <target state="translated">このコマンドは、 <bpt id="p1">*</bpt>タイトル<ept id="p1">*</ept> の HTML ページのタイトルを指定するパラメーターです。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>The command also uses the redirection operator (<ph id="ph1">\&gt;</ph>) to send the resulting HTML to a file named Proc.htm.</source>
          <target state="translated">コマンドでは、リダイレクト演算子も使用して (<ph id="ph1">\&gt;</ph>) Proc.htm という名前のファイルに結果の HTML を送信します。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>The second command uses the Invoke-Item cmdlet (alias = ii) to open the Proc.htm in the default browser.</source>
          <target state="translated">2 番目のコマンドは、Invoke-Item コマンドレット (エイリアスは ii) を使用して既定のブラウザーで Proc.htm を開きます。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>The two commands are separated by a semicolon (;).</source>
          <target state="translated">2 つのコマンドは、セミコロン (;) で区切られます。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Example 5: Create a web page to display service objects</source>
          <target state="translated">例 5: サービス オブジェクトを表示する web ページを作成します。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>This command creates an HTML page of the service objects that the Get-Service cmdlet returns.</source>
          <target state="translated">このコマンドは、Get-Service コマンドレットを返すサービス オブジェクトの HTML ページを作成します。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>The command uses the <bpt id="p1">*</bpt>CssUri<ept id="p1">*</ept> parameter to specify a cascading style sheet for the HTML page.</source>
          <target state="translated">このコマンドは、 <bpt id="p1">*</bpt>CssUri<ept id="p1">*</ept> の HTML ページのカスケード スタイル シートを指定するパラメーターです。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">*</bpt>CssUri<ept id="p1">*</ept> parameter adds an additional <ph id="ph1">\&lt;</ph>link rel="stylesheet" type="text/css"/ href="test.css"<ph id="ph2">\&gt;</ph> tag to the resulting HTML.</source>
          <target state="translated"> <bpt id="p1">*</bpt>CssUri<ept id="p1">*</ept> パラメーターは、その後追加 <ph id="ph1">\&lt;</ph>リンクの rel ="stylesheet"の種類、"text/css"=/href="test.css"<ph id="ph2">\&gt;</ph> を結果の HTML タグ。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>The HREF attribute in the tag contains the name of the style sheet.</source>
          <target state="translated">このタグの HREF 属性には、スタイル シートの名前が含まれています。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Example 6: Create a web page to display service objects</source>
          <target state="translated">例 6: は、サービス オブジェクトを表示する web ページを作成します。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>This command creates an HTML page of the service objects that the Get-Service cmdlet returns.</source>
          <target state="translated">このコマンドは、Get-Service コマンドレットを返すサービス オブジェクトの HTML ページを作成します。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>The command uses the <bpt id="p1">*</bpt>As<ept id="p1">*</ept> parameter to specify a list format.</source>
          <target state="translated">コマンドを使用して、 <bpt id="p1">*</bpt>として<ept id="p1">*</ept> パラメーターを一覧形式を指定します。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>The redirection operator (<ph id="ph1">\&gt;</ph>) sends the resulting HTML to the Services.htm file.</source>
          <target state="translated">リダイレクト演算子 (<ph id="ph1">\&gt;</ph>) Services.htm ファイルに結果の HTML を送信します。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Example 7: Create a web table for the current date</source>
          <target state="translated">例 7: が、現在の日付 web テーブルを作成します。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>This command uses <bpt id="p1">**</bpt>ConvertTo-Html<ept id="p1">**</ept> to generate an HTML table of the current date.</source>
          <target state="translated">このコマンドを使用して <bpt id="p1">**</bpt>Convertto-html<ept id="p1">**</ept> を現在の日付の HTML テーブルを生成します。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>The command uses the Get-Date cmdlet to get the current date.</source>
          <target state="translated">このコマンドは、Get-Date コマンドレットを使用して現在の日付を取得します。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>It uses a pipeline operator (|) to send the results to the <bpt id="p1">**</bpt>ConvertTo-Html<ept id="p1">**</ept> cmdlet (aliased as <bpt id="p2">**</bpt>cth<ept id="p2">**</ept>).</source>
          <target state="translated">使用して、パイプライン演算子 (|)、結果を <bpt id="p1">**</bpt>Convertto-html<ept id="p1">**</ept> コマンドレット (別名として <bpt id="p2">**</bpt>cth<ept id="p2">**</ept>)。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>ConvertTo-Html<ept id="p1">**</ept> command includes the <bpt id="p2">*</bpt>Fragment<ept id="p2">*</ept> parameter, which limits the output to an HTML table.</source>
          <target state="translated"> <bpt id="p1">**</bpt>Convertto-html<ept id="p1">**</ept> コマンドが含まれています、 <bpt id="p2">*</bpt>フラグメント<ept id="p2">*</ept> パラメーターで、HTML テーブルに出力を制限します。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>As a result, the other elements of an HTML page, such as the <ph id="ph1">\&lt;</ph>HEAD<ph id="ph2">\&gt;</ph> and <ph id="ph3">\&lt;</ph>BODY<ph id="ph4">\&gt;</ph> tags, are omitted.</source>
          <target state="translated">その結果、HTML の他の要素] ページなど、 <ph id="ph1">\&lt;</ph>ヘッド<ph id="ph2">\&gt;</ph> と <ph id="ph3">\&lt;</ph>本文<ph id="ph4">\&gt;</ph> 、タグを省略しています。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Example 8: Create a web page to display PowerShell events</source>
          <target state="translated">例 8: は、PowerShell のイベントを表示する web ページを作成します。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>This command uses the Get-EventLog cmdlet to get events from the Windows PowerShell event log.</source>
          <target state="translated">このコマンドでは、Get-eventlog コマンドレットを使用して、Windows PowerShell イベント ログからイベントを取得します。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>It uses a pipeline operator (|) to send the events to the <bpt id="p1">**</bpt>ConvertTo-Html<ept id="p1">**</ept> cmdlet, which converts the events to HTML format.</source>
          <target state="translated">イベントを送信し、パイプライン演算子 (|) を使用、 <bpt id="p1">**</bpt>Convertto-html<ept id="p1">**</ept> コマンドレットに渡して、HTML 形式に変換します。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>ConvertTo-Html<ept id="p1">**</ept> command uses the <bpt id="p2">*</bpt>Property<ept id="p2">*</ept> parameter to select only the ID, Level, and Task properties of the event.</source>
          <target state="translated"> <bpt id="p1">**</bpt>Convertto-html<ept id="p1">**</ept> コマンドでは、 <bpt id="p2">*</bpt>プロパティ<ept id="p2">*</ept> パラメーターは、イベントの ID、レベル、およびタスクのプロパティのみを選択します。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>Example 9: Create a web page to display specified services</source>
          <target state="translated">例 9: が指定されたサービスを表示する web ページを作成します。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>This command creates and opens a Web page that displays the services on the computer that begin with A. It uses the <bpt id="p1">*</bpt>Title<ept id="p1">*</ept>, <bpt id="p2">*</bpt>Body<ept id="p2">*</ept>, <bpt id="p3">*</bpt>PreContent<ept id="p3">*</ept>, and <bpt id="p4">*</bpt>PostContent<ept id="p4">*</ept> parameters of <bpt id="p5">**</bpt>ConvertTo-Html<ept id="p5">**</ept> to customize the output.</source>
          <target state="translated">このコマンドを作成し、コンピューター A で始まるのサービスを表示する Web ページを開きます使用して、 <bpt id="p1">*</bpt>タイトル<ept id="p1">*</ept>, 、<bpt id="p2">*</bpt>本文<ept id="p2">*</ept>, 、<bpt id="p3">*</bpt>PreContent<ept id="p3">*</ept>, 、および <bpt id="p4">*</bpt>PostContent<ept id="p4">*</ept> のパラメーター <bpt id="p5">**</bpt>Convertto-html<ept id="p5">**</ept> 出力をカスタマイズします。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>The first part of the command uses the Get-Service cmdlet to get the services on the computer that begin with A. The command uses a pipeline operator (|) to send the results to the <bpt id="p1">**</bpt>ConvertTo-Html<ept id="p1">**</ept> cmdlet.</source>
          <target state="translated">コマンドの最初の部分では、Get-service コマンドレットを使用して、A で始まるコンピューター上のサービスの取得コマンドは、結果を送信するにはパイプライン演算子 (|) を使用する、 <bpt id="p1">**</bpt>Convertto-html<ept id="p1">**</ept> コマンドレットです。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>The command uses a redirection operator (<ph id="ph1">\&gt;</ph>) to send the output to the Services.htm file.</source>
          <target state="translated">このコマンドは、リダイレクト演算子を使用 (<ph id="ph1">\&gt;</ph>) Services.htm ファイルに出力を送信します。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>A semicolon (;) ends the first command and starts a second command, which uses the Invoke-Item cmdlet (alias = "ii") to open the Services.htm file in the default browser.</source>
          <target state="translated">セミコロン (;) は、最初のコマンドを終了し、2 番目のコマンドを開始します。2 番目のコマンドは Invoke-Item コマンドレット (エイリアスは "ii") を使用して Services.htm ファイルを既定のブラウザーで開きます。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>PARAMETERS</source>
          <target state="translated">パラメータ</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>-As</source>
          <target state="translated">別のユーザーとして</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>Specifies whether the object is formatted as a table or a list.</source>
          <target state="translated">オブジェクトは、テーブルまたはリストとして書式設定するかどうかを指定します。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>The acceptable values for this parameter are: Table and List.</source>
          <target state="translated">このパラメーターの使用可能な値: テーブルおよび一覧します。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>The default value is Table.</source>
          <target state="translated">既定値はテーブルです。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>The Table value generates an HTML table that resembles the Windows PowerShell table format.</source>
          <target state="translated">テーブルの値では、Windows PowerShell の表形式に似た HTML テーブルを生成します。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>The header row displays the property names.</source>
          <target state="translated">ヘッダー行には、プロパティ名が表示されます。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>Each table row represents an object and displays the object's values for each property.</source>
          <target state="translated">各テーブル行は、オブジェクトを表し、各プロパティのオブジェクトの値を表示します。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>The List value generates a two-column HTML table for each object that resembles the Windows PowerShell list format.</source>
          <target state="translated">リストの値では、Windows PowerShell] ボックスの一覧形式に似たオブジェクトごとに 2 つの列の HTML テーブルを生成します。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>The first column displays the property name; the second column displays the property value.</source>
          <target state="translated">最初の列には、プロパティ名が表示されます。2 番目の列には、プロパティ値が表示されます。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>-Body</source>
          <target state="translated">本体</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>Specifies the text, as an array, to add after the opening <ph id="ph1">\&lt;</ph>BODY<ph id="ph2">\&gt;</ph> tag.</source>
          <target state="translated">開始後に追加する、配列として、テキストを指定 <ph id="ph1">\&lt;</ph>本文<ph id="ph2">\&gt;</ph> タグ。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>By default, there is no text in that position.</source>
          <target state="translated">既定では、その位置にテキストがありません。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>-CssUri</source>
          <target state="translated">-CssUri</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>Specifies the Uniform Resource Identifier (URI) of the cascading style sheet (CSS) that is applied to the HTML file.</source>
          <target state="translated">HTML ファイルに適用されるカスケード スタイル シート (CSS) の Uniform Resource Identifier (URI) を指定します。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>The URI is included in a style sheet link in the output.</source>
          <target state="translated">URI は、出力のスタイル シートのリンクに含まれます。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>-Fragment</source>
          <target state="translated">フラグメント</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>Indicates that this cmdlet generates only an HTML table.</source>
          <target state="translated">このコマンドレットは、HTML テーブルのみを生成することを示します。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>The HTML, HEAD, TITLE, and BODY tags are omitted.</source>
          <target state="translated">HTML、HEAD、TITLE、および BODY タグは省略されます。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>-Head</source>
          <target state="translated">ヘッド</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>Specifies the content of the <ph id="ph1">\&lt;</ph>HEAD<ph id="ph2">\&gt;</ph> tag as an array.</source>
          <target state="translated">内容を指定、 <ph id="ph1">\&lt;</ph>ヘッド<ph id="ph2">\&gt;</ph> タグとして配列します。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>The default is <ph id="ph1">\&lt;</ph>title<ph id="ph2">\&gt;</ph>HTML TABLE<ph id="ph3">\&lt;</ph>/title<ph id="ph4">\&gt;</ph>.</source>
          <target state="translated">既定値は <ph id="ph1">\&lt;</ph>タイトル<ph id="ph2">\&gt;</ph>HTML テーブル<ph id="ph3">\&lt;</ph>/title<ph id="ph4">\&gt;</ph>します。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>If you use the <bpt id="p1">*</bpt>Head<ept id="p1">*</ept> parameter, the <bpt id="p2">*</bpt>Title<ept id="p2">*</ept> parameter is ignored.</source>
          <target state="translated">使用する場合、 <bpt id="p1">*</bpt>ヘッド<ept id="p1">*</ept> 、パラメーター、 <bpt id="p2">*</bpt>タイトル<ept id="p2">*</ept> パラメーターは無視されます。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>-InputObject</source>
          <target state="translated">-Inputobject</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>Specifies the objects to be represented in HTML.</source>
          <target state="translated">HTML で表されるオブジェクトを指定します。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>Enter a variable that contains the objects or type a command or expression that gets the objects.</source>
          <target state="translated">オブジェクトが格納されている変数を入力するか、オブジェクトを取得するコマンドまたは式を入力します。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>If you use this parameter to submit multiple objects, such as all of the services on a computer, <bpt id="p1">**</bpt>ConvertTo-Html<ept id="p1">**</ept> creates a table that displays the properties of a collection or of an array of objects (<bpt id="p2">**</bpt>System.Object<ept id="p2">**</ept><ph id="ph1">\[\]</ph>).</source>
          <target state="translated">このパラメーターを使用して、すべてのコンピューターでは、サービスなどの複数のオブジェクトを送信する場合は、 <bpt id="p1">**</bpt>Convertto-html<ept id="p1">**</ept> 、オブジェクトの配列またはコレクションのプロパティを表示するテーブルを作成 (<bpt id="p2">**</bpt>System.Object<ept id="p2">**</ept><ph id="ph1">\[\]</ph>)。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>To create a table of the individual objects, use the pipeline operator to pipe the objects to <bpt id="p1">**</bpt>ConvertTo-Html<ept id="p1">**</ept>.</source>
          <target state="translated">個々 のオブジェクトのテーブルを作成するには、パイプを使用するオブジェクトをパイプライン演算子を使用 <bpt id="p1">**</bpt>Convertto-html<ept id="p1">**</ept>します。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>-PostContent</source>
          <target state="translated">-PostContent</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>Specifies text to add after the closing <ph id="ph1">\&lt;</ph>/TABLE<ph id="ph2">\&gt;</ph> tag.</source>
          <target state="translated">終了後に追加するテキストを指定 <ph id="ph1">\&lt;</ph>/table<ph id="ph2">\&gt;</ph> タグ。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>By default, there is no text in that position.</source>
          <target state="translated">既定では、その位置にテキストがありません。</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>-PreContent</source>
          <target state="translated">-PreContent</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>Specifies an array of text to add before the opening <ph id="ph1">\&lt;</ph>TABLE<ph id="ph2">\&gt;</ph> tag.</source>
          <target state="translated">開始する前に追加する文字列の配列を指定 <ph id="ph1">\&lt;</ph>テーブル<ph id="ph2">\&gt;</ph> タグ。</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>By default, there is no text in that position.</source>
          <target state="translated">既定では、その位置にテキストがありません。</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>-Property</source>
          <target state="translated">-プロパティ</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>Specifies the properties of the objects in the HTML.</source>
          <target state="translated">HTML では、オブジェクトのプロパティを指定します。</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>The value of the <bpt id="p1">*</bpt>Property<ept id="p1">*</ept> parameter can be a new calculated property.</source>
          <target state="translated">値、 <bpt id="p1">*</bpt>プロパティ<ept id="p1">*</ept> パラメーターは、新しい集計プロパティを指定できます。</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>To create a calculated property, use a hash table.</source>
          <target state="translated">集計プロパティを作成するには、ハッシュ テーブルを使用します。</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>Valid keys are:</source>
          <target state="translated">有効なキーは次のとおりです。</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>Label <ph id="ph1">\&lt;</ph>string<ph id="ph2">\&gt;</ph> (unlike with Select-Object or Format-Table, the Name key is not supported)</source>
          <target state="translated">ラベル <ph id="ph1">\&lt;</ph>文字列<ph id="ph2">\&gt;</ph> (とは異なり、Select-object または表の書式設定に名前のキーはサポートされません)</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>Expression <ph id="ph1">\&lt;</ph>string<ph id="ph2">\&gt;</ph> or <ph id="ph3">\&lt;</ph>script block</source>
          <target state="translated">式 <ph id="ph1">\&lt;</ph>文字列<ph id="ph2">\&gt;</ph> または <ph id="ph3">\&lt;</ph>スクリプト ブロック</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>-Title</source>
          <target state="translated">-タイトル</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>Specifies a title for the HTML file, that is, the text that appears between the <ph id="ph1">\&lt;</ph>TITLE<ph id="ph2">\&gt;</ph> tags.</source>
          <target state="translated">HTML ファイルは、間に表示されるテキストは、タイトルを指定、 <ph id="ph1">\&lt;</ph>タイトル<ph id="ph2">\&gt;</ph> タグ。</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>CommonParameters</source>
          <target state="translated">CommonParameters</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutVariable, -OutBuffer, -PipelineVariable, -Verbose, -WarningAction, and -WarningVariable.</source>
          <target state="translated">このコマンドレットは、共通のパラメーターをサポートしています:-デバッグ、-erroraction、-errorvariable、- InformationAction-InformationVariable、- OutVariable、-OutBuffer、- PipelineVariable、- Verbose、および - WarningVariable です。</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>For more information, see about_CommonParameters (http://go.microsoft.com/fwlink/?LinkID=113216).</source>
          <target state="translated">詳細については、about_CommonParameters (http://go.microsoft.com/fwlink/?LinkID=113216) を参照してください。</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>INPUTS</source>
          <target state="translated">入力</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>System.Management.Automation.PSObject</source>
          <target state="translated">System.Management.Automation.PSObject</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>You can pipe any .NET object to <bpt id="p1">**</bpt>ConvertTo-Html<ept id="p1">**</ept>.</source>
          <target state="translated">任意の .NET オブジェクトをパイプ処理できます <bpt id="p1">**</bpt>Convertto-html<ept id="p1">**</ept>します。</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>OUTPUTS</source>
          <target state="translated">出力</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>System.String or System.Xml.XmlDocument</source>
          <target state="translated">System.String または System.Xml.XmlDocument</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>This cmdlet returns a series of strings that comprise valid HTML.</source>
          <target state="translated">このコマンドレットでは、一連の有効な HTML を構成する文字列を返します。</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>NOTES</source>
          <target state="translated">ノート</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>To use this cmdlet, pipe one or more objects to the cmdlet or use the <bpt id="p1">*</bpt>InputObject<ept id="p1">*</ept> parameter to specify the object.</source>
          <target state="translated">このコマンドレットを使用するには、コマンドレットを使用する 1 つ以上のオブジェクトをパイプ処理、 <bpt id="p1">*</bpt>InputObject<ept id="p1">*</ept> パラメーター オブジェクトを指定します。</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>When the input consists of multiple objects, the output of these two methods is quite different.</source>
          <target state="translated">入力が複数のオブジェクトで構成されている場合、これら 2 つのメソッドの出力は大きく異なります。</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>When you pipe multiple objects to a cmdlet, Windows PowerShell sends the objects to the cmdlet one at a time.</source>
          <target state="translated">コマンドレットに複数のオブジェクトをパイプするときに Windows PowerShell は、一度にいずれかのコマンドレットに、オブジェクトを送信します。</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>As a result, <bpt id="p1">**</bpt>ConvertTo-Html<ept id="p1">**</ept> creates a table that displays the individual objects.</source>
          <target state="translated">その結果、 <bpt id="p1">**</bpt>Convertto-html<ept id="p1">**</ept> 個々 のオブジェクトが表示されるテーブルを作成します。</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>For example, if you pipe the processes on a computer to <bpt id="p1">**</bpt>ConvertTo-Html<ept id="p1">**</ept>, the resulting table displays all of the processes.</source>
          <target state="translated">たとえば、コンピューター上のプロセスをパイプする <bpt id="p1">**</bpt>Convertto-html<ept id="p1">**</ept>, 、結果のテーブルでは、すべてのプロセスが表示されます。</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>When you use the <bpt id="p1">*</bpt>InputObject<ept id="p1">*</ept> parameter to submit multiple objects, <bpt id="p2">**</bpt>ConvertTo-Html<ept id="p2">**</ept> receives these objects as a collection or as an array.</source>
          <target state="translated">使用すると、 <bpt id="p1">*</bpt>InputObject<ept id="p1">*</ept> を複数のオブジェクトを送信するパラメーター <bpt id="p2">**</bpt>Convertto-html<ept id="p2">**</ept> コレクションまたは配列として、これらのオブジェクトを受け取ります。</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>As a result, it creates a table that displays the array and its properties, not the items in the array.</source>
          <target state="translated">その結果、配列内の項目ではなく、配列とプロパティを表示するテーブルが作成されます。</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>For example, if you use <bpt id="p1">*</bpt>InputObject<ept id="p1">*</ept> to submit the processes on a computer to <bpt id="p2">**</bpt>ConvertTo-Html<ept id="p2">**</ept>, the resulting table displays an object array (<bpt id="p3">**</bpt>System.Object<ept id="p3">**</ept><ph id="ph1">\[\]</ph>) and its properties.</source>
          <target state="translated">例では、使用する場合の <bpt id="p1">*</bpt>InputObject<ept id="p1">*</ept> をコンピューター上のプロセスを送信する <bpt id="p2">**</bpt>Convertto-html<ept id="p2">**</ept>, 、結果のテーブルは、オブジェクトの配列を表示 (<bpt id="p3">**</bpt>System.Object<ept id="p3">**</ept><ph id="ph1">\[\]</ph>) とそのプロパティです。</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>To comply with the XHTML Strict DTD, the DOCTYPE tag is modified accordingly:</source>
          <target state="translated">XHTML の厳密な DTD を順守するには、DOCTYPE タグはそれに応じて変更されます。</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>(<ph id="ph1">\&lt;</ph>!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"       "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd"<ph id="ph2">\&gt;</ph>)</source>
          <target state="translated">(<ph id="ph1">\&lt;</ph>!DOCTYPE html PUBLIC"-//W3C//DTD XHTML 1.0 Strict//EN""http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd"<ph id="ph2">\&gt;</ph>)</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>RELATED LINKS</source>
          <target state="translated">関連リンク</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>ConvertTo-Csv</source>
          <target state="translated">ConvertTo-Csv</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>ConvertTo-Json</source>
          <target state="translated">ConvertTo-Json</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>ConvertTo-Xml</source>
          <target state="translated">ConvertTo-Xml</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>Export-Clixml</source>
          <target state="translated">Export-clixml コマンドレット</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>Import-Clixml</source>
          <target state="translated">Import-clixml</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>