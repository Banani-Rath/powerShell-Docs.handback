<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-1c394fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">548820b31c670cb76209906d1258cdbb8feff608</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">reference\3.0\Microsoft.PowerShell.Utility\Get-EventSubscriber.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions" />
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">6690bae94f7ce8c69acbda631be9e6006de65ad7</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">c2f7e9235476e2b7f445efd792448621f5a434dd</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>powershell, cmdlet</source>
          <target state="translated">powershell コマンドレット</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Get-EventSubscriber</source>
          <target state="translated">Get-eventsubscriber</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Get-EventSubscriber</source>
          <target state="translated">Get-eventsubscriber</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>SYNOPSIS</source>
          <target state="translated">概要</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Gets the event subscribers in the current session.</source>
          <target state="translated">現在のセッションのイベント サブスクライバーを取得します。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>SYNTAX</source>
          <target state="translated">構文</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>BySource (Default)</source>
          <target state="translated">BySource (既定値)</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>ById</source>
          <target state="translated">ById</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>DESCRIPTION</source>
          <target state="translated">説明</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The Get-EventSubscriber cmdlet gets the event subscribers in the current session.</source>
          <target state="translated">Get-EventSubscriber コマンドレットは、現在のセッションのイベント サブスクライバーを取得します。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>When you subscribe to an event by using a Register event cmdlet, an event subscriber is added to your Windows PowerShell session, and the events to which you subscribed are added to your event queue whenever they are raised.</source>
          <target state="translated">Register イベント コマンドレットを使用してイベントをサブスクライブすると、Windows PowerShell セッションにイベント サブスクライバーが追加され、サブスクライブ先のイベントは発生するたびにイベント キューに追加されます。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>To cancel an event subscription, delete the event subscriber by using the Unregister-Event cmdlet.</source>
          <target state="translated">イベント サブスクリプションを取り消すには、Unregister-Event コマンドレットを使用してイベント サブスクライバーを削除します。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>EXAMPLES</source>
          <target state="translated">例</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>-------------------------- EXAMPLE 1 --------------------------</source>
          <target state="translated">-------------------------- 例 1 --------------------------</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>This example uses a Get-EventSubscriber command to get the event subscriber for a timer event.</source>
          <target state="translated">この例は、Get-EventSubscriber コマンドを使用して、タイマー イベントのためのイベント サブスクライバーを取得します。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>The first command uses the New-Object cmdlet to create an instance of a timer object.</source>
          <target state="translated">最初のコマンドは、New-Object コマンドレットを使用して、タイマー オブジェクトのインスタンスを作成します。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>It saves the new timer object in the $timer variable.</source>
          <target state="translated">新しいタイマー オブジェクトは $timer 変数に保存されます。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>The second command uses the Get-Member cmdlet to display the events that are available for timer objects.</source>
          <target state="translated">2 番目のコマンドは、Get-Member コマンドレットを使用して、タイマー オブジェクトに使用できるイベントを表示します。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>The command uses the Type parameter of the Get-Member cmdlet with a value of Event.</source>
          <target state="translated">このコマンドは、Event の値を指定して Get-Member コマンドレットの Type パラメーターを使用します。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>The third command uses the Register-ObjectEvent cmdlet to register for the Elapsed event on the timer object.</source>
          <target state="translated">3 番目のコマンドは、Register-ObjectEvent コマンドレットを使用して、タイマー オブジェクトの Elapsed イベントを登録します。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>The fourth command uses the Get-EventSubscriber cmdlet to get the event subscriber for the Elapsed event.</source>
          <target state="translated">4 番目のコマンドは、Get-EventSubscriber コマンドレットを使用して、Elapsed イベントのイベント サブスクライバーを取得します。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>-------------------------- EXAMPLE 2 --------------------------</source>
          <target state="translated">-------------------------- EXAMPLE 2 --------------------------</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>This example shows how to use the dynamic module in the PSEventJob object in the Action property of the event subscriber.</source>
          <target state="translated">この例では、イベント サブスクライバーの Action プロパティで PSEventJob オブジェクト内の動的モジュールを使用する方法を示します。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>The first command uses the New-Object cmdlet to create a timer object.</source>
          <target state="translated">最初のコマンドは、New-Object コマンドレットを使用してタイマー オブジェクトを作成します。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>The second command sets the interval of the timer to 500 (milliseconds).</source>
          <target state="translated">2 番目のコマンドは、タイマーの間隔を 500 (ミリ秒) に設定します。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>The third command uses the Register-ObjectEvent cmdlet to register the Elapsed event of the timer object.</source>
          <target state="translated">3 番目のコマンドは、Register-ObjectEvent コマンドレットを使用して、タイマー オブジェクトの Elapsed イベントを登録します。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>The command includes an action that handles the event.</source>
          <target state="translated">このコマンドには、イベントを処理するアクションが含まれています。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Whenever the timer interval elapses, an event is raised and the commands in the action run.</source>
          <target state="translated">タイマーの間隔が経過するたびに、イベントが発生してアクション内のコマンドが実行されます。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>In this case, the Get-Random cmdlet generates a random number between 0 and 100 and saves it in the $random variable.</source>
          <target state="translated">この場合、Get-Random コマンドレットは、0 ～ 100 の乱数を生成し、$random 変数に保存します。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>The source identifier of the event is Timer.Random.</source>
          <target state="translated">イベントのソース識別子は Timer.Random です。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>When you use an Action parameter in a Register-ObjectEvent command, the command returns a PSEventJob object that represents the action.</source>
          <target state="translated">Register-ObjectEvent コマンドで Action パラメーターを使用する場合、このコマンドはアクションを表す PSEventJob オブジェクトを返します。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>The fourth command enables the timer.</source>
          <target state="translated">4 番目のコマンドは、タイマーを有効にします。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>The fifth command uses the Get-EventSubscriber cmdlet to get the event subscriber of the Timer.Random event.</source>
          <target state="translated">5 番目のコマンドは、Get-EventSubscriber コマンドレットを使用して、Timer.Random イベントのイベント サブスクライバーを取得します。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>It saves the event subscriber object in the $subscriber variable.</source>
          <target state="translated">イベント サブスクライバー オブジェクトは $subscriber 変数に保存されます。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>The sixth command shows that the Action property of the event subscriber object contains a PSEventJob object.</source>
          <target state="translated">6 番目のコマンドは、イベント サブスクライバー オブジェクトの Action プロパティに PSEventJob オブジェクトが含まれていることを示します。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>In fact, it contains the same PSEventJob object that the Register-ObjectEvent command returned.</source>
          <target state="translated">実際には、Register-ObjectEvent コマンドで返されるオブジェクトと同じ PSEventJob オブジェクトが含まれています。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>The seventh command uses the Format-List cmdlet to display all of the properties of the PSEventJob object in the Action property in a list.</source>
          <target state="translated">7 番目のコマンドは、Format-List コマンドレットを使用して、Action プロパティ内の PSEventJob オブジェクトのすべてのプロパティを一覧に表示します。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>The result reveal that the PSEventJob object has a Module property that contains a dynamic script module that implements the action.</source>
          <target state="translated">この結果により、PSEventJob オブジェクトには、アクションを実装する動的スクリプト モジュールを含む Module プロパティが保持されることがわかります。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>The remaining commands use the call operator (&amp;) to invoke the command in the module and display the value of the $random variable.</source>
          <target state="translated">その他のコマンドには、呼び出し演算子 (&amp;) を使用してモジュール内のコマンドを呼び出し、$random 変数の値を表示します。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>You can use the call operator to invoke any command in a module, including commands that are not exported.</source>
          <target state="translated">呼び出し演算子を使用すると、エクスポートされないコマンドを含め、モジュール内の任意のコマンドを呼び出すことができます。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>In this case, the commands show the random number that is being generated when the Elapsed event occurs.</source>
          <target state="translated">この例では、これらのコマンドにより Elapsed イベントが発生したときに生成される乱数が示されます。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>For more information about modules, see about_Modules.</source>
          <target state="translated">モジュールについての詳細については、「about_Modules」を参照してください。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>PARAMETERS</source>
          <target state="translated">パラメータ</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>-Force</source>
          <target state="translated">-Force</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Gets all event subscribers, including subscribers for events that are hidden by using the SupportEvent parameter of Register-ObjectEvent, Register-WmiEvent, and Register-EngineEvent.</source>
          <target state="translated">Register-ObjectEvent、Register-WmiEvent、および Register-EngineEvent の SupportEvent パラメーターを使用することにより、すべてのイベント サブスクライバー (非表示になっているイベントのためのサブスクライバーを含める) を取得します。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>-SourceIdentifier</source>
          <target state="translated">-SourceIdentifier</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Gets only the event subscribers with the specified SourceIdentifier property value.</source>
          <target state="translated">指定した SourceIdentifier プロパティ値を持つイベント サブスクライバーのみを取得します。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>By default, Get-EventSubscriber gets all event subscribers in the session.</source>
          <target state="translated">既定では、Get-EventSubscriber は、セッション内のすべてのイベント サブスクライバーを取得します。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Wildcards are not permitted.</source>
          <target state="translated">ワイルドカードは使用できません。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>This parameter is case-sensitive.</source>
          <target state="translated">このパラメーターでは、大文字と小文字が区別されます。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>-SubscriptionId</source>
          <target state="translated">-サブスクリプション Id</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Gets only the specified subscription identifier.</source>
          <target state="translated">指定したサブスクリプション識別子のみを取得します。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>By default, Get-EventSubscriber gets all event subscribers in the session.</source>
          <target state="translated">既定では、Get-EventSubscriber は、セッション内のすべてのイベント サブスクライバーを取得します。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>CommonParameters</source>
          <target state="translated">CommonParameters</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutVariable, -OutBuffer, -PipelineVariable, -Verbose, -WarningAction, and -WarningVariable.</source>
          <target state="translated">このコマンドレットは、共通のパラメーターをサポートしています:-デバッグ、-erroraction、-errorvariable、- InformationAction-InformationVariable、- OutVariable、-OutBuffer、- PipelineVariable、- Verbose、および - WarningVariable です。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>For more information, see about_CommonParameters (http://go.microsoft.com/fwlink/?LinkID=113216).</source>
          <target state="translated">詳細については、about_CommonParameters (http://go.microsoft.com/fwlink/?LinkID=113216) を参照してください。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>INPUTS</source>
          <target state="translated">入力</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>None</source>
          <target state="translated">None</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>You cannot pipe input to this cmdlet.</source>
          <target state="translated">パイプを使用してこのコマンドレットに入力を渡すことはできません。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>OUTPUTS</source>
          <target state="translated">出力</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>System.Management.Automation.PSEventSubscriber</source>
          <target state="translated">System.Management.Automation.PSEventSubscriber</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>Get-EventSubscriber returns an object that represents each event subscriber.</source>
          <target state="translated">Get-EventSubscriber は、各イベント サブスクライバーを表すオブジェクトを返します。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>NOTES</source>
          <target state="translated">ノート</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>The New-Event cmdlet, which creates a custom event, does not generate a subscriber.</source>
          <target state="translated">カスタム イベントを作成する New-Event コマンドレットは、サブスクライバーを生成しません。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>Therefore, the Get-EventSubscriber cmdlet will not find a subscriber object for these events.</source>
          <target state="translated">したがって、Get-EventSubscriber コマンドレットは、これらのイベントのサブスクライバー オブジェクトを検索します。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>However, if you use the Register-EngineEvent cmdlet to subscribe to a custom event (in order to forward the event or to specify an action), Get-EventSubscriber will find the subscriber that Register-EngineEvent generates.</source>
          <target state="translated">ただし、Register-EngineEvent コマンドレットを使用して、(イベントを転送するために、またはアクションを指定するために) カスタム イベントをサブスクライブする場合、Get-EventSubscriber は Register-EngineEvent が生成するサブスクライバーを検索します。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>Events, event subscriptions, and the event queue exist only in the current session.</source>
          <target state="translated">イベント、イベント サブスクリプション、およびイベント キューは、現在のセッションにのみ存在します。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>If you close the current session, the event queue is discarded and the event subscription is canceled.</source>
          <target state="translated">現在のセッションを閉じた場合、イベント キューが破棄され、イベント サブスクリプションが取り消されます。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>RELATED LINKS</source>
          <target state="translated">関連リンク</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>Get-Event</source>
          <target state="translated">Get-Event</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>New-Event</source>
          <target state="translated">New-Event</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>Register-EngineEvent</source>
          <target state="translated">Register-engineevent</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>Register-ObjectEvent</source>
          <target state="translated">Register-objectevent</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>Register-WmiEvent</source>
          <target state="translated">Register-wmievent</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>Remove-Event</source>
          <target state="translated">削除イベント</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>Unregister-Event</source>
          <target state="translated">イベントの登録を解除</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>Wait-Event</source>
          <target state="translated">待機イベント</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>