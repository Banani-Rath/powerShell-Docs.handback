<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-1c394fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">4e52ac7d7a7fcf521b77018c297e44d60ec069b8</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">reference\3.0\Microsoft.PowerShell.Core\About\about_Functions_Advanced_Parameters.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions" />
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">0ce315c8cd9e465979c2573740d88a33ba9caa10</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">8a6df0f99aece19895c05d69883252558965d64b</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>about_Functions_Advanced_Parameters</source>
          <target state="translated">about_Functions_Advanced_Parameters</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>powershell, cmdlet</source>
          <target state="translated">powershell コマンドレット</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>About Functions Advanced Parameters</source>
          <target state="translated">関数パラメーターの詳細について</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>about_Functions_Advanced_Parameters</source>
          <target state="translated">about_Functions_Advanced_Parameters</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>about_Functions_Advanced_Parameters</source>
          <target state="translated">about_Functions_Advanced_Parameters</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>SHORT DESCRIPTION</source>
          <target state="translated">概要</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Explains how to add parameters to advanced functions.</source>
          <target state="translated">高度な関数にパラメーターを追加する方法について説明します。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>LONG DESCRIPTION</source>
          <target state="translated">詳細説明</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>You can add parameters to the advanced functions that you write, and use parameter attributes and arguments to limit the parameter values that function users submit with the parameter.</source>
          <target state="translated">ユーザーが作成した高度な関数にパラメーターを追加でき、関数のユーザーがパラメーターと共に送信されるパラメーター値を制限するパラメーターの属性と引数を使用することができます。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The parameters that you add to your function are available to users in addition to the common parameters that Windows PowerShell adds automatically to all cmdlets and advanced functions.</source>
          <target state="translated">関数に追加したパラメーターは、Windows PowerShell は、すべてのコマンドレットと高度な関数に自動的に追加する一般的なパラメーター以外にユーザーが使用できます。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>For more information about the Windows PowerShell common parameters, see about_CommonParameters (http://go.microsoft.com/fwlink/?LinkID=113216).</source>
          <target state="translated">Windows PowerShell 共通パラメーターの詳細については、about_CommonParameters (http://go.microsoft.com/fwlink/?LinkID=113216) を参照してください。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Beginning in Windows PowerShell 3.0, you can use splatting with @Args to represent the parameters in a command.</source>
          <target state="translated">Windows PowerShell 3.0 以降では、使えばスプラッティング @Args とコマンドのパラメーターを表すできます。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>This technique is valid on simple and advanced functions.</source>
          <target state="translated">この手法は、シンプルで高度な機能に有効です。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>For more information, see about_Functions (http://go.microsoft.com/fwlink/?LinkID=113231) and about_Splatting (http://go.microsoft.com/fwlink/?LinkID=262720).</source>
          <target state="translated">詳細については、about_Functions (http://go.microsoft.com/fwlink/?LinkID=113231) と about_Splatting (http://go.microsoft.com/fwlink/?LinkID=262720) を参照してください。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Static Parameters Static parameters are parameters that are always available in the function.</source>
          <target state="translated">静的パラメーターを静的パラメーターは、常に、関数で使用できるパラメーターです。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Most parameters in Windows PowerShell cmdlets and scripts are static parameters.</source>
          <target state="translated">Windows PowerShell コマンドレットとスクリプトのほとんどのパラメーターは、静的パラメーターです。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>The following example shows the declaration of a ComputerName parameter that has the following characteristics:</source>
          <target state="translated">次の例では、次の特性を備えた ComputerName パラメーターの宣言を示します。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>It is mandatory (required).</source>
          <target state="translated">必須では (必須)。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>It takes input from the pipeline.</source>
          <target state="translated">パイプラインから入力がかかります。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>It takes an array of strings as input.</source>
          <target state="translated">入力として文字列の配列を取得します。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Param</source>
          <target state="translated">Param</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>(</source>
          <target state="translated">(</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>[parameter(Mandatory=$true, ValueFromPipeline=$true)] [String[]] $ComputerName</source>
          <target state="translated">[パラメーター (必須 $true ValueFromPipeline の = = $true)][文字列 $ComputerName]</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>)</source>
          <target state="translated">)です。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Attributes of Parameters</source>
          <target state="translated">パラメーターの属性</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>This section describes the attributes that you can add to function parameters.</source>
          <target state="translated">このセクションでは、関数のパラメーターに追加できる属性について説明します。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>All attributes are optional.</source>
          <target state="translated">すべての属性は省略できます。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>However, if you omit the CmdletBinding attribute, then to be recognized as an advanced function, the function must include the Parameter attribute.</source>
          <target state="translated">ただし、CmdletBinding 属性を省略した場合、高度な関数として認識されるように関数は、含める必要がありますパラメーター属性です。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>You can add one or multiple attributes in each parameter declaration.</source>
          <target state="translated">各パラメーターの宣言では、1 つまたは複数の属性を追加できます。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>There is no limit to the number of attributes that you can add to a parameter declaration.</source>
          <target state="translated">パラメーター宣言に追加できる属性数に制限はありません。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>The Parameter Attribute</source>
          <target state="translated">パラメーター属性</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>The Parameter attribute is used to declare the attributes of function parameters.</source>
          <target state="translated">パラメーター属性は関数のパラメーターの属性を宣言するために使用します。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>The Parameter attribute is optional, and you can omit it if none of the parameters of your functions need attributes, but to be recognized as an advanced function (rather than a simple function), a function must have either the CmdletBinding attribute or the Parameter attribute, or both.</source>
          <target state="translated">パラメーター属性は省略可能で、(単純な関数ではなく)、高度な関数として認識されるには、関数の必要性属性のパラメーターなしの場合は省略できます CmdletBinding 属性パラメーター属性またはその両方を関数として使用することがあります。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>The Parameter attribute has arguments that define the characteristics of the parameter, such as whether the parameter is mandatory or optional.</source>
          <target state="translated">パラメーター属性には、パラメーターが必須か省略可能かどうかなど、パラメーターの特性を定義する引数があります。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Use the following syntax to declare the Parameter attribute, an argument, and an argument value.</source>
          <target state="translated">パラメーター属性、引数、および引数の値を宣言するのにには、次の構文を使用します。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>The parentheses that enclose the argument and its value must follow "Parameter" with no intervening space.</source>
          <target state="translated">引数とその値を囲むかっこは、「パラメーター」を介在するスペースを入れずに従う必要があります。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Param</source>
          <target state="translated">Param</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>(</source>
          <target state="translated">(</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>[parameter(Argument=value)] $ParameterName</source>
          <target state="translated">[parameter(Argument=value)] $ParameterName</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>)</source>
          <target state="translated">)です。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Use commas to separate arguments within the parentheses.</source>
          <target state="translated">かっこで囲まれた引数を区切るコンマを使用します。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Use the following syntax to declare two arguments of the Parameter attribute.</source>
          <target state="translated">次の構文を使用すると、パラメーターの属性の 2 つの引数を宣言できます。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Param</source>
          <target state="translated">Param</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>(</source>
          <target state="translated">(</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>[parameter(Argument1=value1, Argument2=value2)]</source>
          <target state="translated">[パラメーター ([引数 1] = value1, [引数 2] = value2)]</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>)</source>
          <target state="translated">)です。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>If you use the Parameter attribute without arguments (as an alternative to using the CmdletBinding attribute), the parentheses that follow the attribute name are still required.</source>
          <target state="translated">引数を使用しないパラメーター属性 (として CmdletBinding 属性を使用する代わりに) を使用する属性名に続くかっこはまだ必要があります。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Param</source>
          <target state="translated">Param</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>(</source>
          <target state="translated">(</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>[parameter()] $ParameterName</source>
          <target state="translated">[parameter()] $ParameterName</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>)</source>
          <target state="translated">)です。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Mandatory Argument</source>
          <target state="translated">必須の引数</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>The Mandatory argument indicates that the parameter is required.</source>
          <target state="translated">必須の引数は、パラメーターが必要であることを示します。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>If this argument is not specified, the parameter is an optional parameter.</source>
          <target state="translated">この引数が指定されていない場合は、省略可能なパラメーターです。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>The following example declares the ComputerName parameter.</source>
          <target state="translated">次の例では、ComputerName パラメーターを宣言します。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>It uses the Mandatory argument to make the parameter mandatory.</source>
          <target state="translated">必須の引数を使用し、パラメーターを必須にします。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Param</source>
          <target state="translated">Param</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>(</source>
          <target state="translated">(</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>[parameter(Mandatory=$true)] [String[]] $ComputerName</source>
          <target state="translated">[parameter(Mandatory=$true)][文字列 $ComputerName]</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>)</source>
          <target state="translated">)です。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>Position Argument</source>
          <target state="translated">位置の引数</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>The Position argument determines whether the parameter name is required when the parameter is used in a command.</source>
          <target state="translated">位置の引数は、コマンドで、パラメーターを使用する場合、パラメーター名が必要かどうかを決定します。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>When a parameter declaration includes the Position argument, the parameter name can be omitted and Windows PowerShell identifies the unnamed parameter value by its position (or order) in the list of unnamed parameter values in the command.</source>
          <target state="translated">パラメーター宣言には、位置の引数が含まれている場合は、パラメーター名を省略でき、Windows PowerShell がコマンドの名前のないパラメーター値の一覧での位置 (または順序) によって名前のないパラメーター値を識別します。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>If the Position argument is not specified, the parameter name (or a parameter name alias or abbreviation) must precede the parameter value whenever the parameter is used in a command.</source>
          <target state="translated">位置の引数が指定されていない場合、パラメーター名 (またはパラメーター名のエイリアスまたは略称) する必要がありますの前にパラメーター値、パラメーターをコマンドで使用されるたびに。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>By default, all function parameters are positional.</source>
          <target state="translated">既定では、すべての関数のパラメーターは位置指定します。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>Windows PowerShell assigns position numbers to parameters in the order in which the parameters are declared in the function.</source>
          <target state="translated">Windows PowerShell では、パラメーターが関数で宣言される順序でパラメーターに位置の番号が割り当てられます。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>To disable this feature, set the value of the PositionalBinding argument of the CmdletBinding attribute to $False.</source>
          <target state="translated">この機能を無効にするには、$False を CmdletBinding 属性の PositionalBinding 引数の値を設定します。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>The Position argument takes precedence over the value of the PositionalBinding argument for the parameters on which it is declared.</source>
          <target state="translated">位置の引数は、宣言されているパラメーターの PositionalBinding 引数の値よりも優先されます。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>For more information, see PositionalBinding in about_Functions_CmdletBindingAttribute.</source>
          <target state="translated">詳細については、about_Functions_CmdletBindingAttribute PositionalBinding を参照してください。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>The value of the Position argument is specified as an integer.</source>
          <target state="translated">位置の引数の値は、整数として指定されます。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>A position value of 0 represents the first position in the command, a position value of 1 represents the second position in the command, and so on.</source>
          <target state="translated">0 の位置の値は、コマンドでは、最初の位置を表す、1 の位置の値がコマンドでは、2 番目の位置を表します。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>If a function has no positional parameters, Windows PowerShell assigns positions to each parameter based on the order in which the parameters are declared.</source>
          <target state="translated">位置指定パラメーター、関数がない場合は、Windows PowerShell は、パラメーターが宣言されている順序に基づいて、各パラメーターに位置を割り当てます。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>However, as a best practice, do not rely on this assignment.</source>
          <target state="translated">ただし、ベスト プラクティスとして依存しないこの割り当てします。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>When you want parameters to be positional, use the Position argument.</source>
          <target state="translated">位置が指定するパラメーターを設定する場合は、位置引数を使用します。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>The following example declares the ComputerName parameter.</source>
          <target state="translated">次の例では、ComputerName パラメーターを宣言します。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>It uses the Position argument with a value of 0.</source>
          <target state="translated">値が 0 で、位置の引数を使用します。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>As a result, when "-ComputerName" is omitted from command, its value must be the first or only unnamed parameter value in the command.</source>
          <target state="translated">その結果、"-ComputerName"を省略するとコマンドから、値として初または唯一のコマンドは、パラメーター値の名前のないです。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>Param</source>
          <target state="translated">Param</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>(</source>
          <target state="translated">(</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>[parameter(Position=0)] [String[]] $ComputerName</source>
          <target state="translated">[parameter(Position=0)][文字列 $ComputerName]</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>)</source>
          <target state="translated">)です。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>NOTE: When the Get-Help cmdlet displays the corresponding "Position?"</source>
          <target state="translated">注: と Get-help コマンドレット位置が表示されます、対応する"?"</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>parameter attribute, the position value is incremented by 1.</source>
          <target state="translated">パラメーター属性に、位置の値は 1 ずつ増加します。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>For example, a parameter with a Position argument value of 0 has a parameter attribute of "Position?</source>
          <target state="translated">たとえば、0 の位置の引数の値を持つパラメーターが"の位置のパラメーター属性を持つですか。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>1."</source>
          <target state="translated">1."</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>ParameterSetName Argument</source>
          <target state="translated">ParameterSetName 引数</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>The ParameterSetName argument specifies the parameter set to which a parameter belongs.</source>
          <target state="translated">ParameterSetName 引数は、パラメーターが属しているセットのパラメーターを指定します。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>If no parameter set is specified, the parameter belongs to all the parameter sets defined by the function.</source>
          <target state="translated">パラメーター セットが指定されていない場合、パラメーターは、関数で定義されたすべてのパラメーター セットに属しています。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>Therefore, to be unique, each parameter set must have at least one parameter that is not a member of any other parameter set.</source>
          <target state="translated">そのため、一意である、各パラメーター セットではその他のパラメーター セットのメンバーではない 1 つ以上のパラメーターが必要です。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>The following example declares a ComputerName parameter in the Computer parameter set, a UserName parameter in the User parameter set, and a Summary parameter in both parameter sets.</source>
          <target state="translated">次の例では、コンピューターのパラメーター セットの ComputerName パラメーター、ユーザーのパラメーター セット内のユーザー名パラメーターおよび両方のパラメーター セットに集計パラメーターを宣言します。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>Param</source>
          <target state="translated">Param</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>(</source>
          <target state="translated">(</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>[parameter(Mandatory=$true, ParameterSetName="Computer")] [String[]] $ComputerName,</source>
          <target state="translated">[パラメーター (必須 $true ParameterSetName の = =「コンピューター」)][文字列 $ComputerName、]</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>[parameter(Mandatory=$true, ParameterSetName="User")] [String[]] $UserName,</source>
          <target state="translated">[パラメーター (必須 $true ParameterSetName の = =「ユーザー」)][文字列 $UserName、]</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>[parameter(Mandatory=$false)] [Switch] $Summary</source>
          <target state="translated">[parameter(Mandatory=$false)][Switch] $Summary</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>)</source>
          <target state="translated">)です。</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>You can specify only one ParameterSetName value in each argument and only one ParameterSetName argument in each Parameter attribute.</source>
          <target state="translated">各パラメーター属性では、各引数の 1 つだけの ParameterSetName 値は、1 つだけの ParameterSetName 引数を指定できます。</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>To indicate that a parameter appears in more than one parameter set, add additional Parameter attributes.</source>
          <target state="translated">パラメーターが 1 つ以上のパラメーター セットに表示されることを示すためには、パラメーターの追加の属性を追加します。</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>The following example explicitly adds the Summary parameter to the Computer and User parameter sets.</source>
          <target state="translated">次の例は、コンピューターとユーザー パラメーター セットに明示的に概要のパラメーターを追加します。</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>The Summary parameter is mandatory in one parameter set and optional in the other.</source>
          <target state="translated">概要パラメーターは、設定と、他の省略可能なパラメーターを 1 つに必須です。</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>Param</source>
          <target state="translated">Param</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>(</source>
          <target state="translated">(</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>[parameter(Mandatory=$true, ParameterSetName="Computer")] [String[]] $ComputerName,</source>
          <target state="translated">[パラメーター (必須 $true ParameterSetName の = =「コンピューター」)][文字列 $ComputerName、]</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>[parameter(Mandatory=$true, ParameterSetName="User")] [String[]] $UserName,</source>
          <target state="translated">[パラメーター (必須 $true ParameterSetName の = =「ユーザー」)][文字列 $UserName、]</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>[parameter(Mandatory=$false, ParameterSetName="Computer")] [parameter(Mandatory=$true, ParameterSetName="User")] [Switch] $Summary</source>
          <target state="translated">[パラメーター (必須 $false ParameterSetName の = =「コンピューター」)][パラメーター (必須 $true ParameterSetName の = =「ユーザー」)][Switch] $Summary</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>)</source>
          <target state="translated">)です。</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>For more information about parameter sets, see "Cmdlet Parameter Sets" in the MSDN library at http://go.microsoft.com/fwlink/?LinkId=142183.</source>
          <target state="translated">パラメーター セットの詳細については、「コマンドレット パラメーター設定」http://go.microsoft.com/fwlink/?LinkId=142183 で、MSDN ライブラリを参照してください。</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>ValueFromPipeline Argument</source>
          <target state="translated">ValueFromPipeline 引数</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>The ValueFromPipeline argument indicates that the parameter accepts input from a pipeline object.</source>
          <target state="translated">ValueFromPipeline 引数は、パラメーターがパイプライン オブジェクトからの入力を受け取ることを示します。</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>Specify this argument if the function accepts the entire object, not just a property of the object.</source>
          <target state="translated">関数は、全体を受け入れる場合は、この引数を指定だけでなく、オブジェクトのプロパティのオブジェクトします。</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>The following example declares a ComputerName parameter that is mandatory and accepts an object that is passed to the function from the pipeline.</source>
          <target state="translated">次の例では、必須であり、パイプラインから関数に渡されるオブジェクトを受け取ります ComputerName パラメーターを宣言します。</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>Param</source>
          <target state="translated">Param</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>(</source>
          <target state="translated">(</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>[parameter(Mandatory=$true, ValueFromPipeline=$true)] [String[]] $ComputerName</source>
          <target state="translated">[パラメーター (必須 $true ValueFromPipeline の = = $true)][文字列 $ComputerName]</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>)</source>
          <target state="translated">)です。</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>ValueFromPipelineByPropertyName Argument</source>
          <target state="translated">ValueFromPipelineByPropertyName 引数</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>The valueFromPipelineByPropertyName argument indicates that the parameter accepts input from a property of a pipeline object.</source>
          <target state="translated">ValueFromPipelineByPropertyName 引数は、パラメーターがパイプライン オブジェクトのプロパティからの入力を受け取ることを示します。</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>The object property must have the same name or alias as the parameter.</source>
          <target state="translated">オブジェクトのプロパティは、パラメーターと同じ名前または別名が必要です。</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>For example, if the function has a ComputerName parameter, and the piped object has a ComputerName property, the value of the ComputerName property is assigned to the ComputerName parameter of the function.</source>
          <target state="translated">たとえば、関数、ComputerName パラメーターには、パイプされたオブジェクトは、ComputerName プロパティを持つ場合は、ComputerName プロパティの値が関数の ComputerName パラメーターに割り当てられます。</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>The following example declares a ComputerName parameter that is mandatory and accepts input from the ComputerName property of the object that is passed to the function through the pipeline.</source>
          <target state="translated">次の例では、必須であり、パイプラインを介して関数に渡されるオブジェクトの ComputerName プロパティからの入力を受け付けるな ComputerName パラメーターを宣言します。</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>Param</source>
          <target state="translated">Param</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>(</source>
          <target state="translated">(</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>[parameter(Mandatory=$true, ValueFromPipelineByPropertyName=$true)] [String[]] $ComputerName</source>
          <target state="translated">[パラメーター (必須 $true ValueFromPipelineByPropertyName の = = $true)][文字列 $ComputerName]</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>)</source>
          <target state="translated">)です。</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>ValueFromRemainingArguments Argument</source>
          <target state="translated">ValueFromRemainingArguments 引数</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>The ValueFromRemainingArguments argument indicates that the parameter accepts all of the parameters values in the command that are not assigned to other parameters of the function.</source>
          <target state="translated">ValueFromRemainingArguments 引数は、パラメーターがすべての関数の他のパラメーターに割り当てられていないコマンドのパラメーターの値を受け入れることを示します。</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>The following example declares a ComputerName parameter that is mandatory and accepts all the remaining parameter values that were submitted to the function.</source>
          <target state="translated">次の例では、必須であり、関数に送信されたすべての残りのパラメーター値を受け入れるな ComputerName パラメーターを宣言します。</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>Param</source>
          <target state="translated">Param</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>(</source>
          <target state="translated">(</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>[parameter(Mandatory=$true, ValueFromRemainingArguments=$true)] [String[]] $ComputerName</source>
          <target state="translated">[パラメーター (必須 $true ValueFromRemainingArguments の = = $true)][文字列 $ComputerName]</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>)</source>
          <target state="translated">)です。</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>HelpMessage Argument</source>
          <target state="translated">HelpMessage 引数</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>The HelpMessage argument specifies a string that contains a brief description of the parameter or its value.</source>
          <target state="translated">HelpMessage 引数は、パラメーターまたはその値の簡単な説明を表す文字列を指定します。</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>Windows PowerShell displays this message in the prompt that appears when a mandatory parameter value is missing from a command.</source>
          <target state="translated">Windows PowerShell は、必須のパラメーター値がコマンドから不足しているときに表示されるダイアログ ボックスで、このメッセージを表示します。</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>This argument has no effect on optional parameters.</source>
          <target state="translated">この引数は省略可能なパラメーターの影響を与えません。</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>The following example declares a mandatory ComputerName parameter and a help message that explains the expected parameter value.</source>
          <target state="translated">次の例では、必須の ComputerName パラメーターおよび期待されるパラメーター値を説明するヘルプ メッセージを宣言します。</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>Param</source>
          <target state="translated">Param</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>(</source>
          <target state="translated">(</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>[parameter(mandatory=$true, HelpMessage="Enter one or more computer names separated by commas.")] [String[]] $ComputerName</source>
          <target state="translated">[パラメーター (必須 $true HelpMessage の = =「1 つまたは複数のコンピューター名をコンマで区切って入力します」)]。[文字列 $ComputerName]</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>)</source>
          <target state="translated">)です。</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>Alias Attribute</source>
          <target state="translated">Alias 属性</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source>The Alias attribute establishes an alternate name for the parameter.</source>
          <target state="translated">Alias 属性は、パラメーターの代替名を確立します。</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source>There is no limit to the number of aliases that you can assign to a parameter.</source>
          <target state="translated">パラメーターに割り当てることができるエイリアスの数に制限はありません。</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source>The following example shows a parameter declaration that adds the "CN" and "MachineName" aliases to the mandatory ComputerName parameter.</source>
          <target state="translated">次の例では、必須の ComputerName パラメーターに"CN"および"MachineName"のエイリアスを追加するパラメーターの宣言を示します。</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source>Param</source>
          <target state="translated">Param</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source>(</source>
          <target state="translated">(</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source>[parameter(Mandatory=$true)] [alias("CN","MachineName")] [String[]] $ComputerName</source>
          <target state="translated">[parameter(Mandatory=$true)][alias("CN","MachineName")][文字列 $ComputerName]</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve">
          <source>)</source>
          <target state="translated">)です。</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source>Parameter and Variable Validation Attributes</source>
          <target state="translated">パラメーターと変数の検証属性</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source>Validation attributes direct Windows PowerShell to test the parameter values that users submit when they call the advanced function.</source>
          <target state="translated">検証属性では、高度な関数を呼び出すときに、ユーザーが送信されるパラメーター値をテストする Windows PowerShell を指示します。</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source>If the parameter values fail the test, an error is generated and the function is not called.</source>
          <target state="translated">パラメーターの値には、テストが失敗した場合は、エラーが生成され、関数は呼び出されません。</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve">
          <source>You can also use some of the validation attributes to restrict the values that users can specify for variables.</source>
          <target state="translated">ユーザーが変数に指定できる値を制限するのにいくつかの検証属性を使用できます。</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve">
          <source>AllowNull Validation Attribute</source>
          <target state="translated">検証の属性を AllowNull</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve">
          <source>The AllowNull attribute allows the value of a mandatory parameter to be null ($null).</source>
          <target state="translated">AllowNull 属性を使用して null にする必須パラメーターの値 ($null)。</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve">
          <source>The following example declares a ComputerName parameter that can have a Null value.</source>
          <target state="translated">次の例では、Null 値には、ComputerName パラメーターを宣言します。</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve">
          <source>Param</source>
          <target state="translated">Param</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve">
          <source>(</source>
          <target state="translated">(</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve">
          <source>[parameter(Mandatory=$true)] [AllowNull()] [String] $ComputerName</source>
          <target state="translated">[parameter(Mandatory=$true)][AllowNull()][String] $ComputerName</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve">
          <source>)</source>
          <target state="translated">)です。</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve">
          <source>AllowEmptyString Validation Attribute</source>
          <target state="translated">AllowEmptyString 検証属性</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve">
          <source>The AllowEmptyString attribute allows the value of a mandatory parameter to be an empty string ("").</source>
          <target state="translated">AllowEmptyString 属性を使用して空の文字列を指定する必須パラメーターの値 ("") です。</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve">
          <source>The following example declares a ComputerName parameter that can have an empty string value.</source>
          <target state="translated">次の例では、空の文字列値が、ComputerName パラメーターを宣言します。</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve">
          <source>Param</source>
          <target state="translated">Param</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve">
          <source>(</source>
          <target state="translated">(</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve">
          <source>[parameter(Mandatory=$true)] [AllowEmptyString()] [String] $ComputerName</source>
          <target state="translated">[parameter(Mandatory=$true)][AllowEmptyString()][String] $ComputerName</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve">
          <source>)</source>
          <target state="translated">)です。</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve">
          <source>AllowEmptyCollection Validation Attribute</source>
          <target state="translated">AllowEmptyCollection 検証属性</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve">
          <source>The AllowEmptyCollection attribute allows the value of a mandatory parameter to be an empty collection (@()).</source>
          <target state="translated">AllowEmptyCollection 属性を使用して、空のコレクションを指定する必須パラメーターの値 (@())。</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve">
          <source>The following example declares a ComputerName parameter that can have a empty collection value.</source>
          <target state="translated">次の例では、空のコレクションの値には、ComputerName パラメーターを宣言します。</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve">
          <source>Param</source>
          <target state="translated">Param</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve">
          <source>(</source>
          <target state="translated">(</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve">
          <source>[parameter(Mandatory=$true)] [AllowEmptyCollection()] [String[]] $ComputerName</source>
          <target state="translated">[parameter(Mandatory=$true)][AllowEmptyCollection()][文字列 $ComputerName]</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve">
          <source>)</source>
          <target state="translated">)です。</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve">
          <source>ValidateCount Validation Attribute</source>
          <target state="translated">ValidateCount 検証属性</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve">
          <source>The ValidateCount attribute specifies the minimum and maximum number of parameter values that a parameter accepts.</source>
          <target state="translated">ValidateCount 属性は、パラメーターを受け取るパラメーターの値の最小値と最大数を指定します。</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve">
          <source>Windows PowerShell generates an error if the number of parameter values in the command that calls the function is outside that range.</source>
          <target state="translated">Windows PowerShell では、関数を呼び出すコマンドのパラメーター値の数が範囲外にある場合にエラーが発生します。</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve">
          <source>The following parameter declaration creates a ComputerName parameter that takes 1 to 5 parameter values.</source>
          <target state="translated">次のパラメーター宣言では、1 ~ 5 個のパラメーター値を受け取り、ComputerName パラメーターを作成します。</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve">
          <source>Param</source>
          <target state="translated">Param</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve">
          <source>(</source>
          <target state="translated">(</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve">
          <source>[parameter(Mandatory=$true)] [ValidateCount(1,5)] [String[]] $ComputerName</source>
          <target state="translated">[parameter(Mandatory=$true)][ValidateCount(1,5)][文字列 $ComputerName]</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve">
          <source>)</source>
          <target state="translated">)です。</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve">
          <source>ValidateLength Validation Attribute</source>
          <target state="translated">ValidateLength 検証属性</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve">
          <source>The ValidateLength attribute specifies the minimum and maximum number of characters in a parameter or variable value.</source>
          <target state="translated">ValidateLength 属性では、パラメーターまたは変数の値の最小値と最大文字数を指定します。</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve">
          <source>Windows PowerShell generates an error if the length of a value specified for a parameter or a variable is outside of the range.</source>
          <target state="translated">Windows PowerShell では、パラメーターまたは変数の指定された値の長さが範囲外にある場合にエラーが発生します。</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve">
          <source>In the following example, each computer name must have one to 10 characters.</source>
          <target state="translated">次の例では、各コンピューター名には 1 ~ 10 文字が必要です。</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve">
          <source>Param</source>
          <target state="translated">Param</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve">
          <source>(</source>
          <target state="translated">(</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve">
          <source>[parameter(Mandatory=$true)] [ValidateLength(1,10)] [String[]] $ComputerName</source>
          <target state="translated">[parameter(Mandatory=$true)][ValidateLength(1,10)][文字列 $ComputerName]</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve">
          <source>)</source>
          <target state="translated">)です。</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve">
          <source>In the following example, the value of the variable $number must be a minimum of one character in length, and a maximum of ten characters.</source>
          <target state="translated">次の例で $number 変数の値があります 1 文字の最小値と最大 10 個の文字。</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve">
          <source>[Int32][ValidateLength(1,10)]$number = 01</source>
          <target state="translated">[Int32][ValidateLength(1,10)] $number = 01</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve">
          <source>ValidatePattern Validation Attribute</source>
          <target state="translated">ValidatePattern 検証属性</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve">
          <source>The ValidatePattern attribute specifies a regular expression that is compared to the parameter or variable value.</source>
          <target state="translated">ValidatePattern 属性は、パラメーターまたは変数の値と比較される正規表現を指定します。</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve">
          <source>Windows PowerShell generates an error if the value does not match the regular expression pattern.</source>
          <target state="translated">Windows PowerShell は、値が正規表現パターンに一致しない場合、エラーを生成します。</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve">
          <source>In the following example, the parameter value must be a four-digit number, and each digit must be a number 0 to 9.</source>
          <target state="translated">次の例では、パラメーター値は 4 桁の数字を指定する必要がありの各桁が 0 ~ 9 の数値を指定する必要があります。</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve">
          <source>Param</source>
          <target state="translated">Param</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve">
          <source>(</source>
          <target state="translated">(</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve">
          <source>[parameter(Mandatory=$true)] [ValidatePattern("[0-9][0-9][0-9][0-9]")] [String[]] $ComputerName</source>
          <target state="translated">[parameter(Mandatory=$true)][ValidatePattern("[0-9][0-9][0-9][0-9]")][文字列 $ComputerName]</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve">
          <source>)</source>
          <target state="translated">)です。</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve">
          <source>In the following example, the value of the variable $number must be a four-digit number, and each digit must be a number 0 to 9.</source>
          <target state="translated">次の例で $number 変数の値は 4 桁の数字である必要がありの各桁が 0 ~ 9 の数値を指定する必要があります。</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve">
          <source>[Int32][ValidatePattern("[0-9][0-9][0-9][0-9]")]$number = 1111</source>
          <target state="translated">[Int32][ValidatePattern("[0-9][0-9][0-9][0-9]")] $number 1111 =</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve">
          <source>ValidateRange Validation Attribute</source>
          <target state="translated">ValidateRange 検証属性</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve">
          <source>The ValidateRange attribute specifies a numeric range for each parameter or variable value.</source>
          <target state="translated">ValidateRange 属性は、パラメーターまたは変数の値ごとに数値の範囲を指定します。</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve">
          <source>Windows PowerShell generates an error if any value is outside that range.</source>
          <target state="translated">Windows PowerShell では、任意の値が範囲外にある場合にエラーが発生します。</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve">
          <source>In the following example, the value of the Attempts parameter must be between 0 and 10.</source>
          <target state="translated">次の例では、0 ~ 10 で試行パラメーターの値があります。</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve">
          <source>Param</source>
          <target state="translated">Param</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve">
          <source>(</source>
          <target state="translated">(</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve">
          <source>[parameter(Mandatory=$true)] [ValidateRange(0,10)] [Int] $Attempts</source>
          <target state="translated">[parameter(Mandatory=$true)][ValidateRange(0,10)][Int] $Attempts</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve">
          <source>)</source>
          <target state="translated">)です。</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve">
          <source>In the following example, the value of the variable $number must be between 0 and 10.</source>
          <target state="translated">次の例では、0 ~ 10 で $number 変数の値があります。</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve">
          <source>[Int32][ValidateRange(0,10)]$number = 5</source>
          <target state="translated">[Int32][ValidateRange(0,10)] $number = 5</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve">
          <source>ValidateScript Validation Attribute</source>
          <target state="translated">ValidateScript 検証属性</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve">
          <source>The ValidateScript attribute specifies a script that is used to validate a parameter or variable value.</source>
          <target state="translated">ValidateScript 属性は、パラメーターまたは変数の値の検証に使用されるスクリプトを指定します。</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve">
          <source>Windows PowerShell pipes the value to the script, and generates an error if the script returns "false" or if the script throws an exception.</source>
          <target state="translated">Windows PowerShell はパイプを使用して、スクリプトに値および"false"を返し、スクリプトの場合、またはスクリプトには、例外がスローした場合、エラーが発生します。</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve">
          <source>When you use the ValidateScript attribute, the value that is being validated is mapped to the $<bpt id="p1">_</bpt> variable. You can use the $<ept id="p1">_</ept> variable to refer to the value in the script.</source>
          <target state="translated">検証されている値は、$a にマップされている ValidateScript 属性を使用すると<bpt id="p1">_</bpt> 変数です。$ を使用する<ept id="p1">_</ept> 変数をスクリプト内の値を参照してください。</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve">
          <source>In the following example, the value of the EventDate parameter must be greater than or equal to the current date.</source>
          <target state="translated">次の例で EventDate パラメーターの値は、現在の日付以上のよりもでする必要があります。</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve">
          <source>Param</source>
          <target state="translated">Param</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve">
          <source>(</source>
          <target state="translated">(</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve">
          <source>[parameter()] [ValidateScript({$_ -ge (get-date)})] [DateTime] $EventDate</source>
          <target state="translated">[parameter()][ValidateScript ({$_-ge (、get-date)})][DateTime] $EventDate</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve">
          <source>)</source>
          <target state="translated">)です。</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve">
          <source>In the following example, the value of the variable $date must be greater than or equal to the current date and time.</source>
          <target state="translated">次の例では、$date 変数の値があります以上の値を現在の日付と時刻。</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve">
          <source>[DateTime][ValidateScript({$_ -ge (get-date)})]$date = (get-date)</source>
          <target state="translated">[DateTime][ValidateScript ({$_-ge (、get-date)})] $date = (get-date)</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve">
          <source>ValidateSet Attribute</source>
          <target state="translated">ValidateSet 属性</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve">
          <source>The ValidateSet attribute specifies a set of valid values for a parameter or variable.</source>
          <target state="translated">ValidateSet 属性は、パラメーターまたは変数の有効な値のセットを指定します。</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve">
          <source>Windows PowerShell generates an error if a parameter or variable value does not match a value in the set.</source>
          <target state="translated">Windows PowerShell では、パラメーターまたは変数の値がセット内の値と一致しない場合にエラーが発生します。</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve">
          <source>In the following example, the value of the Detail parameter can only be "Low," "Average," or "High."</source>
          <target state="translated">詳細なパラメーターの値は「低」、必ず次の例では、「平均」または「高」にします。</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve">
          <source>Param</source>
          <target state="translated">Param</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve">
          <source>(</source>
          <target state="translated">(</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve">
          <source>[parameter(Mandatory=$true)] [ValidateSet("Low", "Average", "High")] [String[]] $Detail</source>
          <target state="translated">[parameter(Mandatory=$true)][ValidateSet (「低」、「平均」、「高」)][文字列 $Detail]</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve">
          <source>)</source>
          <target state="translated">)です。</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve">
          <source>In the following example, the value of the variable $flavor must be either Chocolate, Strawberry, or Vanilla.</source>
          <target state="translated">次の例で $flavor 変数の値がありますチョコレート、ストロベリー、またはバニラのいずれか。</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve">
          <source>[String][ValidateSet("Chocolate", "Strawberry", "Vanilla")]$flavor = Strawberry</source>
          <target state="translated">[文字列][ValidateSet「チョコレート」、「ストロベリー」(「バニラ」)] $flavor ストロベリー =</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve">
          <source>ValidateNotNull Validation Attribute</source>
          <target state="translated">ValidateNotNull 検証属性</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve">
          <source>The ValidateNotNull attribute specifies that the parameter value cannot be null ($null).</source>
          <target state="translated">ValidateNotNull 属性は、パラメーターの値を null にできないことを指定します ($null)。</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve">
          <source>Windows PowerShell generates an error if the parameter value is null.</source>
          <target state="translated">Windows PowerShell では、パラメーターの値が null の場合にエラーが発生します。</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve">
          <source>The ValidateNotNull attribute is designed to be used when the type of the parameter value is not specified or when the specified type will accept a value of Null.</source>
          <target state="translated">ValidateNotNull 属性は、パラメーター値の型が指定されていない場合、または指定した型が Null 値を受け入れる場合に使用する設計されています。</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve">
          <source>(If you specify a type that will not accept a null value, such as a string, the null value will be rejected without the ValidateNotNull attribute, because it does not match the specified type.)</source>
          <target state="translated">(文字列などの null 値を許可しない型を指定する場合、null 値は拒否されます ValidateNotNull 属性がない場合、指定した型と一致しません。)</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve">
          <source>In the following example, the value of the ID parameter cannot be null.</source>
          <target state="translated">次の例では、ID パラメーターの値を null にできません。</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve">
          <source>Param</source>
          <target state="translated">Param</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve">
          <source>(</source>
          <target state="translated">(</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve">
          <source>[parameter(Mandatory=$true)] [ValidateNotNull()]</source>
          <target state="translated">[parameter(Mandatory=$true)][ValidateNotNull()]</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve">
          <source>$ID</source>
          <target state="translated">$ID</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve">
          <source>)</source>
          <target state="translated">)です。</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve">
          <source>ValidateNotNullOrEmpty Validation Attribute</source>
          <target state="translated">ValidateNotNullOrEmpty 検証属性</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve">
          <source>The ValidateNotNullOrEmpty attribute specifies that the parameter value cannot be null ($null) and cannot be an empty string ("").</source>
          <target state="translated">属性は、パラメーターの値であることを指定する ValidateNotNullOrEmpty ($null) を null に設定し、空の文字列にすることはできません ("") です。</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve">
          <source>Windows PowerShell generates an error if the parameter is used in a function call, but its value is null, an empty string, or an empty array.</source>
          <target state="translated">Windows PowerShell では、エラーはパラメーターが関数の呼び出しで使用されるが、その値が null の場合、空の文字列または空の配列を生成します。</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve">
          <source>Param</source>
          <target state="translated">Param</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve">
          <source>(</source>
          <target state="translated">(</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve">
          <source>[parameter(Mandatory=$true)] [ValidateNotNullOrEmpty()] [String[]] $UserName</source>
          <target state="translated">[parameter(Mandatory=$true)][ValidateNotNullOrEmpty()][文字列 $UserName]</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve">
          <source>)</source>
          <target state="translated">)です。</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve">
          <source>Dynamic Parameters</source>
          <target state="translated">動的パラメーター</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve">
          <source>Dynamic parameters are parameters of a cmdlet, function, or script that are available only under certain conditions.</source>
          <target state="translated">動的パラメーターは、特定の条件下でのみ使用できるコマンドレット、関数、またはスクリプトのパラメーターです。</target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve">
          <source>For example, several provider cmdlets have parameters that are available only when the cmdlet is used in the provider drive, or in a particular path of the provider drive.</source>
          <target state="translated">たとえば、いくつかのプロバイダー コマンドレットでは、コマンドレットは、プロバイダー ドライブまたはプロバイダー ドライブの特定のパスを使用する場合にのみ使用可能なパラメーターがあります。</target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve">
          <source>For example, the Encoding parameter is available on the Add-Content, Get-Content, and Set-Content cmdlets only when it is used in a file system drive.</source>
          <target state="translated">たとえば、Encoding パラメーターは、Add-content に Get-content コマンドレットと Set-content コマンドレットはファイル システム ドライブで使用されている場合にのみです。</target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve">
          <source>You can also create a parameter that appears only when another parameter is used in the function command or when another parameter has a certain value.</source>
          <target state="translated">別のパラメーターが関数のコマンドで使用される場合にのみ、または別のパラメーターがある特定の値に表示されるパラメーターを作成することもできます。</target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve">
          <source>Dynamic parameters can be very useful, but use them only when necessary, because they can be difficult for users to discover.</source>
          <target state="translated">動的パラメーターは、非常に便利ですが、ユーザーを検出することは難しいことができるので、必要な場合にだけ使用します。</target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve">
          <source>To find a dynamic parameter, the user must be in the provider path, use the ArgumentList parameter of the Get-Command cmdlet, or use the Path parameter of Get-Help.</source>
          <target state="translated">ユーザーがプロバイダー パスに存在する必要があります動的パラメーターを検索するには、Get-command コマンドレットの ArgumentList パラメーターを使用してか、Get-help の Path パラメーターを使用しています。</target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve">
          <source>To create a dynamic parameter for a function or script, use the DynamicParam keyword.</source>
          <target state="translated">関数またはスクリプトの動的パラメーターを作成するには、DynamicParam キーワードを使用します。</target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve">
          <source>The syntax is as follows:</source>
          <target state="translated">構文は次のとおりです。</target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve">
          <source>DynamicParam {&lt;statement-list&gt;}</source>
          <target state="translated">DynamicParam {&lt; ステートメント リスト &gt;}</target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve">
          <source>In the statement list, use an If statement to specify the conditions under which the parameter is available in the function.</source>
          <target state="translated">ステートメントのリストで使用されるパラメーターが関数で使用可能な条件を指定するステートメントです。</target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve">
          <source>Use the New-Object cmdlet to create a System.Management.Automation.RuntimeDefinedParameter object to represent the parameter and specify its name.</source>
          <target state="translated">パラメーターを表し、その名前を指定するのに System.Management.Automation.RuntimeDefinedParameter オブジェクトを作成するのにには、New-object コマンドレットを使用します。</target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve">
          <source>You can also use a New-Object command to create a System.Management.Automation.ParameterAttribute object to represent attributes of the parameter, such as Mandatory, Position, or ValueFromPipeline or its parameter set.</source>
          <target state="translated">New-object コマンドを使用して、必須、位置、または ValueFromPipeline またはそのパラメーターのセットなど、パラメーターの属性を表す System.Management.Automation.ParameterAttribute オブジェクトを作成することができます。</target>       </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve">
          <source>The following example shows a sample function with standard parameters named Name and Path, and an optional dynamic parameter named DP1.The DP1 parameter is in the PSet1 parameter set and has a type of Int32.</source>
          <target state="translated">次の例は、標準的なパラメーターの名前とパスをという名前と、省略可能な動的パラメーター DP1 という名前の関数のサンプルを示します。DP1 パラメーターは PSet1 パラメーター セットであり、Int32 型を持ちます。</target>       </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve">
          <source>The DP1 parameter is available in the Sample function only when the value of the Path parameter contains "HKLM:", indicating that it is being used in the HKEY_LOCAL_MACHINE registry drive.</source>
          <target state="translated">Path パラメーターの値が含まれている場合にのみ、DP1 パラメーターが関数のサンプルで使用できる"HKLM:"、HKEY_LOCAL_MACHINE レジストリ ドライブで使用されていることを示します。</target>       </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve">
          <source>function Get-Sample { [CmdletBinding()] Param ([String]$Name, [String]$Path)</source>
          <target state="translated">Get サンプルを機能 {[CmdletBinding()] Param ([String] $Name [String] $Path)</target>       </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve">
          <source>DynamicParam { if ($path -match ".HKLM.:") { $attributes = new-object System.Management.Automation.ParameterAttribute $attributes.ParameterSetName = "__AllParameterSets" $attributes.Mandatory = $false $attributeCollection = new-object ` -Type System.Collections.ObjectModel.Collection[System.Attribute] $attributeCollection.Add($attributes)</source>
          <target state="translated">DynamicParam {場合 ($path-一致"します。HKLM。:") {$attributes = 新しいオブジェクト System.Management.Automation.ParameterAttribute $attributes します。ParameterSetName ="__AllParameterSets"$attributes します。必須 $attributeCollection を $false に = = new-object は、'-型 System.Collections.ObjectModel.Collection[System.Attribute] $attributeCollection.Add($attributes)</target>       </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve">
          <source>$dynParam1 = new-object ` -Type System.Management.Automation.RuntimeDefinedParameter("dp1", [Int32], $attributeCollection)</source>
          <target state="translated">$dynParam1 = new-object は、'-型 System.Management.Automation.RuntimeDefinedParameter("dp1", [Int32], $attributeCollection)</target>       </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve">
          <source>$paramDictionary = new-object ` -Type System.Management.Automation.RuntimeDefinedParameterDictionary $paramDictionary.Add("dp1", $dynParam1) return $paramDictionary } } }</source>
          <target state="translated">$paramDictionary = new-object は、'-型 System.Management.Automation.RuntimeDefinedParameterDictionary $paramDictionary.Add ("dp1"、dynParam1 ドル) を返す $paramDictionary}}}</target>       </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve">
          <source>For more information, see "RuntimeDefinedParameter Class" in the MSDN (Microsoft Developer Network) library at http://go.microsoft.com/fwlink/?LinkID=145130.</source>
          <target state="translated">詳細については、http://go.microsoft.com/fwlink/?LinkID=145130 で MSDN (Microsoft Developer Network) ライブラリの「RuntimeDefinedParameter クラス」を参照してください。</target>       </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve">
          <source>Switch Parameters Switch parameters are parameters with no parameter value.</source>
          <target state="translated">スイッチ パラメーター スイッチ パラメーターとは、パラメーター値のないパラメーターです。</target>       </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve">
          <source>They are effective only when they are used and have only one effect.</source>
          <target state="translated">され場合にのみ、使用される 1 つだけの影響を与えるは効果的です。</target>       </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve">
          <source>For example, the -NoProfile parameter of PowerShell.exe is a switch parameter.</source>
          <target state="translated">たとえば、PowerShell.exe の-noprofile パラメーターは、スイッチ パラメーターです。</target>       </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve">
          <source>To create a switch parameter in a function, specify the Switch type in the parameter definition.</source>
          <target state="translated">スイッチ パラメーターを関数を作成するには、パラメーターの定義のスイッチの種類を指定します。</target>       </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve">
          <source>For example: Param ([Switch]<ph id="ph1">&lt;ParameterName&gt;</ph>) -or- Param</source>
          <target state="translated">例: Param ([スイッチ]<ph id="ph1">&lt;ParameterName&gt;</ph>) - または - Param</target>       </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve">
          <source>(</source>
          <target state="translated">(</target>       </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve">
          <source>[parameter(Mandatory=$false)] [Switch]</source>
          <target state="translated">[parameter(Mandatory=$false)][Switch]</target>       </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve">
          <source>)</source>
          <target state="translated">)です。</target>       </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve">
          <source>Switch parameters are easy to use and are preferred over Boolean parameters, which have a more difficult syntax.</source>
          <target state="translated">スイッチ パラメーターは簡単に使用し、難しく構文のブール値パラメーターよりも優先します。</target>       </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve">
          <source>For example, to use a switch parameter, the user types the parameter in the command.</source>
          <target state="translated">たとえば、スイッチ パラメーターを使用するパラメーターに入力のコマンドは、です。</target>       </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve">
          <source>-IncludeAll</source>
          <target state="translated">-IncludeAll</target>       </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve">
          <source>To use a Boolean parameter, the user types the parameter and a Boolean value.</source>
          <target state="translated">ブール型パラメーターを使用するのには、ユーザーは、パラメーターとブール値を入力します。</target>       </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve">
          <source>-IncludeAll:$true</source>
          <target state="translated">-IncludeAll: $true</target>       </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve">
          <source>When creating switch parameters, choose the parameter name carefully.</source>
          <target state="translated">スイッチ パラメーターを作成するときに、パラメーター名を慎重に選択します。</target>       </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve">
          <source>Be sure that the parameter name communicates the effect of the parameter to the user, and avoid ambiguous terms, such as Filter or Maximum, that might imply that a value is required.</source>
          <target state="translated">パラメーター名が、ユーザーにパラメーターの影響が通信することを確認しフィルターまたは最大値、値が必要であることを示唆するなどのあいまいな用語を回避します。</target>       </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve">
          <source>SEE ALSO</source>
          <target state="translated">関連項目</target>       </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve">
          <source>about_Functions about_Functions_Advanced about_Functions_Advanced_Methods about_Functions_CmdletBindingAttribute about_Functions_OutputTypeAttribute</source>
          <target state="translated">about_Functions about_Functions_Advanced about_Functions_Advanced_Methods about_Functions_CmdletBindingAttribute about_Functions_OutputTypeAttribute</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>