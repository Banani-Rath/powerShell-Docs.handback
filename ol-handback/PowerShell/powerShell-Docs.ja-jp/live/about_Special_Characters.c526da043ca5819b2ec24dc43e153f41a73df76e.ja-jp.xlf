<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-1c394fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">7ab9631646d772b752570785a53e3403aaec8ee7</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">reference\4.0\Microsoft.PowerShell.Core\About\about_Special_Characters.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions" />
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">79fc7d65c36aee7fcb30a86379a5e923869c2415</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">9d6fa30357ace71c2c591357785833273e70da00</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>about_Special_Characters</source>
          <target state="translated">about_Special_Characters</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>powershell, cmdlet</source>
          <target state="translated">powershell コマンドレット</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>About Special Characters</source>
          <target state="translated">特殊文字の概要</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>about_Special_Characters</source>
          <target state="translated">about_Special_Characters</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>TOPIC</source>
          <target state="translated">トピック</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>about_Special_Characters</source>
          <target state="translated">about_Special_Characters</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>SHORT DESCRIPTION</source>
          <target state="translated">概要</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Describes the special characters that you can use to control how Windows PowerShell interprets the next character in a command or parameter.</source>
          <target state="translated">Windows PowerShell でコマンドまたはパラメーターでは、次の文字を解釈する方法を制御するのに使用できる特殊文字について説明します。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>LONG DESCRIPTION</source>
          <target state="translated">詳細説明</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Windows PowerShell supports a set of special character sequences that are used to represent characters that are not part of the standard character set.</source>
          <target state="translated">Windows PowerShell には、標準の文字セットの一部ではない文字を表すために使用される特殊文字のシーケンスがサポートされています。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>The special characters in Windows PowerShell begin with the backtick character, also known as the grave accent (ASCII 96).</source>
          <target state="translated">Windows PowerShell 内の特殊文字で始まります、アクサン グラーブ文字、抑音アクセント (ASCII 96) とも呼ばれます。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>The following special characters are recognized by Windows PowerShell:</source>
          <target state="translated">次の特殊文字は、Windows PowerShell によって認識されます。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>a    Alert <ph id="ph1">`b    Backspace
`</ph>f    Form feed <ph id="ph2">`n    New line
`</ph>r    Carriage return <ph id="ph3">`t    Horizontal tab
`</ph>v    Vertical tab --%   Stop parsing</source>
          <target state="translated">アラートを <ph id="ph1">`b    Backspace
`</ph>f フォーム フィード <ph id="ph2">`n    New line
`</ph>r キャリッジ リターン <ph id="ph3">`t    Horizontal tab
`</ph>v 垂直タブ--% の解析を停止します。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>These characters are case-sensitive.</source>
          <target state="translated">これらの文字は大文字小文字を区別します。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>NULL (`0)</source>
          <target state="translated">NULL ('0)</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Windows PowerShell recognizes a null special character (`0) and represents it with a character code of 0.</source>
          <target state="translated">Windows PowerShell では、null の特殊文字 ('0) を認識し、0 の文字コードを表します。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>It appears as an empty space in the Windows PowerShell output.</source>
          <target state="translated">Windows PowerShell の出力内の空き領域が表示されます。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>This allows you to use Windows PowerShell to read and process text files that use null characters, such as string termination or record termination indicators.</source>
          <target state="translated">これは、読み取りに Windows PowerShell を使用するしてテキスト ファイルを処理する文字列の終了またはレコードの終了マークなどの null 文字を使用できます。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>The null special character is not equivalent to the $null variable, which stores a value of NULL.</source>
          <target state="translated">Null の特殊な文字が NULL の値を格納する $null 変数と同じではありません。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>ALERT (<ph id="ph1">`a)
The alert (`</ph>a) character sends a beep signal to the computer's speaker.</source>
          <target state="translated">アラート (<ph id="ph1">`a)
The alert (`</ph>、) 文字は、コンピューターのスピーカーにビープ音がシグナルを送ります。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>You can use this to warn a user about an impending action.</source>
          <target state="translated">これを使用して、兆候がある操作についてユーザーに警告できます。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>The following command sends two beep signals to the local computer's speaker:</source>
          <target state="translated">次のコマンドは、ローカル コンピューターのスピーカーに 2 つのビープ音がシグナルを送信します。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>for ($i = 0; $i -le 1; $i++){"`a"}</source>
          <target state="translated">($i = 0; $i-le 1; $i++) {"'、"}</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>BACKSPACE (<ph id="ph1">`b)
The backspace character (`</ph>b) moves the cursor back one character, but it does not delete any characters.</source>
          <target state="translated">バック スペース (<ph id="ph1">`b)
The backspace character (`</ph>b)、カーソルを 1 文字を移動しますが、任意の文字は削除されません。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>The following command writes the word "backup", moves the cursor back twice, and then writes the word "out" (preceded by a space and starting at the new position):</source>
          <target state="translated">次のコマンドは、word の"backup"を書き込みますカーソルを移動戻るを 2 回し (先行スペース付きおよび新しい位置以降にある) に"out"という単語を書き込みます。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>"backup<ph id="ph1">`b`</ph>b out"</source>
          <target state="translated">"バックアップ<ph id="ph1">`b`</ph>アウト b"</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>The output from this command is as follows:</source>
          <target state="translated">このコマンドの出力は次のとおりです。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>back out</source>
          <target state="translated">取り消し</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>FORM FEED (<ph id="ph1">`f)
The form feed character (`</ph>f) is a print instruction that ejects the current page and continues printing on the next page.</source>
          <target state="translated">フォーム フィード (<ph id="ph1">`f)
The form feed character (`</ph>f) は、現在のページでは、次のページに印刷を継続して印刷命令します。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>This character affects printed documents only; it does not affect screen output.</source>
          <target state="translated">この文字は影響印刷されたドキュメントだけです。画面出力には影響しません。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>NEW LINE (<ph id="ph1">`n)
The new line character (`</ph>n) inserts a line break immediately after the character.</source>
          <target state="translated">新しい行 (<ph id="ph1">`n)
The new line character (`</ph>n) 文字の直後に改行を挿入します。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>The following example shows how to use the new line character in a Write-Host command:</source>
          <target state="translated">次の例では、Write-host コマンドで改行文字を使用する方法を示します。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>"There are two line breaks<ph id="ph1">`n`</ph>nhere."</source>
          <target state="translated">"2 つの改行がある<ph id="ph1">`n`</ph>nhere"。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>The output from this command is as follows:</source>
          <target state="translated">このコマンドの出力は次のとおりです。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>There are two line breaks</source>
          <target state="translated">2 つの改行があります。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>here.</source>
          <target state="translated">ここでします。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>CARRIAGE RETURN (<ph id="ph1">`r)
The carriage return character (`</ph>r) eliminates the entire line prior to the `r character, as though the prior text were on a different line.</source>
          <target state="translated">キャリッジ リターン (<ph id="ph1">`r)
The carriage return character (`</ph>r) より前のバージョンの行全体を排除、' r の文字までのテキストが別の行にした場合と同様です。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>For example:</source>
          <target state="translated">たとえば、次のように入力します。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Write-Host "Let's not move`rDelete everything before this point."</source>
          <target state="translated">Write-host"みましょう move'rDelete いないこの時点より前にすべてのものです"。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>The output from this command is:</source>
          <target state="translated">このコマンドの出力は次のとおりです。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Delete everything before this point.</source>
          <target state="translated">この時点より前にすべてを削除します。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>HORIZONTAL TAB (<ph id="ph1">`t)
The horizontal tab character (`</ph>t) advances to the next tab stop and continues writing at that point.</source>
          <target state="translated">水平タブ (<ph id="ph1">`t)
The horizontal tab character (`</ph>t) を次のタブ ストップに進めるし、その時点での書き込みが続行されます。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>By default, the Windows PowerShell console has a tab stop at every eighth space.</source>
          <target state="translated">Windows PowerShell コンソールには既定ですべて 8 番目の場所で停止] タブをクリックします。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>For example, the following command inserts two tabs between each column.</source>
          <target state="translated">たとえば、次のコマンドは、各列の間の 2 つのタブを挿入します。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>"Column1<ph id="ph1">`t`</ph>tColumn2<ph id="ph2">`t`</ph>tColumn3"</source>
          <target state="translated">"Column1<ph id="ph1">`t`</ph>tColumn2<ph id="ph2">`t`</ph>tColumn3"</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>The output from this command is:</source>
          <target state="translated">このコマンドの出力は次のとおりです。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Column1         Column2         Column3</source>
          <target state="translated">Column1 列 2 列 3</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>VERTICAL TAB (<ph id="ph1">`v)
The horizontal tab character (`</ph>t) advances to the next vertical tab stop and writes all subsequent output beginning at that point.</source>
          <target state="translated">垂直タブ (<ph id="ph1">`v)
The horizontal tab character (`</ph>t) を次の垂直タブ位置に進めるし、その時点で始まるすべての後続の出力を書き込みます。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>This character affects printed documents only.</source>
          <target state="translated">この文字では、印刷されたドキュメントのみに影響します。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>It does not affect screen output.</source>
          <target state="translated">画面出力には影響しません。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>STOP PARSING  (--%) The stop-parsing symbol (--%) prevents Windows PowerShell from interpreting arguments in program calls as Windows PowerShell commands and expressions.</source>
          <target state="translated">解析を停止 (--%)Stop 解析記号 (-%) Windows PowerShell が Windows PowerShell コマンドと式としてプログラムの呼び出しで引数を解釈するを防止します。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Place the stop-parsing symbol after the program name and before program arguments that might cause errors.</source>
          <target state="translated">プログラム名の後に、エラーを引き起こす可能性のあるプログラムの引数の前に停止解析シンボルを配置します。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>For example, the following Icacls command uses the stop-parsing symbol.</source>
          <target state="translated">たとえば、次の Icacls コマンドは、停止解析シンボルを使用します。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>icacls X:\VMS --% /grant Dom\HVAdmin:(CI)(OI)F</source>
          <target state="translated">icacls X:\VMS--%/grant Dom\HVAdmin:(CI) (OI) F</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Windows PowerShell sends the following command to Icacls.</source>
          <target state="translated">Windows PowerShell は、次のコマンドを Icacls に送信します。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>X:\VMS /grant Dom\HVAdmin:(CI)(OI)F</source>
          <target state="translated">X:\VMS/grant Dom\HVAdmin:(CI) (OI) F</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>For more information about the stop-parsing symbol, see about_Parsing.</source>
          <target state="translated">Stop 解析シンボルの詳細については、about_Parsing を参照してください。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>KEYWORDS</source>
          <target state="translated">キーワード</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>about_Punctuation about_Symbols</source>
          <target state="translated">about_Punctuation about_Symbols</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>SEE ALSO</source>
          <target state="translated">関連項目</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>about_Quoting_Rules about_Escape_Characters</source>
          <target state="translated">about_Quoting_Rules about_Escape_Characters</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>