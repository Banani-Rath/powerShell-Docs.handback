<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-1c394fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">afb9ca4c3a4f2360830ae0869c38f400758a499d</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">reference\3.0\Microsoft.PowerShell.Utility\ConvertTo-Html.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions" />
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">8ff487857c8f3a689fb8452bae3bd57675286b05</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f40df53bbd133ac36778cfb3bf2d1004e8f1baf2</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>powershell, cmdlet</source>
          <target state="translated">powershell コマンドレット</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>ConvertTo-Html</source>
          <target state="translated">ConvertTo-Html</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>ConvertTo-Html</source>
          <target state="translated">ConvertTo-Html</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>SYNOPSIS</source>
          <target state="translated">概要</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Converts Microsoft .NET Framework objects into HTML that can be displayed in a Web browser.</source>
          <target state="translated">Microsoft .NET Framework オブジェクトを Web ブラウザーで表示可能な HTML に変換します。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>SYNTAX</source>
          <target state="translated">構文</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Page (Default)</source>
          <target state="translated">ページ (既定値)</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Fragment</source>
          <target state="translated">フラグメント</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>DESCRIPTION</source>
          <target state="translated">説明</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The ConvertTo-Html cmdlet converts .NET Framework objects into HTML that can be displayed in a Web browser.</source>
          <target state="translated">ConvertTo-Html コマンドレットは、.NET Framework オブジェクトを Web ブラウザーで表示可能な HTML に変換します。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>You can use this cmdlet to display the output of a command in a Web page.</source>
          <target state="translated">このコマンドレットを使用すると、Web ページにコマンドの出力を表示できます。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>You can use the parameters of ConvertTo-Html to select object properties, to specify a table or list format, to specify the HTML page title, to add text before and after the object, and to return only the table or list fragment, instead of a strict DTD page.</source>
          <target state="translated">ConvertTo-Html のパラメーターを使用すると、オブジェクトのプロパティの選択、テーブルまたは一覧書式の指定、HTML ページ タイトルの指定を行うことができます。また、オブジェクトの前後にテキストを追加することや、厳密な DTD のページではなくテーブルまたは一覧のフラグメントのみを返すことができます。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>When you submit multiple objects to ConvertTo-Html, Windows PowerShell creates the table (or list) based on the properties of the first object that you submit.</source>
          <target state="translated">ConvertTo-Html に複数のオブジェクトを送信するときに、Windows PowerShell はユーザーが送信した最初のオブジェクトのプロパティに基づくテーブル (または一覧) を作成します。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>If the remaining objects do not have one of the specified properties, the property value of that object is an empty cell.</source>
          <target state="translated">残りのオブジェクトに指定したプロパティのいずれかがない場合は、そのオブジェクトのプロパティ値が空のセルになります。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>If the remaining objects have additional properties, those property values are not included in the file.</source>
          <target state="translated">残りのオブジェクトに追加のプロパティがある場合は、これらのプロパティ値は、ファイルには含まれません。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>EXAMPLES</source>
          <target state="translated">例</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>-------------------------- EXAMPLE 1 --------------------------</source>
          <target state="translated">-------------------------- 例 1 --------------------------</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>This command creates an HTML page that displays the properties of the current date.</source>
          <target state="translated">このコマンドは、現在の日付のプロパティを表示する HTML ページを作成します。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>It uses the InputObject parameter to submit the results of a Get-Date command to the ConvertTo-Html cmdlet.</source>
          <target state="translated">このコマンドは、InputObject パラメーターを使用して Get-Date コマンドの結果を ConvertTo-Html コマンドレットに送信します。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>-------------------------- EXAMPLE 2 --------------------------</source>
          <target state="translated">-------------------------- EXAMPLE 2 --------------------------</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>This command creates an HTML page that lists the Windows PowerShell aliases in the current console.</source>
          <target state="translated">このコマンドは、現在のコンソールに Windows PowerShell エイリアスを一覧表示する HTML ページを作成します。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>The command uses the Get-Alias cmdlet to get the aliases.</source>
          <target state="translated">このコマンドは、Get-alias コマンドレットを使用してエイリアスを取得します。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>It uses the pipeline operator (|) to send the aliases to the ConvertTo-Html cmdlet, which creates the HTML page.</source>
          <target state="translated">このコマンドは、パイプライン演算子 (|) を使用して ConvertTo-Html コマンドレットにエイリアスを送信し、HTML ページを作成します。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>-------------------------- EXAMPLE 3 --------------------------</source>
          <target state="translated">-------------------------- EXAMPLE 3 --------------------------</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>This command creates an HTML page called pslog.htm that displays the events in the Windows PowerShell event log on the local computer.</source>
          <target state="translated">このコマンドは、ローカル コンピューター上の Windows PowerShell イベント ログでイベントを表示する pslog.htm と呼ばれる HTML ページを作成します。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>It uses the Get-EventLog cmdlet to get the events in the Windows PowerShell log and then uses the pipeline operator (|) to send the events to the ConvertTo-Html cmdlet.</source>
          <target state="translated">このコマンドは、Get-EventLog コマンドレットを使用して Windows PowerShell ログ内のイベントを取得し、次にパイプライン演算子 (|) を使用してそのイベントを ConvertTo-Html コマンドレットに送信します。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>The command also uses the redirection operator (<ph id="ph1">\&gt;</ph>) to send the HTML code to the pslog.htm file.</source>
          <target state="translated">コマンドでは、リダイレクト演算子も使用して (<ph id="ph1">\&gt;</ph>)、pslog.htm ファイルを HTML コードを送信します。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>-------------------------- EXAMPLE 4 --------------------------</source>
          <target state="translated">-------------------------- EXAMPLE 4 --------------------------</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>These commands create and open an HTML page that lists the name, path, and company of the processes on the local computer.</source>
          <target state="translated">これらのコマンドは、ローカル コンピューター上のプロセスの名前、パス、および会社を一覧表示する HTML ページを作成し、開きます。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>The first command uses the Get-Process cmdlet to get objects that represent the processes running on the computer.</source>
          <target state="translated">最初のコマンドは、Get-Service コマンドレットを使用してコンピューターで実行中のプロセスを表すオブジェクトを取得します。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>The command uses the pipeline operator (|) to send the process objects to the ConvertTo-Html cmdlet.</source>
          <target state="translated">このコマンドは、パイプライン演算子 (|) を使用してオブジェクトを ConvertTo-Html コマンドレットに送信します。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>The command uses the Property parameter to select three properties of the process objects to be included in the table.</source>
          <target state="translated">このコマンドは、Property パラメーターを使用してテーブルに含まれるプロセス オブジェクトの 3 つのプロパティを選択します。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>The command uses the Title parameter to specify a title for the HTML page.</source>
          <target state="translated">このコマンドは、Title パラメーターを使用して HTML ページのタイトルを指定します。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>The command also uses the redirection operator (<ph id="ph1">\&gt;</ph>) to send the resulting HTML to a file named Proc.htm.</source>
          <target state="translated">コマンドでは、リダイレクト演算子も使用して (<ph id="ph1">\&gt;</ph>) Proc.htm という名前のファイルに結果の HTML を送信します。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>The second command uses the Invoke-Item cmdlet (alias = ii) to open the Proc.htm in the default browser.</source>
          <target state="translated">2 番目のコマンドは、Invoke-Item コマンドレット (エイリアスは ii) を使用して既定のブラウザーで Proc.htm を開きます。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>The two commands are separated by a semicolon (;).</source>
          <target state="translated">2 つのコマンドは、セミコロン (;) で区切られます。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>-------------------------- EXAMPLE 5 --------------------------</source>
          <target state="translated">-------------------------- EXAMPLE 5 --------------------------</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>This command creates an HTML page of the service objects that the Get-Service cmdlet returns.</source>
          <target state="translated">このコマンドは、Get-Service コマンドレットを返すサービス オブジェクトの HTML ページを作成します。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>The command uses the CssUri parameter to specify a cascading style sheet for the HTML page.</source>
          <target state="translated">このコマンドは、CssUri パラメーターを使用して HTML ページのカスケード スタイル シートを指定します。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>The CssUri parameter adds an additional "<ph id="ph1">\&lt;</ph>link rel="stylesheet" type="text/css" tag to the resulting HTML.</source>
          <target state="translated">CssUri パラメーターを追加するその他"<ph id="ph1">\&lt;</ph>リンクの rel ="stylesheet"の種類、"text/css"タグを結果の HTML を = です。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>The HREF attribute in the tag contains the name of the style sheet.</source>
          <target state="translated">このタグの HREF 属性には、スタイル シートの名前が含まれています。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>-------------------------- EXAMPLE 6 --------------------------</source>
          <target state="translated">-------------------------- EXAMPLE 6 --------------------------</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>This command creates an HTML page of the service objects that the Get-Service cmdlet returns.</source>
          <target state="translated">このコマンドは、Get-Service コマンドレットを返すサービス オブジェクトの HTML ページを作成します。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>The command uses the As parameter to specify a list format.</source>
          <target state="translated">このコマンドは、As パラメーターを使用して一覧書式を指定します。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>The redirection operator (<ph id="ph1">\&gt;</ph>) sends the resulting HTML to the Services.htm file.</source>
          <target state="translated">リダイレクト演算子 (<ph id="ph1">\&gt;</ph>) Services.htm ファイルに結果の HTML を送信します。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>-------------------------- EXAMPLE 7 --------------------------</source>
          <target state="translated">-------------------------- EXAMPLE 7 --------------------------</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>This command uses ConvertTo-Html to generate an HTML table of the current date.</source>
          <target state="translated">このコマンドは、ConvertTo-Html を使用して現在の日付の HTML テーブルを使用します。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>The command uses the Get-Date cmdlet to get the current date.</source>
          <target state="translated">このコマンドは、Get-Date コマンドレットを使用して現在の日付を取得します。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>It uses a pipeline operator (|) to send the results to the ConvertTo-Html cmdlet (aliased as "cth").</source>
          <target state="translated">このコマンドは、パイプライン演算子 (|) を使用して結果を ConvertTo-Html (エイリアスは "ch") コマンドレットに送信します。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>The ConvertTo-Html command includes the Fragment parameter, which limits the output to an HTML table.</source>
          <target state="translated">ConvertTo-Html コマンドに Fragment パラメーターを含めて、HTML テーブルへの出力を制限します。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>As a result, the other elements of an HTML page, such as the <ph id="ph1">\&lt;</ph>HEAD<ph id="ph2">\&gt;</ph> and <ph id="ph3">\&lt;</ph>BODY<ph id="ph4">\&gt;</ph> tags, are omitted.</source>
          <target state="translated">その結果、HTML の他の要素] ページなど、 <ph id="ph1">\&lt;</ph>ヘッド<ph id="ph2">\&gt;</ph> と <ph id="ph3">\&lt;</ph>本文<ph id="ph4">\&gt;</ph> 、タグを省略しています。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>-------------------------- EXAMPLE 8 --------------------------</source>
          <target state="translated">-------------------------- EXAMPLE 8 --------------------------</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>This command uses the Get-EventLog cmdlet to get events from the "Windows PowerShell" event log.</source>
          <target state="translated">このコマンドは、Get-EventLog コマンドレットを使用して "Windows PowerShell" イベント ログからイベントを取得します。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>It uses a pipeline operator (|) to send the events to the ConvertTo-Html cmdlet, which converts the events to HTML format.</source>
          <target state="translated">このコマンドは、パイプライン演算子 (|) を使用して ConvertTo-Html コマンドレットにイベントを送信し、イベントを HTML ページに変換します。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>The ConvertTo-Html command uses the Property parameter to select only the ID, Level, and Task properties of the event.</source>
          <target state="translated">ConvertTo-Html コマンドは、Property パラメーターを使用してイベントの ID、Level、および Task プロパティのみを選択します。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>-------------------------- EXAMPLE 9 --------------------------</source>
          <target state="translated">-------------------------- EXAMPLE 9 --------------------------</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>This command creates and opens a Web page that displays the services on the computer that begin with "A".</source>
          <target state="translated">このコマンドは、コンピューター上の "A" で始まるサービスを表示する Web ページを作成し、開きます。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>It uses the Title, Body, PreContent, and PostContent parameters of ConvertTo-Html to customize the output.</source>
          <target state="translated">このコマンドは、ConvertTo-Html の Title、Body、PreContent、および PostContent パラメーターを使用して出力をカスタマイズします。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>The first part of the command uses the Get-Service cmdlet to get the services on the computer that begin with "A".</source>
          <target state="translated">このコマンドの最初の部分は、Get-Service コマンドレットを使用してコンピューター上の "A" で始まるサービスを取得します。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>The command uses a pipeline operator (|) to send the results to the ConvertTo-Html cmdlet.</source>
          <target state="translated">このコマンドは、パイプライン演算子 (|) を使用して結果を ConvertTo-Html コマンドレットに送信します。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>The command uses a redirection operator (<ph id="ph1">\&gt;</ph>) to send the output to the Services.htm file.</source>
          <target state="translated">このコマンドは、リダイレクト演算子を使用 (<ph id="ph1">\&gt;</ph>) Services.htm ファイルに出力を送信します。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>A semicolon (;) ends the first command and starts a second command, which uses the Invoke-Item cmdlet (alias = "ii") to open the Services.htm file in the default browser.</source>
          <target state="translated">セミコロン (;) は、最初のコマンドを終了し、2 番目のコマンドを開始します。2 番目のコマンドは Invoke-Item コマンドレット (エイリアスは "ii") を使用して Services.htm ファイルを既定のブラウザーで開きます。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>PARAMETERS</source>
          <target state="translated">パラメータ</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>-As</source>
          <target state="translated">別のユーザーとして</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>Determines whether the object is formatted as a table or a list.</source>
          <target state="translated">オブジェクトがテーブルまたは一覧のどちらで書式設定されるかを決定します。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>Valid values are TABLE and LIST.</source>
          <target state="translated">有効な値は、TABLE および LIST です。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>The default value is TABLE.</source>
          <target state="translated">既定値は TABLE です。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>The TABLE value generates an HTML table that resembles the Windows PowerShell table format.</source>
          <target state="translated">TABLE 値は、Windows PowerShell のテーブル形式に似た HTML テーブルを生成します。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>The header row displays the property names.</source>
          <target state="translated">ヘッダー行には、プロパティ名が表示されます。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>Each table row represents an object and displays the object's values for each property.</source>
          <target state="translated">各テーブル行は、オブジェクトを表し、各プロパティのオブジェクトの値を表示します。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>The LIST value generates a two-column HTML table for each object that resembles the Windows PowerShell list format.</source>
          <target state="translated">LIST 値は、Windows PowerShell の一覧形式に似たオブジェクトごとに、2 つの列の HTML テーブルを生成します。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>The first column displays the property name; the second column displays the property value.</source>
          <target state="translated">最初の列には、プロパティ名が表示されます。2 番目の列には、プロパティ値が表示されます。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>-Body</source>
          <target state="translated">本体</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>Specifies the text to add after the opening <ph id="ph1">\&lt;</ph>BODY<ph id="ph2">\&gt;</ph> tag.</source>
          <target state="translated">開始後に追加するテキストを指定 <ph id="ph1">\&lt;</ph>本文<ph id="ph2">\&gt;</ph> タグ。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>By default, there is no text in that position.</source>
          <target state="translated">既定では、その位置にテキストがありません。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>-CssUri</source>
          <target state="translated">-CssUri</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>Specifies the Uniform Resource Identifier (URI) of the cascading style sheet (CSS) that is applied to the HTML file.</source>
          <target state="translated">HTML ファイルに適用されるカスケード スタイル シート (CSS) の Uniform Resource Identifier (URI) を指定します。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>The URI is included in a style sheet link in the output.</source>
          <target state="translated">URI は、出力のスタイル シートのリンクに含まれます。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>-Fragment</source>
          <target state="translated">フラグメント</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>Generates only an HTML table.</source>
          <target state="translated">HTML テーブルのみを生成します。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>The HTML, HEAD, TITLE, and BODY tags are omitted.</source>
          <target state="translated">HTML、HEAD、TITLE、および BODY タグは省略されます。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>-Head</source>
          <target state="translated">ヘッド</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>Specifies the content of the <ph id="ph1">\&lt;</ph>HEAD<ph id="ph2">\&gt;</ph> tag.</source>
          <target state="translated">内容を指定、 <ph id="ph1">\&lt;</ph>ヘッド<ph id="ph2">\&gt;</ph> タグ。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>The default is "<ph id="ph1">\&lt;</ph>title<ph id="ph2">\&gt;</ph>HTML TABLE<ph id="ph3">\&lt;</ph>/title<ph id="ph4">\&gt;</ph>".</source>
          <target state="translated">既定値は"<ph id="ph1">\&lt;</ph>タイトル<ph id="ph2">\&gt;</ph>HTML テーブル<ph id="ph3">\&lt;</ph>/title<ph id="ph4">\&gt;</ph>"です。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>If you use the Head parameter, the Title parameter is ignored.</source>
          <target state="translated">Head パラメーターを使用する場合は、Title パラメーターは無視されます。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>-InputObject</source>
          <target state="translated">-Inputobject</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>Specifies the objects to be represented in HTML.</source>
          <target state="translated">HTML で表されるオブジェクトを指定します。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>Enter a variable that contains the objects or type a command or expression that gets the objects.</source>
          <target state="translated">オブジェクトが格納されている変数を入力するか、オブジェクトを取得するコマンドまたは式を入力します。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>If you use this parameter to submit multiple objects, such as all of the services on a computer, ConvertTo-Html creates a table that displays the properties of a collection or of an array of objects (System.Object<ph id="ph1">\[\]</ph>).</source>
          <target state="translated">Convertto-html が、オブジェクトの配列またはコレクションのプロパティを表示するテーブルを作成するすべてのコンピューターでは、サービスなどの複数のオブジェクトを送信するこのパラメーターを使用する場合 (System.Object<ph id="ph1">\[\]</ph>)。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>To create a table of the individual objects, use the pipeline operator to pipe the objects to ConvertTo-Html.</source>
          <target state="translated">個々のオブジェクトのテーブルを作成するには、パイプライン演算子によりパイプを使用してオブジェクトを ConvertTo-Html に渡します。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>-PostContent</source>
          <target state="translated">-PostContent</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>Specifies text to add after the closing <ph id="ph1">\&lt;</ph>/TABLE<ph id="ph2">\&gt;</ph> tag.</source>
          <target state="translated">終了後に追加するテキストを指定 <ph id="ph1">\&lt;</ph>/table<ph id="ph2">\&gt;</ph> タグ。</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>By default, there is no text in that position.</source>
          <target state="translated">既定では、その位置にテキストがありません。</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>-PreContent</source>
          <target state="translated">-PreContent</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>Specifies text to add before the opening <ph id="ph1">\&lt;</ph>TABLE<ph id="ph2">\&gt;</ph> tag.</source>
          <target state="translated">開始する前に追加するテキストを指定 <ph id="ph1">\&lt;</ph>テーブル<ph id="ph2">\&gt;</ph> タグ。</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>By default, there is no text in that position.</source>
          <target state="translated">既定では、その位置にテキストがありません。</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>-Property</source>
          <target state="translated">-プロパティ</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>Includes the specified properties of the objects in the HTML.</source>
          <target state="translated">HTML 内のオブジェクトの指定したプロパティが含まれます。</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>The value of the Property parameter can be a new calculated property.</source>
          <target state="translated">Property パラメーターの値として、新しい集計プロパティを使用できます。</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>To create a calculated property, use a hash table.</source>
          <target state="translated">集計プロパティを作成するには、ハッシュ テーブルを使用します。</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>Valid keys are:</source>
          <target state="translated">有効なキーは次のとおりです。</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>Label <ph id="ph1">\&lt;</ph>string<ph id="ph2">\&gt;</ph> (unlike with Select-Object or Format-Table, the Name key is not supported)</source>
          <target state="translated">ラベル <ph id="ph1">\&lt;</ph>文字列<ph id="ph2">\&gt;</ph> (とは異なり、Select-object または表の書式設定に名前のキーはサポートされません)</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>Expression <ph id="ph1">\&lt;</ph>string<ph id="ph2">\&gt;</ph> or <ph id="ph3">\&lt;</ph>script block</source>
          <target state="translated">式 <ph id="ph1">\&lt;</ph>文字列<ph id="ph2">\&gt;</ph> または <ph id="ph3">\&lt;</ph>スクリプト ブロック</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>-Title</source>
          <target state="translated">-タイトル</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>Specifies a title for the HTML file, that is, the text that appears between the <ph id="ph1">\&lt;</ph>TITLE<ph id="ph2">\&gt;</ph> tags.</source>
          <target state="translated">HTML ファイルは、間に表示されるテキストは、タイトルを指定、 <ph id="ph1">\&lt;</ph>タイトル<ph id="ph2">\&gt;</ph> タグ。</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>CommonParameters</source>
          <target state="translated">CommonParameters</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutVariable, -OutBuffer, -PipelineVariable, -Verbose, -WarningAction, and -WarningVariable.</source>
          <target state="translated">このコマンドレットは、共通のパラメーターをサポートしています:-デバッグ、-erroraction、-errorvariable、- InformationAction-InformationVariable、- OutVariable、-OutBuffer、- PipelineVariable、- Verbose、および - WarningVariable です。</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>For more information, see about_CommonParameters (http://go.microsoft.com/fwlink/?LinkID=113216).</source>
          <target state="translated">詳細については、about_CommonParameters (http://go.microsoft.com/fwlink/?LinkID=113216) を参照してください。</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>INPUTS</source>
          <target state="translated">入力</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>System.Management.Automation.PSObject</source>
          <target state="translated">System.Management.Automation.PSObject</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>You can pipe any .NET object to ConvertTo-Html.</source>
          <target state="translated">パイプを使用して任意の .NET オブジェクトを ConvertTo-Html に渡すことができます。</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>OUTPUTS</source>
          <target state="translated">出力</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>System.String</source>
          <target state="translated">System.String</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>ConvertTo-Html returns series of strings that comprise valid HTML.</source>
          <target state="translated">ConvertTo-Html は、有効な HTML を構成する一連の文字列を返します。</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>NOTES</source>
          <target state="translated">ノート</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>To use this cmdlet, pipe one or more objects to the cmdlet or use the InputObject parameter to specify the object.</source>
          <target state="translated">このコマンドレットを使用するには、パイプを使用して 1 つまたは複数のオブジェクトをコマンドレットに渡すか、InputObject パラメーターを使用してオブジェクトを指定します。</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>When the input consists of multiple objects, the output of these two methods is quite different.</source>
          <target state="translated">入力が複数のオブジェクトで構成されている場合、これら 2 つのメソッドの出力は大きく異なります。</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>When you pipe multiple objects to a cmdlet, Windows PowerShell sends the objects to the cmdlet one at a time.</source>
          <target state="translated">コマンドレットに複数のオブジェクトをパイプするときに Windows PowerShell は、一度にいずれかのコマンドレットにオブジェクトを送信します。</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>As a result, ConvertTo-Html creates a table that displays the individual objects.</source>
          <target state="translated">その結果、ConvertTo-Html は、個々のオブジェクトを表示するテーブルを作成します。</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>For example, if you pipe the processes on a computer to ConvertTo-Html, the resulting table displays all of the processes.</source>
          <target state="translated">たとえば、パイプを使用してコンピューター上のプロセスを ConvertTo-Html に渡す場合、結果のテーブルは、すべてのプロセスを表示します。</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>When you use the InputObject parameter to submit multiple objects, ConvertTo-Html receives these objects as a collection or as an array.</source>
          <target state="translated">InputObject パラメーターを使用して複数のオブジェクトを送信するときに、Convertto-html は、コレクションまたは配列としてこれらのオブジェクトを受け取ります。</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>As a result, it creates a table that displays the array and its properties, not the items in the array.</source>
          <target state="translated">その結果、配列内の項目ではなく、配列とプロパティを表示するテーブルが作成されます。</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>For example, if you use InputObject to submit the processes on a computer to ConvertTo-Html, the resulting table displays an object array (System.Object<ph id="ph1">\[\]</ph>) and its properties.</source>
          <target state="translated">たとえば、InputObject を使用して Convertto-html にコンピューター上のプロセスを送信する場合、結果のテーブルは表示オブジェクトの配列 (System.object[]<ph id="ph1">\[\]</ph>) とそのプロパティです。</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>To comply with the XHTML Strict DTD,the DOCTYPE tag is modified accordingly:</source>
          <target state="translated">XHTML の厳密な DTD に準拠するには、それに応じて次のように DOCTYPE タグを変更します。</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>(<ph id="ph1">\&lt;</ph>!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"       "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd"<ph id="ph2">\&gt;</ph>)</source>
          <target state="translated">(<ph id="ph1">\&lt;</ph>!DOCTYPE html PUBLIC"-//W3C//DTD XHTML 1.0 Strict//EN""http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd"<ph id="ph2">\&gt;</ph>)</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>RELATED LINKS</source>
          <target state="translated">関連リンク</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>ConvertTo-Csv</source>
          <target state="translated">ConvertTo-Csv</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>ConvertTo-Xml</source>
          <target state="translated">ConvertTo-Xml</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>