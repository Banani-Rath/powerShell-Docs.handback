<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-1c394fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">6b06411909250faddbf13de6546e56e81ac6ae43</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">reference\3.0\Microsoft.PowerShell.Utility\Get-Member.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions" />
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">06672f68c18d04a209d8e0644e4f5de5a130c954</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">0a9eafaee9ae61fea7ff02e0de6650fa2729f6fe</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>powershell, cmdlet</source>
          <target state="translated">powershell コマンドレット</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Get-Member</source>
          <target state="translated">Get-Member</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Get-Member</source>
          <target state="translated">Get-Member</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>SYNOPSIS</source>
          <target state="translated">概要</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Gets the properties and methods of objects.</source>
          <target state="translated">オブジェクトのプロパティとメソッドを取得します。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>SYNTAX</source>
          <target state="translated">構文</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>DESCRIPTION</source>
          <target state="translated">説明</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>The Get-Member cmdlet gets the "members" (properties and methods) of objects.</source>
          <target state="translated">Get-Member コマンドレットは、オブジェクトの "メンバー" (プロパティとメソッド) を取得します。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>To specify the object, use the InputObject parameter or pipe an object to Get-Member.</source>
          <target state="translated">オブジェクトを指定するには、InputObject パラメーターを使用するか、パイプでオブジェクトを Get-Member に渡します。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>To retrieve information about static members (members of the class, not of the instance), use the Static parameter.</source>
          <target state="translated">静的メンバー (インスタンスではなく、クラスのメンバー) に関する情報を取得する場合は、Static パラメーターを使用します。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>To get only certain types of members, such as NoteProperties, use the MemberType parameter.</source>
          <target state="translated">NoteProperties など、特定の型のメンバーだけを取得する場合は、MemberType パラメーターを使用します。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>EXAMPLES</source>
          <target state="translated">例</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>-------------------------- EXAMPLE 1 --------------------------</source>
          <target state="translated">-------------------------- 例 1 --------------------------</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>This command displays the properties and methods of the process objects (System.ServiceProcess.ServiceController) that are generated by the Get-Service cmdlet.</source>
          <target state="translated">このコマンドは、Get-Service コマンドレットによって生成されるプロセス オブジェクト (System.ServiceProcess.ServiceController) のプロパティとメソッドを表示します。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>The command uses the pipeline operator (|) to send the output of a Get-Service command to Get-Member.</source>
          <target state="translated">このコマンドは、パイプライン演算子 (|) を使用して Get-Service コマンドの出力を Get-Member に渡します。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Because the Get-Member part of the command does not have any parameters, it uses all of the default values.</source>
          <target state="translated">コマンドの Get-Member 部分にはパラメーターがないため、既定値がすべて使用されます。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>As such, it gets all member types, but it does not get static members and does not display intrinsic members.</source>
          <target state="translated">そのため、すべてのメンバー型を取得しますが、静的メンバーは取得せず、組み込みメンバーを表示しません。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>-------------------------- EXAMPLE 2 --------------------------</source>
          <target state="translated">-------------------------- EXAMPLE 2 --------------------------</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>This example gets all of the members (properties and methods) of the service objects (System.ServiceProcess.ServiceController) retrieved by the Get-Service cmdlet, including the intrinsic members, such as PSBase and PSObject, and the get_ and set_ methods.</source>
          <target state="translated">この例では、Get-Service コマンドレットで取得されたサービス オブジェクト (System.ServiceProcess.ServiceController) のすべてのメンバー (プロパティとメソッド) を取得します。その中には、PSBase、PSObject などの組み込みメンバーや、get_ メソッド、set_ メソッドなどが含まれます。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>The first command uses the Get-Service cmdlet to get objects that represent the services on the system.</source>
          <target state="translated">最初のコマンドは、Get-Service コマンドレットを使用してシステム上のサービスを表すオブジェクトを取得します。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>It uses a pipeline operator (|) to pass the service objects to the Get-Member cmdlet.</source>
          <target state="translated">このコマンドは、パイプライン演算子 (|) を使用して、サービス オブジェクトを Get-Member コマンドレットに渡します。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>The Get-Member command uses the Force parameter to add the intrinsic members and compiler-generated members of the objects to the display.</source>
          <target state="translated">Get-Member コマンドは、Force パラメーターを使用して組み込みメンバーとコンパイラによって生成されたオブジェクトのメンバーを表示に追加します。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Get-Member gets these members, but it hides them by default.</source>
          <target state="translated">既定では、Get-Member はこれらのメンバーを取得するものの、表示はしません。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>You can use these properties and methods in the same way that you would use an adapted method of the object.</source>
          <target state="translated">これらのプロパティとメソッドは、オブジェクトのアダプター適用対象のメソッドを使用する場合と同じ方法で使用できます。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>The second command shows how to display the value of the PSBase property of the Schedule service.</source>
          <target state="translated">2 番目のコマンドは、Schedule サービスの PSBase プロパティの値を表示する方法を示しています。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>-------------------------- EXAMPLE 3 --------------------------</source>
          <target state="translated">-------------------------- EXAMPLE 3 --------------------------</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>This command gets the methods and properties of service objects that were extended by using the Types.ps1xml file or the Add-Member cmdlet.</source>
          <target state="translated">このコマンドは、Types.ps1xml ファイルまたは Add-Member コマンドレットを使用して拡張されたサービス オブジェクトのメソッドとプロパティを取得します。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>The Get-Member command uses the View parameter to get only the extended members of the service objects.</source>
          <target state="translated">Get-Member コマンドは、View パラメーターを使用して、サービス オブジェクトの拡張されたメンバーだけを取得します。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>In this case, the extended member is the Name property, which is an alias property of the ServiceName property.</source>
          <target state="translated">この場合、拡張されたメンバーは Name プロパティです。このプロパティは、ServiceName プロパティのエイリアス プロパティです。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>-------------------------- EXAMPLE 4 --------------------------</source>
          <target state="translated">-------------------------- EXAMPLE 4 --------------------------</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>This command gets the script properties of event log objects in the System log in Event Viewer.</source>
          <target state="translated">このコマンドは、イベント ビューアーのシステム ログにあるイベント ログ オブジェクトのスクリプト プロパティを取得します。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>In this case, the only script property is the EventID.</source>
          <target state="translated">この場合、スクリプト プロパティは EventID だけです。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>-------------------------- EXAMPLE 5 --------------------------</source>
          <target state="translated">-------------------------- EXAMPLE 5 --------------------------</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>This command gets the script properties of event log objects in the System log in Event Viewer.</source>
          <target state="translated">このコマンドは、イベント ビューアーのシステム ログにあるイベント ログ オブジェクトのスクリプト プロパティを取得します。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>The command uses the MemberType parameter to get only objects with a value of AliasProperty for their MemberType property.</source>
          <target state="translated">このコマンドは、MemberType パラメーターを使用して、MemberType プロパティの AliasProperty の値を持つオブジェクトだけを取得します。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>The command returns the EventID property of the EventLog object.</source>
          <target state="translated">コマンドは、EventLog オブジェクトの EventID プロパティを返します。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>-------------------------- EXAMPLE 6 --------------------------</source>
          <target state="translated">-------------------------- EXAMPLE 6 --------------------------</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>This command gets objects that have a MachineName property from a list of cmdlets.</source>
          <target state="translated">このコマンドは、MachineName プロパティを持つオブジェクトをコマンドレットの一覧から取得します。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>The first command stores the names of several cmdlets in the $a variable.</source>
          <target state="translated">最初のコマンドは、各コマンドレットの名前を $a 変数に保存します。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>The second command uses a ForEach statement to invoke each command, send the results to Get-Member, and limit the results from Get-Member to members that have the name "MachineName."</source>
          <target state="translated">2 番目のコマンドは、ForEach ステートメントを使用して各コマンドを呼び出し、結果を Get-Member に渡して、Get-Member の結果を "MachineName" という名前のメンバーに制限します。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>The results show that only process objects (System.Diagnostics.Process) and service objects (System.ServiceProcess.ServiceController) have a MachineName property.</source>
          <target state="translated">MachineName プロパティを持っているのは、プロセス オブジェクト (System.Diagnostics.Process) とサービス オブ ジェクト (System.ServiceProcess.ServiceController) だけであることが結果に示されています。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>-------------------------- EXAMPLE 7 --------------------------</source>
          <target state="translated">-------------------------- EXAMPLE 7 --------------------------</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>This example demonstrates how to find the properties and methods of an array of objects when you have only one object of the given type.</source>
          <target state="translated">この例は、特定の型のオブジェクトが 1 つしかない場合に、オブジェクトの配列のプロパティとメソッドを調べる方法を示しています。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Because the goal of the command is to find the properties of an array, the first command uses the InputObject parameter.</source>
          <target state="translated">コマンドの目的は配列のプロパティを調べることであるため、最初のコマンドは InputObject パラメーターを使用しています。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>It uses the "at" symbol (@) to indicate an array.</source>
          <target state="translated">また、アットマーク (@) を使用して配列を示しています。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>In this case, the array contains only one object, the integer 1.</source>
          <target state="translated">この場合、配列には、1 つのオブジェクト、つまり整数 1 だけが含まれています。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>The third command uses the Get-Member cmdlet to get the properties and methods of an array of integers, and the command saves them in the $a variable.</source>
          <target state="translated">3 番目のコマンドは、Get-Member コマンドレットを使用して、整数の配列のプロパティとメソッドを取得し、$a 変数に保存します。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>The fourth command uses the Count property of the array to find the number of objects in the $a variable.</source>
          <target state="translated">4 番目のコマンドは、配列の Count プロパティを使用して、$a 変数にあるオブジェクトの数を調べます。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>-------------------------- EXAMPLE 8 --------------------------</source>
          <target state="translated">-------------------------- EXAMPLE 8 --------------------------</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>This example shows how to determine which properties of an object can be changed.</source>
          <target state="translated">この例は、オブジェクトのどのプロパティを変更できるかを判断する方法を示します。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>The example uses a file, but you can use this command format to find the changeable properties of any object in Windows PowerShell.</source>
          <target state="translated">この例では、1 つのファイルを使用していますが、このコマンド形式を使用すると、Windows PowerShell 内の任意のオブジェクトについて、変更可能なプロパティを調べることができます。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>The first command uses the Get-Item cmdlet to get a text file, and then it saves the file object in the $file variable.</source>
          <target state="translated">最初のコマンドは、Get-Item コマンドレットを使用してテキスト ファイルを取得し、次に、このファイル オブジェクトを $file 変数に保存します。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>The second command gets all of the changeable properties of the file object in the $file variable and displays the names of the properties in a table.</source>
          <target state="translated">2 番目のコマンドは、$file 変数内にあるファイル オブジェクトの変更可能なプロパティをすべて取得し、プロパティの名前を表形式で表示します。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>The third command gets the changeable properties of all objects in your Windows PowerShell session.</source>
          <target state="translated">3 番目のコマンドは、Windows PowerShell セッションのすべてのオブジェクトについて、変更可能なプロパティを取得します。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>-------------------------- EXAMPLE 9 --------------------------</source>
          <target state="translated">-------------------------- EXAMPLE 9 --------------------------</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>This example shows how the InputObject parameter works in the Get-Member cmdlet.</source>
          <target state="translated">この例は、Get-Member コマンドレットで、InputObject パラメーターがどのように機能するかを示します。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>When you use the InputObject parameter to get the members of a collection, Get-Member gets the members of the collection.</source>
          <target state="translated">InputObject パラメーターを使用してコレクションのメンバーを取得すると、Get-Member はそのコレクションのメンバーを取得します。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>When you pipe a collection of objects to Get-Member, Get-Member gets the members of each item in the collection.</source>
          <target state="translated">オブジェクトのコレクションをパイプで Get-Member に渡すと、Get-Member は、コレクション内の各項目のメンバーを取得します。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>The first command gets the services on the local computer and saves the services in the $s variable.</source>
          <target state="translated">最初のコマンドは、ローカル コンピューター上のサービスを取得して $s 変数に保存します。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>The second command pipes the $s variable to the Get-Member cmdlet.</source>
          <target state="translated">2 番目のコマンドは、$s 変数をパイプで Get-Member コマンドレットに渡します。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>Get-Member gets the types of each member of $s and the members of that type.</source>
          <target state="translated">Get-Member は、$s の各メンバーの型およびその型のメンバーを取得します。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>In this case, it gets ServiceController objects and lists the members, such as RequiredServices and Close.</source>
          <target state="translated">この場合は、ServiceController オブジェクトを取得し、RequiredServices や Close などのメンバーを一覧表示します。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>The third command uses the InputObject parameter of Get-Member to submit the $s variable.</source>
          <target state="translated">3 番目のコマンドは、Get-Member の InputObject パラメーターを使用して、$s 変数を送信します。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>Get-Member gets the type (System.Object<ph id="ph1">\[\]</ph>) and the members of the collection (or "array") of ServiceController objects, such as Count and Clone.</source>
          <target state="translated">Get-member コマンドで型を取得します (System.Object<ph id="ph1">\[\]</ph>) と、Count や Clone などの ServiceController オブジェクトのコレクション (または"array") のメンバーです。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>PARAMETERS</source>
          <target state="translated">パラメータ</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>-Force</source>
          <target state="translated">-Force</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>Adds the intrinsic members (PSBase, PSAdapted, PSObject, PSTypeNames) and the compiler-generated get_ and set_ methods to the display.</source>
          <target state="translated">組み込みメンバー (PSBase、PSAdapted、PSObject、PSTypeNames) と、コンパイラで生成された get_ メソッドおよび set_ メソッドを表示に追加します。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>By default, Get-Member gets these properties in all views other than "Base" and "Adapted," but it does not display them.</source>
          <target state="translated">Get-Member は、既定では、"Base" および "Adapted" 以外のすべてのビューでこれらのプロパティを取得しますが、表示はしません。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>The following list describes the properties that are added when you use the Force parameter:</source>
          <target state="translated">次に、Force パラメーターを使用する際に追加されるプロパティについて説明します。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>PSBase:  The original properties of the .NET Framework object without extension or adaptation.</source>
          <target state="translated">PSBase: 拡張または適合なしで .NET Framework オブジェクトの元のプロパティです。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>These are the properties defined for the object class and listed in MSDN.</source>
          <target state="translated">これらは、オブジェクト クラスに対して定義されたプロパティで、MSDN に示されています。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>PSAdapted: The properties and methods defined in the Windows PowerShell extended type system.</source>
          <target state="translated">PSAdapted: プロパティと、Windows PowerShell 拡張型システムで定義されたメソッド。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>PSExtended: The properties and methods that were added in the Types.ps1xml files or by using the Add-Member cmdlet.</source>
          <target state="translated">PSExtended: プロパティとメソッド、Types.ps1xml ファイルまたは Add-member コマンドレットを使用して追加されました。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>PSObject: The adapter that converts the base object to a Windows PowerShell PSObject object.</source>
          <target state="translated">PSObject: ベースのオブジェクトを Windows PowerShell PSObject オブジェクトに変換するアダプター。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>PSTypeNames: A list of object types that describe the object, in order of specificity.</source>
          <target state="translated">PSTypeNames: 限定度の順で、オブジェクトを記述するオブジェクトの種類の一覧。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>When formatting the object, Windows PowerShell searches for the types in the Format.ps1xml files in the Windows PowerShell installation directory ($pshome).</source>
          <target state="translated">オブジェクトの書式を設定する場合、Windows PowerShell は、Windows PowerShell のインストール ディレクトリ ($pshome) の Format.ps1xml ファイルにある型を検索します。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>It uses the formatting definition for the first type that it finds.</source>
          <target state="translated">検出した最初の型の書式設定定義を使用します。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>-InputObject</source>
          <target state="translated">-Inputobject</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>Specifies the object whose members are retrieved.</source>
          <target state="translated">取得するメンバーを含んでいるオブジェクトを指定します。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>Using the InputObject parameter is not the same as piping an object to Get-Member.</source>
          <target state="translated">InputObject パラメーターを使用することと、オブジェクトをパイプで Get-Member に渡すことは、同じではありません。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>The differences are as follows:</source>
          <target state="translated">相違点は、次のとおりです。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>When you pipe a collection of objects to Get-Member, Get-Member gets the members of the individual objects in the collection, such as the properties of each string in an array of strings.</source>
          <target state="translated">Get-member にオブジェクトのコレクションをパイプするときに、Get-member は文字列の配列内の各文字列のプロパティなど、コレクション内の個々 のオブジェクトのメンバーを取得します。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>When you use InputObject to submit a collection of objects, Get-Member gets the members of the collection, such as the properties of the array in an array of strings.</source>
          <target state="translated">InputObject を使用してオブジェクトのコレクションを送信する場合、Get-member は、文字列の配列で配列のプロパティなど、コレクションのメンバーを取得します。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>-MemberType</source>
          <target state="translated">-MemberType</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>Gets only members with the specified member type.</source>
          <target state="translated">指定されたメンバー型を持つメンバーだけを取得します。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>The default is <bpt id="p1">**</bpt>All<ept id="p1">**</ept>.</source>
          <target state="translated">既定値は <bpt id="p1">**</bpt>すべて<ept id="p1">**</ept>です。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>The valid values for this parameter are: <bpt id="p1">**</bpt>AliasProperty<ept id="p1">**</ept>, <bpt id="p2">**</bpt>All<ept id="p2">**</ept>, <bpt id="p3">**</bpt>CodeMethod<ept id="p3">**</ept>, <bpt id="p4">**</bpt>CodeProperty<ept id="p4">**</ept>, <bpt id="p5">**</bpt>Event<ept id="p5">**</ept>, <bpt id="p6">**</bpt>MemberSet<ept id="p6">**</ept>, <bpt id="p7">**</bpt>Method<ept id="p7">**</ept>, <bpt id="p8">**</bpt>Methods<ept id="p8">**</ept>, <bpt id="p9">**</bpt>Noteproperty<ept id="p9">**</ept>, <bpt id="p10">**</bpt>ParameterizedProperty<ept id="p10">**</ept>, <bpt id="p11">**</bpt>Properties<ept id="p11">**</ept>, <bpt id="p12">**</bpt>Property<ept id="p12">**</ept>, <bpt id="p13">**</bpt>PropertySet<ept id="p13">**</ept>, <bpt id="p14">**</bpt>ScriptMethod<ept id="p14">**</ept>, and <bpt id="p15">**</bpt>ScriptProperty<ept id="p15">**</ept>.</source>
          <target state="translated">このパラメーターの有効な値: <bpt id="p1">**</bpt>AliasProperty<ept id="p1">**</ept>, 、<bpt id="p2">**</bpt>すべて<ept id="p2">**</ept>, 、<bpt id="p3">**</bpt>CodeMethod<ept id="p3">**</ept>, 、<bpt id="p4">**</bpt>CodeProperty<ept id="p4">**</ept>, 、<bpt id="p5">**</bpt>イベント<ept id="p5">**</ept>, 、<bpt id="p6">**</bpt>メンバー セット<ept id="p6">**</ept>, 、<bpt id="p7">**</bpt>メソッド<ept id="p7">**</ept>, 、<bpt id="p8">**</bpt>メソッド<ept id="p8">**</ept>, 、<bpt id="p9">**</bpt>Noteproperty<ept id="p9">**</ept>, 、<bpt id="p10">**</bpt>ParameterizedProperty<ept id="p10">**</ept>, 、<bpt id="p11">**</bpt>プロパティ<ept id="p11">**</ept>, 、<bpt id="p12">**</bpt>プロパティ<ept id="p12">**</ept>, 、<bpt id="p13">**</bpt>PropertySet<ept id="p13">**</ept>, 、<bpt id="p14">**</bpt>ScriptMethod<ept id="p14">**</ept>, 、および <bpt id="p15">**</bpt>ScriptProperty<ept id="p15">**</ept>します。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>For information about these values, see "PSMemberTypes Enumeration" in MSDN at http://msdn.microsoft.com/library/windows/desktop/system.management.automation.psmembertypes(v=vs.85).aspx.</source>
          <target state="translated">これらの値については、http://msdn.microsoft.com/library/windows/desktop/system.management.automation.psmembertypes(v=vs.85).aspx. で"PSMemberTypes 列挙体で MSDN を参照してください。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>Not all objects have every type of member.</source>
          <target state="translated">すべてのオブジェクトにすべての型のメンバーがあるわけではありません。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>If you specify a member type that the object does not have, Windows PowerShell returns a null value.</source>
          <target state="translated">オブジェクトにないメンバー型を指定すると、Windows PowerShell は null 値を返します。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>To get related types of members, such as all extended members, use the <bpt id="p1">**</bpt>View<ept id="p1">**</ept> parameter.</source>
          <target state="translated">関連する種類のすべての拡張メンバーなどのメンバーを取得する、 <bpt id="p1">**</bpt>ビュー<ept id="p1">**</ept> パラメーター。</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>If you use the <bpt id="p1">**</bpt>MemberType<ept id="p1">**</ept> parameter with the <bpt id="p2">**</bpt>Static<ept id="p2">**</ept> or <bpt id="p3">**</bpt>View<ept id="p3">**</ept> parameters, Get-Member gets the members that belong to both sets.</source>
          <target state="translated">使用する場合、 <bpt id="p1">**</bpt>MemberType<ept id="p1">**</ept> を持つパラメーター、 <bpt id="p2">**</bpt>静的<ept id="p2">**</ept> または <bpt id="p3">**</bpt>ビュー<ept id="p3">**</ept> パラメーター、Get-member は、両方のセットに属するメンバーを取得します。</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>-Name</source>
          <target state="translated">-Name</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>Specifies the names of one or more properties or methods of the object.</source>
          <target state="translated">オブジェクトの 1 つまたは複数のプロパティまたはメソッドの名前を指定します。</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>Get-Member gets only the specified properties and methods.</source>
          <target state="translated">Get-Member は、指定されたプロパティとメソッドだけを取得します。</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>If you use the Name parameter with the MemberType, View, or Static parameters, Get-Member gets only the members that satisfy the criteria of all parameters.</source>
          <target state="translated">Name パラメーターを MemberType、View、または Static パラメーターと共に使用すると、Get-Member はすべてのパラメーターの条件を満たすメンバーだけを取得します。</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>To get a static member by name, use the Static parameter with the Name parameter.</source>
          <target state="translated">静的メンバーを名前で取得するには、Static パラメーターを Name パラメーターと共に使用します。</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>-Static</source>
          <target state="translated">-Static</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>Gets only the static properties and methods of the object.</source>
          <target state="translated">オブジェクトの静的プロパティおよびメソッドだけを取得します。</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>Static properties and methods are defined on the class of objects, not on any particular instance of the class.</source>
          <target state="translated">静的プロパティおよびメソッドは、クラスの特定のインスタンスで定義されるのではなく、オブジェクトのクラスで定義されます。</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>If you use the Static parameter with the View parameter, the View parameter is ignored.</source>
          <target state="translated">Static パラメーターを View パラメーターと共に使用すると、View パラメーターは無視されます。</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>If you use the Static parameter with the MemberType parameter, Get-Member gets only the members that belong to both sets.</source>
          <target state="translated">Static パラメーターを MemberType パラメーターと共に使用すると、Get-Member は両方のセットに属するメンバーだけを取得します。</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>-View</source>
          <target state="translated">ビュー</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>Gets only particular types of members (properties and methods).</source>
          <target state="translated">特定の型のメンバー (プロパティとメソッド) だけを取得します。</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>Specify one or more of the values.</source>
          <target state="translated">1 つまたは複数の値を指定します。</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>The default is "Adapted, Extended".</source>
          <target state="translated">既定値は "Adapted, Extended" です。</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>Valid values are:</source>
          <target state="translated">有効な値は、</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>Base:  Gets only the original properties and methods of the .NET Framework object (without extension or adaptation).</source>
          <target state="translated">ベース: は、元のプロパティと、.NET Framework オブジェクト (拡張機能またはに対する領域適応) なしのメソッドのみを取得します。</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>Adapted:  Gets only the properties and methods defined in the Windows PowerShell extended type system.</source>
          <target state="translated">適合: プロパティおよびメソッドの型システムを拡張する Windows PowerShell での定義のみを取得します。</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>Extended: Gets only the properties and methods that were added in the Types.ps1xml files or by using the Add-Member cmdlet.</source>
          <target state="translated">拡張: は、プロパティと、Types.ps1xml ファイルまたは Add-member コマンドレットを使用して追加されたメソッドだけを取得します。</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>All: Gets the members in the Base, Adapted, and Extended views.</source>
          <target state="translated">All: Base、Adapted、および Extended ビュー内のメンバーを取得します。</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>The View parameter determines the members retrieved, not just the display of those members.</source>
          <target state="translated">View パラメーターは、単にメンバーを表示するだけではなく、取得するメンバーを定義します。</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>To get particular member types, such as script properties, use the MemberType parameter.</source>
          <target state="translated">スクリプト プロパティなど、特定のメンバー型を取得するには、MemberType パラメーターを使用します。</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>If you use the MemberType and View parameters in the same command, Get-Member gets the members that belong to both sets.</source>
          <target state="translated">同じコマンドで MemberType および View パラメーターを使用すると、Get-Member は、両方のセットに属するメンバーを取得します。</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>If you use the Static and View parameters in the same command, the View parameter is ignored.</source>
          <target state="translated">同じコマンドで Static および View パラメーターを使用すると、View パラメーターは無視されます。</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>CommonParameters</source>
          <target state="translated">CommonParameters</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutVariable, -OutBuffer, -PipelineVariable, -Verbose, -WarningAction, and -WarningVariable.</source>
          <target state="translated">このコマンドレットは、共通のパラメーターをサポートしています:-デバッグ、-erroraction、-errorvariable、- InformationAction-InformationVariable、- OutVariable、-OutBuffer、- PipelineVariable、- Verbose、および - WarningVariable です。</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>For more information, see about_CommonParameters (http://go.microsoft.com/fwlink/?LinkID=113216).</source>
          <target state="translated">詳細については、about_CommonParameters (http://go.microsoft.com/fwlink/?LinkID=113216) を参照してください。</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>INPUTS</source>
          <target state="translated">入力</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>System.Management.Automation.PSObject</source>
          <target state="translated">System.Management.Automation.PSObject</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>You can pipe any object to Get-Member</source>
          <target state="translated">パイプを使用して任意のオブジェクトを Get-Member に渡すことができます。</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>OUTPUTS</source>
          <target state="translated">出力</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>Microsoft.PowerShell.Commands.MemberDefinition</source>
          <target state="translated">修正された Microsoft.PowerShell.Commands.MemberDefinition</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>Get-Member returns an object for each property or method that its gets.</source>
          <target state="translated">Get-Member は、取得するプロパティまたはメソッドごとに、そのオブジェクトを返します。</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>NOTES</source>
          <target state="translated">ノート</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>You can get information about a collection object either by using the InputObject parameter or by piping the object, preceded by a comma, to Get-Member.</source>
          <target state="translated">コレクション オブジェクトに関する情報は、InputObject パラメーターを使用するか、前にコンマを付けたオブジェクトをパイプで Get-Member に渡することによって取得できます。</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>You can use the $this automatic variable in script blocks that define the values of new properties and methods.</source>
          <target state="translated">新しいプロパティとメソッドの値を定義するスクリプト ブロックでは、$this 自動変数を使用できます。</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>The $this variable refers to the instance of the object to which the properties and methods are being added.</source>
          <target state="translated">$this 変数は、プロパティとメソッドを追加するオブジェクトのインスタンスを参照します。</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>For more information about the $this variable, see about_Automatic_Variables.</source>
          <target state="translated">$this 変数の詳細については、「about_Automatic_Variables」を参照してください。</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>RELATED LINKS</source>
          <target state="translated">関連リンク</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>Add-Member</source>
          <target state="translated">Add-Member</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>Get-Command</source>
          <target state="translated">Get-Command</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>Get-Help</source>
          <target state="translated">Get-Help</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>Get-PSDrive</source>
          <target state="translated">Get-PSDrive</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>about_Automatic_Variables</source>
          <target state="translated">about_Automatic_Variables</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>about_Properties</source>
          <target state="translated">about_Properties</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>about_Methods</source>
          <target state="translated">about_Methods</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>about_Objects</source>
          <target state="translated">about_Objects</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>