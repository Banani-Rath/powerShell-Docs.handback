<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-1c394fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">4b3581b22046028d07bfd4f4cfd324923bcf0b10</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">reference\5.0\Microsoft.PowerShell.Core\About\about_Eventlogs.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions" />
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">8310102bdb863b5255dfd8207cb1de700e4a55aa</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">c71cb94eff8d57f36a7aaef0ea5afacc776c3531</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>about_Eventlogs</source>
          <target state="translated">about_Eventlogs</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>powershell, cmdlet</source>
          <target state="translated">powershell コマンドレット</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>About Eventlogs</source>
          <target state="translated">イベント ログはこれについて</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>about_Eventlogs</source>
          <target state="translated">about_Eventlogs</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>TOPIC</source>
          <target state="translated">トピック</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>about_EventLogs</source>
          <target state="translated">about_EventLogs</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>SHORT DESCRIPTION</source>
          <target state="translated">概要</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Windows PowerShell creates a Windows event log that is named "Windows PowerShell" to record Windows PowerShell events.</source>
          <target state="translated">Windows PowerShell では、Windows PowerShell イベントを記録する"Windows PowerShell"という Windows イベント ログを作成します。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>You can view this log in Event Viewer or by using cmdlets that get events, such as the Get-EventLog cmdlet.</source>
          <target state="translated">または、Get-eventlog コマンドレットなどのイベントを取得するコマンドレットを使用してイベント ビューアーでは、このログを表示できます。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>By default, Windows PowerShell engine and provider events are recorded in the event log, but you can use the event log preference variables to customize the event log.</source>
          <target state="translated">既定では、イベントがログには、イベント ログをカスタマイズするイベント ログのユーザー設定変数を使用できます Windows PowerShell エンジンとプロバイダーのイベントが記録されます。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>For example, you can add events about Windows PowerShell commands.</source>
          <target state="translated">たとえば、Windows PowerShell コマンドに関するイベントを追加できます。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>LONG DESCRIPTION</source>
          <target state="translated">詳細説明</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>The Windows PowerShell event log records details of Windows PowerShell operations, such as starting and stopping the program engine and starting and stopping the Windows PowerShell providers.</source>
          <target state="translated">Windows PowerShell イベント ログでは、開始、プログラムのエンジンを停止および開始と Windows PowerShell プロバイダーを停止するなどの Windows PowerShell 操作の詳細を記録します。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>You can also log details about Windows PowerShell commands.</source>
          <target state="translated">Windows PowerShell コマンドの詳細をログすることもできます。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>The Windows PowerShell event log is in the Application and Services Logs group.</source>
          <target state="translated">Windows PowerShell イベント ログでは、アプリケーションとサービス ログ] の [です。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>The Windows PowerShell log is a classic event log that does not use the Windows Eventing technology.</source>
          <target state="translated">Windows PowerShell ログは、Windows Eventing テクノロジを使用しない従来のイベント ログです。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>To view the log, use the cmdlets designed for classic event logs, such as Get-EventLog.</source>
          <target state="translated">ログを表示するには、Get-eventlog などの従来のイベント ログ用に設計されたコマンドレットを使用します。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Viewing the Windows PowerShell Event Log</source>
          <target state="translated">Windows PowerShell イベント ログの表示</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>You can view the Windows PowerShell event log in Event Viewer or by using the Get-EventLog and Get-WmiObject cmdlets.</source>
          <target state="translated">イベント ビューアーまたは Get-eventlog、Get-wmiobject コマンドレットを使用して、Windows PowerShell イベント ログを表示できます。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>To view the contents of the Windows PowerShell log, type:</source>
          <target state="translated">Windows PowerShell ログの内容を表示するには、次のように入力します。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Get-EventLog -LogName "Windows PowerShell"</source>
          <target state="translated">Get-eventlog LogName"Windows PowerShell"</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>To examine the events and their properties, use the Sort-Object cmdlet, the Group-Object cmdlet, and the cmdlets that contain the Format verb (the Format cmdlets).</source>
          <target state="translated">イベントとそのプロパティを検証するには、Sort-object コマンドレット、Group-object コマンドレットおよび形式の動詞 (書式設定コマンドレット) を含むコマンドレットを使用します。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>For example, to view the events in the log grouped by the event ID, type:</source>
          <target state="translated">たとえば、イベント ID でグループ化されたログにイベントを表示する次のように入力します。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Get-EventLog "Windows PowerShell" | Format-Table -GroupBy EventID</source>
          <target state="translated">"Windows PowerShell"、Get-eventlog |表の書式設定の GroupBy EventID</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Or, type:</source>
          <target state="translated">または、入力します。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Get-EventLog "Windows PowerShell" | Sort-Object EventID ` | Group-Object EventID</source>
          <target state="translated">"Windows PowerShell"、Get-eventlog |Sort-object は、EventID ' |グループ オブジェクトのイベント Id</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>To view all the classic event logs, type:</source>
          <target state="translated">従来のすべてのイベント ログを表示するには、次のように入力します。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Get-EventLog -List</source>
          <target state="translated">Get-eventlog-リスト</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>You can also use the Get-WmiObject cmdlet to use the event-related Windows Management Instumentation (WMI) classes to examine the event log.</source>
          <target state="translated">クラスを使用して、イベントに関連する Windows Management Instumentation (WMI) イベント ログを調べ、Get-wmiobject コマンドレットを使用することができますもします。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>For example, to view all the properties of the event log file, type:</source>
          <target state="translated">たとえば、イベント ログ ファイルのすべてのプロパティを表示するには、次のように入力します。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Get-WmiObject Win32_NTEventLogFile | where ` {$_.LogFileName -eq "Windows PowerShell"} | Format-List -Property *</source>
          <target state="translated">Get-wmiobject Win32_NTEventLogFile |ここで ' {$_ です。LogFileName-eq"Windows PowerShell"} |Format-list-プロパティ *</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>To find the Win32 event-related WMI classes, type:</source>
          <target state="translated">Win32 イベントに関連する WMI クラスを検索するには、次のように入力します。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Get-WmiObject -List | where {$_.Name -like "win32event"}</source>
          <target state="translated">Get-wmiobject の一覧 |ここで {$_ です。Name-"win32event"のような}</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>For more information, type "Get-Help Get-EventLog" and "Get-Help Get-WmiObject".</source>
          <target state="translated">詳細については、"Get-help Get-eventlog"、"Get-help Get-wmiobject"を入力します。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Selecting Events for the Windows PowerShell Event Log</source>
          <target state="translated">Windows PowerShell イベント ログのイベントの選択</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>You can use the event log preference variables to determine which events are recorded in the Windows PowerShell event log.</source>
          <target state="translated">イベント ログのユーザー設定変数を使用すると、どのイベントは、Windows PowerShell イベント ログに記録を確認します。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>There are six event log preference variables; two variables for each of the three logging components: the engine (the Windows PowerShell program), the providers, and the commands.</source>
          <target state="translated">6 つのイベント ログのユーザー設定変数; があります。ログの 3 つのコンポーネントごとに 2 つの変数: エンジン (Windows PowerShell のプログラム)、プロバイダー、およびコマンドです。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>The LifeCycleEvent variables log normal starting and stopping events.</source>
          <target state="translated">LifeCycleEvent 変数は、通常の開始と停止イベント ログインします。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>The Health variables log error events.</source>
          <target state="translated">状態変数は、エラー イベントを記録します。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>The following table lists the event log preference variables.</source>
          <target state="translated">次の表は、イベント ログのユーザー設定変数を一覧表示します。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Variable                     Description</source>
          <target state="translated">変数の説明</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>$LogEngineLifeCycleEvent     Logs starting and stopping of Windows PowerShell.</source>
          <target state="translated">Windows PowerShell の開始と停止 $LogEngineLifeCycleEvent を記録します。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>$LogEngineHealthEvent        Logs Windows PowerShell program errors.</source>
          <target state="translated">$LogEngineHealthEvent ログの Windows PowerShell [プログラムのエラーです。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>$LogProviderLifeCycleEvent   Logs starting and stopping of Windows PowerShell providers.</source>
          <target state="translated">Windows PowerShell プロバイダーの開始と停止 $LogProviderLifeCycleEvent を記録します。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>$LogProviderHealthEvent      Logs Windows PowerShell provider errors.</source>
          <target state="translated">$LogProviderHealthEvent ログの Windows PowerShell プロバイダー エラー。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>$LogCommandLifeCycleEvent    Logs starting and completion of commands.</source>
          <target state="translated">$LogCommandLifeCycleEvent ログを起動して、コマンドの終了。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>$LogCommandHealthEvent       Logs command errors.</source>
          <target state="translated">$LogCommandHealthEvent ログ コマンドのエラーです。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>(For information about Windows PowerShell providers, type: "Get-Help about_providers".)</source>
          <target state="translated">(Windows PowerShell プロバイダーについては、入力:"Get-help about_providers"です)。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>By default, only the following event types are enabled:</source>
          <target state="translated">既定では、次のイベント型のみが有効です。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>$LogEngineLifeCycleEvent $LogEngineHealthEvent $LogProviderLifeCycleEvent $LogProviderHealthEvent</source>
          <target state="translated">$LogEngineLifeCycleEvent $LogEngineHealthEvent $LogProviderLifeCycleEvent $LogProviderHealthEvent</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>To enable an event type, set the preference variable for that event type to $true.</source>
          <target state="translated">イベントの種類を有効にするには、そのイベントの種類を $true にユーザー設定変数を設定します。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>For example, to enable command life-cycle events, type:</source>
          <target state="translated">たとえば、コマンドのライフ サイクル イベントを有効にするには、次のように入力します。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>$LogCommandLifeCycleEvent</source>
          <target state="translated">$LogCommandLifeCycleEvent</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Or, type:</source>
          <target state="translated">または、入力します。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>$LogCommandLifeCycleEvent = $true</source>
          <target state="translated">$LogCommandLifeCycleEvent = $true</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>To disable an event type, set the preference variable for that event type to $false.</source>
          <target state="translated">イベントの種類を無効にするには、そのイベントの種類を $false にユーザー設定変数を設定します。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>For example, to disable command life-cycle events, type:</source>
          <target state="translated">たとえば、コマンドのライフ サイクル イベントを無効にするには、次のように入力します。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>$LogProviderLifeCycleEvent = $false</source>
          <target state="translated">$LogProviderLifeCycleEvent = $false</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>You can disable any event, except for the events that indicate that the Windows PowerShell engine and the core providers are started.</source>
          <target state="translated">Windows PowerShell エンジンとコア プロバイダーが開始されているかを示すイベントを除く、任意のイベントを無効にすることができます。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>These events are generated before the Windows PowerShell profiles are run and before the host program is ready to accept commands.</source>
          <target state="translated">Windows PowerShell プロファイルを実行し、ホストする前にプログラムは、コマンドを受け取る準備が完了する前に、これらのイベントが生成されます。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>The variable settings apply only for the current Windows PowerShell session.</source>
          <target state="translated">変数の設定は、現在の Windows PowerShell セッションに対してのみ適用されます。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>To apply them to all Windows PowerShell sessions, add them to your Windows PowerShell profile.</source>
          <target state="translated">すべての Windows PowerShell セッションには、それらを適用するには、Windows PowerShell プロファイルに加えます。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>Logging Module Events</source>
          <target state="translated">ログ モジュール イベント</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>Beginning in Windows PowerShell 3.0, you can record execution events for the cmdlets and functions in Windows PowerShell modules and snap-ins by setting the LogPipelineExecutionDetails property of modules and snap-ins to TRUE.</source>
          <target state="translated">Windows PowerShell 3.0 以降では、イベントを記録できます実行コマンドレットと関数の Windows PowerShell モジュールおよびスナップインで、モジュールとスナップインの LogPipelineExecutionDetails プロパティを TRUE に設定します。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>In Windows PowerShell 2.0, this feature is available only for snap-ins.</source>
          <target state="translated">Windows PowerShell 2.0 では、この機能はスナップインでのみ使用できます。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>When the LogPipelineExecutionDetails property value is TRUE ($True), Windows PowerShell writes cmdlet and function execution events in the session to the Windows PowerShell log in Event Viewer.</source>
          <target state="translated">LogPipelineExecutionDetails プロパティの値が TRUE ($True) の場合は、Windows PowerShell コマンドレットと関数実行イベント セッションにログに書き込む Windows PowerShell イベント ビューアーでします。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>The setting is effective only in the current session.</source>
          <target state="translated">設定は、現在のセッションでのみ有効です。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>To enable logging of execution events of cmdlets and functions in a module, use the following command sequence.</source>
          <target state="translated">モジュールのコマンドレットと関数の実行イベントのログ記録を有効にするには、次のコマンド シーケンスを使用します。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>Import-Module <ph id="ph1">&lt;ModuleName&gt;</ph> $m = Get-Module <ph id="ph2">&lt;ModuleName&gt;</ph> $m.LogPipelineExecutionDetails = $True</source>
          <target state="translated">モジュールのインポート <ph id="ph1">&lt;ModuleName&gt;</ph> $m = Get-module <ph id="ph2">&lt;ModuleName&gt;</ph> $m.LogPipelineExecutionDetails = $True</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>To enable logging of execution events of cmdlets in a snap-in, use the following command sequence.</source>
          <target state="translated">スナップインでコマンドレットの実行イベントのログ記録を有効にするには、次のコマンド シーケンスを使用します。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>$m = Get-PSSnapin <ph id="ph1">&lt;SnapInName&gt;</ph> [-Registered] $m.LogPipelineExecutionDetails = $True</source>
          <target state="translated">$m = Get-pssnapin <ph id="ph1">&lt;SnapInName&gt;</ph> [の登録] $m.LogPipelineExecutionDetails = $True</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>To disable logging, use the same command sequence to set the property value to FALSE ($False).</source>
          <target state="translated">ログ記録を無効にするには、同じコマンド シーケンスを使用してプロパティの値を FALSE ($False) に設定します。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>You can also use the "Turn on Module Logging" Group Policy setting to enable and disable module and snap-in logging.</source>
          <target state="translated">グループ ポリシーの"有効"モジュール ログ設定を使用すると、モジュールとスナップインからのログを無効にするもします。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>The policy value includes a list of module and snap-in names.</source>
          <target state="translated">ポリシーの値には、モジュール名およびスナップイン名の一覧が含まれています。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>Wildcards are supported.</source>
          <target state="translated">ワイルド カードがサポートされます。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>When "Turn on Module Logging" is set for a module, the value of the LogPipelineExecutionDetails property of the module is TRUE in all sessions and it cannot be changed.</source>
          <target state="translated">"有効"モジュール ログを設定すると、モジュールのモジュールの LogPipelineExecutionDetails プロパティの値はすべてのセッションで真の意味し、変更することはできません。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>The Turn On Module Logging group policy setting is located in the following Group Policy paths:</source>
          <target state="translated">モジュールのログを有効にするグループ ポリシー設定については、次のグループ ポリシーのパスにあります。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>Computer Configuration\Administrative Templates\Windows Components\Windows PowerShell User Configuration\Administrative Templates\Windows Components\Windows PowerShell</source>
          <target state="translated">コンピューター構成 \ 管理用テンプレート \windows コンポーネント \windows PowerShell ユーザー構成 \ 管理用テンプレート \windows コンポーネント \windows PowerShell</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>The User Configuration policy takes precedence over the Computer Configuration policy, and both policies take preference over the value of the LogPipelineExecutionDetails property of modules and snap-ins.</source>
          <target state="translated">ユーザーの構成ポリシー コンピューターの構成ポリシーより優先し、両方のポリシー モジュールとスナップインの LogPipelineExecutionDetails プロパティの値に対する優先設定を考慮します。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>For more information about this Group Policy setting, see about_Group_Policy_Settings (http://go.microsoft.com/fwlink/?LinkID=251696).</source>
          <target state="translated">このグループ ポリシー設定の詳細については、「about_Group_Policy_Settings (http://go.microsoft.com/fwlink/?LinkID=251696) を参照してください。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>Security and Auditing</source>
          <target state="translated">セキュリティと監査</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>The Windows PowerShell event log is designed to indicate activity and to provide operational details for troubleshooting.</source>
          <target state="translated">Windows PowerShell イベント ログは、トラブルシューティングの処理の詳細を提供してアクティビティを示すために設計されています。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>However, like most Windows-based application event logs, the Windows PowerShell event log is not designed to be secure.</source>
          <target state="translated">ただし、ほとんどの Windows ベース アプリケーションのイベント ログのように、Windows PowerShell イベント ログは設計されていませんセキュリティで保護します。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>It should not be used to audit security or to record confidential or proprietary information.</source>
          <target state="translated">セキュリティの監査または機密情報や機密情報を記録することがない使用してください。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>Event logs are designed to be read and understood by users.</source>
          <target state="translated">イベント ログは、読み取りと、ユーザーが理解できるよう設計されています。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>Users can read from and write to the log.</source>
          <target state="translated">ユーザーから読み取るし、ログに書き込むことができます。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>A malicious user could read an event log on a local or remote computer, record false data, and then prevent the logging of their activities.</source>
          <target state="translated">悪意のあるユーザーでは、ローカルまたはリモート コンピューター上のイベント ログを読み取り、偽のデータを記録、およびそれらのアクティビティ ログ記録を防ぐ可能性があります。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>NOTES</source>
          <target state="translated">ノート</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>Authors of module authors can add logging features to their modules.</source>
          <target state="translated">モジュールの作成者の作成者は、それぞれのモジュールにログ機能を追加できます。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>For more information, see "Writing a Windows PowerShell Module" in MSDN at http://go.microsoft.com/fwlink/?LinkID=144916.</source>
          <target state="translated">詳細については、http://go.microsoft.com/fwlink/?LinkID=144916 に"書き込み、Windows PowerShell モジュールの MSDN を参照してください。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>SEE ALSO</source>
          <target state="translated">関連項目</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>Get-EventLog Get-WmiObject about_Group_Policy_Settings about_Preference_Variables</source>
          <target state="translated">Get-eventlog Get-wmiobject「about_Group_Policy_Settings about_Preference_Variables</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>