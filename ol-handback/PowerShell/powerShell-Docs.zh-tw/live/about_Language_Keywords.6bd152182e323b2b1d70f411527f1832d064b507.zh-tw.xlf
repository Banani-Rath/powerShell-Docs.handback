<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-tw">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-1c394fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">51051bd4fb93e2dc28db4564389e05f3cb8366f0</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">reference\3.0\Microsoft.PowerShell.Core\About\about_Language_Keywords.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions" />
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">c7c03d257db904823945f5059142a97c4c441163</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f9c66dcc5d0efd2efb6c88bbf5c0cdc2bcee9cda</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>about_Language_Keywords</source>
          <target state="translated">about_Language_Keywords</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>powershell, cmdlet</source>
          <target state="translated">powershell 指令程式</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>About Language Keywords</source>
          <target state="translated">語言關鍵字</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>about_Language_Keywords</source>
          <target state="translated">about_Language_Keywords</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>about_Language_Keywords</source>
          <target state="translated">about_Language_Keywords</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>SHORT DESCRIPTION</source>
          <target state="translated">簡短描述</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Describes the keywords in the Windows PowerShell scripting language.</source>
          <target state="translated">描述 Windows PowerShell 指令碼語言中的關鍵字。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>LONG DESCRIPTION</source>
          <target state="translated">詳細描述</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Windows PowerShell has the following language keywords.</source>
          <target state="translated">Windows PowerShell 有下列語言關鍵字。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>For more information, see the about topic for the keyword and the information that follows the table.</source>
          <target state="translated">如需詳細資訊，請參閱 &lt; 相關主題的關鍵字，且會遵循資料表的資訊。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Keyword            Reference</source>
          <target state="translated">關鍵字參考</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Begin              about_Functions, about_Functions_Advanced Break              about_Break, about_Trap Catch              about_Try_Catch_Finally Continue           about_Continue, about_Trap Data               about_Data_Sections Do                 about_Do, about_While DynamicParam       about_Functions_Advanced_Parameters Else               about_If Elseif             about_If End                about_Functions, about_Functions_Advanced_Methods Exit               Described in this topic.</source>
          <target state="translated">開始 about_Functions、 about_Functions_Advanced 中斷 about_Break、 about_Trap Catch about_Try_Catch_Finally 繼續 about_Continue、 about_Trap 資料 about_Data_Sections 執行 about_Do、 about_While DynamicParam about_Functions_Advanced_Parameters Else about_If Elseif about_If 結束 about_Functions，about_Functions_Advanced_Methods 結束所述，本主題中。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Filter             about_Functions Finally            about_Try_Catch_Finally For                about_For ForEach            about_ForEach From               Reserved for future use.</source>
          <target state="translated">篩選 about_Functions 最後 about_Try_Catch_Finally 的 about_For ForEach about_ForEach 從保留供未來使用。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Function           about_Functions, about_Functions_Advanced If                 about_If In                 about_ForEach InlineScript       about_InlineScript Hidden             about_Hidden Parallel           about_Parallel, about_ForEach-Parallel Param              about_Functions Process            about_Functions, about_Functions_Advanced Return             about_Return Sequence           about_Sequence Switch             about_Switch Throw              about_Throw, about_Functions_Advanced_Methods Trap               about_Trap, about_Break, about_Try_Catch_Finally Try                about_Try_Catch_Finally Until              about_Do While              about_While, about_Do Workflow           about_Workflows</source>
          <target state="translated">函式 about_Functions，如果嘗試在 about_ForEach InlineScript about_InlineScript 隱藏 about_Hidden 平行 about_Parallel、 about_ForEach 平行 Param about_Functions 程序 about_Functions、 about_Functions_Advanced 傳回 about_Return 順序 about_Sequence 交換器 about_Switch Throw about_Throw、 about_Functions_Advanced_Methods 設陷 about_Trap、 about_Break、 about_Try_Catch_Finally about_If about_Functions_Advanced 直到 about_Do about_Try_Catch_Finally about_While 時about_Do about_Workflows 工作流程</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Language Keywords</source>
          <target state="translated">語言關鍵字</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Begin</source>
          <target state="translated">開始</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Specifies one part of the body of a function, along with the DynamicParam, Process, and End keywords.</source>
          <target state="translated">指定 DynamicParam、 Process 及 End 關鍵字以及函式主體的一部分。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>The Begin statement list runs one time before any objects are received from the pipeline.</source>
          <target state="translated">Begin 陳述式清單會執行一次，才能從管線接收到的任何物件。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Syntax:</source>
          <target state="translated">語法：</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>function <ph id="ph1">&lt;name&gt;</ph> { DynamicParam {<ph id="ph2">&lt;statement list&gt;</ph>} begin {<ph id="ph3">&lt;statement list&gt;</ph>} process {<ph id="ph4">&lt;statement list&gt;</ph>} end {<ph id="ph5">&lt;statement list&gt;</ph>} }</source>
          <target state="translated">函式 <ph id="ph1">&lt;name&gt;</ph> {DynamicParam {<ph id="ph2">&lt;statement list&gt;</ph>} 開始 {<ph id="ph3">&lt;statement list&gt;</ph>} 處理序 {<ph id="ph4">&lt;statement list&gt;</ph>} 結束 {<ph id="ph5">&lt;statement list&gt;</ph>}}</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Break</source>
          <target state="translated">中斷</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Causes a script to exit a loop.</source>
          <target state="translated">會導致指令碼，以結束迴圈。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Syntax:</source>
          <target state="translated">語法：</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>while (<ph id="ph1">&lt;condition&gt;</ph>) {</source>
          <target state="translated">雖然 (<ph id="ph1">&lt;condition&gt;</ph>) {</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>...</source>
          <target state="translated">...</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>break</source>
          <target state="translated">中斷</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>...</source>
          <target state="translated">...</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>}</source>
          <target state="translated">}</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Catch</source>
          <target state="translated">Catch</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Specifies a statement list to run if an error occurs in the accompanying Try statement list.</source>
          <target state="translated">指定執行附帶的 Try 陳述式清單中發生錯誤的陳述式清單。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>An error type requires brackets.</source>
          <target state="translated">錯誤類型需要方括號。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>The second pair of brackets indicates that the error type is optional.</source>
          <target state="translated">第二組括號表示錯誤型別為選擇性。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Syntax:</source>
          <target state="translated">語法：</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>try {<ph id="ph1">&lt;statement list&gt;</ph>} catch [[<ph id="ph2">&lt;error type&gt;</ph>]] {<ph id="ph3">&lt;statement list&gt;</ph>}</source>
          <target state="translated">請嘗試 {<ph id="ph1">&lt;statement list&gt;</ph>} catch [[<ph id="ph2">&lt;error type&gt;</ph>]] {<ph id="ph3">&lt;statement list&gt;</ph>}</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Continue</source>
          <target state="translated">繼續</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Causes a script to stop running a loop and to go back to the condition.</source>
          <target state="translated">會導致指令碼停止執行迴圈，並回到條件。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>If the condition is met, the script begins the loop again.</source>
          <target state="translated">如果符合條件時，指令碼會重新開始迴圈。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Syntax:</source>
          <target state="translated">語法：</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>while (<ph id="ph1">&lt;condition&gt;</ph>) {</source>
          <target state="translated">雖然 (<ph id="ph1">&lt;condition&gt;</ph>) {</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>...</source>
          <target state="translated">...</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>continue</source>
          <target state="translated">繼續</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>...</source>
          <target state="translated">...</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>}</source>
          <target state="translated">}</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Data</source>
          <target state="translated">資料</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>In a script, defines a section that isolates data from the script logic.</source>
          <target state="translated">在指令碼，會定義將資料從指令碼邏輯隔離的區段。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Can also include If statements and some limited commands.</source>
          <target state="translated">如果也可以包括陳述式和一些有限的命令。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Syntax:</source>
          <target state="translated">語法：</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>data <ph id="ph1">&lt;variable&gt;</ph> [-supportedCommand &lt;cmdlet-name&gt;] {<ph id="ph2">&lt;permitted content&gt;</ph>}</source>
          <target state="translated">資料 <ph id="ph1">&lt;variable&gt;</ph> [-supportedCommand &lt; 指令程式名稱 &gt;] {<ph id="ph2">&lt;permitted content&gt;</ph>}</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Do</source>
          <target state="translated">執行</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Used with the While or Until keyword as a looping construct.</source>
          <target state="translated">While 或 Until 關鍵字當做迴圈建構。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Windows PowerShell runs the statement list at least one time, unlike a loop that uses While.</source>
          <target state="translated">Windows PowerShell 會執行陳述式清單至少一次，不同於使用迴圈時。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Syntax:</source>
          <target state="translated">語法：</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>do {<ph id="ph1">&lt;statement list&gt;</ph>} while (<ph id="ph2">&lt;condition&gt;</ph>)</source>
          <target state="translated">請勿 {<ph id="ph1">&lt;statement list&gt;</ph>} 時 (<ph id="ph2">&lt;condition&gt;</ph>)</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>do {<ph id="ph1">&lt;statement list&gt;</ph>} until (<ph id="ph2">&lt;condition&gt;</ph>)</source>
          <target state="translated">請勿 {<ph id="ph1">&lt;statement list&gt;</ph>} 直到 (<ph id="ph2">&lt;condition&gt;</ph>)</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>DynamicParam</source>
          <target state="translated">DynamicParam</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>Specifies one part of the body of a function, along with the Begin, Process, and End keywords.</source>
          <target state="translated">指定 Begin、 Process 及 End 關鍵字以及函式主體的一部分。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Dynamic parameters are added at run time.</source>
          <target state="translated">在執行階段加入動態參數。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Syntax:</source>
          <target state="translated">語法：</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>function <ph id="ph1">&lt;name&gt;</ph> { DynamicParam {<ph id="ph2">&lt;statement list&gt;</ph>} begin {<ph id="ph3">&lt;statement list&gt;</ph>} process {<ph id="ph4">&lt;statement list&gt;</ph>} end {<ph id="ph5">&lt;statement list&gt;</ph>} }</source>
          <target state="translated">函式 <ph id="ph1">&lt;name&gt;</ph> {DynamicParam {<ph id="ph2">&lt;statement list&gt;</ph>} 開始 {<ph id="ph3">&lt;statement list&gt;</ph>} 處理序 {<ph id="ph4">&lt;statement list&gt;</ph>} 結束 {<ph id="ph5">&lt;statement list&gt;</ph>}}</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>Else</source>
          <target state="translated">其他</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>Used with the If keyword to specify the default statement list.</source>
          <target state="translated">如果使用關鍵字來指定預設陳述式清單。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>Syntax:</source>
          <target state="translated">語法：</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>if (<ph id="ph1">&lt;condition&gt;</ph>) {<ph id="ph2">&lt;statement list&gt;</ph>} else {<ph id="ph3">&lt;statement list&gt;</ph>}</source>
          <target state="translated">if (<ph id="ph1">&lt;condition&gt;</ph>) {<ph id="ph2">&lt;statement list&gt;</ph>} else {<ph id="ph3">&lt;statement list&gt;</ph>}</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>Elseif</source>
          <target state="translated">Elseif</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>Used with the If and Else keywords to specify additional conditionals.</source>
          <target state="translated">如果使用和 Else 關鍵字來指定其他條件。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>The Else keyword is optional.</source>
          <target state="translated">Else 關鍵字是選擇性的。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>Syntax:</source>
          <target state="translated">語法：</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>if (<ph id="ph1">&lt;condition&gt;</ph>) {<ph id="ph2">&lt;statement list&gt;</ph>} elseif (<ph id="ph3">&lt;condition&gt;</ph>) {<ph id="ph4">&lt;statement list&gt;</ph>} else {<ph id="ph5">&lt;statement list&gt;</ph>}</source>
          <target state="translated">如果 (<ph id="ph1">&lt;condition&gt;</ph>) {<ph id="ph2">&lt;statement list&gt;</ph>} elseif (<ph id="ph3">&lt;condition&gt;</ph>) {<ph id="ph4">&lt;statement list&gt;</ph>} else {<ph id="ph5">&lt;statement list&gt;</ph>}</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>End</source>
          <target state="translated">結束</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>Specifies one part of the body of a function, along with the DynamicParam, Begin, and End keywords.</source>
          <target state="translated">指定 DynamicParam、 Begin、 和 End 關鍵字以及函式主體的一部分。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>The End statement list runs one time after all the objects have been received from the pipeline.</source>
          <target state="translated">已經從管線收到陳述式清單執行一次，才能在所有物件的結尾。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>Syntax:</source>
          <target state="translated">語法：</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>function <ph id="ph1">&lt;name&gt;</ph> { DynamicParam {<ph id="ph2">&lt;statement list&gt;</ph>} begin {<ph id="ph3">&lt;statement list&gt;</ph>} process {<ph id="ph4">&lt;statement list&gt;</ph>} end {<ph id="ph5">&lt;statement list&gt;</ph>} }</source>
          <target state="translated">函式 <ph id="ph1">&lt;name&gt;</ph> {DynamicParam {<ph id="ph2">&lt;statement list&gt;</ph>} 開始 {<ph id="ph3">&lt;statement list&gt;</ph>} 處理序 {<ph id="ph4">&lt;statement list&gt;</ph>} 結束 {<ph id="ph5">&lt;statement list&gt;</ph>}}</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>Exit</source>
          <target state="translated">結束</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>Causes Windows PowerShell to exit a script or a Windows PowerShell instance.</source>
          <target state="translated">會使 Windows PowerShell 結束指令碼或 Windows PowerShell 執行個體。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>When you run 'powershell.exe –File <ph id="ph1">&lt;path to a script&gt;</ph>', you can only set the %ERRORLEVEL% variable to a value other than zero by using the exit statement.</source>
          <target state="translated">當您執行 ' powershell.exe – 檔案 <ph id="ph1">&lt;path to a script&gt;</ph>'，您只能設定為使用 exit 陳述式的零以外的值 %ERRORLEVEL%變數。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>In the following example, the user sets the error level variable value to 4 by typing 'exit 4'.</source>
          <target state="translated">在下列範例中，使用者會將錯誤層級的變數值設為 4，輸入 「 結束 4 」。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>C:\Users\bruce\documents\test&gt;type test.ps1</source>
          <target state="translated">C:\Users\bruce\documents\test &gt; 輸入 test.ps1</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>1</source>
          <target state="translated">1</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>2</source>
          <target state="translated">2</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>3</source>
          <target state="translated">3</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>exit 4</source>
          <target state="translated">結束 4</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>C:\Users\bruce\documents\test&gt;powershell -file ./test.ps1</source>
          <target state="translated">C:\Users\bruce\documents\test &gt; powershell-檔案./test.ps1</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>1</source>
          <target state="translated">1</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>2</source>
          <target state="translated">2</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>3</source>
          <target state="translated">3</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>C:\Users\bruce\documents\test&gt;echo %ERRORLEVEL%</source>
          <target state="translated">C:\Users\bruce\documents\test &gt; echo %ERRORLEVEL%</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>4</source>
          <target state="translated">4</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>When you use powershell.exe with the File parameter, the .ps1 (script) file itself should include instructions for handling any errors or exceptions that occur while the script is running.</source>
          <target state="translated">當您使用 File 參數使用 powershell.exe 時，（指令碼） 的.ps1 檔案本身應該包含任何錯誤或執行指令碼中發生的例外狀況的處理的指示。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>You should only use the exit statement to indicate the post-execution status of the script.</source>
          <target state="translated">您只應該使用 exit 陳述式來指示指令碼後置執行狀態。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>Syntax:</source>
          <target state="translated">語法：</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>exit exit</source>
          <target state="translated">結束 exit</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>Filter</source>
          <target state="translated">篩選器</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>Specifies a function in which the statement list runs one time for each input object.</source>
          <target state="translated">指定陳述式清單會執行一次針對每個輸入物件的函式。</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>It has the same effect as a function that contains only a Process block.</source>
          <target state="translated">其包含處理序區塊的函式相同的效果。</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>Syntax:</source>
          <target state="translated">語法：</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>filter <ph id="ph1">&lt;name&gt;</ph> {<ph id="ph2">&lt;statement list&gt;</ph>}</source>
          <target state="translated">篩選 <ph id="ph1">&lt;name&gt;</ph> {<ph id="ph2">&lt;statement list&gt;</ph>}</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>Finally</source>
          <target state="translated">最後</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>Defines a statement list that runs after statements that are associated with Try and Catch.</source>
          <target state="translated">定義關聯 Try 和 Catch 陳述式後所執行的陳述式清單。</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>A Finally statement list runs even if you press CTRL+C to leave a script or if you use the Exit keyword in the script.</source>
          <target state="translated">陳述式清單最後執行即使您按下 CTRL + C 將指令碼，或您的指令碼中使用 Exit 關鍵字。</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>Syntax:</source>
          <target state="translated">語法：</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>try {<ph id="ph1">&lt;statement list&gt;</ph>} catch [&lt;error type] {<ph id="ph2">&lt;statement list&gt;</ph>} finally {<ph id="ph3">&lt;statement list&gt;</ph>}</source>
          <target state="translated">請嘗試 {<ph id="ph1">&lt;statement list&gt;</ph>} catch [&lt; 錯誤型別] {<ph id="ph2">&lt;statement list&gt;</ph>} 最後 {<ph id="ph3">&lt;statement list&gt;</ph>}</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>For</source>
          <target state="translated">針對</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>Defines a loop by using a condition.</source>
          <target state="translated">會使用條件來定義迴圈。</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>Syntax:</source>
          <target state="translated">語法：</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>for (<ph id="ph1">&lt;initialize&gt;</ph>; <ph id="ph2">&lt;condition&gt;</ph>; <ph id="ph3">&lt;iterate&gt;</ph>) {<ph id="ph4">&lt;statement list&gt;</ph>}</source>
          <target state="translated">for (<ph id="ph1">&lt;initialize&gt;</ph>; <ph id="ph2">&lt;condition&gt;</ph>; <ph id="ph3">&lt;iterate&gt;</ph>){<ph id="ph4">&lt;statement list&gt;</ph>}</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>ForEach</source>
          <target state="translated">ForEach</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>Defines a loop by using each member of a collection.</source>
          <target state="translated">會使用每個集合的成員定義迴圈。</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>Syntax:</source>
          <target state="translated">語法：</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>ForEach (<ph id="ph1">&lt;item&gt;</ph> in <ph id="ph2">&lt;collection&gt;</ph>){<ph id="ph3">&lt;statement list&gt;</ph>}</source>
          <target state="translated">ForEach (<ph id="ph1">&lt;item&gt;</ph> 中 <ph id="ph2">&lt;collection&gt;</ph>) {<ph id="ph3">&lt;statement list&gt;</ph>}</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>From</source>
          <target state="translated">從</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>Reserved for future use.</source>
          <target state="translated">保留供未來使用。</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>Function</source>
          <target state="translated">函式</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>Creates a named statement list of reusable code.</source>
          <target state="translated">建立可重複使用程式碼的具名陳述式清單。</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>You can name the scope a function belongs to.</source>
          <target state="translated">您可以命名函式所屬的範圍。</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>And, you can specify one or more named parameters by using the Param keyword.</source>
          <target state="translated">而且，您可以指定一或多個具名的參數使用 Param 關鍵字。</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>Within the function statement list, you can include DynamicParam, Begin, Process, and End statement lists.</source>
          <target state="translated">在函式陳述式清單中，您可以包括 DynamicParam、 開始、 程序，並結束陳述式清單。</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>Syntax:</source>
          <target state="translated">語法：</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>function [&lt;scope:&gt;]<ph id="ph1">&lt;name&gt;</ph> { param ([type]&lt;$pname1&gt; [, [type]&lt;$pname2&gt;]) DynamicParam {<ph id="ph2">&lt;statement list&gt;</ph>} begin {<ph id="ph3">&lt;statement list&gt;</ph>} process {<ph id="ph4">&lt;statement list&gt;</ph>} end {<ph id="ph5">&lt;statement list&gt;</ph>} }</source>
          <target state="translated">函式 [&lt; 範圍︰ &gt;]<ph id="ph1">&lt;name&gt;</ph> {param ([type] &lt;$ pname1 &gt; [，[類型] &lt;$ pname2 &gt;]) DynamicParam {<ph id="ph2">&lt;statement list&gt;</ph>} 開始 {<ph id="ph3">&lt;statement list&gt;</ph>} 處理序 {<ph id="ph4">&lt;statement list&gt;</ph>} 結束 {<ph id="ph5">&lt;statement list&gt;</ph>}}</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>You also have the option of defining one or more parameters outside the statement list after the function name.</source>
          <target state="translated">您也可以定義函式名稱後面的陳述式清單之外的一個或多個參數的選擇。</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>Syntax:</source>
          <target state="translated">語法：</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>function [&lt;scope:&gt;]<ph id="ph1">&lt;name&gt;</ph> [([type]&lt;$pname1&gt;, [[type]&lt;$pname2&gt;])] { DynamicParam {<ph id="ph2">&lt;statement list&gt;</ph>} begin {<ph id="ph3">&lt;statement list&gt;</ph>} process {<ph id="ph4">&lt;statement list&gt;</ph>} end {<ph id="ph5">&lt;statement list&gt;</ph>} }</source>
          <target state="translated">函式 [&lt; 範圍︰ &gt;]<ph id="ph1">&lt;name&gt;</ph> [([type] &lt;$ pname1 &gt; [[type] &lt;$ pname2 &gt;])] {DynamicParam {<ph id="ph2">&lt;statement list&gt;</ph>} 開始 {<ph id="ph3">&lt;statement list&gt;</ph>} 處理序 {<ph id="ph4">&lt;statement list&gt;</ph>} 結束 {<ph id="ph5">&lt;statement list&gt;</ph>}}</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>If</source>
          <target state="translated">如果</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>Defines a conditional.</source>
          <target state="translated">定義條件。</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>Syntax:</source>
          <target state="translated">語法：</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>if (<ph id="ph1">&lt;condition&gt;</ph>) {<ph id="ph2">&lt;statement list&gt;</ph>}</source>
          <target state="translated">if (<ph id="ph1">&lt;condition&gt;</ph>) {<ph id="ph2">&lt;statement list&gt;</ph>}</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>Hidden</source>
          <target state="translated">Hidden</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>Hides class members from the default results of the Get-Member cmdlet, and from IntelliSense and tab completion results.</source>
          <target state="translated">隱藏類別從 Get-member 指令程式的預設結果和 IntelliSense 和索引標籤完成結果的成員。</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>Syntax:</source>
          <target state="translated">語法：</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>Hidden [data type] $member_name</source>
          <target state="translated">隱藏 [資料型別] $member_name</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>In</source>
          <target state="translated">這是</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>Used in a ForEach statement to create a loop that uses each member of a collection.</source>
          <target state="translated">ForEach 陳述式中用來建立使用集合的每個成員的迴圈。</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>Syntax:</source>
          <target state="translated">語法：</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>ForEach (<ph id="ph1">&lt;item&gt;</ph> in <ph id="ph2">&lt;collection&gt;</ph>){<ph id="ph3">&lt;statement list&gt;</ph>}</source>
          <target state="translated">ForEach (<ph id="ph1">&lt;item&gt;</ph> 中 <ph id="ph2">&lt;collection&gt;</ph>) {<ph id="ph3">&lt;statement list&gt;</ph>}</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>InlineScript</source>
          <target state="translated">InlineScript</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>Runs workflow commands in a shared Windows PowerShell session.</source>
          <target state="translated">共用的 Windows PowerShell 工作階段中執行工作流程命令。</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>This keyword is valid only in a Windows PowerShell Workflow.</source>
          <target state="translated">這個關鍵字是在 Windows PowerShell 工作流程中才有效。</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>Syntax:</source>
          <target state="translated">語法：</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>workflow <ph id="ph1">&lt;verb&gt;-&lt;noun&gt;</ph> { InlineScript { &lt;Command/Expression&gt;</source>
          <target state="translated">工作流程 <ph id="ph1">&lt;verb&gt;-&lt;noun&gt;</ph> {InlineScript {&lt; 命令/運算式 &gt;</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>...</source>
          <target state="translated">...</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>} }</source>
          <target state="translated">} }</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source>The InlineScript keyword indicates an InlineScript activity, which runs commands in a shared standard (non-workflow) session.</source>
          <target state="translated">InlineScript 關鍵字指出 InlineScript 活動在標準 （非工作流程） 共用的工作階段中執行命令。</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source>You can use the InlineScript keyword to run commands that are not otherwise valid in a workflow, and to run commands that share data.</source>
          <target state="translated">若要執行工作流程中無效的命令，以及執行共用資料的命令，您可以使用 InlineScript 關鍵字。</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source>By default, the commands in an InlineScript script block run in a separate process.</source>
          <target state="translated">根據預設，InlineScript 指令碼區塊中的命令會執行不同的處理序。</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source>For more information, see about_InlineScript and Running Windows PowerShell Commands in a Workflow (http://technet.microsoft.com/library/jj574197.aspx).</source>
          <target state="translated">如需詳細資訊，請參閱 about_InlineScript 和工作流程 (http://technet.microsoft.com/library/jj574197.aspx) 中執行 Windows PowerShell 命令。</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source>Param</source>
          <target state="translated">參數</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source>Defines the parameters in a function.</source>
          <target state="translated">函式中定義的參數。</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve">
          <source>Syntax:</source>
          <target state="translated">語法：</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source>function [&lt;scope:&gt;]<ph id="ph1">&lt;name&gt;</ph> { param ([type]&lt;$pname1&gt;[, [[type]&lt;$pname2&gt;]]) <ph id="ph2">&lt;statement list&gt;</ph> }</source>
          <target state="translated">函式 [&lt; 範圍︰ &gt;]<ph id="ph1">&lt;name&gt;</ph> {param ([type] &lt;$ pname1 &gt; [，[[type] &lt;$ pname2 &gt;]]) <ph id="ph2">&lt;statement list&gt;</ph> }</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source>Parallel</source>
          <target state="translated">Parallel</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source>Runs workflow commands concurrently and in an undefined order.</source>
          <target state="translated">以未定義的順序同時執行工作流程命令。</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve">
          <source>This keyword is valid only in a Windows PowerShell Workflow.</source>
          <target state="translated">這個關鍵字是在 Windows PowerShell 工作流程中才有效。</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve">
          <source>The Parallel keyword indicates a Parallel script block.</source>
          <target state="translated">平行關鍵字指出平行指令碼區塊。</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve">
          <source>The commands in a Parallel script block can run at the same time and in any order.</source>
          <target state="translated">在此同時，依照任何順序，可以執行平行指令碼區塊中的命令。</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve">
          <source>This feature significantly improves the performance of a workflow.</source>
          <target state="translated">這項功能會大幅提升工作流程的效能。</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve">
          <source>Syntax:</source>
          <target state="translated">語法：</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve">
          <source>workflow <ph id="ph1">&lt;verb&gt;-&lt;noun&gt;</ph> { Parallel {</source>
          <target state="translated">工作流程 <ph id="ph1">&lt;verb&gt;-&lt;noun&gt;</ph> {平行 {</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve">
          <source>…</source>
          <target state="translated">…</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve">
          <source>} }</source>
          <target state="translated">} }</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve">
          <source>The Parallel parameter of the ForEach keyword processes the items in a collection in parallel.</source>
          <target state="translated">平行 ForEach 關鍵字的參數處理以平行方式集合中的項目。</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve">
          <source>The activities in the script block run sequentially on each item, but the script block can run on multiple items at the same time and the items are processed in an undefined order.</source>
          <target state="translated">指令碼區塊中的活動上每個項目中，依序執行指令碼區塊可以同時執行多個項目但未定義的順序來處理項目。</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve">
          <source>Syntax:</source>
          <target state="translated">語法：</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve">
          <source>workflow <ph id="ph1">&lt;verb&gt;-&lt;noun&gt;</ph> { ForEach -Parallel (<ph id="ph2">&lt;item&gt;</ph> in <ph id="ph3">&lt;collection&gt;</ph>) {</source>
          <target state="translated">工作流程 <ph id="ph1">&lt;verb&gt;-&lt;noun&gt;</ph> {ForEach-Parallel (<ph id="ph2">&lt;item&gt;</ph> 中 <ph id="ph3">&lt;collection&gt;</ph>) {</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve">
          <source>...</source>
          <target state="translated">...</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve">
          <source>} }</source>
          <target state="translated">} }</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve">
          <source>For more information, see about_Parallel, about_ForEach-Parallel</source>
          <target state="translated">如需詳細資訊，請參閱 about_Parallel，about_ForEach 平行</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve">
          <source>Process</source>
          <target state="translated">處理程序</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve">
          <source>Specifies a part of the body of a function, along with the DynamicParam, Begin, and End keywords.</source>
          <target state="translated">指定函式，以及 DynamicParam、 Begin、 和 End 關鍵字的內文部分。</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve">
          <source>When a Process statement list receives input from the pipeline, the Process statement list runs one time for each element from the pipeline.</source>
          <target state="translated">當處理程序陳述式清單收到來自管線的輸入時，處理程序陳述式清單會從管線執行一次針對每個項目。</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve">
          <source>If the pipeline provides no objects, the Process statement list does not run.</source>
          <target state="translated">如果管線不提供任何物件，則不會執行處理程序陳述式清單。</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve">
          <source>If the command is the first command in the pipeline, the Process statement list runs one time.</source>
          <target state="translated">如果命令是管線中的第一個命令，處理程序陳述式清單就會執行一次。</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve">
          <source>Syntax:</source>
          <target state="translated">語法：</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve">
          <source>function <ph id="ph1">&lt;name&gt;</ph> { DynamicParam {<ph id="ph2">&lt;statement list&gt;</ph>} begin {<ph id="ph3">&lt;statement list&gt;</ph>} process {<ph id="ph4">&lt;statement list&gt;</ph>} end {<ph id="ph5">&lt;statement list&gt;</ph>} }</source>
          <target state="translated">函式 <ph id="ph1">&lt;name&gt;</ph> {DynamicParam {<ph id="ph2">&lt;statement list&gt;</ph>} 開始 {<ph id="ph3">&lt;statement list&gt;</ph>} 處理序 {<ph id="ph4">&lt;statement list&gt;</ph>} 結束 {<ph id="ph5">&lt;statement list&gt;</ph>}}</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve">
          <source>Return</source>
          <target state="translated">傳回</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve">
          <source>Causes Windows PowerShell to leave the current scope, such as a script or function, and writes the optional expression to the output.</source>
          <target state="translated">會使 Windows PowerShell 保留目前的範圍，例如指令碼或函式，並將寫入輸出的選擇性運算式。</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve">
          <source>Syntax:</source>
          <target state="translated">語法：</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve">
          <source>return [<ph id="ph1">&lt;expression&gt;</ph>]</source>
          <target state="translated">傳回 [<ph id="ph1">&lt;expression&gt;</ph>]</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve">
          <source>Sequence</source>
          <target state="translated">Sequence</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve">
          <source>Runs workflow commands sequentially in a Parallel script block.</source>
          <target state="translated">平行指令碼區塊中，依序執行工作流程命令。</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve">
          <source>This keyword is valid only in a Windows PowerShell Workflow.</source>
          <target state="translated">這個關鍵字是在 Windows PowerShell 工作流程中才有效。</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve">
          <source>Syntax:</source>
          <target state="translated">語法：</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve">
          <source>workflow <ph id="ph1">&lt;verb&gt;-&lt;noun&gt;</ph> { Parallel { Sequence { <ph id="ph2">&lt;Activity&gt;</ph> } } }</source>
          <target state="translated">工作流程 <ph id="ph1">&lt;verb&gt;-&lt;noun&gt;</ph> {平行 {順序 { <ph id="ph2">&lt;Activity&gt;</ph> }}}</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve">
          <source>The Sequence keyword creates a sequence block within a Parallel script block.</source>
          <target state="translated">序列關鍵字建立序列區塊平行指令碼區塊內。</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve">
          <source>The commands in the Sequence script block run sequentially and in the order defined.</source>
          <target state="translated">依序和定義的順序執行順序指令碼區塊中的命令。</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve">
          <source>For more information, see about_Sequence</source>
          <target state="translated">如需詳細資訊，請參閱 about_Sequence</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve">
          <source>Switch</source>
          <target state="translated">參數</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve">
          <source>Specifies a variety of actions to be performed on items from the pipeline or from a file.</source>
          <target state="translated">指定各種不同的項目從管線或檔案上執行的動作。</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve">
          <source>You can use either of the following syntax models.</source>
          <target state="translated">您可以使用下列語法模型之一。</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve">
          <source>Syntax 1:</source>
          <target state="translated">語法 1:</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve">
          <source>switch [-regex|-wildcard|-exact][-casesensitive] ( pipeline )</source>
          <target state="translated">切換 [-regex |-萬用字元 |-確切] [-casesensitive] （管線）</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve">
          <source>{ <ph id="ph1">&lt;string&gt;|&lt;number&gt;|&lt;variable&gt;</ph>|{ <ph id="ph2">&lt;expression&gt;</ph> } {<ph id="ph3">&lt;statement list&gt;</ph>} <ph id="ph4">&lt;string&gt;|&lt;number&gt;|&lt;variable&gt;</ph>|{ <ph id="ph5">&lt;expression&gt;</ph> } {<ph id="ph6">&lt;statement list&gt;</ph>}</source>
          <target state="translated">{ <ph id="ph1">&lt;string&gt;|&lt;number&gt;|&lt;variable&gt;</ph>|{ <ph id="ph2">&lt;expression&gt;</ph> } {<ph id="ph3">&lt;statement list&gt;</ph>} <ph id="ph4">&lt;string&gt;|&lt;number&gt;|&lt;variable&gt;</ph>|{ <ph id="ph5">&lt;expression&gt;</ph> } {<ph id="ph6">&lt;statement list&gt;</ph>}</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve">
          <source>...</source>
          <target state="translated">...</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve">
          <source>default {<ph id="ph1">&lt;statement list&gt;</ph>} }</source>
          <target state="translated">預設 {<ph id="ph1">&lt;statement list&gt;</ph>}}</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve">
          <source>Syntax 2:</source>
          <target state="translated">語法 2:</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve">
          <source>switch [-regex|-wildcard|-exact][-casesensitive] -file filename { <ph id="ph1">&lt;string&gt;|&lt;number&gt;|&lt;variable&gt;</ph>|{ <ph id="ph2">&lt;expression&gt;</ph> } {<ph id="ph3">&lt;statement list&gt;</ph>} <ph id="ph4">&lt;string&gt;|&lt;number&gt;|&lt;variable&gt;</ph>|{ <ph id="ph5">&lt;expression&gt;</ph> } {<ph id="ph6">&lt;statement list&gt;</ph>}</source>
          <target state="translated">切換 [-regex |-萬用字元 |-確切] [-casesensitive]-檔案檔名 { <ph id="ph1">&lt;string&gt;|&lt;number&gt;|&lt;variable&gt;</ph>| { <ph id="ph2">&lt;expression&gt;</ph> }{<ph id="ph3">&lt;statement list&gt;</ph>} <ph id="ph4">&lt;string&gt;|&lt;number&gt;|&lt;variable&gt;</ph>|{ <ph id="ph5">&lt;expression&gt;</ph> }{<ph id="ph6">&lt;statement list&gt;</ph>}</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve">
          <source>...</source>
          <target state="translated">...</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve">
          <source>default {<ph id="ph1">&lt;statement list&gt;</ph>} }</source>
          <target state="translated">預設 {<ph id="ph1">&lt;statement list&gt;</ph>}}</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve">
          <source>Throw</source>
          <target state="translated">擲回</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve">
          <source>Throws an object as an error.</source>
          <target state="translated">為錯誤，擲回的物件。</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve">
          <source>Syntax:</source>
          <target state="translated">語法：</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve">
          <source>throw [<ph id="ph1">&lt;object&gt;</ph>]</source>
          <target state="translated">擲回 [<ph id="ph1">&lt;object&gt;</ph>]</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve">
          <source>Trap</source>
          <target state="translated">設陷</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve">
          <source>Defines a statement list to be run if an error is encountered.</source>
          <target state="translated">定義發生錯誤時執行的陳述式清單。</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve">
          <source>An error type requires brackets.</source>
          <target state="translated">錯誤類型需要方括號。</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve">
          <source>The second pair of brackets indicates that the error type is optional.</source>
          <target state="translated">第二組括號表示錯誤型別為選擇性。</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve">
          <source>Syntax:</source>
          <target state="translated">語法：</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve">
          <source>trap [[<ph id="ph1">&lt;error type&gt;</ph>]] {<ph id="ph2">&lt;statement list&gt;</ph>}</source>
          <target state="translated">trap [[<ph id="ph1">&lt;error type&gt;</ph>]] {<ph id="ph2">&lt;statement list&gt;</ph>}</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve">
          <source>Try</source>
          <target state="translated">請嘗試</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve">
          <source>Defines a statement list to be checked for errors while the statements run.</source>
          <target state="translated">定義陳述式執行時要檢查有錯誤的陳述式清單。</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve">
          <source>If an error occurs, Windows PowerShell continues running in a Catch or Finally statement.</source>
          <target state="translated">如果發生錯誤時，Windows PowerShell 會繼續在 Catch 或 Finally 陳述式中執行。</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve">
          <source>An error type requires brackets.</source>
          <target state="translated">錯誤類型需要方括號。</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve">
          <source>The second pair of brackets indicates that the error type is optional.</source>
          <target state="translated">第二組括號表示錯誤型別為選擇性。</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve">
          <source>Syntax:</source>
          <target state="translated">語法：</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve">
          <source>try {<ph id="ph1">&lt;statement list&gt;</ph>} catch [[&lt;error type]] {<ph id="ph2">&lt;statement list&gt;</ph>} finally {<ph id="ph3">&lt;statement list&gt;</ph>}</source>
          <target state="translated">請嘗試 {<ph id="ph1">&lt;statement list&gt;</ph>} catch [[&lt; 錯誤型別]] {<ph id="ph2">&lt;statement list&gt;</ph>} 最後 {<ph id="ph3">&lt;statement list&gt;</ph>}</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve">
          <source>Until</source>
          <target state="translated">直到</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve">
          <source>Used in a Do statement as a looping construct where the statement list is executed at least one time.</source>
          <target state="translated">使用陳述式清單執行至少一次執行陳述式的迴圈建構。</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve">
          <source>Syntax:</source>
          <target state="translated">語法：</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve">
          <source>do {<ph id="ph1">&lt;statement list&gt;</ph>} until (<ph id="ph2">&lt;condition&gt;</ph>)</source>
          <target state="translated">請勿 {<ph id="ph1">&lt;statement list&gt;</ph>} 直到 (<ph id="ph2">&lt;condition&gt;</ph>)</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve">
          <source>While</source>
          <target state="translated">While</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve">
          <source>Used in a Do statement as a looping construct where the statement list is executed at least one time.</source>
          <target state="translated">使用陳述式清單執行至少一次執行陳述式的迴圈建構。</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve">
          <source>Syntax:</source>
          <target state="translated">語法：</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve">
          <source>do {<ph id="ph1">&lt;statement list&gt;</ph>} while (<ph id="ph2">&lt;condition&gt;</ph>)</source>
          <target state="translated">請勿 {<ph id="ph1">&lt;statement list&gt;</ph>} 時 (<ph id="ph2">&lt;condition&gt;</ph>)</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve">
          <source>Workflow</source>
          <target state="translated">工作流程</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve">
          <source>Creates a script-based Windows PowerShell workflow, that is, a workflow written in the Windows PowerShell language.</source>
          <target state="translated">建立指令碼型 Windows PowerShell 工作流程，也就是在 Windows PowerShell 語言撰寫的工作流程。</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve">
          <source>A Windows PowerShell workflow is a Windows PowerShell command type that is supported by Windows PowerShell and Windows Workflow Foundation.</source>
          <target state="translated">Windows PowerShell 工作流程是 Windows PowerShell 和 Windows Workflow Foundation 所支援的 Windows PowerShell 命令類型。</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve">
          <source>Workflows are designed for complex, long-running tasks that affect multiple computers.</source>
          <target state="translated">工作流程被設計影響多台電腦的複雜、 長時間執行工作。</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve">
          <source>Workflows can be recovered if interrupted, such as by a network outage, and you can suspend and resume them  without losing state or data.</source>
          <target state="translated">如果中斷，例如網路中斷，而且您可以暫停並繼續它們不會遺失狀態或資料，則可以復原的工作流程。</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve">
          <source>Workflows can be written in XAML, the native language of Windows Workflow Foundation, or in the Windows PowerShell language.</source>
          <target state="translated">在 XAML 中，Windows Workflow Foundation 的原生語言或 Windows PowerShell 語言，可以撰寫工作流程。</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve">
          <source>The syntax of a script-based workflow is similar to the syntax of a function.</source>
          <target state="translated">指令碼為基礎的工作流程的語法是類似於函式的語法。</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve">
          <source>However, the unit of execution in a workflow is an activity, instead of a command.</source>
          <target state="translated">不過，工作流程中執行的單位是一項活動，而不是命令。</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve">
          <source>Cmdlets (and other commands) that are used in script-based workflows are implicitly converted to activities.</source>
          <target state="translated">指令程式 （和其他命令），是用於指令碼為基礎的工作流程會隱含地轉換至活動。</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve">
          <source>Some language elements that are permitted in scripts and functions are not permitted in workflows.</source>
          <target state="translated">在工作流程中不允許指令碼和函式中允許使用某些語言項目。</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve">
          <source>Similarly, workflows can include elements that are not found in scripts and functions, such as "persistence points" (checkpoints), self-suspension, and parallel processing.</source>
          <target state="translated">同樣地，工作流程可以包含指令碼和函式，例如 「 持續點 」 中找不到的項目 （檢查點），自行暫停，和平行處理。</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve">
          <source>In addition, all workflows have a set of common parameters that are added by Windows PowerShell when you use the Workflow keyword.</source>
          <target state="translated">此外，所有的工作流程具有一組通用參數，當您使用工作流程關鍵字時，由 Windows PowerShell 所加入。</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve">
          <source>Syntax: workflow &lt;Verb-Noun&gt; { param ([type]&lt;$pname1&gt; [, [type]&lt;$pname2&gt;]) <ph id="ph1">&lt;statement list&gt;</ph> }</source>
          <target state="translated">語法︰ 工作流程 &lt; 動詞-名詞 」 &gt; {param ([type] &lt;$ pname1 &gt; [，[類型] &lt;$ pname2 &gt;]) <ph id="ph1">&lt;statement list&gt;</ph> }</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve">
          <source>workflow &lt;verb-noun&gt; { [CmdletBinding(<ph id="ph1">&lt;Attributes&gt;</ph>)] Param</source>
          <target state="translated">工作流程 &lt; 動詞-名詞 」 &gt; {[CmdletBinding (<ph id="ph1">&lt;Attributes&gt;</ph>)] 參數</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve">
          <source>(</source>
          <target state="translated">(</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve">
          <source>[Parameter(<ph id="ph1">&lt;Arguments&gt;</ph>)] $Param1</source>
          <target state="translated">[參數 (<ph id="ph1">&lt;Arguments&gt;</ph>)] $Param1</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve">
          <source>)</source>
          <target state="translated">)</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve">
          <source>}</source>
          <target state="translated">}</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve">
          <source>For more information about workflows, see about_Workflows and "Getting Started with Windows PowerShell Workflow" (http://go.microsoft.com/fwlink/?LinkID=252592) in the TechNet Library.</source>
          <target state="translated">如需工作流程的詳細資訊，請參閱 about_Workflows 和 「 取得開始使用 Windows PowerShell 工作流程 」 (http://go.microsoft.com/fwlink/?LinkID=252592) TechNet 文件庫中。</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve">
          <source>SEE ALSO</source>
          <target state="translated">另請參閱</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve">
          <source>about_Escape_Characters about_Special_Characters about_Wildcards</source>
          <target state="translated">about_Escape_Characters about_Special_Characters about_Wildcards</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>