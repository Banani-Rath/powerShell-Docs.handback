<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-tw">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-1c394fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">070cc6f9d2419b078727558e70ce878db9849c38</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">reference\4.0\Microsoft.PowerShell.Utility\Import-Csv.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions" />
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">c68f76a4ef3423a1505699de4e60e929cec26858</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">61a9c1a3601224d64a9993225a8548cad3c85b72</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>powershell, cmdlet</source>
          <target state="translated">powershell 指令程式</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Import-Csv</source>
          <target state="translated">Import-Csv</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Import-Csv</source>
          <target state="translated">Import-Csv</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>SYNOPSIS</source>
          <target state="translated">概要</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Creates table-like custom objects from the items in a CSV file.</source>
          <target state="translated">從 CSV 檔案中的項目建立類似表格的自訂物件。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>SYNTAX</source>
          <target state="translated">語法</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Delimiter (Default)</source>
          <target state="translated">分隔符號 （預設值）</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>UseCulture</source>
          <target state="translated">UseCulture</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>DESCRIPTION</source>
          <target state="translated">描述</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>Import-Csv<ept id="p1">**</ept> cmdlet creates table-like custom objects from the items in CSV files.</source>
          <target state="translated"> <bpt id="p1">**</bpt>匯入 Csv<ept id="p1">**</ept> cmdlet 會從 CSV 檔案中的項目建立類似表格的自訂物件。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Each column in the CSV file becomes a property of the custom object and  the items in rows become the property values.</source>
          <target state="translated">CSV 檔案中的每一欄會成為自訂物件的屬性，而列中的項目則會成為屬性值。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Import-Csv<ept id="p1">**</ept> works on any CSV file, including files that are generated by the Export-Csv cmdlet.</source>
          <target state="translated"><bpt id="p1">**</bpt>匯入 Csv<ept id="p1">**</ept> 適用於任何 CSV 檔案，包括 Export-csv 指令程式所產生的檔案。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>You can use the parameters of the <bpt id="p1">**</bpt>Import-Csv<ept id="p1">**</ept> cmdlet to specify the column header row and the item delimiter, or direct <bpt id="p2">**</bpt>Import-Csv<ept id="p2">**</ept> to use the list separator for the current culture as the item delimiter.</source>
          <target state="translated">您可以使用的參數 <bpt id="p1">**</bpt>匯入 Csv<ept id="p1">**</ept> 指令程式來指定欄標題列和項目分隔符號，或直接 <bpt id="p2">**</bpt>匯入 Csv<ept id="p2">**</ept> 使用目前的文化特性的清單分隔字元做為項目分隔符號。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>You can also use the ConvertTo-Csv and ConvertFrom-Csv cmdlets to convert objects to CSV strings (and back).</source>
          <target state="translated">您也可以使用 Convertto-csv 和 Convertfrom-csv cmdlet，將物件轉換成 CSV 字串 （反之亦然）。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>These cmdlets are the same as the <bpt id="p1">**</bpt>Export-CSV<ept id="p1">**</ept> and <bpt id="p2">**</bpt>Import-Csv<ept id="p2">**</ept> cmdlets, except that they do not deal with files.</source>
          <target state="translated">這些指令程式會與相同 <bpt id="p1">**</bpt>EXPORT-CSV<ept id="p1">**</ept> 和 <bpt id="p2">**</bpt>匯入 Csv<ept id="p2">**</ept> 指令程式，不同之處在於它們不會處理檔案。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Beginning in Windows PowerShell 3.0, if a header row entry in a CSV file contains an empty or null value, Windows PowerShell inserts a default header row name and displays a warning message.</source>
          <target state="translated">從 Windows PowerShell 3.0 開始，如果 CSV 檔案中的標題列項目包含空白或 Null 值，Windows PowerShell 就會插入預設的標題列名稱，並顯示警告訊息。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>In previous versions of Windows PowerShell, if a header row entry in a CSV file contains an empty or null value, the <bpt id="p1">**</bpt>Import-Csv<ept id="p1">**</ept> command fails.</source>
          <target state="translated">在舊版的 Windows PowerShell 中，如果 CSV 檔案中的標頭資料列項目包含空白或 null 值， <bpt id="p1">**</bpt>匯入 Csv<ept id="p1">**</ept> 命令失敗。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>EXAMPLES</source>
          <target state="translated">範例</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>-------------------------- EXAMPLE 1 --------------------------</source>
          <target state="translated">-------------------------- 範例 1 --------------------------</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>This example shows how to export and then import a CSV file of objects.</source>
          <target state="translated">這個範例示範如何匯出，然後匯入物件的 CSV 檔案。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>-------------------------- EXAMPLE 2 --------------------------</source>
          <target state="translated">-------------------------- EXAMPLE 2 --------------------------</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>This example shows how to use the <bpt id="p1">*</bpt>Delimiter<ept id="p1">*</ept> parameter of the Import-Csv cmdlet.</source>
          <target state="translated">這個範例示範如何使用 <bpt id="p1">*</bpt>分隔符號<ept id="p1">*</ept> Import-csv cmdlet 的參數。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>In this example, the processes are exported to a file that uses a colon (:) as a delimiter.</source>
          <target state="translated">在這個範例中，會將處理程序匯出至使用冒號 (:) 做為分隔符號的檔案。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>When importing, the Import-Csv file uses the <bpt id="p1">*</bpt>Delimiter<ept id="p1">*</ept> parameter to indicate the delimiter that is used in the file.</source>
          <target state="translated">匯入 Csv 檔案匯入時，會使用 <bpt id="p1">*</bpt>分隔符號<ept id="p1">*</ept> 參數，以指定的檔案中使用的分隔符號。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>-------------------------- EXAMPLE 3 --------------------------</source>
          <target state="translated">-------------------------- EXAMPLE 3 --------------------------</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>This example shows how to use the <bpt id="p1">*</bpt>UseCulture<ept id="p1">*</ept> parameter of the Import-Csv cmdlet.</source>
          <target state="translated">這個範例示範如何使用 <bpt id="p1">*</bpt>UseCulture<ept id="p1">*</ept> Import-csv cmdlet 的參數。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>The first command imports the objects in the Processes.csv file into the $p variable.</source>
          <target state="translated">第一個命令將 Processes.csv 檔案中的物件匯入 $p 變數。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>It uses the <bpt id="p1">*</bpt>UseCulture<ept id="p1">*</ept> parameter to direct Import-Csv to use the list separator defined for the current culture.</source>
          <target state="translated">它會使用 <bpt id="p1">*</bpt>UseCulture<ept id="p1">*</ept> 參數，指示 Import-csv 使用目前文化特性所定義的清單分隔字元。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>The second command displays the list separator for the current culture.</source>
          <target state="translated">第二個命令顯示目前文化特性的清單分隔字元。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>It uses the Get-Culture cmdlet to get the current culture.</source>
          <target state="translated">它使用 Get-culture cmdlet 取得目前的文化特性。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>It uses the dot (.) method to get the TextInfo property of the current culture and the ListSeparator property of the object in TextInfo.</source>
          <target state="translated">它使用點 (.) 方法，取得目前文化特性的 TextInfo 屬性，以及 TextInfo 中物件的 ListSeparator 屬性。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>In this example, the command returns a comma.</source>
          <target state="translated">在這個範例中，命令會傳回一個逗號。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>-------------------------- EXAMPLE 4 --------------------------</source>
          <target state="translated">-------------------------- EXAMPLE 4 --------------------------</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>This example shows how to use the Header parameter of Import-Csv to change the names of properties in the resulting imported object.</source>
          <target state="translated">這個範例示範如何使用 Import-Csv 的 Header 參數，變更所產生匯入物件中的屬性名稱。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>-------------------------- EXAMPLE 5 --------------------------</source>
          <target state="translated">-------------------------- EXAMPLE 5 --------------------------</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>This example shows how to create a custom object in Windows PowerShell by using a CSV file.</source>
          <target state="translated">這個範例示範如何使用 CSV 檔案，在 Windows PowerShell 中建立自訂物件。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>-------------------------- EXAMPLE 6 --------------------------</source>
          <target state="translated">-------------------------- EXAMPLE 6 --------------------------</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>This example shows how the <bpt id="p1">**</bpt>Import-Csv<ept id="p1">**</ept> cmdlet in Windows PowerShell 3.0 responds when the header row in a CSV file includes a null or empty value.</source>
          <target state="translated">這個範例會示範如何 <bpt id="p1">**</bpt>匯入 Csv<ept id="p1">**</ept> Windows PowerShell 3.0 中的指令程式的回應時 CSV 檔案中的標頭資料列包含 null 或空白值。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Import-Csv<ept id="p1">**</ept> substitutes a default name for the header row.</source>
          <target state="translated"><bpt id="p1">**</bpt>匯入 Csv<ept id="p1">**</ept> 替代標頭資料列的預設名稱。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>The default name becomes the name of the property of the object that <bpt id="p1">**</bpt>Import-Csv<ept id="p1">**</ept> returns.</source>
          <target state="translated">預設名稱會變成物件屬性的名稱， <bpt id="p1">**</bpt>匯入 Csv<ept id="p1">**</ept> 傳回。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>PARAMETERS</source>
          <target state="translated">參數</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>-Delimiter</source>
          <target state="translated">分隔符號</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Specifies the delimiter that separates the property values in the CSV file.</source>
          <target state="translated">指定 CSV 檔案中用來分隔屬性值的分隔符號。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>The default is a comma (,).</source>
          <target state="translated">預設值為逗號 (,)。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Enter a character, such as a colon (:).</source>
          <target state="translated">輸入字元，例如冒號 (:)。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>To specify a semicolon (;), enclose it in quotation marks.</source>
          <target state="translated">如果要指定分號 (;)，請將它括在引號內。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>If you specify a character other than the actual string delimiter in the file, Import-Csv cannot create objects from the CSV strings.</source>
          <target state="translated">如果您在檔案中指定實際字串分隔符號以外的字元，則 Import-Csv 無法從 CSV 字串建立物件。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Instead, it returns the strings.</source>
          <target state="translated">相反地，它會傳回字串。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>-Encoding</source>
          <target state="translated">編碼方式</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Specifies the type of character encoding that was used in the CSV file.</source>
          <target state="translated">指定 CSV 檔案中使用的字元編碼類型。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Valid values are Unicode, UTF7, UTF8, ASCII, UTF32, BigEndianUnicode, Default, and OEM.</source>
          <target state="translated">有效值為 Unicode、UTF7、UTF8、ASCII、UTF32、BigEndianUnicode、Default 及 OEM。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>The default is ASCII.</source>
          <target state="translated">預設值為 ASCII。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>This parameter is introduced in Windows PowerShell 3.0.</source>
          <target state="translated">此參數是在 Windows PowerShell 3.0 引進。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>-Header</source>
          <target state="translated">標頭</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Specifies an alternate column header row for the imported file.</source>
          <target state="translated">指定匯入檔案的替代欄標題列。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>The column header determines the names of the properties of the object that Import-Csv creates.</source>
          <target state="translated">欄標題會決定 Import-Csv 建立的物件屬性名稱。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Enter a comma-separated list of the column headers.</source>
          <target state="translated">輸入以逗號分隔的欄標題清單。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Enclose each item in quotation marks (single or double).</source>
          <target state="translated">使用引號 (單引號或雙引號) 括住每個項目。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>Do not enclose the header string in quotation marks.</source>
          <target state="translated">不要使用引號括住標題字串。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>If you enter fewer column headers than there are columns, the remaining columns will have no header.</source>
          <target state="translated">如果輸入的欄標題比欄數還少，則剩餘的欄就沒有標題。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>If you enter more headers than there are columns, the extra headers are ignored.</source>
          <target state="translated">如果輸入的標題比欄數還多，則會忽略額外的標題。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>When using the <bpt id="p1">*</bpt>Header<ept id="p1">*</ept> parameter, delete the original header row from the CSV file.</source>
          <target state="translated">當使用 <bpt id="p1">*</bpt>標頭<ept id="p1">*</ept> 參數，從 CSV 檔案中刪除原始的標頭資料列。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>Otherwise, Import-Csv creates an extra object from the items in the header row.</source>
          <target state="translated">否則，Import-Csv 會從標題列中的項目建立額外的物件。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>-Path</source>
          <target state="translated">-Path</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>Specifies the path to the CSV file to import.</source>
          <target state="translated">指定要匯入的 CSV 檔案路徑。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>You can also pipe a path to Import-Csv.</source>
          <target state="translated">您也可以使用管線將路徑傳送至 Import-Csv。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>-UseCulture</source>
          <target state="translated">-UseCulture</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>Use the list separator for the current culture as the item delimiter.</source>
          <target state="translated">使用目前文化特性的清單分隔字元做為項目分隔符號。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>The default is a comma (,).</source>
          <target state="translated">預設值為逗號 (,)。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>To find the list separator for a culture, use the following command: (Get-Culture).TextInfo.ListSeparator.</source>
          <target state="translated">若要尋找的文化特性的清單分隔字元，使用下列命令: （Get 文化特性）。TextInfo.ListSeparator。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>If you specify a character other than the delimiter used in the CSV strings, ConvertFrom-CSV cannot create objects from the CSV strings.</source>
          <target state="translated">如果指定 CSV 字串中使用的分隔符號以外的字元，ConvertFrom-CSV 就無法從 CSV 字串建立物件。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>Instead, it returns the strings.</source>
          <target state="translated">相反地，它會傳回字串。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>-LiteralPath</source>
          <target state="translated">-LiteralPath</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>Specifies the path to the CSV file to import.</source>
          <target state="translated">指定要匯入的 CSV 檔案路徑。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>Unlike <bpt id="p1">**</bpt>Path<ept id="p1">**</ept>, the value of the <bpt id="p2">**</bpt>LiteralPath<ept id="p2">**</ept> parameter is used exactly as it is typed.</source>
          <target state="translated">不同於 <bpt id="p1">**</bpt>路徑<ept id="p1">**</ept>, ，值 <bpt id="p2">**</bpt>LiteralPath<ept id="p2">**</ept> 完全依照其輸入，使用參數。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>No characters are interpreted as wildcards.</source>
          <target state="translated">沒有字元會被視為萬用字元。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>If the path includes escape characters, enclose it in single quotation marks.</source>
          <target state="translated">如果路徑包含逸出字元，請將它括在單引號中。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>Single quotation marks tell Windows PowerShell not to interpret any characters as escape sequences.</source>
          <target state="translated">單引號告知 Windows PowerShell 不要將任何字元視為逸出序列。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>CommonParameters</source>
          <target state="translated">CommonParameters</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutVariable, -OutBuffer, -PipelineVariable, -Verbose, -WarningAction, and -WarningVariable.</source>
          <target state="translated">這個 cmdlet 支援一般參數:-偵錯、-ErrorAction、-ErrorVariable、-InformationAction-InformationVariable、-OutVariable、-OutBuffer、-PipelineVariable、-Verbose、-WarningAction 以及-WarningVariable。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>For more information, see about_CommonParameters (http://go.microsoft.com/fwlink/?LinkID=113216).</source>
          <target state="translated">如需詳細資訊，請參閱 about_CommonParameters (http://go.microsoft.com/fwlink/?LinkID=113216)。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>INPUTS</source>
          <target state="translated">輸入</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>System.String</source>
          <target state="translated">System.String</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>You can pipe a string that contains a path to Import-Csv.</source>
          <target state="translated">您可以使用管線將包含路徑的字串傳送至 Import-Csv。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>OUTPUTS</source>
          <target state="translated">輸出</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>Object.</source>
          <target state="translated">物件。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>Import-Csv returns the objects described by the content in the CSV file.</source>
          <target state="translated">Import-Csv 會傳回 CSV 檔案中內容所描述的物件。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>NOTES</source>
          <target state="translated">附註</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>Because the imported objects are CSV versions of the object type, they are not recognized and formatted by the Windows PowerShell type formatting entries that format the non-CSV versions of the object type.</source>
          <target state="translated">因為匯入的物件是 CSV 版本的物件類型，所以，Windows PowerShell 類型的格式化項目 (可將非 CSV 版本的物件類型格式化) 無法辨識它們並加以格式化。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>The result of an Import-Csv command is a collection of strings that form a table-like custom object.</source>
          <target state="translated">Import-Csv 命令的結果是一個字串集合，會形成類似表格的自訂物件。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>Each row is a separate string, so you can use the Count property of the object to count the table rows.</source>
          <target state="translated">每一列都是分開的字串，因此，您可以使用物件的 Count 屬性來計算表格列數。</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>The columns are the properties of the object and items in the rows are the property values.</source>
          <target state="translated">欄是物件的屬性，而列中的項目是屬性值。</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>The column header row determines the number of columns and the column names.</source>
          <target state="translated">欄標題列會決定欄數和欄名稱。</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>The column names are also the names of the properties of the objects.</source>
          <target state="translated">欄名稱也是物件的屬性名稱。</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>The first row is interpreted to be the column headers, unless you use the Header parameter to specify column headers.</source>
          <target state="translated">除非使用 Header 參數來指定欄標題，否則第一列會被解譯為欄標題。</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>If any row has more values than the header row, the additional values are ignored.</source>
          <target state="translated">如果有任何列包含的值比標題列還多，即會忽略額外的值。</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>If the column header row is missing a value or contains a null or empty value, <bpt id="p1">**</bpt>Import-Csv<ept id="p1">**</ept> uses "H" followed by a number for the missing column header and property name.</source>
          <target state="translated">如果資料行的標頭資料列遺漏值，或包含 null 或空白值， <bpt id="p1">**</bpt>匯入 Csv<ept id="p1">**</ept> 會使用"H"後面遺漏的資料行標題和屬性名稱的數字。</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>In the CSV file, each object is represented by a comma-separated list of the property values of the object.</source>
          <target state="translated">在 CSV 檔案中，每個物件都會利用以逗號分隔的物件屬性值清單來表示。</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>The property values are converted to strings (by using the ToString() method of the object), so they are generally represented by the name of the property value.</source>
          <target state="translated">屬性值會轉換成字串 (透過使用物件的 ToString() 方法)，因此，它們通常會以屬性值的名稱表示。</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>Export-CSV does not export the methods of the object.</source>
          <target state="translated">Export-CSV 不會匯出物件方法。</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>RELATED LINKS</source>
          <target state="translated">相關的連結</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>ConvertFrom-Csv</source>
          <target state="translated">ConvertFrom-Csv</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>ConvertTo-Csv</source>
          <target state="translated">ConvertTo-Csv</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>Export-Csv</source>
          <target state="translated">Export-Csv</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>