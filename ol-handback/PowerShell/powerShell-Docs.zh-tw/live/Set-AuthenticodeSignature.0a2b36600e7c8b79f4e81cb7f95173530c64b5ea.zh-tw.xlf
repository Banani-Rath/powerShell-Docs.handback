<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-tw">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-1c394fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">793634ef3400ca70924e12981f68ca31ca3f36cd</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">reference\5.0\Microsoft.PowerShell.Security\Set-AuthenticodeSignature.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions" />
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">0a1c607481d9ec8bc2e345c363ccaf202fdf4be9</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">b625cf88a6fcd2b8c7da9d2e27b0b525c7d6283a</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>powershell, cmdlet</source>
          <target state="translated">powershell 指令程式</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Set-AuthenticodeSignature</source>
          <target state="translated">Set-AuthenticodeSignature</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Set-AuthenticodeSignature</source>
          <target state="translated">Set-AuthenticodeSignature</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>SYNOPSIS</source>
          <target state="translated">概要</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Adds an Authenticode signature to a Windows PowerShell script or other file.</source>
          <target state="translated">新增 Authenticode 簽章至 Windows PowerShell 指令碼或其他檔案。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>SYNTAX</source>
          <target state="translated">語法</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>ByPath (Default)</source>
          <target state="translated">ByPath （預設值）</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>ByLiteralPath</source>
          <target state="translated">ByLiteralPath</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>DESCRIPTION</source>
          <target state="translated">描述</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>Set-AuthenticodeSignature<ept id="p1">**</ept> cmdlet adds an Authenticode signature to any file that supports Subject Interface Package (SIP).</source>
          <target state="translated"> <bpt id="p1">**</bpt>Set-authenticodesignature<ept id="p1">**</ept> cmdlet 會將 Authenticode 簽章加入支援主旨介面套件 (SIP) 的任何檔案。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>In a Windows PowerShell script file, the signature takes the form of a block of text that indicates the end of the instructions that are executed in the script.</source>
          <target state="translated">在 Windows PowerShell 指令碼檔案中，簽章會採取文字區塊的形式，指出指令碼中執行的指示結尾。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>If there is a signature in the file when this cmdlet runs, that signature is removed.</source>
          <target state="translated">如果執行此 Cmdlet 時檔案中有簽章，會移除該簽章。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>EXAMPLES</source>
          <target state="translated">範例</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Example 1: Get a code-signing certificate and sign a script</source>
          <target state="translated">範例 1︰ 取得程式碼簽署憑證和簽署指令碼</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>These commands get a code-signing certificate from the Windows PowerShell certificate provider and use it to sign a Windows PowerShell script.</source>
          <target state="translated">這些命令會從 Windows PowerShell 憑證提供者取得程式碼簽署憑證，並使用它簽署 Windows PowerShell 指令碼。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>The first command uses the Get-ChildItem cmdlet and the Windows PowerShell certificate provider to get the certificates in the Cert:\CurrentUser\My subdirectory of the certificate store.</source>
          <target state="translated">第一個命令使用 Get-ChildItem Cmdlet 與 Windows PowerShell 憑證提供者取得憑證存放區之 Cert:\CurrentUser\My 子目錄中的憑證。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>(The Cert: drive is the drive exposed by the certificate provider.) The <bpt id="p1">*</bpt>CodeSigningCert<ept id="p1">*</ept> parameter, which is supported only by the certificate provider, limits the certificates retrieved to those with code-signing authority.</source>
          <target state="translated">(Cert: 磁碟機是憑證提供者所公開的磁碟機)。 <bpt id="p1">*</bpt>CodeSigningCert<ept id="p1">*</ept> 參數，只受到憑證提供者支援，會限制擷取的程式碼簽署授權單位的憑證。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>The command stores the result in the $Cert variable.</source>
          <target state="translated">此命令會將結果儲存在 $Cert 變數。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>The second command uses the <bpt id="p1">**</bpt>Set-AuthenticodeSignature<ept id="p1">**</ept> cmdlet to sign the PSTestInternet2.ps1 script.</source>
          <target state="translated">第二個命令會使用 <bpt id="p1">**</bpt>Set-authenticodesignature<ept id="p1">**</ept> cmdlet 簽署 PSTestInternet2.ps1 指令碼。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>It uses the <bpt id="p1">*</bpt>FilePath<ept id="p1">*</ept> parameter to specify the name of the script and the <bpt id="p2">*</bpt>Certificate<ept id="p2">*</ept> parameter to specify that the certificate is stored in the $Cert variable.</source>
          <target state="translated">它會使用 <bpt id="p1">*</bpt>FilePath<ept id="p1">*</ept> 參數來指定指令碼的名稱和 <bpt id="p2">*</bpt>憑證<ept id="p2">*</ept> 參數來指定憑證會儲存在 $Cert 變數。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Example 2: Get a code-signing certificate and sign a script</source>
          <target state="translated">範例 2︰ 取得程式碼簽署憑證並簽署指令碼</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>These commands use the Get-PfxCertificate cmdlet to find a code signing certificate.</source>
          <target state="translated">這些命令使用 Get-PfxCertificate Cmdlet 尋找程式碼簽署憑證。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Then, they use it to sign a Windows PowerShell script.</source>
          <target state="translated">然後，命令再使用它簽署 Windows PowerShell 指令碼。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>The first command uses the <bpt id="p1">**</bpt>Get-PfxCertificate<ept id="p1">**</ept> cmdlet to find the C:\Test\MySign.pfx certificate and store it in the $Cert variable.</source>
          <target state="translated">第一個命令使用 <bpt id="p1">**</bpt>Get-pfxcertificate<ept id="p1">**</ept> 指令程式尋找 C:\Test\MySign.pfx 憑證並將它儲存在 $Cert 變數。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>The second command uses <bpt id="p1">**</bpt>Set-AuthenticodeSignature<ept id="p1">**</ept> to sign the script.</source>
          <target state="translated">第二個命令會使用 <bpt id="p1">**</bpt>Set-authenticodesignature<ept id="p1">**</ept> 簽署指令碼。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">*</bpt>FilePath<ept id="p1">*</ept> parameter of <bpt id="p2">**</bpt>Set-AuthenticodeSignature<ept id="p2">**</ept> specifies the path to the script file being signed and the <bpt id="p3">*</bpt>Certificate<ept id="p3">*</ept> parameter passes the $Cert variable containing the certificate to <bpt id="p4">**</bpt>Set-AuthenticodeSignature<ept id="p4">**</ept>.</source>
          <target state="translated"> <bpt id="p1">*</bpt>FilePath<ept id="p1">*</ept> 參數 <bpt id="p2">**</bpt>Set-authenticodesignature<ept id="p2">**</ept> 指定要簽署的指令碼檔案的路徑和 <bpt id="p3">*</bpt>憑證<ept id="p3">*</ept> 參數會傳遞包含憑證的 $Cert 變數 <bpt id="p4">**</bpt>Set-authenticodesignature<ept id="p4">**</ept>。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>If the certificate file is password protected, Windows PowerShell prompts you for the password.</source>
          <target state="translated">如果憑證檔案有密碼保護，則 Windows PowerShell 會提示您輸入密碼。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Example 3: Add a digital signature with the root authority</source>
          <target state="translated">範例 3︰ 新增數位簽章的根授權單位</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>This command adds a digital signature that includes the root authority in the trust chain, and it is signed by a third-party timestamp server.</source>
          <target state="translated">此命令在信任鏈結中加入包含根授權單位的數位簽章，並由協力廠商的時間戳記伺服器進行簽署。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>The command uses the <bpt id="p1">*</bpt>FilePath<ept id="p1">*</ept> parameter to specify the script being signed and the <bpt id="p2">*</bpt>Certificate<ept id="p2">*</ept> parameter to specify the certificate that is saved in the $Cert variable.</source>
          <target state="translated">此命令會使用 <bpt id="p1">*</bpt>FilePath<ept id="p1">*</ept> 參數來指定要簽署的指令碼和 <bpt id="p2">*</bpt>憑證<ept id="p2">*</ept> 參數來指定憑證儲存在 $Cert 變數中。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>It uses the <bpt id="p1">*</bpt>IncludeChain<ept id="p1">*</ept> parameter to include all of the signatures in the trust chain (including the root authority).</source>
          <target state="translated">它會使用 <bpt id="p1">*</bpt>IncludeChain<ept id="p1">*</ept> 要包含的所有簽章 （包括根授權單位） 的信任鏈結中的參數。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>It also uses the <bpt id="p1">*</bpt>TimeStampServer<ept id="p1">*</ept> parameter to add a timestamp to the signature.</source>
          <target state="translated">它也會使用 <bpt id="p1">*</bpt>TimeStampServer<ept id="p1">*</ept> 加上時間戳記簽章的參數。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>This prevents the script from failing when the certificate expires.</source>
          <target state="translated">這可防止指令碼在憑證過期時失敗。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>PARAMETERS</source>
          <target state="translated">參數</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>-Certificate</source>
          <target state="translated">憑證</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Specifies the certificate that will be used to sign the script or file.</source>
          <target state="translated">指定要用來簽署指令碼或檔案的憑證。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Enter a variable that stores an object representing the certificate or an expression that gets the certificate.</source>
          <target state="translated">輸入儲存代表憑證之物件的變數，或取得憑證的運算式。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>To find a certificate, use Get-PfxCertificate or use the Get-ChildItem cmdlet in the Certificate (Cert:) drive.</source>
          <target state="translated">若要尋找憑證，請使用 Get-PfxCertificate 或使用憑證 (Cert:) 磁碟機中的 Get-ChildItem Cmdlet。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>If the certificate is not valid or does not have code-signing authority, the command fails.</source>
          <target state="translated">若憑證無效或沒有程式碼簽署授權單位，則命令會失敗。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>-Confirm</source>
          <target state="translated">-Confirm</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Prompts you for confirmation before running the cmdlet.Prompts you for confirmation before running the cmdlet.</source>
          <target state="translated">會提示您進行確認，然後再執行此指令程式。會提示您進行確認，然後再執行此指令程式。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>-FilePath</source>
          <target state="translated">-檔案路徑</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Specifies the path to a file that is being signed.</source>
          <target state="translated">指定要簽署的檔案路徑。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>-Force</source>
          <target state="translated">-Force</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Allows the cmdlet to append a signature to a read-only file.</source>
          <target state="translated">可讓 Cmdlet 將簽章附加到唯讀檔案。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Even using the <bpt id="p1">*</bpt>Force<ept id="p1">*</ept> parameter, the cmdlet cannot override security restrictions.</source>
          <target state="translated">即使使用 <bpt id="p1">*</bpt>Force<ept id="p1">*</ept> 參數，此 cmdlet 無法覆寫安全性限制。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>-HashAlgorithm</source>
          <target state="translated">-HashAlgorithm</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Specifies the hashing algorithm that Windows uses to compute the digital signature for the file.</source>
          <target state="translated">指定 Windows 用來計算檔案數位簽章的雜湊演算法。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>For Windows PowerShell 3.0, the default is SHA-256, which is the Windows default hashing algorithm.</source>
          <target state="translated">Windows PowerShell 3.0 中，預設值是 sha-256，這是 Windows 預設雜湊演算法。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>For Windows PowerShell 2.0, the default is SHA-1.</source>
          <target state="translated">Windows PowerShell 2.0 中，預設值是 sha-1。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Files that are signed with a different hashing algorithm might not be recognized on other systems.</source>
          <target state="translated">在其他系統上可能無法辨識以不同雜湊演算法所簽署的檔案。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>-IncludeChain</source>
          <target state="translated">-IncludeChain</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Determines which certificates in the certificate trust chain are included in the digital signature.</source>
          <target state="translated">判斷數位簽章中包含憑證信任鏈結中的哪個憑證。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>NotRoot is the default.</source>
          <target state="translated">預設值為 NotRoot。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>The acceptable values for this parameter are:</source>
          <target state="translated">此參數接受的值包括：</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>Signer.</source>
          <target state="translated">簽署人。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Includes only the signer's certificate.</source>
          <target state="translated">只包含簽署者的憑證。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>NotRoot.</source>
          <target state="translated">NotRoot。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>Includes all of the certificates in the certificate chain, except for the root authority.</source>
          <target state="translated">包含憑證鏈結中 (除了根授權單位) 的所有憑證。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>All.</source>
          <target state="translated">所有。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>Includes all the certificates in the certificate chain.</source>
          <target state="translated">包含憑證鏈結中的所有憑證。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>-LiteralPath</source>
          <target state="translated">-LiteralPath</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>Specifies the path to a file that is being signed.</source>
          <target state="translated">指定要簽署的檔案路徑。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>Unlike <bpt id="p1">*</bpt>FilePath<ept id="p1">*</ept>, the value of the <bpt id="p2">*</bpt>LiteralPath<ept id="p2">*</ept> parameter is used exactly as it is typed.</source>
          <target state="translated">不同於 <bpt id="p1">*</bpt>FilePath<ept id="p1">*</ept>, ，值 <bpt id="p2">*</bpt>LiteralPath<ept id="p2">*</ept> 完全依照其輸入，使用參數。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>No characters are interpreted as wildcards.</source>
          <target state="translated">沒有字元會被視為萬用字元。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>If the path includes escape characters, enclose it in single quotation marks.</source>
          <target state="translated">如果路徑包含逸出字元，請將它括在單引號中。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>Single quotation marks tell Windows PowerShell not to interpret any characters as escape sequences.</source>
          <target state="translated">單引號告知 Windows PowerShell 不要將任何字元視為逸出序列。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>-TimestampServer</source>
          <target state="translated">-TimestampServer</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>Uses the specified time stamp server to add a time stamp to the signature.</source>
          <target state="translated">使用指定的時間戳記伺服器將時間戳記加入簽章。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>Type the URL of the time stamp server as a string.</source>
          <target state="translated">以字串方式輸入時間戳記伺服器的 URL。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>The time stamp represents the exact time that the certificate was added to the file.</source>
          <target state="translated">時間戳記代表憑證加入檔案的確切時間。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>A time stamp prevents the script from failing if the certificate expires because users and programs can verify that the certificate was valid at the time of signing.</source>
          <target state="translated">如果憑證過期，時間戳記會防止指令碼失敗，因為使用者和程式可以驗證憑證在簽署時是有效的。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>-WhatIf</source>
          <target state="translated">-WhatIf</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>Shows what would happen if the cmdlet runs.</source>
          <target state="translated">顯示執行 Cmdlet 後會發生的情況。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>The cmdlet is not run.Shows what would happen if the cmdlet runs.</source>
          <target state="translated">無法執行此指令程式。顯示執行此指令程式會發生什麼事。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>The cmdlet is not run.</source>
          <target state="translated">未執行 Cmdlet。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>CommonParameters</source>
          <target state="translated">CommonParameters</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutVariable, -OutBuffer, -PipelineVariable, -Verbose, -WarningAction, and -WarningVariable.</source>
          <target state="translated">這個 cmdlet 支援一般參數:-偵錯、-ErrorAction、-ErrorVariable、-InformationAction-InformationVariable、-OutVariable、-OutBuffer、-PipelineVariable、-Verbose、-WarningAction 以及-WarningVariable。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>For more information, see about_CommonParameters (http://go.microsoft.com/fwlink/?LinkID=113216).</source>
          <target state="translated">如需詳細資訊，請參閱 about_CommonParameters (http://go.microsoft.com/fwlink/?LinkID=113216)。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>INPUTS</source>
          <target state="translated">輸入</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>System.String</source>
          <target state="translated">System.String</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>You can pipe a string that contains the file path to <bpt id="p1">**</bpt>Set-AuthenticodeSignature<ept id="p1">**</ept>.</source>
          <target state="translated">您可以透過管道傳送包含檔案路徑的字串 <bpt id="p1">**</bpt>Set-authenticodesignature<ept id="p1">**</ept>。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>OUTPUTS</source>
          <target state="translated">輸出</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>System.Management.Automation.Signature</source>
          <target state="translated">System.Management.Automation.Signature</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>NOTES</source>
          <target state="translated">附註</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>RELATED LINKS</source>
          <target state="translated">相關的連結</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>Get-AuthenticodeSignature</source>
          <target state="translated">Get-AuthenticodeSignature</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>Get-ExecutionPolicy</source>
          <target state="translated">Get-executionpolicy</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>Get-PfxCertificate</source>
          <target state="translated">Get-PfxCertificate</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>Set-ExecutionPolicy</source>
          <target state="translated">Set-ExecutionPolicy</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>about_Execution_Policies</source>
          <target state="translated">about_Execution_Policies</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>about_Signing</source>
          <target state="translated">about_Signing</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>