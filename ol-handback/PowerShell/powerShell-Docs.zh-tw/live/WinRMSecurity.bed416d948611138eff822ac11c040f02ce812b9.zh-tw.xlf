<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-tw">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-db30baf" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">207792452c563ec6cca5c17fbcd122372442d8ac</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">scripting\topic\WinRMSecurity.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions" />
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>WinRMSecurityRedirect</source>
          <target state="translated">WinRMSecurityRedirect</target>         
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>PowerShell Remoting Security Considerations</source>
          <target state="translated">PowerShell 遠端安全性考量</target>         
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>PowerShell Remoting is the recommended way to manage Windows systems.</source>
          <target state="translated">建議採用 PowerShell 遠端來管理 Windows 系統。</target>         
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>PowerShell Remoting is enabled by default in Windows Server 2012 R2.</source>
          <target state="translated">Windows Server 2012 R2 中預設已啟用 PowerShell 遠端。</target>         
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>This document covers security concerns, recommendations, and best practices when using PowerShell Remoting.</source>
          <target state="translated">本文件涵蓋使用 PowerShell 遠端時的安全性考量、建議與最佳做法。</target>         
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>What is PowerShell Remoting?</source>
          <target state="translated">什麼是 PowerShell 遠端？</target>         
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>PowerShell Remoting uses <bpt id="p1">[</bpt>Windows Remote Management (WinRM)<ept id="p1">](https://msdn.microsoft.com/en-us/library/windows/desktop/aa384426.aspx)</ept>, which is the Microsoft implementation of the <bpt id="p2">[</bpt>Web Services for Managment (WS-Managment)<ept id="p2">](http://www.dmtf.org/sites/default/files/standards/documents/DSP0226_1.2.0.pdf)</ept> protocol, to allow users to run PowerShell commands on remote computers.</source>
          <target state="translated">PowerShell 遠端使用 <bpt id="p1">[</bpt>Windows 遠端管理 (WinRM)<ept id="p1">](https://msdn.microsoft.com/en-us/library/windows/desktop/aa384426.aspx)</ept>，這是<bpt id="p2">[</bpt>管理的 Web 服務 (WS 管理)<ept id="p2">](http://www.dmtf.org/sites/default/files/standards/documents/DSP0226_1.2.0.pdf)</ept> 通訊協定的 Microsoft 實作，可讓使用者在遠端電腦上執行 PowerShell 命令。</target>         
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>You can find more information about using PowerShell Remoting at <bpt id="p1">[</bpt>Running Remote Commands<ept id="p1">](https://technet.microsoft.com/en-us/library/dd819505.aspx)</ept>.</source>
          <target state="translated">您可以在<bpt id="p1">[</bpt>執行遠端命令<ept id="p1">](https://technet.microsoft.com/en-us/library/dd819505.aspx)</ept>處找到有關使用 PowerShell 遠端的詳細資訊。</target>         
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>PowerShell Remoting is not the same as using the <bpt id="p1">**</bpt>ComputerName<ept id="p1">**</ept> parameter of a cmdlet to run it on a remote computer, which uses Remote Procedure Call (RPC) as its underlying protocol.</source>
          <target state="translated">PowerShell 遠端和使用 Cmdlet 的 <bpt id="p1">**</bpt>ComputerName<ept id="p1">**</ept> 參數在遠端電腦上執行不同，其使用遠端程序呼叫 (RPC) 作為其基礎通訊協定。</target>         
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>PowerShell Remoting default settings</source>
          <target state="translated">PowerShell 遠端的預設設定</target>         
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>PowerShell Remoting (and WinRM) listen on the following ports:</source>
          <target state="translated">PowerShell 遠端 (和 WinRM) 會接聽以下連接埠︰</target>         
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>HTTP: 5985</source>
          <target state="translated">HTTP：5985</target>         
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>HTTPS: 5986</source>
          <target state="translated">HTTPS： 5986</target>         
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>By default, PowerShell Remoting only allows connections from members of the Administrators group.</source>
          <target state="translated">PowerShell 遠端預設僅允許連線系統管理員群組的成員。</target>         
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Sessions are launched under the user's context, so all operating system access controls applied to individual users and groups continue to apply to them while connected over PowerShell Remoting.</source>
          <target state="translated">工作階段會在使用者的內容下啟動，因此透過 PowerShell 遠端連線時，所有套用至個別使用者和群組的作業系統存取控制，都會繼續套用。</target>         
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>On private networks, the default Windows Firewall rule for PowerShell Remoting accepts all connections.</source>
          <target state="translated">在私人網路中，PowerShell 遠端的預設 Windows 防火牆規則，可以接受所有的連線。</target>         
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>On public networks, the default Windows Firewall rule allows PowerShell Remoting connections only from within the same subnet.</source>
          <target state="translated">在公用網路中，預設的 Windows 防火牆規則只允許來自相同子網路的 PowerShell 遠端連線。</target>         
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>You have to explicitly change that rule to open PowerShell Remoting to all connections on a public network.</source>
          <target state="translated">您必須明確地變更該規則，才可開啟 PowerShell 遠端對公用網路上的所有連線。</target>         
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Warning:<ept id="p1">**</ept> The firewall rule for public networks is meant to protect the computer from potentially malicious external connection attempts.</source>
          <target state="translated"><bpt id="p1">**</bpt>警告︰<ept id="p1">**</ept>公用網路的防火牆規則主要是為了保護電腦免受嘗試進行惡意的外部連線的動作。</target>         
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Use caution when removing this rule.</source>
          <target state="translated">移除此規則時，請務必小心。</target>         
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Process isolation</source>
          <target state="translated">處理程序隔離</target>         
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>PowerShell Remoting uses <bpt id="p1">[</bpt>Windows Remote Management (WinRM)<ept id="p1">](https://msdn.microsoft.com/en-us/library/windows/desktop/aa384426)</ept> for communication between computers.</source>
          <target state="translated">PowerShell 遠端使用 <bpt id="p1">[</bpt>Windows 遠端管理 (WinRM)<ept id="p1">](https://msdn.microsoft.com/en-us/library/windows/desktop/aa384426)</ept> 進行電腦之間的通訊。</target>         
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>WinRM runs as a service under the Network Service account, and spawns isolated processes running as user accounts to host PowerShell instances.</source>
          <target state="translated">WinRM 以網路服務帳戶的服務方式執行，並會繁衍隔離的處理程序作為使用者帳戶，以主控 PowerShell 執行個體。</target>         
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>An instance of PowerShell running as one user has no access to a process running an instance of PowerShell as another user.</source>
          <target state="translated">PowerShell 的執行個體以一位使用者的身分執行時，無法存取執行為另一位使用者的 PowerShell 執行個體。</target>         
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Event logs generated by PowerShell Remoting</source>
          <target state="translated">PowerShell 遠端所產生的事件記錄檔</target>         
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>FireEye has provided a good summary of the event logs and other security evidence generated by PowerShell Remoting sessions, available at</source>
          <target state="translated">FireEye 提供了一份良好的摘要，其中內含 PowerShell 遠端工作階段所產生之事件記錄檔與其他安全性辨識項，而且可以從</target>         
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Investigating PowerShell Attacks<ept id="p1">](https://www.fireeye.com/content/dam/fireeye-www/global/en/solutions/pdfs/wp-lazanciyan-investigating-powershell-attacks.pdf)</ept>.</source>
          <target state="translated"><bpt id="p1">[</bpt>調查 PowerShell 攻擊<ept id="p1">](https://www.fireeye.com/content/dam/fireeye-www/global/en/solutions/pdfs/wp-lazanciyan-investigating-powershell-attacks.pdf)</ept>取得。</target>         
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Encryption and transport protocols</source>
          <target state="translated">加密及傳輸通訊協定</target>         
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>It is helpful to consider the security of a PowerShell Remoting connection from two perspectives: initial authentication, and ongoing communication.</source>
          <target state="translated">最好先從兩個層面考量 PowerShell 遠端連線的安全性：初始驗證，以及進行中的通訊。</target>         
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Regardless of the transport protocol used (HTTP or HTTPS), PowerShell Remoting always encrypts all communication after initial authentication with a per-session AES-256 symmetric key.</source>
          <target state="translated">不論所使用的傳輸通訊協定 (HTTP 或 HTTPS) 為何，PowerShell 遠端一律會在初始驗證之後，以每個工作階段 AES-256 對稱金鑰為單位，來加密所有通訊。</target>         
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Initial authentication</source>
          <target state="translated">初始驗證</target>         
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Authentication confirms the identity of the client to the server - and ideally - the server to the client.</source>
          <target state="translated">驗證會確認用戶端至伺服器的身分識別，在理想的情況下，也會確認伺服器到用戶端的身分識別。</target>         
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>When a client connects to a domain server using its computer name (i.e.: server01, or server01.contoso.com), the default authentication protocol is <bpt id="p1">[</bpt>Kerberos<ept id="p1">](https://msdn.microsoft.com/en-us/library/windows/desktop/aa378747.aspx)</ept>.</source>
          <target state="translated">當用戶端使用其電腦名稱 (例如︰server01 或 server01.contoso.com) 連線到網域伺服器時，預設的驗證通訊協定是 <bpt id="p1">[</bpt>Kerberos<ept id="p1">](https://msdn.microsoft.com/en-us/library/windows/desktop/aa378747.aspx)</ept>。</target>         
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Kerberos guarantees both the user identity and server identity without sending any sort of reusable credential.</source>
          <target state="translated">Kerberos 可保證使用者識別與伺服器識別，而不會傳送任何種類可重複使用的認證。</target>         
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>When a client connects to a domain server using its IP address, or connects to a workgroup server, Kerberos authentication is not possible.</source>
          <target state="translated">當用戶端使用其 IP 位址連線到網域伺服器時，或連線到工作群組伺服器時，便無法進行 Kerberos 驗證。</target>         
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>In that case, PowerShell Remoting relies on the <bpt id="p1">[</bpt>NTLM authentication protocol<ept id="p1">](https://msdn.microsoft.com/en-us/library/windows/desktop/aa378749.aspx)</ept>.</source>
          <target state="translated">在此情況下，PowerShell 遠端會仰賴 <bpt id="p1">[</bpt>NTLM 驗證通訊協定<ept id="p1">](https://msdn.microsoft.com/en-us/library/windows/desktop/aa378749.aspx)</ept>。</target>         
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>The NTLM authentication protocol guarantees the user identity without sending any sort of delegable credential.</source>
          <target state="translated">NTLM 驗證通訊協定可保證使用者識別，且不會傳送任何種類可委派的認證。</target>         
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>To prove user identity, the NTLM protocol requires that both the client and server compute a session key from the user's password without ever exchanging the password itself.</source>
          <target state="translated">為了要證明使用者識別，NTLM 通訊協定需要用戶端與伺服器從使用者的密碼來計算工作階段金鑰，而不會交換密碼本身。</target>         
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>The server typically does not know the user's password, so it communicates with the domain controller, which does know the user's password and calculates the session key for the server.</source>
          <target state="translated">伺服器通常不知道使用者的密碼，因此會和知道使用者密碼的網域控制站互相通訊，並為伺服器計算出工作階段金鑰。</target>         
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>The NTLM protocol does not, however, guarantee server identity.</source>
          <target state="translated">但 NTLM 通訊協定並不能保證伺服器識別。</target>         
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>As with all protocols that use NTLM for authentication, an attacker with access to a domain-joined computer's machine account could invoke the domain controller to compute an NTLM session-key and thereby impersonate the server.</source>
          <target state="translated">因為所有通訊協定都使用 NTLM 進行驗證，所以可以存取已加入網域之電腦的電腦帳戶之攻擊者，就能叫用網域控制站計算出 NTLM 工作階段金鑰，然後模擬該伺服器。</target>         
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>NTLM-based authentication is disabled by default, but may be permitted by either configuring SSL on the target server, or by configuring the WinRM TrustedHosts setting.</source>
          <target state="translated">預設會停用 NTLM 的驗證，但在目標伺服器上設定 SSL 或進行 WinRM TrustedHosts 的設定時，可能會允許。</target>         
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Using SSL certificates to validate server identity during NTLM-based connections</source>
          <target state="translated">NTLM 連線期間使用 SSL 憑證來驗證伺服器識別</target>         
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Since the NTLM authentication protocol cannot ensure the identity of the target server (only that it already knows your password), you can configure target servers to use SSL for PowerShell Remoting.</source>
          <target state="translated">由於 NTLM 驗證通訊協定無法確保目標伺服器 (只有它已經知道您的密碼) 的身分識別，所以您可以將目標伺服器設定為使用 SSL 進行 PowerShell 遠端。</target>         
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Assigning a SSL certificate to the target server (if issued by a Certificate Authority that the client also trusts) enables NTLM-based authentication that guarantees both the user identity and server identity.</source>
          <target state="translated">將 SSL 憑證指派至目標伺服器 (如果由用戶端也信任的憑證授權中心發出)，可讓 NTLM 驗證能保證使用者識別與伺服器識別。</target>         
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Ignoring NTLM-based server identity errors</source>
          <target state="translated">忽略 NTLM 伺服器識別錯誤</target>         
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>If deploying a SSL certificate to a server for NTLM connections is infeasible, you may suppress the resulting identity errors by adding the server to the WinRM <bpt id="p1">**</bpt>TrustedHosts<ept id="p1">**</ept> list.</source>
          <target state="translated">如果將 SSL 憑證部署至伺服器進行 NTLM 連線並不可行，可以隱藏所產生的身分識別錯誤，方法是將該伺服器新增至 WinRM <bpt id="p1">**</bpt>TrustedHosts<ept id="p1">**</ept> 清單。</target>         
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Please note that adding a server name to the TrustedHosts list should not be considered as any form of statement of the trustworthiness of the hosts themselves - as the NTLM authentication protocol cannot guarantee that you are in fact connecting to the host you are intending to connect to.</source>
          <target state="translated">請注意，將伺服器名稱新增到 TrustedHosts 清單的動作，不應視為任何形式對主機本身信賴的保證，因為 NTLM 驗證通訊協定無法保證實際上連線到的主機是想要連線的主機。</target>         
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Instead, you should consider the TrustedHosts setting to be the list of hosts for which you wish to suppress the error generated by being unable to verify the server's identity.</source>
          <target state="translated">相反地，應考慮讓 TrustedHosts 設定成為想要隱藏錯誤 (因無法驗證伺服器身分識別而產生之錯誤) 的主機清單。</target>         
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Ongoing Communication</source>
          <target state="translated">進行中的通訊</target>         
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Once initial authentication is complete, the <bpt id="p1">[</bpt>PowerShell Remoting Protocol<ept id="p1">](https://msdn.microsoft.com/en-us/library/dd357801.aspx)</ept> encrypts all ongoing communication with a per-session AES-256 symmetric key.</source>
          <target state="translated">完成初始驗證之後，<bpt id="p1">[</bpt>PowerShell 遠端通訊協定<ept id="p1">](https://msdn.microsoft.com/en-us/library/dd357801.aspx)</ept> 會使用每個工作階段的 AES-256 對稱金鑰，加密所有進行中的通訊。</target>         
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Making the second hop</source>
          <target state="translated">進行第二次跳躍</target>         
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>By default, PowerShell Remoting uses Kerberos (if available) or NTLM for authentication.</source>
          <target state="translated">PowerShell 遠端預設會使用 (如果提供) Kerberos 或 NTLM 驗證。</target>         
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Both of these protocols authenticate to the remote machine without sending credentials to it.</source>
          <target state="translated">這兩種通訊協定驗證遠端電腦時，皆不需要將認證傳送到電腦。</target>         
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>This is the most secure way to authenticate, but because the remote machine does not have the user's credentials, it cannot access other computers and services on the user's behalf.</source>
          <target state="translated">這是最安全的驗證方式，但因為遠端電腦並沒有使用者的認證，所以無法代替使用者存取其他電腦與服務。</target>         
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>This is known as the "Double-Hop" problem.</source>
          <target state="translated">這稱為「雙躍點 」問題。</target>         
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>There are several ways to avoid this problem:</source>
          <target state="translated">避免這個問題的方法有數種︰</target>         
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Kerberos Constrained Delegation</source>
          <target state="translated">Kerberos 限制委派</target>         
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>For highly trusted servers, you can enable <bpt id="p1">[</bpt>Kerberos Constrained Delegation<ept id="p1">](https://technet.microsoft.com/en-us/library/cc995228.aspx)</ept>.</source>
          <target state="translated">若是高度受信任的伺服器，可以啟用 <bpt id="p1">[</bpt>Kerberos 限制委派<ept id="p1">](https://technet.microsoft.com/en-us/library/cc995228.aspx)</ept>。</target>         
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>This allows the remote server to impersonate the authenticated user to a specified list of computers and services.</source>
          <target state="translated">遠端伺服器如此即可對指定的電腦與服務清單，模擬已經過驗證的使用者。</target>         
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>Trust between remote computers</source>
          <target state="translated">遠端電腦之間的信任</target>         
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>If you trust users connected remotely to <bpt id="p1">*</bpt>Server1<ept id="p1">*</ept> to resources on <bpt id="p2">*</bpt>Server2<ept id="p2">*</ept>, you can explicitly grant <bpt id="p3">*</bpt>Server1<ept id="p3">*</ept> access to those resources.</source>
          <target state="translated">如果信任使用者從遠端連線到 <bpt id="p1">*</bpt>Server1<ept id="p1">*</ept>，取用 <bpt id="p2">*</bpt>Server2<ept id="p2">*</ept> 的資源，可以明確授與 <bpt id="p3">*</bpt>Server1<ept id="p3">*</ept> 存取這些資源。</target>         
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>Use explicit credentials when accessing remote resources</source>
          <target state="translated">存取遠端資源時使用明確認證</target>         
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>You can explicitly pass your credentials to a remote resource by using the <bpt id="p1">**</bpt>Credential<ept id="p1">**</ept> parameter of a cmdlet.</source>
          <target state="translated">您可以使用 Cmdlet 的 <bpt id="p1">**</bpt>Credential<ept id="p1">**</ept> 參數，明確地將認證傳遞至遠端資源。</target>         
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>For example:</source>
          <target state="translated">例如：</target>         
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>CredSSP</source>
          <target state="translated">CredSSP</target>         
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>You can use the <bpt id="p1">[</bpt>Credential Security Support Provider (CredSSP)<ept id="p1">](https://msdn.microsoft.com/en-us/library/windows/desktop/bb931352.aspx)</ept> for authentication (by specifying "CredSSP" as the value of the <ph id="ph1">`Authentication`</ph> parameter of a call to the <bpt id="p2">[</bpt>New-PSSession<ept id="p2">](https://technet.microsoft.com/en-us/library/hh849717.aspx)</ept> cmdlet.</source>
          <target state="translated">您可以使用<bpt id="p1">[</bpt>認證安全性支援提供者 (CredSSP)<ept id="p1">](https://msdn.microsoft.com/en-us/library/windows/desktop/bb931352.aspx)</ept> 進行驗證 (藉由將 "CredSSP"指定為呼叫 <bpt id="p2">[</bpt>New-PSSession<ept id="p2">](https://technet.microsoft.com/en-us/library/hh849717.aspx)</ept> Cmdlet 的 <ph id="ph1">`Authentication`</ph> 參數值。</target>         
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>CredSSP passes credentials in plain text to the server, so using it opens you up to credential theft attacks.</source>
          <target state="translated">CredSSP 會以純文字將認證傳遞至伺服器，因此加以使用時，可能會讓您暴露在認證遭竊的攻擊風險中。</target>         
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>If the remote computer is compromised, the attacker has access to the user's credentials.</source>
          <target state="translated">如果遠端電腦遭到入侵，攻擊者就能存取使用者的認證。</target>         
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>CredSSP is disabled by default on both client and server computers.</source>
          <target state="translated">預設會停用 CredSSP (用戶端與伺服器電腦皆是)。</target>         
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>You should enable CredSSP only in the most trusted environments.</source>
          <target state="translated">只有在最受信任的環境中才應啟用 CredSSP。</target>         
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>For example, a domain administrator connecting to a domain controller because the domain controller is highly trusted.</source>
          <target state="translated">例如，因為網域控制站為高度受信任，所以網域系統管理員會連線到網域控制站。</target>         
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>For more information about security concerns when using CredSSP for PowerShell Remoting, see <bpt id="p1">[</bpt>Accidental Sabotage: Beware of CredSSP<ept id="p1">](http://www.powershellmagazine.com/2014/03/06/accidental-sabotage-beware-of-credssp)</ept>.</source>
          <target state="translated">如需使用 PowerShell 遠端的 CredSSP 時，安全性考量的詳細資訊，請參閱 <bpt id="p1">[</bpt>Accidental Sabotage: Beware of CredSSP<ept id="p1">](http://www.powershellmagazine.com/2014/03/06/accidental-sabotage-beware-of-credssp)</ept> (意外妨害：注意 CredSSP)。</target>         
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>For more information about credential theft attacks, see <bpt id="p1">[</bpt>Mitigating Pass-the-Hash (PtH) Attacks and Other Credential Theft<ept id="p1">](https://www.microsoft.com/en-us/download/details.aspx?id=36036)</ept>.</source>
          <target state="translated">如需認證遭竊攻擊的詳細資訊，請參閱<bpt id="p1">[</bpt>降低傳遞雜湊 (PtH) 攻擊與竊取其他認證<ept id="p1">](https://www.microsoft.com/en-us/download/details.aspx?id=36036)</ept>。</target>         
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>