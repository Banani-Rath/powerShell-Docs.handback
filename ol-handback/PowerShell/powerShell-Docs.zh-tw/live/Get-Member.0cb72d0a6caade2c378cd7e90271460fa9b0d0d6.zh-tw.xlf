<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-tw">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-1c394fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d75f782f52514fe0e45c6c2d11e6b8238bf9c8e2</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">reference\5.0\Microsoft.PowerShell.Utility\Get-Member.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions" />
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">a73d92e7bea2161f3cf02bb9e5590f1ef12ec38d</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">3b96567befc087249b7e96c7ccb6567cfa39ad38</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>powershell, cmdlet</source>
          <target state="translated">powershell 指令程式</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Get-Member</source>
          <target state="translated">Get-Member</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Get-Member</source>
          <target state="translated">Get-Member</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>SYNOPSIS</source>
          <target state="translated">概要</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Gets the properties and methods of objects.</source>
          <target state="translated">取得物件的屬性和方法。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>SYNTAX</source>
          <target state="translated">語法</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>DESCRIPTION</source>
          <target state="translated">描述</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>Get-Member<ept id="p1">**</ept> cmdlet gets the members, the properties and methods, of objects.</source>
          <target state="translated"> <bpt id="p1">**</bpt>Get-member<ept id="p1">**</ept> cmdlet 會取得成員、 屬性和物件的方法。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>To specify the object, use the <bpt id="p1">*</bpt>InputObject<ept id="p1">*</ept> parameter or pipe an object to <bpt id="p2">**</bpt>Get-Member<ept id="p2">**</ept>.</source>
          <target state="translated">若要指定的物件，使用 <bpt id="p1">*</bpt>InputObject<ept id="p1">*</ept> 參數或使用管線將物件 <bpt id="p2">**</bpt>Get-member<ept id="p2">**</ept>。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>To get information about static members, the members of the class, not of the instance, use the <bpt id="p1">*</bpt>Static<ept id="p1">*</ept> parameter.</source>
          <target state="translated">若要取得靜態成員的相關資訊，請使用類別的成員，不是執行個體， <bpt id="p1">*</bpt>靜態<ept id="p1">*</ept> 參數。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>To get only certain types of members, such as <bpt id="p1">**</bpt>NoteProperties<ept id="p1">**</ept>, use the <bpt id="p2">*</bpt>MemberType<ept id="p2">*</ept> parameter.</source>
          <target state="translated">若要取得特定類型的成員，例如 <bpt id="p1">**</bpt>NoteProperties<ept id="p1">**</ept>, ，使用 <bpt id="p2">*</bpt>MemberType<ept id="p2">*</ept> 參數。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>EXAMPLES</source>
          <target state="translated">範例</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Example 1: Get the members of process objects</source>
          <target state="translated">範例 1︰ 取得處理程序物件的成員</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>This command displays the properties and methods of the process objects (System.ServiceProcess.ServiceController) that are generated by the Get-Service cmdlet.</source>
          <target state="translated">這個命令會顯示 Get-Service Cmdlet 所產生之處理程序物件 (System.ServiceProcess.ServiceController) 的屬性和方法 。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>The command uses the pipeline operator (|) to send the output of a <bpt id="p1">**</bpt>Get-Service<ept id="p1">**</ept> command to <bpt id="p2">**</bpt>Get-Member<ept id="p2">**</ept>.</source>
          <target state="translated">命令使用管線運算子 (|) 的輸出傳送至 <bpt id="p1">**</bpt>Get-service<ept id="p1">**</ept> 命令 <bpt id="p2">**</bpt>Get-member<ept id="p2">**</ept>。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Because the <bpt id="p1">**</bpt>Get-Member<ept id="p1">**</ept> part of the command does not have any parameters, it uses all of the default values.</source>
          <target state="translated">因為 <bpt id="p1">**</bpt>Get-member<ept id="p1">**</ept> 命令的一部分並沒有任何參數，它會使用所有預設值。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>As such, it gets all member types, but it does not get static members and does not display intrinsic members.</source>
          <target state="translated">因此，它會取得所有成員類型，但是不會取得靜態成員，也不會顯示內建成員。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Example 2: Get members of service objects</source>
          <target state="translated">範例 2︰ 取得服務物件的成員</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>This example gets all of the members (properties and methods) of the service objects (System.ServiceProcess.ServiceController) retrieved by the Get-Service cmdlet, including the intrinsic members, such as PSBase and PSObject, and the get_ and set_ methods.</source>
          <target state="translated">這個範例會取得 Get-Service Cmdlet 所抓取之服務物件 (System.ServiceProcess.ServiceController) 的所有成員 (屬性和方法)，包括內建成員 (例如 PSBase 和 PSObject) 和 get_ 和 set_ 方法。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>The first command uses the <bpt id="p1">**</bpt>Get-Service<ept id="p1">**</ept> cmdlet to get objects that represent the services on the system.</source>
          <target state="translated">第一個命令使用 <bpt id="p1">**</bpt>Get-service<ept id="p1">**</ept> cmdlet 來取得代表系統上的服務物件。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>It uses a pipeline operator (|) to pass the service objects to the <bpt id="p1">**</bpt>Get-Member<ept id="p1">**</ept> cmdlet.</source>
          <target state="translated">它使用管線運算子 (|) 將服務物件傳遞至 <bpt id="p1">**</bpt>Get-member<ept id="p1">**</ept> 指令程式。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>Get-Member<ept id="p1">**</ept> command uses the <bpt id="p2">*</bpt>Force<ept id="p2">*</ept> parameter to add the intrinsic members and compiler-generated members of the objects to the display.</source>
          <target state="translated"> <bpt id="p1">**</bpt>Get-member<ept id="p1">**</ept> 命令會使用 <bpt id="p2">*</bpt>Force<ept id="p2">*</ept> 參數新增至顯示的內建函式成員和編譯器產生之物件的成員。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Get-Member<ept id="p1">**</ept> gets these members, but it hides them by default.</source>
          <target state="translated"><bpt id="p1">**</bpt>Get-member<ept id="p1">**</ept> 取得這些成員，但它會隱藏它們的預設值。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>You can use these properties and methods in the same way that you would use an adapted method of the object.</source>
          <target state="translated">當您使用這些屬性和方法時，可以比照與您使用物件的已調整方法時相同的方式。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>The second command shows how to display the value of the PSBase property of the Schedule service.</source>
          <target state="translated">第二個命令示範如何顯示 Schedule 服務之 PSBase 屬性的值。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Example 3: Get extended members of service objects</source>
          <target state="translated">範例 3︰ 取得更多服務物件的成員</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>This command gets the methods and properties of service objects that were extended by using the Types.ps1xml file or the Add-Member cmdlet.</source>
          <target state="translated">這個命令會取得藉由使用 Types.ps1xml 檔案或 Add-Member Cmdlet 擴充之服務物件的方法和屬性。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>Get-Member<ept id="p1">**</ept> command uses the <bpt id="p2">*</bpt>View<ept id="p2">*</ept> parameter to get only the extended members of the service objects.</source>
          <target state="translated"> <bpt id="p1">**</bpt>Get-member<ept id="p1">**</ept> 命令會使用 <bpt id="p2">*</bpt>檢視<ept id="p2">*</ept> 參數，以取得服務物件的擴充的成員。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>In this case, the extended member is the Name property, which is an alias property of the ServiceName property.</source>
          <target state="translated">在此情況下，擴充成員即為 Name 屬性，亦即 ServiceName 屬性的別名屬性。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Example 4: Get script properties of event log objects</source>
          <target state="translated">範例 4︰ 取得指令碼物件內容的事件記錄檔</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>This command gets the script properties of event log objects in the System log in Event Viewer.</source>
          <target state="translated">這個命令會取得「事件檢視器」內系統記錄檔中事件記錄檔物件的指令碼屬性。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>The command uses the <bpt id="p1">*</bpt>MemberType<ept id="p1">*</ept> parameter to get only objects with a value of ScriptProperty for their MemberType property.</source>
          <target state="translated">此命令會使用 <bpt id="p1">*</bpt>MemberType<ept id="p1">*</ept> 參數，以取得其 MemberType 屬性值為 ScriptProperty 的物件。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>The command returns the EventID property of the <bpt id="p1">**</bpt>EventLog<ept id="p1">**</ept> object.</source>
          <target state="translated">此命令會傳回的 EventID 屬性 <bpt id="p1">**</bpt>EventLog<ept id="p1">**</ept> 物件。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Example 5: Get objects with a specified property</source>
          <target state="translated">範例 5︰ 取得具有指定之屬性的物件</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>This command gets objects that have a MachineName property from a list of cmdlets.</source>
          <target state="translated">這個命令會從 Cmdlet 清單中取得具有 MachineName 屬性的物件。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>The first command stores the names of several cmdlets in the $A variable.</source>
          <target state="translated">第一個命令會將 $A 變數中的數個 cmdlet 的名稱。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>The second command uses a <bpt id="p1">**</bpt>ForEach<ept id="p1">**</ept> statement to invoke each command, send the results to <bpt id="p2">**</bpt>Get-Member<ept id="p2">**</ept>, and limit the results from <bpt id="p3">**</bpt>Get-Member<ept id="p3">**</ept> to members that have the name MachineName.</source>
          <target state="translated">第二個命令會使用 <bpt id="p1">**</bpt>ForEach<ept id="p1">**</ept> 陳述式來叫用每個命令，將結果傳送到 <bpt id="p2">**</bpt>Get-member<ept id="p2">**</ept>, ，並限制結果 <bpt id="p3">**</bpt>Get-member<ept id="p3">**</ept> MachineName 名稱的成員。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>The results show that only process objects (<bpt id="p1">**</bpt>System.Diagnostics.Process<ept id="p1">**</ept>) and service objects (<bpt id="p2">**</bpt>System.ServiceProcess.ServiceController<ept id="p2">**</ept>) have a MachineName property.</source>
          <target state="translated">結果顯示只有處理程序物件 (<bpt id="p1">**</bpt>System.Diagnostics.Process<ept id="p1">**</ept>) 與服務物件 (<bpt id="p2">**</bpt>System.ServiceProcess.ServiceController<ept id="p2">**</ept>) 具有 MachineName 屬性。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Example 6: Get members for an array</source>
          <target state="translated">範例 6︰ 取得陣列的成員</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>This example demonstrates how to find the properties and methods of an array of objects when you have only one object of the given type.</source>
          <target state="translated">這個範例示範當您只有一個物件屬於指定的類型時，如何尋找物件陣列的屬性和方法。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Because the goal of the command is to find the properties of an array, the first command uses the <bpt id="p1">*</bpt>InputObject<ept id="p1">*</ept> parameter.</source>
          <target state="translated">因為命令的目標是要尋找的屬性陣列，第一個命令會使用 <bpt id="p1">*</bpt>InputObject<ept id="p1">*</ept> 參數。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>It uses the at symbol (@) to indicate an array.</source>
          <target state="translated">它會使用 at 符號 (@) 來指出陣列。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>In this case, the array contains only one object, the integer 1.</source>
          <target state="translated">在此情況下，陣列只包含一個物件，亦即整數 1。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>The third command uses the <bpt id="p1">**</bpt>Get-Member<ept id="p1">**</ept> cmdlet to get the properties and methods of an array of integers, and the command saves them in the $A variable.</source>
          <target state="translated">第三個命令會使用 <bpt id="p1">**</bpt>Get-member<ept id="p1">**</ept> cmdlet 來取得的屬性和陣列的整數和命令的方法將它們儲存在 $A 變數。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>The fourth command uses the Count property of the array to find the number of objects in the $A variable.</source>
          <target state="translated">第四個命令使用陣列的 Count 屬性來尋找 $A 變數中的物件數目。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Example 7: Determine which object properties you can set</source>
          <target state="translated">範例 7︰ 決定您可以設定哪些物件屬性</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>This example shows how to determine which properties of an object can be changed.</source>
          <target state="translated">這個範例示範如何判斷物件的哪些屬性可以變更。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>The example uses a file, but you can use this command format to find the changeable properties of any object in Windows PowerShell.</source>
          <target state="translated">此範例使用檔案，但是您可以使用這個命令格式來尋找 Windows PowerShell 中任何物件的可變更屬性。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>The first command uses the Get-Item cmdlet to get a text file, and then it saves the file object in the $File variable.</source>
          <target state="translated">第一個命令使用 Get-item cmdlet 取得文字檔案，然後將檔案物件儲存在 $File 變數。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>The second command gets all of the changeable properties of the file object in the $File variable and displays the names of the properties in a table.</source>
          <target state="translated">第二個命令取得 $File 變數中的所有變更之檔案物件的屬性，並顯示資料表中的屬性名稱。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>The third command gets the changeable properties of all objects in your Windows PowerShell session.</source>
          <target state="translated">第三個命令會取得您 Windows PowerShell 工作階段中所有物件的可變更屬性。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Example 8: Get members of each item in a collection</source>
          <target state="translated">範例 8: 集合中取得成員的每個項目</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>This example shows how the <bpt id="p1">*</bpt>InputObject<ept id="p1">*</ept> parameter works in the <bpt id="p2">**</bpt>Get-Member<ept id="p2">**</ept> cmdlet.</source>
          <target state="translated">這個範例會示範如何 <bpt id="p1">*</bpt>InputObject<ept id="p1">*</ept> 參數適用於 <bpt id="p2">**</bpt>Get-member<ept id="p2">**</ept> 指令程式。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>When you use the <bpt id="p1">*</bpt>InputObject<ept id="p1">*</ept> parameter to get the members of a collection, <bpt id="p2">**</bpt>Get-Member<ept id="p2">**</ept> gets the members of the collection.</source>
          <target state="translated">當您使用 <bpt id="p1">*</bpt>InputObject<ept id="p1">*</ept> 參數，以取得集合的成員 <bpt id="p2">**</bpt>Get-member<ept id="p2">**</ept> 取得集合中的成員。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>When you pipe a collection of objects to <bpt id="p1">**</bpt>Get-Member<ept id="p1">**</ept>, <bpt id="p2">**</bpt>Get-Member<ept id="p2">**</ept> gets the members of each item in the collection.</source>
          <target state="translated">當您使用管線傳送至物件的集合 <bpt id="p1">**</bpt>Get-member<ept id="p1">**</ept>, ，<bpt id="p2">**</bpt>Get-member<ept id="p2">**</ept> 取得集合中的每個項目的成員。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>The first command gets the services on the local computer and saves the services in the $S variable.</source>
          <target state="translated">第一個命令會取得本機電腦上的服務，並將服務儲存 $S 變數中。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>The second command pipes the $S variable to the <bpt id="p1">**</bpt>Get-Member<ept id="p1">**</ept> cmdlet.</source>
          <target state="translated">第二個命令使用管線傳送 $S 變數 <bpt id="p1">**</bpt>Get-member<ept id="p1">**</ept> 指令程式。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Get-Member<ept id="p1">**</ept> gets the types of each member of $S and the members of that type.</source>
          <target state="translated"><bpt id="p1">**</bpt>Get-member<ept id="p1">**</ept> 取得 $S 的每個成員與該型別的成員的類型。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>In this case, it gets ServiceController objects and lists the members, such as RequiredServices and Close.</source>
          <target state="translated">在此情況下，它會取得 ServiceController 物件並列出成員 (例如 RequiredServices 和 Close)。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>The third command uses the <bpt id="p1">*</bpt>InputObject<ept id="p1">*</ept> parameter of <bpt id="p2">**</bpt>Get-Member<ept id="p2">**</ept> to submit the $S variable.</source>
          <target state="translated">第三個命令會使用 <bpt id="p1">*</bpt>InputObject<ept id="p1">*</ept> 參數 <bpt id="p2">**</bpt>Get-member<ept id="p2">**</ept> 提交 $S 變數。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Get-Member<ept id="p1">**</ept> gets the type (<bpt id="p2">**</bpt>System.Object<ph id="ph1">\[\]</ph><ept id="p2">**</ept>) and the members of the collection (or array) of <bpt id="p3">**</bpt>ServiceController<ept id="p3">**</ept> objects, such as Count and Clone.</source>
          <target state="translated"><bpt id="p1">**</bpt>Get-member<ept id="p1">**</ept> 取得型別 (<bpt id="p2">**</bpt>System.Object<ph id="ph1">\[\]</ph><ept id="p2">**</ept>) 和集合 （或陣列） 的成員 <bpt id="p3">**</bpt>ServiceController<ept id="p3">**</ept> 物件，例如 Count 和 Clone。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>PARAMETERS</source>
          <target state="translated">參數</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>-Force</source>
          <target state="translated">-Force</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>Adds the intrinsic members (PSBase, PSAdapted, PSObject, PSTypeNames) and the compiler-generated get_ and set_ methods to the display.</source>
          <target state="translated">將內建成員 (PSBase、PSAdapted、PSObject、PSTypeNames) 及編譯器產生的 get_ 和 set_ 方法新增到顯示中。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>By default, <bpt id="p1">**</bpt>Get-Member<ept id="p1">**</ept> gets these properties in all views other than Base and Adapted, but it does not display them.</source>
          <target state="translated">根據預設， <bpt id="p1">**</bpt>Get-member<ept id="p1">**</ept> 取得基底和 Adapted，但是以外的所有檢視中的這些屬性不會顯示它們。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>The following list describes the properties that are added when you use the <bpt id="p1">*</bpt>Force<ept id="p1">*</ept> parameter:</source>
          <target state="translated">下列清單描述當您使用新增的屬性 <bpt id="p1">*</bpt>Force<ept id="p1">*</ept> 參數︰</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>PSBase:  The original properties of the .NET Framework object without extension or adaptation.</source>
          <target state="translated">PSBase: 原始未經擴充或調整的.NET Framework 物件的屬性。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>These are the properties defined for the object class and listed in MSDN.</source>
          <target state="translated">這些是為物件類別定義並在 MSDN 中列出的屬性。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>PSAdapted.</source>
          <target state="translated">PSAdapted。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>The properties and methods defined in the Windows PowerShell extended type system.</source>
          <target state="translated">在 Windows PowerShell 擴充類型系統中定義的屬性和方法。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>PSExtended.</source>
          <target state="translated">PSExtended。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>The properties and methods that were added in the Types.ps1xml files or by using the Add-Member cmdlet.</source>
          <target state="translated">在 Types.ps1xml 檔案中新增或藉由使用 Add-Member Cmdlet 來新增的屬性和方法。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>PSObject.</source>
          <target state="translated">PSObject。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>The adapter that converts the base object to a Windows PowerShell<bpt id="p1">**</bpt>PSObject<ept id="p1">**</ept> object.</source>
          <target state="translated">Windows PowerShell 會將基底物件的介面卡<bpt id="p1">**</bpt>PSObject<ept id="p1">**</ept> 物件。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>PSTypeNames.</source>
          <target state="translated">PSTypeNames。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>A list of object types that describe the object, in order of specificity.</source>
          <target state="translated">描述物件的物件類型清單 (依明確性順序)。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>When formatting the object, Windows PowerShell searches for the types in the Format.ps1xml files in the Windows PowerShell installation directory ($pshome).</source>
          <target state="translated">將物件格式化時，Windows PowerShell 會在 Windows PowerShell 安裝目錄 ($pshome) 下的 Format.ps1xml 檔案中搜尋類型。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>It uses the formatting definition for the first type that it finds.</source>
          <target state="translated">它會使用所找到的第一個類型的格式定義。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>-InputObject</source>
          <target state="translated">-InputObject</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>Specifies the object whose members are retrieved.</source>
          <target state="translated">指定要供抓取成員的物件。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>Using the <bpt id="p1">*</bpt>InputObject<ept id="p1">*</ept> parameter is not the same as piping an object to <bpt id="p2">**</bpt>Get-Member<ept id="p2">**</ept>.</source>
          <target state="translated">使用 <bpt id="p1">*</bpt>InputObject<ept id="p1">*</ept> 參數不是將物件輸送到相同 <bpt id="p2">**</bpt>Get-member<ept id="p2">**</ept>。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>The differences are as follows:</source>
          <target state="translated">差異如下：</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>When you pipe a collection of objects to <bpt id="p1">**</bpt>Get-Member<ept id="p1">**</ept>, <bpt id="p2">**</bpt>Get-Member<ept id="p2">**</ept> gets the members of the individual objects in the collection, such as the properties of each string in an array of strings.</source>
          <target state="translated">當您使用管線傳送至物件的集合 <bpt id="p1">**</bpt>Get-member<ept id="p1">**</ept>, ，<bpt id="p2">**</bpt>Get-member<ept id="p2">**</ept> 取得集合，例如字串陣列中每個字串的內容中的個別物件的成員。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>When you use <bpt id="p1">*</bpt>InputObject<ept id="p1">*</ept> to submit a collection of objects, <bpt id="p2">**</bpt>Get-Member<ept id="p2">**</ept> gets the members of the collection, such as the properties of the array in an array of strings.</source>
          <target state="translated">當您使用 <bpt id="p1">*</bpt>InputObject<ept id="p1">*</ept> 送出物件的集合， <bpt id="p2">**</bpt>Get-member<ept id="p2">**</ept> 取得集合，例如字串陣列中的陣列內容的成員。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>-MemberType</source>
          <target state="translated">-MemberType</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>Specifies the member type that this cmdlet gets.</source>
          <target state="translated">指定此 cmdlet 會取得的成員類型。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>The default is All.</source>
          <target state="translated">預設值是 [所有]。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>The acceptable values for this parameter are:</source>
          <target state="translated">此參數接受的值包括：</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>AliasProperty</source>
          <target state="translated">AliasProperty</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>CodeProperty</source>
          <target state="translated">CodeProperty</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>Property</source>
          <target state="translated">屬性</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>NoteProperty</source>
          <target state="translated">NoteProperty</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>ScriptProperty</source>
          <target state="translated">ScriptProperty</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>Properties</source>
          <target state="translated">[內容]</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>PropertySet</source>
          <target state="translated">屬性集</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>Method</source>
          <target state="translated">方法</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>CodeMethod</source>
          <target state="translated">CodeMethod</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>ScriptMethod</source>
          <target state="translated">ScriptMethod</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>Methods</source>
          <target state="translated">方法</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>ParameterizedProperty</source>
          <target state="translated">ParameterizedProperty</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>MemberSet</source>
          <target state="translated">成員集合</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>Event</source>
          <target state="translated">事件</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>Dynamic</source>
          <target state="translated">動態</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>All</source>
          <target state="translated">全部</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>For information about these values, see PSMemberTypes Enumeration"https://msdn.microsoft.com/en-us/library/system.management.automation.psmembertypes(v=vs.85).aspx (https://msdn.microsoft.com/en-us/library/system.management.automation.psmembertypes(v=vs.85).aspx ) in MSDN.</source>
          <target state="translated">如需這些值的資訊，請參閱 &lt; PSMemberTypes 列舉 」 https://msdn.microsoft.com/en-us/library/system.management.automation.psmembertypes (vs.85 (在 MSDN https://msdn.microsoft.com/en-us/library/system.management.automation.psmembertypes (vs.85)。</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>Not all objects have every type of member.</source>
          <target state="translated">並非所有物件都有每個類型的成員。</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>If you specify a member type that the object does not have, Windows PowerShell returns a null value.</source>
          <target state="translated">若指定物件沒有的成員類型，Windows PowerShell 會傳回 Null 值。</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>To get related types of members, such as all extended members, use the <bpt id="p1">*</bpt>View<ept id="p1">*</ept> parameter.</source>
          <target state="translated">若要取得相關的類型的成員，例如所有擴充成員，使用 <bpt id="p1">*</bpt>檢視<ept id="p1">*</ept> 參數。</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>If you use the <bpt id="p1">*</bpt>MemberType<ept id="p1">*</ept> parameter with the <bpt id="p2">*</bpt>Static<ept id="p2">*</ept> or <bpt id="p3">*</bpt>View<ept id="p3">*</ept> parameters, <bpt id="p4">**</bpt>Get-Member<ept id="p4">**</ept> gets the members that belong to both sets.</source>
          <target state="translated">如果您使用 <bpt id="p1">*</bpt>MemberType<ept id="p1">*</ept> 參數 <bpt id="p2">*</bpt>靜態<ept id="p2">*</ept> 或 <bpt id="p3">*</bpt>檢視<ept id="p3">*</ept> 參數， <bpt id="p4">**</bpt>Get-member<ept id="p4">**</ept> 會取得屬於這兩個集合的成員。</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>-Name</source>
          <target state="translated">-Name</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>Specifies the names of one or more properties or methods of the object.</source>
          <target state="translated">指定一個或多個屬性的名稱或物件的方法。</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Get-Member<ept id="p1">**</ept> gets only the specified properties and methods.</source>
          <target state="translated"><bpt id="p1">**</bpt>Get-member<ept id="p1">**</ept> 只取得指定的屬性和方法。</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>If you use the <bpt id="p1">*</bpt>Name<ept id="p1">*</ept> parameter with the <bpt id="p2">*</bpt>MemberType<ept id="p2">*</ept>, <bpt id="p3">*</bpt>View<ept id="p3">*</ept>, or <bpt id="p4">*</bpt>Static<ept id="p4">*</ept> parameter, <bpt id="p5">**</bpt>Get-Member<ept id="p5">**</ept> gets only the members that satisfy the criteria of all parameters.</source>
          <target state="translated">如果您使用 <bpt id="p1">*</bpt>名稱<ept id="p1">*</ept> 參數 <bpt id="p2">*</bpt>MemberType<ept id="p2">*</ept>, ，<bpt id="p3">*</bpt>檢視<ept id="p3">*</ept>, ，或 <bpt id="p4">*</bpt>靜態<ept id="p4">*</ept> 參數， <bpt id="p5">**</bpt>Get-member<ept id="p5">**</ept> 取得符合此準則的所有參數的成員。</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>To get a static member by name, use the <bpt id="p1">*</bpt>Static<ept id="p1">*</ept> parameter with the <bpt id="p2">*</bpt>Name<ept id="p2">*</ept> parameter.</source>
          <target state="translated">若要依名稱取得靜態成員，請使用 <bpt id="p1">*</bpt>靜態<ept id="p1">*</ept> 參數 <bpt id="p2">*</bpt>名稱<ept id="p2">*</ept> 參數。</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>-Static</source>
          <target state="translated">-Static</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>Indicates that this cmdlet gets only the static properties and methods of the object.</source>
          <target state="translated">指出此 cmdlet 會取得只有靜態屬性和方法的物件。</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>Static properties and methods are defined on the class of objects, not on any particular instance of the class.</source>
          <target state="translated">靜態屬性和方法是在物件的類別上定義，而非在類別的任何特定執行個體上定義。</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>If you use the <bpt id="p1">*</bpt>Static<ept id="p1">*</ept> parameter with the <bpt id="p2">*</bpt>View<ept id="p2">*</ept> parameter, the <bpt id="p3">*</bpt>View<ept id="p3">*</ept> parameter is ignored.</source>
          <target state="translated">如果您使用 <bpt id="p1">*</bpt>靜態<ept id="p1">*</ept> 參數 <bpt id="p2">*</bpt>檢視<ept id="p2">*</ept> 參數， <bpt id="p3">*</bpt>檢視<ept id="p3">*</ept> 參數會被忽略。</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>If you use the <bpt id="p1">*</bpt>Static<ept id="p1">*</ept> parameter with the <bpt id="p2">*</bpt>MemberType<ept id="p2">*</ept> parameter, <bpt id="p3">**</bpt>Get-Member<ept id="p3">**</ept> gets only the members that belong to both sets.</source>
          <target state="translated">如果您使用 <bpt id="p1">*</bpt>靜態<ept id="p1">*</ept> 參數 <bpt id="p2">*</bpt>MemberType<ept id="p2">*</ept> 參數， <bpt id="p3">**</bpt>Get-member<ept id="p3">**</ept> 會取得屬於這兩個集合的成員。</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>-View</source>
          <target state="translated">檢視</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>Specifies that this cmdlet gets only particular types properties and methods.</source>
          <target state="translated">指定只有特定類型的屬性和方法，此 cmdlet 會取得。</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>Specify one or more of the values.</source>
          <target state="translated">請指定一個或多個值。</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>The default is Adapted, Extended.</source>
          <target state="translated">預設會調整，擴充。</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>Valid values are:</source>
          <target state="translated">有效值為：</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>Base.</source>
          <target state="translated">基底。</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>Gets only the original properties and methods of the .NET Framework object (without extension or adaptation).</source>
          <target state="translated">只取得 .NET Framework 物件的原始屬性和方法 (未經擴充或調整)。</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>Adapted.</source>
          <target state="translated">調整。</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>Gets only the properties and methods defined in the Windows PowerShell extended type system.</source>
          <target state="translated">只取得在 Windows PowerShell 擴充類型系統中定義的屬性和方法。</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>Extended.</source>
          <target state="translated">擴充。</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>Gets only the properties and methods that were added in the Types.ps1xml files or by using the Add-Member cmdlet.</source>
          <target state="translated">只取得在 Types.ps1xml 檔案中新增或藉由使用 Add-Member Cmdlet 來新增的屬性和方法。</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>All.</source>
          <target state="translated">所有。</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>Gets the members in the Base, Adapted, and Extended views.</source>
          <target state="translated">取得 Base、Adapted 及 Extended 檢視中的成員。</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">*</bpt>View<ept id="p1">*</ept> parameter determines the members retrieved, not just the display of those members.</source>
          <target state="translated"> <bpt id="p1">*</bpt>檢視<ept id="p1">*</ept> 參數會決定抓取的成員，不只是這些成員的顯示。</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>To get particular member types, such as script properties, use the <bpt id="p1">*</bpt>MemberType<ept id="p1">*</ept> parameter.</source>
          <target state="translated">若要取得特定的成員類型，例如指令碼屬性使用 <bpt id="p1">*</bpt>MemberType<ept id="p1">*</ept> 參數。</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>If you use the <bpt id="p1">*</bpt>MemberType<ept id="p1">*</ept> and <bpt id="p2">*</bpt>View<ept id="p2">*</ept> parameters in the same command, <bpt id="p3">**</bpt>Get-Member<ept id="p3">**</ept> gets the members that belong to both sets.</source>
          <target state="translated">如果您使用 <bpt id="p1">*</bpt>MemberType<ept id="p1">*</ept> 和 <bpt id="p2">*</bpt>檢視<ept id="p2">*</ept> 中相同的命令，參數 <bpt id="p3">**</bpt>Get-member<ept id="p3">**</ept> 會取得屬於這兩個集合的成員。</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>If you use the <bpt id="p1">*</bpt>Static<ept id="p1">*</ept> and <bpt id="p2">*</bpt>View<ept id="p2">*</ept> parameters in the same command, the <bpt id="p3">*</bpt>View<ept id="p3">*</ept> parameter is ignored.</source>
          <target state="translated">如果您使用 <bpt id="p1">*</bpt>靜態<ept id="p1">*</ept> 和 <bpt id="p2">*</bpt>檢視<ept id="p2">*</ept> 中相同的命令，參數 <bpt id="p3">*</bpt>檢視<ept id="p3">*</ept> 參數會被忽略。</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>CommonParameters</source>
          <target state="translated">CommonParameters</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutVariable, -OutBuffer, -PipelineVariable, -Verbose, -WarningAction, and -WarningVariable.</source>
          <target state="translated">這個 cmdlet 支援一般參數:-偵錯、-ErrorAction、-ErrorVariable、-InformationAction-InformationVariable、-OutVariable、-OutBuffer、-PipelineVariable、-Verbose、-WarningAction 以及-WarningVariable。</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>For more information, see about_CommonParameters (http://go.microsoft.com/fwlink/?LinkID=113216).</source>
          <target state="translated">如需詳細資訊，請參閱 about_CommonParameters (http://go.microsoft.com/fwlink/?LinkID=113216)。</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>INPUTS</source>
          <target state="translated">輸入</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>System.Management.Automation.PSObject</source>
          <target state="translated">System.Management.Automation.PSObject</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source>You can pipe any object to <bpt id="p1">**</bpt>Get-Member<ept id="p1">**</ept>.</source>
          <target state="translated">您可以使用管線傳送任何物件至 <bpt id="p1">**</bpt>Get-member<ept id="p1">**</ept>。</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source>OUTPUTS</source>
          <target state="translated">輸出</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source>Microsoft.PowerShell.Commands.MemberDefinition</source>
          <target state="translated">Microsoft.PowerShell.Commands.MemberDefinition</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Get-Member<ept id="p1">**</ept> returns an object for each property or method that its gets.</source>
          <target state="translated"><bpt id="p1">**</bpt>Get-member<ept id="p1">**</ept> 傳回每個屬性或方法的物件，其取得。</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source>NOTES</source>
          <target state="translated">附註</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source>You can get information about a collection object either by using the <bpt id="p1">*</bpt>InputObject<ept id="p1">*</ept> parameter or by piping the object, preceded by a comma, to <bpt id="p2">**</bpt>Get-Member<ept id="p2">**</ept>.</source>
          <target state="translated">您可以藉由使用取得集合物件的相關資訊 <bpt id="p1">*</bpt>InputObject<ept id="p1">*</ept> 參數或管線的物件，加上逗號，為 <bpt id="p2">**</bpt>Get-member<ept id="p2">**</ept>。</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve">
          <source>You can use the $This automatic variable in script blocks that define the values of new properties and methods.</source>
          <target state="translated">您可以定義新的屬性和方法的值的指令碼區塊中使用 $This 自動變數。</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source>The $This variable refers to the instance of the object to which the properties and methods are being added.</source>
          <target state="translated">$This 變數會參照到的屬性和方法都要加入之物件的執行個體。</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source>For more information about the $This variable, see about_Automatic_Variables.</source>
          <target state="translated">如需有關 $This 變數的詳細資訊，請參閱 about_Automatic_Variables。</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source>RELATED LINKS</source>
          <target state="translated">相關的連結</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve">
          <source>Add-Member</source>
          <target state="translated">Add-Member</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve">
          <source>Get-Command</source>
          <target state="translated">Get-Command</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve">
          <source>Get-Help</source>
          <target state="translated">Get-Help</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve">
          <source>Get-PSDrive</source>
          <target state="translated">Get-PSDrive</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve">
          <source>about_Automatic_Variables</source>
          <target state="translated">about_Automatic_Variables</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve">
          <source>about_Properties</source>
          <target state="translated">about_Properties</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve">
          <source>about_Methods</source>
          <target state="translated">about_Methods</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve">
          <source>about_Objects</source>
          <target state="translated">about_Objects</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>