<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-tw">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-1c394fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">208f566c5b1ab7b3ac1e7aaa71e4933b85e4808d</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">reference\5.0\Microsoft.PowerShell.Utility\Group-Object.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions" />
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ad3ce6572cde1feb8dc6a18198263aac25a59430</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">42db0386139a20e99a6ea881354d95d890d0d956</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>powershell, cmdlet</source>
          <target state="translated">powershell 指令程式</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Group-Object</source>
          <target state="translated">Group-Object</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Group-Object</source>
          <target state="translated">Group-Object</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>SYNOPSIS</source>
          <target state="translated">概要</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Groups objects that contain the same value for specified properties.</source>
          <target state="translated">將包含指定屬性之相同值的物件分組。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>SYNTAX</source>
          <target state="translated">語法</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>DESCRIPTION</source>
          <target state="translated">描述</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>Group-Object<ept id="p1">**</ept> cmdlet displays objects in groups based on the value of a specified property.</source>
          <target state="translated"> <bpt id="p1">**</bpt>群組物件<ept id="p1">**</ept> 指令程式會顯示根據指定的屬性值的群組中的物件。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Group-Object<ept id="p1">**</ept> returns a table with one row for each property value and a column that displays the number of items with that value.</source>
          <target state="translated"><bpt id="p1">**</bpt>群組物件<ept id="p1">**</ept> 傳回每個屬性值和資料行，顯示具有該值的項目數的其中一個資料列的資料表。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>If you specify more than one property, <bpt id="p1">**</bpt>Group-Object<ept id="p1">**</ept> first groups them by the values of the first property, and then, within each property group, it groups by the value of the next property.</source>
          <target state="translated">如果您指定多個屬性， <bpt id="p1">**</bpt>群組物件<ept id="p1">**</ept> 先將它們分組的值的第一個屬性，然後，在每個屬性群組，其群組的下一個屬性的值。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>EXAMPLES</source>
          <target state="translated">範例</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Example 1: Group files by size</source>
          <target state="translated">範例 1︰ 依大小分組的檔案</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>This command gets the files in the current location that have a .doc extension and groups them by size.</source>
          <target state="translated">此命令會取得目前位置中副檔名為 .doc 的檔案，並將它們依大小分組。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Example 2: Group files by extension</source>
          <target state="translated">範例 2︰ 依副檔名分組檔案</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>This command gets the files in the current location, sorts them by file name extension, and then groups them by file name extension.</source>
          <target state="translated">此命令會取得目前位置中的檔案、依副檔名進行排序，然後將它們依副檔名分組。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Note that the files are sorted before they are grouped.</source>
          <target state="translated">請注意，檔案在分組之前會先排序。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Example 3: Group integers by remainder</source>
          <target state="translated">範例 3︰ 群組的整數餘數</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>This example shows how to use script blocks as the value of the <bpt id="p1">*</bpt>Property<ept id="p1">*</ept> parameter.</source>
          <target state="translated">這個範例示範如何使用指令碼區塊的值為 <bpt id="p1">*</bpt>屬性<ept id="p1">*</ept> 參數。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>This command displays the integers from 1 to 35, grouped by the remainder left when they are divided by 2 or 3.</source>
          <target state="translated">此命令會顯示從 1 到 35 的整數，將它們以除以 2 或 3 時剩下的餘數分組。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Example 4: Group event log events by ID</source>
          <target state="translated">範例 4︰ 群組識別碼的事件記錄檔事件</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>These commands display the 1,000 most recent entries in the System event log, grouped by Event ID.</source>
          <target state="translated">這些命令會顯示系統事件記錄檔中最近的 1000 個項目，並依事件識別碼分組。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>The first command uses the Get-EventLog cmdlet to retrieve the events and the assignment operator (=) to save them in the $Events variable.</source>
          <target state="translated">第一個命令使用 Get-eventlog cmdlet 來擷取的事件，以及將它們儲存在 $Events 變數指派運算子 （=）。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>The second command uses a pipeline operator (|) to send the events in the $Events variable to the <bpt id="p1">**</bpt>Group-Object<ept id="p1">**</ept> cmdlet.</source>
          <target state="translated">第二個命令使用管線運算子 (|) $Events 變數中的事件傳送至 <bpt id="p1">**</bpt>群組物件<ept id="p1">**</ept> 指令程式。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>The command uses the <bpt id="p1">*</bpt>Property<ept id="p1">*</ept> parameter to specify that the events should be grouped according to the value of their EventID property.</source>
          <target state="translated">此命令會使用 <bpt id="p1">*</bpt>屬性<ept id="p1">*</ept> 參數來指定事件應根據其 EventID 屬性的值進行分組。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>In the output, the Count column represents the number of entries in each group, the Name column represents the EventID values that define a group, and the Group column represents the objects in each group.</source>
          <target state="translated">在輸出中，Count 欄位代表各群組中的項目數目、Name 欄位代表定義群組的 EventID 值，而 Group 欄位代表各群組中的物件。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Example 5: Group processes by priority class</source>
          <target state="translated">範例 5︰ 群組程序，依優先順序類別</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>This example demonstrates the effect of the <bpt id="p1">*</bpt>NoElement<ept id="p1">*</ept> parameter.</source>
          <target state="translated">此範例中示範的效果 <bpt id="p1">*</bpt>NoElement<ept id="p1">*</ept> 參數。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>These commands group the processes on the computer by priority class.</source>
          <target state="translated">這些命令會依優先順序類別將電腦上的處理程序分組。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>The first command uses the Get-Process cmdlet to get the processes on the computer.</source>
          <target state="translated">第一個命令使用 Get-process Cmdlet 取得電腦上的處理程序。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>It uses a pipeline operator (|) to send the results to <bpt id="p1">**</bpt>Group-Object<ept id="p1">**</ept>, which groups the objects by the value of the PriorityClass property of the process.</source>
          <target state="translated">它使用管線運算子 (|) 將結果傳送至 <bpt id="p1">**</bpt>群組物件<ept id="p1">**</ept>, ，這將物件分組的程序的 PriorityClass 屬性值。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>The second command is identical to the first, except that it uses the <bpt id="p1">*</bpt>NoElement<ept id="p1">*</ept> parameter to eliminate the members of the group from the output.</source>
          <target state="translated">第二個命令等同於第一，它會使用 <bpt id="p1">*</bpt>NoElement<ept id="p1">*</ept> 參數，以消除從輸出群組的成員。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>The result is a table with only the count and property value name.</source>
          <target state="translated">結果是僅具有計數和屬性值名稱的表格。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>The results are shown in the following sample output.</source>
          <target state="translated">結果顯示在下列範例輸出中。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Example 6: Group events by time</source>
          <target state="translated">範例 6︰ 將事件分組依時間</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>This command demonstrates how to provide the value of the <bpt id="p1">*</bpt>Property<ept id="p1">*</ept> parameter as a script block.</source>
          <target state="translated">此命令示範如何提供的值 <bpt id="p1">*</bpt>屬性<ept id="p1">*</ept> 參數做為指令碼區塊。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>This command displays the most recent 1,000 entries from the System event log, grouped according to the time between when they were generated and when they were written to the log.</source>
          <target state="translated">此命令會顯示最近的 1000 個項目從系統事件記錄檔之間其產生與其寫入記錄檔的時間進行分組。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>The command uses the Get-EventLog cmdlet to get the event log entries.</source>
          <target state="translated">此命令使用 Get-eventlog Cmdlet 取得事件記錄檔項目。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>It uses a pipeline operator (|) to send the entries to the <bpt id="p1">**</bpt>Group-Object<ept id="p1">**</ept> cmdlet.</source>
          <target state="translated">它使用管線運算子 (|) 將項目來 <bpt id="p1">**</bpt>群組物件<ept id="p1">**</ept> 指令程式。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>The value of the <bpt id="p1">*</bpt>Property<ept id="p1">*</ept> parameter is specified as a script block (an expression in braces).</source>
          <target state="translated">值 <bpt id="p1">*</bpt>屬性<ept id="p1">*</ept> 參數指定為指令碼區塊 （括號括住的運算式）。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>The result of evaluating the script block is the time between when the log entry was generated and when it was written to the log.</source>
          <target state="translated">評估指令碼區塊的結果是產生記錄檔項目與其寫入記錄檔之間的時間。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>That value is used to group the 1,000 most recent events.</source>
          <target state="translated">該值將用來分組最近的 1,000 個事件。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Example 7: Group items by file name extension</source>
          <target state="translated">範例 7︰ 依副檔名分組項目</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>This command groups the items in the current directory by file name extension.</source>
          <target state="translated">此命令會依副檔名將目前目錄中的項目進行分組。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>It uses the <bpt id="p1">*</bpt>NoElement<ept id="p1">*</ept> parameter to omit the members of the group.</source>
          <target state="translated">它會使用 <bpt id="p1">*</bpt>NoElement<ept id="p1">*</ept> 參數來省略群組的成員。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>The results are shown in the following sample output.</source>
          <target state="translated">結果顯示在下列範例輸出中。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Example 8: Group objects by value</source>
          <target state="translated">範例 8︰ 群組物件的值</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>This example shows how to find the unique and non-unique (repeated) property values in a collection.</source>
          <target state="translated">此範例顯示如何在集合中尋找唯一與非唯一的 (重複的) 屬性值。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>The first command gets the unique elements of an array by piping the array to the Get-Unique cmdlet.</source>
          <target state="translated">第一個命令藉由使用管線將陣列傳送至 Get-Unique Cmdlet 來取得陣列中的唯一元素。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>The second command gets the non-unique elements of an array.</source>
          <target state="translated">第二個命令取得陣列非唯一的元素。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>It pipes the array to the <bpt id="p1">**</bpt>Group-Object<ept id="p1">**</ept> cmdlet, which groups the objects by value.</source>
          <target state="translated">它使用管線傳送要陣列 <bpt id="p1">**</bpt>群組物件<ept id="p1">**</ept> 指令程式，以將物件分組值。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>The resulting groups are piped to the Where-Object cmdlet, which selects objects with groups with more than one member.</source>
          <target state="translated">產生的群組利用管線傳送至 Where-Object Cmdlet，此 Cmdlet 會選取具有多個成員的群組物件。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>The third command shows a practical use for this technique.</source>
          <target state="translated">第三個命令顯示這項技術的實際用途。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>It uses the same method to find processes on the computer that have the same process name.</source>
          <target state="translated">它會使用相同的方法來尋找電腦上具有相同處理程序名稱的處理程序。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>The results are shown in the following sample output.</source>
          <target state="translated">結果顯示在下列範例輸出中。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Example 9: Group objects in a hash table</source>
          <target state="translated">雜湊表中的範例 9︰ 群組物件</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>This example uses the <bpt id="p1">*</bpt>AsHashTable<ept id="p1">*</ept> and <bpt id="p2">*</bpt>AsString<ept id="p2">*</ept> parameters to return the groups in a hash table, that is, as a collection of key-value pairs.</source>
          <target state="translated">這個範例會使用 <bpt id="p1">*</bpt>AsHashTable<ept id="p1">*</ept> 和 <bpt id="p2">*</bpt>AsString<ept id="p2">*</ept> 參數來傳回雜湊表，也就是群組做為索引鍵-值組的集合。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>In the resulting hash table, each property value is a key, and the group elements are the values.</source>
          <target state="translated">在產生的雜湊表中，每個屬性值為索引鍵，而群組元素為值。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Because each key is a property of the hash table object, you can use dot notation to display the values.</source>
          <target state="translated">因為每個索引鍵是雜湊表物件的屬性，您可以使用點標記法來顯示值。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>The first command gets the Get and Set cmdlets in the session, groups them by verb, returns the groups as a hash table, and saves the hash table in the $A variable.</source>
          <target state="translated">第一個命令取得工作階段中的 Get 和 Set cmdlet、 它們依動詞分組、 雜湊表傳回群組和 $A 變數中儲存的雜湊表。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>The second command displays the hash table in $A.</source>
          <target state="translated">第二個命令會顯示在 $A.的雜湊表</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>There are two key-value pairs, one for the Get cmdlets and one for the Set cmdlets.</source>
          <target state="translated">有兩個索引鍵 / 值組，一個用於 Get cmdlet，一個用於 Set cmdlet。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>The third command uses dot notation to display the values of the Get key in $A.</source>
          <target state="translated">第三個命令使用點標記法，以顯示 $A.Get 索引鍵的值</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>The values are CmdletInfo object.</source>
          <target state="translated">值是 CmdletInfo 物件。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">*</bpt>AsString<ept id="p1">*</ept> parameter does not convert the objects in the groups to strings.</source>
          <target state="translated"> <bpt id="p1">*</bpt>AsString<ept id="p1">*</ept> 參數不會轉換成字串的群組中的物件。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>PARAMETERS</source>
          <target state="translated">參數</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>-AsHashTable</source>
          <target state="translated">-AsHashTable</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>Indicates that this cmdlet returns the group as a hash table.</source>
          <target state="translated">指出此 cmdlet 會傳回雜湊表的群組。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>The keys of the hash table are the property values by which the objects are grouped.</source>
          <target state="translated">雜湊表的索引鍵為屬性值，會以其為依據進行物件分組。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>The values of the hash table are the objects that have that property value.</source>
          <target state="translated">雜湊表的值是具有該屬性值的物件。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>By itself, the <bpt id="p1">*</bpt>AsHashTable<ept id="p1">*</ept> parameter returns each hash table in which each key is an instance of the grouped object.</source>
          <target state="translated">單獨使用， <bpt id="p1">*</bpt>AsHashTable<ept id="p1">*</ept> 參數會傳回每個索引鍵是群組物件的執行個體的每個雜湊資料表。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>When used with the <bpt id="p1">*</bpt>AsString<ept id="p1">*</ept> parameter, the keys in the hash table are strings.</source>
          <target state="translated">當搭配 <bpt id="p1">*</bpt>AsString<ept id="p1">*</ept> 參數，雜湊表中的索引鍵是字串。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>-AsString</source>
          <target state="translated">-AsString</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>Indicates that this cmdlet converts the hash table keys to strings.</source>
          <target state="translated">指出此 cmdlet 會將雜湊資料表索引鍵轉換成字串。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>By default, the hash table keys are instances of the grouped object.</source>
          <target state="translated">依預設，雜湊表索引鍵是群組物件的執行個體。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>This parameter is valid only when used with the <bpt id="p1">*</bpt>AsHashTable<ept id="p1">*</ept> parameter.</source>
          <target state="translated">這個參數會搭配使用時才有效 <bpt id="p1">*</bpt>AsHashTable<ept id="p1">*</ept> 參數。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>-CaseSensitive</source>
          <target state="translated">-CaseSensitive</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>Indicates that this cmdlet makes the grouping case-sensitive.</source>
          <target state="translated">指出此 cmdlet 會讓群組區分大小寫。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>Without this parameter, the property values of objects in a group might have different cases.</source>
          <target state="translated">如果沒有這個參數，群組中物件的屬性值可能大小寫會有不同。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>-Culture</source>
          <target state="translated">特性文化</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>Specifies the culture to use when comparing strings.</source>
          <target state="translated">指定比較字串時要使用的文化特性。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>-InputObject</source>
          <target state="translated">-InputObject</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>Specifies the objects to group.</source>
          <target state="translated">指定要分組的物件。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>Enter a variable that contains the objects, or type a command or expression that gets the objects.</source>
          <target state="translated">輸入包含物件的變數，或輸入可取得物件的命令或運算式。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>When you use the <bpt id="p1">*</bpt>InputObject<ept id="p1">*</ept> parameter to submit a collection of objects to <bpt id="p2">**</bpt>Group-Object<ept id="p2">**</ept>, <bpt id="p3">**</bpt>Group-Object<ept id="p3">**</ept> receives one object that represents the collection.</source>
          <target state="translated">當您使用 <bpt id="p1">*</bpt>InputObject<ept id="p1">*</ept> 參數來送出至物件的集合 <bpt id="p2">**</bpt>群組物件<ept id="p2">**</ept>, ，<bpt id="p3">**</bpt>群組物件<ept id="p3">**</ept> 接收代表集合的一個物件。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>As a result, it creates a single group with that object as its member.</source>
          <target state="translated">如此一來，它會建立該物件做為其成員的單一群組。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>To group the objects in a collection, pipe the objects to <bpt id="p1">**</bpt>Group-Object<ept id="p1">**</ept>.</source>
          <target state="translated">若要群組集合中的物件，透過管道傳送至物件 <bpt id="p1">**</bpt>群組物件<ept id="p1">**</ept>。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>-NoElement</source>
          <target state="translated">-NoElement</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>Indicates that this cmdlet omits the members of a group from the results.</source>
          <target state="translated">指出此 cmdlet 會省略從結果群組的成員。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>-Property</source>
          <target state="translated">屬性</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>Specifies the properties for grouping.</source>
          <target state="translated">指定要分組的屬性。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>The objects are arranged into groups based on the value of the specified property.</source>
          <target state="translated">物件會依據指定屬性的值進行分組。</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>The value of the <bpt id="p1">*</bpt>Property<ept id="p1">*</ept> parameter can be a new calculated property.</source>
          <target state="translated">值 <bpt id="p1">*</bpt>屬性<ept id="p1">*</ept> 參數可以是新計算的屬性。</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>To create a calculated, property, create a hash table with an Expression key that specifies a string or script block value.</source>
          <target state="translated">如果要建立計算屬性，請建立具有指定字串或指令碼區塊值之運算式索引鍵的雜湊表。</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>CommonParameters</source>
          <target state="translated">CommonParameters</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutVariable, -OutBuffer, -PipelineVariable, -Verbose, -WarningAction, and -WarningVariable.</source>
          <target state="translated">這個 cmdlet 支援一般參數:-偵錯、-ErrorAction、-ErrorVariable、-InformationAction-InformationVariable、-OutVariable、-OutBuffer、-PipelineVariable、-Verbose、-WarningAction 以及-WarningVariable。</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>For more information, see about_CommonParameters (http://go.microsoft.com/fwlink/?LinkID=113216).</source>
          <target state="translated">如需詳細資訊，請參閱 about_CommonParameters (http://go.microsoft.com/fwlink/?LinkID=113216)。</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>INPUTS</source>
          <target state="translated">輸入</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>System.Management.Automation.PSObject</source>
          <target state="translated">System.Management.Automation.PSObject</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>You can pipe any object to <bpt id="p1">**</bpt>Group-Object<ept id="p1">**</ept>.</source>
          <target state="translated">您可以使用管線傳送任何物件至 <bpt id="p1">**</bpt>群組物件<ept id="p1">**</ept>。</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>OUTPUTS</source>
          <target state="translated">輸出</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>Microsoft.PowerShell.Commands.GroupInfo or System.Collections.Hashtable</source>
          <target state="translated">Microsoft.PowerShell.Commands.GroupInfo 或 System.Collections.Hashtable</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>When you use the <bpt id="p1">*</bpt>AsHashTable<ept id="p1">*</ept> parameter, <bpt id="p2">**</bpt>Group-Object<ept id="p2">**</ept> returns a hash table.</source>
          <target state="translated">當您使用 <bpt id="p1">*</bpt>AsHashTable<ept id="p1">*</ept> 參數， <bpt id="p2">**</bpt>群組物件<ept id="p2">**</ept> 傳回雜湊表。</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>Otherwise, it returns a <bpt id="p1">**</bpt>GroupInfo<ept id="p1">**</ept> object.</source>
          <target state="translated">否則，它會傳回 <bpt id="p1">**</bpt>GroupInfo<ept id="p1">**</ept> 物件。</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>NOTES</source>
          <target state="translated">附註</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>You can also use the <bpt id="p1">*</bpt>GroupBy<ept id="p1">*</ept> parameter of the formatting cmdlets (such as Format-Table <ph id="ph1">\[</ph>m2<ph id="ph2">\]</ph> and Format-List <ph id="ph3">\[</ph>m2<ph id="ph4">\]</ph>) to group objects.</source>
          <target state="translated">您也可以使用 <bpt id="p1">*</bpt>GroupBy<ept id="p1">*</ept> 格式化 cmdlet 的參數 (例如 Format-table <ph id="ph1">\[</ph>m2<ph id="ph2">\]</ph> 和 Format-list <ph id="ph3">\[</ph>m2<ph id="ph4">\]</ph>) 群組物件。</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>Unlike <bpt id="p1">**</bpt>Group-Object<ept id="p1">**</ept>, which creates a single table with a row for each property value, the <bpt id="p2">*</bpt>GroupBy<ept id="p2">*</ept> parameters create a table for each property value with a row for each item that has the property value.</source>
          <target state="translated">不同於 <bpt id="p1">**</bpt>群組物件<ept id="p1">**</ept>, ，它會建立每個屬性值的資料列的單一資料表 <bpt id="p2">*</bpt>GroupBy<ept id="p2">*</ept> 參數建立每個屬性值的資料表資料列，每個項目具有屬性值。</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Group-Object<ept id="p1">**</ept> does not require that the objects being grouped be of the same Microsoft .NET Framework type.</source>
          <target state="translated"><bpt id="p1">**</bpt>群組物件<ept id="p1">**</ept> 不需要物件的是相同的 Microsoft.NET Framework 型別。</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>When grouping objects of different .NET Framework types, <bpt id="p1">**</bpt>Group-Object<ept id="p1">**</ept> uses the following rules:</source>
          <target state="translated">當群組物件的.NET Framework 型別不同， <bpt id="p1">**</bpt>群組物件<ept id="p1">**</ept> 會使用下列規則︰</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>Same Property Names and Types.</source>
          <target state="translated">相同的屬性名稱和型別。</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>If the objects have a property with the specified name, and the property values have the same .NET Framework type, the property values are grouped by using the same rules that would be used for objects of the same type.</source>
          <target state="translated">如果物件具有含指定名稱的屬性，且屬性值有相同的 .NET Framework 類型，則會使用相同類型之物件所使用的相同規則將屬性值分組。</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>Same Property Names, Different Types.</source>
          <target state="translated">相同的屬性名稱，不同的型別。</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>If the objects have a property with the specified name, but the property values have a different .NET Framework type in different objects, <bpt id="p1">**</bpt>Group-Object<ept id="p1">**</ept> uses the .NET Framework type of the first occurrence of the property as the .NET Framework type for that property group.</source>
          <target state="translated">如果物件具有屬性與指定的名稱，但屬性值在不同的物件有不同的.NET Framework 型別 <bpt id="p1">**</bpt>群組物件<ept id="p1">**</ept> 的第一個屬性的.NET Framework 型別做為該屬性群組的.NET Framework 型別。</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>When an object has a property with a different type, the property value is converted to the type for that group.</source>
          <target state="translated">當物件具有含不同類型的屬性時，屬性值會轉換為該群組的類型。</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>If the type conversion fails, the object is not included in the group.</source>
          <target state="translated">如果類型轉換失敗，物件不會包含在群組中。</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>Missing Properties.</source>
          <target state="translated">遺漏的屬性。</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>Objects that do not have a specified property are considered ungroupable.</source>
          <target state="translated">沒有指定屬性的物件會被視為無法分組。</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>Ungroupable objects appear in the final <bpt id="p1">**</bpt>GroupInfo<ept id="p1">**</ept> object output in a group named AutomationNull.Value.</source>
          <target state="translated">無法分組的物件會出現在最終 <bpt id="p1">**</bpt>GroupInfo<ept id="p1">**</ept> 物件名為 automationnull.value 之群組中的輸出。</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>RELATED LINKS</source>
          <target state="translated">相關的連結</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>Compare-Object</source>
          <target state="translated">Compare-Object</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>ForEach-Object</source>
          <target state="translated">ForEach-Object</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>Where-Object</source>
          <target state="translated">Where-Object</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>Measure-Object</source>
          <target state="translated">Measure-Object</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>New-Object</source>
          <target state="translated">新物件</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>Select-Object</source>
          <target state="translated">Select-Object</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>Sort-Object</source>
          <target state="translated">Sort-Object</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>Tee-Object</source>
          <target state="translated">Tee-object</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>