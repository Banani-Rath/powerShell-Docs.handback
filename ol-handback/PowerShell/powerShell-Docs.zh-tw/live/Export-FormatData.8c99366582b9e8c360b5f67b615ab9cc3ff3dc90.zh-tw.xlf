<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-tw">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-1c394fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">90f692498338544536b5359e9f3e6e9822e043a8</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">reference\5.0\Microsoft.PowerShell.Utility\Export-FormatData.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions" />
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">90cf8cee4a0d26e6c28df9123957969707326eb1</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">176322c608fc95a9cd995531207174c122cb4caf</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>powershell, cmdlet</source>
          <target state="translated">powershell 指令程式</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Export-FormatData</source>
          <target state="translated">Export-formatdata</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Export-FormatData</source>
          <target state="translated">Export-formatdata</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>SYNOPSIS</source>
          <target state="translated">概要</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Saves formatting data from the current session in a formatting file.</source>
          <target state="translated">在格式化檔案中儲存來自目前工作階段的格式化資料。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>SYNTAX</source>
          <target state="translated">語法</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>ByPath (Default)</source>
          <target state="translated">ByPath （預設值）</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>ByLiteralPath</source>
          <target state="translated">ByLiteralPath</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>DESCRIPTION</source>
          <target state="translated">描述</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>Export-FormatData<ept id="p1">**</ept> cmdlet creates Windows PowerShell formatting files (format.ps1xml) from the formatting objects in the current session.</source>
          <target state="translated"> <bpt id="p1">**</bpt>Export-formatdata<ept id="p1">**</ept> 指令程式會建立 Windows PowerShell 格式化物件的格式檔案 (format.ps1xml)，目前工作階段中。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>It takes the <bpt id="p1">**</bpt>ExtendedTypeDefinition<ept id="p1">**</ept> objects that Get-FormatData returns and saves them in a file in XML format.</source>
          <target state="translated">它會採用 <bpt id="p1">**</bpt>ExtendedTypeDefinition<ept id="p1">**</ept> Get-formatdata 傳回，並將其儲存在 XML 格式檔案中的物件。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Windows PowerShell uses the data in formatting files (format.ps1xml) to generate the default display of Microsoft .NET Framework objects in the session.</source>
          <target state="translated">Windows PowerShell 會使用格式化檔案 (format.ps1xml) 中的資料在工作階段中產生 Microsoft .NET Framework 物件的預設顯示。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>You can view and edit the formatting files and use the Update-FormatData cmdlet to add the formatting data to a session.</source>
          <target state="translated">您可以檢視及編輯格式化檔案，然後使用 Update-FormatData Cmdlet 將格式化資料新增至工作階段。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>For more information about formatting files in Windows PowerShell, see about_Format.ps1xml.</source>
          <target state="translated">如需 Windows PowerShell 中格式化檔案的相關詳細資訊，請參閱 about_Format.ps1xml。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>EXAMPLES</source>
          <target state="translated">範例</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Example 1: Export session format data</source>
          <target state="translated">範例 1︰ 匯出工作階段的格式化資料</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>This command exports all of the format data in the session to the AllFormat.ps1xml file.</source>
          <target state="translated">此命令會將工作階段中的所有格式資料匯出到 AllFormat.ps1xml 檔案。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>The command uses the Get-FormatData cmdlet to get the format data in the session.</source>
          <target state="translated">命令會使用 Get-FormatData Cmdlet 取得工作階段中的格式資料。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>A value of <bpt id="p1">*</bpt> (all) for the <ept id="p1">*</ept>TypeName* parameter directs the cmdlet to get all of the data in the session.</source>
          <target state="translated">值為 <bpt id="p1">*</bpt> （全部） 的 <ept id="p1">*</ept>TypeName * 參數會指示 cmdlet 取得工作階段中所有的資料。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>The command uses a pipeline operator (|) to send the format data from the <bpt id="p1">**</bpt>Get-FormatData<ept id="p1">**</ept> command to the <bpt id="p2">**</bpt>Export-FormatData<ept id="p2">**</ept> cmdlet, which exports the format data to the AllFormat.ps1 file.</source>
          <target state="translated">命令使用管線運算子 (|) 將格式資料從 <bpt id="p1">**</bpt>Get-formatdata<ept id="p1">**</ept> 命令 <bpt id="p2">**</bpt>Export-formatdata<ept id="p2">**</ept> 指令程式，將格式資料匯出到 AllFormat.ps1 檔案。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>Export-FormatData<ept id="p1">**</ept> command uses the <bpt id="p2">*</bpt>IncludeScriptBlock<ept id="p2">*</ept> parameter to include script blocks in the format data in the file.</source>
          <target state="translated"> <bpt id="p1">**</bpt>Export-formatdata<ept id="p1">**</ept> 命令會使用 <bpt id="p2">*</bpt>IncludeScriptBlock<ept id="p2">*</ept> 格式中的資料檔案中的參數來包括指令碼區塊。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Example 2: Export format data for a type</source>
          <target state="translated">範例 2︰ 匯出格式資料類型</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>These commands export the format data for the HelpInfoShort type to the Help.format.ps1xml file.</source>
          <target state="translated">這些命令會將 HelpInfoShort 類型的格式資料匯出到 Help.format.ps1xml 檔案。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>The first command uses the <bpt id="p1">**</bpt>Get-FormatData<ept id="p1">**</ept> cmdlet to get the format data for the HelpInfoShort type, and it saves it in the $F variable.</source>
          <target state="translated">第一個命令使用 <bpt id="p1">**</bpt>Get-formatdata<ept id="p1">**</ept> cmdlet 取得 HelpInfoShort 類型，以及它的格式資料儲存在 $F 變數。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>The second command uses the <bpt id="p1">*</bpt>InputObject<ept id="p1">*</ept> parameter of the <bpt id="p2">**</bpt>Export-FormatData<ept id="p2">**</ept> cmdlet to enter the format data saved in the $F variable.</source>
          <target state="translated">第二個命令會使用 <bpt id="p1">*</bpt>InputObject<ept id="p1">*</ept> 參數 <bpt id="p2">**</bpt>Export-formatdata<ept id="p2">**</ept> 指令程式來輸入 $F 變數中儲存的格式資料。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>It also uses the <bpt id="p1">*</bpt>IncludeScriptBlock<ept id="p1">*</ept> parameter to include script blocks in the output.</source>
          <target state="translated">它也會使用 <bpt id="p1">*</bpt>IncludeScriptBlock<ept id="p1">*</ept> 輸出中的參數來包括指令碼區塊。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Example 3: Export format data without a script block</source>
          <target state="translated">範例 3︰ 匯出格式資料，而不需要指令碼區塊</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>This example shows the effect of omitting the <bpt id="p1">*</bpt>IncludeScriptBlock<ept id="p1">*</ept> parameter from an <bpt id="p2">**</bpt>Export-FormatData<ept id="p2">**</ept> command.</source>
          <target state="translated">此範例中顯示的省略效果 <bpt id="p1">*</bpt>IncludeScriptBlock<ept id="p1">*</ept> 參數從 <bpt id="p2">**</bpt>Export-formatdata<ept id="p2">**</ept> 命令。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>The first command uses the Get-FormatData cmdlet to get the format data for the <bpt id="p1">**</bpt>System.Diagnostics.Process<ept id="p1">**</ept> object that the Get-Process cmdlet returns.</source>
          <target state="translated">第一個命令使用 Get-formatdata cmdlet 取得的格式資料 <bpt id="p1">**</bpt>System.Diagnostics.Process<ept id="p1">**</ept> Get-process cmdlet 傳回的物件。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>The command uses a pipeline operator (|) to send the formatting data to the <bpt id="p1">**</bpt>Export-FormatData<ept id="p1">**</ept> cmdlet, which exports it to the Process.format.ps1xml file in the current directory.</source>
          <target state="translated">命令使用管線運算子 (|) 將格式化的資料傳送至 <bpt id="p1">**</bpt>Export-formatdata<ept id="p1">**</ept> 指令程式，以將它匯出至目前的目錄中的 Process.format.ps1xml 檔案。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>In this case, the <bpt id="p1">**</bpt>Export-FormatData<ept id="p1">**</ept> command does not use the <bpt id="p2">*</bpt>IncludeScriptBlock<ept id="p2">*</ept> parameter.</source>
          <target state="translated">在此情況下， <bpt id="p1">**</bpt>Export-formatdata<ept id="p1">**</ept> 命令不會使用 <bpt id="p2">*</bpt>IncludeScriptBlock<ept id="p2">*</ept> 參數。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>The second command uses the Update-FormatData cmdlet to add the Process.format.ps1xml file to the current session.</source>
          <target state="translated">第二個命令會使用 Update-FormatData Cmdlet 將 Process.format.ps1xml 檔案新增至目前的工作階段。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>The command uses the <bpt id="p1">*</bpt>PrependPath<ept id="p1">*</ept> parameter to ensure that the formatting data for process objects in the Process.format.ps1xml file is found before the standard formatting data for process objects.</source>
          <target state="translated">此命令會使用 <bpt id="p1">*</bpt>PrependPath<ept id="p1">*</ept> 參數，確保標準格式化程序物件的資料之前，所找到 Process.format.ps1xml 檔案中的處理程序物件的格式化資料。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>The third command shows the effects of this change.</source>
          <target state="translated">第三個命令會顯示此變更的效果。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>The command uses the <bpt id="p1">**</bpt>Get-Process<ept id="p1">**</ept> cmdlet to get processes that have names that begin with P. The output shows that property values that are calculated by using script blocks are missing from the display.</source>
          <target state="translated">此命令會使用 <bpt id="p1">**</bpt>Get-process<ept id="p1">**</ept> cmdlet 來取得名稱以 p 開頭的處理程序輸出會顯示屬性值的計算方式是使用指令碼區塊會在顯示中遺失。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>PARAMETERS</source>
          <target state="translated">參數</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>-Force</source>
          <target state="translated">-Force</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Forces the command to run without asking for user confirmation.</source>
          <target state="translated">強制執行命令而不要求使用者確認。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>-IncludeScriptBlock</source>
          <target state="translated">-IncludeScriptBlock</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Indicates whether script blocks in the format data are exported.</source>
          <target state="translated">指出是否在指令碼區塊，以匯出格式資料。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Because script blocks contain code and can be used maliciously, they are not exported by default.</source>
          <target state="translated">因為指令碼區塊包含程式碼，可能被用於惡意用途，所以預設不會將它們匯出。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>-InputObject</source>
          <target state="translated">-InputObject</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Specifies the format data objects to be exported.</source>
          <target state="translated">指定要匯出的格式資料物件。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Enter a variable that contains the objects or a command that gets the objects, such as a <bpt id="p1">**</bpt>Get-FormatData<ept id="p1">**</ept> command.</source>
          <target state="translated">輸入變數，其中包含的物件或取得物件，例如命令 <bpt id="p1">**</bpt>Get-formatdata<ept id="p1">**</ept> 命令。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>You can also pipe the objects from <bpt id="p1">**</bpt>Get-FormatData<ept id="p1">**</ept> to <bpt id="p2">**</bpt>Export-FormatData<ept id="p2">**</ept>.</source>
          <target state="translated">您也可以使用管線將物件從 <bpt id="p1">**</bpt>Get-formatdata<ept id="p1">**</ept> 至 <bpt id="p2">**</bpt>Export-formatdata<ept id="p2">**</ept>。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>-LiteralPath</source>
          <target state="translated">-LiteralPath</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Specifies a location for the output file.</source>
          <target state="translated">指定輸出檔案的位置。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Unlike the <bpt id="p1">*</bpt>Path<ept id="p1">*</ept> parameter, the value of <bpt id="p2">*</bpt>LiteralPath<ept id="p2">*</ept> is used exactly as it is typed.</source>
          <target state="translated">不同於 <bpt id="p1">*</bpt>路徑<ept id="p1">*</ept> 參數、 值 <bpt id="p2">*</bpt>LiteralPath<ept id="p2">*</ept> 完全依照其輸入使用。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>No characters are interpreted as wildcards.</source>
          <target state="translated">沒有字元會被視為萬用字元。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>If the path includes escape characters, enclose it in single quotation marks.</source>
          <target state="translated">如果路徑包含逸出字元，請將它括在單引號中。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Single quotation marks tell Windows PowerShell not to interpret any characters as escape sequences.</source>
          <target state="translated">單引號告知 Windows PowerShell 不要將任何字元視為逸出序列。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>-NoClobber</source>
          <target state="translated">-NoClobber</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Inidicatest that the cmdlet does not overwrite existing files.</source>
          <target state="translated">Inidicatest 指令程式不會覆寫現有檔案。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>By default, <bpt id="p1">**</bpt>Export-FormatData<ept id="p1">**</ept> overwrites files without warning unless the file has the read-only attribute.</source>
          <target state="translated">根據預設， <bpt id="p1">**</bpt>Export-formatdata<ept id="p1">**</ept> 不顯示警告，除非檔案具有唯讀屬性會覆寫檔案。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>To direct <bpt id="p1">**</bpt>Export-FormatData<ept id="p1">**</ept> to overwrite read-only files, use the <bpt id="p2">*</bpt>Force<ept id="p2">*</ept> parameter.</source>
          <target state="translated">若要直接 <bpt id="p1">**</bpt>Export-formatdata<ept id="p1">**</ept> 若要覆寫唯讀檔案，請使用 <bpt id="p2">*</bpt>Force<ept id="p2">*</ept> 參數。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>-Path</source>
          <target state="translated">-Path</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Specifies a location for the output file.</source>
          <target state="translated">指定輸出檔案的位置。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Enter a path (optional) and file name with a format.ps1xml file name extension.</source>
          <target state="translated">輸入路徑 (選擇性) 與副檔名為 format.ps1xml 的檔案名稱。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>If you omit the path, <bpt id="p1">**</bpt>Export-FormatData<ept id="p1">**</ept> creates the file in the current directory.</source>
          <target state="translated">如果您省略路徑， <bpt id="p1">**</bpt>Export-formatdata<ept id="p1">**</ept> 目前目錄中建立檔案。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>If you use a file name extension other than .ps1xml, the <bpt id="p1">**</bpt>Update-FormatData<ept id="p1">**</ept> cmdlet will not recognize the file.</source>
          <target state="translated">如果您使用.ps1xml，以外的檔案名稱副檔名 <bpt id="p1">**</bpt>Update-formatdata<ept id="p1">**</ept> 指令程式將無法辨識的檔案。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>If you specify an existing file, <bpt id="p1">**</bpt>Export-FormatData<ept id="p1">**</ept> overwrites the file without warning, unless the file has the read-only attribute.</source>
          <target state="translated">如果您指定現有的檔案， <bpt id="p1">**</bpt>Export-formatdata<ept id="p1">**</ept> 覆寫檔案而不發出警告，除非檔案具有唯讀屬性。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>To overwrite a read-only file, use the <bpt id="p1">*</bpt>Force<ept id="p1">*</ept> parameter.</source>
          <target state="translated">若要覆寫唯讀檔案，請使用 <bpt id="p1">*</bpt>Force<ept id="p1">*</ept> 參數。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>To prevent files from being overwritten, use the <bpt id="p1">*</bpt>NoClobber<ept id="p1">*</ept> parameter.</source>
          <target state="translated">若要防止檔案遭到覆寫，使用 <bpt id="p1">*</bpt>NoClobber<ept id="p1">*</ept> 參數。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>CommonParameters</source>
          <target state="translated">CommonParameters</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutVariable, -OutBuffer, -PipelineVariable, -Verbose, -WarningAction, and -WarningVariable.</source>
          <target state="translated">這個 cmdlet 支援一般參數:-偵錯、-ErrorAction、-ErrorVariable、-InformationAction-InformationVariable、-OutVariable、-OutBuffer、-PipelineVariable、-Verbose、-WarningAction 以及-WarningVariable。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>For more information, see about_CommonParameters (http://go.microsoft.com/fwlink/?LinkID=113216).</source>
          <target state="translated">如需詳細資訊，請參閱 about_CommonParameters (http://go.microsoft.com/fwlink/?LinkID=113216)。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>INPUTS</source>
          <target state="translated">輸入</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>System.Management.Automation.ExtendedTypeDefinition</source>
          <target state="translated">System.Management.Automation.ExtendedTypeDefinition</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>You can pipe <bpt id="p1">**</bpt>ExtendedTypeDefinition<ept id="p1">**</ept> objects from <bpt id="p2">**</bpt>Get-FormatData<ept id="p2">**</ept> to <bpt id="p3">**</bpt>Export-FormatData<ept id="p3">**</ept>.</source>
          <target state="translated">您可以透過管道傳送 <bpt id="p1">**</bpt>ExtendedTypeDefinition<ept id="p1">**</ept> 物件從 <bpt id="p2">**</bpt>Get-formatdata<ept id="p2">**</ept> 至 <bpt id="p3">**</bpt>Export-formatdata<ept id="p3">**</ept>。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>OUTPUTS</source>
          <target state="translated">輸出</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>None</source>
          <target state="translated">無</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Export-FormatData<ept id="p1">**</ept> does not return any objects.</source>
          <target state="translated"><bpt id="p1">**</bpt>Export-formatdata<ept id="p1">**</ept> 不會傳回任何物件。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>It generates a file and saves it in the specified path.</source>
          <target state="translated">它會產生一個檔案，並將檔案儲存在指定路徑。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>NOTES</source>
          <target state="translated">附註</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>To use any formatting file, including an exported formatting file, the execution policy for the session must allow scripts and configuration files to run.</source>
          <target state="translated">若要使用任何格式化檔案 (包括匯出的格式化檔案)，工作階段的執行原則必須允許執行指令碼和設定檔。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>For more information, see about_Execution_Policies.</source>
          <target state="translated">如需詳細資訊，請參閱 about_Execution_Policies。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>RELATED LINKS</source>
          <target state="translated">相關的連結</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>Get-FormatData</source>
          <target state="translated">Get-FormatData</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>Get-Process</source>
          <target state="translated">Get-Process</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>Update-FormatData</source>
          <target state="translated">Update-FormatData</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>