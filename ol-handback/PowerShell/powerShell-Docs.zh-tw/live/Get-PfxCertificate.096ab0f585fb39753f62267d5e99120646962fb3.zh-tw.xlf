<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-tw">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-1c394fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d2489da1264620081c81392a871d8623e435fd26</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">reference\5.0\Microsoft.PowerShell.Security\Get-PfxCertificate.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions" />
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">c05183318bfb2ea16f20dc7f77d477b5f9b89349</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">64858a46fb39625928d3a03e91df0a64fbbf58f6</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>powershell, cmdlet</source>
          <target state="translated">powershell 指令程式</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Get-PfxCertificate</source>
          <target state="translated">Get-PfxCertificate</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Get-PfxCertificate</source>
          <target state="translated">Get-PfxCertificate</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>SYNOPSIS</source>
          <target state="translated">概要</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Gets information about .pfx certificate files on the computer.</source>
          <target state="translated">取得電腦上 .pfx 憑證檔案的相關資訊。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>SYNTAX</source>
          <target state="translated">語法</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>ByPath (Default)</source>
          <target state="translated">ByPath （預設值）</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>ByLiteralPath</source>
          <target state="translated">ByLiteralPath</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>DESCRIPTION</source>
          <target state="translated">描述</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>Get-PfxCertificate<ept id="p1">**</ept> cmdlet gets an object representing each specified .pfx certificate file.</source>
          <target state="translated"> <bpt id="p1">**</bpt>Get-pfxcertificate<ept id="p1">**</ept> cmdlet 會取得代表每個指定的.pfx 憑證檔案的物件。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>A .pfx file includes both the certificate and a private key.</source>
          <target state="translated">.pfx 檔案包含憑證與私密金鑰。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>EXAMPLES</source>
          <target state="translated">範例</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Example 1: Get a .pfx certificate</source>
          <target state="translated">範例 1︰ 取得.pfx 憑證</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>This command gets information about the Test.pfx certificate on the system.</source>
          <target state="translated">此命令會取得系統上 Test.pfx 憑證的相關資訊。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Example 2: Get a .pfx certificate from a remote computer</source>
          <target state="translated">範例 2︰ 從遠端電腦取得.pfx 憑證</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>This command gets a .pfx certificate file from the Server01 remote computer.</source>
          <target state="translated">此命令會從 Server01 遠端電腦取得 .pfx 憑證檔案。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>It uses Invoke-Command to run a <bpt id="p1">**</bpt>Get-PfxCertificate<ept id="p1">**</ept> command remotely.</source>
          <target state="translated">它會使用 Invoke-command 執行 <bpt id="p1">**</bpt>Get-pfxcertificate<ept id="p1">**</ept> 遠端命令。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>When the .pfx certificate file is not password-protected, the value of the <bpt id="p1">*</bpt>Authentication<ept id="p1">*</ept> parameter of <bpt id="p2">**</bpt>Invoke-Command<ept id="p2">**</ept> must be CredSSP.</source>
          <target state="translated">當.pfx 憑證檔案沒有密碼保護、 值 <bpt id="p1">*</bpt>驗證<ept id="p1">*</ept> 參數 <bpt id="p2">**</bpt>Invoke-command<ept id="p2">**</ept> 必須是 CredSSP。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>PARAMETERS</source>
          <target state="translated">參數</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>-FilePath</source>
          <target state="translated">-檔案路徑</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Specifies the full path to the .pfx file of the secured file.</source>
          <target state="translated">指定受保護檔案的.pfx 檔案的完整路徑。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>If you specify a value for this parameter, it is not necessary to type <ph id="ph1">`-FilePath`</ph> at the command line.</source>
          <target state="translated">如果您指定這個參數的值，不需要輸入 <ph id="ph1">`-FilePath`</ph> 在命令列。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>-LiteralPath</source>
          <target state="translated">-LiteralPath</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>The full path to the .pfx file of the secured file.</source>
          <target state="translated">受保護檔案之 .pfx 檔案的完整路徑。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Unlike <bpt id="p1">*</bpt>FilePath<ept id="p1">*</ept>, the value of the <bpt id="p2">*</bpt>LiteralPath<ept id="p2">*</ept> parameter is used exactly as it is typed.</source>
          <target state="translated">不同於 <bpt id="p1">*</bpt>FilePath<ept id="p1">*</ept>, ，值 <bpt id="p2">*</bpt>LiteralPath<ept id="p2">*</ept> 完全依照其輸入，使用參數。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>No characters are interpreted as wildcards.</source>
          <target state="translated">沒有字元會被視為萬用字元。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>If the path includes escape characters, enclose it in single quotation marks.</source>
          <target state="translated">如果路徑包含逸出字元，請將它括在單引號中。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Single quotation marks tell Windows PowerShell not to interpret any characters as escape sequences.</source>
          <target state="translated">單引號告知 Windows PowerShell 不要將任何字元視為逸出序列。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>CommonParameters</source>
          <target state="translated">CommonParameters</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutVariable, -OutBuffer, -PipelineVariable, -Verbose, -WarningAction, and -WarningVariable.</source>
          <target state="translated">這個 cmdlet 支援一般參數:-偵錯、-ErrorAction、-ErrorVariable、-InformationAction-InformationVariable、-OutVariable、-OutBuffer、-PipelineVariable、-Verbose、-WarningAction 以及-WarningVariable。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>For more information, see about_CommonParameters (http://go.microsoft.com/fwlink/?LinkID=113216).</source>
          <target state="translated">如需詳細資訊，請參閱 about_CommonParameters (http://go.microsoft.com/fwlink/?LinkID=113216)。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>INPUTS</source>
          <target state="translated">輸入</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>System.String</source>
          <target state="translated">System.String</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>You can pipe a string that contains a file path to <bpt id="p1">**</bpt>Get-PfxCertificate<ept id="p1">**</ept>.</source>
          <target state="translated">您可以透過管道傳送包含的檔案路徑的字串 <bpt id="p1">**</bpt>Get-pfxcertificate<ept id="p1">**</ept>。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>OUTPUTS</source>
          <target state="translated">輸出</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>System.Security.Cryptography.X509Certificates.X509Certificate2</source>
          <target state="translated">System.Security.Cryptography.X509Certificates.X509Certificate2</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Get-PfxCertificate<ept id="p1">**</ept> returns an object for each certificate that it gets.</source>
          <target state="translated"><bpt id="p1">**</bpt>Get-pfxcertificate<ept id="p1">**</ept> 傳回的物件，它會取得每個憑證。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>NOTES</source>
          <target state="translated">附註</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>When using the Invoke-Command cmdlet to run a <bpt id="p1">**</bpt>Get-PfxCertificate<ept id="p1">**</ept> command remotely, and the .pfx certificate file is not password protected, the value of the <bpt id="p2">*</bpt>Authentication<ept id="p2">*</ept> parameter of <bpt id="p3">**</bpt>Invoke-Command<ept id="p3">**</ept> must be CredSSP.</source>
          <target state="translated">當您使用 Invoke-command cmdlet 執行時 <bpt id="p1">**</bpt>Get-pfxcertificate<ept id="p1">**</ept> 遠端命令，並.pfx 憑證檔案不是密碼保護，值 <bpt id="p2">*</bpt>驗證<ept id="p2">*</ept> 參數 <bpt id="p3">**</bpt>叫用命令<ept id="p3">**</ept> 必須是 CredSSP。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>RELATED LINKS</source>
          <target state="translated">相關的連結</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Get-AuthenticodeSignature</source>
          <target state="translated">Get-AuthenticodeSignature</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Set-AuthenticodeSignature</source>
          <target state="translated">Set-AuthenticodeSignature</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>about_Signing</source>
          <target state="translated">about_Signing</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>