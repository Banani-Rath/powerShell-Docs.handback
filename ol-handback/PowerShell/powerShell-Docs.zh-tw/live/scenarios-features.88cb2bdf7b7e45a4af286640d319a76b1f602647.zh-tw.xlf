<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-tw">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-56a7a5e" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">9611a7da48a849b52821ac2890e1ea60441a75e3</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">wmf\5.1\scenarios-features.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions" />
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">6a9213ad13d065bfe7506f6f57659d1797bd691d</xliffext:olskeletonhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>New Scenarios and Features in WMF 5.1 (Preview)</source>
          <target state="translated">WMF 5.1 (預覽) 的新案例和功能</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>PowerShell, DSC, WMF</source>
          <target state="translated">PowerShell、DSC、WMF</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>New Scenarios and Features in WMF 5.1 (Preview)</source>
          <target state="translated">WMF 5.1 (預覽) 的新案例和功能</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Note: This information is preliminary and subject to change.</source>
          <target state="translated">注意：本資訊尚屬初始版本，後續有可能變更。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>PowerShell Editions</source>
          <target state="translated">PowerShell 版本</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Starting with version 5.1, PowerShell is available in different editions which denote varying feature sets and platform compatibility.</source>
          <target state="translated">從 5.1 版開始，PowerShell 提供代表各種功能集及平台相容性的不同版本。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Desktop Edition:<ept id="p1">**</ept> Built on .NET Framework and provides compatibility with scripts and modules targeting versions of PowerShell running on full footprint editions of Windows such as Server Core and Windows Desktop.</source>
          <target state="translated"><bpt id="p1">**</bpt>Desktop Edition︰<ept id="p1">**</ept>建置在 .NET Framework 上，與在完整使用量的 Windows 版本 (如 Server Core 和 Windows Desktop) 上執行之 PowerShell 版本的指令碼和模組相容。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Core Edition:<ept id="p1">**</ept> Built on .NET Core and provides compatibility with scripts and modules targeting versions of PowerShell running on reduced footprint editions of Windows such as Nano Server and Windows IoT.</source>
          <target state="translated"><bpt id="p1">**</bpt>Core Edition︰<ept id="p1">**</ept>建置在 .NET Core 上，與在降低使用量的 Windows 版本 (如 Nano Server 和 Windows IoT) 上執行之 PowerShell 版本的指令碼和模組相容。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Learn more about using PowerShell Editions</source>
          <target state="translated">深入了解使用 PowerShell 版本</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Determine running edition of PowerShell</source>
          <target state="translated">判斷執行的 PowerShell 版本</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Declare a module's compatibility to specific PowerShell versions</source>
          <target state="translated">宣告特定 PowerShell 版本的模組相容性</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Filter Get-Module results by CompatiblePSEditions</source>
          <target state="translated">依據 CompatiblePSEditions 篩選 Get-Module 結果</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Prevent script execution unless run on a compatible edition of PowerShell</source>
          <target state="translated">只有在相容的 PowerShell 版本上執行才會執行指令碼</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Catalog Cmdlets</source>
          <target state="translated">類別目錄 Cmdlet</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Two new cmdlets have been added in the <bpt id="p1">[</bpt>Microsoft.PowerShell.Security<ept id="p1">](https://technet.microsoft.com/en-us/library/hh847877.aspx)</ept> module; these generate and validate Windows catalog files.</source>
          <target state="translated"><bpt id="p1">[</bpt>Microsoft.PowerShell.Security<ept id="p1">](https://technet.microsoft.com/en-us/library/hh847877.aspx)</ept> 模組中新增了兩個新的 Cmdlet，它們會產生和驗證 Windows 類別目錄檔案。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>New-FileCatalog</source>
          <target state="translated">New-FileCatalog</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>New-FileCatalog creates a Windows catalog file for set of folders and files.</source>
          <target state="translated">New-FileCatalog 會建立 Windows 類別目錄檔案，供資料夾和檔案集合使用。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>This catalog file contains hashes for all files in specified paths.</source>
          <target state="translated">此類別目錄檔案包含指定路徑中的所有檔案雜湊。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Users can distribute the set of folders along with corresponding catalog file representing those folders.</source>
          <target state="translated">使用者可以散發資料夾集合以及代表這些資料夾的對應類別目錄檔案。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>This information is useful to validate whether any changes have been made to the folders since catalog creation time.</source>
          <target state="translated">這項資訊對驗證資料夾在類別目錄建立後是否有任何變更，非常有用。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Catalog versions 1 and 2 are supported.</source>
          <target state="translated">支援類別目錄第 1 版和第 2 版。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Version 1 uses the SHA1 hashing algorithm to create file hashes; version 2 uses SHA256.</source>
          <target state="translated">第 1 版使用 SHA1 雜湊演算法建立檔案雜湊，第 2 版使用 SHA256。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Catalog version 2 is not supported on <bpt id="p1">*</bpt>Windows Server 2008 R2<ept id="p1">*</ept> or <bpt id="p2">*</bpt>Windows 7<ept id="p2">*</ept>.</source>
          <target state="translated"><bpt id="p1">*</bpt>Windows Server 2008 R2<ept id="p1">*</ept> 或 <bpt id="p2">*</bpt>Windows 7<ept id="p2">*</ept> 不支援第 2 版的類別目錄。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>You should use catalog version 2 on <bpt id="p1">*</bpt>Windows 8<ept id="p1">*</ept>, <bpt id="p2">*</bpt>Windows Server 2012<ept id="p2">*</ept>, and later operating systems.</source>
          <target state="translated"><bpt id="p1">*</bpt>Windows 8<ept id="p1">*</ept>、<bpt id="p2">*</bpt>Windows Server 2012<ept id="p2">*</ept> 和更新版本的作業系統，應該使用類別目錄第 2 版。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>This creates the catalog file.</source>
          <target state="translated">這會建立類別目錄檔案。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>To verify the integrity of catalog file (Pester.cat in above example), sign it using <bpt id="p1">[</bpt>Set-AuthenticodeSignature<ept id="p1">](https://technet.microsoft.com/library/hh849819.aspx)</ept> cmdlet.</source>
          <target state="translated">若要驗證類別目錄檔案 (上例中為 Pester.cat) 的完整性，請使用 <bpt id="p1">[</bpt>Set-AuthenticodeSignature<ept id="p1">](https://technet.microsoft.com/library/hh849819.aspx)</ept> Cmdlet 來加以簽署。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Test-FileCatalog</source>
          <target state="translated">Test-FileCatalog</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Test-FileCatalog validates the catalog representing a set of folders.</source>
          <target state="translated">Test-FileCatalog 會驗證代表資料夾集合的類別目錄。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>This cmdlet compares all the files hashes and their relative paths found in <bpt id="p1">*</bpt>catalog<ept id="p1">*</ept> with ones on <bpt id="p2">*</bpt>disk<ept id="p2">*</ept>.</source>
          <target state="translated">此 Cmdlet 會比較所有的檔案雜湊及在 <bpt id="p1">*</bpt>catalog<ept id="p1">*</ept> 和 <bpt id="p2">*</bpt>disk<ept id="p2">*</ept> 中找到的相對路徑。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>If it detects any mismatch between file hashes and paths it returns the status as <bpt id="p1">*</bpt>ValidationFailed<ept id="p1">*</ept>.</source>
          <target state="translated">如果檔案雜湊和路徑中偵測到任何不相符的項目，就會傳回 <bpt id="p1">*</bpt>ValidationFailed<ept id="p1">*</ept> 狀態。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Users can retrieve all this information by using the <bpt id="p1">*</bpt>-Detailed<ept id="p1">*</ept> parameter.</source>
          <target state="translated">使用者可以使用 <bpt id="p1">*</bpt>-Detailed<ept id="p1">*</ept> 參數來擷取此資訊的完整內容。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>It also displays signing status of catalog in <bpt id="p1">*</bpt>Signature<ept id="p1">*</ept> property which is equivalent to calling <bpt id="p2">[</bpt>Get-AuthenticodeSignature<ept id="p2">](https://technet.microsoft.com/en-us/library/hh849805.aspx)</ept> cmdlet on the catalog file.</source>
          <target state="translated">它也會在 <bpt id="p1">*</bpt>Signature<ept id="p1">*</ept> 屬性中顯示類別目錄的簽署狀態，和呼叫 <bpt id="p2">[</bpt>Get-AuthenticodeSignature<ept id="p2">](https://technet.microsoft.com/en-us/library/hh849805.aspx)</ept> Cmdlet 一模一樣。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Users can also skip any file during validation by using the <bpt id="p1">*</bpt>-FilesToSkip<ept id="p1">*</ept> parameter.</source>
          <target state="translated">使用者也可以使用 <bpt id="p1">*</bpt>-FilesToSkip<ept id="p1">*</ept> 參數，在驗證期間略過任何檔案。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Module Analysis Cache</source>
          <target state="translated">模組分析快取</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Starting with WMF 5.1, PowerShell provides control over the file that is used to cache data about a module, such as the commands it exports.</source>
          <target state="translated">從 WMF 5.1 開始，PowerShell 可以控制快取模組資料所用的檔案，例如匯出的命令。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>By default, this cache is stored in the file <ph id="ph1">`${env:LOCALAPPDATA}\Microsoft\Windows\PowerShell\ModuleAnalysisCache`</ph>.</source>
          <target state="translated">此快取預設儲存在 <ph id="ph1">`${env:LOCALAPPDATA}\Microsoft\Windows\PowerShell\ModuleAnalysisCache`</ph> 檔案中。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>The cache is typically read at startup while searching for a command and is written on a background thread sometime after a module is imported.</source>
          <target state="translated">快取一般在啟動同時搜尋命令時讀取，並在模組匯入一段時間後寫入背景執行緒。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>To change the default location of the cache, set the <ph id="ph1">`$env:PSModuleAnalysisCachePath`</ph> environment variable before starting PowerShell.</source>
          <target state="translated">若要變更快取的預設位置，請先設定環境變數 <ph id="ph1">`$env:PSModuleAnalysisCachePath`</ph> 再啟動 PowerShell。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Changes to this environment variable will only affect children processes.</source>
          <target state="translated">此環境變數的變更只會影響子處理程序。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>The value should name a full path (including filename) that PowerShell has permission to create and write files.</source>
          <target state="translated">該值應該命名 PowerShell 有權建立和寫入檔案的完整路徑 (包括檔名)。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>To disable the file cache, set this value to an invalid location, for example:</source>
          <target state="translated">若要停用檔案快取，請將此值設定於無效的位置，例如︰</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>This sets the path to an invalid device.</source>
          <target state="translated">這會將路徑設定到無效的裝置。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>If PowerShell can't write to the path, no error is returned, but you can see error reporting by using a tracer:</source>
          <target state="translated">如果 PowerShell 無法寫入該路徑，就不會傳回任何錯誤，但您可以藉由使用追蹤查看錯誤報告︰</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>When writing out the cache, PowerShell will check for modules that no longer exist to avoid an unnecessarily large cache.</source>
          <target state="translated">寫出快取時，PowerShell 會檢查確認模組已不存在，避免不必要的大型快取。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Sometimes these checks are not desirable, in which case you can turn them off by setting:</source>
          <target state="translated">有時候不需要這些檢查，在此情況下，您可以透過設定下列項目關閉這些檢查：</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Setting this environment variable will take effect immediately in the current process.</source>
          <target state="translated">此環境變數設定會立即在目前的程序中生效。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Specifying module version</source>
          <target state="translated">指定模組版本</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>In WMF 5.1, <ph id="ph1">`using module`</ph> behaves the same way as other module-related constructions in PowerShell.</source>
          <target state="translated">在 WMF 5.1 中，<ph id="ph1">`using module`</ph> 與 PowerShell 中其他模組相關的語法結構表現一致。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Previously, you had no way to specify a particular module version; if there were multiple versions present, this resulted in an error.</source>
          <target state="translated">以往，您無法指定特定的模組版本；如果有多個版本存在，這會導致錯誤。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>In WMF 5.1:</source>
          <target state="translated">在 WMF 5.1 中：</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>You can use <ph id="ph1">`ModuleSpecification`</ph> <bpt id="p1">[</bpt>hash table<ept id="p1">](https://msdn.microsoft.com/en-us/library/jj136290(v=vs.85).aspx)</ept>.</source>
          <target state="translated">您可以使用 <ph id="ph1">`ModuleSpecification`</ph> <bpt id="p1">[</bpt>雜湊表<ept id="p1">](https://msdn.microsoft.com/en-us/library/jj136290(v=vs.85).aspx)</ept>。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>This hash table has the same format as <ph id="ph1">`Get-Module -FullyQualifiedName`</ph>.</source>
          <target state="translated">此雜湊表與 <ph id="ph1">`Get-Module -FullyQualifiedName`</ph> 的格式相同。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Example:</source>
          <target state="translated">範例：</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>If there are multiple versions of the module, PowerShell uses the <bpt id="p1">**</bpt>same resolution logic<ept id="p1">**</ept> as <ph id="ph1">`Import-Module`</ph> and doesn't return an error--the same behavior as <ph id="ph2">`Import-Module`</ph> and <ph id="ph3">`Import-DscResource`</ph>.</source>
          <target state="translated">如果模組有多個版本，PowerShell 會使用與 <ph id="ph1">`Import-Module`</ph> <bpt id="p1">**</bpt>相同的解析邏輯<ept id="p1">**</ept>，不傳回錯誤，和 <ph id="ph2">`Import-Module`</ph> 及 <ph id="ph3">`Import-DscResource`</ph> 的行為一樣。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Improvements to Pester</source>
          <target state="translated">Pester 的改善</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>In WMF 5.1, the version of Pester that ships with PowerShell has been updated from 3.3.5 to 3.4.0, with the addition of commit https://github.com/pester/Pester/pull/484/commits/3854ae8a1f215b39697ac6c2607baf42257b102e, which enables better behavior for Pester on Nano Server.</source>
          <target state="translated">在 WMF 5.1 中，PowerShell 隨附的 Pester 版本已從 3.3.5 更新至 3.4.0，加上認可 https://github.com/pester/Pester/pull/484/commits/3854ae8a1f215b39697ac6c2607baf42257b102e，讓 Pester 在 Nano Server 上有更好的表現。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>You can review the changes in versions 3.3.5 to 3.4.0 by inspecting the ChangeLog.md file at: https://github.com/pester/Pester/blob/master/CHANGELOG.md</source>
          <target state="translated">您可以檢查 https://github.com/pester/Pester/blob/master/CHANGELOG.md 的 ChangeLog.md 檔案，檢閱 3.3.5 版至 3.4.0 版的變更。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>