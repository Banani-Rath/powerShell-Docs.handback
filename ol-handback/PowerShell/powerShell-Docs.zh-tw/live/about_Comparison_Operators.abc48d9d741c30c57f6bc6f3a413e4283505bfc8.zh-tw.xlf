<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-tw">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-1c394fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">6de799a9498e9b5ea135c0a851ead7d74744ed0d</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">reference\5.0\Microsoft.PowerShell.Core\About\about_Comparison_Operators.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions" />
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">58717d868a6ff3e040e5d984e47343081a6403ef</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d1245e24d5c3b795f59724009c5fbd71bcda2dec</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>about_Comparison_Operators</source>
          <target state="translated">about_Comparison_Operators</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>powershell, cmdlet</source>
          <target state="translated">powershell 指令程式</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>About Comparison Operators</source>
          <target state="translated">關於比較運算子</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>about_Comparison_Operators</source>
          <target state="translated">about_Comparison_Operators</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>about_Comparison_Operators</source>
          <target state="translated">about_Comparison_Operators</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>SHORT DESCRIPTION</source>
          <target state="translated">簡短描述</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Describes the operators that compare values in Windows PowerShell.</source>
          <target state="translated">描述在 Windows PowerShell 中比較值的運算子。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>LONG DESCRIPTION</source>
          <target state="translated">詳細描述</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Comparison operators let you specify conditions for comparing values and finding values that match specified patterns.</source>
          <target state="translated">比較運算子可讓您指定條件來比較值，並尋找符合指定的模式的值。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>To use a comparison operator, specify the values that you want to compare together with an operator that separates these values.</source>
          <target state="translated">若要使用的比較運算子，指定您想要用來分隔這些值的運算子與比較的值。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Windows PowerShell includes the following comparison operators:</source>
          <target state="translated">Windows PowerShell 包含下列比較運算子︰</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>-eq -ne -gt -ge -lt -le -Like -NotLike -Match -NotMatch -Contains -NotContains -In -NotIn -Replace</source>
          <target state="translated">-eq-ne-gt-ge lt-le-像是-NotLike--notmatch 會比對-包含-NotContains--NotIn 中-取代</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>By default, all comparison operators are case-insensitive.</source>
          <target state="translated">根據預設，所有的比較運算子不區分大小寫。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>To make a comparison operator case-sensitive, precede the operator name with a "c".</source>
          <target state="translated">若要進行區分大小寫的比較運算子，運算子名前加上"c"。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>For example, the case-sensitive version of "-eq" is "-ceq".</source>
          <target state="translated">例如，區分大小寫版本的 」-eq"是"-ceq 」。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>To make the case-insensitivity explicit, precede the operator with an "i".</source>
          <target state="translated">若要使明確不區分大小寫，在之前與 「 i 」 運算子。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>For example, the explicitly case-insensitive version of "-eq" is "-ieq".</source>
          <target state="translated">比方說，明確地不區分大小寫的版本 」-eq"是"-ieq 」。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>When the input to an operator is a scalar value, comparison operators return a Boolean value.</source>
          <target state="translated">當運算子的輸入是純量值時，比較運算子會傳回布林值。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>When the input is a collection of values, the comparison operators return any matching values.</source>
          <target state="translated">當輸入值的集合，比較運算子會傳回任何相符的值。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>If there are no matches in a collection, comparison operators do not return anything.</source>
          <target state="translated">如果集合中的沒有相符項目，比較運算子不會傳回任何項目。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>The exceptions are the containment operators (-Contains, -NotContains), the In operators (-In, -NotIn), and the type operators (-Is, -IsNot), which always return a Boolean value.</source>
          <target state="translated">例外狀況是內含項目運算子 (-包含，-NotContains)，In 運算子 (--NotIn 中)，和型別運算子 (-即-IsNot)，這一律會傳回布林值。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Windows PowerShell supports the following comparison operators.</source>
          <target state="translated">Windows PowerShell 支援下列比較運算子。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>-eq Description: Equal to.</source>
          <target state="translated">描述-eq︰ 等於。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Includes an identical value.</source>
          <target state="translated">包含相同的值。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Example:</source>
          <target state="translated">範例：</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>PS C:&gt; "abc" -eq "abc" True</source>
          <target state="translated">PS c &gt;"abc"-eq"abc"，則為 True</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>PS C:&gt; "abc" -eq "abc", "def" False</source>
          <target state="translated">PS c &gt;"abc"-eq"abc"，"def"False</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>PS C:&gt; "abc", "def" -eq "abc" abc</source>
          <target state="translated">PS c &gt;"abc"，"def"-eq"abc"abc</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>-ne Description: Not equal to.</source>
          <target state="translated">-ne 描述︰ 不相等。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Includes a different value.</source>
          <target state="translated">包含不同的值。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Example:</source>
          <target state="translated">範例：</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>PS C:&gt; "abc" -ne "def" True</source>
          <target state="translated">PS c &gt;"abc"-ne"def"為 True</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>PS C:&gt; "abc" -ne "abc" False</source>
          <target state="translated">PS c &gt;"abc"-ne"abc"，則為 False</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>PS C:&gt; "abc" -ne "abc", "def" True</source>
          <target state="translated">PS c &gt;"abc"-ne"abc"，"def"為 True</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>PS C:&gt; "abc", "def" -ne "abc" def</source>
          <target state="translated">PS c &gt;"abc"，"def"-ne"abc"def</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>-gt Description: Greater-than.</source>
          <target state="translated">-gt 描述︰ 大於-比。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Example:</source>
          <target state="translated">範例：</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>PS C:&gt; 8 -gt 6 True</source>
          <target state="translated">PS C: &gt; 8-gt 6 True</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>PS C:&gt; 7, 8, 9 -gt 8</source>
          <target state="translated">PS C: &gt; 7、 8、 9-gt 8</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>9</source>
          <target state="translated">9</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>-ge Description: Greater-than or equal to.</source>
          <target state="translated">-ge 描述︰ 大於-或等於。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Example:</source>
          <target state="translated">範例：</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>PS C:&gt; 8 -ge 8 True</source>
          <target state="translated">PS C: &gt; 8-ge 8 True</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>PS C:&gt; 7, 8, 9 -ge 8</source>
          <target state="translated">PS C: &gt; 7、 8、 9-ge 8</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>8</source>
          <target state="translated">8</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>9</source>
          <target state="translated">9</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>-lt Description: Less-than.</source>
          <target state="translated">-lt 描述︰ 較低層比。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Example:</source>
          <target state="translated">範例：</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>PS C:&gt; 8 -lt 6 False</source>
          <target state="translated">PS C: &gt; 8-lt 6 False</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>PS C:&gt; 7, 8, 9 -lt 8</source>
          <target state="translated">PS C: &gt; 7、 8、 9-lt 8</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>7</source>
          <target state="translated">7</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>-le Description: Less-than or equal to.</source>
          <target state="translated">-le 描述︰ 較低層或等於。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Example:</source>
          <target state="translated">範例：</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>PS C:&gt; 6 -le 8 True</source>
          <target state="translated">PS C: &gt; 6-le 8 True</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>PS C:&gt; 7, 8, 9 -le 8</source>
          <target state="translated">PS C: &gt; 7、 8、 9-le 8</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>7</source>
          <target state="translated">7</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>8</source>
          <target state="translated">8</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>-Like Description: Match using the wildcard character (*).</source>
          <target state="translated">-Like 描述︰ 比對使用萬用字元 （*）。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>Example:</source>
          <target state="translated">範例：</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>PS C:&gt; "Windows PowerShell" -like "*shell" True</source>
          <target state="translated">PS C: &gt; [Windows PowerShell]-例如"* 殼層 」，則為 True</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>PS C:&gt; "Windows PowerShell", "Server" -like "*shell" Windows PowerShell</source>
          <target state="translated">PS C: &gt;"Windows PowerShell 」、 「 伺服器 」-例如"* 殼層 「 Windows PowerShell</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>-NotLike Description: Does not match using the wildcard character (*).</source>
          <target state="translated">-NotLike 描述︰ 不符合使用萬用字元 （*）。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>Example:</source>
          <target state="translated">範例：</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>PS C:&gt; "Windows PowerShell" -NotLike "*shell" False</source>
          <target state="translated">PS C: &gt; [Windows PowerShell]-NotLike"* 殼層 」，則為 False</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>PS C:&gt; "Windows PowerShell", "Server" -NotLike "*shell" Server</source>
          <target state="translated">PS c &gt;"Windows PowerShell 」、 「 伺服器 」-NotLike"* 殼層"伺服器</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>-Match Description: Matches a string using regular expressions.</source>
          <target state="translated">比對描述︰ 比對使用規則運算式的字串。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>When the input is scalar, it populates the $Matches automatic variable.</source>
          <target state="translated">純量輸入時，它會填入 $Matches 自動變數。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>Example:</source>
          <target state="translated">範例：</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>PS C:&gt; "Sunday" -Match "sun" True</source>
          <target state="translated">PS C: &gt; 「 星期日 」-比對"sun"為 True</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>PS C:&gt; $matches Name Value</source>
          <target state="translated">PS C: &gt; $matches 名稱值</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>0    Sun</source>
          <target state="translated">Sun 0</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>PS C:&gt; "Sunday", "Monday" -Match "sun" Sunday</source>
          <target state="translated">PS C: &gt; 「 星期日 」、 「 星期一 」-比對"sun"星期日</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>-NotMatch Description: Does not match a string.</source>
          <target state="translated">-Notmatch 會描述︰ 不符合的字串。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>Uses regular expressions.</source>
          <target state="translated">使用規則運算式。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>When the input is scalar, it populates the $Matches automatic variable.</source>
          <target state="translated">純量輸入時，它會填入 $Matches 自動變數。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>Example:</source>
          <target state="translated">範例：</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>PS C:&gt; "Sunday" -NotMatch "sun" False</source>
          <target state="translated">PS C: &gt; 「 星期日 」-notmatch 會"sun"False</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>PS C:&gt; $matches Name Value</source>
          <target state="translated">PS C: &gt; $matches 名稱值</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>0    sun</source>
          <target state="translated">0 sun</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>PS C:&gt; "Sunday", "Monday" -NotMatch "sun" Monday</source>
          <target state="translated">PS C: &gt; 「 星期日 」、 「 星期一 」-notmatch 會"sun"星期一</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>-Contains Description: Containment operator.</source>
          <target state="translated">-包含描述︰ 內含項目運算子。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>Tells whether a collection of reference values includes a single test value.</source>
          <target state="translated">會告知參考值的集合是否包含單一測試值。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>Always returns a Boolean value.</source>
          <target state="translated">永遠會傳回布林值。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>Returns TRUE only when the test value exactly matches at least one of the reference values.</source>
          <target state="translated">測試值完全符合其中至少一個參考值時，才會傳回 TRUE。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>When the test value is a collection, the Contains operator uses reference equality.</source>
          <target state="translated">集合的測試值時，Contains 運算子會使用參考相等。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>It returns TRUE only when one of the reference values is the same instance of the test value object.</source>
          <target state="translated">只有當參考值的其中一個測試值物件的相同執行個體，則會傳回 TRUE。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>Syntax: &lt;Reference-values&gt; -Contains &lt;Test-value&gt;</source>
          <target state="translated">語法︰ &lt; 參考值 &gt;-包含 &lt; 測試值 &gt;</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>Examples:</source>
          <target state="translated">範例：</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>PS C:&gt; "abc", "def" -Contains "def" True</source>
          <target state="translated">PS c &gt;"abc"，"def"-包含"def"為 True</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>PS C:&gt; "Windows", "PowerShell" -Contains "Shell" False  #Not an exact match</source>
          <target state="translated">PS c &gt;"Windows"、"PowerShell"-包含 「 殼層 」，則為 False #Not 完全相符</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>Does the list of computers in $domainServers include $thisComputer?</source>
          <target state="translated">$DomainServers 中電腦的清單包含 $thisComputer 嗎？</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>PS C:&gt; $domainServers -Contains $thisComputer True</source>
          <target state="translated">PS C: &gt; $domainServers-為 true，則包含 $thisComputer</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>PS C:&gt; "abc", "def", "ghi" -Contains "abc", "def" False</source>
          <target state="translated">PS c &gt;"abc"，"def"，"ghi"-包含"abc"，"def"False</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>PS C:&gt; $a = "abc", "def" PS C:&gt; "abc", "def", "ghi" -Contains $a False PS C:&gt; $a, "ghi" -Contains $a True</source>
          <target state="translated">PS C: &gt; $a ="abc"，"def"PS &gt;"abc"，"def"，"ghi"-包含 $ False PS c: a &gt; $a"ghi"-包含 $a True</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>-NotContains Description: Containment operator.</source>
          <target state="translated">-NotContains 描述︰ 內含項目運算子。</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>Tells whether a collection of reference values includes a single test value.</source>
          <target state="translated">會告知參考值的集合是否包含單一測試值。</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>Always returns a Boolean value.</source>
          <target state="translated">永遠會傳回布林值。</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>Returns TRUE when the test value is not an exact matches for at least one of the reference values.</source>
          <target state="translated">測試值不是其中至少一個參考值完全相符項目，則傳回 TRUE。</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>When the test value is a collection, the NotContains operator uses reference equality.</source>
          <target state="translated">集合的測試值時，NotContains 運算子會使用參考相等。</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>Syntax: &lt;Reference-values&gt; -NotContains &lt;Test-value&gt;</source>
          <target state="translated">語法︰ &lt; 參考值 &gt; NotContains &lt; 測試值 &gt;</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>Examples:</source>
          <target state="translated">範例：</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>PS C:&gt; "Windows", "PowerShell" -NotContains "Shell" True  #Not an exact match</source>
          <target state="translated">PS c &gt;"Windows"，"PowerShell"NotContains 「 殼層 」，則為 True #Not 完全相符</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>Get cmdlet parameters, but exclude common parameters function get-parms ($cmdlet) { $Common = "Verbose", "Debug", "WarningAction", "WarningVariable", ` "ErrorAction", "ErrorVariable", "OutVariable", "OutBuffer"</source>
          <target state="translated">取得 cmdlet 參數，但排除一般參數函式取得-parms ($cmdlet) {$Common ="Verbose"、"Debug"、"WarningAction"、"WarningVariable"，'"ErrorAction"、"ErrorVariable"、"OutVariable"，"OutBuffer"</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>$allparms = (Get-Command $Cmdlet).parametersets | foreach {$<bpt id="p1">_</bpt>.Parameters} | ` foreach {$<ept id="p1">_</ept>.Name} | Sort-Object | Get-Unique</source>
          <target state="translated">$allparms = (get 命令 $Cmdlet).parametersets |foreach {$<bpt id="p1">_</bpt>。參數} |' foreach {$<ept id="p1">_</ept>。Name} |排序物件 |取得唯一</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>$allparms | where {$Common -NotContains $_ } }</source>
          <target state="translated">$allparms |其中 {$Common-NotContains $_}}</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>Find unapproved verbs in the functions in my module</source>
          <target state="translated">在我的模組中的函式中尋找未核准的動詞命令</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>PS C:&gt; $ApprovedVerbs = Get-Verb | foreach {$<bpt id="p1">_</bpt>.verb} PS C:&gt; $myVerbs = Get-Command -Module MyModule | foreach {$<ept id="p1">_</ept>.verb}</source>
          <target state="translated">PS $ApprovedVerbs c: &gt; = Get 動詞命令 |foreach {$<bpt id="p1">_</bpt>.verb} PS $myVerbs c: &gt; = Get-command-模組 MyModule | foreach {$<ept id="p1">_</ept>.verb}</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>PS C:&gt; $myVerbs | where {$ApprovedVerbs -NotContains $_} ForEach Sort Tee Where</source>
          <target state="translated">PS $myVerbs c: &gt; |其中 {$ApprovedVerbs-NotContains $_} ForEach 排序 Tee 的位置</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>-In Description: In operator.</source>
          <target state="translated">-在描述︰ In 運算子。</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>Tells whether a test value appears in a collection of reference values.</source>
          <target state="translated">會告知測試值是否會出現在參考值的集合。</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>Always return as Boolean value.</source>
          <target state="translated">一律會傳回做為布林值。</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>Returns TRUE only when the test value exactly matches at least one of the reference values.</source>
          <target state="translated">測試值完全符合其中至少一個參考值時，才會傳回 TRUE。</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>When the test value is a collection, the In operator uses reference equality.</source>
          <target state="translated">集合的測試值時，In 運算子會使用參考相等。</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>It returns TRUE only when one of the reference values is the same instance of the test value object.</source>
          <target state="translated">只有當參考值的其中一個測試值物件的相同執行個體，則會傳回 TRUE。</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>The In operator was introduced in Windows PowerShell 3.0.</source>
          <target state="translated">In 運算子是在 Windows PowerShell 3.0 引進。</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>Syntax: &lt;Test-value&gt; -in &lt;Reference-values&gt;</source>
          <target state="translated">語法︰ &lt; 測試值 &gt;-&lt; 參考值 &gt;</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>Examples:</source>
          <target state="translated">範例：</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>PS C:&gt; "def" -in "abc", "def" True</source>
          <target state="translated">PS c &gt;"def"-"abc"，"def"True 中</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>PS C:&gt; "Shell" -in "Windows", "PowerShell" False  #Not an exact match</source>
          <target state="translated">PS c &gt;"Shell"-"Windows"，"PowerShell"False #Not 完全相符</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>PS C:&gt; "Windows" -in "Windows", "PowerShell" True  #An exact match</source>
          <target state="translated">PS c &gt;"Windows"-"Windows"，"PowerShell"True #An 完全相符</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>PS C:&gt; "Windows", "PowerShell" -in "Windows", "PowerShell", "ServerManager" False  #Using reference equality</source>
          <target state="translated">PS c &gt;"Windows"、"PowerShell"-"Windows"，"PowerShell"，"ServerManager"False #Using 參考是否相等</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>PS C:&gt; $a = "Windows", "PowerShell" PS C:&gt; $a -in $a, "ServerManager" True  #Using reference equality</source>
          <target state="translated">PS C: &gt; a ="Windows"，"PowerShell"PS c: $&gt; $a-，「 ServerManager 」，則為 True 的 #Using 參考相等</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>Does the list of computers in $domainServers include $thisComputer?</source>
          <target state="translated">$DomainServers 中電腦的清單包含 $thisComputer 嗎？</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>PS C:&gt; $thisComputer -in  $domainServers True</source>
          <target state="translated">PS C: &gt; $thisComputer-$domainServers 中則為 True</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>-NotIn Description: NotIn operator.</source>
          <target state="translated">-NotIn 描述︰ NotIn 運算子。</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>Tells whether a test value appears in a collection of reference values.</source>
          <target state="translated">會告知測試值是否會出現在參考值的集合。</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>Always returns a Boolean value.</source>
          <target state="translated">永遠會傳回布林值。</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>Returns TRUE when the test value is not an exact match for at least one of the reference values.</source>
          <target state="translated">測試值不是其中至少一個參考值完全相符，則傳回 TRUE。</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>When the test value is a collection, the In operator uses reference equality.</source>
          <target state="translated">集合的測試值時，In 運算子會使用參考相等。</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>It returns TRUE only when one of the reference values is the same instance of the test value object.</source>
          <target state="translated">只有當參考值的其中一個測試值物件的相同執行個體，則會傳回 TRUE。</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>The NotIn operator was introduced in Windows PowerShell 3.0.</source>
          <target state="translated">NotIn 運算子是在 Windows PowerShell 3.0 引進。</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>Syntax: &lt;Test-value&gt; -NotIn &lt;Reference-values&gt;</source>
          <target state="translated">語法︰ &lt; 測試值 &gt; NotIn &lt; 參考值 &gt;</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>Examples:</source>
          <target state="translated">範例：</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>PS C:&gt; "def" -NotIn "abc", "def" False</source>
          <target state="translated">PS c &gt;"def"-NotIn"abc"，"def"False</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>PS C:&gt; "ghi" -NotIn "abc", "def" True</source>
          <target state="translated">PS c &gt;"ghi"-NotIn"abc"，"def"為 True</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>PS C:&gt; "Shell" -NotIn "Windows", "PowerShell" True  #Not an exact match</source>
          <target state="translated">PS c &gt;"Shell"-NotIn"Windows"，"PowerShell"，則為 True #Not 完全相符</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>PS C:&gt; "Windows" -NotIn "Windows", "PowerShell" False  #An exact match</source>
          <target state="translated">PS c &gt;"Windows"-NotIn"Windows"False"PowerShell"#An 完全相符</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>Find unapproved verbs in the functions in my module</source>
          <target state="translated">在我的模組中的函式中尋找未核准的動詞命令</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>PS C:&gt; $ApprovedVerbs = Get-Verb | foreach {$<bpt id="p1">_</bpt>.verb} PS C:&gt; $myVerbs = Get-Command -Module MyModule | foreach {$<ept id="p1">_</ept>.verb}</source>
          <target state="translated">PS $ApprovedVerbs c: &gt; = Get 動詞命令 |foreach {$<bpt id="p1">_</bpt>.verb} PS $myVerbs c: &gt; = Get-command-模組 MyModule | foreach {$<ept id="p1">_</ept>.verb}</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>PS C:&gt; $myVerbs | where {$_ -NotIn $ApprovedVerbs} ForEach Sort Tee Where</source>
          <target state="translated">PS $myVerbs c: &gt; |其中 {$_-NotIn $ApprovedVerbs} ForEach 排序 Tee 的位置</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>-Replace Description: Replace operator.</source>
          <target state="translated">取代描述︰ Replace 運算子。</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source>Changes the specified elements of a value.</source>
          <target state="translated">變更值的指定項目。</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source>Example:</source>
          <target state="translated">範例：</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source>PS C:&gt; "Get-Process" -Replace "Get", "Stop" Stop-Process</source>
          <target state="translated">PS c &gt;"Get-process"-取代 「 取得 」、 「 停止 」 停止程序</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source>Change all .GIF file name extension to .JPG PS C:&gt; dir *.gif | foreach {$_ -Replace ".gif", ".jpg"}</source>
          <target state="translated">將所有變更。GIF 副檔名。JPG PS c: &gt; dir *.gif |foreach {$_-取代".gif"、".jpg"}</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source>Equality Operators The equality operators (-eq, -ne) return a value of TRUE or the matches when one or more of the input values is identical to the specified pattern.</source>
          <target state="translated">等號比較運算子為等號比較運算子 (-eq、-ne) 一或多個輸入的值等於指定的模式時，傳回值為 TRUE 或相符的項目。</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source>The entire pattern must match an entire value.</source>
          <target state="translated">整個模式必須符合整個值。</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve">
          <source>C:PS&gt; 2 -eq 2 True</source>
          <target state="translated">C:PS &gt; 2-eq 2 True</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source>C:PS&gt; 2 -eq 3 False</source>
          <target state="translated">C:PS &gt; 2-eq 3 False</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source>C:PS&gt; 1,2,3 -eq 2</source>
          <target state="translated">C:PS &gt; 1 2、 3-eq 2</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source>2</source>
          <target state="translated">2</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve">
          <source>C:PS&gt; "PowerShell" -eq "Shell" False</source>
          <target state="translated">C:PS &gt;"PowerShell"-eq 「 殼層 」 False</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve">
          <source>C:PS&gt; "Windows", "PowerShell" -eq "Shell"</source>
          <target state="translated">C:PS &gt; 「 Windows 」、 「 殼層 」-eq"PowerShell"</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve">
          <source>C:PS&gt;</source>
          <target state="translated">C:PS &gt;</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve">
          <source>PS C:&gt; "abc", "def", "123" -eq "def" def</source>
          <target state="translated">PS c &gt;"abc"，"def"，"123"-eq"def"def</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve">
          <source>PS C:&gt; "abc", "def", "123" -ne "def" abc</source>
          <target state="translated">PS c &gt;"abc"，"def"，"123"-ne"def"abc</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve">
          <source>123</source>
          <target state="translated">123</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve">
          <source>Containment Operators The containment operators (-Contains and -NotContains) are similar to the equality operators.</source>
          <target state="translated">內含項目運算子的內含項目運算子 (-包含和-NotContains) 類似於等號比較運算子。</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve">
          <source>However, the containment operators always return a Boolean value, even when the input is a collection.</source>
          <target state="translated">不過，內含項目運算子一律會傳回布林值，即使是集合。</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve">
          <source>Also, unlike the equality operators, the containment operators return a value as soon as they detect the first match.</source>
          <target state="translated">此外，不同於等號比較運算子，內含項目運算子會傳回值，當它偵測到的第一個符合。</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve">
          <source>The equality operators evaluate all input and then return all the matches in the collection.</source>
          <target state="translated">等號比較運算子評估所有輸入，然後傳回集合中的所有相符項目。</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve">
          <source>The following examples show the effect of the -Contains operator:</source>
          <target state="translated">下列範例顯示的效果-包含運算子︰</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve">
          <source>C:PS&gt; 1,2,3 -contains 2 True</source>
          <target state="translated">C:PS &gt; 1 2、 3-為 true，則包含 2</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve">
          <source>C:PS&gt; "PowerShell" -contains "Shell" False</source>
          <target state="translated">C:PS &gt;"PowerShell"-包含 「 殼層 」 False</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve">
          <source>C:PS&gt; "Windows", "PowerShell" -contains "Shell" False</source>
          <target state="translated">C:PS &gt;"Windows"、"PowerShell"-包含 「 殼層 」 False</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve">
          <source>PS C:&gt; "abc", "def", "123" -contains "def" True</source>
          <target state="translated">PS c &gt;"abc"，"def"，"123"-包含"def"為 True</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve">
          <source>PS C:&gt; "true", "blue", "six" -contains "true" True</source>
          <target state="translated">PS c &gt;"true"、"blue"，"6"-包含"true"True</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve">
          <source>The following example shows how the containment operators differ from the equal to operator.</source>
          <target state="translated">下列範例示範的內含項目運算子不同之處從等號運算子。</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve">
          <source>The containment operators return a value of TRUE on the first match.</source>
          <target state="translated">內含項目運算子會傳回第一個相符項目值為 TRUE。</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve">
          <source>PS C:&gt; 1,2,3,4,5,4,3,2,1 -eq 2</source>
          <target state="translated">C: &gt; 1,2,3,4,5,4,3,2,1-eq 2 的 PS</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve">
          <source>2</source>
          <target state="translated">2</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve">
          <source>2</source>
          <target state="translated">2</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve">
          <source>PS C:&gt; 1,2,3,4,5,4,3,2,1 -contains 2 True</source>
          <target state="translated">PS C: &gt; 1,2,3,4,5,4,3,2,1-為 true，則包含 2</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve">
          <source>In a very large collection, the -Contains operator returns results quicker than the equal to operator.</source>
          <target state="translated">在非常大的集合中，-包含運算子傳回的結果快於等於運算子。</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve">
          <source>Match Operators The match operators (-Match and -NotMatch) find elements that match or do not match a specified pattern using regular expressions.</source>
          <target state="translated">比對運算子相符項目運算子 (--notmatch 會而且符合項目) 找到符合或不符合指定的模式中使用規則運算式的項目。</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve">
          <source>The syntax is:</source>
          <target state="translated">語法為：</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve">
          <source>&lt;string[]&gt; -Match &lt;regular-expression&gt; &lt;string[]&gt; -NotMatch &lt;regular-expression&gt;</source>
          <target state="translated">&lt; String []-&gt; 符合 &lt; 規則運算式 &gt;&lt; string [] &gt;-notmatch 會 &lt; 規則運算式 &gt;</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve">
          <source>The following examples show some uses of the -Match operator:</source>
          <target state="translated">下列範例會顯示一些-比對運算子的用法︰</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve">
          <source>PS C:&gt; "Windows", "PowerShell" -Match ".shell" PowerShell</source>
          <target state="translated">PS c &gt;"Windows"、"PowerShell"-比對".shell"PowerShell</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve">
          <source>PS C:&gt; (Get-Command Get-Member -Syntax) -Match "-view" True</source>
          <target state="translated">PS C: &gt; (Get 命令的 Get-member-語法)-比對"-檢視 」，則為 True</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve">
          <source>PS C:&gt; (Get-Command Get-Member -Syntax) -NotMatch "-path" True</source>
          <target state="translated">PS C: &gt; (Get 命令的 Get-member-語法)-notmatch 會 「-路徑 」，則為 True</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve">
          <source>PS C:&gt; (Get-Content Servers.txt) -Match "^Server\d\d" Server01 Server02</source>
          <target state="translated">PS C: &gt; (Get-content Servers.txt)-比對"^ Server\d\d 「 Server01 Server02</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve">
          <source>The match operators search only in strings.</source>
          <target state="translated">只有在字串中搜尋比對運算子。</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve">
          <source>They cannot search in arrays of integers or other objects.</source>
          <target state="translated">它們無法搜尋中的整數或其他物件的陣列。</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve">
          <source>The -Match and -NotMatch operators populate the $Matches automatic variable when the input (the left-side argument) to the operator is a single scalar object.</source>
          <target state="translated">-比對和-notmatch 會運算子，運算子的輸入 （左邊的引數） 是單一純量物件時，請填入 $Matches 自動變數。</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve">
          <source>When the input is scalar, the -Match and -NotMatch operators return a Boolean value and set the value of the $Matches automatic variable to the matched components of the argument.</source>
          <target state="translated">當輸入是純量，-比對和-notmatch 會運算子會傳回布林值，然後將 $Matches 自動變數的值設定引數相符的元件。</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve">
          <source>If the input is a collection, the -Match and -NotMatch operators return the matching members of that collection, but the operator does not populate the $Matches variable.</source>
          <target state="translated">如果輸入是一個集合，--notmatch 會而且符合項目運算子會傳回符合該集合的成員，但運算子並不會擴展 $Matches 變數。</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve">
          <source>For example, the following command submits a collection of strings to the -Match operator.</source>
          <target state="translated">例如，下列命令送出的字串集合-比對運算子。</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve">
          <source>The -Match operator returns the items in the collection that match.</source>
          <target state="translated">-運算子傳回的項目符合集合中相符項目。</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve">
          <source>It does not populate the $Matches automatic variable.</source>
          <target state="translated">它不會填入 $Matches 自動變數。</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve">
          <source>PS C:&gt; "Sunday", "Monday", "Tuesday" -Match "sun" Sunday</source>
          <target state="translated">PS C: &gt; 「 星期日 」、 「 星期一 」、 「 星期二 」-比對"sun"星期日</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve">
          <source>PS C:&gt; $matches</source>
          <target state="translated">PS &gt; $matches c:</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve">
          <source>PS C:&gt;</source>
          <target state="translated">PS C &gt;</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve">
          <source>In contrast, the following command submits a single string to the -Match operator.</source>
          <target state="translated">相反地，下列命令提交單一-比對運算子的字串。</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve">
          <source>The -Match operator returns a Boolean value and populates the $Matches automatic variable.</source>
          <target state="translated">布林值運算子傳回值，並於其中填入 $Matches 自動變數-比對。</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve">
          <source>PS C:&gt; "Sunday" -Match "sun" True</source>
          <target state="translated">PS C: &gt; 「 星期日 」-比對"sun"為 True</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve">
          <source>PS C:&gt; $matches</source>
          <target state="translated">PS &gt; $matches c:</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve">
          <source>Name                           Value</source>
          <target state="translated">名稱值</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve">
          <source>0                              Sun</source>
          <target state="translated">0                              Sun</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve">
          <source>The -NotMatch operator populates the $Matches automatic variable when the input is scalar and the result is False, that it, when it detects a match.</source>
          <target state="translated">-Notmatch 會運算子會填入 $Matches 自動變數是純量，結果就是 False，當它，當它偵測到相符項目。</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve">
          <source>PS C:&gt; "Sunday" -NotMatch "rain" True</source>
          <target state="translated">PS C: &gt; 「 星期日 」-notmatch 會 「 不論 「 True</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve">
          <source>PS C:&gt; $matches</source>
          <target state="translated">PS &gt; $matches c:</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve">
          <source>PS C:&gt;</source>
          <target state="translated">PS C &gt;</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve">
          <source>PS C:&gt; "Sunday" -NotMatch "day" False</source>
          <target state="translated">PS C: &gt; 「 星期日 」-notmatch 會"day"False</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve">
          <source>PS C:&gt; $matches</source>
          <target state="translated">PS &gt; $matches c:</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve">
          <source>PS C:&gt;</source>
          <target state="translated">PS C &gt;</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve">
          <source>Name                           Value</source>
          <target state="translated">名稱值</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve">
          <source>0                              day</source>
          <target state="translated">0                              day</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve">
          <source>Replace Operator The -Replace operator replaces all or part of a value with the specified value using regular expressions.</source>
          <target state="translated">替換運算子-運算子取代全部或部分值，指定使用規則運算式的值。</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve">
          <source>You can use the -Replace operator for many administrative tasks, such as renaming files.</source>
          <target state="translated">您可以使用許多系統管理工作，例如重新命名檔案-Replace 運算子。</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve">
          <source>For example, the following command changes the file name extensions of all .gif files to .jpg:</source>
          <target state="translated">例如，下列命令會變更所有.gif 檔案的副檔名為.jpg:</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve">
          <source>Get-ChildItem | Rename-Item -NewName { $_ -Replace '.gif$','.jpg$' }</source>
          <target state="translated">Get-childitem |重新命名項目-NewName {$_-取代 '.gif$ '，'.jpg$ '}</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve">
          <source>The syntax of the -Replace operator is as follows, where the <ph id="ph1">&lt;original&gt;</ph> placeholder represents the characters to be replaced, and the <ph id="ph2">&lt;substitute&gt;</ph> placeholder represents the characters that will replace them:</source>
          <target state="translated">語法的運算子，如下所示，是-取代其中 <ph id="ph1">&lt;original&gt;</ph> 預留位置代表要被取代的字元和 <ph id="ph2">&lt;substitute&gt;</ph> 預留位置代表將取代的字元︰</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve">
          <source>,</source>
          <target state="translated">、</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve">
          <source>By default, the -Replace operator is case-insensitive.</source>
          <target state="translated">根據預設，-取代運算子不區分大小寫。</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve">
          <source>To make it case sensitive, use -cReplace.</source>
          <target state="translated">若要區分大小寫，請使用-cReplace。</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve">
          <source>To make it explicitly case-insensitive, use -iReplace.</source>
          <target state="translated">若要明確地不區分大小寫，請使用-iReplace。</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve">
          <source>Consider the following examples:</source>
          <target state="translated">請考慮以下範例：</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve">
          <source>PS C:&gt; "book" -Replace "B", "C" Cook PS C:&gt; "book" -iReplace "B", "C" Cook PS C:&gt; "book" -cReplace "B", "C" book</source>
          <target state="translated">PS C: &gt; 「 通訊錄 」-取代"B"、"C"Cook PS c: &gt; 「 通訊錄 」-iReplace"B"、"C"Cook PS C &gt;"book"cReplace"B"、"C"活頁簿</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve">
          <source>PS C:&gt; '&lt;command:parameter required="false" variableLength="true" globbing="false"'` | foreach {$_ -replace 'globbing="false"', 'globbing="true"'} &lt;command:parameter required="false" variableLength="true" globbing="true"</source>
          <target state="translated">PS C: &gt; ' &lt; 所需的命令︰ 參數 ="false"variableLength ="true"通用慣例 ="false"' |foreach {$_-取代 ' 通用慣例 ="false"'，' 通用慣例 ="true"'} &lt; 所需的命令︰ 參數 ="false"variableLength ="true"通用慣例 ="true"</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve">
          <source>Bitwise Operators Windows PowerShell supports the standard bitwise operators, including bitwise-AND (-bAnd), the inclusive and exclusive bitwise-OR operators (-bOr and -bXor), and bitwise-NOT (-bNot).</source>
          <target state="translated">位元運算子 Windows PowerShell 支援標準的位元運算子，包括位元-和 (-頻外)，內含和排除的位元 OR 運算子 (-bOr 和-bXor)，以及位元 NOT (-bNot)。</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve">
          <source>Beginning in Windows PowerShell 2.0, all bitwise operators work with 64-bit integers.</source>
          <target state="translated">從 Windows PowerShell 2.0 中，所有的位元運算子會使用 64 位元整數。</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve">
          <source>Beginning in Windows PowerShell 3.0, the -shr (shift-right) and -shl (shift-left) are introduced to support bitwise arithmetic in Windows PowerShell.</source>
          <target state="translated">從 Windows PowerShell 3.0 開始，-shr （右移位） 和-shl (shift left) 引入，可支援 Windows PowerShell 中的位元算術。</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve">
          <source>Windows PowerShell supports the following bitwise operators.</source>
          <target state="translated">Windows PowerShell 支援下列的位元運算子。</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve">
          <source>Operator  Description               Example</source>
          <target state="translated">運算子描述範例</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve">
          <source>-bAnd     Bitwise AND               PS C:&gt; 10 -band 3</source>
          <target state="translated">-條紋位元 AND PS c: &gt; 10-條紋 3</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve">
          <source>2</source>
          <target state="translated">2</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve">
          <source>-bOr      Bitwise OR (inclusive)    PS C:&gt; 10 -bor 3</source>
          <target state="translated">-bOr 位元 OR （含） PS &gt; 10-bor 3</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve">
          <source>11</source>
          <target state="translated">11</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve">
          <source>-bXor     Bitwise OR (exclusive)    PS C:&gt; 10 -bxor 3</source>
          <target state="translated">-bXor 位元 OR （專用） PS c: &gt; 10-bxor 3</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve">
          <source>9</source>
          <target state="translated">9</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve">
          <source>-bNot     Bitwise NOT               PS C:&gt; -bNot 10</source>
          <target state="translated">-bNot 位元 NOT PS &gt;-bNot 10</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve">
          <source>-11</source>
          <target state="translated">-11</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve">
          <source>-shl      Shift-left                PS C:&gt; 100 -shl 2</source>
          <target state="translated">-shl 左移 PS c: &gt; 100 shl 2</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve">
          <source>400</source>
          <target state="translated">400</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve">
          <source>-shr      Shift-right               PS C:&gt; 100 -shr 1</source>
          <target state="translated">-shr Shift 向 PS c: &gt; 100 shr 1</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve">
          <source>50</source>
          <target state="translated">50</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve">
          <source>Bitwise operators act on the binary format of a value.</source>
          <target state="translated">位元運算子處理值的二進位格式。</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve">
          <source>For example, the bit structure for the number 10 is 00001010 (based on 1 byte), and the bit structure for the number 3 is 00000011.</source>
          <target state="translated">例如，數字 10 的位元結構 00001010 （以 1 個位元組），且是 00000011 的數字 3 的位元結構。</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve">
          <source>When you use a bitwise operator to compare 10 to 3, the individual bits in each byte are compared.</source>
          <target state="translated">您可以使用位元運算子來比較 10 到 3，在每個位元組的個別位元相比較。</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve">
          <source>In a bitwise AND operation, the resulting bit is set to 1 only when both input bits are 1.</source>
          <target state="translated">中的位元 AND 運算，產生的位元會設為 1，只有當輸入的兩個位元都是 1。</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve">
          <source>1010      (10)</source>
          <target state="translated">1010      (10)</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve">
          <source>0011      ( 3)</source>
          <target state="translated">0011      ( 3)</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve">
          <source>--------------  bAND</source>
          <target state="translated">--------------  bAND</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve">
          <source>0010      ( 2)</source>
          <target state="translated">0010      ( 2)</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve">
          <source>In a bitwise OR (inclusive) operation, the resulting bit is set to 1 when either or both input bits are 1.</source>
          <target state="translated">在位元 OR （含） 作業中，產生的位元會設為 1，或兩個輸入位元為 1 時。</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve">
          <source>The resulting bit is set to 0 only when both input bits are set to 0.</source>
          <target state="translated">輸入的兩個位元會設為 0 時，才產生的位元會設為 0。</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve">
          <source>1010      (10)</source>
          <target state="translated">1010      (10)</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve">
          <source>0011      ( 3)</source>
          <target state="translated">0011      ( 3)</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve">
          <source>--------------  bOR (inclusive)</source>
          <target state="translated">---bOR （含）</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve">
          <source>1011      (11)</source>
          <target state="translated">1011      (11)</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve">
          <source>In a bitwise OR (exclusive) operation, the resulting bit is set to 1 only when one input bit is 1.</source>
          <target state="translated">在位元 OR （獨佔） 作業中，產生的位元會設為 1，只有一個輸入位元為 1 時，才。</target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve">
          <source>1010      (10)</source>
          <target state="translated">1010      (10)</target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve">
          <source>0011      ( 3)</source>
          <target state="translated">0011      ( 3)</target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve">
          <source>--------------  bXOR (exclusive)</source>
          <target state="translated">---bXOR （專用）</target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve">
          <source>1001      ( 9)</source>
          <target state="translated">1001      ( 9)</target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve">
          <source>The bitwise NOT operator is a unary operator that produces the binary complement of the value.</source>
          <target state="translated">位元 NOT 運算子是會產生值的二進位補數的一元運算子。</target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve">
          <source>A bit of 1 is set to 0 and a bit of 0 is set to 1.</source>
          <target state="translated">是 1 位元會設為 0，0 的位元會設為 1。</target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve">
          <source>For example, the binary complement of 0 is -1, the maximum unsigned integer (0xffffffff), and the binary complement of -1 is 0.</source>
          <target state="translated">例如，0 的二進位補數為-1，最大的不帶正負號整數 (0xffffffff)，而-1 的二進位補數為 0。</target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve">
          <source>PS C:&gt; -bNOT 10</source>
          <target state="translated">PS C: &gt;-bNOT 10</target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve">
          <source>-11</source>
          <target state="translated">-11</target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve">
          <source>0000 0000 0000 1010  (10)</source>
          <target state="translated">0000 0000 0000 1010  (10)</target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve">
          <source>------------------------- bNOT 1111 1111 1111 0101  (-11, xfffffff5)</source>
          <target state="translated">---bNOT 1111 1111年 1111年 0101 (-11，xfffffff5)</target>       </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve">
          <source>In a bitwise shift-left operation, all bits are moved "n" places to the left, where "n" is the value of the right operand.</source>
          <target state="translated">在位元左移作業中，所有位元會移 「 n 」 左邊放置，其中"n"是右運算元的值。</target>       </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve">
          <source>A zero is inserted in the ones place.</source>
          <target state="translated">零值會插入的放置。</target>       </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve">
          <source>When the left operand is an Integer (32-bit) value, the lower 5 bits of the right operand determine how many bits of the left operand are shifted.</source>
          <target state="translated">整數 （32 位元） 值，如果左的運算元時，右運算元的較低的 5 個位元會決定左運算元的位元移位。</target>       </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve">
          <source>When the left operand is a Long (64-bit) value, the lower 6 bits of the right operand determine how many bits of the left operand are shifted.</source>
          <target state="translated">當左的運算元是長時間 （64 位元） 值時，較低的 6 位元的右運算元會決定左運算元的位元移位。</target>       </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve">
          <source>PS C:&gt; 21 -shl 1</source>
          <target state="translated">C: &gt; 21-shl 1 的 PS</target>       </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve">
          <source>42</source>
          <target state="translated">42</target>       </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve">
          <source>00010101  (21)</source>
          <target state="translated">00010101  (21)</target>       </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve">
          <source>00101010  (42)</source>
          <target state="translated">00101010  (42)</target>       </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve">
          <source>PS C:&gt; 21 -shl 2</source>
          <target state="translated">C: &gt; 21-shl 2 的 PS</target>       </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve">
          <source>84</source>
          <target state="translated">84</target>       </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve">
          <source>00010101  (21)</source>
          <target state="translated">00010101  (21)</target>       </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve">
          <source>00101010  (42)</source>
          <target state="translated">00101010  (42)</target>       </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve">
          <source>01010100  (84)</source>
          <target state="translated">01010100  (84)</target>       </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve">
          <source>In a bitwise shift-right operation, all bits are moved "n" places to the right, where "n" is specified by the right operand.</source>
          <target state="translated">在位元右移位作業中，所有位元會移 「 n 」 位數，其中"n"由右運算元。</target>       </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve">
          <source>The shift-right operator (-shr) inserts a zero in the left-most place when shifting a positive or unsigned value to the right.</source>
          <target state="translated">右移位運算子 (-shr) 向右移位正數或不帶正負號的值時，將零值，在最左邊的位置。</target>       </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve">
          <source>When the left operand is an Integer (32-bit) value, the lower 5 bits of the right operand determine how many bits of the left operand are shifted.</source>
          <target state="translated">整數 （32 位元） 值，如果左的運算元時，右運算元的較低的 5 個位元會決定左運算元的位元移位。</target>       </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve">
          <source>When the left operand is a Long (64-bit) value, the lower 6 bits of the right operand determine how many bits of the left operand are shifted.</source>
          <target state="translated">當左的運算元是長時間 （64 位元） 值時，較低的 6 位元的右運算元會決定左運算元的位元移位。</target>       </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve">
          <source>PS C:&gt; 21 -shr 1</source>
          <target state="translated">C: &gt; 21-shr 1 的 PS</target>       </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve">
          <source>10</source>
          <target state="translated">10</target>       </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve">
          <source>00010101  (21)</source>
          <target state="translated">00010101  (21)</target>       </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve">
          <source>00001010  (10)</source>
          <target state="translated">00001010  (10)</target>       </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve">
          <source>PS C:&gt; 21 -shr 2</source>
          <target state="translated">C: &gt; 21-shr 2 的 PS</target>       </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve">
          <source>5</source>
          <target state="translated">5</target>       </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve">
          <source>00010101  (21)</source>
          <target state="translated">00010101  (21)</target>       </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve">
          <source>00001010  (10)</source>
          <target state="translated">00001010  (10)</target>       </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve">
          <source>00000101  ( 5)</source>
          <target state="translated">00000101  ( 5)</target>       </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve">
          <source>SEE ALSO</source>
          <target state="translated">另請參閱</target>       </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve">
          <source>about_Operators about_Regular_Expressions about_Wildcards Compare-Object Foreach-Object Where-Object</source>
          <target state="translated">about_Operators about_Regular_Expressions about_Wildcards Compare-object Foreach-object Where-object</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>