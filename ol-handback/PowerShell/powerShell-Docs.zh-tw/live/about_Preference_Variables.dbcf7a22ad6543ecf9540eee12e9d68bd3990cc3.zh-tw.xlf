<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-tw">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-1c394fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">20210b396991b7ac45186f8e118eb8e87b2590a8</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">reference\4.0\Microsoft.PowerShell.Core\About\about_Preference_Variables.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions" />
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">74b00b0efabdbaaee9854763f77cebdd613b0a82</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">c1444f805dcb7dd038ddb0f6eaaadbf1defaf60f</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>about_Preference_Variables</source>
          <target state="translated">about_Preference_Variables</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>powershell, cmdlet</source>
          <target state="translated">powershell 指令程式</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>About Preference Variables</source>
          <target state="translated">喜好設定變數</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>about_preference_variables</source>
          <target state="translated">about_preference_variables</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>SHORT DESCRIPTION</source>
          <target state="translated">簡短描述</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Variables that customize the behavior of Windows PowerShell</source>
          <target state="translated">自訂 Windows PowerShell 行為的變數</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>LONG DESCRIPTION</source>
          <target state="translated">詳細描述</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Windows PowerShell includes a set of variables that enable you to customize its behavior.</source>
          <target state="translated">Windows PowerShell 包含一組變數，可讓您自訂其行為。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>These "preference variables" work like the options in GUI-based systems.</source>
          <target state="translated">這些 「 喜好設定變數 」 一樣以 GUI 為基礎的系統中的選項。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The preference variables affect the Windows PowerShell operating environment and all commands run in the environment.</source>
          <target state="translated">喜好設定變數會影響 Windows PowerShell 作業環境，並在環境中執行所有命令。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>In many cases, the cmdlets have parameters that you can use to override the preference behavior for a specific command.</source>
          <target state="translated">在許多情況下，指令程式會有參數可讓您覆寫特定命令的喜好設定行為。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>The following table lists the preference variables and their default values.</source>
          <target state="translated">下表列出的喜好設定變數，其預設值。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Variable                             Default Value</source>
          <target state="translated">變數的預設值</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>$ConfirmPreference                   High $DebugPreference                     SilentlyContinue $ErrorActionPreference               Continue $ErrorView                           NormalView $FormatEnumerationLimit              4 $InformationPreference               SilentlyContinue $LogCommandHealthEvent               False (not logged) $LogCommandLifecycleEvent            False (not logged) $LogEngineHealthEvent                True (logged) $LogEngineLifecycleEvent             True (logged) $LogProviderLifecycleEvent           True (logged) $LogProviderHealthEvent              True (logged) $MaximumAliasCount                   4096 $MaximumDriveCount                   4096 $MaximumErrorCount                   256 $MaximumFunctionCount                4096 $MaximumHistoryCount                 4096 $MaximumVariableCount                4096 $OFS                                 (Space character (" ")) $OutputEncoding                      ASCIIEncoding object $ProgressPreference                  Continue $PSDefaultParameterValues            (None - empty hash table) $PSEmailServer                       (None) $PSModuleAutoLoadingPreference       All $PSSessionApplicationName            WSMAN $PSSessionConfigurationName          http://schemas.microsoft.com/PowerShell/microsoft.PowerShell $PSSessionOption                     (See below) $VerbosePreference                   SilentlyContinue $WarningPreference                   Continue $WhatIfPreference                    0</source>
          <target state="translated">$ConfirmPreference 高 $DebugPreference SilentlyContinue $ErrorActionPreference 繼續 $ErrorView NormalView $FormatEnumerationLimit 4 $InformationPreference SilentlyContinue $ （登入），則為 False （未登入） 的 $LogCommandLifecycleEvent False （未登入） $LogCommandHealthEvent LogEngineHealthEvent True $LogEngineLifecycleEvent True （登入） $LogProviderLifecycleEvent，則為 True （登入） $LogProviderHealthEvent，則為 True （登入） $MaximumAliasCount 4096 $MaximumDriveCount 4096 $MaximumErrorCount 256 $MaximumFunctionCount 4096 $MaximumHistoryCount 4096 $MaximumVariableCount 4096 $OFS (空格字元 ("")) $OutputEncoding ASCIIEncoding 物件 $ProgressPreference                 繼續 $PSDefaultParameterValues （無-空的雜湊資料表） （無） $PSEmailServer $PSModuleAutoLoadingPreference 所有 $PSSessionApplicationName WSMAN $PSSessionConfigurationName http://schemas.microsoft.com/PowerShell/microsoft.PowerShell $PSSessionOption （請參閱下文） $VerbosePreference SilentlyContinue $WarningPreference 繼續 $WhatIfPreference 0</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Windows PowerShell also includes the following environment variables that store user preferences.</source>
          <target state="translated">Windows PowerShell 也包含下列環境變數來儲存使用者喜好設定。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>For more information about these environment variables, see about_Environment_Variables.</source>
          <target state="translated">如需有關這些環境變數的詳細資訊，請參閱 about_Environment_Variables。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Variable</source>
          <target state="translated">變數</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>PSExecutionPolicyPreference PSModulePath</source>
          <target state="translated">PSExecutionPolicyPreference PSModulePath</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>WORKING WITH PREFERENCE VARIABLES</source>
          <target state="translated">使用喜好設定變數</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>This document describes each of the preference variables.</source>
          <target state="translated">本文件說明每個喜好設定變數。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>To display the current value of a specific preference variable, type the name of the variable.</source>
          <target state="translated">若要顯示特定的喜好設定變數的目前值，請輸入變數的名稱。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>In response, Windows PowerShell provides the value.</source>
          <target state="translated">在回應時，Windows PowerShell 提供的值。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>For example, the following command displays the value of the $ConfirmPreference variable.</source>
          <target state="translated">例如，下列命令會顯示 $ConfirmPreference 變數的值。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>PS&gt; $ConfirmPreference High</source>
          <target state="translated">PS &gt; $ConfirmPreference 偏高</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>To change the value of a variable, use an assignment statement.</source>
          <target state="translated">若要變更變數的值，請使用在指派陳述式。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>For example, the following statement assigns the value "Medium" to the $ConfirmPreference variable.</source>
          <target state="translated">例如，下列陳述式會將 「 中 」 的值指派給 $ConfirmPreference 變數。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>PS&gt; $ConfirmPreference = "Medium"</source>
          <target state="translated">PS &gt; $ConfirmPreference = 「 中 」</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Like all variables, the values that you set are specific to the current Windows PowerShell session.</source>
          <target state="translated">如同所有的變數，您所設定的值專屬於目前的 Windows PowerShell 工作階段。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>To make them effective in all Windows PowerShell session, add them to your Windows PowerShell profile.</source>
          <target state="translated">為了讓它們在所有 Windows PowerShell 工作階段中生效，請將其加入至您的 Windows PowerShell 設定檔。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>For more information, see about_Profiles.</source>
          <target state="translated">如需詳細資訊，請參閱 about_Profiles。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>WORKING REMOTELY</source>
          <target state="translated">遠端工作</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>When you run commands on a remote computer, the remote commands are subject only to the preferences set in the Windows PowerShell client on the remote computer.</source>
          <target state="translated">當您在遠端電腦上執行命令時，遠端命令受限於只能在 Windows PowerShell 用戶端在遠端電腦上設定的喜好設定。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>For example, when you run a remote command, the value of the $DebugPreference variable on remote computer determines how Windows PowerShell responds to debugging messages.</source>
          <target state="translated">比方說，當您執行遠端命令，在遠端電腦上 $DebugPreference 變數的值會決定 Windows PowerShell 偵錯訊息的回應方式。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>For more information about remote commands, see about_remote.</source>
          <target state="translated">如需有關遠端命令的詳細資訊，請參閱 about_remote。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>$ConfirmPreference Determines whether Windows PowerShell automatically prompts you for confirmation before running a cmdlet or function.</source>
          <target state="translated">$ConfirmPreference 決定是否 Windows PowerShell 自動提示您確認執行 cmdlet 或函式之前。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>When the value of the $ConfirmPreference variable (High, Medium, Low) is less than or equal to the risk assigned to the cmdlet or function (High, Medium, Low), Windows PowerShell automatically prompts you for confirmation before running the cmdlet or function.</source>
          <target state="translated">時 （高、 中、 低） $ConfirmPreference 變數的值小於或等於 cmdlet 或函式 （高、 中、 低） 所指派的風險，Windows PowerShell 自動提示您確認執行 cmdlet 或函式之前。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>If the value of the $ConfirmPreference variable is None, Windows PowerShell never automatically prompts you before running a cmdlet or function.</source>
          <target state="translated">如果 $ConfirmPreference 變數的值為 None，Windows PowerShell 永遠不會自動執行 cmdlet 或函式之前提示您。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>To change the confirming behavior for all cmdlets and functions in the session, change the value of the $ConfirmPreference variable.</source>
          <target state="translated">若要變更工作階段中的所有 cmdlet 和函式的確認行為，變更 $ConfirmPreference 變數的值。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>To override the $ConfirmPreference for a single command, use the Confirm parameter of the cmdlet or function.</source>
          <target state="translated">若要覆寫 $ConfirmPreference 單一命令，請使用 Confirm 參數的 cmdlet 或函式。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>To request confirmation, use -Confirm.</source>
          <target state="translated">若要要求確認，請使用-確認。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>To suppress confirmation, use -Confirm:$false</source>
          <target state="translated">若要隱藏確認，請使用-確認︰ $false</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Valid values of $ConfirmPreference:</source>
          <target state="translated">$ConfirmPreference 有效值︰</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>None:    Windows PowerShell does not prompt automatically.</source>
          <target state="translated">None: Windows PowerShell 不會提示自動。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>To request confirmation of a particular command, use the Confirm parameter of the cmdlet or function.</source>
          <target state="translated">若要要求確認的特定命令，使用 Confirm 參數的 cmdlet 或函式。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Low:     Windows PowerShell prompts for confirmation before running cmdlets or functions with a low, medium, or high risk.</source>
          <target state="translated">低︰ Windows PowerShell 提示確認，然後再執行 cmdlet 或函式與低、 中或高風險。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Medium:  Windows PowerShell prompts for confirmation before running cmdlets or functions with a medium, or high risk.</source>
          <target state="translated">中︰ Windows PowerShell 提示確認，然後才執行 cmdlet 或函式中或高風險。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>High:    Windows PowerShell prompts for confirmation before running cmdlets or functions with a high risk.</source>
          <target state="translated">高︰ Windows PowerShell 會提示確認，然後才執行 cmdlet 或函式具有較高的風險。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>DETAILED EXPLANATION</source>
          <target state="translated">詳細的說明</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>When the actions of a cmdlet or function significantly affect the system, such as those that delete data or use a significant amount of system resources, Windows PowerShell can automatically prompt you for confirmation before performing the action.</source>
          <target state="translated">當 cmdlet 或函式的動作會大幅影響系統，例如刪除資料或需要大量的系統資源，Windows PowerShell 可以自動提示您進行確認，然後再執行動作。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>For example,</source>
          <target state="translated">例如，</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>PS&gt; remove-item file.txt</source>
          <target state="translated">PS &gt; 移除項目.txt</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Confirm Are you sure you want to perform this action?</source>
          <target state="translated">確認您是否確定要執行此動作？</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Performing operation "Remove File" on Target "C:\file.txt".</source>
          <target state="translated">執行這項目標 「 C:\file.txt 」 上的 &lt; 移除檔案 &gt;。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>[Y] Yes  [A] Yes to All  [N] No  [L] No to All  [S] Suspend  [?] Help (default is "Y"):</source>
          <target state="translated">[Y] 是 [A] 是所有 [N] 否至所有 [S] 沒有 [L] 暫停 [？]（預設值為"Y"） 的說明︰</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>The estimate of the risk is an attribute of the cmdlet or function known as its "ConfirmImpact".</source>
          <target state="translated">風險評估是 cmdlet 或函式稱為其 「 ConfirmImpact 」 的屬性。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>Users cannot change it.</source>
          <target state="translated">使用者無法變更它。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Cmdlets and functions that might pose a risk to the system have a Confirm parameter that you can use to request or suppress confirmation for a single command.</source>
          <target state="translated">Cmdlet 和函式可能會造成系統的風險有可用來要求或隱藏的單一命令確認 Confirm 參數。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Because most cmdlets and functions use the default risk value (ConfirmImpact) of Medium, and the default value of $ConfirmPreference is High, automatic confirmation rarely occurs.</source>
          <target state="translated">由於大多數的 cmdlet 和函式使用預設的風險值 (ConfirmImpact) 的媒體，且 $ConfirmPreference 的預設值是高、 自動確認很少發生。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>However, you can activate automatic confirmation by changing the value of $ConfirmPreference to Medium or Low.</source>
          <target state="translated">不過，您可以啟用自動確認 $ConfirmPreference 的值變更為中或低。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>EXAMPLES</source>
          <target state="translated">範例</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>This example shows the effect of the default value of $ConfirmPreference.</source>
          <target state="translated">這個範例會顯示 $ConfirmPreference 的預設值的效果。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>The High value only confirms high-risk cmdlets and functions.</source>
          <target state="translated">最高的值只會確認高風險的 cmdlet 和函式。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>Since most cmdlets and functions are medium risk, they are not automatically confirmed.</source>
          <target state="translated">大多數的 cmdlet 和函式是中度風險，因為它們不會自動確認。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>PS&gt; $confirmpreference              #Get the current value of the High                                 variable</source>
          <target state="translated">PS &gt; $confirmpreference #Get 高變數的目前值</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>PS&gt; remove-item temp1.txt           #Delete a file PS&gt;                                 #Deleted without confirmation</source>
          <target state="translated">PS &gt; 移除項目 temp1.txt #Delete 檔案 PS &gt; #Deleted 而不進行確認</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>PS&gt; remove-item temp2.txt -confirm  #Use the Confirm parameter to request confirmation</source>
          <target state="translated">PS &gt; 移除項目 temp2.txt-確認 #Use Confirm 參數以要求確認</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>Confirm Are you sure you want to perform this action?</source>
          <target state="translated">確認您是否確定要執行此動作？</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>Performing operation "Remove File" on Target "C:\temp2.txt".</source>
          <target state="translated">執行這項目標 「 C:\temp2.txt 」 上的 &lt; 移除檔案 &gt;。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>[Y] Yes  [A] Yes to All  [N] No  [L] No to All  [S] Suspend  [?] Help (default is "Y"):</source>
          <target state="translated">[Y] 是 [A] 是所有 [N] 否至所有 [S] 沒有 [L] 暫停 [？]（預設值為"Y"） 的說明︰</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>The following example shows the effect of changing the value of $ConfirmPreference to Medium.</source>
          <target state="translated">下列範例顯示 $ConfirmPreference 的值變更為 「 中 」 的效果。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>Because most cmdlets and function are medium-risk, they are automatically confirmed.</source>
          <target state="translated">大多數的 cmdlet 和函式是中度風險，因為它們會自動確認。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>To suppress the confirmation prompt for a single command, use the Confirm parameter with a value of $false</source>
          <target state="translated">若要隱藏確認提示中的單一命令，使用 Confirm 參數值是 $false</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>PS&gt; $confirmpreference = "Medium"  #Change the value of $ConfirmPreference PS&gt; remove-item temp2.txt          #Deleting a file triggers confirmation</source>
          <target state="translated">PS &gt; $confirmpreference ="Medium"#Change $ConfirmPreference PS 值 &gt; 移除項目 temp2.txt #Deleting 檔案就會觸發確認</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>Confirm Are you sure you want to perform this action?</source>
          <target state="translated">確認您是否確定要執行此動作？</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>Performing operation "Remove File" on Target "C:\temp2.txt".</source>
          <target state="translated">執行這項目標 「 C:\temp2.txt 」 上的 &lt; 移除檔案 &gt;。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>[Y] Yes  [A] Yes to All  [N] No  [L] No to All  [S] Suspend  [?] Help (default is "Y"):</source>
          <target state="translated">[Y] 是 [A] 是所有 [N] 否至所有 [S] 沒有 [L] 暫停 [？]（預設值為"Y"） 的說明︰</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>PS&gt; remove-item temp3.txt -confirm:$false   #Use Confirm parameter to suppress confirmation PS&gt;</source>
          <target state="translated">PS &gt; 移除項目 temp3.txt-確認︰ $false #Use 確認參數來抑制確認 PS &gt;</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>$DebugPreference Determines how Windows PowerShell responds to debugging messages generated by a script, cmdlet or provider, or by a Write-Debug command at the command line.</source>
          <target state="translated">$DebugPreference 決定 Windows PowerShell 偵錯指令碼、 指令程式或提供者，或在命令列寫入偵錯命令產生的訊息的回應方式。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>Some cmdlets display debugging messages, which are typically very technical messages designed for programmers and technical support professionals.</source>
          <target state="translated">有些 cmdlet 顯示偵錯訊息，通常是深的技術為程式設計人員和技術支援專業人員所設計的訊息。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>By default, debugging messages are not displayed, but you can display debugging messages by changing the value of $DebugPreference.</source>
          <target state="translated">根據預設，不會顯示偵錯訊息，但您可以藉由變更 $DebugPreference 的值顯示偵錯訊息。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>You can also use the Debug common parameter of a cmdlet to display or hide the debugging messages for a specific command.</source>
          <target state="translated">您也可以使用 Debug 一般參數的 cmdlet，以顯示或隱藏特定命令的偵錯的訊息。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>For more information, type: "get-help about_commonparameters".</source>
          <target state="translated">如需詳細資訊，請輸入:"get-help about_commonparameters"。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>Valid values: Stop:               Displays the debug message and stops executing.</source>
          <target state="translated">有效值︰ 停止︰ 顯示偵錯訊息，並停止執行。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>Writes an error to the console.</source>
          <target state="translated">將錯誤寫入至主控台。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>Inquire:            Displays the debug message and asks you whether you want to continue.</source>
          <target state="translated">詢問︰ 顯示偵錯訊息，並詢問您是否要繼續。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>Note that adding the Debug common parameter to a command--when the command is configured to generate a debugging message--changes the value of the $DebugPreference variable to Inquire.</source>
          <target state="translated">請注意，將新增偵錯命令-一般參數來產生偵錯的訊息--設定命令時變更 $DebugPreference 變數的值為 Inquire。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>Continue:           Displays the debug message and continues with execution.</source>
          <target state="translated">繼續︰ 顯示偵錯訊息，並繼續執行。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>SilentlyContinue:   No effect.</source>
          <target state="translated">SilentlyContinue︰ 沒有影響。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>The debug message is not (Default)           displayed and execution continues without interruption.</source>
          <target state="translated">偵錯訊息未顯示 （預設值） 和不受干擾繼續執行。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>EXAMPLES</source>
          <target state="translated">範例</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>The following examples show the effect of changing the values of $DebugPreference when a Write-Debug command is entered at the command line.</source>
          <target state="translated">下列範例顯示變更 $DebugPreference 的值，在命令列輸入命令寫入偵錯時的效果。</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>The change affects all debugging messages, including those generated by cmdlets and scripts.</source>
          <target state="translated">變更會影響所有偵錯的訊息，包括這些 cmdlet 與指令碼所產生。</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>The examples also show the use of the Debug common parameter, which displays or hides the debugging messages related to a single command.</source>
          <target state="translated">這個範例也會顯示使用 Debug 一般參數，其中顯示或隱藏的單一命令相關的偵錯訊息。</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>This example shows the effect of the default value, "SilentlyContinue."</source>
          <target state="translated">這個範例會顯示效果的預設值為"SilentlyContinue"。</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>The debug message is not displayed and processing continues.</source>
          <target state="translated">偵錯訊息不會顯示，而且會繼續處理。</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>The final command uses the Debug parameter to override the preference for a single command.</source>
          <target state="translated">最後一個命令會使用偵錯參數來覆寫單一命令的喜好設定。</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>PS&gt; $debugpreference                    # Get the current value of SilentlyContinue                          $DebugPreference</source>
          <target state="translated">PS &gt; $debugpreference # 取得 SilentlyContinue $DebugPreference 的目前值</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>PS&gt; write-debug "Hello, World" PS&gt;                                     # The debug message is not displayed.</source>
          <target state="translated">PS &gt; 寫入偵錯"Hello，World"PS &gt; # 偵錯訊息不會顯示。</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>PS&gt; write-debug "Hello, World" -Debug   # Use the Debug parameter DEBUG: Hello, World                     # The debug message is displayed and confirmation is requested.</source>
          <target state="translated">PS &gt; 寫入偵錯"Hello，World"-偵錯 # 使用 Debug 參數偵錯︰ Hello，World # 偵錯訊息隨即出現，並要求確認。</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>Confirm Continue with this operation?</source>
          <target state="translated">請確認繼續進行這項作業嗎？</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>[Y] Yes  [A] Yes to All  [H] Halt Command  [S] Suspend  [?] Help (default is "Y"):</source>
          <target state="translated">[Y] 是 [A] 的 [是]，以所有 [H] 停止命令 [S] 暫停 [？]（預設值為"Y"） 的說明︰</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>This example shows the effect of the "Continue" value.</source>
          <target state="translated">此範例會顯示 [繼續] 值的影響。</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>The final command uses the Debug parameter with a value of $false to suppress the message for a single command.</source>
          <target state="translated">最後一個命令會使用偵錯參數值是 $false 以隱藏的單一命令訊息。</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>PS&gt; $debugpreference = "Continue"   # Change the value to "Continue"</source>
          <target state="translated">PS &gt; $debugpreference ="Continue"# 的值變更為 [繼續]</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>PS&gt; write-debug "Hello, World" DEBUG: Hello, World                 # The debug message is displayed PS&gt;                                   and processing continues.</source>
          <target state="translated">PS &gt; 寫入偵錯"Hello，World"偵錯︰ Hello，World # 偵錯訊息是顯示 PS &gt; 開始繼續處理。</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>PS&gt; write-debug "Hello, World" -Debug:$false Use the Debug parameter with false.</source>
          <target state="translated">PS &gt; 寫入偵錯"Hello，World"-偵錯︰ $false false 搭配使用的偵錯參數。</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>PS&gt;                                 # The debug message is not displayed.</source>
          <target state="translated">PS &gt; # 偵錯訊息不會顯示。</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>This example shows the effect of the "Stop" value.</source>
          <target state="translated">這個範例會顯示 「 停止 」 值的效果。</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>The final command uses the Debug parameter with a value of $false to suppress the message for a single command.</source>
          <target state="translated">最後一個命令會使用偵錯參數值是 $false 以隱藏的單一命令訊息。</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>PS&gt; $debugpreference = "Stop"       #Change the value to "Stop" PS&gt; write-debug "Hello, World" DEBUG: Hello, World Write-Debug : Command execution stopped because the shell variable "DebugPreference" is set to Stop.</source>
          <target state="translated">PS &gt; $debugpreference ="Stop"#Change 值至 「 停止 」 PS &gt; 寫入偵錯"Hello，World"偵錯︰ Hello，World 寫入偵錯︰ 命令執行已停止因為 shell 變數"DebugPreference 」 設定為停止。</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>At line:1 char:12</source>
          <target state="translated">在 [行︰ 1 char: 12</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>write-debug  &lt;&lt;&lt;&lt; "Hello, World"</source>
          <target state="translated">寫入偵錯 &lt;&lt;&lt;&lt;"Hello，World"</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>PS&gt; write-debug "Hello, World" -Debug:$false Use the Debug parameter with $false PS&gt;                                 # The debug message is not displayed and processing is not stopped.</source>
          <target state="translated">PS &gt; 寫入偵錯"Hello，World"-偵錯︰ $false $false PS 搭配使用 Debug 參數 &gt; # 偵錯訊息不會顯示，而且不會停止處理。</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>This example shows the effect of the "Inquire" value.</source>
          <target state="translated">此範例會顯示"Inquire"值的影響。</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>The final command uses the Debug parameter with a value of $false to suppress the message for a single command.</source>
          <target state="translated">最後一個命令會使用偵錯參數值是 $false 以隱藏的單一命令訊息。</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>PS&gt; $debugpreference = "Inquire" PS&gt; write-debug "Hello, World" DEBUG: Hello, World</source>
          <target state="translated">PS &gt; $debugpreference ="Inquire"PS &gt; 寫入偵錯"Hello，World"偵錯︰ Hello，World</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>Confirm Continue with this operation?</source>
          <target state="translated">請確認繼續進行這項作業嗎？</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>[Y] Yes  [A] Yes to All  [H] Halt Command  [S] Suspend  [?] Help (default is "Y"):</source>
          <target state="translated">[Y] 是 [A] 的 [是]，以所有 [H] 停止命令 [S] 暫停 [？]（預設值為"Y"） 的說明︰</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>PS&gt; write-debug "Hello, World" -Debug:$false Use the Debug parameter with $false PS&gt;                                 # The debug message is not displayed and processing continues without interruption.</source>
          <target state="translated">PS &gt; 寫入偵錯"Hello，World"-偵錯︰ $false $false PS 搭配使用 Debug 參數 &gt; # 偵錯訊息不會顯示，而且會繼續處理而不會中斷。</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>$ErrorActionPreference Determines how Windows PowerShell responds to a non-terminating error (an error that does not stop the cmdlet processing) at the command line or in a script, cmdlet, or provider, such as the errors generated by the Write-Error cmdlet.</source>
          <target state="translated">$ErrorActionPreference 決定 Windows PowerShell 如何回應非終止錯誤 （不會停止 cmdlet 處理的錯誤） 在命令列或指令碼、 指令程式或提供者，例如寫入錯誤指令程式所產生的錯誤。</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>You can also use the ErrorAction common parameter of a cmdlet to override the preference for a specific command.</source>
          <target state="translated">您也可以使用 ErrorAction 一般參數，指令程式來覆寫特定命令的喜好設定。</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>Valid values: Stop:               Displays the error message and stops executing.</source>
          <target state="translated">有效值︰ 停止︰ 會顯示錯誤訊息，並停止執行。</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>Inquire:            Displays the error message and asks you whether you want to continue.</source>
          <target state="translated">詢問︰ 會顯示錯誤訊息，並詢問您是否要繼續。</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>Continue:           Displays the error message and continues (Default)           executing.</source>
          <target state="translated">繼續︰ 時，會顯示錯誤訊息，並繼續執行 （預設值）。</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>Suspend:            Automatically suspends a workflow job to allow for further investigation.</source>
          <target state="translated">自動暫停︰ 暫停工作流程工作，以便進行進一步調查。</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>After investigation, the workflow can be resumed.</source>
          <target state="translated">經過調查之後，就可以繼續工作流程。</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>SilentlyContinue:   No effect.</source>
          <target state="translated">SilentlyContinue︰ 沒有影響。</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>The error message is not displayed and execution continues without interruption.</source>
          <target state="translated">不會顯示錯誤訊息並繼續執行而不會中斷。</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>NOTE: The Ignore value of the ErrorAction common parameter is not a valid value of the $ErrorActionPreference variable.</source>
          <target state="translated">注意︰ ErrorAction 一般參數的 「 忽略 」 值不是 $ErrorActionPreference 變數的有效值。</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>The Ignore value is intended for per-command use, not for use as saved preference.</source>
          <target state="translated">「 忽略 」 值僅供每個命令使用，不適用於為已儲存的喜好設定。</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>Neither $ErrorActionPreference nor the ErrorAction common parameter affect how Windows PowerShell responds to terminating errors (those that stop cmdlet processing).</source>
          <target state="translated">$ErrorActionPreference 或 ErrorAction 一般參數都不會影響 Windows PowerShell 如何回應 （即停止處理指令程式） 的終止錯誤。</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>For more information about the ErrorAction common parameter, see about_CommonParameters (http://go.microsoft.com/fwlink/?LinkID=113216).</source>
          <target state="translated">如需 ErrorAction 一般參數的詳細資訊，請參閱 about_CommonParameters (http://go.microsoft.com/fwlink/?LinkID=113216)。</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>EXAMPLES</source>
          <target state="translated">範例</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>These examples show the effect of the different values of $ErrorActionPreference and the use of the ErrorAction common parameter to override the preference for a single command.</source>
          <target state="translated">下列範例示範的 $ErrorActionPreference 不同的值和使用 ErrorAction 一般參數來覆寫單一命令的喜好設定的效果。</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>The ErrorAction parameter has the same valid values as the $ErrorActionPreference variable.</source>
          <target state="translated">ErrorAction 參數有相同的有效 $ErrorActionPreference 變數值。</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>This example shows the effect of the Continue value, which is the default.</source>
          <target state="translated">這個範例示範繼續值，這是預設值的影響。</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>PS&gt; $erroractionpreference Continue# Display the value of the preference.</source>
          <target state="translated">PS &gt; $erroractionpreference 繼續 # 顯示之喜好設定的值。</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>PS&gt; write-error "Hello, World" Generate a non-terminating error.</source>
          <target state="translated">PS &gt; 寫入錯誤"Hello，World"會產生非終止錯誤。</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>write-error "Hello, World" : Hello, World The error message is displayed and execution continues.</source>
          <target state="translated">寫入錯誤"Hello，World": Hello，World 錯誤訊息會顯示並繼續執行。</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>PS&gt; write-error "Hello, World" -ErrorAction:SilentlyContinue Use the ErrorAction parameter with a value of "SilentlyContinue".</source>
          <target state="translated">PS &gt; 寫入錯誤"Hello，World"-ErrorAction: SilentlyContinue 使用 ErrorAction 參數值為"SilentlyContinue"。</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>PS&gt; The error message is not displayed and execution continues.</source>
          <target state="translated">PS &gt; 不會顯示錯誤訊息，並繼續執行。</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source>This example shows the effect of the SilentlyContinue value.</source>
          <target state="translated">這個範例示範 SilentlyContinue 值的影響。</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source>PS&gt; $ErrorActionPreference = "SilentlyContinue" Change the value of the preference.</source>
          <target state="translated">PS &gt; $ErrorActionPreference ="SilentlyContinue"變更為喜好設定的值。</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source>PS&gt; write-error "Hello, World" Generate an error message.</source>
          <target state="translated">PS &gt; 寫入錯誤"Hello，World"會產生錯誤訊息。</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source>PS&gt; Error message is suppressed.</source>
          <target state="translated">PS &gt; 隱藏的錯誤訊息。</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source>PS&gt; write-error "Hello, World" -erroraction:continue Use the ErrorAction parameter with a value of "Continue".</source>
          <target state="translated">PS &gt; 寫入錯誤"Hello，World"-erroraction︰ 繼續使用 ErrorAction 參數值是 [繼續]。</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source>write-error "Hello, World" -erroraction:continue : Hello, World The error message is displayed and execution continues.</source>
          <target state="translated">寫入錯誤"Hello，World"-erroraction︰ 繼續︰ Hello，World 錯誤訊息會顯示並繼續執行。</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve">
          <source>This example shows the effect of a real error.</source>
          <target state="translated">這個範例會顯示實際錯誤的效果。</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source>In this case, the command gets a non-existent file, nofile.txt.</source>
          <target state="translated">在此情況下，取得不存在的命令檔，nofile.txt 的內容。</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source>The example also uses the ErrorAction common parameter to override the preference.</source>
          <target state="translated">此範例也使用 ErrorAction 一般參數來覆寫喜好設定。</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source>PS&gt; $erroractionpreference SilentlyContinue        # Display the value of the preference.</source>
          <target state="translated">PS &gt; $erroractionpreference SilentlyContinue # 顯示之喜好設定的值。</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve">
          <source>PS&gt; get-childitem -path nofile.txt PS&gt;                     # Error message is suppressed.</source>
          <target state="translated">PS &gt;-get-childitem-路徑 nofile.txt PS &gt; # 錯誤訊息會受到抑制。</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve">
          <source>PS&gt; $ErrorActionPreference = "Continue" Change the value to Continue.</source>
          <target state="translated">PS $ErrorActionPreference &gt; = [繼續] 變更值，以繼續。</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve">
          <source>PS&gt; get-childitem -path nofile.txt Get-ChildItem : Cannot find path 'C:\nofile.txt' because it does not exist.</source>
          <target state="translated">PS &gt;-get-childitem-路徑 nofile.txt Get-childitem︰ 找不到路徑 'C:\nofile.txt' 因為它不存在。</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve">
          <source>At line:1 char:4</source>
          <target state="translated">在 [行︰ 1 char: 4</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve">
          <source>get-childitem  &lt;&lt;&lt;&lt; nofile.txt</source>
          <target state="translated">-get-childitem &lt;&lt;&lt;&lt; nofile.txt</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve">
          <source>PS&gt; get-childitem -path nofile.txt -erroraction SilentlyContinue Use the ErrorAction parameter PS&gt; Error message is suppressed.</source>
          <target state="translated">PS &gt;-get-childitem-路徑 nofile.txt-erroraction SilentlyContinue 使用 ErrorAction 參數 PS &gt; 隱藏的錯誤訊息。</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve">
          <source>PS&gt; $ErrorActionPreference = "Inquire" Change the value to Inquire.</source>
          <target state="translated">PS &gt; $ErrorActionPreference ="Inquire"變更為 Inquire 的值。</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve">
          <source>PS&gt; get-childitem -path nofile.txt</source>
          <target state="translated">PS &gt;-get-childitem-路徑 nofile.txt</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve">
          <source>Confirm Cannot find path 'C:\nofile.txt' because it does not exist.</source>
          <target state="translated">確認找不到路徑 'C:\nofile.txt' 因為它不存在。</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve">
          <source>[Y] Yes  [A] Yes to All  [H] Halt Command  [S] Suspend  [?] Help (default is "Y"): y</source>
          <target state="translated">[Y] 是 [A] 的 [是]，以所有 [H] 停止命令 [S] 暫停 [？]說明 （預設值為"Y"）︰ y</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve">
          <source>Get-ChildItem : Cannot find path 'C:\nofile.txt' because it does not exist.</source>
          <target state="translated">Get-childitem︰ 在不存在，因為找不到路徑 'C:\nofile.txt'。</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve">
          <source>At line:1 char:4</source>
          <target state="translated">在 [行︰ 1 char: 4</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve">
          <source>get-childitem  &lt;&lt;&lt;&lt; nofile.txt</source>
          <target state="translated">-get-childitem &lt;&lt;&lt;&lt; nofile.txt</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve">
          <source>PS&gt; $ErrorActionPreference = "Continue" Change the value to Continue.</source>
          <target state="translated">PS $ErrorActionPreference &gt; = [繼續] 變更值，以繼續。</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve">
          <source>PS&gt; Get-Childitem nofile.txt -erroraction "Inquire" Use the ErrorAction parameter to override the preference value.</source>
          <target state="translated">PS &gt; Get-childitem nofile.txt-erroraction"Inquire"使用 ErrorAction 參數來覆寫喜好設定的值。</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve">
          <source>Confirm Cannot find path 'C:\nofile.txt' because it does not exist.</source>
          <target state="translated">確認找不到路徑 'C:\nofile.txt' 因為它不存在。</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve">
          <source>[Y] Yes  [A] Yes to All  [H] Halt Command  [S] Suspend  [?] Help (default is "Y"):</source>
          <target state="translated">[Y] 是 [A] 的 [是]，以所有 [H] 停止命令 [S] 暫停 [？]（預設值為"Y"） 的說明︰</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve">
          <source>$ErrorView Determines the display format of error messages in Windows PowerShell.</source>
          <target state="translated">$ErrorView 決定 Windows PowerShell 中的錯誤訊息的顯示格式。</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve">
          <source>Valid values: NormalView:         A detailed view designed for most users.</source>
          <target state="translated">有效值︰ NormalView︰ 為大部分的使用者而設計的詳細的檢視。</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve">
          <source>(default)           Consists of a description of the error, the name of the object involved in the error, and arrows (&lt;&lt;&lt;&lt;) that point to the words in the command that caused the error.</source>
          <target state="translated">（預設值）          描述發生錯誤，錯誤，而且箭號所牽涉的物件名稱所組成 (&lt;&lt;&lt;&lt;)，會指向中造成錯誤的命令文字。</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve">
          <source>CategoryView:       A succinct, structured view designed for production environments.</source>
          <target state="translated">CategoryView: 簡潔、 結構化檢視設計適用於實際執行環境。</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve">
          <source>The format is: {Category}: ({TargetName}:{TargetType}):[{Activity}], {Reason}</source>
          <target state="translated">格式如下: {類別}: ({TargetName}: {TargetType}): [{活動}] {Reason}</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve">
          <source>For more information about the fields in CategoryView, see "ErrorCategoryInfo class" in the Windows PowerShell SDK.</source>
          <target state="translated">如需 CategoryView 中的欄位的詳細資訊，請參閱 Windows PowerShell SDK 中的 「 ErrorCategoryInfo 類別 」。</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve">
          <source>EXAMPLES</source>
          <target state="translated">範例</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve">
          <source>These example show the effect of the ErrorView values.</source>
          <target state="translated">這些範例會顯示 ErrorView 值的影響。</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve">
          <source>This example shows how an error appears when the value of $ErrorView is NormalView.</source>
          <target state="translated">這個範例會示範 NormalView $ErrorView 值時，發生錯誤的顯示方式。</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve">
          <source>In this case, the Get-ChildItem command is used to find a non-existent file.</source>
          <target state="translated">在此情況下，Get-childitem 命令用來尋找不存在的檔案。</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve">
          <source>PS&gt; $ErrorView                         # Verify the value.</source>
          <target state="translated">PS &gt; $ErrorView # 驗證的值。</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve">
          <source>NormalView</source>
          <target state="translated">NormalView</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve">
          <source>PS&gt; get-childitem nofile.txt           # Find a non-existent file.</source>
          <target state="translated">PS &gt;-get-childitem nofile.txt # 尋找不存在的檔案。</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve">
          <source>Get-ChildItem : Cannot find path 'C:\nofile.txt' because it does not exist.</source>
          <target state="translated">Get-childitem︰ 在不存在，因為找不到路徑 'C:\nofile.txt'。</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve">
          <source>At line:1 char:14</source>
          <target state="translated">在 [行︰ 1 char: 14</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve">
          <source>get-childitem  &lt;&lt;&lt;&lt; nofile.txt</source>
          <target state="translated">-get-childitem &lt;&lt;&lt;&lt; nofile.txt</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve">
          <source>This example shows how the same error appears when the value of $ErrorView is CategoryView.</source>
          <target state="translated">此範例顯示相同的錯誤會出現 CategoryView $ErrorView 值時。</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve">
          <source>PS&gt; $ErrorView = "CategoryView"        # Change the value to CategoryView</source>
          <target state="translated">PS &gt; $ErrorView ="CategoryView"# 的值變更為 CategoryView</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve">
          <source>PS&gt; get-childitem nofile.txt ObjectNotFound: (C:\nofile.txt:String) [Get-ChildItem], ItemNotFoundException</source>
          <target state="translated">PS &gt;-get-childitem nofile.txt ObjectNotFound: (C:\nofile.txt:String) [Get-childitem]、 ItemNotFoundException</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve">
          <source>This example demonstrates that the value of ErrorView only affects the error display; it does not change the structure of the error object that is stored in the $error automatic variable.</source>
          <target state="translated">這個範例會示範 ErrorView 值只會影響錯誤顯示。它不會變更儲存在 $error 自動變數中的錯誤物件的結構。</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve">
          <source>For information about the $error automatic variable, see about_automatic_variables.</source>
          <target state="translated">如需 $error 自動變數的資訊，請參閱 about_automatic_variables。</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve">
          <source>This command takes the ErrorRecord object associated with the most recent error in the error array (element 0) and formats all of the properties of the error object in a list.</source>
          <target state="translated">此命令會以錯誤陣列 （項目 0） 最近的錯誤相關聯的 ErrorRecord 物件，並格式化的所有屬性的清單中的錯誤物件。</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve">
          <source>PS&gt; $error[0] | format-list -property * -force</source>
          <target state="translated">PS 是 &gt; $error [0] |格式清單-屬性 *-強制</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve">
          <source>Exception    : System.Management.Automation.ItemNotFoundException: Cannot find path 'C:\nofile.txt' because it does not exist.</source>
          <target state="translated">例外狀況︰ System.Management.Automation.ItemNotFoundException︰ 找不到路徑 'C:\nofile.txt' 因為它不存在。</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve">
          <source>at System.Management.Automation.SessionStateInternal.GetChildItems(String path, Boolean recurse, CmdletProviderContext context) at System.Management.Automation.ChildItemCmdletProviderIntrinsics.Get(String path, Boolean recurse, CmdletProviderContext context) at Microsoft.PowerShell.Commands.GetChildItemCommand.ProcessRecord() TargetObject          : C:\nofile.txt CategoryInfo          : ObjectNotFound: (C:\nofile.txt:String) [Get-ChildItem], ItemNotFoundException FullyQualifiedErrorId : PathNotFound,Microsoft.PowerShell.Commands.GetChildItemCommand ErrorDetails          : InvocationInfo        : System.Management.Automation.InvocationInfo</source>
          <target state="translated">在 System.Management.Automation.ChildItemCmdletProviderIntrinsics.Get 路徑字串、 布林 recurse (CmdletProviderContext 內容） 在 Microsoft.PowerShell.Commands.GetChildItemCommand.ProcessRecord() TargetObject System.Management.Automation.SessionStateInternal.GetChildItems 路徑字串、 布林 recurse (CmdletProviderContext 內容）︰ C:\nofile.txt CategoryInfo: ObjectNotFound: (C:\nofile.txt:String) [Get-childitem]、 ItemNotFoundException FullyQualifiedErrorId: PathNotFound,Microsoft.PowerShell.Commands.GetChildItemCommand ErrorDetails: InvocationInfo: System.Management.Automation.InvocationInfo</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve">
          <source>$FormatEnumerationLimit Determines how many enumerated items are included in a display.</source>
          <target state="translated">$FormatEnumerationLimit 判斷顯示中包含多少個列舉項目。</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve">
          <source>This variable does not affect the underlying objects; just the display.</source>
          <target state="translated">此變數不會影響基礎的物件。只顯示。</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve">
          <source>When the value of $FormatEnumerationLimit is less than the number of enumerated items, Windows PowerShell adds an ellipsis (...) to indicate items not shown.</source>
          <target state="translated">$FormatEnumerationLimit 的值小於列舉項目的數目，Windows PowerShell 會加上省略符號 （...），表示未顯示的項目。</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve">
          <source>Valid values: Integers (Int32) Default value: 4</source>
          <target state="translated">有效的值︰ 整數 (Int32) 預設值︰ 4</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve">
          <source>EXAMPLES</source>
          <target state="translated">範例</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve">
          <source>This example shows how to use the $FormatEnumerationLimit variable to improve the display of enumerated items.</source>
          <target state="translated">這個範例示範如何使用 $FormatEnumerationLimit 變數來改善列舉項目的顯示。</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve">
          <source>The command in this example generates a table that lists all of the services running on the computer in two groups; one for running services and one for stopped services.</source>
          <target state="translated">此範例中的命令會產生資料表，其中列出所有在兩個群組; 電腦上執行的服務一個用於執行服務，一個用於已停止的服務。</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve">
          <source>It uses a Get-Service command to get all of the services, and then send the results through the pipeline to the Group-Object cmdlet, which groups the results by the service status.</source>
          <target state="translated">它使用 Get-service 命令來取得所有服務，然後將結果透過管線傳送群組物件指令程式，將結果分組服務狀態。</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve">
          <source>The resulting display is a table that lists the status in the Name column and the processes with that status in the Group column.</source>
          <target state="translated">顯示的結果會是列出在名稱資料行和程序的狀態，該狀態為 [群組] 欄位中的資料表。</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve">
          <source>(To change the column labels, use a hash table.</source>
          <target state="translated">（若要變更資料行標籤，請使用雜湊表。</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve">
          <source>For more information, see the examples in "get-help format-table -examples".)</source>
          <target state="translated">如需詳細資訊，請參閱中的範例 」 取得協助格式化表格-範例 」。)</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve">
          <source>There are a maximum of 4 services listed in the Group column for each status.</source>
          <target state="translated">有最多 4 個列出的每個狀態群組資料行中的服務。</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve">
          <source>To increase the number of items listed, increase the value of $FormatEnumerationLimit to 1000.</source>
          <target state="translated">若要增加的列出項目數目，請增加 $FormatEnumerationLimit 到 1000年的值。</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve">
          <source>In the resulting display, the list in the Group column is now limited by the line length.</source>
          <target state="translated">在顯示的結果中的群組資料行的清單現在受限於行長度。</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve">
          <source>In the final command in the example, use the Wrap parameter of Format-Table to display all of the processes in each Status group.</source>
          <target state="translated">在範例中的最後一個命令，使用格式資料表的自動換行參數來顯示每個狀態群組中的所有處理序。</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve">
          <source>PS&gt; $formatenumerationlimit         # Find the current value 4</source>
          <target state="translated">PS &gt; $formatenumerationlimit # 找出目前的值 4</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve">
          <source>PS&gt; get-service | group-object -property status List all services grouped by status</source>
          <target state="translated">PS &gt; 取得服務 |群組物件的屬性狀態列出依狀態分組的所有服務</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve">
          <source>Count Name                      Group</source>
          <target state="translated">計數名稱群組</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve">
          <source>60 Running                   {AdtAgent, ALG, Ati HotKey Poller, AudioSrv...}</source>
          <target state="translated">60 執行 {AdtAgent、 ALG、 Ati 快速鍵輪詢者、 AudioSrv...}</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve">
          <source>41 Stopped                   {Alerter, AppMgmt, aspnet_state, ATI Smart...}</source>
          <target state="translated">41 已停止 {Alerter，AppMgmt，內，ATI 智慧...}</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve">
          <source>The list is truncated after 4 items.</source>
          <target state="translated">4 個項目之後，清單會被截斷。</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve">
          <source>PS&gt; $formatenumerationlimit = 1000 Increase the limit to 1000.</source>
          <target state="translated">PS &gt; $formatenumerationlimit = 1000年增加到 1000年的限制。</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve">
          <source>PS&gt; get-service | group-object -property status Repeat the command.</source>
          <target state="translated">PS &gt; 取得服務 |群組物件的屬性狀態重複命令。</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve">
          <source>Count Name     Group</source>
          <target state="translated">計數名稱群組</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve">
          <source>60 Running  {AdtAgent, ALG, Ati HotKey Poller, AudioSrv, BITS, CcmExec... 41 Stopped  {Alerter, AppMgmt, aspnet_state, ATI Smart, Browser, CiSvc...</source>
          <target state="translated">60 執行 {AdtAgent ALG、 Ati 快速鍵輪詢者、 AudioSrv、 位元、 CcmExec...已停止 41 {Alerter、 AppMgmt 內，ATI 智慧、 瀏覽器、 CiSvc...</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve">
          <source>PS&gt; get-service | group-object -property status | format-table -wrap Add the Wrap parameter.</source>
          <target state="translated">PS &gt; 取得服務 |群組物件的屬性狀態 |格式化表格-包裝新增 Wrap 參數。</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve">
          <source>Count Name       Group</source>
          <target state="translated">計數名稱群組</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve">
          <source>60 Running    {AdtAgent, ALG, Ati HotKey Poller, AudioSrv, BITS, CcmExec, Client for NFS, CryptSvc, DcomLaunch, Dhcp, dmserver, Dnscache, ERSvc, Eventlog, EventSystem, FwcAgent, helpsvc, HidServ, IISADMIN, InoRPC, InoRT, InoTask, lanmanserver, lanmanworkstation, LmHosts, MDM, Netlogon, Netman, Nla, NtLmSsp, PlugPlay, PolicyAgent, ProtectedStorage, RasMan, RemoteRegistry, RpcSs, SamSs, Schedule, seclogon, SENS, SharedAccess, ShellHWDetection, SMT PSVC, Spooler, srservice, SSDPSRV, stisvc, TapiSrv, TermService, Themes, TrkWks, UMWdf, W32Time, W3SVC, WebClient, winmgmt, wscsvc, wuauserv, WZCSVC, zzInterix}</source>
          <target state="translated">60 執行 {AdtAgent、 ALG、 Ati 快速鍵輪詢者、 AudioSrv、 位元、 CcmExec、 Client for NFS、 CryptSvc、 DcomLaunch、 Dhcp、 dmserver，Dnscache、 ERSvc、 事件記錄檔、 EventSystem、 FwcAgent，helpsvc，HidServ、 IISADMIN、 InoRPC、 InoRT、 InoTask，如下，將 lanmanworkstation，LmHosts MDM、 Netlogon、 Netman、 Nla、 NtLmSsp、 PlugPlay、 PolicyAgent、 ProtectedStorage、 RasMan、 遠端登錄、 RpcSs、 SamSs、 排程、 seclogon，SENS、 Win2k3、 ShellHWDetection、 SMT PSVC、 多工緩衝處理器，srservice，SSDPSRV stisvc，TapiSrv、 TermService、 佈景主題、 TrkWks、 UMWdf、 W32Time、 W3SVCWebClient winmgmt、 wscsvc、 wuauserv，WZCSVC，zzInterix}</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve">
          <source>41 Stopped    {Alerter, AppMgmt, aspnet_state, ATI Smart, Browser, CiSvc, ClipSrv, clr_optimization_v2.0.50727_32, COMSysApp, CronService, dmadmin, FastUserSwitchingCompatibility, HTTPFilter, ImapiService, Mapsvc, Messenger, mnmsrvc, MSDTC, MSIServer, msvsmon80, NetDDE, NetDDEdsdm, NtmsSvc, NVSvc, ose, RasAuto, RDSessMgr, RemoteAccess, RpcLocator, SCardSvr, SwPrv, SysmonLog, TlntSvr, upnphost, UPS, VSS, WmdmPmSN, Wmi, WmiApSrv, xmlprov}</source>
          <target state="translated">41 已停止 {Alerter、 AppMgmt 內，ATI 智慧、 瀏覽器、 CiSvc、 ClipSrv、 clr_optimization_v2.0.50727_32，COMSysApp，CronService，dmadmin FastUserSwitchingCompatibility、 HTTPFilter、 ImapiService、 Mapsvc、 Messenger、 mnmsrvc，MSDTC、 MSIServer，msvsmon80，NetDDE、 NetDDEdsdm、 NtmsSvc、 NVSvc，ose，RasAuto、 RDSessMgr、 遠端存取、 RpcLocator、 SCardSvr、 SwPrv、 SysmonLog、 TlntSvr，upnphost，UPS、 VSS、 WmdmPmSN、 Wmi、 WmiApSrv、 xmlprov}</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve">
          <source>$InformationPreference The $InformationPreference variable lets you set information stream preferences (specifically, informational messages that you have added to commands or scripts by adding the Write-Information cmdlet, and want displayed to users) for a Windows PowerShell session.</source>
          <target state="translated">$InformationPreference $InformationPreference 變數可讓您設定資訊的資料流喜好設定 （特別是，參考用訊息您加入的寫入資訊指令程式新增至命令或指令碼，並想要顯示給使用者） 的 Windows PowerShell 工作階段。</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve">
          <source>The value of the -InformationAction parameter, if used, overrides the current value of the $InformationPreference variable.</source>
          <target state="translated">-InformationAction 參數的值，如果覆寫目前 $InformationPreference 變數的值。</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve">
          <source>Valid values: Stop:               Stops a command or script at an occurrence of the Write-Information command.</source>
          <target state="translated">有效值︰ 停止︰ 停止命令或指令碼，在發生寫入資訊的命令。</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve">
          <source>Inquire:            Displays the informational message that you specify in a Write-Information command, then asks whether you want to continue.</source>
          <target state="translated">詢問︰ 顯示在寫入資訊的命令中，您指定的參考用訊息，然後詢問您是否要繼續。</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve">
          <source>Continue:           Displays the informational message, and continues running.</source>
          <target state="translated">繼續︰ 顯示參考用訊息，並繼續執行。</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve">
          <source>Suspend:            Automatically suspends a workflow job after a Write-Information command is carried out, to allow users to see the messages before continuing.</source>
          <target state="translated">自動暫停︰ 暫停工作流程工作之後寫入資訊命令執行時，可讓使用者看到的訊息，然後再繼續。</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve">
          <source>The workflow can be resumed at the user’s discretion.</source>
          <target state="translated">會判斷使用者可以繼續工作流程。</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve">
          <source>SilentlyContinue:   No effect.</source>
          <target state="translated">SilentlyContinue︰ 沒有影響。</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve">
          <source>The informational messages are not (Default)             displayed, and the script continues without interruption.</source>
          <target state="translated">告知性訊息不會顯示 [（預設值），而且指令碼會繼續而不會中斷。</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve">
          <source>$Log<bpt id="p1">*</bpt>Event The Log<ept id="p1">*</ept>Event preference variables determine which types of events are written to the Windows PowerShell event log in Event Viewer.</source>
          <target state="translated">$Log<bpt id="p1">*</bpt>事件記錄檔的<ept id="p1">*</ept>事件喜好設定變數決定何種類型的事件寫入事件檢視器中的 Windows PowerShell 事件記錄檔。</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve">
          <source>By default, only engine and provider events are logged, but you can use the Log*Event preference variables to customize your log, such as logging events about commands.</source>
          <target state="translated">根據預設，只有引擎和提供者事件都記錄，但您可以使用記錄檔 * 事件喜好設定變數，以自訂記錄檔中，例如命令的相關記錄的事件。</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve">
          <source>The Log*Event preference variables are as follows:</source>
          <target state="translated">記錄檔 * 事件喜好設定變數如下︰</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve">
          <source>$LogCommandHealthEvent: Logs errors and exceptions in command initialization and processing.</source>
          <target state="translated">$LogCommandHealthEvent︰ 在命令初始化和處理記錄錯誤和例外狀況。</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve">
          <source>Default = $false (not logged).</source>
          <target state="translated">預設值 = $false （未登入）。</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve">
          <source>$LogCommandLifecycleEvent: Logs the starting and stopping of commands and command pipelines and security exceptions in command discovery.</source>
          <target state="translated">$LogCommandLifecycleEvent︰ 命令探索中記錄的開始和停止的命令和命令的管線和安全性例外狀況。</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve">
          <source>Default = $false (not logged).</source>
          <target state="translated">預設值 = $false （未登入）。</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve">
          <source>$LogEngineHealthEvent: Logs errors and failures of sessions.</source>
          <target state="translated">$LogEngineHealthEvent︰ 記錄錯誤和失敗的工作階段。</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve">
          <source>Default = $true (logged).</source>
          <target state="translated">預設值 = $true （登入）。</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve">
          <source>$LogEngineLifecycleEvent: Logs the opening and closing of sessions.</source>
          <target state="translated">$LogEngineLifecycleEvent︰ 記錄檔的開頭和結尾的工作階段。</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve">
          <source>Default = $true (logged).</source>
          <target state="translated">預設值 = $true （登入）。</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve">
          <source>$LogProviderHealthEvent: Logs provider errors, such as read and write errors, lookup errors, and invocation errors.</source>
          <target state="translated">$LogProviderHealthEvent︰ 記錄檔提供者錯誤，例如讀取和寫入錯誤、 查閱錯誤引動過程的錯誤。</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve">
          <source>Default = $true (logged).</source>
          <target state="translated">預設值 = $true （登入）。</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve">
          <source>$LogProviderLifecycleEvent: Logs adding and removing of Windows PowerShell providers.</source>
          <target state="translated">$LogProviderLifecycleEvent︰ 新增和移除 Windows PowerShell 提供者的記錄檔。</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve">
          <source>Default = $true (logged).</source>
          <target state="translated">預設值 = $true （登入）。</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve">
          <source>(For information about Windows PowerShell providers, type: "get-help about_provider".</source>
          <target state="translated">(Windows PowerShell 提供者的相關資訊，請輸入: 「 get-help about_provider 」。</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve">
          <source>To enable a Log*Event, type the variable with a value of $true, for example:</source>
          <target state="translated">若要啟用記錄 * 事件，輸入變數的值為 $true，例如︰</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve">
          <source>$LogCommandLifeCycleEvent</source>
          <target state="translated">$LogCommandLifeCycleEvent</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve">
          <source>or -</source>
          <target state="translated">或-</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve">
          <source>$LogCommandLifeCycleEvent = $true</source>
          <target state="translated">$LogCommandLifeCycleEvent = $true</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve">
          <source>To disable an event type, type the variable with a value of $false, for example:</source>
          <target state="translated">若要停用的事件類型，請輸入變數的值為 $false，例如︰</target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve">
          <source>$LogCommandLifeCycleEvent = $false</source>
          <target state="translated">$LogCommandLifeCycleEvent = $false</target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve">
          <source>The events that you enable are effective only for the current Windows PowerShell console.</source>
          <target state="translated">您所啟用的事件可只針對目前的 Windows PowerShell 主控台。</target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve">
          <source>To apply the configuration to all consoles, save the variable settings in your Windows PowerShell profile.</source>
          <target state="translated">若要將設定套用至所有的主控台，將變數設定儲存在您的 Windows PowerShell 設定檔。</target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve">
          <source>$MaximumAliasCount Determines how many aliases are permitted in a Windows PowerShell session.</source>
          <target state="translated">$MaximumAliasCount 決定在 Windows PowerShell 工作階段中，允許多少的別名。</target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve">
          <source>The default value, 4096, should be sufficient for most uses, but you can adjust it to meet your needs.</source>
          <target state="translated">預設值為 4096，應該足以應付大部分的使用，但您可以調整以符合您的需求。</target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve">
          <source>Valid values: 1024 - 32768 (Int32) Default: 4096</source>
          <target state="translated">有效值︰ 1024年-32768 (Int32) 預設值︰ 4096</target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve">
          <source>To count the aliases on your system, type:</source>
          <target state="translated">若要計算您的系統上的別名，請輸入︰</target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve">
          <source>(get-alias).count</source>
          <target state="translated">（get 別名）.count</target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve">
          <source>$MaximumDriveCount Determines how many Windows PowerShell drives are permitted in a given session.</source>
          <target state="translated">$MaximumDriveCount 判斷指定的工作階段中允許使用多少 Windows PowerShell 磁碟機。</target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve">
          <source>This includes file system drives and data stores that are exposed by Windows PowerShell providers and appear as drives, such as the Alias: and HKLM: drives.</source>
          <target state="translated">這包括檔案系統磁碟機和資料存放區，Windows PowerShell 提供者所公開，並顯示為磁碟機，例如別名︰ 與 HKLM︰ 磁碟機。</target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve">
          <source>Valid values: 1024 - 32768 (Int32) Default: 4096</source>
          <target state="translated">有效值︰ 1024年-32768 (Int32) 預設值︰ 4096</target>       </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve">
          <source>To count the aliases on your system, type:</source>
          <target state="translated">若要計算您的系統上的別名，請輸入︰</target>       </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve">
          <source>(get-psdrive).count</source>
          <target state="translated">(get psdrive).count</target>       </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve">
          <source>$MaximumErrorCount Determines how many errors are saved in the error history for the session.</source>
          <target state="translated">$MaximumErrorCount 判斷錯誤的數目會儲存在錯誤記錄工作階段。</target>       </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve">
          <source>Valid values: 256 - 32768 (Int32) Default: 256</source>
          <target state="translated">有效值︰ 256 32768 (Int32) 預設值︰ 256</target>       </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve">
          <source>Objects that represent each retained error are stored in the $Error automatic variable.</source>
          <target state="translated">代表每個保留的錯誤物件會儲存在 $Error 自動變數。</target>       </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve">
          <source>This variable contains an array of error record objects, one for each error.</source>
          <target state="translated">此變數包含每個錯誤其中一個錯誤記錄物件的陣列。</target>       </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve">
          <source>The most recent error is the first object in the array ($Error[0]).</source>
          <target state="translated">最近的錯誤時的第一個物件的陣列 ($Error[0])。</target>       </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve">
          <source>To count the errors on your system, use the Count property of the $Error array.</source>
          <target state="translated">若要計算您的系統上的錯誤，請使用 $Error 陣列的 Count 屬性。</target>       </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve">
          <source>Type:</source>
          <target state="translated">輸入：</target>       </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve">
          <source>$Error.count</source>
          <target state="translated">$Error.count</target>       </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve">
          <source>To display a specific error, use array notation to display the error.</source>
          <target state="translated">若要顯示特定的錯誤，請使用陣列標記法來顯示錯誤。</target>       </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve">
          <source>For example, to see the most recent error, type:</source>
          <target state="translated">例如，若要查看最近的錯誤，請輸入︰</target>       </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve">
          <source>$Error[0]</source>
          <target state="translated">$Error [0]</target>       </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve">
          <source>To display the oldest retained error, type:</source>
          <target state="translated">若要顯示的最舊的保留的錯誤，請輸入︰</target>       </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve">
          <source>$Error[($Error.Count -1]</source>
          <target state="translated">$Error [($Error.Count-1]</target>       </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve">
          <source>To display the properties of the ErrorRecord object, type:</source>
          <target state="translated">若要顯示 ErrorRecord 物件的屬性，請輸入︰</target>       </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve">
          <source>$Error[0] | format-list -property * -force</source>
          <target state="translated">$Error [0] |格式清單-屬性 *-強制</target>       </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve">
          <source>In this command, the Force parameter overrides the special formatting of ErrorRecord objects and reverts to the conventional format.</source>
          <target state="translated">這個命令中，Force 參數覆寫 ErrorRecord 物件的特殊格式，並會還原為傳統的格式。</target>       </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve">
          <source>To delete all errors from the error history, use the Clear method of the error array.</source>
          <target state="translated">若要從錯誤記錄中刪除所有錯誤，請使用錯誤陣列的清除方法。</target>       </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve">
          <source>PS&gt; $Error.count 17 PS&gt; $Error.clear() PS&gt; PS&gt; $Error.count 0</source>
          <target state="translated">PS &gt; $Error.count 17 PS &gt; $Error.clear() PS &gt; PS &gt; $Error.count 0</target>       </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve">
          <source>To find all properties and methods of an error array, use the Get-Member cmdlet with its InputObject parameter.</source>
          <target state="translated">所有屬性和方法的錯誤陣列，請使用 Get-member 指令程式使用 InputObject 參數。</target>       </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve">
          <source>When you pipe a collection of objects to Get-Member, Get-Member displays the properties and methods of the objects in the collection.</source>
          <target state="translated">當您使用管線傳送至 Get-member 物件的集合時，Get-member 即會顯示集合中的屬性和方法的物件。</target>       </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve">
          <source>When you use the InputObject parameter of Get-Member, Get-Member displays the properties and methods of the collection.</source>
          <target state="translated">當您使用 Get-member 的 InputObject 參數時，Get-member 即會顯示的屬性和方法的集合。</target>       </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve">
          <source>$MaximumFunctionCount Determines how many functions are permitted in a given session.</source>
          <target state="translated">$MaximumFunctionCount 判斷指定的工作階段中允許使用多少函式。</target>       </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve">
          <source>Valid values: 1024 - 32768 (Int32) Default: 4096</source>
          <target state="translated">有效值︰ 1024年-32768 (Int32) 預設值︰ 4096</target>       </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve">
          <source>To see the functions in your session, use the Windows PowerShell Function: drive that is exposed by the Windows PowerShell Function provider.</source>
          <target state="translated">若要查看您的工作階段中的函式，使用 Windows PowerShell 函式︰ Windows PowerShell 函式提供者所公開的磁碟機。</target>       </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve">
          <source>(For more information about the Function provider, type "get-help function").</source>
          <target state="translated">（如需有關函式提供者的詳細資訊，請輸入"get-help 函式 」。）</target>       </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve">
          <source>To list the functions in the current session, type:</source>
          <target state="translated">若要列出目前工作階段中的函式，請輸入︰</target>       </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve">
          <source>get-childitem function:</source>
          <target state="translated">-get-childitem 函式︰</target>       </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve">
          <source>To count the functions in the current session, type:</source>
          <target state="translated">若要在目前工作階段中計算函式，請輸入︰</target>       </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve">
          <source>(get-childitem function:).count</source>
          <target state="translated">(-get-childitem 函式:).count</target>       </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve">
          <source>$MaximumHistoryCount Determines how many commands are saved in the command history for the current session.</source>
          <target state="translated">$MaximumHistoryCount 決定幾個命令會儲存命令歷程記錄中目前的工作階段。</target>       </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve">
          <source>Valid values: 1 - 32768 (Int32) Default: 4096</source>
          <target state="translated">有效值︰ 1-32768 (Int32) 預設值︰ 4096</target>       </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve">
          <source>To determine the number of commands current saved in the command history, type:</source>
          <target state="translated">若要判斷儲存命令歷程記錄中的目前命令數目，請輸入︰</target>       </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve">
          <source>(get-history).count</source>
          <target state="translated">.count （取得記錄）</target>       </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve">
          <source>To see the command saved in your session history, use the Get-History cmdlet.</source>
          <target state="translated">若要查看儲存在您的工作階段歷程記錄中的命令，使用 Get-history 指令程式。</target>       </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve">
          <source>For more information, see about_History (http://go.microsoft.com/fwlink/?LinkID=113233).</source>
          <target state="translated">如需詳細資訊，請參閱 about_History (http://go.microsoft.com/fwlink/?LinkID=113233)。</target>       </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve">
          <source>NOTE: In Windows PowerShell 2.0, the default value of the $MaximumHistoryCount variable is 64.</source>
          <target state="translated">注意︰ 在 Windows PowerShell 2.0，$MaximumHistoryCount 變數的預設值為 64。</target>       </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve">
          <source>$MaximumVariableCount Determines how many variables are permitted in a given session, including automatic variables, preference variables, and the variables that you create in commands and scripts.</source>
          <target state="translated">$MaximumVariableCount 決定多少變數中也允許指定的工作階段，包括自動變數、 喜好設定變數，以及您在命令和指令碼中建立的變數。</target>       </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve">
          <source>Valid values: 1024 - 32768 (Int32) Default: 4096</source>
          <target state="translated">有效值︰ 1024年-32768 (Int32) 預設值︰ 4096</target>       </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve">
          <source>To see the variables in your session, use the Get-Variable cmdlet and the features of the Windows PowerShell Variable: drive and the Windows PowerShell Variable provider.</source>
          <target state="translated">若要查看您的工作階段中的變數，使用 Get-variable 指令程式和功能的 Windows PowerShell Variable︰ 磁碟機和 Windows PowerShell 變數提供者。</target>       </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve">
          <source>For information about the Variable provider, type "get-help variable".</source>
          <target state="translated">如需變數的提供者，輸入"get-help 變數 」。</target>       </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve">
          <source>To find the current number of variables on the system, type:</source>
          <target state="translated">若要在系統上尋找目前的變數數目，請輸入︰</target>       </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve">
          <source>(get-variable).count</source>
          <target state="translated">（get 變數）.count</target>       </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve">
          <source>$OFS Output Field Separator.</source>
          <target state="translated">$OFS 輸出欄位分隔符號。</target>       </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve">
          <source>Specifies the character that separates the elements of an array when the array is converted to a string.</source>
          <target state="translated">指定的字元陣列轉換為字串時，用來分隔陣列的元素。</target>       </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve">
          <source>Valid values: Any string.</source>
          <target state="translated">有效值︰ 任何字串。</target>       </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve">
          <source>Default: Space</source>
          <target state="translated">預設︰ 空間</target>       </trans-unit>
        <trans-unit id="412" translate="yes" xml:space="preserve">
          <source>By default, the $OFS variable does not exist and the output file separator is a space, but you can add this variable and set it to any string.</source>
          <target state="translated">根據預設，$OFS 變數不存在的輸出檔案分隔符號空格，而且您可以將此變數，並將它設定為任何字串。</target>       </trans-unit>
        <trans-unit id="413" translate="yes" xml:space="preserve">
          <source>EXAMPLES</source>
          <target state="translated">範例</target>       </trans-unit>
        <trans-unit id="414" translate="yes" xml:space="preserve">
          <source>This example shows that a space is used to separate the values when an array is converted to a string.</source>
          <target state="translated">此範例顯示空間用來分隔的值，當陣列轉換成字串。</target>       </trans-unit>
        <trans-unit id="415" translate="yes" xml:space="preserve">
          <source>In this case, an array of integers is stored in a variable and then the variable is cast as a string.</source>
          <target state="translated">在此情況下，整數的陣列儲存在變數，然後將變數轉換為字串。</target>       </trans-unit>
        <trans-unit id="416" translate="yes" xml:space="preserve">
          <source>PS&gt; $array = 1,2,3                 # Store an array of integers.</source>
          <target state="translated">PS &gt; $array = 1,2,3 # 存放區的整數陣列。</target>       </trans-unit>
        <trans-unit id="417" translate="yes" xml:space="preserve">
          <source>PS&gt; [string]$array                 # Cast the array to a string.</source>
          <target state="translated">PS &gt; [string] $array # 轉型為字串陣列。</target>       </trans-unit>
        <trans-unit id="418" translate="yes" xml:space="preserve">
          <source>1 2 3                              # Spaces separate the elements</source>
          <target state="translated">1 2 3 # 空格分隔的項目</target>       </trans-unit>
        <trans-unit id="419" translate="yes" xml:space="preserve">
          <source>To change the separator, add the $OFS variable by assigning a value to it.</source>
          <target state="translated">若要變更的分隔符號，加入 $OFS 變數指派值給它。</target>       </trans-unit>
        <trans-unit id="420" translate="yes" xml:space="preserve">
          <source>To work correctly, the variable must be named $OFS.</source>
          <target state="translated">正常運作，此變數必須命名 $OFS。</target>       </trans-unit>
        <trans-unit id="421" translate="yes" xml:space="preserve">
          <source>PS&gt; $OFS = "+"                     # Create $OFS and assign a "+"</source>
          <target state="translated">PS &gt; $OFS ="+"# 建立 $OFS 並指派 [+]</target>       </trans-unit>
        <trans-unit id="422" translate="yes" xml:space="preserve">
          <source>PS&gt; [string]$array                 # Repeat the command 1+2+3                              # Plus signs separate the elements</source>
          <target state="translated">PS &gt; [string] $array # 重複命令 1 + 2 + 3 # 加號分隔項目</target>       </trans-unit>
        <trans-unit id="423" translate="yes" xml:space="preserve">
          <source>To restore the default behavior, you can assign a space (" ") to the value of $OFS or delete the variable.</source>
          <target state="translated">若要還原預設行為，您可以指派一個空格 ("") $OFS 或刪除該變數的值。</target>       </trans-unit>
        <trans-unit id="424" translate="yes" xml:space="preserve">
          <source>This command deletes the variable and then verifies that the separator is a space.</source>
          <target state="translated">此命令會刪除變數，然後確認 [分隔符號是空格。</target>       </trans-unit>
        <trans-unit id="425" translate="yes" xml:space="preserve">
          <source>PS&gt; Remove-Variable OFS            # Delete $OFS PS&gt;</source>
          <target state="translated">PS &gt; 移除變數 OFS # 刪除 $OFS PS &gt;</target>       </trans-unit>
        <trans-unit id="426" translate="yes" xml:space="preserve">
          <source>PS&gt; [string]$array                 # Repeat the command 1 2 3                              # Spaces separate the elements</source>
          <target state="translated">PS &gt; [string] $array # 重複命令 1 2 3 # 空格個別項目</target>       </trans-unit>
        <trans-unit id="427" translate="yes" xml:space="preserve">
          <source>$OutputEncoding Determines the character encoding method that Windows PowerShell uses when it sends text to other applications.</source>
          <target state="translated">$OutputEncoding 決定的字元編碼的文字傳送到其他應用程式時，會使用 Windows PowerShell 的方法。</target>       </trans-unit>
        <trans-unit id="428" translate="yes" xml:space="preserve">
          <source>For example, if an application returns Unicode strings to Windows PowerShell, you might need to change the value to UnicodeEncoding to send the characters correctly.</source>
          <target state="translated">例如，如果應用程式至 Windows PowerShell 傳回 Unicode 字串，您可能需要的值變更為 UnicodeEncoding 傳送正確的字元。</target>       </trans-unit>
        <trans-unit id="429" translate="yes" xml:space="preserve">
          <source>Valid values: Objects derived from an Encoding class, such as ASCIIEncoding, SBCSCodePageEncoding, UTF7Encoding, UTF8Encoding, UTF32Encoding, and UnicodeEncoding.</source>
          <target state="translated">有效值︰ 從編碼類別，例如 ASCIIEncoding、 SBCSCodePageEncoding、 UTF7Encoding、 UTF8Encoding、 UTF32Encoding 和 UnicodeEncoding 衍生的物件。</target>       </trans-unit>
        <trans-unit id="430" translate="yes" xml:space="preserve">
          <source>Default: ASCIIEncoding object (System.Text.ASCIIEncoding)</source>
          <target state="translated">預設值︰ ASCIIEncoding 物件 (System.Text.ASCIIEncoding)</target>       </trans-unit>
        <trans-unit id="431" translate="yes" xml:space="preserve">
          <source>EXAMPLES</source>
          <target state="translated">範例</target>       </trans-unit>
        <trans-unit id="432" translate="yes" xml:space="preserve">
          <source>This example shows how to make the FINDSTR command in Windows work in Windows PowerShell on a computer that is localized for a language that uses Unicode characters, such as Chinese.</source>
          <target state="translated">這個範例示範如何讓 Windows 中的 FINDSTR 命令會使用 Unicode 字元，例如中文語言進行當地語系化的電腦上使用 Windows PowerShell 中。</target>       </trans-unit>
        <trans-unit id="433" translate="yes" xml:space="preserve">
          <source>The first command finds the value of $OutputEncoding.</source>
          <target state="translated">第一個命令會尋找 $OutputEncoding 的值。</target>       </trans-unit>
        <trans-unit id="434" translate="yes" xml:space="preserve">
          <source>Because the value is an encoding object, display only its EncodingName property.</source>
          <target state="translated">因為值是編碼物件，會顯示只有其 EncodingName 屬性。</target>       </trans-unit>
        <trans-unit id="435" translate="yes" xml:space="preserve">
          <source>PS&gt; $OutputEncoding.EncodingName  # Find the current value US-ASCII</source>
          <target state="translated">PS &gt; $OutputEncoding.EncodingName # 尋找 US-ASCII 的目前值</target>       </trans-unit>
        <trans-unit id="436" translate="yes" xml:space="preserve">
          <source>In this example, a FINDSTR command is used to search for two Chinese characters that are present in the Test.txt file.</source>
          <target state="translated">在此範例中，FINDSTR 命令用來搜尋存在於 Test.txt 檔案中的兩個中文字元。</target>       </trans-unit>
        <trans-unit id="437" translate="yes" xml:space="preserve">
          <source>When this FINDSTR command is run in the Windows Command Prompt (Cmd.exe), FINDSTR finds the characters in the text file.</source>
          <target state="translated">此 FINDSTR 命令執行時在 Windows 命令提示字元 (Cmd.exe)，FINDSTR 會尋找文字檔案中的字元。</target>       </trans-unit>
        <trans-unit id="438" translate="yes" xml:space="preserve">
          <source>However, when you run the same FINDSTR command in Windows PowerShell, the characters are not found because the Windows PowerShell sends them to FINDSTR in ASCII text, instead of in Unicode text.</source>
          <target state="translated">不過，當您在 Windows PowerShell 中執行相同的 FINDSTR 命令，會找不到字元因為 Windows PowerShell 將它們傳送到 FINDSTR ASCII 文字，而不是以 Unicode 文字。</target>       </trans-unit>
        <trans-unit id="439" translate="yes" xml:space="preserve">
          <source>PS&gt; findstr &lt;Unicode-characters&gt;  # Use findstr to search.</source>
          <target state="translated">PS &gt; findstr &lt; Unicode 字元 &gt; # 使用 findstr 搜尋。</target>       </trans-unit>
        <trans-unit id="440" translate="yes" xml:space="preserve">
          <source>PS&gt;                               # None found.</source>
          <target state="translated">PS &gt; # 找不到。</target>       </trans-unit>
        <trans-unit id="441" translate="yes" xml:space="preserve">
          <source>To make the command work in Windows PowerShell, set the value of $OutputEncoding to the value of the OutputEncoding property of the console, which is based on the locale selected for Windows.</source>
          <target state="translated">若要讓 Windows PowerShell 中運作的命令，設定的值 $OutputEncoding 主控台中，選取適用於 Windows 地區設定為基礎的 OutputEncoding 屬性的值。</target>       </trans-unit>
        <trans-unit id="442" translate="yes" xml:space="preserve">
          <source>Because OutputEncoding is a static property of the console, use double-colons (::) in the command.</source>
          <target state="translated">因為 OutputEncoding 是主控台的靜態屬性，請在命令中使用雙冒號 （:）。</target>       </trans-unit>
        <trans-unit id="443" translate="yes" xml:space="preserve">
          <source>PS&gt; $OutputEncoding = [console]::outputencoding PS&gt;                               # Set the value equal to the OutputEncoding property of the console.</source>
          <target state="translated">PS &gt; $OutputEncoding = [主控台]:: outputencoding PS &gt; # 將值設定為等於主控台的 OutputEncoding 屬性。</target>       </trans-unit>
        <trans-unit id="444" translate="yes" xml:space="preserve">
          <source>PS&gt; $OutputEncoding.EncodingName OEM United States Find the resulting value.</source>
          <target state="translated">PS &gt; $OutputEncoding.EncodingName OEM 美國境內尋找所產生的值。</target>       </trans-unit>
        <trans-unit id="445" translate="yes" xml:space="preserve">
          <source>As a result of this change, the FINDSTR command finds the characters.</source>
          <target state="translated">由於這項變更，FINDSTR 命令會尋找的字元。</target>       </trans-unit>
        <trans-unit id="446" translate="yes" xml:space="preserve">
          <source>PS&gt; findstr &lt;Unicode-characters&gt; test.txt:         &lt;Unicode-characters&gt;</source>
          <target state="translated">PS &gt; findstr &lt; Unicode 字元 &gt; test.txt: &lt; Unicode 字元 &gt;</target>       </trans-unit>
        <trans-unit id="447" translate="yes" xml:space="preserve">
          <source>Use findstr to search.</source>
          <target state="translated">使用 findstr 來搜尋。</target>       </trans-unit>
        <trans-unit id="448" translate="yes" xml:space="preserve">
          <source>It find the characters in the text file.</source>
          <target state="translated">它是文字檔案中尋找的字元。</target>       </trans-unit>
        <trans-unit id="449" translate="yes" xml:space="preserve">
          <source>$ProgressPreference Determines how Windows PowerShell responds to progress updates generated by a script, cmdlet or provider, such as the progress bars generated by the Write-Progress cmdlet.</source>
          <target state="translated">$ProgressPreference 決定 Windows PowerShell 如何回應指令碼，指令程式或提供者，例如 Write-progress 指令程式所產生的進度列所產生的進度更新。</target>       </trans-unit>
        <trans-unit id="450" translate="yes" xml:space="preserve">
          <source>The Write-Progress cmdlet creates progress bars that depict the status of a command.</source>
          <target state="translated">Write-progress cmdlet 會建立描述命令的狀態的進度列。</target>       </trans-unit>
        <trans-unit id="451" translate="yes" xml:space="preserve">
          <source>Valid values: Stop:               Does not display the progress bar.</source>
          <target state="translated">有效值︰ 停止︰ 不會顯示進度列。</target>       </trans-unit>
        <trans-unit id="452" translate="yes" xml:space="preserve">
          <source>Instead, it displays an error message and stops executing.</source>
          <target state="translated">相反地，它會顯示錯誤訊息，並停止執行。</target>       </trans-unit>
        <trans-unit id="453" translate="yes" xml:space="preserve">
          <source>Inquire:            Does not display the progress bar.</source>
          <target state="translated">詢問︰ 不會顯示進度列。</target>       </trans-unit>
        <trans-unit id="454" translate="yes" xml:space="preserve">
          <source>Prompts for permission to continue.</source>
          <target state="translated">提示使用者同意繼續進行。</target>       </trans-unit>
        <trans-unit id="455" translate="yes" xml:space="preserve">
          <source>If you reply with Y or A, it displays the progress bar.</source>
          <target state="translated">如果您回覆 Y 或 A，它會顯示進度列。</target>       </trans-unit>
        <trans-unit id="456" translate="yes" xml:space="preserve">
          <source>Continue:           Displays the progress bar and continues with (Default)           execution.</source>
          <target state="translated">繼續︰ 會顯示進度列，然後繼續執行 （預設值） 執行。</target>       </trans-unit>
        <trans-unit id="457" translate="yes" xml:space="preserve">
          <source>SilentlyContinue:   Executes the command, but does not display the progress bar.</source>
          <target state="translated">SilentlyContinue︰ 執行命令，但不會顯示進度列。</target>       </trans-unit>
        <trans-unit id="458" translate="yes" xml:space="preserve">
          <source>$PSEmailServer Specifies the default e-mail server that is used to send e-mail messages.</source>
          <target state="translated">$PSEmailServer 指定用來傳送電子郵件訊息的預設電子郵件伺服器。</target>       </trans-unit>
        <trans-unit id="459" translate="yes" xml:space="preserve">
          <source>This preference variable is used by cmdlets that send e-mail, such as the Send-MailMessage cmdlet.</source>
          <target state="translated">傳送電子郵件，例如 Send-mailmessage cmdlet 的 cmdlet 會使用此喜好設定變數。</target>       </trans-unit>
        <trans-unit id="460" translate="yes" xml:space="preserve">
          <source>$PSDefaultParameterValues Specifies default values for the parameters of cmdlets and advanced functions.</source>
          <target state="translated">$PSDefaultParameterValues 指定參數的預設值的 cmdlet 和進階函式。</target>       </trans-unit>
        <trans-unit id="461" translate="yes" xml:space="preserve">
          <source>The value of $PSDefaultParameterValues is a hash table where the key consists of the cmdlet name and parameter name separated by a colon (:) and the value is a custom default value that you specify.</source>
          <target state="translated">$PSDefaultParameterValues 的值是以冒號 （:） 分隔的雜湊表，其中包含的指令程式名稱和參數名稱索引鍵和值是您指定自訂的預設值。</target>       </trans-unit>
        <trans-unit id="462" translate="yes" xml:space="preserve">
          <source>This variable was introduced in Windows PowerShell 3.0</source>
          <target state="translated">此變數是在 Windows PowerShell 3.0 引進</target>       </trans-unit>
        <trans-unit id="463" translate="yes" xml:space="preserve">
          <source>For more information about this preference variable, see about_Parameters_Default_Values.</source>
          <target state="translated">如需有關此喜好設定變數的詳細資訊，請參閱 about_Parameters_Default_Values。</target>       </trans-unit>
        <trans-unit id="464" translate="yes" xml:space="preserve">
          <source>$PSModuleAutoloadingPreference Enables and disables automatic importing of modules in the session.</source>
          <target state="translated">$PSModuleAutoloadingPreference 啟用和停用自動匯入模組工作階段中。</target>       </trans-unit>
        <trans-unit id="465" translate="yes" xml:space="preserve">
          <source>"All" is the default.</source>
          <target state="translated">"All" 為預設值。</target>       </trans-unit>
        <trans-unit id="466" translate="yes" xml:space="preserve">
          <source>Regardless of the value of this variable, you can use the Import-Module cmdlet to import a module.</source>
          <target state="translated">不論這個變數的值，您可以使用 Import-module cmdlet 匯入模組。</target>       </trans-unit>
        <trans-unit id="467" translate="yes" xml:space="preserve">
          <source>Valid values are:</source>
          <target state="translated">有效值為：</target>       </trans-unit>
        <trans-unit id="468" translate="yes" xml:space="preserve">
          <source>All    Modules are imported automatically on first-use.</source>
          <target state="translated">所有模組會在首次使用自動匯都入。</target>       </trans-unit>
        <trans-unit id="469" translate="yes" xml:space="preserve">
          <source>To import a module, get (Get-Command) or use any command in the module.</source>
          <target state="translated">若要匯入模組時，取得 （Get 命令） 或使用模組中的任何命令。</target>       </trans-unit>
        <trans-unit id="470" translate="yes" xml:space="preserve">
          <source>ModuleQualified Modules are imported automatically only when a user uses the module-qualified name of a command in the module.</source>
          <target state="translated">ModuleQualified 模組是只有當使用者在模組中使用模組完整命令名稱時自動匯入。</target>       </trans-unit>
        <trans-unit id="471" translate="yes" xml:space="preserve">
          <source>For example, if the user types "MyModule\MyCommand", Windows PowerShell imports the MyModule module.</source>
          <target state="translated">例如，如果使用者輸入 「 MyModule\MyCommand 」，Windows PowerShell 模組匯入 MyModule。</target>       </trans-unit>
        <trans-unit id="472" translate="yes" xml:space="preserve">
          <source>None   Automatic importing of modules is disabled in the session.</source>
          <target state="translated">無自動匯入模組已停用工作階段中。</target>       </trans-unit>
        <trans-unit id="473" translate="yes" xml:space="preserve">
          <source>To import a module, use the Import-Module cmdlet.</source>
          <target state="translated">若要匯入模組，請使用 Import-module cmdlet。</target>       </trans-unit>
        <trans-unit id="474" translate="yes" xml:space="preserve">
          <source>For more information about automatic importing of modules, see about_Modules (http://go.microsoft.com/fwlink/?LinkID=144311).</source>
          <target state="translated">如需有關自動匯入模組的詳細資訊，請參閱 about_Modules (http://go.microsoft.com/fwlink/?LinkID=144311)。</target>       </trans-unit>
        <trans-unit id="475" translate="yes" xml:space="preserve">
          <source>$PSSessionApplicationName Specifies the default application name for a remote command that uses WS-Management technology.</source>
          <target state="translated">$PSSessionApplicationName 指定使用 WS 管理技術的遠端命令的預設應用程式名稱。</target>       </trans-unit>
        <trans-unit id="476" translate="yes" xml:space="preserve">
          <source>The system default application name is WSMAN, but you can use this preference variable to change the default.</source>
          <target state="translated">系統預設應用程式名稱是 WSMAN，但您可以使用此喜好設定變數來變更預設值。</target>       </trans-unit>
        <trans-unit id="477" translate="yes" xml:space="preserve">
          <source>The application name is the last node in a connection URI.</source>
          <target state="translated">應用程式名稱是在連線 URI 的最後一個節點。</target>       </trans-unit>
        <trans-unit id="478" translate="yes" xml:space="preserve">
          <source>For example, the application name in the following sample URI is WSMAN.</source>
          <target state="translated">例如，下列範例 URI 中的應用程式名稱是 WSMAN。</target>       </trans-unit>
        <trans-unit id="479" translate="yes" xml:space="preserve">
          <source>http://Server01:8080/WSMAN</source>
          <target state="translated">http://Server01:8080/WSMAN</target>       </trans-unit>
        <trans-unit id="480" translate="yes" xml:space="preserve">
          <source>The default application name is used when the remote command does not specify a connection URI or an application name.</source>
          <target state="translated">遠端命令未指定連線 URI 或應用程式名稱時，會使用預設應用程式名稱。</target>       </trans-unit>
        <trans-unit id="481" translate="yes" xml:space="preserve">
          <source>The WinRM service uses the application name to select a listener to service the connection request.</source>
          <target state="translated">WinRM 服務會使用應用程式名稱來選取要用來為連線要求提供服務的接聽程式。</target>       </trans-unit>
        <trans-unit id="482" translate="yes" xml:space="preserve">
          <source>The value of this parameter should match the value of the URLPrefix property of a listener on the remote computer.</source>
          <target state="translated">此參數的值應該符合遠端電腦上接聽程式之 URLPrefix 屬性的值。</target>       </trans-unit>
        <trans-unit id="483" translate="yes" xml:space="preserve">
          <source>To override the system default and the value of this variable, and select a different application name for a particular session, use the ConnectionURI or ApplicationName parameters of the New-PSSession, Enter-PSSession or Invoke-Command cmdlets.</source>
          <target state="translated">若要覆寫系統預設值，這個變數的值，並選取特定的工作階段的不同應用程式名稱，使用 ConnectionURI 或 ApplicationName New-pssession、 Enter-pssession 或 Invoke-command cmdlet 的參數。</target>       </trans-unit>
        <trans-unit id="484" translate="yes" xml:space="preserve">
          <source>This preference variable is set on the local computer, but it specifies a listener on the remote computer.</source>
          <target state="translated">此喜好設定變數設定的本機電腦上，但它會指定遠端電腦上的接聽程式。</target>       </trans-unit>
        <trans-unit id="485" translate="yes" xml:space="preserve">
          <source>If the application name that you specify does not exist on the remote computer, the command to establish the session fails.</source>
          <target state="translated">如果您指定的應用程式名稱在遠端電腦上不存在，命令以建立工作階段將會失敗。</target>       </trans-unit>
        <trans-unit id="486" translate="yes" xml:space="preserve">
          <source>$PSSessionConfigurationName Specifies the default session configuration that is used for PSSessions created in the current session.</source>
          <target state="translated">預設工作階段設定用於 Pssession $PSSessionConfigurationName 指定目前工作階段中建立。</target>       </trans-unit>
        <trans-unit id="487" translate="yes" xml:space="preserve">
          <source>This preference variable is set on the local computer, but it specifies a session configuration that is located on the remote computer.</source>
          <target state="translated">此喜好設定變數設定的本機電腦上，但它會指定工作階段設定，位在遠端電腦上。</target>       </trans-unit>
        <trans-unit id="488" translate="yes" xml:space="preserve">
          <source>The value of the $PSSessionConfigurationName variable is a fully qualified resource URI.</source>
          <target state="translated">$PSSessionConfigurationName 變數的值是完整的資源 URI。</target>       </trans-unit>
        <trans-unit id="489" translate="yes" xml:space="preserve">
          <source>The default value:</source>
          <target state="translated">預設值︰</target>       </trans-unit>
        <trans-unit id="490" translate="yes" xml:space="preserve">
          <source>http://schemas.microsoft.com/PowerShell/microsoft.PowerShell</source>
          <target state="translated">http://schemas.microsoft.com/PowerShell/microsoft.PowerShell</target>       </trans-unit>
        <trans-unit id="491" translate="yes" xml:space="preserve">
          <source>indicates the Microsoft.PowerShell session configuration on the remote computer.</source>
          <target state="translated">指出遠端電腦上的 Microsoft.PowerShell 工作階段設定。</target>       </trans-unit>
        <trans-unit id="492" translate="yes" xml:space="preserve">
          <source>If you specify only a configuration name, the following schema URI is prepended:</source>
          <target state="translated">如果您指定組態名稱，是前面加上下列架構 URI:</target>       </trans-unit>
        <trans-unit id="493" translate="yes" xml:space="preserve">
          <source>http://schemas.microsoft.com/PowerShell/</source>
          <target state="translated">http://schemas.microsoft.com/PowerShell/</target>       </trans-unit>
        <trans-unit id="494" translate="yes" xml:space="preserve">
          <source>You can override the default and select a different session configuration for a particular session by using the ConfigurationName parameter of the New-PSSession, Enter-PSSession or Invoke-Command cmdlets.</source>
          <target state="translated">您可以覆寫預設值，並使用 New-pssession、 Enter-pssession 或 Invoke-command cmdlet 的 ConfigurationName 參數來選取不同的工作階段設定特定的工作階段。</target>       </trans-unit>
        <trans-unit id="495" translate="yes" xml:space="preserve">
          <source>You can change the value of this variable at any time.</source>
          <target state="translated">您可以隨時變更此變數的值。</target>       </trans-unit>
        <trans-unit id="496" translate="yes" xml:space="preserve">
          <source>When you do, remember that the session configuration that you select must exist on the remote computer.</source>
          <target state="translated">當您這樣做時，請記住您所選取的工作階段設定必須存在於遠端電腦上。</target>       </trans-unit>
        <trans-unit id="497" translate="yes" xml:space="preserve">
          <source>If it does not, the command to create a session that uses the session configuration fails.</source>
          <target state="translated">如果不存在，來建立使用工作階段設定的工作階段的命令將會失敗。</target>       </trans-unit>
        <trans-unit id="498" translate="yes" xml:space="preserve">
          <source>This preference variable does not determine which local session configurations are used when remote users create a session that connects to this computer.</source>
          <target state="translated">此喜好設定變數不會判斷遠端使用者建立連線到此電腦的工作階段時使用的本機工作階段組態。</target>       </trans-unit>
        <trans-unit id="499" translate="yes" xml:space="preserve">
          <source>However, you can use the permissions for the local session configurations to determine which users may use them.</source>
          <target state="translated">不過，您可以使用本機工作階段設定的權限，以判斷哪些使用者可以使用它們。</target>       </trans-unit>
        <trans-unit id="500" translate="yes" xml:space="preserve">
          <source>$PSSessionOption Establishes the default values for advanced user options in a remote session.</source>
          <target state="translated">$PSSessionOption 建立的預設值為進階的使用者選項的遠端工作階段中。</target>       </trans-unit>
        <trans-unit id="501" translate="yes" xml:space="preserve">
          <source>These option preferences override the system default values for session options.</source>
          <target state="translated">這些選項喜好設定會覆寫工作階段選項的系統預設值。</target>       </trans-unit>
        <trans-unit id="502" translate="yes" xml:space="preserve">
          <source>The $PSSessionOption variable contains a PSSessionOption object (System.Management.Automation.Remoting.PSSessionObject).</source>
          <target state="translated">$PSSessionOption 變數包含 PSSessionOption 物件 (System.Management.Automation.Remoting.PSSessionObject)。</target>       </trans-unit>
        <trans-unit id="503" translate="yes" xml:space="preserve">
          <source>Each property of the object represents a session option.</source>
          <target state="translated">每個屬性物件，代表工作階段選項。</target>       </trans-unit>
        <trans-unit id="504" translate="yes" xml:space="preserve">
          <source>For example, the NoCompression property turns of data compression during the session.</source>
          <target state="translated">舉例來說，NoCompression 屬性會在工作階段期間的資料壓縮。</target>       </trans-unit>
        <trans-unit id="505" translate="yes" xml:space="preserve">
          <source>By default, the $PSSessionOption variable contains a PSSessionOption object with the default values for all options, as shown below.</source>
          <target state="translated">根據預設，$PSSessionOption 變數包含 PSSessionOption 物件使用的所有選項，預設值，如下所示。</target>       </trans-unit>
        <trans-unit id="506" translate="yes" xml:space="preserve">
          <source>MaximumConnectionRedirectionCount : 5 NoCompression                     : False NoMachineProfile                  : False ProxyAccessType                   : None ProxyAuthentication               : Negotiate ProxyCredential                   : SkipCACheck                       : False SkipCNCheck                       : False SkipRevocationCheck               : False OperationTimeout                  : 00:03:00 NoEncryption                      : False UseUTF16                          : False IncludePortInSPN                  : False OutputBufferingMode               : None Culture                           : UICulture                         : MaximumReceivedDataSizePerCommand : MaximumReceivedObjectSize         : 209715200 ApplicationArguments              : OpenTimeout                       : 00:03:00 CancelTimeout                     : 00:01:00 IdleTimeout                       : -00:00:00.0010000</source>
          <target state="translated">MaximumConnectionRedirectionCount: 5 NoCompression: False NoMachineProfile: False ProxyAccessType︰ 無 ProxyAuthentication︰ 交涉 ProxyCredential: SkipCACheck: False SkipCNCheck: False SkipRevocationCheck: False OperationTimeout: 00:03:00 Nocompression: False UseUTF16: False IncludePortInSPN: False OutputBufferingMode︰ 無文化特性︰ UICulture: MaximumReceivedDataSizePerCommand: MaximumReceivedObjectSize: 209715200 ApplicationArguments: OpenTimeout: CancelTimeout 00:03:00: 00:01:00 IdleTimeout:-00:00:00.0010000</target>       </trans-unit>
        <trans-unit id="507" translate="yes" xml:space="preserve">
          <source>For descriptions of these options, see the help topic for the New-PSSessionOption cmdlet.</source>
          <target state="translated">如需這些選項的描述，請參閱 New-pssessionoption cmdlet 說明主題。</target>       </trans-unit>
        <trans-unit id="508" translate="yes" xml:space="preserve">
          <source>To change the value of the $PSSessionOption preference variable, use the New-PSSessionOption cmdlet to create a PSSessionOption object with the option values you prefer.</source>
          <target state="translated">若要變更 $PSSessionOption 喜好設定變數的值，請使用 New-pssessionoption cmdlet 建立 PSSessionOption 物件，使用您偏好的選項值。</target>       </trans-unit>
        <trans-unit id="509" translate="yes" xml:space="preserve">
          <source>Save the output in a variable called $PSSessionOption.</source>
          <target state="translated">將輸出儲存在名為 $PSSessionOption。</target>       </trans-unit>
        <trans-unit id="510" translate="yes" xml:space="preserve">
          <source>For example,</source>
          <target state="translated">例如，</target>       </trans-unit>
        <trans-unit id="511" translate="yes" xml:space="preserve">
          <source>$PSSessionOption = New-PSSessionOption -NoCompression</source>
          <target state="translated">$PSSessionOption = 新 PSSessionOption NoCompression</target>       </trans-unit>
        <trans-unit id="512" translate="yes" xml:space="preserve">
          <source>To use the $PSSessionOption preference variable in every Windows PowerShell session, add a New-PSSessionOption command that creates the $PSSessionOption variable to your Windows PowerShell profile.</source>
          <target state="translated">若要在每個 Windows PowerShell 工作階段中使用 $PSSessionOption 喜好設定變數，可加入 New-pssessionoption 命令會建立您的 Windows PowerShell 設定檔的 $PSSessionOption 變數。</target>       </trans-unit>
        <trans-unit id="513" translate="yes" xml:space="preserve">
          <source>You can also set custom options for a particular remote session.</source>
          <target state="translated">您也可以設定特定的遠端工作階段的自訂選項。</target>       </trans-unit>
        <trans-unit id="514" translate="yes" xml:space="preserve">
          <source>The options that you set take precedence over the system defaults and the value of the $PSSessionOption preference variable.</source>
          <target state="translated">您所設定的選項優先於系統預設值和 $PSSessionOption 喜好設定變數的值。</target>       </trans-unit>
        <trans-unit id="515" translate="yes" xml:space="preserve">
          <source>To set custom session options, use the New-PSSessionOption cmdlet to create a PSSessionOption object.</source>
          <target state="translated">若要設定自訂工作階段選項，請使用 New-pssessionoption cmdlet 建立 PSSessionOption 物件。</target>       </trans-unit>
        <trans-unit id="516" translate="yes" xml:space="preserve">
          <source>Then, use the PSSessionOption object as the value of the SessionOption parameter in cmdlets that create a session, such as New-PSSession, Enter-PSSession, and Invoke-Command.</source>
          <target state="translated">然後，使用 PSSessionOption 物件做為在建立工作階段，例如 New-pssession、 Enter-pssession 和叫用命令的指令程式的 SessionOption 參數的值。</target>       </trans-unit>
        <trans-unit id="517" translate="yes" xml:space="preserve">
          <source>For more information about the New-PSSessionOption cmdlet, see the help topic for New-PSSessionOption.</source>
          <target state="translated">如需 New-pssessionoption cmdlet 的詳細資訊，請參閱 New-pssessionoption 的 [說明] 主題。</target>       </trans-unit>
        <trans-unit id="518" translate="yes" xml:space="preserve">
          <source>For more information about remote commands and sessions, see about_Remote and about_PSSessions.</source>
          <target state="translated">如需有關遠端命令和工作階段的詳細資訊，請參閱 about_Remote 和 about_PSSessions。</target>       </trans-unit>
        <trans-unit id="519" translate="yes" xml:space="preserve">
          <source>For more information about using a profile, see about_Profiles.</source>
          <target state="translated">如需有關如何使用設定檔的詳細資訊，請參閱 about_Profiles。</target>       </trans-unit>
        <trans-unit id="520" translate="yes" xml:space="preserve">
          <source>$VerbosePreference Determines how Windows PowerShell responds to verbose messages generated by a script, cmdlet or provider, such as the messages generated by the Write-Verbose cmdlet.</source>
          <target state="translated">$VerbosePreference 決定 Windows PowerShell 如何回應指令碼，指令程式或提供者，例如 Write-verbose 指令程式所產生的訊息所產生的詳細資訊訊息。</target>       </trans-unit>
        <trans-unit id="521" translate="yes" xml:space="preserve">
          <source>Typically, verbose messages describe the actions performed to execute a command.</source>
          <target state="translated">一般而言，詳細資訊的訊息會描述執行命令執行的動作。</target>       </trans-unit>
        <trans-unit id="522" translate="yes" xml:space="preserve">
          <source>By default, verbose messages are not displayed, but you can change this behavior by changing the value of $VerbosePreference.</source>
          <target state="translated">根據預設，不會顯示詳細訊息，但您可以變更此行為變更 $VerbosePreference 的值。</target>       </trans-unit>
        <trans-unit id="523" translate="yes" xml:space="preserve">
          <source>You can also use the Verbose common parameter of a cmdlet to display or hide the verbose messages for a specific command.</source>
          <target state="translated">您也可以使用 Verbose 一般參數的 cmdlet，以顯示或隱藏特定命令的詳細資訊的訊息。</target>       </trans-unit>
        <trans-unit id="524" translate="yes" xml:space="preserve">
          <source>For more information, type: "get-help about_commonparameters".</source>
          <target state="translated">如需詳細資訊，請輸入:"get-help about_commonparameters"。</target>       </trans-unit>
        <trans-unit id="525" translate="yes" xml:space="preserve">
          <source>Valid values: Stop:               Displays the verbose message and an error message and then stops executing.</source>
          <target state="translated">有效值︰ 停止︰ 顯示詳細訊息和錯誤訊息，並會停止執行。</target>       </trans-unit>
        <trans-unit id="526" translate="yes" xml:space="preserve">
          <source>Inquire:            Displays the verbose message and then displays a prompt that asks you whether you want to continue.</source>
          <target state="translated">詢問︰ 顯示詳細訊息，並顯示一個提示，詢問您是否要繼續。</target>       </trans-unit>
        <trans-unit id="527" translate="yes" xml:space="preserve">
          <source>Continue:           Displays the verbose message and then continues with execution.</source>
          <target state="translated">繼續︰ 顯示詳細訊息，然後再繼續執行執行。</target>       </trans-unit>
        <trans-unit id="528" translate="yes" xml:space="preserve">
          <source>SilentlyContinue:   Does not display the verbose message.</source>
          <target state="translated">SilentlyContinue︰ 不會顯示詳細訊息。</target>       </trans-unit>
        <trans-unit id="529" translate="yes" xml:space="preserve">
          <source>Continues executing.</source>
          <target state="translated">繼續執行。</target>       </trans-unit>
        <trans-unit id="530" translate="yes" xml:space="preserve">
          <source>(Default)</source>
          <target state="translated">(預設)</target>       </trans-unit>
        <trans-unit id="531" translate="yes" xml:space="preserve">
          <source>EXAMPLES</source>
          <target state="translated">範例</target>       </trans-unit>
        <trans-unit id="532" translate="yes" xml:space="preserve">
          <source>These examples show the effect of the different values of $VerbosePreference and the use of the Verbose common parameter to override the preference value.</source>
          <target state="translated">下列範例示範的 $VerbosePreference 不同的值，以及使用 Verbose 一般參數覆寫喜好設定的值的效果。</target>       </trans-unit>
        <trans-unit id="533" translate="yes" xml:space="preserve">
          <source>This example shows the effect of the SilentlyContinue value, which is the default.</source>
          <target state="translated">這個範例示範 SilentlyContinue 值，這是預設值的影響。</target>       </trans-unit>
        <trans-unit id="534" translate="yes" xml:space="preserve">
          <source>PS&gt; $VerbosePreference             # Find the current value.</source>
          <target state="translated">PS &gt; $VerbosePreference # 找出目前的值。</target>       </trans-unit>
        <trans-unit id="535" translate="yes" xml:space="preserve">
          <source>SilentlyContinue</source>
          <target state="translated">SilentlyContinue</target>       </trans-unit>
        <trans-unit id="536" translate="yes" xml:space="preserve">
          <source>PS&gt; Write-Verbose "Verbose message test."</source>
          <target state="translated">PS &gt; Write-verbose 「 詳細資訊訊息測試 」。</target>       </trans-unit>
        <trans-unit id="537" translate="yes" xml:space="preserve">
          <source>PS&gt;                                # Write a verbose message.</source>
          <target state="translated">PS &gt; # 撰寫的詳細資訊訊息。</target>       </trans-unit>
        <trans-unit id="538" translate="yes" xml:space="preserve">
          <source>Message is not displayed.</source>
          <target state="translated">不會顯示訊息。</target>       </trans-unit>
        <trans-unit id="539" translate="yes" xml:space="preserve">
          <source>PS&gt; Write-Verbose "Verbose message test."</source>
          <target state="translated">PS &gt; Write-verbose 「 詳細資訊訊息測試 」。</target>       </trans-unit>
        <trans-unit id="540" translate="yes" xml:space="preserve">
          <source>-verbose VERBOSE: Verbose message test.</source>
          <target state="translated">-詳細資訊的詳細資訊︰ 詳細訊息測試。</target>       </trans-unit>
        <trans-unit id="541" translate="yes" xml:space="preserve">
          <source>Use the Verbose parameter.</source>
          <target state="translated">請使用 Verbose 參數。</target>       </trans-unit>
        <trans-unit id="542" translate="yes" xml:space="preserve">
          <source>This example shows the effect of the Continue value.</source>
          <target state="translated">這個範例示範繼續值的影響。</target>       </trans-unit>
        <trans-unit id="543" translate="yes" xml:space="preserve">
          <source>PS&gt; $VerbosePreference = "Continue" Change the value to Continue.</source>
          <target state="translated">PS $VerbosePreference &gt; = [繼續] 變更值，以繼續。</target>       </trans-unit>
        <trans-unit id="544" translate="yes" xml:space="preserve">
          <source>PS&gt; Write-Verbose "Verbose message test."</source>
          <target state="translated">PS &gt; Write-verbose 「 詳細資訊訊息測試 」。</target>       </trans-unit>
        <trans-unit id="545" translate="yes" xml:space="preserve">
          <source>Write a verbose message.</source>
          <target state="translated">撰寫的詳細資訊訊息。</target>       </trans-unit>
        <trans-unit id="546" translate="yes" xml:space="preserve">
          <source>VERBOSE: Verbose message test.</source>
          <target state="translated">詳細資訊︰ 詳細訊息測試。</target>       </trans-unit>
        <trans-unit id="547" translate="yes" xml:space="preserve">
          <source>Message is displayed.</source>
          <target state="translated">會顯示訊息。</target>       </trans-unit>
        <trans-unit id="548" translate="yes" xml:space="preserve">
          <source>PS&gt; Write-Verbose "Verbose message test."</source>
          <target state="translated">PS &gt; Write-verbose 「 詳細資訊訊息測試 」。</target>       </trans-unit>
        <trans-unit id="549" translate="yes" xml:space="preserve">
          <source>-verbose:$false Use the Verbose parameter with a value of $false.</source>
          <target state="translated">-verbose: $false 使用 Verbose 參數值是 $false。</target>       </trans-unit>
        <trans-unit id="550" translate="yes" xml:space="preserve">
          <source>PS&gt; Message is not displayed.</source>
          <target state="translated">PS &gt; 不會顯示訊息。</target>       </trans-unit>
        <trans-unit id="551" translate="yes" xml:space="preserve">
          <source>This example shows the effect of the Stop value.</source>
          <target state="translated">這個範例將示範停駐點值的影響。</target>       </trans-unit>
        <trans-unit id="552" translate="yes" xml:space="preserve">
          <source>PS&gt; $VerbosePreference = "Stop" Change the value to Stop.</source>
          <target state="translated">PS &gt; $VerbosePreference = 「 停止 」 變更到停駐點的值。</target>       </trans-unit>
        <trans-unit id="553" translate="yes" xml:space="preserve">
          <source>PS&gt; Write-Verbose "Verbose message test."</source>
          <target state="translated">PS &gt; Write-verbose 「 詳細資訊訊息測試 」。</target>       </trans-unit>
        <trans-unit id="554" translate="yes" xml:space="preserve">
          <source>Write a verbose message.</source>
          <target state="translated">撰寫的詳細資訊訊息。</target>       </trans-unit>
        <trans-unit id="555" translate="yes" xml:space="preserve">
          <source>VERBOSE: Verbose message test.</source>
          <target state="translated">詳細資訊︰ 詳細訊息測試。</target>       </trans-unit>
        <trans-unit id="556" translate="yes" xml:space="preserve">
          <source>Write-Verbose : Command execution stopped because the shell variable "VerbosePreference" is set to Stop.</source>
          <target state="translated">寫入詳細資訊︰ 命令執行已停止因為 shell 變數"VerbosePreference"設定為 [停止。</target>       </trans-unit>
        <trans-unit id="557" translate="yes" xml:space="preserve">
          <source>At line:1 char:14</source>
          <target state="translated">在 [行︰ 1 char: 14</target>       </trans-unit>
        <trans-unit id="558" translate="yes" xml:space="preserve">
          <source>Write-Verbose  &lt;&lt;&lt;&lt; "Verbose message test."</source>
          <target state="translated">Write-verbose &lt;&lt;&lt;&lt; 「 詳細資訊訊息測試 」。</target>       </trans-unit>
        <trans-unit id="559" translate="yes" xml:space="preserve">
          <source>PS&gt; Write-Verbose "Verbose message test."</source>
          <target state="translated">PS &gt; Write-verbose 「 詳細資訊訊息測試 」。</target>       </trans-unit>
        <trans-unit id="560" translate="yes" xml:space="preserve">
          <source>-verbose:$false Use the Verbose parameter with a value of $false PS&gt; Message is not displayed.</source>
          <target state="translated">-verbose: $false 使用 Verbose 參數值是 $false PS &gt; 不會顯示訊息。</target>       </trans-unit>
        <trans-unit id="561" translate="yes" xml:space="preserve">
          <source>This example shows the effect of the Inquire value.</source>
          <target state="translated">這個範例示範 Inquire 值的影響。</target>       </trans-unit>
        <trans-unit id="562" translate="yes" xml:space="preserve">
          <source>PS&gt; $VerbosePreference = "Inquire" Change the value to Inquire.</source>
          <target state="translated">PS &gt; $VerbosePreference ="Inquire"變更為 Inquire 的值。</target>       </trans-unit>
        <trans-unit id="563" translate="yes" xml:space="preserve">
          <source>PS&gt; Write-Verbose "Verbose message test."</source>
          <target state="translated">PS &gt; Write-verbose 「 詳細資訊訊息測試 」。</target>       </trans-unit>
        <trans-unit id="564" translate="yes" xml:space="preserve">
          <source>VERBOSE: Verbose message test.</source>
          <target state="translated">詳細資訊︰ 詳細訊息測試。</target>       </trans-unit>
        <trans-unit id="565" translate="yes" xml:space="preserve">
          <source>Write a verbose message.</source>
          <target state="translated">撰寫的詳細資訊訊息。</target>       </trans-unit>
        <trans-unit id="566" translate="yes" xml:space="preserve">
          <source>Confirm Continue with this operation?</source>
          <target state="translated">請確認繼續進行這項作業嗎？</target>       </trans-unit>
        <trans-unit id="567" translate="yes" xml:space="preserve">
          <source>[Y] Yes  [A] Yes to All  [H] Halt Command  [S] Suspend  [?] Help (default is "Y"): y PS&gt;</source>
          <target state="translated">[Y] 是 [A] 的 [是]，以所有 [H] 停止命令 [S] 暫停 [？]（預設值為"Y"） 的說明︰ y PS &gt;</target>       </trans-unit>
        <trans-unit id="568" translate="yes" xml:space="preserve">
          <source>PS&gt; Write-Verbose "Verbose message test."</source>
          <target state="translated">PS &gt; Write-verbose 「 詳細資訊訊息測試 」。</target>       </trans-unit>
        <trans-unit id="569" translate="yes" xml:space="preserve">
          <source>-verbose:$false Use the Verbose parameter.</source>
          <target state="translated">-verbose: $false 使用 Verbose 參數。</target>       </trans-unit>
        <trans-unit id="570" translate="yes" xml:space="preserve">
          <source>PS&gt; Message is not displayed.</source>
          <target state="translated">PS &gt; 不會顯示訊息。</target>       </trans-unit>
        <trans-unit id="571" translate="yes" xml:space="preserve">
          <source>$WarningPreference Determines how Windows PowerShell responds to warning messages generated by a script, cmdlet or provider, such as the messages generated by the Write-Warning cmdlet.</source>
          <target state="translated">$WarningPreference 決定 Windows PowerShell 指令碼，指令程式或提供者，例如 Write-warning cmdlet 所產生的訊息所產生的警告訊息的回應方式。</target>       </trans-unit>
        <trans-unit id="572" translate="yes" xml:space="preserve">
          <source>By default, warning messages are displayed and execution continues, but you can change this behavior by changing the value of $WarningPreference.</source>
          <target state="translated">根據預設，會顯示警告訊息會繼續執行，而您可以變更此行為變更 $WarningPreference 值。</target>       </trans-unit>
        <trans-unit id="573" translate="yes" xml:space="preserve">
          <source>You can also use the WarningAction common parameter of a cmdlet to determine how Windows PowerShell responds to warnings from a particular command.</source>
          <target state="translated">您也可以使用 WarningAction 一般參數，指令程式來判斷 Windows PowerShell 如何回應警告從特定的命令。</target>       </trans-unit>
        <trans-unit id="574" translate="yes" xml:space="preserve">
          <source>For more information, type: "get-help about_commonparameters".</source>
          <target state="translated">如需詳細資訊，請輸入:"get-help about_commonparameters"。</target>       </trans-unit>
        <trans-unit id="575" translate="yes" xml:space="preserve">
          <source>Valid values: Stop:               Displays the warning message and an error message and then stops executing.</source>
          <target state="translated">有效值︰ 停止︰ 顯示警告訊息和錯誤訊息，並會停止執行。</target>       </trans-unit>
        <trans-unit id="576" translate="yes" xml:space="preserve">
          <source>Inquire:            Displays the warning message and then prompts for permission to continue.</source>
          <target state="translated">詢問︰ 顯示警告訊息，然後提示同意繼續進行。</target>       </trans-unit>
        <trans-unit id="577" translate="yes" xml:space="preserve">
          <source>Continue:           Displays the warning message and then (Default)           continues executing.</source>
          <target state="translated">繼續︰ 會顯示警告訊息和 （預設值） 會繼續執行。</target>       </trans-unit>
        <trans-unit id="578" translate="yes" xml:space="preserve">
          <source>SilentlyContinue:   Does not display the warning message.</source>
          <target state="translated">SilentlyContinue︰ 不會顯示警告訊息。</target>       </trans-unit>
        <trans-unit id="579" translate="yes" xml:space="preserve">
          <source>Continues executing.</source>
          <target state="translated">繼續執行。</target>       </trans-unit>
        <trans-unit id="580" translate="yes" xml:space="preserve">
          <source>EXAMPLES</source>
          <target state="translated">範例</target>       </trans-unit>
        <trans-unit id="581" translate="yes" xml:space="preserve">
          <source>These examples show the effect of the different values of $WarningPreference and the use of the WarningAction common parameter to override the preference value.</source>
          <target state="translated">下列範例示範不同 $WarningPreference 值和 WarningAction 一般參數覆寫喜好設定的值使用的效果。</target>       </trans-unit>
        <trans-unit id="582" translate="yes" xml:space="preserve">
          <source>This example shows the effect of the Continue value, which is the default.</source>
          <target state="translated">這個範例示範繼續值，這是預設值的影響。</target>       </trans-unit>
        <trans-unit id="583" translate="yes" xml:space="preserve">
          <source>PS&gt; $WarningPreference    # Find the current value.</source>
          <target state="translated">PS &gt; $WarningPreference # 找出目前的值。</target>       </trans-unit>
        <trans-unit id="584" translate="yes" xml:space="preserve">
          <source>Continue</source>
          <target state="translated">繼續</target>       </trans-unit>
        <trans-unit id="585" translate="yes" xml:space="preserve">
          <source>Write a warning message.</source>
          <target state="translated">寫入一則警告訊息。</target>       </trans-unit>
        <trans-unit id="586" translate="yes" xml:space="preserve">
          <source>PS&gt; Write-Warning "This action can delete data."</source>
          <target state="translated">PS &gt; Write-warning 「 這個動作可刪除資料 」。</target>       </trans-unit>
        <trans-unit id="587" translate="yes" xml:space="preserve">
          <source>WARNING: This action can delete data.</source>
          <target state="translated">警告︰ 這個動作可刪除資料。</target>       </trans-unit>
        <trans-unit id="588" translate="yes" xml:space="preserve">
          <source>Use the WarningAction parameter to suppress the warning for this command PS&gt; Write-Warning "This action can delete data."</source>
          <target state="translated">使用 WarningAction 參數來隱藏此命令 PS 的警告 &gt; Write-warning 「 這個動作可刪除資料 」。</target>       </trans-unit>
        <trans-unit id="589" translate="yes" xml:space="preserve">
          <source>-warningaction silentlycontinue</source>
          <target state="translated">-warningaction silentlycontinue</target>       </trans-unit>
        <trans-unit id="590" translate="yes" xml:space="preserve">
          <source>This example shows the effect of the SilentlyContinue value.</source>
          <target state="translated">這個範例示範 SilentlyContinue 值的影響。</target>       </trans-unit>
        <trans-unit id="591" translate="yes" xml:space="preserve">
          <source>PS&gt; $WarningPreference = "SilentlyContinue" Change the value to SilentlyContinue.</source>
          <target state="translated">PS &gt; $WarningPreference ="SilentlyContinue"變更為 SilentlyContinue 的值。</target>       </trans-unit>
        <trans-unit id="592" translate="yes" xml:space="preserve">
          <source>PS&gt; Write-Warning "This action can delete data."</source>
          <target state="translated">PS &gt; Write-warning 「 這個動作可刪除資料 」。</target>       </trans-unit>
        <trans-unit id="593" translate="yes" xml:space="preserve">
          <source>PS&gt;                        # Write a warning message.</source>
          <target state="translated">PS &gt; # 寫入一則警告訊息。</target>       </trans-unit>
        <trans-unit id="594" translate="yes" xml:space="preserve">
          <source>PS&gt; Write-Warning "This action can delete data."</source>
          <target state="translated">PS &gt; Write-warning 「 這個動作可刪除資料 」。</target>       </trans-unit>
        <trans-unit id="595" translate="yes" xml:space="preserve">
          <source>-warningaction stop Use the WarningAction parameter to stop processing when this command generates a warning.</source>
          <target state="translated">-warningaction 停止使用 WarningAction 參數來停止處理這個命令會產生警告。</target>       </trans-unit>
        <trans-unit id="596" translate="yes" xml:space="preserve">
          <source>WARNING: This action can delete data.</source>
          <target state="translated">警告︰ 這個動作可刪除資料。</target>       </trans-unit>
        <trans-unit id="597" translate="yes" xml:space="preserve">
          <source>Write-Warning : Command execution stopped because the shell variable "WarningPreference" is set to Stop.</source>
          <target state="translated">寫入警告︰ 命令執行已停止因為 shell 變數"WarningPreference"設定為 [停止。</target>       </trans-unit>
        <trans-unit id="598" translate="yes" xml:space="preserve">
          <source>At line:1 char:14</source>
          <target state="translated">在 [行︰ 1 char: 14</target>       </trans-unit>
        <trans-unit id="599" translate="yes" xml:space="preserve">
          <source>Write-Warning &lt;&lt;&lt;&lt;  "This action can delete data."</source>
          <target state="translated">寫入警告 &lt;&lt;&lt;&lt; 「 這個動作可刪除資料 」。</target>       </trans-unit>
        <trans-unit id="600" translate="yes" xml:space="preserve">
          <source>-warningaction stop</source>
          <target state="translated">-warningaction 停駐點</target>       </trans-unit>
        <trans-unit id="601" translate="yes" xml:space="preserve">
          <source>This example shows the effect of the Inquire value.</source>
          <target state="translated">這個範例示範 Inquire 值的影響。</target>       </trans-unit>
        <trans-unit id="602" translate="yes" xml:space="preserve">
          <source>PS&gt; $WarningPreference = "Inquire" Change the value to Inquire.</source>
          <target state="translated">PS &gt; $WarningPreference ="Inquire"變更為 Inquire 的值。</target>       </trans-unit>
        <trans-unit id="603" translate="yes" xml:space="preserve">
          <source>PS&gt; Write-Warning "This action can delete data."</source>
          <target state="translated">PS &gt; Write-warning 「 這個動作可刪除資料 」。</target>       </trans-unit>
        <trans-unit id="604" translate="yes" xml:space="preserve">
          <source>Write a warning message.</source>
          <target state="translated">寫入一則警告訊息。</target>       </trans-unit>
        <trans-unit id="605" translate="yes" xml:space="preserve">
          <source>WARNING: This action can delete data.</source>
          <target state="translated">警告︰ 這個動作可刪除資料。</target>       </trans-unit>
        <trans-unit id="606" translate="yes" xml:space="preserve">
          <source>Confirm Continue with this operation?</source>
          <target state="translated">請確認繼續進行這項作業嗎？</target>       </trans-unit>
        <trans-unit id="607" translate="yes" xml:space="preserve">
          <source>[Y] Yes  [A] Yes to All  [H] Halt Command  [S] Suspend  [?] Help (default is "Y"): y PS&gt;</source>
          <target state="translated">[Y] 是 [A] 的 [是]，以所有 [H] 停止命令 [S] 暫停 [？]（預設值為"Y"） 的說明︰ y PS &gt;</target>       </trans-unit>
        <trans-unit id="608" translate="yes" xml:space="preserve">
          <source>PS&gt; Write-Warning "This action can delete data."</source>
          <target state="translated">PS &gt; Write-warning 「 這個動作可刪除資料 」。</target>       </trans-unit>
        <trans-unit id="609" translate="yes" xml:space="preserve">
          <source>-warningaction silentlycontinue PS&gt;                         # Use the WarningAction parameter to change the response to a warning for the current command.</source>
          <target state="translated">-warningaction silentlycontinue PS &gt; # 使用 WarningAction 參數變更為警告的目前命令的回應。</target>       </trans-unit>
        <trans-unit id="610" translate="yes" xml:space="preserve">
          <source>This example shows the effect of the Stop value.</source>
          <target state="translated">這個範例將示範停駐點值的影響。</target>       </trans-unit>
        <trans-unit id="611" translate="yes" xml:space="preserve">
          <source>PS&gt; $WarningPreference = "Stop" Change the value to Stop.</source>
          <target state="translated">PS &gt; $WarningPreference = 「 停止 」 變更到停駐點的值。</target>       </trans-unit>
        <trans-unit id="612" translate="yes" xml:space="preserve">
          <source>PS&gt; Write-Warning "This action can delete data."</source>
          <target state="translated">PS &gt; Write-warning 「 這個動作可刪除資料 」。</target>       </trans-unit>
        <trans-unit id="613" translate="yes" xml:space="preserve">
          <source>Write a warning message.</source>
          <target state="translated">寫入一則警告訊息。</target>       </trans-unit>
        <trans-unit id="614" translate="yes" xml:space="preserve">
          <source>WARNING: This action can delete data.</source>
          <target state="translated">警告︰ 這個動作可刪除資料。</target>       </trans-unit>
        <trans-unit id="615" translate="yes" xml:space="preserve">
          <source>Write-Warning : Command execution stopped because the shell variable "WarningPreference" is set to Stop.</source>
          <target state="translated">寫入警告︰ 命令執行已停止因為 shell 變數"WarningPreference"設定為 [停止。</target>       </trans-unit>
        <trans-unit id="616" translate="yes" xml:space="preserve">
          <source>At line:1 char:14</source>
          <target state="translated">在 [行︰ 1 char: 14</target>       </trans-unit>
        <trans-unit id="617" translate="yes" xml:space="preserve">
          <source>Write-Warning  &lt;&lt;&lt;&lt; "This action can delete data."</source>
          <target state="translated">寫入警告 &lt;&lt;&lt;&lt; 「 這個動作可刪除資料 」。</target>       </trans-unit>
        <trans-unit id="618" translate="yes" xml:space="preserve">
          <source>PS&gt; Write-Warning "This action can delete data."</source>
          <target state="translated">PS &gt; Write-warning 「 這個動作可刪除資料 」。</target>       </trans-unit>
        <trans-unit id="619" translate="yes" xml:space="preserve">
          <source>-warningaction inquire WARNING: This action can delete data.</source>
          <target state="translated">-warningaction 看看是否有警告︰ 這個動作可刪除的資料。</target>       </trans-unit>
        <trans-unit id="620" translate="yes" xml:space="preserve">
          <source>Confirm Continue with this operation?</source>
          <target state="translated">請確認繼續進行這項作業嗎？</target>       </trans-unit>
        <trans-unit id="621" translate="yes" xml:space="preserve">
          <source>[Y] Yes  [A] Yes to All  [H] Halt Command  [S] Suspend  [?] Help (default is "Y"): Use the WarningAction parameter to change the response to a warning for the current command.</source>
          <target state="translated">[Y] 是 [A] 的 [是]，以所有 [H] 停止命令 [S] 暫停 [？]（預設值為"Y"） 的說明︰ 使用 WarningAction 參數變更為警告的目前命令的回應。</target>       </trans-unit>
        <trans-unit id="622" translate="yes" xml:space="preserve">
          <source>$WhatIfPreference Determines whether WhatIf is automatically enabled for every command that supports it.</source>
          <target state="translated">$WhatIfPreference 決定 WhatIf 會自動啟用為支援它的每個命令。</target>       </trans-unit>
        <trans-unit id="623" translate="yes" xml:space="preserve">
          <source>When WhatIf is enabled, the cmdlet reports the expected effect of the command, but does not execute the command.</source>
          <target state="translated">WhatIf 啟用時，此指令程式報告的命令，預期的效果，但是不會執行命令。</target>       </trans-unit>
        <trans-unit id="624" translate="yes" xml:space="preserve">
          <source>Valid values: 0:                  WhatIf is not automatically enabled.</source>
          <target state="translated">有效值︰ 0: WhatIf 不會自動啟用。</target>       </trans-unit>
        <trans-unit id="625" translate="yes" xml:space="preserve">
          <source>To (Default)           enable it manually, use the WhatIf parameter of the command.</source>
          <target state="translated">若要啟用 （預設值） 它以手動方式，使用 WhatIf 參數的命令。</target>       </trans-unit>
        <trans-unit id="626" translate="yes" xml:space="preserve">
          <source>1:                  WhatIf is automatically enabled on any command that supports it.</source>
          <target state="translated">1: WhatIf 會自動啟用任何支援的命令。</target>       </trans-unit>
        <trans-unit id="627" translate="yes" xml:space="preserve">
          <source>Users can use the WhatIf command with a value of False to disable it manually (WhatIf:$false).</source>
          <target state="translated">使用者可以使用值為 False WhatIf 命令來手動將它停用 (WhatIf: $false)。</target>       </trans-unit>
        <trans-unit id="628" translate="yes" xml:space="preserve">
          <source>DETAILED EXPLANATION</source>
          <target state="translated">詳細的說明</target>       </trans-unit>
        <trans-unit id="629" translate="yes" xml:space="preserve">
          <source>When a cmdlet supports WhatIf, the cmdlet reports the expected effect of the command, instead of executing the command.</source>
          <target state="translated">當 cmdlet 支援 WhatIf 時，cmdlet 會報告預期的命令，而不是執行命令的效果。</target>       </trans-unit>
        <trans-unit id="630" translate="yes" xml:space="preserve">
          <source>For example, instead of deleting the test.txt file in response to a Remove-Item command, Windows PowerShell reports what it would delete.</source>
          <target state="translated">例如，而不是刪除 test.txt 檔案中移除項目命令回應，Windows PowerShell 報告就會刪除。</target>       </trans-unit>
        <trans-unit id="631" translate="yes" xml:space="preserve">
          <source>A subsequent Get-Childitem command confirms that the file was not deleted.</source>
          <target state="translated">後續的 Get-childitem 命令會確認檔案未刪除。</target>       </trans-unit>
        <trans-unit id="632" translate="yes" xml:space="preserve">
          <source>PS&gt; remove-item test.txt What if: Performing operation "Remove-Item" on Target "Item: C:\test.txt PS&gt; get-childitem test.txt</source>
          <target state="translated">PS &gt; 移除項目 test.txt 要是︰ 目標上執行 「 移除項目 」 作業 」 項目︰ C:\test.txt PS &gt;-get-childitem test.txt</target>       </trans-unit>
        <trans-unit id="633" translate="yes" xml:space="preserve">
          <source>Directory: Microsoft.PowerShell.Core\FileSystem::C:</source>
          <target state="translated">目錄︰ Microsoft.PowerShell.Core\FileSystem::C:</target>       </trans-unit>
        <trans-unit id="634" translate="yes" xml:space="preserve">
          <source>Mode                LastWriteTime     Length     Name</source>
          <target state="translated">模式 LastWriteTime 長度名稱</target>       </trans-unit>
        <trans-unit id="635" translate="yes" xml:space="preserve">
          <source>-a---         7/29/2006   7:15 PM         84     test.txt</source>
          <target state="translated">----7/29/2006年 7:15 PM 84 test.txt</target>       </trans-unit>
        <trans-unit id="636" translate="yes" xml:space="preserve">
          <source>EXAMPLES</source>
          <target state="translated">範例</target>       </trans-unit>
        <trans-unit id="637" translate="yes" xml:space="preserve">
          <source>These examples show the effect of the different values of $WhatIfPreference.</source>
          <target state="translated">下列範例示範 $WhatIfPreference 不同值的影響。</target>       </trans-unit>
        <trans-unit id="638" translate="yes" xml:space="preserve">
          <source>They also show how to use the WhatIf cmdlet parameter to override the preference value for a specific command.</source>
          <target state="translated">它們也會顯示如何使用 WhatIf cmdlet 參數來覆寫特定命令的喜好設定。</target>       </trans-unit>
        <trans-unit id="639" translate="yes" xml:space="preserve">
          <source>This example shows the effect of the 0 (not enabled) value, which is the default.</source>
          <target state="translated">這個範例會顯示 0 （未啟用） 值，這是預設的效果。</target>       </trans-unit>
        <trans-unit id="640" translate="yes" xml:space="preserve">
          <source>PS&gt; $whatifpreference 0                         # Check the current value.</source>
          <target state="translated">PS &gt; $whatifpreference 0 # 檢查目前的值。</target>       </trans-unit>
        <trans-unit id="641" translate="yes" xml:space="preserve">
          <source>PS&gt; get-childitem test.txt | format-list FullName FullName : C:\test.txt Verify that the file exists.</source>
          <target state="translated">PS &gt;-get-childitem test.txt |格式清單 FullName FullName: C:\test.txt 確認檔案存在。</target>       </trans-unit>
        <trans-unit id="642" translate="yes" xml:space="preserve">
          <source>PS&gt; remove-item test.txt PS&gt;                       # Delete the file.</source>
          <target state="translated">PS &gt; 移除項目 test.txt PS &gt; # 刪除檔案。</target>       </trans-unit>
        <trans-unit id="643" translate="yes" xml:space="preserve">
          <source>PS&gt; get-childitem test.txt | format-list -property FullName Verify that the file is deleted.</source>
          <target state="translated">PS &gt;-get-childitem test.txt |格式清單-FullName 確認此檔案被刪除的屬性。</target>       </trans-unit>
        <trans-unit id="644" translate="yes" xml:space="preserve">
          <source>Get-ChildItem : Cannot find path 'C:\test.txt' because it does not exist.</source>
          <target state="translated">Get-childitem︰ 在不存在，因為找不到路徑 'C:\test.txt'。</target>       </trans-unit>
        <trans-unit id="645" translate="yes" xml:space="preserve">
          <source>At line:1 char:14</source>
          <target state="translated">在 [行︰ 1 char: 14</target>       </trans-unit>
        <trans-unit id="646" translate="yes" xml:space="preserve">
          <source>get-childitem  &lt;&lt;&lt;&lt; test.txt | format-list fullname</source>
          <target state="translated">-get-childitem &lt;&lt;&lt;&lt; test.txt |格式清單 fullname</target>       </trans-unit>
        <trans-unit id="647" translate="yes" xml:space="preserve">
          <source>This example shows the effect of using the WhatIf parameter when the value of $WhatIfPreference is 0.</source>
          <target state="translated">這個範例示範 $WhatIfPreference 值為 0 時，使用 WhatIf 參數的效果。</target>       </trans-unit>
        <trans-unit id="648" translate="yes" xml:space="preserve">
          <source>PS&gt; get-childitem test2.txt | format-list -property FullName FullName : C:\test2.txt Verify that the file exists.</source>
          <target state="translated">PS &gt;-get-childitem test2.txt |格式清單-屬性 FullName FullName: C:\test2.txt 確認檔案存在。</target>       </trans-unit>
        <trans-unit id="649" translate="yes" xml:space="preserve">
          <source>PS&gt; remove-item test2.txt -whatif What if: Performing operation "Remove File" on Target "C:\test2.txt".</source>
          <target state="translated">PS &gt; 移除項目 test2.txt-whatif 要是︰ 執行作業目標 「 C:\test2.txt 」 上的 &lt; 移除檔案 &gt;。</target>       </trans-unit>
        <trans-unit id="650" translate="yes" xml:space="preserve">
          <source>Use the WhatIf parameter</source>
          <target state="translated">使用 WhatIf 參數</target>       </trans-unit>
        <trans-unit id="651" translate="yes" xml:space="preserve">
          <source>PS&gt; get-childitem test2.txt | format-list -property FullName FullName : C:\test2.txt Verify that the file was not deleted</source>
          <target state="translated">PS &gt;-get-childitem test2.txt |格式清單-屬性 FullName FullName: C:\test2.txt 確認檔案未刪除</target>       </trans-unit>
        <trans-unit id="652" translate="yes" xml:space="preserve">
          <source>This example shows the effect of the 1 (WhatIf enabled) value.</source>
          <target state="translated">此範例顯示 1 (啟用 WhatIf) 值的影響。</target>       </trans-unit>
        <trans-unit id="653" translate="yes" xml:space="preserve">
          <source>When you use Remove-Item to delete a cmdlet, Remove-Item displays the path to the file that it would delete, but it does not delete the file.</source>
          <target state="translated">當您使用 Remove-item 來刪除指令程式時，移除項目會顯示將刪除的檔案的路徑，但不會刪除檔案。</target>       </trans-unit>
        <trans-unit id="654" translate="yes" xml:space="preserve">
          <source>PS&gt; $whatifpreference = 1 PS&gt; $whatifpreference 1                        # Change the value.</source>
          <target state="translated">PS &gt; $whatifpreference = 1 PS &gt; $whatifpreference 1 # 變更值。</target>       </trans-unit>
        <trans-unit id="655" translate="yes" xml:space="preserve">
          <source>PS&gt; remove-item test.txt What if: Performing operation "Remove File" on Target "C:\test.txt".</source>
          <target state="translated">PS &gt; 移除項目 test.txt 要是︰ 執行作業目標 「 C:\test.txt 」 上的 &lt; 移除檔案 &gt;。</target>       </trans-unit>
        <trans-unit id="656" translate="yes" xml:space="preserve">
          <source>Try to delete a file.</source>
          <target state="translated">嘗試刪除檔案。</target>       </trans-unit>
        <trans-unit id="657" translate="yes" xml:space="preserve">
          <source>PS&gt; get-childitem test.txt | format-list FullName FullName : C:\test.txt Verify that the file exists.</source>
          <target state="translated">PS &gt;-get-childitem test.txt |格式清單 FullName FullName: C:\test.txt 確認檔案存在。</target>       </trans-unit>
        <trans-unit id="658" translate="yes" xml:space="preserve">
          <source>This example shows how to delete a file when the value of $WhatIfPreference is 1.</source>
          <target state="translated">這個範例示範如何刪除檔案時 $WhatIfPreference 值為 1。</target>       </trans-unit>
        <trans-unit id="659" translate="yes" xml:space="preserve">
          <source>It uses the WhatIf parameter with a value of $false.</source>
          <target state="translated">它會使用 WhatIf 參數值是 $false。</target>       </trans-unit>
        <trans-unit id="660" translate="yes" xml:space="preserve">
          <source>PS&gt; remove-item test.txt -whatif:$false Use the WhatIf parameter with $false.</source>
          <target state="translated">PS &gt; 移除項目 test.txt-whatif: $false $false 搭配使用 WhatIf 參數。</target>       </trans-unit>
        <trans-unit id="661" translate="yes" xml:space="preserve">
          <source>This example demonstrates that some cmdlets support WhatIf behavior and others do not.</source>
          <target state="translated">這個範例會示範，有些 cmdlet 支援 WhatIf 行為，而有些則不用。</target>       </trans-unit>
        <trans-unit id="662" translate="yes" xml:space="preserve">
          <source>In this example, in which the value of $WhatIfPreference is 1 (enabled), a Get-Process command, which does not support WhatIf, is executed, but a Stop-Process command performs the WhatIf behavior.</source>
          <target state="translated">在此範例中，其中的 $WhatIfPreference 值是 1 （啟用），Get-process 命令，不支援 WhatIf，會執行，但停止處理命令會執行 WhatIf 行為。</target>       </trans-unit>
        <trans-unit id="663" translate="yes" xml:space="preserve">
          <source>You can override the WhatIf behavior of the Stop-Process command by using the WhatIf parameter with a value of $false.</source>
          <target state="translated">您可以使用 WhatIf 參數值是 $false 覆寫停止處理命令的 WhatIf 行為。</target>       </trans-unit>
        <trans-unit id="664" translate="yes" xml:space="preserve">
          <source>PS&gt; $whatifpreference = 1 Change the value to 1.</source>
          <target state="translated">PS &gt; $whatifpreference = 1 變更為 1 的值。</target>       </trans-unit>
        <trans-unit id="665" translate="yes" xml:space="preserve">
          <source>PS&gt; get-process winword A Get-Process command completes.</source>
          <target state="translated">PS &gt; 取得處理序 winword Get-process 命令完成。</target>       </trans-unit>
        <trans-unit id="666" translate="yes" xml:space="preserve">
          <source>Handles  NPM(K)    PM(K)      WS(K) VM(M)   CPU(s)     Id ProcessName</source>
          <target state="translated">處理 NPM(K) PM(K) WS(K) VM(M) CPU 識別碼 ProcessName</target>       </trans-unit>
        <trans-unit id="667" translate="yes" xml:space="preserve">
          <source>234       8     6324      15060   154     0.36   2312 WINWORD</source>
          <target state="translated">234 8 6324 15060 154 0.36 2312 WINWORD</target>       </trans-unit>
        <trans-unit id="668" translate="yes" xml:space="preserve">
          <source>PS&gt; stop-process -name winword What if: Performing operation "Stop-Process" on Target "WINWORD (2312)".</source>
          <target state="translated">PS &gt; 停止處理序-如果名稱 winword︰ 目標 」 WINWORD (2312) 」 上執行運算 「 停止程序 」。</target>       </trans-unit>
        <trans-unit id="669" translate="yes" xml:space="preserve">
          <source>A Stop-Process command uses WhatIf.</source>
          <target state="translated">停止處理命令會使用 WhatIf。</target>       </trans-unit>
        <trans-unit id="670" translate="yes" xml:space="preserve">
          <source>PS&gt; stop-process -name winword  -whatif:$false PS&gt;                      # WhatIf:$false overrides the preference.</source>
          <target state="translated">PS &gt; 停止處理序-名稱 winword-whatif: $false PS &gt; # WhatIf: $false 覆寫喜好設定。</target>       </trans-unit>
        <trans-unit id="671" translate="yes" xml:space="preserve">
          <source>PS&gt; get-process winword Get-Process : Cannot find a process with the name 'winword'.</source>
          <target state="translated">PS &gt; 取得處理序產生 Get 程序︰ 找不到名稱 'winword' 的處理序。</target>       </trans-unit>
        <trans-unit id="672" translate="yes" xml:space="preserve">
          <source>Verify the process name and call the cmdlet again.</source>
          <target state="translated">確認處理序名稱，然後再次呼叫此指令程式。</target>       </trans-unit>
        <trans-unit id="673" translate="yes" xml:space="preserve">
          <source>At line:1 char:12</source>
          <target state="translated">在 [行︰ 1 char: 12</target>       </trans-unit>
        <trans-unit id="674" translate="yes" xml:space="preserve">
          <source>get-process  &lt;&lt;&lt;&lt; winword Verify that the process is stopped.</source>
          <target state="translated">取得處理序 &lt;&lt;&lt;&lt; winword 處理程序已停止的確認。</target>       </trans-unit>
        <trans-unit id="675" translate="yes" xml:space="preserve">
          <source>SEE ALSO</source>
          <target state="translated">另請參閱</target>       </trans-unit>
        <trans-unit id="676" translate="yes" xml:space="preserve">
          <source>about_Automatic_Variables about_CommonParameters about_Environment_Variables about_Profiles about_Remote about_Scopes about_Variables</source>
          <target state="translated">about_Automatic_Variables about_CommonParameters about_Environment_Variables about_Profiles about_Remote about_Scopes about_Variables</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>