<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="md" source-language="en-US" target-language="zh-tw">
    <header>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">41d53276e911d6db3c9adc28c60d804949864ca4</xliffext:olfilehash>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-04046aa" tool-company="Microsoft" />
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>About Windows PowerShell</source>
          <target state="translated">關於 Windows PowerShell</target>         
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>About Windows PowerShell</source>
          <target state="translated">關於 Windows PowerShell</target>         
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Windows PowerShell is designed to improve the command\-line and scripting environment by eliminating long\-standing problems and adding new features.</source>
          <target state="translated">Windows PowerShell 的設計目的是消除長久以來的問題並加入新功能，以改善命令列和指令碼環境。</target>         
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Discoverability</source>
          <target state="translated">可搜尋性</target>         
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Windows PowerShell makes it easy to discover its features.</source>
          <target state="translated">Windows PowerShell 可讓您輕鬆搜尋它的功能。</target>         
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>For example, to find a list of cmdlets that view and change Windows services, type:</source>
          <target state="translated">例如，若要尋找可檢視和變更 Windows 服務的 Cmdlet 清單，請輸入：</target>         
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>After discovering which cmdlet accomplishes a task, you can learn more about the cmdlet by using the Get\-Help cmdlet.</source>
          <target state="translated">搜尋到可完成工作的 Cmdlet 之後，即可使用 Get-Help Cmdlet 進一步了解此 Cmdlet。</target>         
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>For example, to display help about the Get\-Service cmdlet, type:</source>
          <target state="translated">例如，若要顯示 Get-Service Cmdlet 的說明，請輸入：</target>         
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>To fully understand the output of that cmdlet, pipe its output to the Get\-Member cmdlet.</source>
          <target state="translated">若要完全了解該 Cmdlet 的輸出，可將其輸出輸送至 Get-Member Cmdlet。</target>         
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>For example, the following command displays information about the members of the object output by the Get\-Service cmdlet.</source>
          <target state="translated">例如，下列命令會顯示 Get-Service Cmdlet 之物件輸出成員的相關資訊。</target>         
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Consistency</source>
          <target state="translated">一致性</target>         
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Managing systems can be a complex endeavor and tools that have a consistent interface help to control the inherent complexity.</source>
          <target state="translated">管理系統是一項複雜的工作，因此擁有一致介面的工具有助控制其中的複雜性。</target>         
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Unfortunately, neither command\-line tools nor scriptable COM objects have been known for their consistency.</source>
          <target state="translated">可惜的是，不論命令列工具或可編寫指令碼的 COM 物件都不具有一致性。</target>         
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>The consistency of Windows PowerShell is one of its primary assets.</source>
          <target state="translated">因此，Windows PowerShell 的一致性是非常寶貴的資產。</target>         
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>For example, if you learn how to use the Sort\-Object cmdlet, you can use that knowledge to sort the output of any cmdlet.</source>
          <target state="translated">例如，如果您知道如何使用 Sort-Object Cmdlet，即可利用該知識來排序任何 Cmdlet 的輸出，</target>         
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>You do not have to learn the different sorting routines of each cmdlet.</source>
          <target state="translated">而不必去了解每個 Cmdlet 的不同排序常式。</target>         
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>In addition, cmdlet developers do not have to design sorting features for their cmdlets.</source>
          <target state="translated">此外，Cmdlet 開發人員也不需要設計其 Cmdlet 的排序功能。</target>         
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Windows PowerShell gives them a framework that provides the basic features and forces them to be consistent about many aspects of the interface.</source>
          <target state="translated">Windows PowerShell 提供具有基本功能的架構，可強制讓介面的許多方面保持一致。</target>         
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>The framework eliminates some of the choices that are typically left to the developer, but, in return, it makes the development of robust and easy\-to\-use cmdlets much simpler.</source>
          <target state="translated">雖然開發人員針對此架構少了一些選擇權，但是這個架構可讓他們更輕鬆開發出強固和易於使用 Cmdlet。</target>         
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Interactive and Scripting Environments</source>
          <target state="translated">互動式和指令碼環境</target>         
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Windows PowerShell is a combined interactive and scripting environment that gives you access to command\-line tools and COM objects, and also enables you to use the power of the .NET Framework Class Library (FCL).</source>
          <target state="translated">Windows PowerShell 是一種結合的互動式和指令碼環境，可讓您存取命令列工具和 COM 物件，並讓您使用 .NET Framework Class Library (FCL) 的功能。</target>         
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>This environment improves upon the Windows Command Prompt, which provides an interactive environment with multiple command\-line tools.</source>
          <target state="translated">Windows 命令提示字元提供互動式環境及多種命令列工具，而這個環境則更加強化。</target>         
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>It also improves upon Windows Script Host (WSH) scripts, which let you use multiple command\-line tools and COM automation objects, but do not provide an interactive environment.</source>
          <target state="translated">Windows Script Host (WSH) 指令碼可讓您使用多種命令列工具和 COM Automation 物件，但不提供互動式環境；基於此，這個環境也做了改善。</target>         
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>By combining access to all of these features, Windows PowerShell extends the ability of the interactive user and the script writer, and makes system administration more manageable.</source>
          <target state="translated">Windows PowerShell 將上述所有功能的存取結合，擴充互動式使用者和指令碼寫入器的功能，並使系統管理更容易進行。</target>         
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Object Orientation</source>
          <target state="translated">物件導向</target>         
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Although you interact with Windows PowerShell by typing commands in text, Windows PowerShell is based on objects, not text.</source>
          <target state="translated">雖然您可以輸入文字命令來與 Windows PowerShell 互動，但 Windows PowerShell 是以物件為基礎，而非文字。</target>         
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>The output of a command is an object.</source>
          <target state="translated">命令的輸出即為物件。</target>         
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>You can send the output object to another command as its input.</source>
          <target state="translated">您可以將輸出物件傳送到另一個命令以作為輸入。</target>         
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>As a result, Windows PowerShell provides a familiar interface to people experienced with other shells, while introducing a new and powerful command\-line paradigm.</source>
          <target state="translated">因此，Windows PowerShell 提供熟悉的介面給慣用其他介面的使用者，同時還引入功能強大的全新命令列範例。</target>         
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>It extends the concept of sending data between commands by enabling you to send objects, rather than text.</source>
          <target state="translated">它可讓您傳送物件，而不是文字，藉此延伸在命令之間傳送資料的概念。</target>         
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Easy Transition to Scripting</source>
          <target state="translated">輕鬆轉換指令碼</target>         
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Windows PowerShell makes it easy to transition from typing commands interactively to creating and running scripts.</source>
          <target state="translated">Windows PowerShell 可將以互動方式輸入命令的作業，輕鬆轉換為建立和執行指令碼。</target>         
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>You can type commands at the Windows PowerShell command prompt to discover the commands that perform a task.</source>
          <target state="translated">您可以在 Windows PowerShell 命令提示字元中輸入命令，以探索執行工作的命令。</target>         
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Then, you can save those commands in a transcript or a history before copying them to a file for use as a script.</source>
          <target state="translated">然後，您可以將這些命令儲存在文字記錄或歷程記錄中，再複製到檔案，以作為指令碼使用。</target>         
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>