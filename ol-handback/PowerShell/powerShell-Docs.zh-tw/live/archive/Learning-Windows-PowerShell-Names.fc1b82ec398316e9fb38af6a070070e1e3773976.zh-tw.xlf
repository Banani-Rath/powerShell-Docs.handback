<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-tw">
    <header>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions" />
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">scripting\getting-started\fundamental\Learning-Windows-PowerShell-Names.md</xliffext:olfilepath>
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">bc504fbde14d0ba743accf644ee5114810afb609</xliffext:olfilehash>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-39517ae" tool-company="Microsoft" />
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Learning Windows PowerShell Names</source>
          <target state="translated">了解 Windows PowerShell 名稱</target>         
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Learning Windows PowerShell Names</source>
          <target state="translated">了解 Windows PowerShell 名稱</target>         
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Learning names of commands and command parameters is a significant time investment with most command\-line interfaces.</source>
          <target state="translated">了解大部分命令列介面的命令和命令參數名稱需要投入大量時間。</target>         
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>The issue is that there are very few patterns, so the only way to learn is by memorizing each command and each parameter that you need to use on a regular basis.</source>
          <target state="translated">此問題在於不太有模式可循，因此唯一的了解方式是記住您需要定期使用的每個命令和每個參數。</target>         
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>When you work with a new command or parameter, you cannot generally use what you already know; you have to find and learn a new name.</source>
          <target state="translated">當您使用新命令或參數時，通常無法運用您既有的知識，而必須尋找及了解新名稱。</target>         
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>If you look at how interfaces grow from a small set of tools with incremental additions to functionality, it is easy to see why the structure is nonstandard.</source>
          <target state="translated">如果您看一下介面如何從具有累加新增功能的一小組工具成長為功能性介面，便不難了解此結構無法標準化的原因。</target>         
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>With command names in particular, this may sound logical since each command is a separate tool, but there is a better way to handle command names.</source>
          <target state="translated">特別是命令名稱，乍聽之下可能很有邏輯 (因為每個命令都是個別工具)，但其實還有更好的方法來處理命令名稱。</target>         
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Most commands are built to manage elements of the operating system or applications, such as services or processes.</source>
          <target state="translated">大部分命令的建置目的是為了管理作業系統或應用程式的項目，例如服務或處理程序。</target>         
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>The commands have a variety of names that may or may not fit into a family.</source>
          <target state="translated">命令有各式各樣的名稱，不一定適合放入某個系列。</target>         
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>For example, on Windows systems, you can use the <bpt id="p1">**</bpt>net start<ept id="p1">**</ept> and <bpt id="p2">**</bpt>net stop<ept id="p2">**</ept> commands to start and stop a service.</source>
          <target state="translated">例如，在 Windows 系統上，您可以使用 <bpt id="p1">**</bpt>net start<ept id="p1">**</ept> 和 <bpt id="p2">**</bpt>net stop<ept id="p2">**</ept> 命令來啟動及停止服務。</target>         
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>There is another more generalized service control tool for Windows that has a completely different name, <bpt id="p1">**</bpt>sc<ept id="p1">**</ept>, that does not fit into the naming pattern for the <bpt id="p2">**</bpt>net<ept id="p2">**</ept> service commands.</source>
          <target state="translated">Windows 有另一個更通用但名稱完全不同的服務控制工具 <bpt id="p1">**</bpt>sc<ept id="p1">**</ept>，不適合放入 <bpt id="p2">**</bpt>net<ept id="p2">**</ept> 服務命令的命名模式中。</target>         
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>For process management, Windows has the <bpt id="p1">**</bpt>tasklist<ept id="p1">**</ept> command to list processes and the <bpt id="p2">**</bpt>taskkill<ept id="p2">**</ept> command to kill processes.</source>
          <target state="translated">為了管理處理程序，Windows 提供 <bpt id="p1">**</bpt>tasklist<ept id="p1">**</ept> 命令來列出處理程序，並提供 <bpt id="p2">**</bpt>taskkill<ept id="p2">**</ept> 命令來刪除處理程序。</target>         
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Commands that take parameters have irregular parameter specifications.</source>
          <target state="translated">使用參數的命令沒有標準的參數規格。</target>         
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>You cannot use the <bpt id="p1">**</bpt>net start<ept id="p1">**</ept> command to start a service on a remote computer.</source>
          <target state="translated">您無法使用 <bpt id="p1">**</bpt>net start<ept id="p1">**</ept> 命令啟動遠端電腦上的服務。</target>         
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>sc<ept id="p1">**</ept> command will start a service on a remote computer, but to specify the remote computer, you must prefix its name with a double backslash.</source>
          <target state="translated"><bpt id="p1">**</bpt>sc<ept id="p1">**</ept> 命令會啟動遠端電腦上的服務，但若要指定遠端電腦，您必須在其名稱前面加上雙反斜線。</target>         
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>For example, to start the spooler service on a remote computer named DC01, you would type <bpt id="p1">**</bpt>sc \\\\DC01 start spooler<ept id="p1">**</ept>.</source>
          <target state="translated">例如，若要在名為 DC01 的遠端電腦上啟動多工緩衝處理器服務，您會輸入 <bpt id="p1">**</bpt>sc \\DC01 start spooler<ept id="p1">**</ept>。</target>         
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>To list tasks running on DC01, you need to use the <bpt id="p1">**</bpt>\/S<ept id="p1">**</ept> (for "system") parameter and supply the name DC01 without backslashes, like this: <bpt id="p2">**</bpt>tasklist \/S DC01<ept id="p2">**</ept>.</source>
          <target state="translated">若要列出 DC01 上執行的工作，您必須使用 <bpt id="p1">**</bpt>/S<ept id="p1">**</ept> (表示「系統」)，並提供名稱 DC01 但不含反斜線，例如：<bpt id="p2">**</bpt>tasklist /S DC01<ept id="p2">**</ept>。</target>         
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Although there are important technical distinctions between a service and a process, they are both examples of manageable elements on a computer that have a well\-defined life cycle.</source>
          <target state="translated">雖然服務與處理程序之間有重要的技術區別，但是這兩者都是電腦上明確定義生命週期的可管理項目範例。</target>         
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>You may want to start or stop a service or process, or get a list of all currently running services or processes.</source>
          <target state="translated">您可能想要啟動或停止服務或處理程序，或是取得所有目前執行中的服務或處理程序清單。</target>         
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>In other words, although a service and a process are different things, the actions we perform on a service or a process are often conceptually the same.</source>
          <target state="translated">換句話說，雖然服務和處理程序是不同的項目，但是我們對服務或處理程序執行的動作通常在概念上是相同的。</target>         
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Furthermore, choices we may make to customize an action by specifying parameters may be conceptually similar as well.</source>
          <target state="translated">此外，藉由指定參數來自訂動作的選項在概念上也可能很類似。</target>         
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Windows PowerShell exploits these similarities to reduce the number of distinct names you need to know to understand and use cmdlets.</source>
          <target state="translated">Windows PowerShell 利用這些相似之處，減少為了解及使用 Cmdlet 所需知道的不同名稱數量。</target>         
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Cmdlets Use Verb\-Noun Names to Reduce Command Memorization</source>
          <target state="translated">Cmdlet 使用「動詞-名詞」名稱降低記住命令的需求</target>         
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Windows PowerShell uses a "verb\-noun" naming system, where each cmdlet name consists of a standard verb hyphenated with a specific noun.</source>
          <target state="translated">Windows PowerShell 使用「動詞-名詞」命名系統，其中每個 Cmdlet 名稱是由一個標準動詞後面接著連字號和一個特定名詞所組成。</target>         
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Windows PowerShell verbs are not always English verbs, but they express specific actions in Windows PowerShell.</source>
          <target state="translated">Windows PowerShell 動詞不一定是英文動詞，但會表示 Windows PowerShell 中的特定動作。</target>         
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Nouns are very much like nouns in any language, they describe specific types of objects that are important in system administration.</source>
          <target state="translated">名詞很像是任何語言中的名詞，用於描述系統管理中重要物件的特定類型。</target>         
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>It is easy to demonstrate how these two\-part names reduce learning effort by looking at a few examples of verbs and nouns.</source>
          <target state="translated">藉由檢視一些動詞和名詞範例，就能輕鬆地示範這些由兩部分組成的名稱如何減少學習工作。</target>         
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Nouns are less restricted, but they should always describe what a command acts upon.</source>
          <target state="translated">名詞的限制較少，但一律會描述命令的作用。</target>         
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Windows PowerShell has commands such as <bpt id="p1">**</bpt>Get\-Process<ept id="p1">**</ept>, <bpt id="p2">**</bpt>Stop\-Process<ept id="p2">**</ept>, <bpt id="p3">**</bpt>Get\-Service<ept id="p3">**</ept>, and <bpt id="p4">**</bpt>Stop\-Service<ept id="p4">**</ept>.</source>
          <target state="translated">Windows PowerShell 具有 <bpt id="p1">**</bpt>Get-Process<ept id="p1">**</ept>、<bpt id="p2">**</bpt>Stop-Process<ept id="p2">**</ept>、<bpt id="p3">**</bpt>Get-Service<ept id="p3">**</ept> 和 <bpt id="p4">**</bpt>Stop-Service<ept id="p4">**</ept> 等命令。</target>         
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>In the case of two nouns and two verbs, consistency does not simplify learning that much.</source>
          <target state="translated">在兩個名詞和兩個動詞的案例中，一致性無法有效簡化學習。</target>         
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>However, if you look at a standard set of 10 verbs and 10 nouns, you then have only 20 words to understand, but those words can be used to form 100 distinct command names.</source>
          <target state="translated">不過，如果您檢視由 10 個動詞和 10 個名詞所組成的標準集合，則只需要了解 20 個字，就能使用這些字組成 100 個不同的命令名稱。</target>         
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Frequently, you can recognize what a command does by reading its name, and it is usually apparent what name should be used for a new command.</source>
          <target state="translated">您通常可以藉由讀取命令的名稱來辨識命令的功能，且新命令應該使用哪些名稱通常會很明顯。</target>         
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>For example, a computer shutdown command might be <bpt id="p1">**</bpt>Stop\-Computer<ept id="p1">**</ept>.</source>
          <target state="translated">例如，電腦關機命令可能是 <bpt id="p1">**</bpt>Stop-Computer<ept id="p1">**</ept>。</target>         
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>A command that lists all computers on a network might be <bpt id="p1">**</bpt>Get\-Computer<ept id="p1">**</ept>.</source>
          <target state="translated">列出網路上所有電腦的命令可能是 <bpt id="p1">**</bpt>Get-Computer<ept id="p1">**</ept>。</target>         
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>The command that gets the system date is <bpt id="p1">**</bpt>Get\-Date<ept id="p1">**</ept>.</source>
          <target state="translated">取得系統日期的命令可能是 <bpt id="p1">**</bpt>Get-Date<ept id="p1">**</ept>。</target>         
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>You can list all commands that include a particular verb with the <bpt id="p1">**</bpt>\-Verb<ept id="p1">**</ept> parameter for <bpt id="p2">**</bpt>Get\-Command<ept id="p2">**</ept> (We will discuss <bpt id="p3">**</bpt>Get\-Command<ept id="p3">**</ept> in detail in the next section).</source>
          <target state="translated">您可以使用 <bpt id="p2">**</bpt>Get-Command<ept id="p2">**</ept> 的 <bpt id="p1">**</bpt>-Verb<ept id="p1">**</ept> 參數列出包含特定動詞的所有命令 (我們將在下一節詳細討論 <bpt id="p3">**</bpt>Get-Command<ept id="p3">**</ept>)。</target>         
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>For example, to see all cmdlets that use the verb <bpt id="p1">**</bpt>Get<ept id="p1">**</ept>, type:</source>
          <target state="translated">例如，若要查看使用 <bpt id="p1">**</bpt>Get<ept id="p1">**</ept> 動詞的所有 Cmdlet，請輸入︰</target>         
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>\-Noun<ept id="p1">**</ept> parameter is even more useful because it allows you to see a family of commands that affect the same type of object.</source>
          <target state="translated"><bpt id="p1">**</bpt>-Noun<ept id="p1">**</ept> 參數更是實用，因為它可讓您查看影響相同類型物件的一系列命令。</target>         
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>For example, if you want to see which commands are available for managing services, type following command:</source>
          <target state="translated">例如，如果您想要查看哪些命令可用於管理服務，請輸入下列命令︰</target>         
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>A command is not necessarily a cmdlet, just because it has a verb\-noun naming scheme.</source>
          <target state="translated">即使命令使用「動詞-名詞」命名配置，也不一定是 Cmdlet。</target>         
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>One example of a native Windows PowerShell command that is not a cmdlet but has a verb\-noun name, is the command for clearing a console window, Clear\-Host.</source>
          <target state="translated">清除主控台視窗的命令 Clear-Host，即為具有「動詞-名詞」名稱但不是 Cmdlet 的原生 Windows PowerShell 命令範例之一。</target>         
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>The Clear\-Host command is actually an internal function, as you can see if you run Get\-Command against it:</source>
          <target state="translated">Clear-Host 命令實際上為內部函式，如果對它執行 Get-Command 就能看到︰</target>         
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Cmdlets Use Standard Parameters</source>
          <target state="translated">Cmdlet 使用標準參數</target>         
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>As noted earlier, commands used in traditional command\-line interfaces do not generally have consistent parameter names.</source>
          <target state="translated">如前所述，傳統命令列介面中所使用的命令通常不會有一致的參數名稱。</target>         
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Sometimes parameters do not have names at all.</source>
          <target state="translated">有時候參數完全沒有名稱。</target>         
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>When they do, they are often single\-character or abbreviated words that can be typed rapidly but are not easily understood by new users.</source>
          <target state="translated">這種情況的參數通常是可快速輸入，但新使用者不容易了解的單字或縮寫字。</target>         
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Unlike most other traditional command\-line interfaces, Windows PowerShell processes parameters directly, and it uses this direct access to the parameters along with developer guidance to standardize parameter names.</source>
          <target state="translated">不同於其他大部分傳統命令列介面，Windows PowerShell 會直接處理這些參數，並透過直接存取參數及開發人員指引來標準化參數名稱。</target>         
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Although this does not guarantee that every cmdlet will always conform to the standards, it does encourage it.</source>
          <target state="translated">雖然這並不保證每個 Cmdlet 一律會符合標準，但會鼓勵其符合標準。</target>         
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Parameter names always have a '\-' prepended to them when you use them, to allow Windows PowerShell to clearly identify them as parameters.</source>
          <target state="translated">當您使用這些參數時，參數名稱前面一律會加上 '-'，以允許 Windows PowerShell 清楚地將它們識別為參數。</target>         
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>In the <bpt id="p1">**</bpt>Get\-Command \-Name Clear\-Host<ept id="p1">**</ept> example, the parameter's name is <bpt id="p2">**</bpt>Name<ept id="p2">**</ept>, but it is entered as \-<bpt id="p3">**</bpt>Name<ept id="p3">**</ept>.</source>
          <target state="translated">在 <bpt id="p1">**</bpt>Get-Command -Name Clear-Host<ept id="p1">**</ept> 範例中，參數的名稱為 <bpt id="p2">**</bpt>Name<ept id="p2">**</ept>，但會輸入為 -<bpt id="p3">**</bpt>Name<ept id="p3">**</ept>。</target>         
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Here are some of the general characteristics of the standard parameter names and usages.</source>
          <target state="translated">以下是一些標準參數名稱和使用方式的一般特性。</target>         
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>The Help Parameter (?)</source>
          <target state="translated">說明參數 (?)</target>         
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>When you specify the <bpt id="p1">**</bpt>\-?<ept id="p1">**</ept></source>
          <target state="translated">當您指定 <bpt id="p1">**</bpt>-?<ept id="p1">**</ept></target>         
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>parameter to any cmdlet, the cmdlet is not executed.</source>
          <target state="translated">參數給任何 Cmdlet 時，不會執行此 Cmdlet。</target>         
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Instead, Windows PowerShell displays help for the cmdlet.</source>
          <target state="translated">相反地，Windows PowerShell 會顯示此 Cmdlet 的說明。</target>         
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>Common Parameters</source>
          <target state="translated">一般參數</target>         
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Windows PowerShell has several parameters known as <bpt id="p1">*</bpt>common parameters<ept id="p1">*</ept>.</source>
          <target state="translated">Windows PowerShell 有幾個稱為<bpt id="p1">*</bpt>一般參數<ept id="p1">*</ept>的參數。</target>         
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Because these parameters are controlled by the Windows PowerShell engine, whenever they are implemented by a cmdlet, they will always behave the same way.</source>
          <target state="translated">因為這些參數是由 Windows PowerShell 引擎所控制，所以每當 Cmdlet 實作參數時，這些參數一律會以相同方式運作。</target>         
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>The common parameters are <bpt id="p1">**</bpt>WhatIf<ept id="p1">**</ept>, <bpt id="p2">**</bpt>Confirm<ept id="p2">**</ept>, <bpt id="p3">**</bpt>Verbose<ept id="p3">**</ept>, <bpt id="p4">**</bpt>Debug<ept id="p4">**</ept>, <bpt id="p5">**</bpt>Warn<ept id="p5">**</ept>, <bpt id="p6">**</bpt>ErrorAction<ept id="p6">**</ept>, <bpt id="p7">**</bpt>ErrorVariable<ept id="p7">**</ept>, <bpt id="p8">**</bpt>OutVariable<ept id="p8">**</ept>, and <bpt id="p9">**</bpt>OutBuffer<ept id="p9">**</ept>.</source>
          <target state="translated">一般參數包括 <bpt id="p1">**</bpt>WhatIf<ept id="p1">**</ept>、<bpt id="p2">**</bpt>Confirm<ept id="p2">**</ept>、<bpt id="p3">**</bpt>Verbose<ept id="p3">**</ept>、<bpt id="p4">**</bpt>Debug<ept id="p4">**</ept>、<bpt id="p5">**</bpt>Warn<ept id="p5">**</ept>、<bpt id="p6">**</bpt>ErrorAction<ept id="p6">**</ept>、<bpt id="p7">**</bpt>ErrorVariable<ept id="p7">**</ept>、<bpt id="p8">**</bpt>OutVariable<ept id="p8">**</ept> 和 <bpt id="p9">**</bpt>OutBuffer<ept id="p9">**</ept>。</target>         
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>Suggested Parameters</source>
          <target state="translated">建議的參數</target>         
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>The Windows PowerShell core cmdlets use standard names for similar parameters.</source>
          <target state="translated">Windows PowerShell 核心 Cmdlet 針對類似的參數使用標準名稱。</target>         
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>Although the use of parameter names is not enforced, there is explicit guidance for usage to encourage standardization.</source>
          <target state="translated">雖然不會強制使用參數名稱，但針對使用方式有明確的指引，以鼓勵標準化。</target>         
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>For example, the guidance recommends naming a parameter that refers to a computer by name as <bpt id="p1">**</bpt>ComputerName<ept id="p1">**</ept>, rather than Server, Host, System, Node, or other common alternative words.</source>
          <target state="translated">例如，該指引建議命名指向電腦的參數時，依照 <bpt id="p1">**</bpt>ComputerName<ept id="p1">**</ept> 等名稱，而不是依照 Server、Host、System、Node 或其他常見的替代文字。</target>         
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>Among the important suggested parameter names are <bpt id="p1">**</bpt>Force<ept id="p1">**</ept>, <bpt id="p2">**</bpt>Exclude<ept id="p2">**</ept>, <bpt id="p3">**</bpt>Include<ept id="p3">**</ept>, <bpt id="p4">**</bpt>PassThru<ept id="p4">**</ept>, <bpt id="p5">**</bpt>Path<ept id="p5">**</ept>, and <bpt id="p6">**</bpt>CaseSensitive<ept id="p6">**</ept>.</source>
          <target state="translated">重要的建議參數名稱包括 <bpt id="p1">**</bpt>Force<ept id="p1">**</ept>、<bpt id="p2">**</bpt>Exclude<ept id="p2">**</ept>、<bpt id="p3">**</bpt>Include<ept id="p3">**</ept>、<bpt id="p4">**</bpt>PassThru<ept id="p4">**</ept>、<bpt id="p5">**</bpt>Path<ept id="p5">**</ept>, 和 <bpt id="p6">**</bpt>CaseSensitive<ept id="p6">**</ept>。</target>         
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>