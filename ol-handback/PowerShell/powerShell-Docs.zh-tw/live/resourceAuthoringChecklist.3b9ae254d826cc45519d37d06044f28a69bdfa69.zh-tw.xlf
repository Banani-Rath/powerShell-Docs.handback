<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-tw">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-56a7a5e" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">b2900987b1102cf41880e5af0a0cc44bc6499ef5</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">dsc\resourceAuthoringChecklist.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions" />
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">0514a6554b9d3a08cd28053c365719dae7017d98</xliffext:olskeletonhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Resource authoring checklist</source>
          <target state="translated">資源撰寫檢查清單</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>powershell,DSC</source>
          <target state="translated">PowerShell，DSC</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Resource authoring checklist</source>
          <target state="translated">資源撰寫檢查清單</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>This checklist is a list of best practices when authoring a new DSC Resource.</source>
          <target state="translated">此檢查清單是撰寫新 DSC 資源時的最佳做法清單。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Resource module contains .psd1 file and schema.mof for every resource</source>
          <target state="translated">資源模組包含各項資源的 .psd1 檔案和 schema.mof</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Check that your resource has correct structure and contains all required files.</source>
          <target state="translated">檢查資源有沒有正確的結構，以及是否包含所有必要的檔案。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Every resource module should contain a .psd1 file and every non-composite resource should have schema.mof file.</source>
          <target state="translated">每個資源模組都應該包含 .psd1 檔案，且每個非複合資源都應該有 schema.mof 檔案。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Resources that do not contain schema will not be listed by <bpt id="p1">**</bpt>Get-DscResource<ept id="p1">**</ept> and users will not be able to use the intellisense when writing code against those modules in ISE.</source>
          <target state="translated"><bpt id="p1">**</bpt>Get-DscResource<ept id="p1">**</ept> 不會列出不包含結構描述的資源，使用者也不能在撰寫針對 ISE 這些模組的程式碼時，使用 IntelliSense。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>The directory structure for xRemoteFile resource, which is part of the <bpt id="p1">[</bpt>xPSDesiredStateConfiguration resource module<ept id="p1">](https://github.com/PowerShell/xPSDesiredStateConfiguration)</ept>, looks as follows:</source>
          <target state="translated">xRemoteFile 資源的目錄結構，是 <bpt id="p1">[</bpt>xPSDesiredStateConfiguration 資源模組<ept id="p1">](https://github.com/PowerShell/xPSDesiredStateConfiguration)</ept>的一部分，看起來像這樣︰</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Resource and schema are correct</source>
          <target state="translated">資源和結構描述正確</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Verify the resource schema (*.schema.mof) file.</source>
          <target state="translated">驗證資源結構描述 (*.schema.mof) 檔案。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>You can use the <bpt id="p1">[</bpt>DSC Resource Designer<ept id="p1">](https://www.powershellgallery.com/packages/xDSCResourceDesigner/)</ept> to help develop and test your schema.</source>
          <target state="translated">您可以使用 <bpt id="p1">[</bpt>DSC 資源設計工具<ept id="p1">](https://www.powershellgallery.com/packages/xDSCResourceDesigner/)</ept>協助開發及測試您的結構描述。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Make sure that:</source>
          <target state="translated">請確認︰</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Property types are correct (e.g. don’t use String for properties which accept numeric values, you should use UInt32 or other numeric types instead)</source>
          <target state="translated">屬性類型正確 (例如，接受數值的屬性不使用字串，應改用 UInt32 或其他數值類型)</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Property attributes are specified correctly as: ([key], [required], [write], [read])</source>
          <target state="translated">已正確指定屬性 (property) 屬性 (attribute)：([key]、[required]、[write]、[read])</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>At least one parameter in the schema has to be marked as [key]</source>
          <target state="translated">結構描述中至少要有一個參數標示為 [key]</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>[read] property does not coexist together with any of: [required], [key], [write]</source>
          <target state="translated">[read] 屬性和後列任一項不並存：[required]、[key]、[write]</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>If multiple qualifiers are specified except [read], then [key] takes precedence</source>
          <target state="translated">如果除 [read] 以外指定了多個限定詞，則 [key] 優先</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>If [write] and [required] are specified, then [required] takes precedence</source>
          <target state="translated">如果指定 [write] 和 [required]，則 [required] 優先</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>ValueMap is specified where appropriate</source>
          <target state="translated">適當的位置會指定 ValueMap</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Example:</source>
          <target state="translated">範例：</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Friendly name is specified and confirms to DSC naming conventions</source>
          <target state="translated">指定易記的名稱並確認 DSC 命名慣例</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Example:</source>
          <target state="translated">範例：</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Every field has meaningful description.</source>
          <target state="translated">每個欄位都有具意義的描述。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>The PowerShell GitHub repository has good examples, such as <bpt id="p1">[</bpt>the .schema.mof for xRemoteFile<ept id="p1">](https://github.com/PowerShell/xPSDesiredStateConfiguration/blob/dev/DSCResources/MSFT_xRemoteFile/MSFT_xRemoteFile.schema.mof)</ept></source>
          <target state="translated">PowerShell GitHub 存放庫有很好的範例，例如<bpt id="p1">[</bpt>用於 xRemoteFile 的 .schema.mof<ept id="p1">](https://github.com/PowerShell/xPSDesiredStateConfiguration/blob/dev/DSCResources/MSFT_xRemoteFile/MSFT_xRemoteFile.schema.mof)</ept>。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Additionally, you should use <bpt id="p1">**</bpt>Test-xDscResource<ept id="p1">**</ept> and <bpt id="p2">**</bpt>Test-xDscSchema<ept id="p2">**</ept> cmdlets from <bpt id="p3">[</bpt>DSC Resource Designer<ept id="p3">](https://www.powershellgallery.com/packages/xDSCResourceDesigner/)</ept> to automatically verify the resource and schema:</source>
          <target state="translated">另外，您應使用 <bpt id="p3">[</bpt>DSC 資源設計工具<ept id="p3">](https://www.powershellgallery.com/packages/xDSCResourceDesigner/)</ept>的 <bpt id="p1">**</bpt>Test-xDscResource<ept id="p1">**</ept> 和 <bpt id="p2">**</bpt>Test-xDscSchema<ept id="p2">**</ept> Cmdlet 自動驗證資源和結構描述：</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>For example:</source>
          <target state="translated">例如：</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Resource loads without errors</source>
          <target state="translated">資源載入無錯誤</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Check whether the resource module can be successfully loaded.</source>
          <target state="translated">檢查是否可以成功載入資源模組。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>This can be achieved manually, by running <ph id="ph1">`Import-Module &lt;resource_module&gt; -force `</ph> and confirming that no errors occurred, or by writing test automation.</source>
          <target state="translated">這可以手動方式操作，執行 <ph id="ph1">`Import-Module &lt;resource_module&gt; -force `</ph> 並確認無任何錯誤發生，或撰寫測試自動化。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>In case of the latter, you can follow this structure in your test case:</source>
          <target state="translated">如果是後者，您可以在測試案例遵循這個結構：</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Resource is idempotent in the positive case</source>
          <target state="translated">資源在正案例中為等冪</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>One of the fundamental characteristics of DSC resources is be idempotence.</source>
          <target state="translated">DSC 資源的其中一個基本特性為等冪。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>It means that applying a DSC configuration containing that resource multiple times will always achieve the same result.</source>
          <target state="translated">這表示多次套用包含該資源的 DSC 設定，都會得到相同的結果。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>For example, if we create a configuration which contains the following File resource:</source>
          <target state="translated">例如，如果我們建立包含下列檔案資源的設定：</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>After applying it for the first time, file test.txt should appear in C:\test folder.</source>
          <target state="translated">第一次套用後，檔案 test.txt 應該會出現在 C:\test 資料夾中。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>However, subsequent runs of the same configuration should not change the state of the machine (e.g. no copies of the test.txt file should be created).</source>
          <target state="translated">不過，後續執行的相同設定應該不會變更機器的狀態 (例如，應該不會建立任何 test.txt 檔案複本)。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>To ensure a resource is idempotent you can repeatedly call <bpt id="p1">**</bpt>Set-TargetResource<ept id="p1">**</ept> when testing the resource directly, or call <bpt id="p2">**</bpt>Start-DscConfiguration<ept id="p2">**</ept> multiple times when doing end to end testing.</source>
          <target state="translated">為確保資源為等冪，您可以在直接測試資源時重複呼叫 <bpt id="p1">**</bpt>Set-TargetResource<ept id="p1">**</ept>，或在執行端對端測試時多次呼叫 <bpt id="p2">**</bpt>Start-DscConfiguration<ept id="p2">**</ept>。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>The result should be the same after every run.</source>
          <target state="translated">每次執行後的結果都應該相同。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Test user modification scenario</source>
          <target state="translated">測試使用者修改案例</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>By changing the state of the machine and then rerunning DSC, you can verify that <bpt id="p1">**</bpt>Set-TargetResource<ept id="p1">**</ept> and <bpt id="p2">**</bpt>Test-TargetResource<ept id="p2">**</ept> function properly.</source>
          <target state="translated">變更電腦狀態，再重新執行 DSC，您就可以正確驗證 <bpt id="p1">**</bpt>Set-TargetResource<ept id="p1">**</ept> 和 <bpt id="p2">**</bpt>Test-TargetResource<ept id="p2">**</ept> 函式。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Here are steps you should take:</source>
          <target state="translated">以下為應該採取的步驟：</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Start with the resource not in the desired state.</source>
          <target state="translated">請從不在預期狀態的資源開始。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Run configuration with your resource</source>
          <target state="translated">以資源執行設定</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Verify <bpt id="p1">**</bpt>Test-DscConfiguration<ept id="p1">**</ept> returns True</source>
          <target state="translated">確認 <bpt id="p1">**</bpt>Test-DscConfiguration<ept id="p1">**</ept> 傳回 true</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Modify the configured item to be out of the desired state</source>
          <target state="translated">將已設定的項目修改為不在所需狀態</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Verify <bpt id="p1">**</bpt>Test-DscConfiguration<ept id="p1">**</ept> returns false Here’s a more concrete example using Registry resource:</source>
          <target state="translated">驗證 <bpt id="p1">**</bpt>Test-DscConfiguration<ept id="p1">**</ept> 傳回 false。以下是更具體的登錄資源使用範例：</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Start with registry key not in the desired state</source>
          <target state="translated">請從不在預期狀態的登錄機碼開始</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Run <bpt id="p1">**</bpt>Start-DscConfiguration<ept id="p1">**</ept> with a configuration to put it in the desired state and verify it passes.</source>
          <target state="translated">對設定執行 <bpt id="p1">**</bpt>Start-DscConfiguration<ept id="p1">**</ept> 使其進入預期狀態，並確認通過。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Run <bpt id="p1">**</bpt>Test-DscConfiguration<ept id="p1">**</ept> and verify it returns true</source>
          <target state="translated">執行 <bpt id="p1">**</bpt>Test-DscConfiguration<ept id="p1">**</ept> 並確認它傳回 true</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Modify the value of the key so that it is not in the desired state</source>
          <target state="translated">修改機碼值，使它不在預期狀態</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Run <bpt id="p1">**</bpt>Test-DscConfiguration<ept id="p1">**</ept> and verify it returns false</source>
          <target state="translated">執行 <bpt id="p1">**</bpt>Test-DscConfiguration<ept id="p1">**</ept> 並確認它傳回 false</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Get-TargetResource functionality was verified using Get-DscConfiguration</source>
          <target state="translated">已使用 Get-DscConfiguration 驗證 Get-TargetResource 功能</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Get-TargetResource should return details of the current state of the resource.</source>
          <target state="translated">Get-TargetResource 應該傳回資源目前狀態的詳細資料。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Make sure to test it by calling Get-DscConfiguration after you apply the configuration and verifying that output correctly reflects the current state of the machine.</source>
          <target state="translated">請確定以此方法測試：在套用設定後呼叫 Get-DscConfiguration，確認輸出會正確反映電腦目前的狀態。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>It's important to test it separately, since any issues in this area won't appear when calling Start-DscConfiguration.</source>
          <target state="translated">請務必分開測試，因為呼叫 Start-DscConfiguration 時，不會顯示這個區域的任何問題。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Call <bpt id="p1">**</bpt>Get/Set/Test-TargetResource<ept id="p1">**</ept> functions directly</source>
          <target state="translated">直接呼叫 <bpt id="p1">**</bpt>Get/Set/Test-TargetResource<ept id="p1">**</ept> 函式</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Make sure you test the <bpt id="p1">**</bpt>Get/Set/Test-TargetResource<ept id="p1">**</ept> functions implemented in your resource by calling them directly and verifying that they work as expected.</source>
          <target state="translated">請務必測試在資源中實作的 <bpt id="p1">**</bpt>Get/Set/Test-TargetResource<ept id="p1">**</ept> 函式，方法是直接呼叫這些函式並確認其如預期般運作。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>Verify End to End using <bpt id="p1">**</bpt>Start-DscConfiguration<ept id="p1">**</ept></source>
          <target state="translated">使用 <bpt id="p1">**</bpt>Start-DscConfiguration<ept id="p1">**</ept> 驗證端對端</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>Testing <bpt id="p1">**</bpt>Get/Set/Test-TargetResource<ept id="p1">**</ept> functions by calling them directly is important, but not all issues will be discovered this way.</source>
          <target state="translated">以直接呼叫的方式測試這些 <bpt id="p1">**</bpt>Get/Set/Test-TargetResource<ept id="p1">**</ept> 函式很重要，但並非所有的問題都能以這種方式發現。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>You should focus significant part of your testing on using <bpt id="p1">**</bpt>Start-DscConfiguration<ept id="p1">**</ept> or the pull server.</source>
          <target state="translated">測試重點應該放在使用 <bpt id="p1">**</bpt>Start-DscConfiguration<ept id="p1">**</ept> 或提取伺服器上。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>In fact, this is how users will use the resource, so don’t underestimate the significance of this type of tests.</source>
          <target state="translated">事實上，這就是使用者使用資源的方法，所以請勿低估這種測試的重要性。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>Possible types of issues:</source>
          <target state="translated">可能有的問題類型：</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>Credential/Session may behave differently because the DSC agent runs as a service.</source>
          <target state="translated">因為 DSC 代理程式以服務方式執行，所以認證/工作階段的行為可能不同。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>Be sure to test any features here end to end.</source>
          <target state="translated">請務必在此端對端測試所有功能。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>Errors output by <bpt id="p1">**</bpt>Start-DscConfiguration<ept id="p1">**</ept> may be different than those displayed when calling the <bpt id="p2">**</bpt>Set-TargetResource<ept id="p2">**</ept> function directly.</source>
          <target state="translated"><bpt id="p1">**</bpt>Start-DscConfiguration<ept id="p1">**</ept> 輸出的錯誤，和直接呼叫 <bpt id="p2">**</bpt>Set-TargetResource<ept id="p2">**</ept> 函式所顯示的錯誤可能不同。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>Test compatability on all DSC supported platforms</source>
          <target state="translated">測試所有 DSC 支援平台的相容性</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>Resource should work on all DSC supported platforms (Windows Server 2008 R2 and newer).</source>
          <target state="translated">資源應該能在所有 DSC 支援的平台上運作 (Windows Server 2008 R2 及更新版本)。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>Install the latest WMF (Windows Management Framework) on your OS to get the latest version of DSC.</source>
          <target state="translated">在您的作業系統上安裝最新的 WMF (Windows Management Framework)，以取得最新版的 DSC。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>If your resource does not work on some of these platforms by design, a specific error message should be returned.</source>
          <target state="translated">如果最初設計的資源在部分這些平台上無法運作，應該會傳回特定的錯誤訊息。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>Also, make sure your resource checks whether cmdlets you are calling are present on particular machine.</source>
          <target state="translated">亦請確定資源檢查特定電腦上是否有呼叫中的 Cmdlet。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>Windows Server 2012 added a large number of new cmdlets that are not available on Windows Server 2008R2, even with WMF installed.</source>
          <target state="translated">Windows Server 2012 加入的大量新 Cmdlet，是即使安裝 WMF，Windows Server 2008R2 也不提供的。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>Verify on Windows Client (if applicable)</source>
          <target state="translated">在 Windows 用戶端上驗證 (如果適用)</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>One very common test gap is verifying the resource only on server versions of Windows.</source>
          <target state="translated">一個極常見的測試間距正在驗證資源是否只能存在於 Windows 的伺服器版本。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>Many resources are also designed to work on Client SKUs, so if that’s true in your case, don’t forget to test it on those platforms as well.</source>
          <target state="translated">許多資源也設計在用戶端 SKU 上運作，如果這符合您的情況，請記得也要在這些平台上進行測試。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>Get-DSCResource lists the resource</source>
          <target state="translated">Get-DSCResource 列出這些資源</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>After deploying the module, calling Get-DscResource should list your resource among others as a result.</source>
          <target state="translated">部署模組之後，呼叫 Get-DscResource 最後應該會列出您的資源和其他項目。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>If you can’t find your resource in the list, make sure that schema.mof file for that resource exists.</source>
          <target state="translated">如果清單中找不到您的資源，請確定您有該資源的 schema.mof 檔案。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>Resource module contains examples</source>
          <target state="translated">資源模組包含範例</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>Creating quality examples which will help others understand how to use it.</source>
          <target state="translated">建立可幫助其他人了解用法的優質範例。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>This is crucial, especially since many users treat sample code as documentation.</source>
          <target state="translated">特別是許多使用者視範例程式碼為文件，這十分重要。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>First, you should determine the examples that will be included with the module – at minimum, you should cover most important use cases for your resource:</source>
          <target state="translated">首先，您應該決定模組要包含的範例，起碼應涵蓋最重要的資源使用案例：</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>If your module contains several resources that need to work together for an end-to-end scenario, the basic end-to-end example would ideally be first.</source>
          <target state="translated">如果模組包含的數項資源，在端對端案例中必須一起工作，基本的端對端範例最好排第一。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>The initial examples should be very simple -- how to get started with your resources in small manageable chunks (e.g. creating a new VHD)</source>
          <target state="translated">初始範例應該簡單易懂：如何在小而易於管理的區塊中 (例如建立新的 VHD) 開始使用資源</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>Subsequent examples should build on those examples (e.g. creating a VM from a VHD, removing VM, modifying VM), and show advanced functionality (e.g. creating a VM with dynamic memory)</source>
          <target state="translated">後續的範例應建置於這些範例上 (例如，從 VHD 建立 VM、移除 VM、修改 VM)，顯示進階的功能 (例如，建立具有動態記憶體的 VM)</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>Example configurations should be parameterized (all values should be passed to the configuration as parameters and there should be no hardcoded values):</source>
          <target state="translated">範例設定應該參數化 (所有值都應該當做參數傳遞至設定，不該有任何硬式編碼值)：</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>It’s a good practice to include (commented out) example of how to call the configuration with the actual values at the end of the example script.</source>
          <target state="translated">包含這樣一種 (註解化) 範例：如何呼叫在範例指令碼結尾有實際值的設定，是個不錯的做法。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>For example, in the configuration above it isn't neccessarily obvious that the best way to specify UserAgent is:</source>
          <target state="translated">例如，在上述的設定中，將 UserAgent 指定為下列項目，明顯不是最佳做法：</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>In which case a comment can clarify the intended execution of the configuration:</source>
          <target state="translated">在註解可以釐清設定預期執行的案例中︰</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>For each example, write a short description which explains what it does, and the meaning of the parameters.</source>
          <target state="translated">每個範例請撰寫簡短的描述，說明其用途及參數意義。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>Make sure examples cover most the important scenarios for your resource and if there’s nothing missing, verify that they all execute and put machine in the desired state.</source>
          <target state="translated">請確定範例涵蓋資源多數的重要案例，而且如果沒有任何缺漏，請確認它們是否都可執行，並能讓電腦處於預期狀態。</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>Error messages are easy to understand and help users solve problems</source>
          <target state="translated">錯誤訊息容易了解，且能幫助使用者解決問題</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>Good error messages should be:</source>
          <target state="translated">好的錯誤訊息應該是：</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>There: The biggest problem with error messages is that they often don’t exist, so make sure they are there.</source>
          <target state="translated">有訊息：錯誤訊息的最大問題是它們通常不存在，所以請確定要有錯誤訊息存在。</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>Easy to understand: Human readable, no obscure error codes</source>
          <target state="translated">容易了解︰一般人看得懂，沒有晦澀難懂的錯誤代碼</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>Precise: Describe what’s exactly the problem</source>
          <target state="translated">精確：確切描述問題</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>Constructive: Advice how to fix the issue</source>
          <target state="translated">建設性︰建議如何修正問題</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>Polite: Don’t blame user or make them feel bad Make sure you verify errors in End to End scenarios (using <bpt id="p1">**</bpt>Start-DscConfiguration<ept id="p1">**</ept>), because they may differ from those returned when running resource functions directly.</source>
          <target state="translated">有禮︰不責怪使用者或讓他們覺得不舒服。請務必驗證端對端案例中的錯誤 (使用 <bpt id="p1">**</bpt>Start-DscConfiguration<ept id="p1">**</ept>)，因為它們可能會與直接執行資源函式時所傳回的錯誤不同。</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>Log messages are easy to understand and informative (including –verbose, –debug and ETW logs)</source>
          <target state="translated">記錄檔訊息容易了解且提供資訊 (包括 –verbose、–debug 和 ETW 記錄檔)</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>Ensure that logs outputted by the resource are easy to understand and provide value to the user.</source>
          <target state="translated">請確保資源輸出的記錄檔容易了解並向使用者提供值。</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>Resources should output all information which might be helpful to the user, but more logs is not always better.</source>
          <target state="translated">資源應該要輸出所有對使用者可能有幫助的資訊，但記錄愈多不一定愈好。</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>You should avoid redundancy and outputting data which does not provide additional value – don’t make someone go through hundreds of log entries in order to find what they're looking for.</source>
          <target state="translated">您應該避免備援以及輸出不提供附加價值的資料 – 不要讓使用者翻找數百筆記錄後才找到自己要找的。</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>Of course, no logs is not an acceptable solution for this problem either.</source>
          <target state="translated">當然，全無記錄檔也不是這個問題可以接受的解決方案。</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>When testing, you should also analyze verbose and debug logs (by running <bpt id="p1">**</bpt>Start-DscConfiguration<ept id="p1">**</ept> with –verbose and –debug switches appropriately), as well as ETW logs.</source>
          <target state="translated">測試時，您也應該要分析詳細資訊和偵錯記錄 (方法是正確執行 <bpt id="p1">**</bpt>Start-DscConfiguration<ept id="p1">**</ept> 與 -verbose 和 -debug 參數) 以及 ETW 記錄。</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>To see DSC ETW logs, go to Event Viewer and open the following folder: Applications and Services- Microsoft - Windows - Desired State Configuration.</source>
          <target state="translated">若要查看 DSC ETW 記錄檔，請移至 [事件檢視器] 並開啟下列資料夾︰[應用程式及服務] - [Microsoft] - [Windows] - [預期狀態設定]。</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>By default there will be Operational channel, but make sure you enable Analytic and Debug channels before running the configuration.</source>
          <target state="translated">預設會有操作通道，但請確定先啟用分析與偵錯通道，再執行設定。</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>To enable Analytic/Debug channels, you can execute script below:</source>
          <target state="translated">若要啟用分析/偵錯通道，您可以執行下列指令碼︰</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>Resource implementation does not contain hardcoded paths</source>
          <target state="translated">資源實作不包含硬式編碼路徑</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>Ensure there are no hardcoded paths in the resource implementation, particularly if they assume language (en-us), or when there are system variables that can be used.</source>
          <target state="translated">請確定資源實作中沒有硬式編碼路徑，特別是當它們假設語言 (en-us) 或有可用的系統變數時。</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>If your resource need to access specific paths, use environment variables instead of hardcoding the path, as it may differ on other machines.</source>
          <target state="translated">如果您的資源需要存取特定的路徑，請使用環境變數，不要使用硬式編碼路徑，因為它在其他電腦上可能不同。</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>Example:</source>
          <target state="translated">範例：</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>Instead of:</source>
          <target state="translated">不要：</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>You can write:</source>
          <target state="translated">您可以撰寫︰</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>Resource implementation does not contain user information</source>
          <target state="translated">資源實作不包含使用者資訊</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>Make sure there are no email names, account information, or names of people in the code.</source>
          <target state="translated">請確認程式碼中沒有任何電子郵件名稱、帳戶資訊或人名。</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>Resource was tested with valid/invalid credentials</source>
          <target state="translated">資源已使用有效/無效的認證測試</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>If your resource takes a credential as parameter:</source>
          <target state="translated">如果資源使用認證為參數：</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>Verify the resource works when Local System (or the computer account for remote resources) does not have access.</source>
          <target state="translated">確認當本機系統 (或遠端資源的電腦帳戶) 無存取權時，資源可運作。</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>Verify the resource works with a credential specified for Get, Set and Test</source>
          <target state="translated">確認資源能搭配為 Get、Set 和 Test 指定的認證運作</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>If your resource accesses shares, test all the variants you need to support, such as:</source>
          <target state="translated">如果資源存取權是共用的，請測試所有需要支援的變數，如：</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>Standard windows shares.</source>
          <target state="translated">標準的 Windows 共用。</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>DFS shares.</source>
          <target state="translated">DFS 共用。</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>SAMBA shares (if you want to support Linux.)</source>
          <target state="translated">SAMBA 共用 (如想要支援 Linux)。</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>Resource does not require interactive input</source>
          <target state="translated">資源不需要互動式輸入</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Get/Set/Test-TargetResource<ept id="p1">**</ept> functions should be executed automatically and must not wait for user’s input at any stage of execution (e.g. you should not use <bpt id="p2">**</bpt>Get-Credential<ept id="p2">**</ept> inside these functions).</source>
          <target state="translated"><bpt id="p1">**</bpt>Get/Set/Test-TargetResource<ept id="p1">**</ept> 函式應該要自動執行，絕不能等到使用者在執行的任何階段輸入才動作 (例如，這些函式內不應該使用 <bpt id="p2">**</bpt>Get-Credential<ept id="p2">**</ept>)。</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>If you need to provide user’s input, you should pass it to the configuration as parameter during the compilation phase.</source>
          <target state="translated">如果您需要提供使用者輸入，就應該在編譯階段將它當做參數傳遞至設定。</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>Resource functionality was thoroughly tested</source>
          <target state="translated">已徹底測試資源功能</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>This checklist contains items which are important to be tested and/or are often missed.</source>
          <target state="translated">這份檢查清單包含要測試和/或經常遺漏的重要項目。</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>There will be bunch of tests, mainly functional ones which will be specific to the resource you are testing and are not mentioned here.</source>
          <target state="translated">還有一些測試，主要是資源特定的功能測試，而這裡未提及。</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>Don’t forget about negative test cases.</source>
          <target state="translated">別忘了反向測試案例。</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>Best practice: Resource module contains Tests folder with ResourceDesignerTests.ps1 script</source>
          <target state="translated">最佳做法︰資源模組包含附有 ResourceDesignerTests.ps1 指令碼的測試資料夾</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>It’s a good practice to create folder “Tests” inside resource module, create ResourceDesignerTests.ps1 file and add tests using <bpt id="p1">**</bpt>Test-xDscResource<ept id="p1">**</ept> and <bpt id="p2">**</bpt>Test-xDscSchema<ept id="p2">**</ept> for all resources in given module.</source>
          <target state="translated">這是個不錯的做法：在資源模組內建立「測試」資料夾，建立 ResourceDesignerTests.ps1 檔案，並為指定模組中的所有資源加入使用 <bpt id="p1">**</bpt>Test-xDscResource<ept id="p1">**</ept> 和 <bpt id="p2">**</bpt>Test-xDscSchema<ept id="p2">**</ept> 的測試。</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>This way you can quickly validate schemas of all resources from the given modules and do a sanity check before publishing.</source>
          <target state="translated">如此，就可以快速驗證指定模組中所有資源的結構描述，並在發行前執行例行性檢查。</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>For xRemoteFile, ResourceTests.ps1 could look as simple as:</source>
          <target state="translated">至於 xRemoteFile，ResourceTests.ps1 可能看起來這麼簡單：</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>Best practice: Resource folder contains resource designer script for generating schema</source>
          <target state="translated">最佳做法︰資源資料夾包含產生結構描述的資源設計工具指令碼</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>Each resource should contain a resource designer script which generates a mof schema of the resource.</source>
          <target state="translated">每個資源都應該包含資源設計工具指令碼，它會產生資源的 MOF 結構描述。</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>This file should be placed in <ph id="ph1">&lt;ResourceName&gt;</ph>\ResourceDesignerScripts and be named Generate<ph id="ph2">&lt;ResourceName&gt;</ph>Schema.ps1 For xRemoteFile resource this file would be called GenerateXRemoteFileSchema.ps1 and contain:</source>
          <target state="translated">這個檔案應該置於 <ph id="ph1">&lt;ResourceName&gt;</ph>\ResourceDesignerScripts，且命名為 Generate<ph id="ph2">&lt;ResourceName&gt;</ph>Schema.ps1。若為 xRemoteFile 資源，這個檔案就會稱之為 GenerateXRemoteFileSchema.ps1 且包含︰</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>Best practice: Resource supports -whatif</source>
          <target state="translated">最佳做法︰資源支援 -whatif</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>If your resource is performing “dangerous” operations, it’s a good practice to implement -whatif functionality.</source>
          <target state="translated">如果資源執行的是「危險」作業，實作 -whatif 功能是個不錯的做法。</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>After it’s done, make sure that whatif output correctly describes operations which would happen if command was executed without whatif switch.</source>
          <target state="translated">完成後，請確定 whatif 輸出會正確描述不使用 whatif 參數執行命令時，作業會發生的狀況。</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>Also, verify that operations does not execute (no changes to the node’s state are made) when –whatif switch is present.</source>
          <target state="translated">亦請確認當出現 –whatif 參數時不執行作業 (不會變更節點狀態)。</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source>For example, let’s assume we are testing File resource.</source>
          <target state="translated">例如，假設現在要測試檔案資源。</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source>Below is simple configuration which creates file “test.txt” with contents “test”:</source>
          <target state="translated">以下的簡單設定會建立有內容 “test” 的檔案 “test.txt”：</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source>If we compile and then execute the configuration with the –whatif switch, the output is telling us exactly what would happen when we run the configuration.</source>
          <target state="translated">如果編譯後以 –whatif 參數執行設定，輸出就會告訴我們執行設定時所發生的確切狀況。</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source>The configuration itself however was not executed (test.txt file was not created).</source>
          <target state="translated">但設定本身並未執行 (未建立 test.txt 檔案)。</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source>This list is not exhaustive, but it covers many important issues which can be encountered while designing, developing and testing DSC resources.</source>
          <target state="translated">這不是完整詳盡的清單，但涵蓋了許多在設計、開發和測試 DSC 資源時所遇到的重要問題。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>