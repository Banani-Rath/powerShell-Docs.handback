<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-tw">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-56a7a5e" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">8849fb46853f12318dd34781d07085419737d196</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">wmf\5.0\odata_overview.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions" />
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">71a039bc5624dab58f92899f9188b46004c5b290</xliffext:olskeletonhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Generate PowerShell Cmdlets based on OData Endpoint</source>
          <target state="translated">根據 OData 端點產生 PowerShell Cmdlet</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Generate Windows PowerShell cmdlets based on an OData endpoint</source>
          <target state="translated">根據 OData 端點產生 Windows PowerShell Cmdlet</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Export-ODataEndpointProxy<ept id="p1">**</ept> is a cmdlet that generates a set of Windows PowerShell cmdlets based on the functionality exposed by a given OData endpoint.</source>
          <target state="translated"><bpt id="p1">**</bpt>Export-ODataEndpointProxy<ept id="p1">**</ept> 是 Cmdlet，它會根據指定的 OData 端點所公開的功能產生一組 Windows PowerShell Cmdlet。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>The following example shows how to use this new cmdlet:</source>
          <target state="translated">下例示範如何使用這個新的 Cmdlet：</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Basic use case of Export-ODataEndpointProxy</source>
          <target state="translated">Export-ODataEndpointProxy 基本使用案例</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>There are still parts of key use cases in development for this functionality, including, but not limited to:</source>
          <target state="translated">這項功能仍有部分主要使用案例仍在開發中，包括但不限於：</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Associations</source>
          <target state="translated">關聯</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Passing streams</source>
          <target state="translated">傳遞資料流</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Generate Windows PowerShell cmdlets based on an OData endpoint with ODataUtils</source>
          <target state="translated">根據具有 ODataUtils 的 OData 端點產生 Windows PowerShell Cmdlet</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The ODataUtils module allows generation of Windows PowerShell cmdlets from REST endpoints that support OData.</source>
          <target state="translated">ODataUtils 模組可以從支援 OData 的 REST 端點產生 Windows PowerShell Cmdlet。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>The following incremental enhancements are in the Microsoft.PowerShell.ODataUtils Windows PowerShell module.</source>
          <target state="translated">下列的累加增強功能位在 Microsoft.PowerShell.ODataUtils Windows PowerShell 模組中。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Channel additional information from server-side endpoint to client side.</source>
          <target state="translated">從伺服器端端點到用戶端的通道其他資訊。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Client-side paging support</source>
          <target state="translated">用戶端的分頁支援</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Server-side filtering by using the -Select parameter</source>
          <target state="translated">使用 -Select 參數進行伺服器端篩選</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Support for web request headers</source>
          <target state="translated">Web 要求標頭的支援</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>The proxy cmdlets generated by the Export-ODataEndPointProxy cmdlet provide additional information (not mentioned in the $metadata used during the client-side proxy generation) from the server side OData endpoint on the Information stream (a new Windows PowerShell 5.0 feature).</source>
          <target state="translated">Export-ODataEndPointProxy Cmdlet 產生的 Proxy Cmdlet 提供伺服器端 OData 端點資訊資料流 (新的 Windows PowerShell 5.0 功能) 的其他資訊 (用戶端 Proxy 產生期間所使用的 $metadata 中未提及)。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Here is an example of how to get that information.</source>
          <target state="translated">下例為取得這項資訊的方法。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>You can get the records from the server side in batches by using client-side paging support.</source>
          <target state="translated">您可以使用用戶端的分頁支援，從批次的伺服器端取得記錄。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>This is useful when you must get a large amount of data from the server over the network.</source>
          <target state="translated">當您必須透過網路從伺服器取得大量資料時，這非常有用。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>The generated proxy cmdlets support the –Select parameter which you can use as a filter to receive only the record properties that the client needs.</source>
          <target state="translated">產生的 Proxy Cmdlet 支援 –Select 參數，這可用為篩選條件，只接收用戶端需要的記錄屬性。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>This reduces the amount of data that is transferred over the network, because the filtering occurs on the server side.</source>
          <target state="translated">因為篩選發生在伺服器端，所以這會減少透過網路傳送的資料量。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>The Export-ODataEndpointProxy cmdlet, and the proxy cmdlets generated by it, now support the Headers parameter (supply values as a hash table), which you can use to channel any additional information that is expected by the server-side OData endpoint.</source>
          <target state="translated">Export-ODataEndpointProxy Cmdlet 和它產生的 Proxy Cmdlet，現在支援標頭參數 (提供值當做雜湊表)，可用來傳輸伺服器端 OData 端點所預期的任何其他資訊。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>In the following example, you can channel a Subscription key through Headers for services that are expecting a Subscription key for authentication.</source>
          <target state="translated">在下列範例中，您可以透過期待驗證訂閱金鑰的服務標頭傳輸訂閱金鑰。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>