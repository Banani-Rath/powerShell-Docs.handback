<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-tw">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-1c394fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1f63e479588ed068ed9d8b09d13552caa1214aa0</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">reference\5.0\Microsoft.PowerShell.Core\Export-ModuleMember.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions" />
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">72498595ba0db4f77f15912449b585f5dd4d8a2c</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">a66bfa8a393251394d600c416f5fc9a84b5299a3</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>powershell, cmdlet</source>
          <target state="translated">powershell 指令程式</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Export-ModuleMember</source>
          <target state="translated">Export-ModuleMember</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Export-ModuleMember</source>
          <target state="translated">Export-ModuleMember</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>SYNOPSIS</source>
          <target state="translated">概要</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Specifies the module members that are exported.</source>
          <target state="translated">指定要匯出的模組成員。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>SYNTAX</source>
          <target state="translated">語法</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>DESCRIPTION</source>
          <target state="translated">描述</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>Export-ModuleMember<ept id="p1">**</ept> cmdlet specifies the module members that are exported from a script module (.psm1) file, or from a dynamic module created by using the New-Module cmdlet.</source>
          <target state="translated"> <bpt id="p1">**</bpt>Export-modulemember<ept id="p1">**</ept> 指令程式可指定從指令碼模組 (.psm1) 檔案，或從使用 New-module cmdlet 建立的動態模組匯出的模組成員。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Module members include cmdlets, functions, variables, and aliases.</source>
          <target state="translated">模組成員包括 cmdlet、 函數、 變數和別名。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>This cmdlet can be used only in a script module file or a dynamic module.</source>
          <target state="translated">此 Cmdlet 只能用在指令碼模組檔案或動態模組中。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>If a script module does not include an <bpt id="p1">**</bpt>Export-ModuleMember<ept id="p1">**</ept> command, the functions in the script module are exported, but the variables and aliases are not.</source>
          <target state="translated">如果指令碼模組未包含 <bpt id="p1">**</bpt>Export-modulemember<ept id="p1">**</ept> 命令，匯出指令碼模組中的函式，但不變數和別名。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>When a script module includes <bpt id="p1">**</bpt>Export-ModuleMember<ept id="p1">**</ept> commands, only the members specified in the <bpt id="p2">**</bpt>Export-ModuleMember<ept id="p2">**</ept> commands are exported.</source>
          <target state="translated">當指令碼模組包含 <bpt id="p1">**</bpt>Export-modulemember<ept id="p1">**</ept> 用命令中指定的成員 <bpt id="p2">**</bpt>Export-modulemember<ept id="p2">**</ept> 不會匯出命令。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>You can also use <bpt id="p1">**</bpt>Export-ModuleMember<ept id="p1">**</ept> to suppress or export members that the script module imports from other modules.</source>
          <target state="translated">您也可以使用 <bpt id="p1">**</bpt>Export-modulemember<ept id="p1">**</ept> 來抑制或匯出指令碼] 模組會從其他模組匯入的成員。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">**</bpt>Export-ModuleMember<ept id="p1">**</ept> command is optional, but it is a best practice.</source>
          <target state="translated"> <bpt id="p1">**</bpt>Export-modulemember<ept id="p1">**</ept> 命令是選擇性的但最佳作法。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Even if the command confirms the default values, it demonstrates the intention of the module author.</source>
          <target state="translated">即使命令已確認預設值，它仍會示範模組作者的意圖。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>EXAMPLES</source>
          <target state="translated">範例</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Example 1: Export aliases and functions in a script module</source>
          <target state="translated">範例 1︰ 匯出別名及指令碼模組中的函式</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>This command exports the aliases defined in the script module, together with the functions defined in the script module.</source>
          <target state="translated">此命令會匯出指令碼] 模組，以及指令碼] 模組中定義的函數中定義的別名。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>To export the aliases, which are not exported by default, you must also explicitly specify the functions.</source>
          <target state="translated">如果要匯出預設不會匯出的別名，您也必須明確地指定函式。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Otherwise, the cmdlet exports only the aliases.</source>
          <target state="translated">否則，此指令程式匯出的別名。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Example 2: Export specific aliases and functions</source>
          <target state="translated">範例 2︰ 匯出特定的別名和函式</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>This command exports three aliases and three functions defined in the script module.</source>
          <target state="translated">此命令匯出指令碼模組中定義的三個別名與三個函式。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>You can use this command format to specify the names of module members.</source>
          <target state="translated">您可以使用此命令格式來指定模組成員的名稱。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Example 3: Export no members</source>
          <target state="translated">範例 3︰ 匯出沒有成員</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>This command specifies that no members defined in the script module are exported.</source>
          <target state="translated">此命令指定不要匯出指令碼模組中定義的任何成員。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>This command prevents the module members from being exported, but it does not hide the members.</source>
          <target state="translated">此命令可防止匯出模組成員，但是不會隱藏成員。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Users can read and copy module members or use the call operator (&amp;) to invoke module members that are not exported.</source>
          <target state="translated">使用者可以讀取和複製模組成員，或使用呼叫運算子 (&amp;) 來呼叫不會匯出的模組成員。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Example 4: Export a specific variable</source>
          <target state="translated">範例 4︰ 匯出特定變數</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>This command exports only the $increment variable from the script module.</source>
          <target state="translated">此命令只會從指令碼模組匯出 $increment 變數。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>No other members are exported.</source>
          <target state="translated">不會匯出其他成員。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>If you want to export a variable, in addition to exporting the functions in a module, the <bpt id="p1">**</bpt>Export-ModuleMember<ept id="p1">**</ept> command must include the names of all of the functions and the name of the variable.</source>
          <target state="translated">如果您想要匯出的變數，除了匯出的函式在模組中， <bpt id="p1">**</bpt>Export-modulemember<ept id="p1">**</ept> 命令必須包含所有函式和變數名稱的名稱。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Example 5: Multiple export commands</source>
          <target state="translated">範例 5︰ 多個匯出命令</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>These commands show how multiple <bpt id="p1">**</bpt>Export-ModuleMember<ept id="p1">**</ept> commands are interpreted in a script module (.psm1) file.</source>
          <target state="translated">這些命令示範如何在多個 <bpt id="p1">**</bpt>Export-modulemember<ept id="p1">**</ept> 命令解譯指令碼模組 (.psm1) 檔案中。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>These commands create three functions and one alias, and then they export two of the functions and the alias.</source>
          <target state="translated">這些命令建立三個函式和一個別名，接著它們會匯出兩個函式和別名。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Without the <bpt id="p1">**</bpt>Export-ModuleMember<ept id="p1">**</ept> commands, all three of the functions would be exported, but the alias would not be exported.</source>
          <target state="translated">不含 <bpt id="p1">**</bpt>Export-modulemember<ept id="p1">**</ept> 命令，則會匯出三個函式，但不是會匯出別名。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>With the <bpt id="p1">**</bpt>Export-ModuleMember<ept id="p1">**</ept> commands, only the <bpt id="p2">**</bpt>Get-Test<ept id="p2">**</ept> and <bpt id="p3">**</bpt>Start-Test<ept id="p3">**</ept> functions and the STT alias are exported.</source>
          <target state="translated">使用 <bpt id="p1">**</bpt>Export-modulemember<ept id="p1">**</ept> 命令，僅 <bpt id="p2">**</bpt>Get-test<ept id="p2">**</ept> 和 <bpt id="p3">**</bpt>開始測試<ept id="p3">**</ept> 匯出函式及 STT 別名。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Example 6: Export members in a dynamic module</source>
          <target state="translated">範例 6︰ 匯出動態模組中的成員</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>This command shows how to use Export-ModuleMember in a dynamic module that is created by using the <bpt id="p1">**</bpt>New-Module<ept id="p1">**</ept> cmdlet.</source>
          <target state="translated">此命令會顯示如何建立使用動態模組中使用 Export-modulemember <bpt id="p1">**</bpt>New-module<ept id="p1">**</ept> 指令程式。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>In this example, <bpt id="p1">**</bpt>Export-ModuleMember<ept id="p1">**</ept> is used to export both the Hi alias and the <bpt id="p2">**</bpt>SayHello<ept id="p2">**</ept> function in the dynamic module.</source>
          <target state="translated">在此範例中， <bpt id="p1">**</bpt>Export-modulemember<ept id="p1">**</ept> 用來匯出 Hi 別名和 <bpt id="p2">**</bpt>SayHello<ept id="p2">**</ept> 動態模組中的函式。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Example 7: Declare and export a function in a single command</source>
          <target state="translated">範例 7︰ 宣告和匯出單一命令中的函式</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>This example includes a function named <bpt id="p1">**</bpt>export<ept id="p1">**</ept> that declares a function or creates a variable, and then writes an <bpt id="p2">**</bpt>Export-ModuleMember<ept id="p2">**</ept> command for the function or variable.</source>
          <target state="translated">這個範例包含名為函式 <bpt id="p1">**</bpt>匯出<ept id="p1">**</ept> ，用於將函式宣告或建立變數，並再寫入 <bpt id="p2">**</bpt>Export-modulemember<ept id="p2">**</ept> 命令函式或變數。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>This lets you declare and export a function or variable in a single command.</source>
          <target state="translated">這可讓您宣告和匯出單一命令中的函式或變數。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>To use the <bpt id="p1">**</bpt>export<ept id="p1">**</ept> function, include it in your script module.</source>
          <target state="translated">若要使用 <bpt id="p1">**</bpt>匯出<ept id="p1">**</ept> 函式，它包含在指令碼模組。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>To export a function, type <ph id="ph1">`export`</ph> before the <bpt id="p1">**</bpt>Function<ept id="p1">**</ept> keyword.</source>
          <target state="translated">若要匯出的函式，請輸入 <ph id="ph1">`export`</ph> 之前 <bpt id="p1">**</bpt>函式<ept id="p1">**</ept> 關鍵字。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>To export a variable, use the following format to declare the variable and set its value:</source>
          <target state="translated">如果要匯出變數，請使用下列格式來宣告變數並設定其值：</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>The commands in the example show the correct format.</source>
          <target state="translated">此範例中的命令會顯示正確的格式。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>In this example, only the <bpt id="p1">**</bpt>New-Test<ept id="p1">**</ept> function and the $Interval variable are exported.</source>
          <target state="translated">在此範例中，只有 <bpt id="p1">**</bpt>New-test<ept id="p1">**</ept> 函式和 $Interval 變數都會匯出。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>PARAMETERS</source>
          <target state="translated">參數</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>-Alias</source>
          <target state="translated">別名</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Specifies the aliases that are exported from the script module file.</source>
          <target state="translated">指定從指令碼模組檔案匯出的別名。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Enter the alias names.</source>
          <target state="translated">輸入別名名稱。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Wildcard characters are permitted.</source>
          <target state="translated">允許使用萬用字元。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>-Cmdlet</source>
          <target state="translated">Cmdlet</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Specifies the cmdlets that are exported from the script module file.</source>
          <target state="translated">指定從指令碼模組檔案匯出的 Cmdlet。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Enter the cmdlet names.</source>
          <target state="translated">輸入 Cmdlet 名稱。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>Wildcard characters are permitted.</source>
          <target state="translated">允許使用萬用字元。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>You cannot create cmdlets in a script module file, but you can import cmdlets from a binary module into a script module and re-export them from the script module.</source>
          <target state="translated">您無法在指令碼模組檔案中建立 Cmdlet，但可將二進位模組中的 Cmdlet 匯入指令碼模組，然後從指令碼模組重新匯出它們。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>-Function</source>
          <target state="translated">式函</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>Specifies the functions that are exported from the script module file.</source>
          <target state="translated">指定從指令碼模組檔案匯出的函式。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>Enter the function names.</source>
          <target state="translated">輸入函式名稱。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>Wildcard characters are permitted.</source>
          <target state="translated">允許使用萬用字元。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>You can also pipe function name strings to <bpt id="p1">**</bpt>Export-ModuleMember<ept id="p1">**</ept>.</source>
          <target state="translated">您也可以使用管線函式名稱的字串以 <bpt id="p1">**</bpt>Export-modulemember<ept id="p1">**</ept>。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>-Variable</source>
          <target state="translated">變數</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>Specifies the variables that are exported from the script module file.</source>
          <target state="translated">指定從指令碼模組檔案匯出的變數。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>Enter the variable names, without a dollar sign.</source>
          <target state="translated">輸入變數的名稱，沒有貨幣符號。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>Wildcard characters are permitted.</source>
          <target state="translated">允許使用萬用字元。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>CommonParameters</source>
          <target state="translated">CommonParameters</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutVariable, -OutBuffer, -PipelineVariable, -Verbose, -WarningAction, and -WarningVariable.</source>
          <target state="translated">這個 cmdlet 支援一般參數:-偵錯、-ErrorAction、-ErrorVariable、-InformationAction-InformationVariable、-OutVariable、-OutBuffer、-PipelineVariable、-Verbose、-WarningAction 以及-WarningVariable。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>For more information, see about_CommonParameters (http://go.microsoft.com/fwlink/?LinkID=113216).</source>
          <target state="translated">如需詳細資訊，請參閱 about_CommonParameters (http://go.microsoft.com/fwlink/?LinkID=113216)。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>INPUTS</source>
          <target state="translated">輸入</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>System.String</source>
          <target state="translated">System.String</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>You can pipe function name strings to this cmdlet.</source>
          <target state="translated">您可以透過管道傳送到此指令程式的函式名稱字串。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>OUTPUTS</source>
          <target state="translated">輸出</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>None</source>
          <target state="translated">無</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>This cmdlet does not generate any output.</source>
          <target state="translated">此 Cmdlet 不會產生任何輸出。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>NOTES</source>
          <target state="translated">附註</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>To exclude a member from the list of exported members, add an <bpt id="p1">**</bpt>Export-ModuleMember<ept id="p1">**</ept> command that lists all other members but omits the member that you want to exclude.</source>
          <target state="translated">若要匯出的成員清單中排除的成員，請新增 <bpt id="p1">**</bpt>Export-modulemember<ept id="p1">**</ept> 命令，列出所有其他成員，但是省略您想要排除的成員。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>RELATED LINKS</source>
          <target state="translated">相關的連結</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>Get-Module</source>
          <target state="translated">Get-Module</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>Import-Module</source>
          <target state="translated">Import-Module</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>Remove-Module</source>
          <target state="translated">Remove-Module</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>about_Modules</source>
          <target state="translated">about_Modules</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>