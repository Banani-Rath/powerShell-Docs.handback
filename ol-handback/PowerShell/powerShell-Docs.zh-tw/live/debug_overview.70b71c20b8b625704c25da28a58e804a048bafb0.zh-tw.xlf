<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-tw">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-db30baf" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">0660867e6e7c7a93a8ca80d76f22db7fd86f8826</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">wmf\debug_overview.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions" />
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Improvements in PowerShell Script Debugging</source>
          <target state="translated">PowerShell 指令碼偵錯的增強功能</target>         
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>A number of improvements were made in PowerShell 5.0 to enhance the debugging experience:</source>
          <target state="translated">PowerShell 5.0 已改善數項功能，以增強偵錯經驗︰</target>         
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Break All</source>
          <target state="translated">全部中斷</target>         
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>The PowerShell console and Windows PowerShell ISE now allow you to break into the debugger for running scripts.</source>
          <target state="translated">PowerShell 主控台和 Windows PowerShell ISE 現在可讓您開始偵錯工具執行指令碼。</target>         
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>This works in both local and remote sessions.</source>
          <target state="translated">這在本機和遠端工作階段皆適用。</target>         
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>In the console, press <bpt id="p1">**</bpt>Ctrl+Break<ept id="p1">**</ept>.</source>
          <target state="translated">在主控台中，按 <bpt id="p1">**</bpt>Ctrl+Break<ept id="p1">**</ept>。</target>         
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>In ISE, press <bpt id="p1">**</bpt>Ctrl+B<ept id="p1">**</ept>, or use the <bpt id="p2">**</bpt>Debug -&gt; Break All<ept id="p2">**</ept> menu command.</source>
          <target state="translated">在 ISE 中，按 <bpt id="p1">**</bpt>Ctrl+B<ept id="p1">**</ept>，或使用 <bpt id="p2">**</bpt>[偵錯] -&gt; [全部中斷]<ept id="p2">**</ept> 功能表命令。</target>         
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Remote debugging and remote file editing in Windows PowerShell ISE</source>
          <target state="translated">Windows PowerShell ISE 的遠端偵錯和遠端檔案編輯</target>         
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Windows PowerShell ISE now lets you open and edit files in a remote session by running the PSEdit command.</source>
          <target state="translated">Windows PowerShell ISE 現在可讓您執行 PSEdit 命令，在遠端工作階段中開啟及編輯檔案。</target>         
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>For example, you can open a file for editing from the command line in a remote session as follows:</source>
          <target state="translated">例如，您可以開啟檔案從遠端工作階段的命令列中進行編輯，如下所示︰</target>         
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>In addition, you can now edit and save changes in a remote file that is automatically opened in Windows PowerShell ISE when you hit a breakpoint.</source>
          <target state="translated">此外，您現在可以編輯並儲存遠端檔案的變更，當您點擊中斷點時遠端檔案就會自動在 Windows PowerShell ISE 中開啟。</target>         
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Now, you can debug a script file that is running on a remote computer, edit the file to fix an error, and then rerun the modified script.</source>
          <target state="translated">現在，您可以偵錯在遠端電腦上執行的指令碼檔案、編輯檔案以修正錯誤，然後重新執行修改過的指令碼。</target>         
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Advanced Script Debugging</source>
          <target state="translated">進階指令碼偵錯</target>         
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>There are new, advanced debugging features that let you attach to any local computer process that has loaded Windows PowerShell, and debug arbitrary runspaces in that process.</source>
          <target state="translated">有新的進階偵錯功能，可讓您附加至任何已載入 Windows PowerShell 的本機電腦處理程序，並偵錯該處理程序的任意 Runspace。</target>         
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Runspace Debugging</source>
          <target state="translated">Runspace 偵錯</target>         
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>New cmdlets have been added that let you list current runspaces in a process, and attach the Windows PowerShell console or ISE debugger to that runspace for script debugging:</source>
          <target state="translated">已加入新的 Cmdlet，可讓您列出處理程序目前的 Runspace，並將 Windows PowerShell 主控台或 ISE 偵錯工具附加至指令碼偵錯的 Runspace：</target>         
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Get-Runspace</source>
          <target state="translated">Get-Runspace</target>         
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Debug-Runspace</source>
          <target state="translated">Debug-Runspace</target>         
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Enable-RunspaceDebug</source>
          <target state="translated">Enable-RunspaceDebug</target>         
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Disable-RunspaceDebug</source>
          <target state="translated">Disable-RunspaceDebug</target>         
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Get-RunspaceDebug</source>
          <target state="translated">Get-RunspaceDebug</target>         
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Attach to Process hosting PowerShell</source>
          <target state="translated">附加至裝載 PowerShell 的處理程序</target>         
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>You can now attach to any computer process that has Windows PowerShell loaded.</source>
          <target state="translated">您現在可以附加至已載入 Windows PowerShell 的任何電腦處理程序。</target>         
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>You do this by entering into an interactive session with the process, similarly to how you enter into an interactive remote session by running the Enter-PSSession cmdlet:</source>
          <target state="translated">方法是：進入有此處理程序的互動式工作階段，類似執行 Enter-PSSession Cmdlet 進入互動遠端工作階段的方式：</target>         
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Enter-PSHostProcess</source>
          <target state="translated">Enter-PSHostProcess</target>         
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Exit-PSHostProcess</source>
          <target state="translated">Exit-PSHostProcess</target>         
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>