<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-tw">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-1c394fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">41e75dbff59e54a025a7d9256c6cd8648caf119d</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">reference\5.0\Microsoft.PowerShell.Core\Import-Module.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions" />
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">2253a655f4f1d939f2938bcd7e894e0334ea3264</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1f3e30e9af1d411f00ad13f04c9d41d048cbd99c</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>powershell, cmdlet</source>
          <target state="translated">powershell 指令程式</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Import-Module</source>
          <target state="translated">Import-Module</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Import-Module</source>
          <target state="translated">Import-Module</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>SYNOPSIS</source>
          <target state="translated">概要</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Adds modules to the current session.</source>
          <target state="translated">將模組新增到目前的工作階段。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>SYNTAX</source>
          <target state="translated">語法</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Name (Default)</source>
          <target state="translated">名稱 （預設值）</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>PSSession</source>
          <target state="translated">PSSession</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>CimSession</source>
          <target state="translated">CimSession</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>FullyQualifiedName</source>
          <target state="translated">FullyQualifiedName</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>FullyQualifiedNameAndPSSession</source>
          <target state="translated">FullyQualifiedNameAndPSSession</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Assembly</source>
          <target state="translated">組件</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>ModuleInfo</source>
          <target state="translated">ModuleInfo</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>DESCRIPTION</source>
          <target state="translated">描述</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>Import-Module<ept id="p1">**</ept> cmdlet adds one or more modules to the current session.</source>
          <target state="translated"> <bpt id="p1">**</bpt>匯入模組<ept id="p1">**</ept> 指令程式會在目前工作階段中加入一個或多個模組。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>The modules that you import must be installed on the local computer or a remote computer.</source>
          <target state="translated">您匯入的模組必須安裝在本機電腦或遠端電腦上。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Starting in Windows PowerShell 3.0, installed modules are automatically imported to the session when you use any commands or providers in the module.</source>
          <target state="translated">從 Windows PowerShell 3.0 開始，則會自動匯入到當您使用任何命令或提供者在模組中的工作階段中安裝的模組。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>However, you can still use the <bpt id="p1">**</bpt>Import-Module<ept id="p1">**</ept> command to import a module and you can enable and disable automatic module importing by using the $PSModuleAutoloadingPreference preference variable.</source>
          <target state="translated">不過，您仍然可以使用 <bpt id="p1">**</bpt>匯入模組<ept id="p1">**</ept> 命令匯入模組，而且您可以啟用和停用自動模組匯入使用 $PSModuleAutoloadingPreference 喜好設定變數。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>For more information about modules, see about_Modules (http://go.microsoft.com/fwlink/?LinkID=144311).</source>
          <target state="translated">如需模組的詳細資訊，請參閱 about_Modules (http://go.microsoft.com/fwlink/?LinkID=144311)。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>For more information about the $PSModuleAutoloadingPreference variable, see about_Preference_Variables (http://go.microsoft.com/fwlink/?LinkID=113248).</source>
          <target state="translated">如需 $PSModuleAutoloadingPreference 變數的詳細資訊，請參閱 about_Preference_Variables (http://go.microsoft.com/fwlink/?LinkID=113248)。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>A module is a package that contains members that can be used in Windows PowerShell.</source>
          <target state="translated">模組是包含成員可以使用 Windows PowerShell 中的封裝。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Members include cmdlets, providers, scripts, functions, variables, and other tools and files.</source>
          <target state="translated">成員包括 cmdlet、 提供者、 指令碼、 函數、 變數和其他工具和檔案。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>After a module is imported, you can use the module members in your session.</source>
          <target state="translated">在匯入模組之後，您可以在工作階段中使用模組成員。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>To import a module, use the <bpt id="p1">*</bpt>Name<ept id="p1">*</ept>, <bpt id="p2">*</bpt>Assembly<ept id="p2">*</ept>, <bpt id="p3">*</bpt>ModuleInfo<ept id="p3">*</ept>, <bpt id="p4">*</bpt>MinimumVersion<ept id="p4">*</ept> and <bpt id="p5">*</bpt>RequiredVersion<ept id="p5">*</ept> parameters to identify the module to import.</source>
          <target state="translated">若要匯入模組，請使用 <bpt id="p1">*</bpt>名稱<ept id="p1">*</ept>, ，<bpt id="p2">*</bpt>組件<ept id="p2">*</ept>, ，<bpt id="p3">*</bpt>ModuleInfo<ept id="p3">*</ept>, ，<bpt id="p4">*</bpt>MinimumVersion<ept id="p4">*</ept> 和 <bpt id="p5">*</bpt>RequiredVersion<ept id="p5">*</ept> 參數來識別要匯入模組。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>By default, <bpt id="p1">**</bpt>Import-Module<ept id="p1">**</ept> imports all members that the module exports, but you can use the <bpt id="p2">*</bpt>Alias<ept id="p2">*</ept>, <bpt id="p3">*</bpt>Function<ept id="p3">*</ept>, <bpt id="p4">*</bpt>Cmdlet<ept id="p4">*</ept>, and <bpt id="p5">*</bpt>Variable<ept id="p5">*</ept> parameters to restrict the members that are imported.</source>
          <target state="translated">根據預設， <bpt id="p1">**</bpt>匯入模組<ept id="p1">**</ept> 匯入的所有成員也會匯出模組，但您可以使用 <bpt id="p2">*</bpt>別名<ept id="p2">*</ept>, ，<bpt id="p3">*</bpt>函式<ept id="p3">*</ept>, ，<bpt id="p4">*</bpt>Cmdlet<ept id="p4">*</ept>, ，和 <bpt id="p5">*</bpt>變數<ept id="p5">*</ept> 參數來限制匯入的成員。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>You can also use the <bpt id="p1">*</bpt>NoClobber<ept id="p1">*</ept> parameter to prevent <bpt id="p2">**</bpt>Import-Module<ept id="p2">**</ept> from importing members that have the same names as members in the current session.</source>
          <target state="translated">您也可以使用 <bpt id="p1">*</bpt>NoClobber<ept id="p1">*</ept> 參數，以防止 <bpt id="p2">**</bpt>匯入模組<ept id="p2">**</ept> 從匯入目前工作階段中有相同的名稱，做為成員的成員。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Import-Module<ept id="p1">**</ept> imports a module only into the current session.</source>
          <target state="translated"><bpt id="p1">**</bpt>匯入模組<ept id="p1">**</ept> 匯入至目前的工作階段的模組。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>To import the module into all sessions, add an <bpt id="p1">**</bpt>Import-Module<ept id="p1">**</ept> command to your Windows PowerShell profile.</source>
          <target state="translated">若要將模組匯入所有工作階段中，加入 <bpt id="p1">**</bpt>匯入模組<ept id="p1">**</ept> 命令到您的 Windows PowerShell 設定檔。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>For more information about profiles, see about_Profiles (http://go.microsoft.com/fwlink/?LinkID=113729).</source>
          <target state="translated">如需有關設定檔的詳細資訊，請參閱 about_Profiles (http://go.microsoft.com/fwlink/?LinkID=113729)。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Starting in Windows PowerShell 3.0, you can use <bpt id="p1">**</bpt>Import-Module<ept id="p1">**</ept> to import Common Information Model (CIM) modules, in which the cmdlets are defined in Cmdlet Definition XML (CDXML) files.</source>
          <target state="translated">從 Windows PowerShell 3.0 開始，您可以使用 <bpt id="p1">**</bpt>匯入模組<ept id="p1">**</ept> 匯入通用訊息模型 (CIM) 模組、 cmdlet 定義於 「 Cmdlet 定義 XML (CDXML) 」 檔案中。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>This feature allows you to use cmdlets that are implemented in non-managed code assemblies, such as those written in C++.</source>
          <target state="translated">這個功能讓您能夠使用在不受管理程式碼組件中實作的 Cmdlet，例如使用 C++ 撰寫的組件。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>With these new features, <bpt id="p1">**</bpt>Import-Module<ept id="p1">**</ept> cmdlet becomes a primary tool for managing heterogeneous enterprises that include computers that run the Windows operating system and computers that are running other operating systems.</source>
          <target state="translated">使用這些新功能， <bpt id="p1">**</bpt>匯入模組<ept id="p1">**</ept> cmdlet 在針對包含執行 Windows 作業系統和電腦的電腦的管理異質企業執行其他作業系統，就會變成主要工具。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>To manage remote computers that run the Windows operating system that have Windows PowerShell and Windows PowerShell remoting enabled, create a <bpt id="p1">**</bpt>PSSession<ept id="p1">**</ept> on the remote computer and then use the <bpt id="p2">*</bpt>PSSession<ept id="p2">*</ept> parameter of <bpt id="p3">**</bpt>Get-Module<ept id="p3">**</ept> to get the Windows PowerShell modules in the <bpt id="p4">**</bpt>PSSession<ept id="p4">**</ept>.</source>
          <target state="translated">若要管理遠端電腦執行 Windows 作業系統的 Windows PowerShell 和 Windows PowerShell 遠端功能，建立 <bpt id="p1">**</bpt>PSSession<ept id="p1">**</ept> 在遠端電腦，然後使用 <bpt id="p2">*</bpt>PSSession<ept id="p2">*</ept> 參數 <bpt id="p3">**</bpt>Get-module<ept id="p3">**</ept> 取得 Windows PowerShell 模組中 <bpt id="p4">**</bpt>PSSession<ept id="p4">**</ept>。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>When you import the modules, and then use the imported commands in the current session, the commands run implicitly in the <bpt id="p1">**</bpt>PSSession<ept id="p1">**</ept> on the remote computer.</source>
          <target state="translated">當您匯入模組，然後使用目前的工作階段中的 [匯入的命令，命令會執行隱含地在 <bpt id="p1">**</bpt>PSSession<ept id="p1">**</ept> 遠端電腦上。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>You can use this strategy to manage the remote computer.</source>
          <target state="translated">您可以使用這個策略來管理遠端電腦。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>You can use a similar strategy to manage computers that do not have Windows PowerShell remoting enabled, including computers that are not running the Windows operating system, and Windows computers that have Windows PowerShell, but do not have Windows PowerShell remoting enabled.</source>
          <target state="translated">您可以使用類似的策略來管理未啟用 Windows PowerShell 遠端啟用，包括未執行 Windows 作業系統的電腦和 Windows PowerShell 但未啟用 Windows PowerShell 遠端功能的 Windows 電腦的電腦。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Start by creating a CIM session on the remote computer, which is a connection to Windows Management Instrumentation (WMI) on the remote computer.</source>
          <target state="translated">開始建立 CIM 工作階段的遠端電腦上，也就是在遠端電腦上的 Windows Management Instrumentation (WMI) 連線。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Then use the <bpt id="p1">*</bpt>CIMSession<ept id="p1">*</ept> parameter of <bpt id="p2">**</bpt>Import-Module<ept id="p2">**</ept> to import CIM modules from the remote computer.</source>
          <target state="translated">然後使用 <bpt id="p1">*</bpt>CIMSession<ept id="p1">*</ept> 參數 <bpt id="p2">**</bpt>匯入模組<ept id="p2">**</ept> 從遠端電腦匯入 CIM 模組。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>When you import a CIM module and then run the imported commands, the commands run implicitly on the remote computer.</source>
          <target state="translated">當您匯入 CIM 模組然後執行匯入的命令時，命令會隱含地在遠端電腦上執行。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>You can use this WMI and CIM strategy to manage the remote computer.</source>
          <target state="translated">您可以使用這個 WMI 和 CIM 策略來管理遠端電腦。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>EXAMPLES</source>
          <target state="translated">範例</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Example 1: Import the members of a module into the current session</source>
          <target state="translated">範例 1︰ 匯入至目前的工作階段的模組的成員</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>This command imports the members of the <bpt id="p1">**</bpt>BitsTransfer<ept id="p1">**</ept> module into the current session.</source>
          <target state="translated">此命令會匯入的成員 <bpt id="p1">**</bpt>BitsTransfer<ept id="p1">**</ept> 到目前的工作階段的模組。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">*</bpt>Name<ept id="p1">*</ept> parameter name is optional and can be omitted.</source>
          <target state="translated"> <bpt id="p1">*</bpt>名稱<ept id="p1">*</ept> 是選擇性的而且可以省略參數名稱。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>By default, <bpt id="p1">**</bpt>Import-Module<ept id="p1">**</ept> does not generate any output when it imports a module.</source>
          <target state="translated">根據預設， <bpt id="p1">**</bpt>匯入模組<ept id="p1">**</ept> 匯入模組時，不會產生任何輸出。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>To request output, use the <bpt id="p1">*</bpt>PassThru<ept id="p1">*</ept> or <bpt id="p2">*</bpt>AsCustomObject<ept id="p2">*</ept> parameter, or the <bpt id="p3">*</bpt>Verbose<ept id="p3">*</ept> common parameter.</source>
          <target state="translated">若要要求輸出，請使用 <bpt id="p1">*</bpt>PassThru<ept id="p1">*</ept> 或 <bpt id="p2">*</bpt>AsCustomObject<ept id="p2">*</ept> 參數，或 <bpt id="p3">*</bpt>Verbose<ept id="p3">*</ept> 一般參數。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Example 2: Import all modules specified by the module path</source>
          <target state="translated">範例 2︰ 匯入所有模組的路徑所指定的模組</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>This command imports all available modules in the path specified by the PSModulePath environment variable ($env:PSModulePath) into the current session.</source>
          <target state="translated">此命令將 PSModulePath 環境變數 ($env:PSModulePath) 所指定之路徑中所有的可用模組匯入到目前的工作階段。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Example 3: Import the members of several modules into the current session</source>
          <target state="translated">範例 3︰ 數個模組成員匯入目前工作階段</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>These commands import the members of the <bpt id="p1">**</bpt>BitsTransfer<ept id="p1">**</ept> and <bpt id="p2">**</bpt>ServerManager<ept id="p2">**</ept> modules into the current session.</source>
          <target state="translated">這些命令匯入的成員 <bpt id="p1">**</bpt>BitsTransfer<ept id="p1">**</ept> 和 <bpt id="p2">**</bpt>ServerManager<ept id="p2">**</ept> 到目前的工作階段的模組。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>The first command uses the Get-Module cmdlet to get the <bpt id="p1">**</bpt>BitsTransfer<ept id="p1">**</ept> and <bpt id="p2">**</bpt>ServerManager<ept id="p2">**</ept> modules.</source>
          <target state="translated">第一個命令使用 Get-module cmdlet 取得 <bpt id="p1">**</bpt>BitsTransfer<ept id="p1">**</ept> 和 <bpt id="p2">**</bpt>ServerManager<ept id="p2">**</ept> 模組。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>It saves the objects in the $m variable.</source>
          <target state="translated">它會將物件儲存於 $m 變數中。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">*</bpt>ListAvailable<ept id="p1">*</ept> parameter is required when you are getting modules that are not yet imported into the session.</source>
          <target state="translated"> <bpt id="p1">*</bpt>ListAvailable<ept id="p1">*</ept> 參數是必要的當您要取得尚未不會匯入工作階段的模組。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>The second command uses the <bpt id="p1">*</bpt>ModuleInfo<ept id="p1">*</ept> parameter of <bpt id="p2">**</bpt>Import-Module<ept id="p2">**</ept> to import the modules into the current session.</source>
          <target state="translated">第二個命令會使用 <bpt id="p1">*</bpt>ModuleInfo<ept id="p1">*</ept> 參數 <bpt id="p2">**</bpt>匯入模組<ept id="p2">**</ept> 將模組匯入到目前的工作階段。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>These commands are equivalent to using a pipeline operator (|) to send the output of a <bpt id="p1">**</bpt>Get-Module<ept id="p1">**</ept> command to <bpt id="p2">**</bpt>Import-Module<ept id="p2">**</ept>.</source>
          <target state="translated">這些命令相當於使用管線運算子 (|) 的輸出傳送至 <bpt id="p1">**</bpt>Get-module<ept id="p1">**</ept> 命令 <bpt id="p2">**</bpt>匯入模組<ept id="p2">**</ept>。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>Example 4: Import all modules specified by a path</source>
          <target state="translated">範例 4︰ 指定匯入所有模組的路徑</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>This command uses an explicit path to identify the module to import.</source>
          <target state="translated">此命令會使用明確的路徑來識別要匯入的模組。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>It also uses the <bpt id="p1">*</bpt>Verbose<ept id="p1">*</ept> common parameter to get a list of the items imported from the module.</source>
          <target state="translated">它也會使用 <bpt id="p1">*</bpt>Verbose<ept id="p1">*</ept> 一般參數來取得從模組匯入的項目清單。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>Without the <bpt id="p1">*</bpt>Verbose<ept id="p1">*</ept>, <bpt id="p2">*</bpt>PassThru<ept id="p2">*</ept>, or <bpt id="p3">*</bpt>AsCustomObject<ept id="p3">*</ept> parameter, <bpt id="p4">**</bpt>Import-Module<ept id="p4">**</ept> does not generate any output when it imports a module.</source>
          <target state="translated">不含 <bpt id="p1">*</bpt>Verbose<ept id="p1">*</ept>, ，<bpt id="p2">*</bpt>PassThru<ept id="p2">*</ept>, ，或 <bpt id="p3">*</bpt>AsCustomObject<ept id="p3">*</ept> 參數， <bpt id="p4">**</bpt>匯入模組<ept id="p4">**</ept> 匯入模組時，不會產生任何輸出。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>Example 5: Restrict module members imported into a session</source>
          <target state="translated">範例 5︰ 限制匯入工作階段的模組成員</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>This example shows how to restrict the module members that are imported into the session and the effect of this command on the session.</source>
          <target state="translated">此範例顯示如何限制匯入到工作階段的模組成員，以及此命令在工作階段的效果。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>The first command imports only the <bpt id="p1">**</bpt>Add-BitsTransfer<ept id="p1">**</ept> and <bpt id="p2">**</bpt>Get-BitsTransfer<ept id="p2">**</ept> cmdlets from the <bpt id="p3">**</bpt>BitsTransfer<ept id="p3">**</ept> module.</source>
          <target state="translated">第一個命令只會匯入 <bpt id="p1">**</bpt>Add-bitstransfer<ept id="p1">**</ept> 和 <bpt id="p2">**</bpt>Get-bitstransfer<ept id="p2">**</ept> cmdlet 從 <bpt id="p3">**</bpt>BitsTransfer<ept id="p3">**</ept> 模組。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>The command uses the <bpt id="p1">*</bpt>Cmdlet<ept id="p1">*</ept> parameter to restrict the cmdlets that the module imports.</source>
          <target state="translated">此命令會使用 <bpt id="p1">*</bpt>Cmdlet<ept id="p1">*</ept> 參數來限制模組匯入的 cmdlet。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>You can also use the <bpt id="p1">*</bpt>Alias<ept id="p1">*</ept>, <bpt id="p2">*</bpt>Variable<ept id="p2">*</ept>, and <bpt id="p3">*</bpt>Function<ept id="p3">*</ept> parameters to restrict other members that a module imports.</source>
          <target state="translated">您也可以使用 <bpt id="p1">*</bpt>別名<ept id="p1">*</ept>, ，<bpt id="p2">*</bpt>變數<ept id="p2">*</ept>, ，和 <bpt id="p3">*</bpt>函式<ept id="p3">*</ept> 參數來限制模組匯入其他成員。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>The second command uses the Get-Module cmdlet to get the object that represents the <bpt id="p1">**</bpt>BitsTransfer<ept id="p1">**</ept> module.</source>
          <target state="translated">第二個命令使用 Get-module cmdlet 取得物件，代表 <bpt id="p1">**</bpt>BitsTransfer<ept id="p1">**</ept> 模組。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>ExportedCmdlets<ept id="p1">**</ept> property lists all of the cmdlets that the module exports, even when they were not all imported.</source>
          <target state="translated"> <bpt id="p1">**</bpt>ExportedCmdlets<ept id="p1">**</ept> 屬性會列出所有模組匯出，即使它們未全部匯入的 cmdlet。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>The third command uses the <bpt id="p1">*</bpt>Module<ept id="p1">*</ept> parameter of the Get-Command cmdlet to get the commands that were imported from the <bpt id="p2">**</bpt>BitsTransfer<ept id="p2">**</ept> module.</source>
          <target state="translated">第三個命令會使用 <bpt id="p1">*</bpt>模組<ept id="p1">*</ept> Get 命令指令程式，以取得從匯入的命令參數 <bpt id="p2">**</bpt>BitsTransfer<ept id="p2">**</ept> 模組。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>The results confirm that only the <bpt id="p1">**</bpt>Add-BitsTransfer<ept id="p1">**</ept> and <bpt id="p2">**</bpt>Get-BitsTransfer<ept id="p2">**</ept> cmdlets were imported.</source>
          <target state="translated">結果確認只有 <bpt id="p1">**</bpt>Add-bitstransfer<ept id="p1">**</ept> 和 <bpt id="p2">**</bpt>Get-bitstransfer<ept id="p2">**</ept> cmdlet 已匯入。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>Example 6: Import the members of a module and add a prefix</source>
          <target state="translated">範例 6︰ 匯入模組的成員，並加入前置詞</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>These commands import the <bpt id="p1">**</bpt>BitsTransfer<ept id="p1">**</ept> module into the current session, add a prefix to the member names, and then display the prefixed member names.</source>
          <target state="translated">這些命令匯入 <bpt id="p1">**</bpt>BitsTransfer<ept id="p1">**</ept> 到目前的工作階段的模組成員名稱中加入前置詞，然後顯示帶有前置詞的成員名稱。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>The first command uses the <bpt id="p1">**</bpt>Import-Module<ept id="p1">**</ept> cmdlet to import the <bpt id="p2">**</bpt>BitsTransfer<ept id="p2">**</ept> module.</source>
          <target state="translated">第一個命令使用 <bpt id="p1">**</bpt>匯入模組<ept id="p1">**</ept> cmdlet 來匯入 <bpt id="p2">**</bpt>BitsTransfer<ept id="p2">**</ept> 模組。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>It uses the <bpt id="p1">*</bpt>Prefix<ept id="p1">*</ept> parameter to add the PS prefix to all members that are imported from the module and the <bpt id="p2">*</bpt>PassThru<ept id="p2">*</ept> parameter to return a module object that represents the imported module.</source>
          <target state="translated">它會使用 <bpt id="p1">*</bpt>前置詞<ept id="p1">*</ept> 參數將 PS 前置詞加入至從模組匯入的所有成員和 <bpt id="p2">*</bpt>PassThru<ept id="p2">*</ept> 參數，以傳回代表匯入的模組的模組物件。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>The second command uses the <bpt id="p1">**</bpt>Get-Command<ept id="p1">**</ept> cmdlet to get the members that have been imported from the module.</source>
          <target state="translated">第二個命令會使用 <bpt id="p1">**</bpt>Get 命令<ept id="p1">**</ept> cmdlet 來取得已從模組匯入的成員。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>It uses the <bpt id="p1">*</bpt>Module<ept id="p1">*</ept> parameter to specify the module.</source>
          <target state="translated">它會使用 <bpt id="p1">*</bpt>模組<ept id="p1">*</ept> 參數來指定模組。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>The output shows that the module members were correctly prefixed.</source>
          <target state="translated">輸出會顯示已正確為模組成員加上前置詞。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>The prefix that you use applies only to the members in the current session.</source>
          <target state="translated">您使用的前置詞只適用於目前工作階段中的成員。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>It does not change the module.</source>
          <target state="translated">它不會變更模組。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>Example 7: Get and use a custom object</source>
          <target state="translated">範例 7︰ 取得和使用自訂物件</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>These commands demonstrate how to get and use the custom object that <bpt id="p1">**</bpt>Import-Module<ept id="p1">**</ept> returns.</source>
          <target state="translated">這些命令示範如何取得及使用自訂物件的 <bpt id="p1">**</bpt>匯入模組<ept id="p1">**</ept> 傳回。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>Custom objects include synthetic members that represent each of the imported module members.</source>
          <target state="translated">自訂物件包括代表每個匯入之模組成員的綜合成員。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>For example, the cmdlets and functions in a module are converted to script methods of the custom object.</source>
          <target state="translated">例如，模組中的 Cmdlet 和函式會轉換成自訂物件的指令碼方法。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>Custom objects are very useful in scripting.</source>
          <target state="translated">自訂物件在撰寫指令碼時非常有用。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>They are also useful when several imported objects have the same names.</source>
          <target state="translated">它們在有數個匯入的物件有相同名稱時也非常有用。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>Using the script method of an object is equivalent to specifying the fully qualified name of an imported member, including its module name.</source>
          <target state="translated">使用物件的指令碼方法相當於指定匯入成員的完整名稱，包括其模組名稱。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">*</bpt>AsCustomObject<ept id="p1">*</ept> parameter can be used only when importing a script module, so the first task is to determine which of the available modules is a script module.</source>
          <target state="translated"> <bpt id="p1">*</bpt>AsCustomObject<ept id="p1">*</ept> 參數可用時，才讓第一個工作是判斷哪些可用的模組匯入指令碼模組，指令碼模組。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>The first command uses the Get-Module cmdlet to get the available modules.</source>
          <target state="translated">第一個命令使用 Get-module cmdlet 取得可用的模組。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>The command uses a pipeline operator to pass the module objects to the Format-Table cmdlet, which lists the <bpt id="p1">**</bpt>Name<ept id="p1">**</ept> and <bpt id="p2">**</bpt>ModuleType<ept id="p2">**</ept> of each module in a table.</source>
          <target state="translated">命令使用管線運算子將模組物件傳送至 Format-table cmdlet，其中會列出 <bpt id="p1">**</bpt>名稱<ept id="p1">**</ept> 和 <bpt id="p2">**</bpt>ModuleType<ept id="p2">**</ept> 資料表中每個模組。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>The second command uses the <bpt id="p1">**</bpt>Import-Module<ept id="p1">**</ept> cmdlet to import the <bpt id="p2">**</bpt>PSDiagnostics<ept id="p2">**</ept> script module.</source>
          <target state="translated">第二個命令會使用 <bpt id="p1">**</bpt>匯入模組<ept id="p1">**</ept> cmdlet 來匯入 <bpt id="p2">**</bpt>PSDiagnostics<ept id="p2">**</ept> 指令碼] 模組。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>The command uses the <bpt id="p1">*</bpt>AsCustomObject<ept id="p1">*</ept> parameter to request a custom object and the <bpt id="p2">*</bpt>PassThru<ept id="p2">*</ept> parameter to return the object.</source>
          <target state="translated">此命令會使用 <bpt id="p1">*</bpt>AsCustomObject<ept id="p1">*</ept> 參數要求自訂物件和 <bpt id="p2">*</bpt>PassThru<ept id="p2">*</ept> 參數傳回的物件。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>The command saves the resulting custom object in the $a variable.</source>
          <target state="translated">命令會將產生的自訂物件儲存在 $a 變數中。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>The third command uses a pipeline operator to send the $a variable to the Get-Member cmdlet, which gets the properties and methods of the <bpt id="p1">**</bpt>PSCustomObject<ept id="p1">**</ept> in $a.</source>
          <target state="translated">第三個命令使用管線運算子將 $a 變數傳送至 Get-member 指令程式，它會取得的屬性和方法的 <bpt id="p1">**</bpt>PSCustomObject<ept id="p1">**</ept> 。</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>The output shows a <bpt id="p1">**</bpt>Show-Calendar<ept id="p1">**</ept> script method.</source>
          <target state="translated">輸出顯示 <bpt id="p1">**</bpt>Show-calendar<ept id="p1">**</ept> 指令碼方法。</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>The last command uses the <bpt id="p1">**</bpt>Show-Calendar<ept id="p1">**</ept> script method.</source>
          <target state="translated">最後一個命令使用 <bpt id="p1">**</bpt>Show-calendar<ept id="p1">**</ept> 指令碼方法。</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>The method name must be enclosed in quotation marks, because it includes a hyphen.</source>
          <target state="translated">方法名稱必須括在引號內，因為它含有連字號。</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>Example 8: Re-import a module into the same session</source>
          <target state="translated">範例 8︰ 重新匯入到相同的工作階段的模組</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>This example shows how to use the <bpt id="p1">*</bpt>Force<ept id="p1">*</ept> parameter of <bpt id="p2">**</bpt>Import-Module<ept id="p2">**</ept> when you are re-importing a module into the same session.</source>
          <target state="translated">這個範例示範如何使用 <bpt id="p1">*</bpt>Force<ept id="p1">*</ept> 參數 <bpt id="p2">**</bpt>匯入模組<ept id="p2">**</ept> 當您重新匯入到相同的工作階段的模組。</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>The first command imports the <bpt id="p1">**</bpt>BitsTransfer<ept id="p1">**</ept> module.</source>
          <target state="translated">第一個命令會匯入 <bpt id="p1">**</bpt>BitsTransfer<ept id="p1">**</ept> 模組。</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>The second command imports the module again, this time using the <bpt id="p1">*</bpt>Prefix<ept id="p1">*</ept> parameter.</source>
          <target state="translated">第二個命令將模組匯入一次，這次使用 <bpt id="p1">*</bpt>前置詞<ept id="p1">*</ept> 參數。</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>The second command also includes the <bpt id="p1">*</bpt>Force<ept id="p1">*</ept> parameter, which removes the module and then imports it again.</source>
          <target state="translated">第二個命令也包含 <bpt id="p1">*</bpt>Force<ept id="p1">*</ept> 參數，移除該模組，然後再匯入一次。</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>Without this parameter, the session would include two copies of each <bpt id="p1">**</bpt>BitsTransfer<ept id="p1">**</ept> cmdlet, one with the standard name and one with the prefixed name.</source>
          <target state="translated">如果沒有這個參數，工作階段會包含兩個複本的每個 <bpt id="p1">**</bpt>BitsTransfer<ept id="p1">**</ept> 指令程式，一個具有標準名稱，另一個前置詞的名稱。</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>Example 9: Run commands that have been hidden by imported commands</source>
          <target state="translated">範例 9︰ 執行匯入的命令隱藏的命令</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>This example shows how to run commands that have been hidden by imported commands.</source>
          <target state="translated">此範例顯示如何執行由匯入命令所隱藏的命令。</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>The first command run the Get-Date cmdlet.</source>
          <target state="translated">第一個命令會執行 Get-date 指令程式。</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>It returns a <bpt id="p1">**</bpt>DateTime<ept id="p1">**</ept> object with the current date.</source>
          <target state="translated">它會傳回 <bpt id="p1">**</bpt>DateTime<ept id="p1">**</ept> 物件使用目前的日期。</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>The second command imports the <bpt id="p1">**</bpt>TestModule<ept id="p1">**</ept> module.</source>
          <target state="translated">第二個命令會匯入 <bpt id="p1">**</bpt>TestModule<ept id="p1">**</ept> 模組。</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>This module includes a function named <bpt id="p1">**</bpt>Get-Date<ept id="p1">**</ept> that returns the year and day of the year.</source>
          <target state="translated">此模組包含名為函式 <bpt id="p1">**</bpt>Get-date<ept id="p1">**</ept> 傳回年份和年份的日期。</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>The third command runs the <bpt id="p1">**</bpt>Get-Date<ept id="p1">**</ept> command again.</source>
          <target state="translated">第三個命令會執行 <bpt id="p1">**</bpt>Get-date<ept id="p1">**</ept> 命令一次。</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>Because functions take precedence over cmdlets, the <bpt id="p1">**</bpt>Get-Date<ept id="p1">**</ept> function from the <bpt id="p2">**</bpt>TestModule<ept id="p2">**</ept> module runs, instead of the <bpt id="p3">**</bpt>Get-Date<ept id="p3">**</ept> cmdlet.</source>
          <target state="translated">函式優先於 cmdlet，因為 <bpt id="p1">**</bpt>Get-date<ept id="p1">**</ept> 函數從 <bpt id="p2">**</bpt>TestModule<ept id="p2">**</ept> 模組會執行，而不是 <bpt id="p3">**</bpt>Get-date<ept id="p3">**</ept> 指令程式。</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>The fourth command uses the <bpt id="p1">*</bpt>All<ept id="p1">*</ept> parameter of the <bpt id="p2">**</bpt>Get-Command<ept id="p2">**</ept> to get all of the Get-Date commands in the session.</source>
          <target state="translated">第四個命令會使用 <bpt id="p1">*</bpt>所有<ept id="p1">*</ept> 參數 <bpt id="p2">**</bpt>Get-command<ept id="p2">**</ept> 的所有 Get-date 命令取得工作階段中。</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>The results show that there are two <bpt id="p1">**</bpt>Get-Date<ept id="p1">**</ept> commands in the session, a function from the <bpt id="p2">**</bpt>TestModule<ept id="p2">**</ept> module and a cmdlet from the <bpt id="p3">**</bpt>Microsoft.PowerShell.Utility<ept id="p3">**</ept> module.</source>
          <target state="translated">結果顯示有兩個 <bpt id="p1">**</bpt>Get-date<ept id="p1">**</ept> 中的工作階段中的函式命令 <bpt id="p2">**</bpt>TestModule<ept id="p2">**</ept> 模組，指令程式會阻止 <bpt id="p3">**</bpt>Microsoft.PowerShell.Utility<ept id="p3">**</ept> 模組。</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>The fifth command runs the hidden cmdlet by qualifying the command name with the module name.</source>
          <target state="translated">第五個命令會以模組名稱辨識命令名稱來執行隱藏的 Cmdlet。</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>For more information about command precedence in Windows PowerShell, see about_Command_Precedence (http://go.microsoft.com/fwlink/?LinkID=113214).</source>
          <target state="translated">如需有關在 Windows PowerShell 命令優先順序的詳細資訊，請參閱 about_Command_Precedence (http://go.microsoft.com/fwlink/?LinkID=113214)。</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>Example 10: Import a minimum version of a module</source>
          <target state="translated">範例 10︰ 匯入模組的最小版本</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>This command imports the <bpt id="p1">**</bpt>PSWorkflow<ept id="p1">**</ept> module.</source>
          <target state="translated">此命令會匯入 <bpt id="p1">**</bpt>PSWorkflow<ept id="p1">**</ept> 模組。</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>It uses the <bpt id="p1">*</bpt>MinimumVersion<ept id="p1">*</ept> parameter of <bpt id="p2">**</bpt>Import-Module<ept id="p2">**</ept> to import only version 3.0.0.0 or greater of the module.</source>
          <target state="translated">它會使用 <bpt id="p1">*</bpt>MinimumVersion<ept id="p1">*</ept> 參數 <bpt id="p2">**</bpt>匯入模組<ept id="p2">**</ept> 只匯入版本 3.0.0.0 或更高的模組。</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>You can also use the <bpt id="p1">*</bpt>RequiredVersion<ept id="p1">*</ept> parameter to import a particular version of a module, or use the <bpt id="p2">*</bpt>Module<ept id="p2">*</ept> and <bpt id="p3">*</bpt>Version<ept id="p3">*</ept> parameters of the <bpt id="p4">**</bpt>#Requires<ept id="p4">**</ept> keyword to require a particular version of a module in a script.</source>
          <target state="translated">您也可以使用 <bpt id="p1">*</bpt>RequiredVersion<ept id="p1">*</ept> 參數匯入特定版本的模組，或使用 <bpt id="p2">*</bpt>模組<ept id="p2">*</ept> 和 <bpt id="p3">*</bpt>版本<ept id="p3">*</ept> 參數 <bpt id="p4">**</bpt>#Requires<ept id="p4">**</ept> 關鍵字來要求特定版本的指令碼中的模組。</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>Example 11: Import a module from a remote computer</source>
          <target state="translated">範例 11︰ 從遠端電腦匯入模組</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>This example shows how to use the <bpt id="p1">**</bpt>Import-Module<ept id="p1">**</ept> cmdlet to import a module from a remote computer.</source>
          <target state="translated">這個範例示範如何使用 <bpt id="p1">**</bpt>匯入模組<ept id="p1">**</ept> 指令程式可從遠端電腦匯入模組。</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>This command uses the Implicit Remoting feature of Windows PowerShell.</source>
          <target state="translated">此命令使用 Windows PowerShell 的「隱含遠端處理」功能。</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>When you import modules from another session, you can use the cmdlets in the current session.</source>
          <target state="translated">當您從另一個工作階段匯入模組時，您可以在目前的工作階段中使用 Cmdlet。</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>However, commands that use the cmdlets actually run in the remote session.</source>
          <target state="translated">但是，使用 Cmdlet 的命令實際是在遠端工作階段中執行。</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>Example 12: Manage storage on a remote computer without the Windows operating system</source>
          <target state="translated">範例 12︰ 管理 Windows 作業系統的遠端電腦上的儲存體</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>The commands in this example enable you to manage the storage systems of a remote computer that is not running the Windows operating system.</source>
          <target state="translated">此範例中的命令可讓您管理儲存體系統未執行 Windows 作業系統的遠端電腦。</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>In this example, because the administrator of the computer has installed the Module Discovery WMI provider, the CIM commands can use the default values, which are designed for the provider.</source>
          <target state="translated">在這個範例中，因為電腦的系統管理員已安裝「模組探索」WMI 提供者，所以 CIM 命令可以使用專為提供者設計的預設值。</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>PARAMETERS</source>
          <target state="translated">參數</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>-Alias</source>
          <target state="translated">別名</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>Specifies the aliases that this cmdlet imports from the module into the current session.</source>
          <target state="translated">指定此 cmdlet 會從目前工作階段模組匯入的別名。</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>Enter a comma-separated list of aliases.</source>
          <target state="translated">輸入以逗號分隔的別名清單。</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>Wildcard characters are permitted.</source>
          <target state="translated">允許使用萬用字元。</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>Some modules automatically export selected aliases into your session when you import the module.</source>
          <target state="translated">當您匯入模組時，某些模組會自動將選取的別名匯出至您的工作階段。</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>This parameter lets you select from among the exported aliases.</source>
          <target state="translated">此參數可讓您從匯出的別名中選取。</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>-ArgumentList</source>
          <target state="translated">-ArgumentList</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>Specifies an array of arguments, or parameter values, that are passed to a script module during the <bpt id="p1">**</bpt>Import-Module<ept id="p1">**</ept> command.</source>
          <target state="translated">指定的引數或參數值傳遞給指令碼] 模組，在陣列 <bpt id="p1">**</bpt>匯入模組<ept id="p1">**</ept> 命令。</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>This parameter is valid only when you are importing a script module.</source>
          <target state="translated">此參數只有在當您匯入指令碼模組時才有作用。</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>You can also refer to the <bpt id="p1">*</bpt>ArgumentList<ept id="p1">*</ept> parameter by its alias, <bpt id="p2">*</bpt>args<ept id="p2">*</ept>.</source>
          <target state="translated">您也可以參考 <bpt id="p1">*</bpt>ArgumentList<ept id="p1">*</ept> 參數的別名 <bpt id="p2">*</bpt>args<ept id="p2">*</ept>。</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>For more information, see about_Aliases.</source>
          <target state="translated">如需詳細資訊，請參閱 about_Aliases。</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>-AsCustomObject</source>
          <target state="translated">-AsCustomObject</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>Indicates that this cmdlet returns a custom object with members that represent the imported module members.</source>
          <target state="translated">指出此 cmdlet 會傳回自訂的物件，其代表匯入的模組成員的成員。</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>This parameter is valid only for script modules.</source>
          <target state="translated">此參數只適用於指令碼模組。</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>When you use the <bpt id="p1">*</bpt>AsCustomObject<ept id="p1">*</ept> parameter, <bpt id="p2">**</bpt>Import-Module<ept id="p2">**</ept> imports the module members into the session and then returns a <bpt id="p3">**</bpt>PSCustomObject<ept id="p3">**</ept> object instead of a <bpt id="p4">**</bpt>PSModuleInfo<ept id="p4">**</ept> object.</source>
          <target state="translated">當您使用 <bpt id="p1">*</bpt>AsCustomObject<ept id="p1">*</ept> 參數， <bpt id="p2">**</bpt>匯入模組<ept id="p2">**</ept> 模組成員匯入工作階段，然後傳回 <bpt id="p3">**</bpt>PSCustomObject<ept id="p3">**</ept> 物件而非 <bpt id="p4">**</bpt>PSModuleInfo<ept id="p4">**</ept> 物件。</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>You can save the custom object in a variable and use dot notation to invoke the members.</source>
          <target state="translated">您可以將自訂物件儲存在變數中，並使用點標記法來叫用成員。</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source>-Assembly</source>
          <target state="translated">組件</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source>Specifies an array of assembly objects.</source>
          <target state="translated">指定組件物件的陣列。</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source>This cmdlet imports the cmdlets and providers implemented in the specified assembly objects.</source>
          <target state="translated">這個指令程式匯入的 cmdlet 和提供者實作中指定的組件物件。</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source>Enter a variable that contains assembly objects or a command that creates assembly objects.</source>
          <target state="translated">輸入包含組件物件的變數，或輸入可建立組件物件的命令。</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source>You can also pipe an assembly object to <bpt id="p1">**</bpt>Import-Module<ept id="p1">**</ept>.</source>
          <target state="translated">您也可以使用管線的組件物件 <bpt id="p1">**</bpt>匯入模組<ept id="p1">**</ept>。</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source>When you use this parameter, only the cmdlets and providers implemented by the specified assemblies are imported.</source>
          <target state="translated">當您使用此參數時，只會匯入指定組件所實作的 Cmdlet 與提供者。</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve">
          <source>If the module contains other files, they are not imported, and you might be missing important members of the module.</source>
          <target state="translated">如果模組包含其他檔案，則不會匯入它們，而且您可能會遺失重要的模組成員。</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source>Use this parameter for debugging and testing the module, or when you are instructed to use it by the module author.</source>
          <target state="translated">在偵錯和測試模組時使用此參數，或在模組的作者指示時使用。</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source>-CimNamespace</source>
          <target state="translated">-CimNamespace</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source>Specifies the namespace of an alternate CIM provider that exposes CIM modules.</source>
          <target state="translated">指定公開 CIM 模組的替代 CIM 提供者命名空間。</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve">
          <source>The default value is the namespace of the Module Discovery WMI provider.</source>
          <target state="translated">預設值為「模組探索」WMI 提供者的命名空間。</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve">
          <source>Use this parameter to import CIM modules from computers and devices that are not running a Windows operating system.</source>
          <target state="translated">使用這個參數，從不是執行 Windows 作業系統的電腦和裝置匯入 CIM 模組。</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve">
          <source>This parameter was introduced in Windows PowerShell 3.0.</source>
          <target state="translated">此參數是在 Windows PowerShell 3.0 引進。</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve">
          <source>-CimResourceUri</source>
          <target state="translated">-CimResourceUri</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve">
          <source>Specifies an alternate location for CIM modules.</source>
          <target state="translated">指定 CIM 模組的替代位置。</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve">
          <source>The default value is the resource URI of the Module Discovery WMI provider on the remote computer.</source>
          <target state="translated">預設值是資源的遠端電腦上的模組探索 」 WMI 提供者的 URI。</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve">
          <source>Use this parameter to import CIM modules from computers and devices that are not running a Windows operating system.</source>
          <target state="translated">使用這個參數，從不是執行 Windows 作業系統的電腦和裝置匯入 CIM 模組。</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve">
          <source>This parameter was introduced in Windows PowerShell 3.0.</source>
          <target state="translated">此參數是在 Windows PowerShell 3.0 引進。</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve">
          <source>-CimSession</source>
          <target state="translated">-CimSession</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve">
          <source>Specifies a CIM session on the remote computer.</source>
          <target state="translated">指定遠端電腦上的 CIM 工作階段。</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve">
          <source>Enter a variable that contains the CIM session or a command that gets the CIM session, such as a Get-CIMSessionhttp://go.microsoft.com/fwlink/?LinkId=227966 command.</source>
          <target state="translated">輸入包含 CIM 工作階段或可取得 CIM 工作階段，例如 Get CIMSessionhttp://go.microsoft.com/fwlink/?LinkId=227966 命令的命令的變數。</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Import-Module<ept id="p1">**</ept> uses the CIM session connection to import modules from the remote computer into the current session.</source>
          <target state="translated"><bpt id="p1">**</bpt>匯入模組<ept id="p1">**</ept> 模組匯入目前工作階段的遠端電腦使用 CIM 工作階段連線。</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve">
          <source>When you use the commands from the imported module in the current session, the commands actually run on the remote computer.</source>
          <target state="translated">當您在目前工作階段中使用匯入模組的命令時，命令實際上會在遠端電腦上執行。</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve">
          <source>You can use this parameter to import modules from computers and devices that are not running the Windows operating system, and Windows computers that have Windows PowerShell, but do not have Windows PowerShell remoting enabled.</source>
          <target state="translated">若要從電腦和裝置不是執行 Windows 作業系統，以及含有 Windows PowerShell 但未啟用 Windows PowerShell 遠端功能的 Windows 電腦匯入模組，您可以使用這個參數。</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve">
          <source>This parameter was introduced in Windows PowerShell 3.0.</source>
          <target state="translated">此參數是在 Windows PowerShell 3.0 引進。</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve">
          <source>-Cmdlet</source>
          <target state="translated">Cmdlet</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve">
          <source>Specifies an array of cmdlets that this cmdlet imports from the module into the current session.</source>
          <target state="translated">指定的陣列，這個指令程式會從目前的工作階段模組匯入的指令程式。</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve">
          <source>Wildcard characters are permitted.</source>
          <target state="translated">允許使用萬用字元。</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve">
          <source>Some modules automatically export selected cmdlets into your session when you import the module.</source>
          <target state="translated">當您匯入模組時，某些模組會自動將選取的 Cmdlet 匯出至您的工作階段。</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve">
          <source>This parameter lets you select from among the exported cmdlets.</source>
          <target state="translated">此參數可讓您從匯出的 Cmdlet 中選取。</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve">
          <source>-DisableNameChecking</source>
          <target state="translated">-DisableNameChecking</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve">
          <source>Indicates that this cmdlet suppresses the message that warns you when you import a cmdlet or function whose name includes an unapproved verb or a prohibited character.</source>
          <target state="translated">表示這個 cmdlet 會抑制訊息警告您，當您匯入 cmdlet 或函式名稱中包括未核准的動詞或禁止的字元。</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve">
          <source>By default, when a module that you import exports cmdlets or functions that have unapproved verbs in their names, Windows PowerShell displays the following warning message:</source>
          <target state="translated">根據預設，當您匯入模組匯出 cmdlet 或函式具有未經核准的動詞命令在其名稱中，Windows PowerShell 會顯示下列警告訊息︰</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve">
          <source>"WARNING: Some imported command names include unapproved verbs which might make them less discoverable.</source>
          <target state="translated">「 警告︰ 有些匯入的命令名稱包含未核准的動詞，因此可能不易搜尋。</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve">
          <source>Use the Verbose parameter for more detail or type Get-Verb to see the list of approved verbs."</source>
          <target state="translated">請使用 Verbose 參數取得詳細資訊，或輸入 Get-Verb 查看核准的動詞清單。」</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve">
          <source>This message is only a warning.</source>
          <target state="translated">這則訊息只是一個警告。</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve">
          <source>The complete module is still imported, including the non-conforming commands.</source>
          <target state="translated">模組仍然完整匯入，包括不合格的命令。</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve">
          <source>Although the message is displayed to module users, the naming problem should be fixed by the module author.</source>
          <target state="translated">雖然訊息是顯示給模組的使用者，但命名的問題應該由模組作者修正。</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve">
          <source>-Force</source>
          <target state="translated">-Force</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve">
          <source>Indicates that this cmdlet re-imports a module and its members, even if the module or its members have an access mode of read-only.</source>
          <target state="translated">表示，此指令程式重新匯入模組和其成員，即使該模組或其成員擁有唯讀存取模式。</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve">
          <source>-FullyQualifiedName</source>
          <target state="translated">-FullyQualifiedName</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve">
          <source>Specifies the fully qualified name of the module specification.</source>
          <target state="translated">指定模組規格的完整的名稱。</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve">
          <source>-Function</source>
          <target state="translated">式函</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve">
          <source>Specifies an array of functions that this cmdlet imports from the module into the current session.</source>
          <target state="translated">指定此 cmdlet 會從目前工作階段模組匯入的函式的陣列。</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve">
          <source>Wildcard characters are permitted.</source>
          <target state="translated">允許使用萬用字元。</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve">
          <source>Some modules automatically export selected functions into your session when you import the module.</source>
          <target state="translated">當您匯入模組時，某些模組會自動將選取的函式匯出至您的工作階段。</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve">
          <source>This parameter lets you select from among the exported functions.</source>
          <target state="translated">此參數可讓您從匯出的函式中選取。</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve">
          <source>-Global</source>
          <target state="translated">-全域</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve">
          <source>Indicates that this cmdlet imports modules into the global session state so they are available to all commands in the session.</source>
          <target state="translated">表示，此 cmdlet 模組匯入到全域工作階段狀態以供所有命令工作階段中。</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve">
          <source>By default, the commands in a module, including commands from nested modules, are imported into the caller's session state.</source>
          <target state="translated">根據預設，模組中的命令 (包括巢狀模組中的命令) 會匯入到呼叫者的工作階段狀態。</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve">
          <source>To restrict the commands that a module exports, use an Export-ModuleMember command in the script module.</source>
          <target state="translated">若要限制模組匯出的命令，請使用 Export-modulemember 命令指令碼模組中。</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">*</bpt>Global<ept id="p1">*</ept> parameter is equivalent to the <bpt id="p2">*</bpt>Scope<ept id="p2">*</ept> parameter with a value of Global.</source>
          <target state="translated"> <bpt id="p1">*</bpt>Global<ept id="p1">*</ept> 參數相當於 <bpt id="p2">*</bpt>範圍<ept id="p2">*</ept> 的全域值的參數。</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve">
          <source>-MinimumVersion</source>
          <target state="translated">-MinimumVersion</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve">
          <source>Specifies a minimum version.</source>
          <target state="translated">指定最小版本。</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve">
          <source>This cmdlet imports only a version of the module that is greater than or equal to the specified value.</source>
          <target state="translated">這個指令程式會匯入大於或等於指定值之模組的版本。</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve">
          <source>If no version qualifies, <bpt id="p1">**</bpt>Import-Module<ept id="p1">**</ept> generates an error.</source>
          <target state="translated">如果沒有版本符合， <bpt id="p1">**</bpt>匯入模組<ept id="p1">**</ept> 會產生錯誤。</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve">
          <source>By default, <bpt id="p1">**</bpt>Import-Module<ept id="p1">**</ept> imports the module without checking the version number.</source>
          <target state="translated">根據預設， <bpt id="p1">**</bpt>匯入模組<ept id="p1">**</ept> 匯入的模組，而不檢查版本號碼。</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve">
          <source>Use the <bpt id="p1">*</bpt>MinimumVersion<ept id="p1">*</ept> parameter name or its alias, Version.</source>
          <target state="translated">使用 <bpt id="p1">*</bpt>MinimumVersion<ept id="p1">*</ept> 參數名稱或其別名版本。</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve">
          <source>To specify an exact version, use the <bpt id="p1">*</bpt>RequiredVersion<ept id="p1">*</ept> parameter.</source>
          <target state="translated">若要指定確切的版本，請使用 <bpt id="p1">*</bpt>RequiredVersion<ept id="p1">*</ept> 參數。</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve">
          <source>You can also use the <bpt id="p1">*</bpt>Module<ept id="p1">*</ept> and <bpt id="p2">*</bpt>Version<ept id="p2">*</ept> parameters of the <bpt id="p3">**</bpt>#Requires<ept id="p3">**</ept> keyword to require a specific version of a module in a script.</source>
          <target state="translated">您也可以使用 <bpt id="p1">*</bpt>模組<ept id="p1">*</ept> 和 <bpt id="p2">*</bpt>版本<ept id="p2">*</ept> 參數 <bpt id="p3">**</bpt>#Requires<ept id="p3">**</ept> 關鍵字來要求特定版本的指令碼中的模組。</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve">
          <source>This parameter was introduced in Windows PowerShell 3.0.</source>
          <target state="translated">此參數是在 Windows PowerShell 3.0 引進。</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve">
          <source>-ModuleInfo</source>
          <target state="translated">-ModuleInfo</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve">
          <source>Specifies an array of module objects to import.</source>
          <target state="translated">指定要匯入的模組物件的陣列。</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve">
          <source>Enter a variable that contains the module objects, or a command that gets the module objects, such as the following command: <ph id="ph1">`Get-Module -ListAvailable`</ph>.</source>
          <target state="translated">輸入包含模組物件或可取得模組物件，例如下列命令的命令的變數︰ <ph id="ph1">`Get-Module -ListAvailable`</ph>。</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve">
          <source>You can also pipe module objects to <bpt id="p1">**</bpt>Import-Module<ept id="p1">**</ept>.</source>
          <target state="translated">您也可以使用管線模組物件 <bpt id="p1">**</bpt>匯入模組<ept id="p1">**</ept>。</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve">
          <source>-Name</source>
          <target state="translated">-Name</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve">
          <source>Specifies the names of the modules to import.</source>
          <target state="translated">指定要匯入之模組的名稱。</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve">
          <source>Enter the name of the module or the name of a file in the module, such as a .psd1, .psm1, .dll, or ps1 file.</source>
          <target state="translated">輸入模組的名稱或模組中檔案的名稱，例如 .psd1、.psm1、.dll 或 ps1 檔案。</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve">
          <source>File paths are optional.</source>
          <target state="translated">檔案路徑為選擇性。</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve">
          <source>Wildcard characters are not permitted.</source>
          <target state="translated">不允許使用萬用字元。</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve">
          <source>You can also pipe module names and file names to <bpt id="p1">**</bpt>Import-Module<ept id="p1">**</ept>.</source>
          <target state="translated">您可以也使用管線傳送模組名稱和檔案名稱，以 <bpt id="p1">**</bpt>匯入模組<ept id="p1">**</ept>。</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve">
          <source>If you omit a path, <bpt id="p1">**</bpt>Import-Module<ept id="p1">**</ept> looks for the module in the paths saved in the PSModulePath environment variable ($env:PSModulePath).</source>
          <target state="translated">如果您省略路徑， <bpt id="p1">**</bpt>匯入模組<ept id="p1">**</ept> 求取在 PSModulePath 環境變數中儲存的路徑中的模組 ($env: PSModulePath)。</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve">
          <source>Specify only the module name whenever possible.</source>
          <target state="translated">盡可能只指定模組名稱。</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve">
          <source>When you specify a file name, only the members that are implemented in that file are imported.</source>
          <target state="translated">當您指定檔案名稱時，只會匯入該檔案中實作的成員。</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve">
          <source>If the module contains other files, they are not imported, and you might be missing important members of the module.</source>
          <target state="translated">如果模組包含其他檔案，則不會匯入它們，而且您可能會遺失重要的模組成員。</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve">
          <source>-NoClobber</source>
          <target state="translated">-NoClobber</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve">
          <source>Indicates that this cmdlet does not import commands that have the same names as existing commands in the current session.</source>
          <target state="translated">指出此 cmdlet 不匯入目前工作階段中有現有的命令同名的命令。</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve">
          <source>By default, <bpt id="p1">**</bpt>Import-Module<ept id="p1">**</ept> imports all exported module commands.</source>
          <target state="translated">根據預設， <bpt id="p1">**</bpt>匯入模組<ept id="p1">**</ept> 匯入所有匯出的模組命令。</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve">
          <source>Commands that have the same names can hide or replace commands in the session.</source>
          <target state="translated">具有相同名稱的命令可以隱藏或取代工作階段中的命令。</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve">
          <source>To avoid command name conflicts in a session, use the <bpt id="p1">*</bpt>Prefix<ept id="p1">*</ept> or <bpt id="p2">*</bpt>NoClobber<ept id="p2">*</ept> parameters.</source>
          <target state="translated">若要避免工作階段中的命令名稱衝突，請使用 <bpt id="p1">*</bpt>前置詞<ept id="p1">*</ept> 或 <bpt id="p2">*</bpt>NoClobber<ept id="p2">*</ept> 參數。</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve">
          <source>For more information about name conflicts and command precedence, see "Modules and Name Conflicts" in about_Modules and about_Command_Precedence.</source>
          <target state="translated">如需名稱衝突和命令優先順序的詳細資訊，請參閱 about_Modules 和 about_Command_Precedence 中的 「 模組和名稱衝突 」。</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve">
          <source>This parameter was introduced in Windows PowerShell 3.0.</source>
          <target state="translated">此參數是在 Windows PowerShell 3.0 引進。</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve">
          <source>-PSSession</source>
          <target state="translated">Export-pssession</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve">
          <source>Specifies a Windows PowerShell user-managed session (<bpt id="p1">**</bpt>PSSession<ept id="p1">**</ept>) from which this cmdlet import modules into the current session.</source>
          <target state="translated">指定的 Windows PowerShell 使用者管理工作階段 (<bpt id="p1">**</bpt>PSSession<ept id="p1">**</ept>) 的這個 cmdlet 模組匯入到目前工作階段。</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve">
          <source>Enter a variable that contains a <bpt id="p1">**</bpt>PSSession<ept id="p1">**</ept> or a command that gets a <bpt id="p2">**</bpt>PSSession<ept id="p2">**</ept>, such as a Get-PSSession command.</source>
          <target state="translated">輸入變數，其中包含 <bpt id="p1">**</bpt>PSSession<ept id="p1">**</ept> 或取得命令 <bpt id="p2">**</bpt>PSSession<ept id="p2">**</ept>, ，例如 Get-pssession 命令。</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve">
          <source>When you import a module from a different session into the current session, you can use the cmdlets from the module in the current session, just as you would use cmdlets from a local module.</source>
          <target state="translated">當您將不同工作階段的模組匯入到目前工作階段時，您可以使用目前的工作階段之模組的 Cmdlet，就如同您使用本機模組的 Cmdlet 一樣。</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve">
          <source>Commands that use the remote cmdlets actually run in the remote session, but the remoting details are managed in the background by Windows PowerShell.</source>
          <target state="translated">使用遠端 Cmdlet 的命令實際是在遠端工作階段執行，但遠端處理詳細資料是由 Windows PowerShell 在背景中管理。</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve">
          <source>This parameter uses the Implicit Remoting feature of Windows PowerShell.</source>
          <target state="translated">此參數會使用 Windows PowerShell 的「隱含遠端處理」功能。</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve">
          <source>It is equivalent to using the Import-PSSession cmdlet to import particular modules from a session.</source>
          <target state="translated">它就相當於使用 Import-pssession cmdlet 匯入工作階段的特定模組。</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Import-Module<ept id="p1">**</ept> cannot import Windows PowerShell Core modules from another session.</source>
          <target state="translated"><bpt id="p1">**</bpt>匯入模組<ept id="p1">**</ept> 無法從另一個工作階段匯入 Windows PowerShell 核心模組。</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve">
          <source>The Windows PowerShell Core modules have names that begin with Microsoft.PowerShell.</source>
          <target state="translated">Windows PowerShell 核心模組名稱的開頭為 Microsoft.PowerShell。</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve">
          <source>This parameter was introduced in Windows PowerShell 3.0.</source>
          <target state="translated">此參數是在 Windows PowerShell 3.0 引進。</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve">
          <source>-PassThru</source>
          <target state="translated">-PassThru</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve">
          <source>Returns an object representing the item with which you are working.</source>
          <target state="translated">傳回代表您正在使用之項目的物件。</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve">
          <source>By default, this cmdlet does not generate any output.</source>
          <target state="translated">根據預設，此 Cmdlet 不會產生任何輸出。</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve">
          <source>-Prefix</source>
          <target state="translated">前置詞</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve">
          <source>Specifies a prefix that this cmdlet adds to the nouns in the names of imported module members.</source>
          <target state="translated">指定此 cmdlet 會將加入的名詞中匯入的模組成員名稱的前置詞。</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve">
          <source>Use this parameter to avoid name conflicts that might occur when different members in the session have the same name.</source>
          <target state="translated">使用此參數來避免工作階段中不同成員具有相同名稱時可能會發生的名稱衝突。</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve">
          <source>This parameter does not change the module, and it does not affect files that the module imports for its own use.</source>
          <target state="translated">這個參數不會變更模組，並不會影響供本身使用的模組匯入檔案。</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve">
          <source>These are known as nested modules.</source>
          <target state="translated">這些稱為巢狀模組。</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve">
          <source>This cmdlet affects only the names of members in the current session.</source>
          <target state="translated">這個指令程式會影響目前工作階段中的成員名稱。</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve">
          <source>For example, if you specify the prefix UTC and then import a Get-Date cmdlet, the cmdlet is known in the session as <bpt id="p1">**</bpt>Get-UTCDate<ept id="p1">**</ept>, and it is not confused with the original <bpt id="p2">**</bpt>Get-Date<ept id="p2">**</ept> cmdlet.</source>
          <target state="translated">比方說，如果您指定的前置詞 UTC，並再匯入 Get-date cmdlet，cmdlet 就是做為工作階段中 <bpt id="p1">**</bpt>Get-utcdate<ept id="p1">**</ept>, ，它不會混淆與原始 <bpt id="p2">**</bpt>Get-date<ept id="p2">**</ept> 指令程式。</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve">
          <source>The value of this parameter takes precedence over the <bpt id="p1">**</bpt>DefaultCommandPrefix<ept id="p1">**</ept> property of the module, which specifies the default prefix.</source>
          <target state="translated">此參數的值會優先於 <bpt id="p1">**</bpt>DefaultCommandPrefix<ept id="p1">**</ept> 模組，指定預設前置詞的屬性。</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve">
          <source>-RequiredVersion</source>
          <target state="translated">-RequiredVersion</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve">
          <source>Specifies a version of the module that this cmdlet imports.</source>
          <target state="translated">指定此 cmdlet 會匯入模組的版本。</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve">
          <source>If the version is not installed, <bpt id="p1">**</bpt>Import-Module<ept id="p1">**</ept> generates an error.</source>
          <target state="translated">如果沒有安裝的版本， <bpt id="p1">**</bpt>匯入模組<ept id="p1">**</ept> 會產生錯誤。</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve">
          <source>By default, <bpt id="p1">**</bpt>Import-Module<ept id="p1">**</ept> imports the module without checking the version number.</source>
          <target state="translated">根據預設， <bpt id="p1">**</bpt>匯入模組<ept id="p1">**</ept> 匯入的模組，而不檢查版本號碼。</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve">
          <source>To specify a minimum version, use the <bpt id="p1">*</bpt>MinimumVersion<ept id="p1">*</ept> parameter.</source>
          <target state="translated">若要指定最小版本，請使用 <bpt id="p1">*</bpt>MinimumVersion<ept id="p1">*</ept> 參數。</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve">
          <source>You can also use the <bpt id="p1">*</bpt>Module<ept id="p1">*</ept> and <bpt id="p2">*</bpt>Version<ept id="p2">*</ept> parameters of the <bpt id="p3">**</bpt>#Requires<ept id="p3">**</ept> keyword to require a specific version of a module in a script.</source>
          <target state="translated">您也可以使用 <bpt id="p1">*</bpt>模組<ept id="p1">*</ept> 和 <bpt id="p2">*</bpt>版本<ept id="p2">*</ept> 參數 <bpt id="p3">**</bpt>#Requires<ept id="p3">**</ept> 關鍵字來要求特定版本的指令碼中的模組。</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve">
          <source>This parameter was introduced in Windows PowerShell 3.0.</source>
          <target state="translated">此參數是在 Windows PowerShell 3.0 引進。</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve">
          <source>Scripts that use <bpt id="p1">*</bpt>RequiredVersion<ept id="p1">*</ept> to import modules that are included with existing releases of the Windows operating system do not automatically run in future releases of the Windows operating system.</source>
          <target state="translated">指令碼 <bpt id="p1">*</bpt>RequiredVersion<ept id="p1">*</ept> 匯入模組，與現有版本的 Windows 作業系統不會自動執行在未來的 Windows 作業系統版本。</target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve">
          <source>This is because Windows PowerShell module version numbers in future releases of the Windows operating system are higher than module version numbers in existing releases of the Windows operating system.</source>
          <target state="translated">這是因為未來版本之 Windows 作業系統的 Windows PowerShell 模組版本號碼，會高於在現有版本之 Windows 作業系統的模組版本號碼。</target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve">
          <source>-Scope</source>
          <target state="translated">範圍</target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve">
          <source>Specifies a scope into which this cmdlet imports the module.</source>
          <target state="translated">指定的範圍，其中這個指令程式匯入的模組。</target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve">
          <source>The acceptable values for this parameter are:</source>
          <target state="translated">此參數接受的值包括：</target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Global<ept id="p1">**</ept>.</source>
          <target state="translated"><bpt id="p1">**</bpt>全域<ept id="p1">**</ept>。</target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve">
          <source>Available to all commands in the session.</source>
          <target state="translated">適用於工作階段中的所有命令。</target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve">
          <source>Equivalent to the <bpt id="p1">*</bpt>Global<ept id="p1">*</ept> parameter.</source>
          <target state="translated">相當於 <bpt id="p1">*</bpt>Global<ept id="p1">*</ept> 參數。</target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Local<ept id="p1">**</ept>.</source>
          <target state="translated"><bpt id="p1">**</bpt>本機<ept id="p1">**</ept>。</target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve">
          <source>Available only in the current scope.</source>
          <target state="translated">只適用於目前的範圍。</target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve">
          <source>By default, the module is imported into the current scope, which could be a script or module.</source>
          <target state="translated">根據預設，模組會匯入至目前的範圍中，這可能是指令碼或模組。</target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve">
          <source>This parameter was introduced in Windows PowerShell 3.0.</source>
          <target state="translated">此參數是在 Windows PowerShell 3.0 引進。</target>       </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve">
          <source>-Variable</source>
          <target state="translated">變數</target>       </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve">
          <source>Specifies an array of variables that this cmdlet imports from the module into the current session.</source>
          <target state="translated">指定此 cmdlet 會匯入到目前的工作階段之模組的變數的陣列。</target>       </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve">
          <source>Enter a list of variables.</source>
          <target state="translated">輸入變數的清單。</target>       </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve">
          <source>Wildcard characters are permitted.</source>
          <target state="translated">允許使用萬用字元。</target>       </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve">
          <source>Some modules automatically export selected variables into your session when you import the module.</source>
          <target state="translated">當您匯入模組時，某些模組會自動將選取的變數匯出至您的工作階段。</target>       </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve">
          <source>This parameter lets you select from among the exported variables.</source>
          <target state="translated">此參數可讓您從匯出的變數中選取。</target>       </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve">
          <source>CommonParameters</source>
          <target state="translated">CommonParameters</target>       </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve">
          <source>This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutVariable, -OutBuffer, -PipelineVariable, -Verbose, -WarningAction, and -WarningVariable.</source>
          <target state="translated">這個 cmdlet 支援一般參數:-偵錯、-ErrorAction、-ErrorVariable、-InformationAction-InformationVariable、-OutVariable、-OutBuffer、-PipelineVariable、-Verbose、-WarningAction 以及-WarningVariable。</target>       </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve">
          <source>For more information, see about_CommonParameters (http://go.microsoft.com/fwlink/?LinkID=113216).</source>
          <target state="translated">如需詳細資訊，請參閱 about_CommonParameters (http://go.microsoft.com/fwlink/?LinkID=113216)。</target>       </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve">
          <source>INPUTS</source>
          <target state="translated">輸入</target>       </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve">
          <source>System.String, System.Management.Automation.PSModuleInfo, System.Reflection.Assembly</source>
          <target state="translated">System.String，System.Management.Automation.PSModuleInfo，System.Reflection.Assembly</target>       </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve">
          <source>You can pipe a module name, module object, or assembly object to this cmldet.</source>
          <target state="translated">您可以使用模組名稱、 模組物件或組件物件，此 cmdlet 會以管線傳送。</target>       </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve">
          <source>OUTPUTS</source>
          <target state="translated">輸出</target>       </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve">
          <source>None, System.Management.Automation.PSModuleInfo, or System.Management.Automation.PSCustomObject</source>
          <target state="translated">無、 System.Management.Automation.PSModuleInfo 或 System.Management.Automation.PSCustomObject</target>       </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve">
          <source>This cmdlet returns a <bpt id="p1">**</bpt>PSModuleInfo<ept id="p1">**</ept> or <bpt id="p2">**</bpt>PSCustomObject<ept id="p2">**</ept>.</source>
          <target state="translated">此 cmdlet 會傳回 <bpt id="p1">**</bpt>PSModuleInfo<ept id="p1">**</ept> 或 <bpt id="p2">**</bpt>PSCustomObject<ept id="p2">**</ept>。</target>       </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve">
          <source>By default, <bpt id="p1">**</bpt>Import-Module<ept id="p1">**</ept> does not generate any output.</source>
          <target state="translated">根據預設， <bpt id="p1">**</bpt>匯入模組<ept id="p1">**</ept> 不會產生任何輸出。</target>       </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve">
          <source>If you specify the <bpt id="p1">*</bpt>PassThru<ept id="p1">*</ept> parameter, the cmldet generates a <bpt id="p2">**</bpt>System.Management.Automation.PSModuleInfo<ept id="p2">**</ept> object that represents the module.</source>
          <target state="translated">如果您指定 <bpt id="p1">*</bpt>PassThru<ept id="p1">*</ept> 參數，此 cmdlet 會產生 <bpt id="p2">**</bpt>System.Management.Automation.PSModuleInfo<ept id="p2">**</ept> 代表模組的物件。</target>       </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve">
          <source>If you specify the <bpt id="p1">*</bpt>AsCustomObject<ept id="p1">*</ept> parameter, it generates a <bpt id="p2">**</bpt>PSCustomObject<ept id="p2">**</ept> object.</source>
          <target state="translated">如果您指定 <bpt id="p1">*</bpt>AsCustomObject<ept id="p1">*</ept> 參數，它會產生 <bpt id="p2">**</bpt>PSCustomObject<ept id="p2">**</ept> 物件。</target>       </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve">
          <source>NOTES</source>
          <target state="translated">附註</target>       </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve">
          <source>Before you can import a module, the module must be installed on the local computer.</source>
          <target state="translated">您可以匯入模組之前，該模組必須安裝在本機電腦上。</target>       </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve">
          <source>That is, the module directory must be copied to a directory that is accessible to your local computer.</source>
          <target state="translated">也就是模組目錄必須複製到本機電腦可以存取的目錄。</target>       </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve">
          <source>For more information, see about_Modules (http://go.microsoft.com/fwlink/?LinkID=144311).</source>
          <target state="translated">如需詳細資訊，請參閱 about_Modules (http://go.microsoft.com/fwlink/?LinkID=144311)。</target>       </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve">
          <source>You can also use the <bpt id="p1">*</bpt>PSSession<ept id="p1">*</ept> and <bpt id="p2">*</bpt>CIMSession<ept id="p2">*</ept> parameters to import modules that are installed on remote computers.</source>
          <target state="translated">您也可以使用 <bpt id="p1">*</bpt>PSSession<ept id="p1">*</ept> 和 <bpt id="p2">*</bpt>CIMSession<ept id="p2">*</ept> 參數來匯入遠端電腦安裝的模組。</target>       </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve">
          <source>However, commands that use the cmdlets in these modules actually run in the remote session on the remote computer.</source>
          <target state="translated">但是，使用這些模組 Cmdlet 的命令實際是在遠端電腦上的遠端工作階段中執行。</target>       </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve">
          <source>If you import members with the same name and the same type into your session, Windows PowerShell uses the member imported last by default.</source>
          <target state="translated">如果您將具有相同名稱和相同型別的成員匯入到您的工作階段中，Windows PowerShell 預設會使用最後所匯入的成員。</target>       </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve">
          <source>Variables and aliases are replaced, and the originals are not accessible.</source>
          <target state="translated">變數和別名會被取代，而且無法存取原始變數和別名。</target>       </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve">
          <source>Functions, cmdlets and providers are merely shadowed by the new members.</source>
          <target state="translated">函式、 cmdlet 和提供者只會由新成員的陰影。</target>       </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve">
          <source>They can be accessed by qualifying the command name with the name of its snap-in, module, or function path.</source>
          <target state="translated">他們可以存取來限定命令名稱，其嵌入式管理單元、 模組或函式路徑的名稱。</target>       </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve">
          <source>To update the formatting data for commands that have been imported from a module, use the Update-FormatData cmdlet.</source>
          <target state="translated">若要更新已從模組匯入命令的格式化資料，請使用 Update-formatdata cmdlet。</target>       </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Update-FormatData<ept id="p1">**</ept> also updates the formatting data for commands in the session that were imported from modules.</source>
          <target state="translated"><bpt id="p1">**</bpt>Update-formatdata<ept id="p1">**</ept> 也會更新從模組匯入工作階段中命令的格式化資料。</target>       </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve">
          <source>If the formatting file for a module changes, you can run an <bpt id="p1">**</bpt>Update-FormatData<ept id="p1">**</ept> command to update the formatting data for imported commands.</source>
          <target state="translated">如果變更模組的格式化檔案，您可以執行 <bpt id="p1">**</bpt>Update-formatdata<ept id="p1">**</ept> 命令更新格式化資料匯入命令。</target>       </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve">
          <source>You do not need to import the module again.</source>
          <target state="translated">您不需要再次匯入模組。</target>       </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve">
          <source>Starting in Windows PowerShell 3.0, the core commands that are installed with Windows PowerShell are packaged in modules.</source>
          <target state="translated">從 Windows PowerShell 3.0 開始，隨 Windows PowerShell 安裝的核心命令已經封裝成模組。</target>       </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve">
          <source>In Windows PowerShell 2.0, and in host programs that create older-style sessions in later versions of Windows PowerShell, the core commands are packaged in snap-ins (<bpt id="p1">**</bpt>PSSnapins<ept id="p1">**</ept>).</source>
          <target state="translated">在 Windows PowerShell 2.0，和更新版本的 Windows PowerShell 中建立舊式工作階段的主機程式中，核心命令封裝在嵌入式管理單元 (<bpt id="p1">**</bpt>PSSnapins<ept id="p1">**</ept>)。</target>       </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve">
          <source>The exception is <bpt id="p1">**</bpt>Microsoft.PowerShell.Core<ept id="p1">**</ept>, which is always a snap-in.</source>
          <target state="translated">例外狀況是 <bpt id="p1">**</bpt>Microsoft.PowerShell.Core<ept id="p1">**</ept>, ，一律為嵌入式管理單元。</target>       </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve">
          <source>Also, remote sessions, such as those started by the New-PSSession cmdlet, are older-style sessions that include core snap-ins.</source>
          <target state="translated">此外，遠端工作階段，例如藉由 New-pssession cmdlet，都包含核心嵌入式管理單元的舊式工作階段。</target>       </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve">
          <source>For information about the <bpt id="p1">**</bpt>CreateDefault2<ept id="p1">**</ept> method that creates newer-style sessions with core modules, see "CreateDefault2 Methodhttp://msdn.microsoft.com/en-us/library/windows/desktop/system.management.automation.runspaces.initialsessionstate.createdefault2(v=VS.85).aspx (http://msdn.microsoft.com/en-us/library/windows/desktop/system.management.automation.runspaces.initialsessionstate.createdefault2(v=VS.85).aspx) in the Microsoft Developer Network (MSDN) library.</source>
          <target state="translated">如需有關資訊 <bpt id="p1">**</bpt>CreateDefault2<ept id="p1">**</ept> 方法以建立較新樣式的工作階段使用核心模組，請參閱 「 CreateDefault2 Methodhttp://msdn.microsoft.com/en-us/library/windows/desktop/system.management.automation.runspaces.initialsessionstate.createdefault2 (vs.85 (Microsoft Developer Network (MSDN) 文件庫中的 http://msdn.microsoft.com/en-us/library/windows/desktop/system.management.automation.runspaces.initialsessionstate.createdefault2 (vs.85)。</target>       </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Import-Module<ept id="p1">**</ept> cannot import Windows PowerShell Core modules from another session.</source>
          <target state="translated"><bpt id="p1">**</bpt>匯入模組<ept id="p1">**</ept> 無法從另一個工作階段匯入 Windows PowerShell 核心模組。</target>       </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve">
          <source>The Windows PowerShell Core modules have names that begin with Microsoft.PowerShell.</source>
          <target state="translated">Windows PowerShell 核心模組名稱的開頭為 Microsoft.PowerShell。</target>       </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve">
          <source>In Windows PowerShell 2.0, some of the property values of the module object, such as the <bpt id="p1">**</bpt>ExportedCmdlets<ept id="p1">**</ept> and <bpt id="p2">**</bpt>NestedModules<ept id="p2">**</ept> property values, were not populated until the module was imported and were not available on the module object that the <bpt id="p3">*</bpt>PassThru<ept id="p3">*</ept> parameter returns.</source>
          <target state="translated">在 Windows PowerShell 2.0 中，某些屬性值，模組的物件，例如 <bpt id="p1">**</bpt>ExportedCmdlets<ept id="p1">**</ept> 和 <bpt id="p2">**</bpt>NestedModules<ept id="p2">**</ept> 屬性值之前不會填入已匯入模組，且無法使用模組物件上的 <bpt id="p3">*</bpt>PassThru<ept id="p3">*</ept> 參數傳回。</target>       </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve">
          <source>In Windows PowerShell 3.0, all module property values are populated.</source>
          <target state="translated">在 Windows PowerShell 3.0 中，會填入模組的所有屬性值。</target>       </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve">
          <source>If you attempt to import a module that contains mixed-mode assemblies that are not compatible with Windows PowerShell 3.0, <bpt id="p1">**</bpt>Import-Module<ept id="p1">**</ept> returns an error message like the following one.</source>
          <target state="translated">如果您嘗試匯入模組，其中包含與 Windows PowerShell 3.0 中，並不相容的混合模式組件 <bpt id="p1">**</bpt>匯入模組<ept id="p1">**</ept> 傳回下列其中一個如下的錯誤訊息。</target>       </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve">
          <source>This error occurs when a module that is designed for Windows PowerShell 2.0 contains at least one mixed-module assembly, that is, an assembly that includes both managed and non-managed code, such as C++ and C#.</source>
          <target state="translated">適用於 Windows PowerShell 2.0 模組包含至少一個混合模組組件，也就是包含 managed 和 unmanaged 程式碼，例如 c + + 和 C# 組件時，就會發生此錯誤。</target>       </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve">
          <source>To import a module that contains mixed-mode assemblies, start Windows PowerShell 2.0 by using the following command, and then try the <bpt id="p1">**</bpt>Import-Module<ept id="p1">**</ept> command again.</source>
          <target state="translated">若要匯入包含混合模式組件的模組，請使用下列命令，來啟動 Windows PowerShell 2.0，然後再試 <bpt id="p1">**</bpt>匯入模組<ept id="p1">**</ept> 命令一次。</target>       </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve">
          <source>To use the CIM session feature, the remote computer must have WS-Management remoting and Windows Management Instrumentation (WMI), which is the Microsoft implementation of the Common Information Model (CIM) standard.</source>
          <target state="translated">若要使用 CIM 工作階段功能，遠端電腦必須具備 WS-Management 遠端功能和 Windows Management Instrumentation (WMI)，這是 Microsoft 實作的「通用訊息模型 (CIM)」標準。</target>       </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve">
          <source>The computer must also have the Module Discovery WMI provider or an alternate CIM provider that has the same basic features.</source>
          <target state="translated">電腦也必須擁有具有相同基本功能的「模組探索」WMI 提供者或替代 CIM 提供者。</target>       </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve">
          <source>You can use the CIM session feature on computers that are not running a Windows operating system and on Windows computers that have Windows PowerShell, but do not have Windows PowerShell remoting enabled.</source>
          <target state="translated">您可以在不是執行 Windows 作業系統的電腦上，以及具有 Windows PowerShell 但未啟用 Windows PowerShell 遠端功能的 Windows 電腦上，使用 CIM 工作階段功能。</target>       </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve">
          <source>You can also use the CIM parameters to get CIM modules from computers that have Windows PowerShell remoting enabled, including the local computer.</source>
          <target state="translated">您也可以使用 CIM 參數，從已啟用 Windows PowerShell 遠端功能的電腦 (包括本機電腦) 取得 CIM 模組。</target>       </trans-unit>
        <trans-unit id="412" translate="yes" xml:space="preserve">
          <source>When you create a CIM session on the local computer, Windows PowerShell uses DCOM, instead of WMI, to create the session.</source>
          <target state="translated">當您在本機電腦上建立 CIM 工作階段時，Windows PowerShell 會使用 DCOM (而不是 WMI) 來建立工作階段。</target>       </trans-unit>
        <trans-unit id="413" translate="yes" xml:space="preserve">
          <source>RELATED LINKS</source>
          <target state="translated">相關的連結</target>       </trans-unit>
        <trans-unit id="414" translate="yes" xml:space="preserve">
          <source>Export-ModuleMember</source>
          <target state="translated">Export-ModuleMember</target>       </trans-unit>
        <trans-unit id="415" translate="yes" xml:space="preserve">
          <source>Get-Module</source>
          <target state="translated">Get-Module</target>       </trans-unit>
        <trans-unit id="416" translate="yes" xml:space="preserve">
          <source>New-Module</source>
          <target state="translated">New-Module</target>       </trans-unit>
        <trans-unit id="417" translate="yes" xml:space="preserve">
          <source>Remove-Module</source>
          <target state="translated">Remove-Module</target>       </trans-unit>
        <trans-unit id="418" translate="yes" xml:space="preserve">
          <source>Get-Verb</source>
          <target state="translated">Get-Verb</target>       </trans-unit>
        <trans-unit id="419" translate="yes" xml:space="preserve">
          <source>about_Modules</source>
          <target state="translated">about_Modules</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>