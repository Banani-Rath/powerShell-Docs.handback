<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-cn">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-1c394fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">6ece5c3aacfc6cd5d9790b1695b59c33e0e15fee</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">reference\4.0\Microsoft.PowerShell.Management\Get-Item.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions" />
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">044a2d5166ee38908a5c0a2fefd0e9997e2b9032</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d941376126d2300f96a4a9c72b1d7c5c83ad4fa4</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>powershell, cmdlet</source>
          <target state="translated">powershell cmdlet</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Get-Item</source>
          <target state="translated">Get-Item</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Get-Item</source>
          <target state="translated">Get-Item</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>SYNOPSIS</source>
          <target state="translated">简述</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Gets the item at the specified location.</source>
          <target state="translated">获取位于指定位置的项。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>SYNTAX</source>
          <target state="translated">语法</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Path (Default)</source>
          <target state="translated">路径 （默认值）</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>LiteralPath</source>
          <target state="translated">LiteralPath</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>DESCRIPTION</source>
          <target state="translated">说明</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The Get-Item cmdlet gets the item at the specified location.</source>
          <target state="translated">Get-Item cmdlet 获取位于指定位置的项。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>It does not get the contents of the item at the location unless you use a wildcard character (*) to request all the contents of the item.</source>
          <target state="translated">除非使用通配符 (*) 来请求该项的所有内容，否则此命令不会获取位于该位置的项的内容。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>The Get-Item cmdlet is used by Windows PowerShell providers to enable you to navigate through different types of data stores.</source>
          <target state="translated">Windows PowerShell 提供程序通过使用 Get-Item cmdlet，可以在不同类型的数据存储进行导航。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>EXAMPLES</source>
          <target state="translated">示例</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>-------------------------- EXAMPLE 1 --------------------------</source>
          <target state="translated">-------------------------- 示例 1 --------------------------</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>This command gets the current directory.</source>
          <target state="translated">此命令获取当前目录。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>The dot (.) represents the item at the current location (not its contents).</source>
          <target state="translated">句点 (.) 表示当前位置处的项（而非其内容）。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>-------------------------- EXAMPLE 2 --------------------------</source>
          <target state="translated">-------------------------- EXAMPLE 2 --------------------------</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>This command gets all the items in the current directory.</source>
          <target state="translated">此命令将获取当前目录中的所有项。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>The wildcard character (*) represents all the contents of the current item.</source>
          <target state="translated">通配符 (*) 表示当前项的所有内容。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>-------------------------- EXAMPLE 3 --------------------------</source>
          <target state="translated">-------------------------- EXAMPLE 3 --------------------------</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>This command gets the current directory of the C: drive.</source>
          <target state="translated">此命令获取 C: 驱动器的当前目录。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>The object that is retrieved represents only the directory, not its contents.</source>
          <target state="translated">检索到的对象仅表示目录，而不表示其内容。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>-------------------------- EXAMPLE 4 --------------------------</source>
          <target state="translated">-------------------------- EXAMPLE 4 --------------------------</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>This command gets the items in the C: drive.</source>
          <target state="translated">此命令获取 C: 驱动器中的项。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>The wildcard character (*) represents all the items in the container, not just the container.</source>
          <target state="translated">通配符 (*) 表示容器中的所有项，而不仅仅表示容器。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>In Windows PowerShell, use a single asterisk (<bpt id="p1">*</bpt>) to get contents, instead of the traditional "<ept id="p1">*</ept>.<bpt id="p2">*</bpt>". The format is interpreted literally, so "<ept id="p2">*</ept>.*" would not retrieve directories or file names without a dot.</source>
          <target state="translated">在 Windows PowerShell 中，可以使用单个星号 (<bpt id="p1">*</bpt>) 来获取内容，而不使用传统"<ept id="p1">*</ept>。<bpt id="p2">*</bpt>"。格式将按其原义解释，因此"<ept id="p2">*</ept>。 *"将不检索目录或文件不带点的名称。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>-------------------------- EXAMPLE 5 --------------------------</source>
          <target state="translated">-------------------------- EXAMPLE 5 --------------------------</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>This command gets the LastAccessTime property of the C:\Windows directory.</source>
          <target state="translated">此命令获取 C:\Windows 目录的 LastAccessTime 属性。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>LastAccessTime is just one property of file system directories.</source>
          <target state="translated">LastAccessTime 只是文件系统目录的一个属性。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>To see all of the properties of a directory, type "(Get-Item <ph id="ph1">\&lt;</ph>directory-name<ph id="ph2">\&gt;</ph>) | Get-Member".</source>
          <target state="translated">若要查看所有目录的属性，请键入"(Get-item <ph id="ph1">\&lt;</ph>目录名称<ph id="ph2">\&gt;</ph>) |Get-member"。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>-------------------------- EXAMPLE 6 --------------------------</source>
          <target state="translated">-------------------------- EXAMPLE 6 --------------------------</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>This command shows the contents of the Microsoft.PowerShell registry key.</source>
          <target state="translated">此命令显示 Microsoft.PowerShell 注册表项的内容。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>You can use Get-Item with the Windows PowerShell Registry provider to get registry keys and subkeys, but you must use Get-ItemProperty to get the registry values and data.</source>
          <target state="translated">可以将 Windows PowerShell Registry 提供程序与 Get-Item 一起使用以获取注册表项和子项，但必须使用 Get-ItemProperty 来获取注册表值和数据。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>-------------------------- EXAMPLE 7 --------------------------</source>
          <target state="translated">-------------------------- EXAMPLE 7 --------------------------</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>This command gets items in the Windows directory with names that include a dot (.), but do not begin with w<bpt id="p1">*</bpt>. This command works only when the path includes a wildcard character (<ept id="p1">*</ept>) to specify the contents of the item.</source>
          <target state="translated">此命令获取具有名称，其中包括句点 （.），但不是以 w 开头的 Windows 目录中的项<bpt id="p1">*</bpt>。此命令才起作用仅当该路径包括通配符字符 (<ept id="p1">*</ept>) 若要指定项的内容。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>PARAMETERS</source>
          <target state="translated">参数</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>-Credential</source>
          <target state="translated">-Credential</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Specifies a user account that has permission to perform this action.</source>
          <target state="translated">指定有权执行此操作的用户帐户。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>The default is the current user.</source>
          <target state="translated">默认为当前用户。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Type a user-name, such as "User01" or "Domain01\User01", or enter a PSCredential object, such as one generated by the Get-Credential cmdlet.</source>
          <target state="translated">键入用户名，如“User01”或“Domain01\User01”；或输入 PSCredential 对象，如 Get-Credential cmdlet 生成的一个 PSCredential 对象。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>If you type a user name, you will be prompted for a password.</source>
          <target state="translated">如果键入用户名，则将提示你输入密码。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>This parameter is not supported by any providers installed with Windows PowerShell.</source>
          <target state="translated">随同 Windows PowerShell 一起安装的任何提供程序都不支持此参数。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>-Exclude</source>
          <target state="translated">-排除</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Omits the specified items.</source>
          <target state="translated">忽略指定项。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>The value of this parameter qualifies the Path parameter.</source>
          <target state="translated">此参数值使 Path 参数有效。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Enter a path element or pattern, such as "*.txt".</source>
          <target state="translated">请输入路径元素或模式，例如“*.txt”。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Wildcards are permitted.</source>
          <target state="translated">允许使用通配符。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>The Exclude parameter is effective only when the command includes the contents of an item, such as C:\Windows<ph id="ph1">\*</ph>, where the wildcard character specifies the contents of the C:\Windows directory.</source>
          <target state="translated">仅当命令中包含一个项目，例如 C:\Windows 的内容时，Exclude 参数才有效<ph id="ph1">\*</ph>, ，其中通配符指定 C:\Windows 目录的内容。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>-Filter</source>
          <target state="translated">筛选器</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Specifies a filter in the provider's format or language.</source>
          <target state="translated">以提供程序的格式或语言指定筛选器。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>The value of this parameter qualifies the Path parameter.</source>
          <target state="translated">此参数值使 Path 参数有效。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>The syntax of the filter, including the use of wildcards, depends on the provider.</source>
          <target state="translated">筛选器的语法（包括通配符的使用）取决于提供程序。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Filters are more efficient than other parameters, because the provider applies them when retrieving the objects, rather than having Windows PowerShell filter the objects after they are retrieved.</source>
          <target state="translated">筛选器比其他参数更有效，因为提供程序是在检索对象时应用筛选器，而不是在检索对象后再由 Windows PowerShell 筛选对象。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>-Force</source>
          <target state="translated">-Force</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Allows the cmdlet to get items that cannot otherwise be accessed, such as hidden items.</source>
          <target state="translated">允许 cmdlet 获取非此不能访问的项，如隐藏项。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>Implementation varies from provider to provider.</source>
          <target state="translated">不同提供程序有不同的实现。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>For more information, see about_Providers.</source>
          <target state="translated">有关详细信息，请参阅 about_Providers。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Even using the Force parameter, the cmdlet cannot override security restrictions.</source>
          <target state="translated">即使使用 Force 参数，该 cmdlet 也无法覆盖安全限制。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>-Include</source>
          <target state="translated">-Include</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>Retrieves only the specified items.</source>
          <target state="translated">只检索指定项。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>The value of this parameter qualifies the Path parameter.</source>
          <target state="translated">此参数值使 Path 参数有效。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>Enter a path element or pattern, such as "*.txt".</source>
          <target state="translated">请输入路径元素或模式，例如“*.txt”。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>Wildcards are permitted.</source>
          <target state="translated">允许使用通配符。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>The Include parameter is effective only when the command includes the contents of an item, such as C:\Windows<ph id="ph1">\*</ph>, where the wildcard character specifies the contents of the C:\Windows directory.</source>
          <target state="translated">仅当命令中包含一个项目，例如 C:\Windows 的内容时，Include 参数才有效<ph id="ph1">\*</ph>, ，其中通配符指定 C:\Windows 目录的内容。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>-LiteralPath</source>
          <target state="translated">-LiteralPath</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>Specifies a path to the item.</source>
          <target state="translated">指定项的路径。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>Unlike Path, the value of LiteralPath is used exactly as it is typed.</source>
          <target state="translated">与 Path 不同，LiteralPath 的值严格按照所键入的形式使用。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>No characters are interpreted as wildcards.</source>
          <target state="translated">不会将任何字符解释为通配符。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>If the path includes escape characters, enclose it in single quotation marks.</source>
          <target state="translated">如果路径包括转义符，请将其括在单引号中。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>Single quotation marks tell Windows PowerShell not to interpret any characters as escape sequences.</source>
          <target state="translated">单引号会告知 Windows PowerShell 不要将所有字符都解释为转义序列。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>-Path</source>
          <target state="translated">-Path</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>Specifies the path to an item.</source>
          <target state="translated">指定项的路径。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>Get-Item gets the item at the specified location.</source>
          <target state="translated">Get-Item 获取位于指定位置的项。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>Wildcards are permitted.</source>
          <target state="translated">允许使用通配符。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>This parameter is required, but the parameter name ("Path") is optional.</source>
          <target state="translated">此参数为必需参数，但参数名（“Path”）为可选项。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>Use a dot (.) to specify the current location.</source>
          <target state="translated">使用句点 (.) 来指定当前位置。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>Use the wildcard character (*) to specify all the items in the current location.</source>
          <target state="translated">使用通配符 (*) 可以指定当前位置中的所有项。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>-UseTransaction</source>
          <target state="translated">-UseTransaction</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>Includes the command in the active transaction.</source>
          <target state="translated">在活动事务中使用该命令。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>This parameter is valid only when a transaction is in progress.</source>
          <target state="translated">仅当正在执行事务时，此参数才有效。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>For more information, see Includes the command in the active transaction.</source>
          <target state="translated">有关详细信息，请参阅包括在活动事务中的命令。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>This parameter is valid only when a transaction is in progress.</source>
          <target state="translated">仅当正在执行事务时，此参数才有效。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>For more information, see</source>
          <target state="translated">有关详细信息，请参阅本主题后面的</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>-Stream</source>
          <target state="translated">数据流</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>{{Fill Stream Description}}</source>
          <target state="translated">{{填充流描述}}</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>CommonParameters</source>
          <target state="translated">CommonParameters</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutVariable, -OutBuffer, -PipelineVariable, -Verbose, -WarningAction, and -WarningVariable.</source>
          <target state="translated">此 cmdlet 支持以下常见参数:-调试-ErrorAction、-ErrorVariable、-InformationAction、-InformationVariable、-OutVariable、-OutBuffer、-PipelineVariable、-Verbose、-WarningAction 和-WarningVariable。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>For more information, see about_CommonParameters (http://go.microsoft.com/fwlink/?LinkID=113216).</source>
          <target state="translated">有关详细信息，请参阅 about_CommonParameters (http://go.microsoft.com/fwlink/?LinkID=113216)。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>INPUTS</source>
          <target state="translated">输入</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>System.String</source>
          <target state="translated">System.String</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>You can pipe a string that contains a path to Get-Item.</source>
          <target state="translated">可以通过管道将包含路径的字符串传递给 Get-Item。</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>OUTPUTS</source>
          <target state="translated">输出</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>System.Object</source>
          <target state="translated">System.Object</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>Get-Item returns the objects that it gets.</source>
          <target state="translated">Get-Item 返回所获取的对象。</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>The type is determined by the type of objects in the path.</source>
          <target state="translated">类型由路径中的对象的类型确定。</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>NOTES</source>
          <target state="translated">说明</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>You can also refer to Get-Item by its built-in alias, "gi".</source>
          <target state="translated">还可以使用 Get-Item 的内置别名“gi”来对其进行引用。</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>For more information, see about_Aliases.</source>
          <target state="translated">有关详细信息，请参阅 about_Aliases。</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>Get-Item does not have a Recurse parameter, because it gets only an item, not its contents.</source>
          <target state="translated">Get-Item 没有 Recurse 参数，因为它只获取项，而不获取其内容。</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>To get the contents of an item recursively, use Get-ChildItem.</source>
          <target state="translated">若要递归获取项的内容，请使用 Get-ChildItem。</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>To navigate through the registry, use Get-Item to get registry keys and Get-ItemProperty to get registry values and data.</source>
          <target state="translated">若要在注册表中导航，请使用 Get-Item 来获取注册表项，使用 Get-ItemProperty 来获取注册表值和数据。</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>The registry values are considered to be properties of the registry key.</source>
          <target state="translated">注册表值被视为注册表项的属性。</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>The Get-Item cmdlet is designed to work with the data exposed by any provider.</source>
          <target state="translated">Get-Item cmdlet 用于处理由任何提供程序公开的数据。</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>To list the providers available in your session, type "Get-PsProvider".</source>
          <target state="translated">若要列出会话中可用的提供程序，请键入“Get-PsProvider”。</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>For more information, see about_Providers.</source>
          <target state="translated">有关详细信息，请参阅 about_Providers。</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>RELATED LINKS</source>
          <target state="translated">相关的链接</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>Clear-Item</source>
          <target state="translated">Clear-Item</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>Copy-Item</source>
          <target state="translated">Copy-Item</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>Invoke-Item</source>
          <target state="translated">Invoke-Item</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>Move-Item</source>
          <target state="translated">Move-Item</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>New-Item</source>
          <target state="translated">New-Item</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>Remove-Item</source>
          <target state="translated">Remove-Item</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>Rename-Item</source>
          <target state="translated">Rename-Item</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>Set-Item</source>
          <target state="translated">Set-Item</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>about_Providers</source>
          <target state="translated">about_Providers</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>