<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-cn">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-db30baf" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">b7e752a1615da4540106ec32754f873c5d7aa5d9</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">scripting\getting-started\cookbooks\Manipulating-Items-Directly.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions" />
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Manipulating Items Directly</source>
          <target state="translated">直接操作项</target>         
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Manipulating Items Directly</source>
          <target state="translated">直接操作项</target>         
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>The elements that you see in Windows PowerShell drives, such as the files and folders in the file system drives, and the registry keys in the Windows PowerShell registry drives, are called <bpt id="p1">*</bpt>items<ept id="p1">*</ept> in Windows PowerShell.</source>
          <target state="translated">在 Windows PowerShell 驱动器中看到的元素（例如文件系统驱动器中的文件和文件夹），以及 Windows PowerShell 注册表驱动器中的注册表项在 Windows PowerShell 中均称为<bpt id="p1">*</bpt>项<ept id="p1">*</ept>。</target>         
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>The cmdlets for working with them item have the noun <bpt id="p1">**</bpt>Item<ept id="p1">**</ept> in their names.</source>
          <target state="translated">用于使用这些项的 cmdlet 名称中具有名词 <bpt id="p1">**</bpt>Item<ept id="p1">**</ept>。</target>         
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>The output of the <bpt id="p1">**</bpt>Get<ph id="ph1">\-</ph>Command <ph id="ph2">\-</ph>Noun Item<ept id="p1">**</ept> command shows that there are nine Windows PowerShell item cmdlets.</source>
          <target state="translated"><bpt id="p1">**</bpt>Get<ph id="ph1">\-</ph>Command <ph id="ph2">\-</ph>Noun Item<ept id="p1">**</ept> 命令的输出显示有九个 Windows PowerShell 项 cmdlet。</target>         
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Creating New Items (New<ph id="ph1">\-</ph>Item)</source>
          <target state="translated">创建新项 (New<ph id="ph1">\-</ph>Item)</target>         
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>To create a new item in the file system, use the <bpt id="p1">**</bpt>New<ph id="ph1">\-</ph>Item<ept id="p1">**</ept> cmdlet.</source>
          <target state="translated">若要在文件系统中创建新项，请使用 <bpt id="p1">**</bpt>New<ph id="ph1">\-</ph>Item<ept id="p1">**</ept> cmdlet。</target>         
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Include the <bpt id="p1">**</bpt>Path<ept id="p1">**</ept> parameter with path to the item, and the <bpt id="p2">**</bpt>ItemType<ept id="p2">**</ept> parameter with a value of "file" or "directory".</source>
          <target state="translated">包含带有项的路径的 <bpt id="p1">**</bpt>Path<ept id="p1">**</ept> 参数，以及值为“file”或“directory”的 <bpt id="p2">**</bpt>ItemType<ept id="p2">**</ept> 参数。</target>         
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>For example, to create a new directory named "New.Directory"in the C:<ph id="ph1">\\</ph>Temp directory,  type:</source>
          <target state="translated">例如，若要在 C:<ph id="ph1">\\</ph>Temp 目录中创建名为“New.Directory”的新目录，请键入：</target>         
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>To create a file, change the value of the <bpt id="p1">**</bpt>ItemType<ept id="p1">**</ept> parameter to "file".</source>
          <target state="translated">若要创建文件，请将 <bpt id="p1">**</bpt>ItemType<ept id="p1">**</ept> 参数的值更改为“file”。</target>         
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>For example, to create a file named "file1.txt" in the New.Directory directory, type:</source>
          <target state="translated">例如，若要在 New.Directory 目录中创建名为“file1.txt”的文件，请键入：</target>         
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>You can use the same technique to create a new registry key.</source>
          <target state="translated">可以使用相同技术创建新的注册表项。</target>         
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>In fact, a registry key is easier to create because the only item type in the Windows registry is a key.</source>
          <target state="translated">事实上，注册表项更容易创建，因为 Windows 注册表中的唯一项类型就是注册表项。</target>         
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>(Registry entries are item <bpt id="p1">*</bpt>properties<ept id="p1">*</ept>.) For example, to create a key named "<ph id="ph1">\_</ph>Test" in the CurrentVersion subkey, type:</source>
          <target state="translated">（注册表条目是项<bpt id="p1">*</bpt>属性<ept id="p1">*</ept>。）例如，若要在 CurrentVersion 子项中创建名为“<ph id="ph1">\_</ph>Test”的项，请键入：</target>         
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>When typing a registry path, be sure to include the colon (<bpt id="p1">**</bpt>:<ept id="p1">**</ept>) in the Windows PowerShell drive names, HKLM: and HKCU:.</source>
          <target state="translated">在键入注册表路径时，请确保在 Windows PowerShell 驱动器名称中包含冒号 (<bpt id="p1">**</bpt>:<ept id="p1">**</ept>)，如 HKLM: 和 HKCU:。</target>         
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Without the colon, Windows PowerShell does not recognize the drive name in the path.</source>
          <target state="translated">如果不带冒号，则 Windows PowerShell 无法识别路径中的驱动器名称。</target>         
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Why Registry Values are not Items</source>
          <target state="translated">为什么注册表值不是项</target>         
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>When you use the <bpt id="p1">**</bpt>Get<ph id="ph1">\-</ph>ChildItem<ept id="p1">**</ept> cmdlet to find the items in a registry key, you will never see actual registry entries or their values.</source>
          <target state="translated">当使用 <bpt id="p1">**</bpt>Get<ph id="ph1">\-</ph>ChildItem<ept id="p1">**</ept> cmdlet 查找注册表项中的项时，你将永远不会看到实际的注册表条目或对应的值。</target>         
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>For example, the registry key <bpt id="p1">**</bpt>HKEY<ph id="ph1">\_</ph>LOCAL<ph id="ph2">\_</ph>MACHINE<ph id="ph3">\\</ph>Software<ph id="ph4">\\</ph>Microsoft<ph id="ph5">\\</ph>Windows<ph id="ph6">\\</ph>CurrentVersion<ph id="ph7">\\</ph>Run<ept id="p1">**</ept> usually contains several registry entries that represent applications that run when the system starts.</source>
          <target state="translated">例如，注册表项 <bpt id="p1">**</bpt>HKEY<ph id="ph1">\_</ph>LOCAL<ph id="ph2">\_</ph>MACHINE<ph id="ph3">\\</ph>Software<ph id="ph4">\\</ph>Microsoft<ph id="ph5">\\</ph>Windows<ph id="ph6">\\</ph>CurrentVersion<ph id="ph7">\\</ph>Run<ept id="p1">**</ept> 通常包含若干注册表条目，用于表示在系统启动时运行的应用程序。</target>         
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>However, when you use <bpt id="p1">**</bpt>Get<ph id="ph1">\-</ph>ChildItem<ept id="p1">**</ept> to look for child items in the key, all you will see is the <bpt id="p2">**</bpt>OptionalComponents<ept id="p2">**</ept> subkey of the key:</source>
          <target state="translated">但是，当使用 <bpt id="p1">**</bpt>Get<ph id="ph1">\-</ph>ChildItem<ept id="p1">**</ept> 查找注册表项中的子项时，你只会看到注册表项的 <bpt id="p2">**</bpt>OptionalComponents<ept id="p2">**</ept> 子项：</target>         
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Although it would be convenient to treat registry entries as items, you cannot specify a path to a registry entry in a way that ensures that it is unique.</source>
          <target state="translated">尽管将注册表条目视为项会很方便，但无法确保指定的注册表条目路径是唯一的。</target>         
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>The path notation does not distinguish between the registry subkey named <bpt id="p1">**</bpt>Run<ept id="p1">**</ept> and the <bpt id="p2">**</bpt>(Default)<ept id="p2">**</ept> registry entry in the <bpt id="p3">**</bpt>Run<ept id="p3">**</ept> subkey.</source>
          <target state="translated">路径表示法不区分名为 <bpt id="p1">**</bpt>Run<ept id="p1">**</ept> 的注册表子项和 <bpt id="p3">**</bpt>Run<ept id="p3">**</ept> 子项中的 <bpt id="p2">**</bpt>(Default)<ept id="p2">**</ept> 注册表条目。</target>         
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Furthermore, because registry entry names can contain the backslash character (<bpt id="p1">**</bpt><ph id="ph1">\\</ph><ept id="p1">**</ept>), if regsitry entries were items, then you could not use the path notation to distinguish a registry entry named <bpt id="p2">**</bpt>Windows<ph id="ph2">\\</ph>CurrentVersion<ph id="ph3">\\</ph>Run<ept id="p2">**</ept> from the subkey that is located in that path.</source>
          <target state="translated">此外，由于注册表项名称可以包含反斜杠字符 (<bpt id="p1">**</bpt><ph id="ph1">\\</ph><ept id="p1">**</ept>)，因此如果注册表项是项目，则无法使用路径表示法区分名为 <bpt id="p2">**</bpt>Windows<ph id="ph2">\\</ph>CurrentVersion<ph id="ph3">\\</ph>Run<ept id="p2">**</ept> 的注册表项和此路径中的子项。</target>         
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Renaming Existing Items (Rename<ph id="ph1">\-</ph>Item)</source>
          <target state="translated">重命名现有项 (Rename<ph id="ph1">\-</ph>Item)</target>         
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>To change the name of a file or folder, use the <bpt id="p1">**</bpt>Rename<ph id="ph1">\-</ph>Item<ept id="p1">**</ept> cmdlet.</source>
          <target state="translated">若要更改文件或文件夹的名称，请使用 <bpt id="p1">**</bpt>Rename<ph id="ph1">\-</ph>Item<ept id="p1">**</ept> cmdlet。</target>         
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>The following command changes the name of the <bpt id="p1">**</bpt>file1.txt<ept id="p1">**</ept> file to <bpt id="p2">**</bpt>fileOne.txt<ept id="p2">**</ept>.</source>
          <target state="translated">以下命令将 <bpt id="p1">**</bpt>file1.txt<ept id="p1">**</ept> 文件的名称更改为 <bpt id="p2">**</bpt>fileOne.txt<ept id="p2">**</ept>。</target>         
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>Rename<ph id="ph1">\-</ph>Item<ept id="p1">**</ept> cmdlet can change the name of a file or a folder, but it cannot move an item.</source>
          <target state="translated"><bpt id="p1">**</bpt>Rename<ph id="ph1">\-</ph>Item<ept id="p1">**</ept> cmdlet 可以更改文件或文件夹的名称，但它不能移动项。</target>         
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>The following command fails because it attempts to move the file from the New.Directory directory to the Temp directory.</source>
          <target state="translated">以下命令将失败，因为它尝试将文件从 New.Directory 目录移动到 Temp 目录。</target>         
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Moving Items (Move<ph id="ph1">\-</ph>Item)</source>
          <target state="translated">移动项 (Move<ph id="ph1">\-</ph>Item)</target>         
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>To move a file or folder, use the <bpt id="p1">**</bpt>Move<ph id="ph1">\-</ph>Item<ept id="p1">**</ept> cmdlet.</source>
          <target state="translated">若要移动文件或文件夹，请使用 <bpt id="p1">**</bpt>Move<ph id="ph1">\-</ph>Item<ept id="p1">**</ept> cmdlet。</target>         
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>For example, the following command moves the New.Directory directory from the C:<ph id="ph1">\\</ph>temp directory to the root of the C: drive.</source>
          <target state="translated">例如，以下命令将 New.Directory 目录从 C:<ph id="ph1">\\</ph>temp 目录移动到 C: 驱动器的根目录。</target>         
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>To verify that the item was moved, include the <bpt id="p1">**</bpt>PassThru<ept id="p1">**</ept> parameter of the <bpt id="p2">**</bpt>Move<ph id="ph1">\-</ph>Item<ept id="p2">**</ept> cmdlet.</source>
          <target state="translated">若要验证该项是否已移动，请包含 <bpt id="p2">**</bpt>Move<ph id="ph1">\-</ph>Item<ept id="p2">**</ept> cmdlet 的 <bpt id="p1">**</bpt>PassThru<ept id="p1">**</ept> 参数。</target>         
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Without <bpt id="p1">**</bpt>Passthru<ept id="p1">**</ept>, the <bpt id="p2">**</bpt>Move<ph id="ph1">\-</ph>Item<ept id="p2">**</ept> cmdlet does not display any results.</source>
          <target state="translated">在没有 <bpt id="p1">**</bpt>Passthru<ept id="p1">**</ept> 的情况下，<bpt id="p2">**</bpt>Move<ph id="ph1">\-</ph>Item<ept id="p2">**</ept> cmdlet 不显示任何结果。</target>         
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Copying Items (Copy<ph id="ph1">\-</ph>Item)</source>
          <target state="translated">复制项 (Copy<ph id="ph1">\-</ph>Item)</target>         
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>If you are familiar with the copy operations in other shells, you might find the behavior of the <bpt id="p1">**</bpt>Copy<ph id="ph1">\-</ph>Item<ept id="p1">**</ept> cmdlet in Windows PowerShell to be unusual.</source>
          <target state="translated">如果你熟悉其他 shell 中的复制操作，你可能会发现 Windows PowerShell 中的 <bpt id="p1">**</bpt>Copy<ph id="ph1">\-</ph>Item<ept id="p1">**</ept> cmdlet 行为不正常。</target>         
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>When you copy an item from one location to another, Copy<ph id="ph1">\-</ph>Item does not copy its contents by default.</source>
          <target state="translated">将项从一个位置复制到另一个位置时，Copy<ph id="ph1">\-</ph>Item 默认不复制其内容。</target>         
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>For example, if you copy the <bpt id="p1">**</bpt>New.Directory<ept id="p1">**</ept> directory from the C: drive to the C:<ph id="ph1">\\</ph>temp directory, the command succeeds, but the files in the New.Directory directory are not copied.</source>
          <target state="translated">例如，如果将 <bpt id="p1">**</bpt>New.Directory<ept id="p1">**</ept> 目录从 C: 驱动器复制到 C:<ph id="ph1">\\</ph>temp 目录，命令会成功运行，但不会复制 New.Directory 目录中的文件。</target>         
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>If you display the contents of <bpt id="p1">**</bpt>C:<ph id="ph1">\\</ph>temp<ph id="ph2">\\</ph>New.Directory<ept id="p1">**</ept>, you will find that it contains no files:</source>
          <target state="translated">如果显示 <bpt id="p1">**</bpt>C:<ph id="ph1">\\</ph>temp<ph id="ph2">\\</ph>New.Directory<ept id="p1">**</ept> 的内容，你将发现它未包含任何文件：</target>         
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Why doesn't the <bpt id="p1">**</bpt>Copy<ph id="ph1">\-</ph>Item<ept id="p1">**</ept> cmdlet copy the contents to the new location?</source>
          <target state="translated">为什么 <bpt id="p1">**</bpt>Copy<ph id="ph1">\-</ph>Item<ept id="p1">**</ept> cmdlet 不将内容复制到新位置？</target>         
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>Copy<ph id="ph1">\-</ph>Item<ept id="p1">**</ept> cmdlet was designed to be generic; it is not just for copying files and folders.</source>
          <target state="translated"><bpt id="p1">**</bpt>Copy<ph id="ph1">\-</ph>Item<ept id="p1">**</ept> cmdlet 的设计目标是通用；它不再仅仅用于复制文件和文件夹。</target>         
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Also, even when copying files and folders, you might want to copy only the container and not the items within it.</source>
          <target state="translated">此外，即使在复制文件和文件夹时，你也可能只想要复制容器，而不是复制其中的项。</target>         
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>To copy all of the contents of a folder, include the <bpt id="p1">**</bpt>Recurse<ept id="p1">**</ept> parameter of the <bpt id="p2">**</bpt>Copy<ph id="ph1">\-</ph>Item<ept id="p2">**</ept> cmdlet in the command.</source>
          <target state="translated">若要复制文件夹中的所有内容，请在命令中包含 <bpt id="p2">**</bpt>Copy<ph id="ph1">\-</ph>Item<ept id="p2">**</ept> cmdlet 的 <bpt id="p1">**</bpt>Recurse<ept id="p1">**</ept> 参数。</target>         
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>If you have already copied the directory without its contents, add the <bpt id="p1">**</bpt>Force<ept id="p1">**</ept> parameter, which allows you to overwrite the empty folder.</source>
          <target state="translated">如果你已复制目录，而未复制其内容，则可添加 <bpt id="p1">**</bpt>Force<ept id="p1">**</ept> 参数，该参数允许你覆盖空文件夹。</target>         
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Deleting Items (Remove<ph id="ph1">\-</ph>Item)</source>
          <target state="translated">删除项 (Remove<ph id="ph1">\-</ph>Item)</target>         
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>To delete files and folders, use the <bpt id="p1">**</bpt>Remove<ph id="ph1">\-</ph>Item<ept id="p1">**</ept> cmdlet.</source>
          <target state="translated">若要删除文件和文件夹，请使用 <bpt id="p1">**</bpt>Remove<ph id="ph1">\-</ph>Item<ept id="p1">**</ept> cmdlet。</target>         
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Windows PowerShell cmdlets, such as <bpt id="p1">**</bpt>Remove<ph id="ph1">\-</ph>Item<ept id="p1">**</ept>, that can make significant, irreversible changes will often prompt for confirmation when you enter its commands.</source>
          <target state="translated">可进行重要且不可逆更改的 Windows PowerShell cmdlet（例如 <bpt id="p1">**</bpt>Remove<ph id="ph1">\-</ph>Item<ept id="p1">**</ept>）在你输入其命令时通常会提示你进行确认。</target>         
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>For example, if you try to remove the <bpt id="p1">**</bpt>New.Directory<ept id="p1">**</ept> folder, you will be prompted to confirm the command, because the folder contains files:</source>
          <target state="translated">例如，如果你尝试删除 <bpt id="p1">**</bpt>New.Directory<ept id="p1">**</ept> 文件夹，系统将提示你确认命令，因为该文件夹中包含文件：</target>         
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Because <bpt id="p1">**</bpt>Yes<ept id="p1">**</ept> is the default response, to delete the folder and its files, press the <bpt id="p2">**</bpt>Enter<ept id="p2">**</ept> key.</source>
          <target state="translated">由于“是”<bpt id="p1">**</bpt><ept id="p1">**</ept>是默认响应，因此若要删除文件夹及其文件，请按“Enter”<bpt id="p2">**</bpt><ept id="p2">**</ept>键。</target>         
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>To remove the folder without confirming, use the <bpt id="p1">**</bpt><ph id="ph1">\-</ph>Recurse<ept id="p1">**</ept> parameter.</source>
          <target state="translated">若要删除文件夹而不进行确认，请使用 <bpt id="p1">**</bpt><ph id="ph1">\-</ph>Recurse<ept id="p1">**</ept> 参数。</target>         
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Executing Items (Invoke<ph id="ph1">\-</ph>Item)</source>
          <target state="translated">执行项 (Invoke<ph id="ph1">\-</ph>Item)</target>         
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Windows PowerShell uses the <bpt id="p1">**</bpt>Invoke<ph id="ph1">\-</ph>Item<ept id="p1">**</ept> cmdlet to perform a default action for a file or folder.</source>
          <target state="translated">Windows PowerShell 使用 <bpt id="p1">**</bpt>Invoke<ph id="ph1">\-</ph>Item<ept id="p1">**</ept> cmdlet 针对文件或文件夹执行默认操作。</target>         
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>This default action is determined by the default application handler in the registry; the effect is the same as if you double<ph id="ph1">\-</ph>click the item in File Explorer.</source>
          <target state="translated">此默认操作由注册表中的默认应用程序处理程序确定；效果与在文件资源管理器中双击该项的效果相同。</target>         
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>For example, suppose you run the following command:</source>
          <target state="translated">例如，假设你要运行以下命令：</target>         
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>An Explorer window that is located in C:<ph id="ph1">\\</ph>Windows appears, just as if you had double<ph id="ph2">\-</ph>clicked the C:<ph id="ph3">\\</ph>Windows folder.</source>
          <target state="translated">位于 C:<ph id="ph1">\\</ph>Windows 中的“资源管理器”窗口将会出现，正如双击 C:<ph id="ph3">\\</ph>Windows 文件夹一样。</target>         
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>If you invoke the <bpt id="p1">**</bpt>Boot.ini<ept id="p1">**</ept> file on a system prior to Windows Vista:</source>
          <target state="translated">如果在 Windows Vista 之前的系统上调用 <bpt id="p1">**</bpt>Boot.ini<ept id="p1">**</ept> 文件：</target>         
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>If the .ini file type is associated with Notepad, the boot.ini file opens in Notepad.</source>
          <target state="translated">如果 .ini 文件类型与记事本相关联，则 boot.ini 文件将在记事本中打开。</target>         
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>