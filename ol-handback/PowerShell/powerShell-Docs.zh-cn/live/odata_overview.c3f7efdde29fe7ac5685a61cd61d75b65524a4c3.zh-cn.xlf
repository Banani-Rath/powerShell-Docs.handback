<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="md" source-language="en-US" target-language="zh-cn">
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Generate PowerShell Cmdlets based on OData Endpoint</source>
          <target state="translated">基于 OData 终结点生成 PowerShell Cmdlet</target>         
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Generate Windows PowerShell cmdlets based on an OData endpoint</source>
          <target state="translated">基于 OData 终结点生成 Windows PowerShell cmdlet</target>         
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Export-ODataEndpointProxy<ept id="p1">**</ept> is a cmdlet that generates a set of Windows PowerShell cmdlets based on the functionality exposed by a given OData endpoint.</source>
          <target state="translated"><bpt id="p1">**</bpt>Export-ODataEndpointProxy<ept id="p1">**</ept> 是一个 cmdlet，它基于给定的 OData 终结点公开的功能生成一组 Windows PowerShell cmdlet。</target>         
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>The following example shows how to use this new cmdlet:</source>
          <target state="translated">以下示例演示了如何使用此新的 cmdlet：</target>         
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>\# Basic use case of Export-ODataEndpointProxy</source>
          <target state="translated">\# Export-ODataEndpointProxy 的基本用例</target>         
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>There are still parts of key use cases in development for this functionality, including, but not limited to:</source>
          <target state="translated">此功能的开发阶段仍然使用了部分关键用例，包括但不限于：</target>         
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Associations</source>
          <target state="translated">关联</target>         
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Passing streams</source>
          <target state="translated">传输流数据</target>         
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Generate Windows PowerShell cmdlets based on an OData endpoint with ODataUtils</source>
          <target state="translated">基于 OData 终结点和 ODataUtils 生成 Windows PowerShell cmdlet</target>         
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The ODataUtils module allows generation of Windows PowerShell cmdlets from REST endpoints that support OData.</source>
          <target state="translated">ODataUtils 模块允许从支持 OData 的 REST 终结点生成 Windows PowerShell cmdlet</target>         
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>The following incremental enhancements are in the Microsoft.PowerShell.ODataUtils Windows PowerShell module.</source>
          <target state="translated">Microsoft.PowerShell.ODataUtils Windows PowerShell 模块中具有以下增量增强功能。</target>         
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Channel additional information from server-side endpoint to client side.</source>
          <target state="translated">将附加信息从服务器端终结点引导到客户端。</target>         
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Client-side paging support</source>
          <target state="translated">客户端分页支持</target>         
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Server-side filtering by using the -Select parameter</source>
          <target state="translated">通过使用 -Select 参数进行的服务器端筛选</target>         
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Support for web request headers</source>
          <target state="translated">对 Web 请求标头的支持</target>         
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>The proxy cmdlets generated by the Export-ODataEndPointProxy cmdlet provide additional information (not mentioned in the $metadata used during the client-side proxy generation) from the server side OData endpoint on the Information stream (a new Windows PowerShell 5.0 feature).</source>
          <target state="translated">由 Export-ODataEndPointProxy cmdlet 生成的代理 cmdlet 提供来自信息流（Windows PowerShell 5.0 的新功能）上的服务器端 OData 终结点的附加信息（在客户端代理生成期间使用的 $metadata 中未提及）。</target>         
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Here is an example of how to get that information.</source>
          <target state="translated">下面举例说明了如何获取该信息。</target>         
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>You can get the records from the server side in batches by using client-side paging support.</source>
          <target state="translated">你可以通过使用客户端分页支持从服务器端中分批获取记录。</target>         
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>This is useful when you must get a large amount of data from the server over the network.</source>
          <target state="translated">当你必须通过网络从服务器获取大量数据时，这非常有用。</target>         
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>The generated proxy cmdlets support the –Select parameter which you can use as a filter to receive only the record properties that the client needs.</source>
          <target state="translated">生成的代理 cmdlet 支持 –Select 参数，你可以使用该参数作为筛选器以只接收客户端需要的记录属性。</target>         
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>This reduces the amount of data that is transferred over the network, because the filtering occurs on the server side.</source>
          <target state="translated">由于是在服务器端进行筛选，因此这将减少通过网络传输的数据量。</target>         
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>The Export-ODataEndpointProxy cmdlet, and the proxy cmdlets generated by it, now support the Headers parameter (supply values as a hash table), which you can use to channel any additional information that is expected by the server-side OData endpoint.</source>
          <target state="translated">Export-ODataEndpointProxy cmdlet 和由它生成的代理 cmdlet 现在支持 Headers 参数（提供作为哈希表的值），你可以使用该参数来引导服务器端 OData 终结点期望的任何附加信息。</target>         
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>In the following example, you can channel a Subscription key through Headers for services that are expecting a Subscription key for authentication.</source>
          <target state="translated">在下面的示例中，你可以通过 Headers 为需要订阅密匙用以进行身份验证的服务引导订阅密匙。</target>         
        </trans-unit>
      </group>
    </body>
  </file>
  <header xmlns="">
    <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">8849fb46853f12318dd34781d07085419737d196</xliffext:olfilehash>
  </header>
</xliff>