<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-cn">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-1c394fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">e43e5246a250719869e462a1d15dab020c587bcb</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">reference\5.0\Microsoft.PowerShell.Security\Get-Credential.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions" />
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02aa8d2fce24bb7aea4df935e69b78cc4a5621bb</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">289999b06138023c78ea2fb09a51a13320f0e170</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>powershell, cmdlet</source>
          <target state="translated">powershell cmdlet</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Get-Credential</source>
          <target state="translated">Get-Credential</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Get-Credential</source>
          <target state="translated">Get-Credential</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>SYNOPSIS</source>
          <target state="translated">简述</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Gets a credential object based on a user name and password.</source>
          <target state="translated">获取基于用户名和密码的凭据对象。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>SYNTAX</source>
          <target state="translated">语法</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>CredentialSet (Default)</source>
          <target state="translated">CredentialSet （默认值）</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>MessageSet</source>
          <target state="translated">消息集</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>DESCRIPTION</source>
          <target state="translated">说明</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>Get-Credential<ept id="p1">**</ept> cmdlet creates a credential object for a specified user name and password.</source>
          <target state="translated"> <bpt id="p1">**</bpt>Get-credential<ept id="p1">**</ept> cmdlet 创建指定的用户名和密码的凭据对象。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>You can use the credential object in security operations.</source>
          <target state="translated">你可以在安全操作中使用凭据对象。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Beginning in Windows PowerShell 3.0, you can use the <bpt id="p1">*</bpt>Message<ept id="p1">*</ept> parameter to specify a customized message on the dialog box that prompts the user for their name and password.</source>
          <target state="translated">Windows PowerShell 3.0 开始，你可以使用 <bpt id="p1">*</bpt>消息<ept id="p1">*</ept> 参数来指定在提示用户输入其名称和密码的对话框上的自定义的消息。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>Get-Credential<ept id="p1">**</ept> cmdlet prompts the user for a password or a user name and password.</source>
          <target state="translated"> <bpt id="p1">**</bpt>Get-credential<ept id="p1">**</ept> cmdlet 将提示用户输入密码或用户名和密码。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>By default, an authentication dialog box appears to prompt the user.</source>
          <target state="translated">默认情况下，将显示一个身份验证对话框来提示用户。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>However, in some host programs, such as the Windows PowerShell console, you can prompt the user at the command line by changing a registry entry.</source>
          <target state="translated">但是，在某些主机程序中（例如，在 Windows PowerShell 控制台中），你可以通过更改注册表项来在命令行处提示用户。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>For more information about this registry entry, see the notes and examples.</source>
          <target state="translated">有关此注册表项的详细信息，请参阅说明和示例。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>EXAMPLES</source>
          <target state="translated">示例</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Example 1: Get a credential and save it</source>
          <target state="translated">示例 1︰ 获取凭据并将其保存</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>This command gets a credential object and saves it in the $C variable.</source>
          <target state="translated">此命令获取凭据对象，并将其保存在 $C 变量。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>When you enter the command, a dialog box appears requesting a user name and password.</source>
          <target state="translated">当你输入命令时，将显示一个请求输入用户名和密码的对话框。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>When you enter the requested information, the cmdlet creates a <bpt id="p1">**</bpt>PSCredential<ept id="p1">**</ept> object representing the credentials of the user and saves it in the $C variable.</source>
          <target state="translated">当您输入所需的信息时，该 cmdlet 将创建 <bpt id="p1">**</bpt>PSCredential<ept id="p1">**</ept> 表示用户的凭据的对象并将其保存在 $C 变量。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>You can use the object as input to cmdlets that request user authentication, such as those with a <bpt id="p1">*</bpt>Credential<ept id="p1">*</ept> parameter.</source>
          <target state="translated">您可以使用的对象作为请求用户进行身份验证，例如那些具有 cmdlet 的输入 <bpt id="p1">*</bpt>凭据<ept id="p1">*</ept> 参数。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>However, some providers that are installed with Windows PowerShell do not support the <bpt id="p1">*</bpt>Credential<ept id="p1">*</ept> parameter.</source>
          <target state="translated">但是，某些随 Windows PowerShell 一起安装的提供程序不支持 <bpt id="p1">*</bpt>凭据<ept id="p1">*</ept> 参数。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Example 2: Store a credential in a variable to use with another command</source>
          <target state="translated">示例 2︰ 在要与另一个命令使用的变量中存储凭据</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>These commands use a <bpt id="p1">**</bpt>PSCredential<ept id="p1">**</ept> object that the <bpt id="p2">**</bpt>Get-Credential<ept id="p2">**</ept> cmdlet returns to authenticate a user on a remote computer so they can use Windows Management Instrumentation (WMI) to manage the computer.</source>
          <target state="translated">这些命令使用 <bpt id="p1">**</bpt>PSCredential<ept id="p1">**</ept> 对象 <bpt id="p2">**</bpt>Get-credential<ept id="p2">**</ept> cmdlet 将返回对远程计算机上的用户进行身份验证，以便他们能够使用 Windows Management Instrumentation (WMI) 来管理计算机。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>The first command gets a <bpt id="p1">**</bpt>PSCredential<ept id="p1">**</ept> object and saves it in the $C variable.</source>
          <target state="translated">第一个命令获取 <bpt id="p1">**</bpt>PSCredential<ept id="p1">**</ept> 对象，并将其保存在 $C 变量。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>The second command uses the credential object in a Get-WmiObject command.</source>
          <target state="translated">第二个命令使用 Get-wmiobject 命令中的凭据对象。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>This command gets information about the disk drives on the Server01 computer.</source>
          <target state="translated">此命令将获取 Server01 计算机上有关磁盘驱动器的信息。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Example 3: Get a credential to use for Windows Management Instrumentation</source>
          <target state="translated">示例 3︰ 获取用于对 Windows Management Instrumentation 的凭据</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>This command shows how to include a <bpt id="p1">**</bpt>Get-Credential<ept id="p1">**</ept> command in a <bpt id="p2">**</bpt>Get-WmiObject<ept id="p2">**</ept> command.</source>
          <target state="translated">此命令演示如何包含 <bpt id="p1">**</bpt>Get-credential<ept id="p1">**</ept> 命令 <bpt id="p2">**</bpt>Get-wmiobject<ept id="p2">**</ept> 命令。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>This command uses the Get-WmiObject cmdlet to get information about the BIOS on the Server01 computer.</source>
          <target state="translated">此命令使用 Get-wmiobject cmdlet 来获取 Server01 计算机上有关 BIOS 的信息。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>It uses the <bpt id="p1">*</bpt>Credential<ept id="p1">*</ept> parameter to authenticate the user, Domain01\User01, and a <bpt id="p2">**</bpt>Get-Credential<ept id="p2">**</ept> command as the value of the <bpt id="p3">*</bpt>Credential<ept id="p3">*</ept> parameter.</source>
          <target state="translated">它使用 <bpt id="p1">*</bpt>凭据<ept id="p1">*</ept> 参数进行身份验证对用户 Domain01\User01，和一个 <bpt id="p2">**</bpt>Get-credential<ept id="p2">**</ept> 命令的值作为 <bpt id="p3">*</bpt>凭据<ept id="p3">*</ept> 参数。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Example 4: Get a credential by name</source>
          <target state="translated">示例 4︰ 按名称获取凭据</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>This example creates a credential that includes a user name without a domain name.</source>
          <target state="translated">此示例将创建一个包含用户名（不带域名）的凭据。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>It demonstrates that <bpt id="p1">**</bpt>Get-Credential<ept id="p1">**</ept> inserts a backslash before the user name.</source>
          <target state="translated">它演示 <bpt id="p1">**</bpt>Get-credential<ept id="p1">**</ept> 插入一个反斜杠之前的用户名。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>The first command gets a credential with the user name User01 and stores it in the $C variable.</source>
          <target state="translated">第一个命令获取带有用户名 User01 的凭据，并将其存储在 $C 变量。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>The second command displays the value of the Username property of the resulting <bpt id="p1">**</bpt>PSCredential<ept id="p1">**</ept> object.</source>
          <target state="translated">第二个命令显示所产生的 Username 属性的值 <bpt id="p1">**</bpt>PSCredential<ept id="p1">**</ept> 对象。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Example 5: Use the PromptForCredential method to get a credential</source>
          <target state="translated">示例 5︰ 使用 PromptForCredential 方法获取凭据</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>This command uses the PromptForCredential method to prompt the user for their user name and password.</source>
          <target state="translated">此命令使用 PromptForCredential 方法来提示用户输入其用户名和密码。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>The command saves the resulting credentials in the $Credential variable.</source>
          <target state="translated">该命令将生成的凭据保存在 $Credential 变量中。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>The PromptForCredential method is an alternative to using the <bpt id="p1">**</bpt>Get-Credential<ept id="p1">**</ept> cmdlet.</source>
          <target state="translated">PromptForCredential 方法是一种方式使用 <bpt id="p1">**</bpt>Get-credential<ept id="p1">**</ept> cmdlet。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>When you use PromptForCredential, you can specify the caption, messages, and user name that appear in the message box.</source>
          <target state="translated">当您使用 PromptForCredential 时，您可以指定标题、 消息和消息框中显示的用户名。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Example 6: Set the ConsolePrompting registry entry to prompt for credentials</source>
          <target state="translated">示例 6︰ 设置为提示输入凭据的 ConsolePrompting 注册表项</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>This example shows how to modify the registry so that the user is prompted at the command line instead of using a dialog box.</source>
          <target state="translated">此示例演示如何修改注册表，以便在命令行而不是使用一个对话框，提示用户。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>The command creates the <bpt id="p1">**</bpt>ConsolePrompting<ept id="p1">**</ept> registry entry and sets its value to $True.</source>
          <target state="translated">此命令将创建 <bpt id="p1">**</bpt>ConsolePrompting<ept id="p1">**</ept> 注册表项并将其值设置为 $True。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>To run this command, start Windows PowerShell with the "Run as administrator" option.</source>
          <target state="translated">若要运行此命令，请使用“以管理员身份运行”选项启动 Windows PowerShell。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>To use a dialog box for prompting, set the value of the ConsolePrompting registry entry to $False, or use the Remove-ItemProperty cmdlet to delete it.</source>
          <target state="translated">要使用一个对话框提示，请将 ConsolePrompting 注册表项的值设置为 $False，或使用 Remove-itemproperty cmdlet 可将其删除。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>ConsolePrompting<ept id="p1">**</ept> registry entry works in some host programs, such as the Windows PowerShell console.</source>
          <target state="translated"> <bpt id="p1">**</bpt>ConsolePrompting<ept id="p1">**</ept> 注册表项在某些主机程序，例如 Windows PowerShell 控制台中工作正常。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>It might not work in all host programs.</source>
          <target state="translated">它并非在所有主机程序中都有效。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Example 7: Create a credential without prompting the user</source>
          <target state="translated">示例 7︰ 创建不提示用户的凭据</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>This example shows how to create a <bpt id="p1">**</bpt>PSCredential<ept id="p1">**</ept> object that is identical to the object that <bpt id="p2">**</bpt>Get-Credential<ept id="p2">**</ept> returns without prompting the user.</source>
          <target state="translated">此示例演示如何创建 <bpt id="p1">**</bpt>PSCredential<ept id="p1">**</ept> 等同于该对象的对象， <bpt id="p2">**</bpt>Get-credential<ept id="p2">**</ept> 返回，而不提示用户。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>This method requires a plain text password, which might violate the security standards in some enterprises.</source>
          <target state="translated">此方法要求输入纯文本密码，这可能会违反某些企业内的安全标准。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>The first command saves the user account name in the $User variable.</source>
          <target state="translated">第一个命令保存在 $User 变量的用户帐户名称。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>The value must have the Domain\User or ComputerName\User format.</source>
          <target state="translated">值必须具有域 \ 用户或 ComputerName\User 格式。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Example 8: Get a credential from a shared script or function</source>
          <target state="translated">示例 8︰ 从共享的脚本或函数获取凭据</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>This command uses the <bpt id="p1">*</bpt>Message<ept id="p1">*</ept> and <bpt id="p2">*</bpt>UserName<ept id="p2">*</ept> parameters of the <bpt id="p3">**</bpt>Get-Credential<ept id="p3">**</ept> cmdlet.</source>
          <target state="translated">此命令使用 <bpt id="p1">*</bpt>消息<ept id="p1">*</ept> 和 <bpt id="p2">*</bpt>用户名<ept id="p2">*</ept> 参数 <bpt id="p3">**</bpt>Get-credential<ept id="p3">**</ept> cmdlet。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>This command format is designed for shared scripts and functions.</source>
          <target state="translated">此命令格式旨在用于共享的脚本和函数。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>In this case, the message tells the user why credentials are needed and gives them confidence that the request is legitimate.</source>
          <target state="translated">在此示例中，消息将告知用户为何需要凭据，并使他们能够确信此请求是合法的。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>Example 9: Get a credential for a user on a remote computer</source>
          <target state="translated">示例 9︰ 获取凭据的远程计算机上的用户</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>This command gets a credential from the Server01 remote computer.</source>
          <target state="translated">此命令将从 Server01 远程计算机获取凭据。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>The command uses the Invoke-Command cmdlet to run a <bpt id="p1">**</bpt>Get-Credential<ept id="p1">**</ept> command on the remote computer.</source>
          <target state="translated">该命令使用 Invoke-command cmdlet 运行 <bpt id="p1">**</bpt>Get-credential<ept id="p1">**</ept> 命令在远程计算机上。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>The output shows the remote security message that <bpt id="p1">**</bpt>Get-Credential<ept id="p1">**</ept> includes in the authentication prompt.</source>
          <target state="translated">该输出显示远程安全消息 <bpt id="p1">**</bpt>Get-credential<ept id="p1">**</ept> 包括身份验证提示中。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>PARAMETERS</source>
          <target state="translated">参数</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>-Credential</source>
          <target state="translated">-Credential</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>Specifies a user name for the credential, such as User01 or Domain01\User01.</source>
          <target state="translated">指定的凭据，例如 User01 或 Domain01\User01 用户名称。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>If you specify a value for this parameter, it is not necessary to type <ph id="ph1">`-Credential`</ph> at the command line.</source>
          <target state="translated">如果指定此参数的值，不需要键入 <ph id="ph1">`-Credential`</ph> 在命令行。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>When you submit the command, you are prompted for a password.</source>
          <target state="translated">提交该命令后，系统将提示你输入密码。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>Starting in Windows PowerShell 3.0, if you enter a user name without a domain, <bpt id="p1">**</bpt>Get-Credential<ept id="p1">**</ept> no longer inserts a backslash before the name.</source>
          <target state="translated">启动 Windows PowerShell 3.0 中，如果输入不带域，一个用户名 <bpt id="p1">**</bpt>Get-credential<ept id="p1">**</ept> 无法再插入到名称的前面一个反斜杠。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>If you omit this parameter, you are prompted for a user name and a password.</source>
          <target state="translated">如果省略此参数，系统将提示你输入用户名和密码。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>-Message</source>
          <target state="translated">消息</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>Specifies a message that appears in the authentication prompt.</source>
          <target state="translated">指定将在身份验证提示中显示的消息。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>This parameter is designed for use in a function or script.</source>
          <target state="translated">此参数旨在用于函数或脚本。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>You can use the message to explain to the user why you are requesting credentials and how they will be used.</source>
          <target state="translated">你可以使用该消息向用户说明你为什么要请求凭据以及将如何使用它们。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>This parameter was introduced in Windows PowerShell 3.0.</source>
          <target state="translated">已在 Windows PowerShell 3.0 中引入了此参数。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>-UserName</source>
          <target state="translated">-UserName</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>Specifies a user name.</source>
          <target state="translated">指定用户名。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>The authentication prompt requests a password for the user name.</source>
          <target state="translated">身份验证提示要求输入该用户名对应的密码。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>By default, the user name is blank and the authentication prompt requests both a user name and password.</source>
          <target state="translated">默认情况下，用户名为空并且身份验证提示将请求输入用户名和密码。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>When the authentication prompt appears in a dialog box, the user can edit the specified user name.</source>
          <target state="translated">如果身份验证提示显示在对话框中，用户可以编辑指定的用户名。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>However, the user cannot change the user name when the prompt appears at the command line.</source>
          <target state="translated">但是，如果提示显示在命令行处，则用户不能更改用户名。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>When using this parameter in a shared function or script, consider all possible presentations.</source>
          <target state="translated">在共享的函数或脚本中使用此参数时，请考虑所有可能的显示情况。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>This parameter was introduced in Windows PowerShell 3.0.</source>
          <target state="translated">已在 Windows PowerShell 3.0 中引入了此参数。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>CommonParameters</source>
          <target state="translated">CommonParameters</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutVariable, -OutBuffer, -PipelineVariable, -Verbose, -WarningAction, and -WarningVariable.</source>
          <target state="translated">此 cmdlet 支持以下常见参数:-调试-ErrorAction、-ErrorVariable、-InformationAction、-InformationVariable、-OutVariable、-OutBuffer、-PipelineVariable、-Verbose、-WarningAction 和-WarningVariable。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>For more information, see about_CommonParameters (http://go.microsoft.com/fwlink/?LinkID=113216).</source>
          <target state="translated">有关详细信息，请参阅 about_CommonParameters (http://go.microsoft.com/fwlink/?LinkID=113216)。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>INPUTS</source>
          <target state="translated">输入</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>None</source>
          <target state="translated">无</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>You cannot pipe input to this cmdlet.</source>
          <target state="translated">不能通过管道将输入传递给此 cmdlet。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>OUTPUTS</source>
          <target state="translated">输出</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>System.Management.Automation.PSCredential</source>
          <target state="translated">System.Management.Automation.PSCredential</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Get-Credential<ept id="p1">**</ept> returns a credential object.</source>
          <target state="translated"><bpt id="p1">**</bpt>Get-credential<ept id="p1">**</ept> 返回凭据对象。</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>NOTES</source>
          <target state="translated">说明</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>You can use the <bpt id="p1">**</bpt>PSCredential<ept id="p1">**</ept> object that <bpt id="p2">**</bpt>Get-Credential<ept id="p2">**</ept> creates in cmdlets that request user authentication, such as those with a <bpt id="p3">*</bpt>Credential<ept id="p3">*</ept> parameter.</source>
          <target state="translated">您可以使用 <bpt id="p1">**</bpt>PSCredential<ept id="p1">**</ept> 对象 <bpt id="p2">**</bpt>Get-credential<ept id="p2">**</ept> 在 cmdlet 中创建该请求的用户身份验证，例如那些具有 <bpt id="p3">*</bpt>凭据<ept id="p3">*</ept> 参数。</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>By default, the authentication prompt appears in a dialog box.</source>
          <target state="translated">默认情况下，身份验证提示显示在对话框中。</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>To display the authentication prompt at the command line, add the <bpt id="p1">**</bpt>ConsolePrompting<ept id="p1">**</ept> registry entry (HKLM:\SOFTWARE\Microsoft\PowerShell\1\ShellIds\ConsolePrompting) and set its value to $True.</source>
          <target state="translated">若要显示在命令行身份验证提示，请添加 <bpt id="p1">**</bpt>ConsolePrompting<ept id="p1">**</ept> 注册表项 (hklm: \ software\microsoft\powershell\1\shellids\consoleprompting) 并将其值设置为 $True。</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>If the <bpt id="p1">**</bpt>ConsolePrompting<ept id="p1">**</ept> registry entry does not exist or if its value is $False, the authentication prompt appears in a dialog box.</source>
          <target state="translated">如果 <bpt id="p1">**</bpt>ConsolePrompting<ept id="p1">**</ept> 注册表项不存在或其值为 $False，如果身份验证提示将显示在对话框中。</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>For instructions, see the examples.</source>
          <target state="translated">有关说明，请参阅示例。</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>ConsolePrompting<ept id="p1">**</ept> registry entry works in the Windows PowerShell console, but it does not work in all host programs.</source>
          <target state="translated"> <bpt id="p1">**</bpt>ConsolePrompting<ept id="p1">**</ept> 注册表项适用于 Windows PowerShell 控制台中，但它在不能在所有主机程序。</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>For example, it has no effect in the Windows PowerShell Integrated Scripting Environment (ISE).</source>
          <target state="translated">例如，它在 Windows PowerShell 集成脚本环境 (ISE) 中不起作用。</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>For information about the effect of the <bpt id="p1">**</bpt>ConsolePrompting<ept id="p1">**</ept> registry entry, see the help topics for the host program.</source>
          <target state="translated">有关的影响信息 <bpt id="p1">**</bpt>ConsolePrompting<ept id="p1">**</ept> 注册表项，请参阅主机程序的帮助主题。</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">*</bpt>Credential<ept id="p1">*</ept> parameter is not supported by all providers that are installed with Windows PowerShell.</source>
          <target state="translated"> <bpt id="p1">*</bpt>凭据<ept id="p1">*</ept> 随 Windows PowerShell 一起安装的所有提供程序不支持参数。</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>Beginning in Windows PowerShell 3.0, it is supported on selected cmdlets, such as Get-WmiObject and New-PSDrive.</source>
          <target state="translated">从 Windows PowerShell 3.0 开始，它支持在选定的 cmdlet，如 Get-wmiobject 和 New-psdrive 上。</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>RELATED LINKS</source>
          <target state="translated">相关的链接</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>