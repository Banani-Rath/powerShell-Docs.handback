<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="md" source-language="en-US" target-language="zh-cn">
    <header>
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">0959c2576a82b63e814b73a95a085e5512c0726f</xliffext:olfilehash>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-e76445a" tool-company="Microsoft" />
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Debugging DSC resources</source>
          <target state="translated">调试 DSC 资源</target>         
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Applies To: Windows PowerShell 5.0</source>
          <target state="translated">适用于：Windows PowerShell 5.0</target>         
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>In PowerShell 5.0, a new feature was introduced in Desired State Configuraiton (DSC) that allows you to debug a DSC resource as a configuration is being applied.</source>
          <target state="translated">在 PowerShell 5.0 中，Desired State Configuraiton (DSC) 引入了一项新功能，允许你在应用配置时调试 DSC 资源。</target>         
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Enabling DSC debugging</source>
          <target state="translated">启用 DSC 调试</target>         
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Before you can debug a resource, you have to enable debugging by calling the <g id="p1" mdpre="[" mdpost="](https://technet.microsoft.com/en-us/library/mt517870.aspx)">Enable-DscDebug</g> cmdlet.</source>
          <target state="translated">必须通过调用 <g id="p1" mdpre="[" mdpost="](https://technet.microsoft.com/en-us/library/mt517870.aspx)">Enable-DscDebug</g> cmdlet 启用调试后，才能调试资源。</target>         
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>This cmdlet takes a mandatory parameter, <g id="p1" mdpre="**" mdpost="**">BreakAll</g>.</source>
          <target state="translated">此 cmdlet 采用强制参数，<g id="p1" mdpre="**" mdpost="**">BreakAll</g>。</target>         
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>You can verify that debugging has been enabled by looking at the result of a call to <g id="p1" mdpre="[" mdpost="](https://technet.microsoft.com/en-us/library/dn407378.aspx)">Get-DscLocalConfigurationManager</g>.</source>
          <target state="translated">你可通过查看调用 <g id="p1" mdpre="[" mdpost="](https://technet.microsoft.com/en-us/library/dn407378.aspx)">Get-DscLocalConfigurationManager</g> 的结果以验证是否已启用调试。</target>         
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>The following PowerShell output shows the result of enabling debugging:</source>
          <target state="translated">以下 PowerShell 输出显式了启用调试的结果：</target>         
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Starting a configuration with debug enabled</source>
          <target state="translated">启用调试时启动配置</target>         
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>To debug a DSC resource, you start a configuration that calls that resource.</source>
          <target state="translated">若要调试 DSC 资源，首先需启动调用该资源的配置。</target>         
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>For this example, we'll look at a simple configuration that calls the <g id="p1" mdpre="[" mdpost="](windowsfeatureResource.md)">WindowsFeature</g> resource to ensure that the "WindowsPowerShellWebAccess" feature is installed:</source>
          <target state="translated">针对此示例，我们将查看调用 <g id="p1" mdpre="[" mdpost="](windowsfeatureResource.md)">WindowsFeature</g> 资源的简单配置以确保安装了“WindowsPowerShellWebAccess”功能：</target>         
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>After compiling the configuration, start it by calling <g id="p1" mdpre="[" mdpost="](https://technet.microsoft.com/en-us/library/dn521623.aspx)">Start-DscConfiguration</g>.</source>
          <target state="translated">编译配置后，通过调用 <g id="p1" mdpre="[" mdpost="](https://technet.microsoft.com/en-us/library/dn521623.aspx)">Start-DscConfiguration</g> 启用该配置。</target>         
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>The configuration will stop when the</source>
          <target state="translated">当本地配置管理器 (LCM) 调用</target>         
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Local Configuration Manager (LCM) calls into the first resoure in the configuration.</source>
          <target state="translated">配置中的第一个资源时，配置将停止。</target>         
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>If you use the <ph id="ph1">`-Verbose`</ph> and <ph id="ph2">`-Wait`</ph> parameters, the output displays the lines you need to enter</source>
          <target state="translated">如果使用 <ph id="ph1">`-Verbose`</ph> 和 <ph id="ph2">`-Wait`</ph> 参数，该输出会显示需要输入</target>         
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>to start debugging.</source>
          <target state="translated">以启动调试的行。</target>         
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>At this point, the LCM has called the resource, and come to the first break point.</source>
          <target state="translated">此时，LCM 已调用该资源，并到达第一个断点。</target>         
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>The last three lines in the output show you how to attach to the process and start debugging the resource script.</source>
          <target state="translated">输出中的最后三行表明了如何附加到进程并启动调试资源脚本。</target>         
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Debugging the resource script</source>
          <target state="translated">调试资源脚本</target>         
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Start a new instance of the PowerShell ISE.</source>
          <target state="translated">启动 PowerShell ISE 的新实例。</target>         
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>In the console pane, enter the last three lines of output from the <ph id="ph1">`Start-DscConifiguration`</ph> output as commands, replacing <ph id="ph2">`&lt;credentials&gt;`</ph> with</source>
          <target state="translated">在控制台窗格中，输入 <ph id="ph1">`Start-DscConifiguration`</ph> 输出中的最后三行作为命令，将 <ph id="ph2">`&lt;credentials&gt;`</ph> 替换为</target>         
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>valid user credentials.</source>
          <target state="translated">有效用户凭据。</target>         
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>You should now see a prompt that looks similar to:</source>
          <target state="translated">你现在应看到类似于下面这样的提示：</target>         
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>The resource script will open in the script pane, and the debugger is stopped at the first line of the <g id="p1" mdpre="**" mdpost="**">Test-TargetResource</g> function (the <g id="p2" mdpre="**" mdpost="**">Test()</g> method of a class-based resource).</source>
          <target state="translated">资源脚本会在脚本窗格中打开，调试器会在 <g id="p1" mdpre="**" mdpost="**">Test-TargetResource</g> 函数（基于类的资源的 <g id="p2" mdpre="**" mdpost="**">Test()</g> 方法）的第一行上停止。</target>         
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Now you can use the debug commands in the ISE to step through the resource script, look at variable values, view the call stack, and so on.</source>
          <target state="translated">现在可以在 ISE 中使用调试命令来单步执行资源脚本、查看变量值、查看调用堆栈等等。</target>         
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>For information about debugging in the PowerShell ISE,</source>
          <target state="translated">有关在 PowerShell ISE 中进行调试的信息，</target>         
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>see <g id="p1" mdpre="[" mdpost="](https://technet.microsoft.com/en-us/library/dd819480.aspx)">How to Debug Scripts in Windows PowerShell ISE</g>.</source>
          <target state="translated">请参阅<g id="p1" mdpre="[" mdpost="](https://technet.microsoft.com/en-us/library/dd819480.aspx)">如何在 Windows PowerShell ISE 中调试脚本</g>。</target>         
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Remember that every line in the resource script (or class) is set as a break point.</source>
          <target state="translated">请记住，资源脚本（或类）中的每行都会设置为断点。</target>         
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>See Also</source>
          <target state="translated">另请参阅</target>         
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Writing a custom DSC resource with MOF</source>
          <target state="translated">使用 MOF 编写自定义 DSC 资源</target>         
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Writing a custom DSC resource with PowerShell classes</source>
          <target state="translated">使用 PowerShell 类编写自定义 DSC 资源</target>         
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>