<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-cn">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-1c394fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">10aa44ba57f1622de9590e7140d13ee45a670eab</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">reference\3.0\Microsoft.PowerShell.Core\Out-Host.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions" />
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">2b9b9fb714ada09da4859915e12b037810fdcb04</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">73132599fd3ed510ae742109b16dc31ab648b8d4</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>powershell, cmdlet</source>
          <target state="translated">powershell cmdlet</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Out-Host</source>
          <target state="translated">Out-Host</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Out-Host</source>
          <target state="translated">Out-Host</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>SYNOPSIS</source>
          <target state="translated">简述</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Sends output to the command line.</source>
          <target state="translated">将输出发送到命令行。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>SYNTAX</source>
          <target state="translated">语法</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>DESCRIPTION</source>
          <target state="translated">说明</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>Out-Host<ept id="p1">**</ept> cmdlet sends output to the Windows PowerShell host for display.</source>
          <target state="translated"> <bpt id="p1">**</bpt>Out-host<ept id="p1">**</ept> cmdlet 将输出发送到 Windows PowerShell 主机以供显示。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>The host displays the output at the command line.</source>
          <target state="translated">该主机在命令行上显示输出。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Because <bpt id="p1">**</bpt>Out-Host<ept id="p1">**</ept> is the default, you do not need to specify it unless you want to use its parameters to change the display.</source>
          <target state="translated">因为 <bpt id="p1">**</bpt>Out-host<ept id="p1">**</ept> 是默认情况下，不需要指定它，除非你想要使用其参数来更改显示。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>EXAMPLES</source>
          <target state="translated">示例</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>-------------------------- EXAMPLE 1 --------------------------</source>
          <target state="translated">-------------------------- 示例 1 --------------------------</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>This command displays the processes on the system one page at a time.</source>
          <target state="translated">此命令一次显示一页系统上的进程。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>It uses the Get-Process cmdlet to get the processes on the system.</source>
          <target state="translated">它使用 Get-process cmdlet 来获取系统上的进程。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>The pipeline operator (|) sends the results to <bpt id="p1">**</bpt>Out-Host<ept id="p1">**</ept>, which displays them at the console.</source>
          <target state="translated">管道运算符 (|) 将发送到结果 <bpt id="p1">**</bpt>Out-host<ept id="p1">**</ept>, ，这将在控制台上显示它们。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>Paging<ept id="p1">**</ept> parameter displays one page of data at a time.</source>
          <target state="translated"> <bpt id="p1">**</bpt>分页<ept id="p1">**</ept> 参数一次显示一页的数据。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>The same command format is used for the Help function that is built into Windows PowerShell.</source>
          <target state="translated">将相同的命令格式用于内置于 Windows PowerShell 中的 Help 函数。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>That function gets data from the Get-Help cmdlet and then uses the <bpt id="p1">**</bpt>Paging<ept id="p1">**</ept> parameter of <bpt id="p2">**</bpt>Out-Host<ept id="p2">**</ept> to display the data one page at a time by using this command format: <ph id="ph1">`Get-Help $Args\[0\] | Out-Host -Paging`</ph>.</source>
          <target state="translated">函数从 Get-help cmdlet 中获取数据，然后使用 <bpt id="p1">**</bpt>分页<ept id="p1">**</ept> 参数 <bpt id="p2">**</bpt>Out-host<ept id="p2">**</ept> 若要使用此命令格式一次显示一页数据︰ <ph id="ph1">`Get-Help $Args\[0\] | Out-Host -Paging`</ph>。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>-------------------------- EXAMPLE 2 --------------------------</source>
          <target state="translated">-------------------------- EXAMPLE 2 --------------------------</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>These commands display the session history at the command line.</source>
          <target state="translated">这些命令在命令行上显示会话历史记录。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>The first command uses the Get-History cmdlet to get the session history, and then it stores the history in the $a variable.</source>
          <target state="translated">第一个命令使用 Get-history cmdlet 来获取会话历史记录，并将它存储历史记录在 $a 变量中。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>The second command uses <bpt id="p1">**</bpt>Out-Host<ept id="p1">**</ept> to display the content of the $a variable, and it uses the <bpt id="p2">**</bpt>InputObject<ept id="p2">**</ept> parameter to specify the variable to <bpt id="p3">**</bpt>Out-Host<ept id="p3">**</ept>.</source>
          <target state="translated">第二个命令使用 <bpt id="p1">**</bpt>Out-host<ept id="p1">**</ept> 来显示的变量，而且它使用的 $ 内容 <bpt id="p2">**</bpt>InputObject<ept id="p2">**</ept> 参数来指定变量 <bpt id="p3">**</bpt>Out-host<ept id="p3">**</ept>。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>PARAMETERS</source>
          <target state="translated">参数</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>-InputObject</source>
          <target state="translated">-InputObject</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Specifies the objects that are written to the console.</source>
          <target state="translated">指定要写入控制台的对象。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Enter a variable that contains the objects, or type a command or expression that gets the objects.</source>
          <target state="translated">输入一个包含对象的变量，或键入可获取对象的命令或表达式。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>-Paging</source>
          <target state="translated">分页</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Displays one page of output at a time, and waits for user input before displaying the remaining pages, much like the traditional "more" command.</source>
          <target state="translated">一次显示一个输出页，并等待用户输入，然后再显示剩余页面，这与传统的“更多”命令非常相似。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>By default, all of the output is displayed on a single page.</source>
          <target state="translated">默认情况下，所有输出都显示在一页上。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>The page size is determined by the characteristics of the host.</source>
          <target state="translated">页大小由主机的特征确定。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>CommonParameters</source>
          <target state="translated">CommonParameters</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutVariable, -OutBuffer, -PipelineVariable, -Verbose, -WarningAction, and -WarningVariable.</source>
          <target state="translated">此 cmdlet 支持以下常见参数:-调试-ErrorAction、-ErrorVariable、-InformationAction、-InformationVariable、-OutVariable、-OutBuffer、-PipelineVariable、-Verbose、-WarningAction 和-WarningVariable。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>For more information, see about_CommonParameters (http://go.microsoft.com/fwlink/?LinkID=113216).</source>
          <target state="translated">有关详细信息，请参阅 about_CommonParameters (http://go.microsoft.com/fwlink/?LinkID=113216)。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>INPUTS</source>
          <target state="translated">输入</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>System.Management.Automation.PSObject</source>
          <target state="translated">System.Management.Automation.PSObject</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>You can pipe any object to <bpt id="p1">**</bpt>Out-Host<ept id="p1">**</ept>.</source>
          <target state="translated">您可以通过管道传递任何对象传递给 <bpt id="p1">**</bpt>Out-host<ept id="p1">**</ept>。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>OUTPUTS</source>
          <target state="translated">输出</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>None</source>
          <target state="translated">无</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Out-Host<ept id="p1">**</ept> does not generate any output.</source>
          <target state="translated"><bpt id="p1">**</bpt>Out-host<ept id="p1">**</ept> 不生成任何输出。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>However, the host might display the objects that <bpt id="p1">**</bpt>Out-Host<ept id="p1">**</ept> sends to it.</source>
          <target state="translated">但是，主机可能会显示这些对象的 <bpt id="p1">**</bpt>Out-host<ept id="p1">**</ept> 发送给它。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>NOTES</source>
          <target state="translated">说明</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>The cmdlets that contain the Out verb (the Out cmdlets) do not format objects; they just render them and send them to the specified display destination.</source>
          <target state="translated">包含 Out 谓词的 cmdlet (Out cmdlet) 不对对象进行格式设置；它们只呈现对象，并将对象发送到指定的显示目标。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>If you send an unformatted object to an Out cmdlet, the cmdlet sends it to a formatting cmdlet before rendering it.</source>
          <target state="translated">如果将未进行格式设置的对象发送给 Out cmdlet，则该 cmdlet 会在呈现该对象之前，将它发送到格式设置 cmdlet。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>The Out cmdlets do not have parameters for names or file paths.</source>
          <target state="translated">Out cmdlet 没有用于名称或文件路径的参数。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>To send data to an Out cmdlet, use a pipeline operator (|) to send the output of a Windows PowerShell command to the cmdlet.</source>
          <target state="translated">若要将数据发送到 Out cmdlet，请使用管道运算符 (|) 将 Windows PowerShell 命令的输出发送到该 cmdlet。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>You can also store data in a variable and use the InputObject parameter to pass the data to the cmdlet.</source>
          <target state="translated">还可以将数据存储在变量中，并使用 InputObject 参数将数据传递给 cmdlet。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>For help, see the examples.</source>
          <target state="translated">有关帮助，请参阅示例。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Out-Host<ept id="p1">**</ept> sends data, but it does not emit any output objects.</source>
          <target state="translated"><bpt id="p1">**</bpt>Out-host<ept id="p1">**</ept> 发送数据，但它不会发出任何输出对象。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>If you pipe the output of <bpt id="p1">**</bpt>Out-Host<ept id="p1">**</ept> to the Get-Member cmdlet, <bpt id="p2">**</bpt>Get-Member<ept id="p2">**</ept> reports that no objects have been specified.</source>
          <target state="translated">如果你通过管道传递的输出 <bpt id="p1">**</bpt>Out-host<ept id="p1">**</ept> 给 Get-member cmdlet， <bpt id="p2">**</bpt>Get-member<ept id="p2">**</ept> 报告未指定任何对象。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>RELATED LINKS</source>
          <target state="translated">相关的链接</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Clear-Host</source>
          <target state="translated">Clear-Host</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Out-Default</source>
          <target state="translated">Out-Default</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Out-File</source>
          <target state="translated">Out-file</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Out-Null</source>
          <target state="translated">Out-Null</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Out-Printer</source>
          <target state="translated">Out-printer</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>Out-String</source>
          <target state="translated">Out-String</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Write-Host</source>
          <target state="translated">Write-Host</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>