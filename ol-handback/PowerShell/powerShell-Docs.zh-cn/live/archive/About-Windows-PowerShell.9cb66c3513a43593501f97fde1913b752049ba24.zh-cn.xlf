<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-cn">
    <header>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions" />
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">scripting\getting-started\fundamental\About-Windows-PowerShell.md</xliffext:olfilepath>
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">b990fb5c6855aaffeb241e9596c333014050e059</xliffext:olfilehash>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-39517ae" tool-company="Microsoft" />
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>About Windows PowerShell</source>
          <target state="translated">关于 Windows PowerShell</target>         
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>About Windows PowerShell</source>
          <target state="translated">关于 Windows PowerShell</target>         
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Windows PowerShell is designed to improve the command\-line and scripting environment by eliminating long\-standing problems and adding new features.</source>
          <target state="translated">Windows PowerShell 旨在通过消除长期存在的问题和添加新功能改进命令行和脚本环境。</target>         
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Discoverability</source>
          <target state="translated">可发现性</target>         
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Windows PowerShell makes it easy to discover its features.</source>
          <target state="translated">Windows PowerShell 使它的功能更易发现。</target>         
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>For example, to find a list of cmdlets that view and change Windows services, type:</source>
          <target state="translated">例如，若要查找用于查看和更改 Windows 服务的 cmdlet 列表，请键入：</target>         
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>After discovering which cmdlet accomplishes a task, you can learn more about the cmdlet by using the Get\-Help cmdlet.</source>
          <target state="translated">找到完成任务的 cmdlet 后，可通过使用 Get-Help cmdlet 了解有关该 cmdlet 的详细信息。</target>         
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>For example, to display help about the Get\-Service cmdlet, type:</source>
          <target state="translated">例如，若要显示有关 Get-Service cmdlet 的帮助，请键入：</target>         
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Most cmdlets emit objects which can be manipulated and then rendered into text for display.</source>
          <target state="translated">大多数 cmdlet 会发出对象，这些对象可获得操作，然后再呈现为显示文本。</target>         
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>To fully understand the output of that cmdlet, pipe its output to the Get\-Member cmdlet.</source>
          <target state="translated">若要全面了解该 cmdlet 的输出，请将其输出通过管道传递给 Get-Member cmdlet。</target>         
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>For example, the following command displays information about the members of the object output by the Get\-Service cmdlet.</source>
          <target state="translated">例如，下面的命令显示了有关 Get-Service cmdlet 所输出对象的成员的信息。</target>         
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Consistency</source>
          <target state="translated">一致性</target>         
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Managing systems can be a complex endeavor and tools that have a consistent interface help to control the inherent complexity.</source>
          <target state="translated">管理系统是一项复杂的任务，具有一致的接口的工具有助于控制固有的复杂性。</target>         
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Unfortunately, neither command\-line tools nor scriptable COM objects have been known for their consistency.</source>
          <target state="translated">遗憾的是，命令行工具和可脚本化 COM 对象的一致性均未知。</target>         
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>The consistency of Windows PowerShell is one of its primary assets.</source>
          <target state="translated">Windows PowerShell 的一致性是其主要资产之一。</target>         
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>For example, if you learn how to use the Sort\-Object cmdlet, you can use that knowledge to sort the output of any cmdlet.</source>
          <target state="translated">例如，如果了解如何使用 Sort-Object cmdlet，你可以利用这一知识对任何 cmdlet 的输出进行排序。</target>         
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>You do not have to learn the different sorting routines of each cmdlet.</source>
          <target state="translated">不需要了解每个 cmdlet 的不同排序例程。</target>         
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>In addition, cmdlet developers do not have to design sorting features for their cmdlets.</source>
          <target state="translated">此外，cmdlet 开发人员无需为其 cmdlet 设计排序功能。</target>         
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Windows PowerShell gives them a framework that provides the basic features and forces them to be consistent about many aspects of the interface.</source>
          <target state="translated">Windows PowerShell 将给它们一个提供基本功能的框架，并强制它们在接口的多个方面保持一致。</target>         
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>The framework eliminates some of the choices that are typically left to the developer, but, in return, it makes the development of robust and easy\-to\-use cmdlets much simpler.</source>
          <target state="translated">该框架消除了通常留给开发人员的某些选择，但它也因而使得开发可靠的和易于使用的 cmdlet 变得简单得多。</target>         
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Interactive and Scripting Environments</source>
          <target state="translated">交互式脚本编写环境</target>         
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Windows PowerShell is a combined interactive and scripting environment that gives you access to command\-line tools and COM objects, and also enables you to use the power of the .NET Framework Class Library (FCL).</source>
          <target state="translated">Windows PowerShell 是一个组合的交互式脚本编写环境，它允许你访问命令行工具和 COM 对象，还让你能够使用 .NET Framework 类库 (FCL) 的强大功能。</target>         
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>This environment improves upon the Windows Command Prompt, which provides an interactive environment with multiple command\-line tools.</source>
          <target state="translated">此环境改进了 Windows 命令提示，它将提供具有多个命令行工具的交互式环境。</target>         
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>It also improves upon Windows Script Host (WSH) scripts, which let you use multiple command\-line tools and COM automation objects, but do not provide an interactive environment.</source>
          <target state="translated">它还改进了 Windows 脚本宿主 (WSH) 脚本，让你可以使用多个命令行工具和 COM 自动化对象，但不提供交互式环境。</target>         
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>By combining access to all of these features, Windows PowerShell extends the ability of the interactive user and the script writer, and makes system administration more manageable.</source>
          <target state="translated">通过组合使用以上所有功能，Windows PowerShell 将扩展交互用户和脚本编写者的能力，并使系统管理更可控。</target>         
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Object Orientation</source>
          <target state="translated">面向对象</target>         
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Although you interact with Windows PowerShell by typing commands in text, Windows PowerShell is based on objects, not text.</source>
          <target state="translated">尽管通过在文本框中键入命令可以与 Windows PowerShell 交互，但 Windows PowerShell 仍以对象（而不是文本）为基础。</target>         
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>The output of a command is an object.</source>
          <target state="translated">命令的输出是一个对象。</target>         
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>You can send the output object to another command as its input.</source>
          <target state="translated">可以将输出对象发送给另一个命令以作为其输入。</target>         
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>As a result, Windows PowerShell provides a familiar interface to people experienced with other shells, while introducing a new and powerful command\-line paradigm.</source>
          <target state="translated">因此，Windows PowerShell 将为曾使用其他 shell 的用户提供熟悉的界面，同时引入新的强大命令行范例。</target>         
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>It extends the concept of sending data between commands by enabling you to send objects, rather than text.</source>
          <target state="translated">它让你能够发送对象而不是文本，从而扩展了在命令之间发送数据的概念。</target>         
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Easy Transition to Scripting</source>
          <target state="translated">轻松转换到脚本</target>         
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Windows PowerShell makes it easy to transition from typing commands interactively to creating and running scripts.</source>
          <target state="translated">Windows PowerShell 让你能够从以交互方式键入命令转换到创建和运行脚本。</target>         
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>You can type commands at the Windows PowerShell command prompt to discover the commands that perform a task.</source>
          <target state="translated">可以在 Windows PowerShell 命令提示符处键入命令，从而发现执行某项任务的命令。</target>         
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Then, you can save those commands in a transcript or a history before copying them to a file for use as a script.</source>
          <target state="translated">然后，你可以在将这些命令保存到副本或历史记录中，然后将其复制到文件以用作脚本。</target>         
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>