<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-cn">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-db30baf" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">207792452c563ec6cca5c17fbcd122372442d8ac</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">scripting\topic\WinRMSecurity.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions" />
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>WinRMSecurityRedirect</source>
          <target state="translated">WinRMSecurityRedirect</target>         
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>PowerShell Remoting Security Considerations</source>
          <target state="translated">PowerShell 远程处理安全注意事项</target>         
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>PowerShell Remoting is the recommended way to manage Windows systems.</source>
          <target state="translated">PowerShell 远程处理是管理 Windows 系统的推荐方式。</target>         
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>PowerShell Remoting is enabled by default in Windows Server 2012 R2.</source>
          <target state="translated">在 Windows Server 2012 R2 中，默认启用 PowerShell 远程处理。</target>         
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>This document covers security concerns, recommendations, and best practices when using PowerShell Remoting.</source>
          <target state="translated">本文档将介绍与使用 PowerShell 远程处理相关的安全问题、建议和最佳做法。</target>         
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>What is PowerShell Remoting?</source>
          <target state="translated">PowerShell 远程处理是什么？</target>         
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>PowerShell Remoting uses <bpt id="p1">[</bpt>Windows Remote Management (WinRM)<ept id="p1">](https://msdn.microsoft.com/en-us/library/windows/desktop/aa384426.aspx)</ept>, which is the Microsoft implementation of the <bpt id="p2">[</bpt>Web Services for Managment (WS-Managment)<ept id="p2">](http://www.dmtf.org/sites/default/files/standards/documents/DSP0226_1.2.0.pdf)</ept> protocol, to allow users to run PowerShell commands on remote computers.</source>
          <target state="translated">PowerShell 远程处理使用 <bpt id="p1">[</bpt>Windows 远程管理 (WinRM)<ept id="p1">](https://msdn.microsoft.com/en-us/library/windows/desktop/aa384426.aspx)</ept>（这是 <bpt id="p2">[</bpt>Web Services for Managment (WS-Managment)<ept id="p2">](http://www.dmtf.org/sites/default/files/standards/documents/DSP0226_1.2.0.pdf)</ept> 协议的 Microsoft 实现），允许用户在远程计算机上运行 PowerShell 命令。</target>         
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>You can find more information about using PowerShell Remoting at <bpt id="p1">[</bpt>Running Remote Commands<ept id="p1">](https://technet.microsoft.com/en-us/library/dd819505.aspx)</ept>.</source>
          <target state="translated">你可以在<bpt id="p1">[</bpt>运行远程命令<ept id="p1">](https://technet.microsoft.com/en-us/library/dd819505.aspx)</ept>处找到有关使用 PowerShell 远程处理的详细信息。</target>         
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>PowerShell Remoting is not the same as using the <bpt id="p1">**</bpt>ComputerName<ept id="p1">**</ept> parameter of a cmdlet to run it on a remote computer, which uses Remote Procedure Call (RPC) as its underlying protocol.</source>
          <target state="translated">PowerShell 远程处理不同于使用 cmdlet 的 <bpt id="p1">**</bpt>ComputerName<ept id="p1">**</ept> 参数在远程计算机上运行它，后者使用远程过程调用 (RPC) 作为其基础协议。</target>         
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>PowerShell Remoting default settings</source>
          <target state="translated">PowerShell 远程处理默认设置</target>         
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>PowerShell Remoting (and WinRM) listen on the following ports:</source>
          <target state="translated">PowerShell 远程处理（和 WinRM）侦听以下端口：</target>         
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>HTTP: 5985</source>
          <target state="translated">HTTP：5985</target>         
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>HTTPS: 5986</source>
          <target state="translated">HTTPS：5986</target>         
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>By default, PowerShell Remoting only allows connections from members of the Administrators group.</source>
          <target state="translated">默认情况下，PowerShell 远程处理仅允许来自管理员组成员的连接。</target>         
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Sessions are launched under the user's context, so all operating system access controls applied to individual users and groups continue to apply to them while connected over PowerShell Remoting.</source>
          <target state="translated">由于会话是在用户的上下文内启动的，因此所有应用于各个用户和组的操作系统访问控制会在他们通过 PowerShell 远程处理进行连接时继续应用于他们。</target>         
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>On private networks, the default Windows Firewall rule for PowerShell Remoting accepts all connections.</source>
          <target state="translated">在专用网络上，默认的 PowerShell 远程处理 Windows 防火墙规则接受所有连接。</target>         
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>On public networks, the default Windows Firewall rule allows PowerShell Remoting connections only from within the same subnet.</source>
          <target state="translated">在公用网络上，默认 Windows 防火墙规则仅允许来自同一子网内的 PowerShell 远程处理连接。</target>         
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>You have to explicitly change that rule to open PowerShell Remoting to all connections on a public network.</source>
          <target state="translated">必须明确地更改该规则，以将 PowerShell 远程处理打开到公用网络上的所有连接。</target>         
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Warning:<ept id="p1">**</ept> The firewall rule for public networks is meant to protect the computer from potentially malicious external connection attempts.</source>
          <target state="translated"><bpt id="p1">**</bpt>警告：<ept id="p1">**</ept>公用网络的防火墙规则旨在保护计算机免于潜在的恶意外部连接尝试。</target>         
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Use caution when removing this rule.</source>
          <target state="translated">请谨慎删除此规则。</target>         
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Process isolation</source>
          <target state="translated">进程隔离</target>         
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>PowerShell Remoting uses <bpt id="p1">[</bpt>Windows Remote Management (WinRM)<ept id="p1">](https://msdn.microsoft.com/en-us/library/windows/desktop/aa384426)</ept> for communication between computers.</source>
          <target state="translated">PowerShell 远程处理使用 <bpt id="p1">[</bpt>Windows 远程管理 (WinRM)<ept id="p1">](https://msdn.microsoft.com/en-us/library/windows/desktop/aa384426)</ept>来实现计算机之间的通信。</target>         
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>WinRM runs as a service under the Network Service account, and spawns isolated processes running as user accounts to host PowerShell instances.</source>
          <target state="translated">WinRM 作为网络服务帐户下的服务运行，并生成以用户帐户运行的隔离进程以托管 PowerShell 实例。</target>         
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>An instance of PowerShell running as one user has no access to a process running an instance of PowerShell as another user.</source>
          <target state="translated">以一个用户身份运行的 PowerShell 实例无权访问以其他用户身份运行 PowerShell 实例的进程。</target>         
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Event logs generated by PowerShell Remoting</source>
          <target state="translated">PowerShell 远程处理生成的事件日志</target>         
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>FireEye has provided a good summary of the event logs and other security evidence generated by PowerShell Remoting sessions, available at</source>
          <target state="translated">FireEye 提供了良好的事件日志和其他由 PowerShell 远程处理会话生成的安全证据的摘要。该摘要在</target>         
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Investigating PowerShell Attacks<ept id="p1">](https://www.fireeye.com/content/dam/fireeye-www/global/en/solutions/pdfs/wp-lazanciyan-investigating-powershell-attacks.pdf)</ept>.</source>
          <target state="translated"><bpt id="p1">[</bpt>调查 PowerShell 攻击<ept id="p1">](https://www.fireeye.com/content/dam/fireeye-www/global/en/solutions/pdfs/wp-lazanciyan-investigating-powershell-attacks.pdf)</ept>中可用。</target>         
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Encryption and transport protocols</source>
          <target state="translated">加密和传输协议</target>         
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>It is helpful to consider the security of a PowerShell Remoting connection from two perspectives: initial authentication, and ongoing communication.</source>
          <target state="translated">从以下两个角度来考虑 PowerShell 远程处理连接的安全性会有所帮助：初始身份验证和正在进行的通信。</target>         
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Regardless of the transport protocol used (HTTP or HTTPS), PowerShell Remoting always encrypts all communication after initial authentication with a per-session AES-256 symmetric key.</source>
          <target state="translated">无论使用哪种传输协议（HTTP 或 HTTPS），在使用每会话 AES-256 对称密钥完成初始身份验证后，PowerShell 远程处理将始终加密所有的通信。</target>         
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Initial authentication</source>
          <target state="translated">初始身份验证</target>         
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Authentication confirms the identity of the client to the server - and ideally - the server to the client.</source>
          <target state="translated">身份验证确认客户端到服务器（理想情况下，从服务器到客户端）的身份。</target>         
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>When a client connects to a domain server using its computer name (i.e.: server01, or server01.contoso.com), the default authentication protocol is <bpt id="p1">[</bpt>Kerberos<ept id="p1">](https://msdn.microsoft.com/en-us/library/windows/desktop/aa378747.aspx)</ept>.</source>
          <target state="translated">当客户端连接到使用其计算机名称（即 server01 或 server01.contoso.com）的域服务器时，默认身份验证协议为 <bpt id="p1">[</bpt>Kerberos<ept id="p1">](https://msdn.microsoft.com/en-us/library/windows/desktop/aa378747.aspx)</ept>。</target>         
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Kerberos guarantees both the user identity and server identity without sending any sort of reusable credential.</source>
          <target state="translated">Kerberos 保证用户标识和服务器标识，而不发送任何种类的可重用的凭据。</target>         
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>When a client connects to a domain server using its IP address, or connects to a workgroup server, Kerberos authentication is not possible.</source>
          <target state="translated">当客户端使用其 IP 地址连接到域服务器，或连接到工作组服务器时，不能进行 Kerberos 身份验证。</target>         
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>In that case, PowerShell Remoting relies on the <bpt id="p1">[</bpt>NTLM authentication protocol<ept id="p1">](https://msdn.microsoft.com/en-us/library/windows/desktop/aa378749.aspx)</ept>.</source>
          <target state="translated">在这种情况下，PowerShell 远程处理依赖的是 <bpt id="p1">[</bpt>NTLM 身份验证协议<ept id="p1">](https://msdn.microsoft.com/en-us/library/windows/desktop/aa378749.aspx)</ept>。</target>         
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>The NTLM authentication protocol guarantees the user identity without sending any sort of delegable credential.</source>
          <target state="translated">NTLM 身份验证协议可在不发送任何种类的可代理凭据的情况下确保用户标识。</target>         
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>To prove user identity, the NTLM protocol requires that both the client and server compute a session key from the user's password without ever exchanging the password itself.</source>
          <target state="translated">为了证明用户标识，NTLM 协议要求客户端和服务器通过用户的密码计算会话密钥，而不自行交换密码。</target>         
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>The server typically does not know the user's password, so it communicates with the domain controller, which does know the user's password and calculates the session key for the server.</source>
          <target state="translated">由于服务器通常不知道用户的密码，因此它会与域控制器进行通信，域控制器不仅知道用户的密码，还为服务器计算会话密钥。</target>         
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>The NTLM protocol does not, however, guarantee server identity.</source>
          <target state="translated">但 NTLM 协议不能保证服务器标识。</target>         
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>As with all protocols that use NTLM for authentication, an attacker with access to a domain-joined computer's machine account could invoke the domain controller to compute an NTLM session-key and thereby impersonate the server.</source>
          <target state="translated">如同所有使用 NTLM 进行身份验证的协议一样，如果攻击者有权访问已加入域的计算机的帐户，则可以调用域控制器来计算 NTLM 会话密钥，从而模拟服务器。</target>         
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>NTLM-based authentication is disabled by default, but may be permitted by either configuring SSL on the target server, or by configuring the WinRM TrustedHosts setting.</source>
          <target state="translated">默认禁用基于 NTLM 的身份验证，但是可以通过配置目标服务器上的 SSL 或配置 WinRM TrustedHosts 设置而允许使用。</target>         
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Using SSL certificates to validate server identity during NTLM-based connections</source>
          <target state="translated">使用 SSL 证书以在基于 NTLM 的连接过程中验证服务器标识</target>         
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Since the NTLM authentication protocol cannot ensure the identity of the target server (only that it already knows your password), you can configure target servers to use SSL for PowerShell Remoting.</source>
          <target state="translated">由于 NTLM 身份验证协议无法确保目标服务器的标识（除非它已知道你的密码），因此你可以将目标服务器配置为使用适用于 PowerShell 远程处理的 SSL。</target>         
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Assigning a SSL certificate to the target server (if issued by a Certificate Authority that the client also trusts) enables NTLM-based authentication that guarantees both the user identity and server identity.</source>
          <target state="translated">将 SSL 证书分配给目标服务器（如果证书是由客户端也信任的证书颁发机构颁发的话）可启用基于 NTLM 的身份验证，从而确保用户标识和服务器标识。</target>         
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Ignoring NTLM-based server identity errors</source>
          <target state="translated">忽略基于 NTLM 的服务器标识错误</target>         
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>If deploying a SSL certificate to a server for NTLM connections is infeasible, you may suppress the resulting identity errors by adding the server to the WinRM <bpt id="p1">**</bpt>TrustedHosts<ept id="p1">**</ept> list.</source>
          <target state="translated">如果无法将 SSL 证书部署到服务器以进行 NTLM 连接，你可以将此服务器添加到 WinRM <bpt id="p1">**</bpt>TrustedHosts<ept id="p1">**</ept> 列表中，从而取消生成的标识错误。</target>         
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Please note that adding a server name to the TrustedHosts list should not be considered as any form of statement of the trustworthiness of the hosts themselves - as the NTLM authentication protocol cannot guarantee that you are in fact connecting to the host you are intending to connect to.</source>
          <target state="translated">请注意，将服务器名称添加到 TrustedHosts 列表不得被视为任何形式的主机本身可信度声明，因为 NTLM 身份验证协议无法确保你实际要连接到的主机就是你想要连接到的主机。</target>         
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Instead, you should consider the TrustedHosts setting to be the list of hosts for which you wish to suppress the error generated by being unable to verify the server's identity.</source>
          <target state="translated">相反，应将 TrustedHosts 设置视为你想为其取消因无法验证服务器标识而生成的错误的主机列表。</target>         
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Ongoing Communication</source>
          <target state="translated">正在进行的通信</target>         
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Once initial authentication is complete, the <bpt id="p1">[</bpt>PowerShell Remoting Protocol<ept id="p1">](https://msdn.microsoft.com/en-us/library/dd357801.aspx)</ept> encrypts all ongoing communication with a per-session AES-256 symmetric key.</source>
          <target state="translated">初始身份验证完成后，<bpt id="p1">[</bpt>PowerShell 远程处理协议<ept id="p1">](https://msdn.microsoft.com/en-us/library/dd357801.aspx)</ept>会使用每会话 AES-256 对称密钥对所有正在进行的通信进行加密。</target>         
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Making the second hop</source>
          <target state="translated">形成第二个跃点</target>         
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>By default, PowerShell Remoting uses Kerberos (if available) or NTLM for authentication.</source>
          <target state="translated">默认情况下，PowerShell 远程处理使用 Kerberos（如果可用）或者 NTLM 进行身份验证。</target>         
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Both of these protocols authenticate to the remote machine without sending credentials to it.</source>
          <target state="translated">这两种协议对远程计算机进行身份验证而无需向其发送凭据。</target>         
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>This is the most secure way to authenticate, but because the remote machine does not have the user's credentials, it cannot access other computers and services on the user's behalf.</source>
          <target state="translated">这是进行身份验证最安全的方式，但由于远程计算机没有用户的凭据，因此它不能以该用户的名义访问其他计算机和服务。</target>         
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>This is known as the "Double-Hop" problem.</source>
          <target state="translated">这被称为“双跃点”问题。</target>         
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>There are several ways to avoid this problem:</source>
          <target state="translated">有几种方法可以避免此问题：</target>         
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Kerberos Constrained Delegation</source>
          <target state="translated">Kerberos 约束委派</target>         
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>For highly trusted servers, you can enable <bpt id="p1">[</bpt>Kerberos Constrained Delegation<ept id="p1">](https://technet.microsoft.com/en-us/library/cc995228.aspx)</ept>.</source>
          <target state="translated">对于高度受信任的服务器，可以启用 <bpt id="p1">[</bpt>Kerberos 约束委派<ept id="p1">](https://technet.microsoft.com/en-us/library/cc995228.aspx)</ept>。</target>         
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>This allows the remote server to impersonate the authenticated user to a specified list of computers and services.</source>
          <target state="translated">这样一来，远程服务器便可以将已通过身份验证的用户模拟到指定的计算机和服务列表中。</target>         
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>Trust between remote computers</source>
          <target state="translated">远程计算机之间的信任</target>         
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>If you trust users connected remotely to <bpt id="p1">*</bpt>Server1<ept id="p1">*</ept> to resources on <bpt id="p2">*</bpt>Server2<ept id="p2">*</ept>, you can explicitly grant <bpt id="p3">*</bpt>Server1<ept id="p3">*</ept> access to those resources.</source>
          <target state="translated">如果你信任远程连接到 <bpt id="p1">*</bpt>Server1<ept id="p1">*</ept> 的用户访问 <bpt id="p2">*</bpt>Server2<ept id="p2">*</ept> 上的资源，则可以显式授予 <bpt id="p3">*</bpt>Server1<ept id="p3">*</ept> 对这些资源的访问权限。</target>         
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>Use explicit credentials when accessing remote resources</source>
          <target state="translated">访问远程资源时使用显式凭据</target>         
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>You can explicitly pass your credentials to a remote resource by using the <bpt id="p1">**</bpt>Credential<ept id="p1">**</ept> parameter of a cmdlet.</source>
          <target state="translated">通过使用 cmdlet 的 <bpt id="p1">**</bpt>Credential<ept id="p1">**</ept> 参数，可以将凭据显式传递到远程资源。</target>         
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>For example:</source>
          <target state="translated">例如：</target>         
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>CredSSP</source>
          <target state="translated">CredSSP</target>         
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>You can use the <bpt id="p1">[</bpt>Credential Security Support Provider (CredSSP)<ept id="p1">](https://msdn.microsoft.com/en-us/library/windows/desktop/bb931352.aspx)</ept> for authentication (by specifying "CredSSP" as the value of the <ph id="ph1">`Authentication`</ph> parameter of a call to the <bpt id="p2">[</bpt>New-PSSession<ept id="p2">](https://technet.microsoft.com/en-us/library/hh849717.aspx)</ept> cmdlet.</source>
          <target state="translated">你可以使用<bpt id="p1">[</bpt>凭据安全支持提供程序 (CredSSP)<ept id="p1">](https://msdn.microsoft.com/en-us/library/windows/desktop/bb931352.aspx)</ept> 进行身份验证，具体方法为将“CredSSP”指定为对 <bpt id="p2">[</bpt>New-PSSession<ept id="p2">](https://technet.microsoft.com/en-us/library/hh849717.aspx)</ept> cmdlet 的调用的 <ph id="ph1">`Authentication`</ph> 参数值。</target>         
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>CredSSP passes credentials in plain text to the server, so using it opens you up to credential theft attacks.</source>
          <target state="translated">CredSSP 会将凭据以纯文本的形式传递给服务器，因此会导致你面临遭受凭据被盗攻击的风险。</target>         
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>If the remote computer is compromised, the attacker has access to the user's credentials.</source>
          <target state="translated">如果远程计算机被攻破，攻击者将有权访问用户的凭据。</target>         
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>CredSSP is disabled by default on both client and server computers.</source>
          <target state="translated">默认情况下，CredSSP 在客户端和服务器计算机上都处于禁用状态。</target>         
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>You should enable CredSSP only in the most trusted environments.</source>
          <target state="translated">应该仅在最受信任的环境中启用 CredSSP。</target>         
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>For example, a domain administrator connecting to a domain controller because the domain controller is highly trusted.</source>
          <target state="translated">例如，连接到域控制器的域管理员，因为域控制器是高度可信任的。</target>         
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>For more information about security concerns when using CredSSP for PowerShell Remoting, see <bpt id="p1">[</bpt>Accidental Sabotage: Beware of CredSSP<ept id="p1">](http://www.powershellmagazine.com/2014/03/06/accidental-sabotage-beware-of-credssp)</ept>.</source>
          <target state="translated">若要详细了解在使用 CredSSP 进行 PowerShell 远程处理时需要注意的安全问题，请参阅 <bpt id="p1">[</bpt>Accidental Sabotage: Beware of CredSSP（非蓄意破坏：当心 CredSSP）<ept id="p1">](http://www.powershellmagazine.com/2014/03/06/accidental-sabotage-beware-of-credssp)</ept>。</target>         
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>For more information about credential theft attacks, see <bpt id="p1">[</bpt>Mitigating Pass-the-Hash (PtH) Attacks and Other Credential Theft<ept id="p1">](https://www.microsoft.com/en-us/download/details.aspx?id=36036)</ept>.</source>
          <target state="translated">有关凭据被盗攻击的详细信息，请参阅<bpt id="p1">[</bpt>缓解哈希传递 (PtH) 攻击和其他凭据被盗<ept id="p1">](https://www.microsoft.com/en-us/download/details.aspx?id=36036)</ept>。</target>         
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>