<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-cn">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-db30baf" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">991a324945289b2eff0b706d093b2d345352fb15</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">dsc\authoringResourceMofCS.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions" />
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Authoring a DSC resource in C`</source>
          <target state="translated">在 C 中创作 DSC 资源`</target>         
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Authoring a DSC resource in C</source>
          <target state="translated">在 C 中创作 DSC 资源</target>         
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Applies To: Windows PowerShell 4.0, Windows PowerShell 5.0</source>
          <target state="translated">适用于：Windows PowerShell 4.0 和 Windows PowerShell 5.0</target>         
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Typically, a Windows PowerShell Desired State Configuration (DSC) custom resource is implemented in a PowerShell script.</source>
          <target state="translated">通常在 PowerShell 脚本中实现 Windows PowerShell Desired State Configuration (DSC) 自定义资源。</target>         
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>However, you can also implement the functionality of a DSC custom resource by writing cmdlets in C#.</source>
          <target state="translated">但是你也可以通过在 C# 中编写 cmdlet 来实现 DSC 自定义资源的功能。</target>         
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>For an introduction on writing cmdlets in C#, see <bpt id="p1">[</bpt>Writing a Windows PowerShell Cmdlet<ept id="p1">](https://technet.microsoft.com/en-us/library/dd878294.aspx)</ept>.</source>
          <target state="translated">有关在 C# 中编写 cmdlet 的介绍，请参阅<bpt id="p1">[</bpt>编写 Windows PowerShell Cmdlet<ept id="p1">](https://technet.microsoft.com/en-us/library/dd878294.aspx)</ept>。</target>         
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Aside from implementing the resource in C# as cmdlets, the process of creating the MOF schema, creating the folder structure, importing and using your custom DSC resource are the same as described in <bpt id="p1">[</bpt>Writing a custom DSC resource with MOF<ept id="p1">](authoringResourceMOF.md)</ept>.</source>
          <target state="translated">除在 C# 中用 cmdlet 实现资源外，创建 MOF 架构、创建文件夹结构、导入和使用自定义 DSC 资源的过程都与<bpt id="p1">[</bpt>使用 MOF 编写自定义 DSC 资源<ept id="p1">](authoringResourceMOF.md)</ept>中介绍的相同。</target>         
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Writing a cmdlet-based resource</source>
          <target state="translated">编写基于 cmdlet 的资源</target>         
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>For this example, we will implement a simple resource that manages a text file and its contents.</source>
          <target state="translated">此示例中，我们将实现一个管理文本文件及其内容的简单资源。</target>         
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Writing the MOF schema</source>
          <target state="translated">编写 MOF 架构</target>         
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>The following is the MOF resource definition.</source>
          <target state="translated">下面是 MOF 资源的定义。</target>         
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Setting up the Visual Studio project</source>
          <target state="translated">设置 Visual Studio 项目</target>         
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Setting up a cmdlet project</source>
          <target state="translated">设置 cmdlet 项目</target>         
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Open Visual Studio.</source>
          <target state="translated">打开 Visual Studio</target>         
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Create a C# project and provide the name.</source>
          <target state="translated">创建 C# 项目并命名。</target>         
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Select <bpt id="p1">**</bpt>Class Library<ept id="p1">**</ept> from the available project templates.</source>
          <target state="translated">从可用的项目模板中选择<bpt id="p1">**</bpt>类库<ept id="p1">**</ept>。</target>         
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Click <bpt id="p1">**</bpt>Ok<ept id="p1">**</ept>.</source>
          <target state="translated">单击“确定”。</target>         
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Add an assembly reference to System.Automation.Management.dll to your project.</source>
          <target state="translated">将 System.Automation.Management.dll 的程序集引用添加到项目。</target>         
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Change the assembly name to match the resource name.</source>
          <target state="translated">更改程序集名称，使其与资源名称一致。</target>         
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>In this case, the assembly should be named <bpt id="p1">**</bpt>MSFT_XDemoFile<ept id="p1">**</ept>.</source>
          <target state="translated">在本示例中，程序集应该被命名为 <bpt id="p1">**</bpt>MSFT_XDemoFile<ept id="p1">**</ept>。</target>         
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Writing the cmdlet code</source>
          <target state="translated">编写 cmdlet 代码</target>         
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>The following C# code implements the <bpt id="p1">**</bpt>Get-TargetResource<ept id="p1">**</ept>, <bpt id="p2">**</bpt>Set-TargetResource<ept id="p2">**</ept>, and <bpt id="p3">**</bpt>Test-TargetResource<ept id="p3">**</ept> cmdlets.</source>
          <target state="translated">下列 C# 代码会实现 <bpt id="p1">**</bpt>Get-TargetResource<ept id="p1">**</ept>、<bpt id="p2">**</bpt>Set-TargetResource<ept id="p2">**</ept> 和 <bpt id="p3">**</bpt>Test-TargetResource<ept id="p3">**</ept> cmdlet。</target>         
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Deploying the resource</source>
          <target state="translated">部署资源</target>         
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>The compiled dll file should be saved in a file structure similar to a script-based resource.</source>
          <target state="translated">应将已编译的 dll 文件保存在与基于脚本的资源相类似的文件结构中。</target>         
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>The following is the folder structure for this resource.</source>
          <target state="translated">下面是此资源的文件夹结构。</target>         
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>See Also</source>
          <target state="translated">另请参阅</target>         
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Concepts</source>
          <target state="translated">概念</target>         
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Writing a custom DSC resource with MOF</source>
          <target state="translated">使用 MOF 编写自定义 DSC 资源</target>         
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Other Resources</source>
          <target state="translated">其他资源</target>         
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Writing a Windows PowerShell Cmdlet</source>
          <target state="translated">编写 Windows PowerShell Cmdlet</target>         
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>