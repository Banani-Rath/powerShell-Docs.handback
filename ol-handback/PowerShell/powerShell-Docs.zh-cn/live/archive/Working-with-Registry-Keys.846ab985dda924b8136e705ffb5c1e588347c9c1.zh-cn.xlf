<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="md" source-language="en-US" target-language="zh-cn">
    <header>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">23fac6bfaed34ee45e12e630b8e9adbce471b5b3</xliffext:olfilehash>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-04046aa" tool-company="Microsoft" />
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Working with Registry Keys</source>
          <target state="translated">使用注册表项</target>         
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Working with Registry Keys</source>
          <target state="translated">使用注册表项</target>         
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Because registry keys are items on Windows PowerShell drives, working with them is very similar to working with files and folders.</source>
          <target state="translated">由于注册表项是 Windows PowerShell 驱动器上的项，因此使用它们的方法和使用文件及文件夹的方法非常相似。</target>         
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>One critical difference is that every item on a registry\-based Windows PowerShell drive is a container, just like a folder on a file system drive.</source>
          <target state="translated">一个关键区别在于，基于注册表的 Windows PowerShell 驱动器上的每个项都是一个容器，就像文件系统驱动器上有一个文件夹一样。</target>         
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>However, registry entries and their associated values are properties of the items, not distinct items.</source>
          <target state="translated">但是，注册表条目及其关联的值只是项的属性，而不是不同的项。</target>         
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Listing All Subkeys of a Registry Key</source>
          <target state="translated">列出注册表项的所有子项</target>         
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>You can show all items directly within a registry key by using <bpt id="p1">**</bpt>Get\-ChildItem<ept id="p1">**</ept>.</source>
          <target state="translated">可以通过使用 <bpt id="p1">**</bpt>Get-ChildItem<ept id="p1">**</ept> 直接显示某个注册表项中的所有项目。</target>         
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Add the optional <bpt id="p1">**</bpt>Force<ept id="p1">**</ept> parameter to display hidden or system items.</source>
          <target state="translated">添加可选的 <bpt id="p1">**</bpt>Force<ept id="p1">**</ept> 参数以显示隐藏项或系统项。</target>         
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>For example, this command displays the items directly within Windows PowerShell drive HKCU:, which corresponds to the HKEY\_CURRENT\_USER registry hive:</source>
          <target state="translated">例如，以下命令将直接显示 Windows PowerShell 驱动器 HKCU（对应于 HKEY_CURRENT_USER 注册表 Hive）中的项：</target>         
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>These are the top\-level keys visible under HKEY\_CURRENT\_USER in the Registry Editor (Regedit.exe).</source>
          <target state="translated">这些是注册表编辑器 (Regedit.exe) 中 HKEY_CURRENT_USER 下可见的顶级项。</target>         
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>You can also specify this registry path by specifying the registry provider's name, followed by "<bpt id="p1">**</bpt>::<ept id="p1">**</ept>".</source>
          <target state="translated">还可以通过指定注册表提供程序的名称（后跟“<bpt id="p1">**</bpt>::<ept id="p1">**</ept>”）来指定此注册表路径。</target>         
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>The registry provider's full name is <bpt id="p1">**</bpt>Microsoft.PowerShell.Core\\Registry<ept id="p1">**</ept>, but this can be shortened to just <bpt id="p2">**</bpt>Registry<ept id="p2">**</ept>.</source>
          <target state="translated">注册表提供程序的全名是 <bpt id="p1">**</bpt>Microsoft.PowerShell.Core\Registry<ept id="p1">**</ept>，但此名称可以缩短至只有 <bpt id="p2">**</bpt>Registry<ept id="p2">**</ept>。</target>         
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Any of the following commands will list the contents directly under HKCU:</source>
          <target state="translated">任一以下命令都可直接列出 HKCU 下面的内容：</target>         
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>These commands list only the directly contained items, much like using Cmd.exe's <bpt id="p1">**</bpt>DIR<ept id="p1">**</ept> command or <bpt id="p2">**</bpt>ls<ept id="p2">**</ept> in a UNIX shell.</source>
          <target state="translated">这些命令将仅列出直接包含的项，类似于使用 Cmd.exe 的 <bpt id="p1">**</bpt>DIR<ept id="p1">**</ept> 命令或 UNIX shell 中的 <bpt id="p2">**</bpt>ls<ept id="p2">**</ept>。</target>         
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>To show contained items, you need to specify the <bpt id="p1">**</bpt>Recurse<ept id="p1">**</ept> parameter.</source>
          <target state="translated">为了显示包含的项，需要指定 <bpt id="p1">**</bpt>Recurse<ept id="p1">**</ept> 参数。</target>         
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>To list all registry keys in HKCU, use the following command (This operation can take an extremely long time.):</source>
          <target state="translated">若要列出 HKCU 中的所有注册表项，请使用以下命令（此操作可能需要很长的时间。）：</target>         
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Get\-ChildItem<ept id="p1">**</ept> can perform complex filtering capabilities through its <bpt id="p2">**</bpt>Path<ept id="p2">**</ept>, <bpt id="p3">**</bpt>Filter<ept id="p3">**</ept>, <bpt id="p4">**</bpt>Include<ept id="p4">**</ept>, and <bpt id="p5">**</bpt>Exclude<ept id="p5">**</ept> parameters, but those parameters are typically based only on name.</source>
          <target state="translated"><bpt id="p1">**</bpt>Get-ChildItem<ept id="p1">**</ept> 可以通过其 <bpt id="p2">**</bpt>Path<ept id="p2">**</ept>、<bpt id="p3">**</bpt>Filter<ept id="p3">**</ept>、<bpt id="p4">**</bpt>Include<ept id="p4">**</ept> 和 <bpt id="p5">**</bpt>Exclude<ept id="p5">**</ept> 参数执行复杂的筛选功能，但这些参数通常只基于名称。</target>         
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>You can perform complex filtering based on other properties of items by using the <bpt id="p1">**</bpt>Where\-Object<ept id="p1">**</ept>cmdlet.</source>
          <target state="translated">还可以通过使用 <bpt id="p1">**</bpt>Where-Object<ept id="p1">**</ept>cmdlet 基于项的其他属性执行复杂的筛选。</target>         
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>The following command finds all keys within HKCU:\\Software that have no more than one subkey and also have exactly four values:</source>
          <target state="translated">下面的命令用于查找只有一个子项并且刚好具有 4 个值的 HKCU:\Software 中的所有项：</target>         
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Copying Keys</source>
          <target state="translated">复制项</target>         
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Copying is done with <bpt id="p1">**</bpt>Copy\-Item<ept id="p1">**</ept>.</source>
          <target state="translated">复制通过 <bpt id="p1">**</bpt>Copy-Item<ept id="p1">**</ept> 完成。</target>         
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>The following command copies HKLM:\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion and all of its properties to HKCU:\\, creating a new key named "CurrentVersion":</source>
          <target state="translated">下面的命令将 HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion 及其所有属性复制到 HKCU:\，从而创建名为“CurrentVersion”的新项：</target>         
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>If you examine this new key in the registry editor or by using <bpt id="p1">**</bpt>Get\-ChildItem<ept id="p1">**</ept>, you will notice that you do not have copies of the contained subkeys in the new location.</source>
          <target state="translated">如果你在注册表编辑器中检查此新项或通过使用 <bpt id="p1">**</bpt>Get-ChildItem<ept id="p1">**</ept>，你会注意到在新位置中没有包含的子项的副本。</target>         
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>In order to copy all of the contents of a container, you need to specify the <bpt id="p1">**</bpt>Recurse<ept id="p1">**</ept> parameter.</source>
          <target state="translated">为了复制容器的所有内容，需要指定 <bpt id="p1">**</bpt>Recurse<ept id="p1">**</ept> 参数。</target>         
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>To make the preceding copy command recursive, you would use this command:</source>
          <target state="translated">若要使上述的复制命令递归，你将使用此命令：</target>         
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>You can still use other tools you already have available to perform filesystem copies.</source>
          <target state="translated">你仍然可以使用已有的其他可用工具执行文件系统复制。</target>         
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Any registry editing tools—including reg.exe, regini.exe, and regedit.exe—and COM objects that support registry editing (such as WScript.Shell and WMI's StdRegProv class) can be used from within Windows PowerShell.</source>
          <target state="translated">任何注册表编辑工具（包括 reg.exe、regini.exe 和 regedit.exe）以及支持注册表编辑的 COM 对象（如 WScript.Shell 和 WMI 的 StdRegProv 类）均可用于 Windows PowerShell。</target>         
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Creating Keys</source>
          <target state="translated">创建项</target>         
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Creating new keys in the registry is simpler than creating a new item in a file system.</source>
          <target state="translated">在注册表中创建新项比在文件系统中创建新项简单。</target>         
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Because all registry keys are containers, you do not need to specify the item type; you simply supply an explicit path, such as:</source>
          <target state="translated">由于所有注册表项都是容器，因此，你无需指定项类型；只需提供一个明确的路径即可，如：</target>         
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>You can also use a provider\-based path to specify a key:</source>
          <target state="translated">此外还可以使用基于提供程序的路径来指定某项：</target>         
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Deleting Keys</source>
          <target state="translated">删除项</target>         
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Deleting items is essentially the same for all providers.</source>
          <target state="translated">从本质而言，删除项对所有提供程序都是相同的。</target>         
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>The following commands will silently remove items:</source>
          <target state="translated">以下命令将以无提示方式删除项：</target>         
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Removing All Keys Under a Specific Key</source>
          <target state="translated">删除特定项下的所有项</target>         
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>You can remove contained items by using <bpt id="p1">**</bpt>Remove\-Item<ept id="p1">**</ept>, but you will be prompted to confirm the removal if the item contains anything else.</source>
          <target state="translated">可以通过使用 <bpt id="p1">**</bpt>Remove-Item<ept id="p1">**</ept> 删除包含的项，但如果项包含任何其他内容，系统将提示你确认该删除。</target>         
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>For example, if we attempt to delete the HKCU:\\CurrentVersion subkey we created, we see this:</source>
          <target state="translated">例如，如果我们尝试删除我们创建的 HKCU:\CurrentVersion 子项，我们将看到：</target>         
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>To delete contained items without prompting, specify the <bpt id="p1">**</bpt>\-Recurse<ept id="p1">**</ept> parameter:</source>
          <target state="translated">若要在无提示下删除包含的项，请指定 <bpt id="p1">**</bpt>-Recurse<ept id="p1">**</ept> 参数：</target>         
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>If you wanted to remove all items within HKCU:\\CurrentVersion but not HKCU:\\CurrentVersion itself, you could instead use:</source>
          <target state="translated">如果想要删除 HKCU:\CurrentVersion 中的所有项而不是 HKCU:\CurrentVersion 本身，则可以改为使用：</target>         
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>