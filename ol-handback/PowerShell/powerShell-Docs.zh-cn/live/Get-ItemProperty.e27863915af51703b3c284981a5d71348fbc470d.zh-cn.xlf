<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-cn">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-1c394fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">8c8b509fe06b73e5ccd6835fc987682c6ebf12ef</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">reference\5.0\Microsoft.PowerShell.Management\Get-ItemProperty.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions" />
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1a11598671512768c694c401966213f19d66f98d</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">43fc657ae198e55a6ffbf21d3046351c5cab0180</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>powershell, cmdlet</source>
          <target state="translated">powershell cmdlet</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Get-ItemProperty</source>
          <target state="translated">Get-itemproperty</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Get-ItemProperty</source>
          <target state="translated">Get-itemproperty</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>SYNOPSIS</source>
          <target state="translated">简述</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Gets the properties of a specified item.</source>
          <target state="translated">获取指定项的属性。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>SYNTAX</source>
          <target state="translated">语法</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Path (Default)</source>
          <target state="translated">路径 （默认值）</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>LiteralPath</source>
          <target state="translated">LiteralPath</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>DESCRIPTION</source>
          <target state="translated">说明</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>Get-ItemProperty<ept id="p1">**</ept> cmdlet gets the properties of the specified items.</source>
          <target state="translated"> <bpt id="p1">**</bpt>Get-itemproperty<ept id="p1">**</ept> cmdlet 将获取指定项的属性。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>For example, you can use this cmdlet to get the value of the LastAccessTime property of a file object.</source>
          <target state="translated">例如，可以使用此 cmdlet 来获取文件对象的 LastAccessTime 属性的值。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>You can also use this cmdlet to view registry entries and their values.</source>
          <target state="translated">您可以使用此 cmdlet 以查看注册表项和它们的值。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>EXAMPLES</source>
          <target state="translated">示例</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Example 1: Get information about a specific directory</source>
          <target state="translated">示例 1︰ 获取有关特定目录的信息</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>This command gets information about the C:\Windows directory.</source>
          <target state="translated">此命令获取有关 C:\Windows 目录的信息。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Example 2: Get the properties of a specific file</source>
          <target state="translated">示例 2︰ 获取特定的文件的属性</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>This command gets the properties of the C:\Test\Weather.xls file.</source>
          <target state="translated">此命令获取 C:\Test\Weather.xls 文件的属性。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>The result is piped to the Format-List cmdlet to display the output as a list.</source>
          <target state="translated">将结果通过管道传送给 Format-List cmdlet 来以列表形式显示输出。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Example 3: Display the value name and data of registry entries in a registry subkey</source>
          <target state="translated">示例 3︰ 在注册表子项中显示的值名称和数据的注册表项</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>This command displays the value name and data of each of the registry entries contained in the CurrentVersion registry subkey.</source>
          <target state="translated">此命令显示 CurrentVersion 注册表子项中包含的每个注册表项的值名称和数据。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Note that the command requires that there is a Windows PowerShell drive named HKLM: that is mapped to the HKEY_LOCAL_MACHINE hive of the registry.</source>
          <target state="translated">请注意，该命令需要具有名为 HKLM: 的 Windows PowerShell 驱动器（映射到注册表的 HKEY_LOCAL_MACHINE 配置单元）。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>A drive with that name and mapping is available in Windows PowerShell by default.</source>
          <target state="translated">默认情况下，Windows PowerShell 中已附带具有该名称和映射的驱动器。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Alternatively, the path to this registry subkey can be specified by using the following alternative path that begins with the provider name followed by two colons:</source>
          <target state="translated">或者，可以通过使用以下替代路径指定此注册表子项的路径（替代路径以提供程序名称开头，后跟两个冒号）：</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Registry::HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion.</source>
          <target state="translated">Registry::HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Example 4: Get the value name and data of a registry entry in a registry subkey</source>
          <target state="translated">示例 4︰ 注册表子项中获取的值名称和注册表项的数据</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>This command gets the value name and data of the ProgramFilesDir registry entry in the CurrentVersion registry subkey.</source>
          <target state="translated">此命令获取 CurrentVersion 注册表子项中的 ProgramFilesDir 注册表条目的值名称和数据。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>The command uses the <bpt id="p1">*</bpt>Path<ept id="p1">*</ept> parameter to specify the subkey and the Name parameter to specify the value name of the entry.</source>
          <target state="translated">该命令使用 <bpt id="p1">*</bpt>路径<ept id="p1">*</ept> 参数来指定子项，Name 参数来指定该条目的值名称。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>The command uses a back tick or grave accent (<ph id="ph1">\`</ph>), the Windows PowerShell continuation character, to continue the command on the second line.</source>
          <target state="translated">该命令使用反引号或重读符号 (<ph id="ph1">\`</ph>)，Windows PowerShell 的继续符，继续第二行命令。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Example 5: Get the value names and data of registry entries in a registry key</source>
          <target state="translated">示例 5︰ 注册表项中获取的值名称和数据的注册表项</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>This command gets the value names and data of the registry entries in the PowerShellEngine registry key.</source>
          <target state="translated">此命令获取 PowerShellEngine 注册表项中的注册表条目的值名称和数据。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>The results are shown in the following sample output.</source>
          <target state="translated">结果显示在下面的示例输出中。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Example 6: Get, format, and display the results of registry values and data</source>
          <target state="translated">示例 6︰ 获取格式，并显示结果的注册表值和数据</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>This example shows how to format the output of a <bpt id="p1">**</bpt>Get-ItemProperty<ept id="p1">**</ept> command in a list to make it easy to see the registry values and data and to make it easy to interpret the results.</source>
          <target state="translated">此示例演示如何设置格式的输出 <bpt id="p1">**</bpt>Get-itemproperty<ept id="p1">**</ept> 命令列表，使其很容易地查看注册表值和数据，以及能够轻松地解释这些结果。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>The first command uses the <bpt id="p1">**</bpt>Get-ItemProperty<ept id="p1">**</ept> cmdlet to get the registry entries in the Microsoft.PowerShell subkey.</source>
          <target state="translated">第一个命令使用 <bpt id="p1">**</bpt>Get-itemproperty<ept id="p1">**</ept> cmdlet 来获取 Microsoft.PowerShell 子项中的注册表项。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>This subkey stores options for the default shell for Windows PowerShell.</source>
          <target state="translated">此子项存储 Windows PowerShell 的默认 shell 的选项。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>The results are shown in the following sample output.</source>
          <target state="translated">结果显示在下面的示例输出中。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>The output shows that there are two registry entries, Path and ExecutionPolicy.</source>
          <target state="translated">输出显示有两个注册表条目，分别是 Path 和 ExecutionPolicy。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>When a registry key contains fewer than five entries, by default it is displayed in a table, but it is often easier to view in a list.</source>
          <target state="translated">如果注册表项中包含的条目少于 5 个，则默认情况下，将以表的形式显示它，但通常列表形式更易于查看。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>The second command uses the same <bpt id="p1">**</bpt>Get-ItemProperty<ept id="p1">**</ept> command.</source>
          <target state="translated">第二个命令使用相同 <bpt id="p1">**</bpt>Get-itemproperty<ept id="p1">**</ept> 命令。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>However, this time, the command uses a pipeline operator (|) to send the results of the command to the <bpt id="p1">**</bpt>Format-List<ept id="p1">**</ept> cmdlet.</source>
          <target state="translated">但是，这一次，该命令使用管道运算符 (|) 将命令结果发送到 <bpt id="p1">**</bpt>Format-list<ept id="p1">**</ept> cmdlet。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>Format-List<ept id="p1">**</ept> command uses the Property parameter with a value of * (all) to display all of the properties of the objects in a list.</source>
          <target state="translated"> <bpt id="p1">**</bpt>Format-list<ept id="p1">**</ept> 命令使用 Property 参数值为 * （全部），在列表中显示的所有对象的属性。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>The results are shown in the following sample output.</source>
          <target state="translated">结果显示在下面的示例输出中。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>The resulting display shows the Path and ExecutionPolicy registry entries, along with several less familiar properties of the registry key object.</source>
          <target state="translated">生成的显示界面显示了 Path 和 ExecutionPolicy 注册表条目以及注册表项对象的几个不太熟悉的属性。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>The other properties, prefixed with PS, are properties of Windows PowerShell custom objects, such as the objects that represent the registry keys.</source>
          <target state="translated">其他属性，加上 PS，是 Windows PowerShell 自定义对象，例如表示注册表项的对象的属性。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>PARAMETERS</source>
          <target state="translated">参数</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>-Credential</source>
          <target state="translated">-Credential</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Specifies a user account that has permission to perform this action.</source>
          <target state="translated">指定有权执行此操作的用户帐户。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>The default is the current user.</source>
          <target state="translated">默认为当前用户。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Type a user name, such as User01 or Domain01\User01, or enter a <bpt id="p1">**</bpt>PSCredential<ept id="p1">**</ept> object, such as one generated by the Get-Credential cmdlet.</source>
          <target state="translated">键入用户名，例如 User01 或 Domain01\User01，或输入 <bpt id="p1">**</bpt>PSCredential<ept id="p1">**</ept> 对象，例如由 Get-credential cmdlet 生成。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>If you type a user name, you will be prompted for a password.</source>
          <target state="translated">如果键入用户名，则将提示你输入密码。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>This parameter is not supported by any providers installed with Windows PowerShell.</source>
          <target state="translated">随同 Windows PowerShell 一起安装的任何提供程序都不支持此参数。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>-Exclude</source>
          <target state="translated">-排除</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Specifies, as a string array, an item or items that this cmdlet excludes from the operation.</source>
          <target state="translated">指定作为一个字符串数组，此 cmdlet 将从该操作中排除的项或项。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Wildcards are permitted.</source>
          <target state="translated">允许使用通配符。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>-Filter</source>
          <target state="translated">筛选器</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>Specifies a filter in the provider's format or language.</source>
          <target state="translated">以提供程序的格式或语言指定筛选器。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>The value of this parameter qualifies the <bpt id="p1">*</bpt>Path<ept id="p1">*</ept> parameter.</source>
          <target state="translated">此参数的值限定 <bpt id="p1">*</bpt>路径<ept id="p1">*</ept> 参数。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>The syntax of the filter, including the use of wildcards, depends on the provider.</source>
          <target state="translated">筛选器的语法（包括通配符的使用）取决于提供程序。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>Filters are more efficient than other parameters, because the provider applies them when this cmdlet gets the objects rather than having Windows PowerShell filter the objects after they are retrieved.</source>
          <target state="translated">筛选器是比其他参数更有效，因为提供程序将其应用此 cmdlet 获取的对象，而不是在检索后再由 Windows PowerShell 筛选对象。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>-Include</source>
          <target state="translated">-Include</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>Specifies, as a string array, an item or items that this cmdlet includes in the operation.</source>
          <target state="translated">指定作为一个字符串数组，此 cmdlet 将在操作中包括的项或项。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>-LiteralPath</source>
          <target state="translated">-LiteralPath</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>Specifies a path to the item property.</source>
          <target state="translated">指定指向项属性的路径。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>The value of <bpt id="p1">*</bpt>LiteralPath<ept id="p1">*</ept> is used exactly as it is typed.</source>
          <target state="translated">值 <bpt id="p1">*</bpt>LiteralPath<ept id="p1">*</ept> 完全按照其键入时，才使用。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>No characters are interpreted as wildcards.</source>
          <target state="translated">不会将任何字符解释为通配符。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>If the path includes escape characters, enclose it in single quotation marks.</source>
          <target state="translated">如果路径包括转义符，请将其括在单引号中。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>Single quotation marks tell Windows PowerShell not to interpret any characters as escape sequences.</source>
          <target state="translated">单引号会告知 Windows PowerShell 不要将所有字符都解释为转义序列。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>-Name</source>
          <target state="translated">-Name</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>Specifies the name of the property or properties to retrieve.</source>
          <target state="translated">指定要检索的属性的名称。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>-Path</source>
          <target state="translated">-Path</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>Specifies the path to the item or items.</source>
          <target state="translated">指定一个或多个项的路径。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>-UseTransaction</source>
          <target state="translated">-UseTransaction</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>Includes the command in the active transaction.</source>
          <target state="translated">在活动事务中使用该命令。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>This parameter is valid only when a transaction is in progress.</source>
          <target state="translated">仅当正在执行事务时，此参数才有效。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>For more information, see Includes the command in the active transaction.</source>
          <target state="translated">有关详细信息，请参阅包括在活动事务中的命令。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>This parameter is valid only when a transaction is in progress.</source>
          <target state="translated">仅当正在执行事务时，此参数才有效。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>For more information, see</source>
          <target state="translated">有关详细信息，请参阅本主题后面的</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>CommonParameters</source>
          <target state="translated">CommonParameters</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutVariable, -OutBuffer, -PipelineVariable, -Verbose, -WarningAction, and -WarningVariable.</source>
          <target state="translated">此 cmdlet 支持以下常见参数:-调试-ErrorAction、-ErrorVariable、-InformationAction、-InformationVariable、-OutVariable、-OutBuffer、-PipelineVariable、-Verbose、-WarningAction 和-WarningVariable。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>For more information, see about_CommonParameters (http://go.microsoft.com/fwlink/?LinkID=113216).</source>
          <target state="translated">有关详细信息，请参阅 about_CommonParameters (http://go.microsoft.com/fwlink/?LinkID=113216)。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>INPUTS</source>
          <target state="translated">输入</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>System.String</source>
          <target state="translated">System.String</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>You can pipe a string that contains a path to Get-ItemProperty.</source>
          <target state="translated">可以通过管道将包含路径的字符串传递给 Get-ItemProperty。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>OUTPUTS</source>
          <target state="translated">输出</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>System.Boolean, System.String, System.DateTime</source>
          <target state="translated">System.Boolean，System.String，System.DateTime</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>Get-ItemProperty returns an object for each item property that it gets.</source>
          <target state="translated">Get-ItemProperty 为所获取的每个项属性返回一个对象。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>The object type depends on the object that is retrieved.</source>
          <target state="translated">对象类型取决于检索的对象。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>For example, in a file system drive, it might return a file or folder.</source>
          <target state="translated">例如，在文件系统驱动器中，它可能会返回一个文件或文件夹。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>NOTES</source>
          <target state="translated">说明</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>The Get-ItemProperty cmdlet is designed to work with the data exposed by any provider.</source>
          <target state="translated">Get-ItemProperty cmdlet 用于处理由任何提供程序公开的数据。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>To list the providers available in your session, type "Get-PSProvider".</source>
          <target state="translated">若要列出会话中可用的提供程序，请键入“Get-PSProvider”。</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>For more information, see about_Providers.</source>
          <target state="translated">有关详细信息，请参阅 about_Providers。</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>RELATED LINKS</source>
          <target state="translated">相关的链接</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>Clear-ItemProperty</source>
          <target state="translated">Clear-itemproperty</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>Copy-ItemProperty</source>
          <target state="translated">Copy-itemproperty</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>Move-ItemProperty</source>
          <target state="translated">Move-itemproperty</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>New-ItemProperty</source>
          <target state="translated">新 ItemProperty</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>Remove-ItemProperty</source>
          <target state="translated">Remove-itemproperty</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>Rename-ItemProperty</source>
          <target state="translated">Rename-itemproperty</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>Set-ItemProperty</source>
          <target state="translated">Set-ItemProperty</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>