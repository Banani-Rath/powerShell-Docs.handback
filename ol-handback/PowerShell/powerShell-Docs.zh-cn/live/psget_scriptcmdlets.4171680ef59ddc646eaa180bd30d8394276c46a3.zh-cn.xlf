<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-cn">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-56a7a5e" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">91a4ed1e8912f77e274d64db7873ad56edbbd17b</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">wmf\5.0\psget_scriptcmdlets.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions" />
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">b8191ffeee095a7d0d90c02ab30ed1cab5e0f521</xliffext:olskeletonhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>PowerShellGet Cmdlets for Script Management</source>
          <target state="translated">用于脚本管理的 PowerShellGet cmdlet</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Find-Script cmdlet</source>
          <target state="translated">Find-Script cmdlet</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Find-Script cmdlet lets you to discover the script files with different search criteria like name, tag, filter, command name, version range, exact version, all versions, including its dependencies and from specific or all registered repositories.</source>
          <target state="translated">Find-Script cmdlet 可使用不同的搜索条件（如名称、标记、筛选器、命令名、版本范围、确切版本、所有版本及其依赖项和来自特定的或所有已注册的存储库）来发现脚本文件。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Example usage:</source>
          <target state="translated">示例用法：</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Save-Script cmdlet</source>
          <target state="translated">Save-Script cmdlet</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Save-Script cmdlet lets you to review the script file by saving it to a specified location.</source>
          <target state="translated">Save-Script cmdlet 可通过将其保存到特定位置来查看脚本文件。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Install-Script and Get-InstalledScript cmdlets</source>
          <target state="translated">Install-Script cmdlet 和 Get-InstalledScript cmdlet</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Install-Script cmdlet lets you to install a specific script file along with its dependencies to the specified scope.</source>
          <target state="translated">Install-Script cmdlet 可用于将特定的脚本文件及其依赖项安装到指定的作用域。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>By default, scripts are installed to the AllUsers scope.</source>
          <target state="translated">默认情况下，脚本将安装到 AllUsers 作用域。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Get-InstalledScript cmdlet lets you to get the list of script files which were installed using Install-Script cmdlet.</source>
          <target state="translated">Get-InstalledScript cmdlet 可用于获取使用 Install-Script cmdlet 安装的脚本文件列表。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Use note: To allow management and locating of scripts once they are installed, Install-script will create a default folder for storing scripts at $home\Documents\WindowsPowerShell\Scripts, and add that folder to your PATH environment.</source>
          <target state="translated">使用注意事项：为了在安装脚本之后能够对其进行管理和定位，Install-script 将在 $home\Documents\WindowsPowerShell\Scripts 创建默认文件夹用于存储脚本，并将该文件夹添加到 PATH 环境。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>If modifying the path is a concern, use Save-Script instead of Install-Script.</source>
          <target state="translated">如果担心修改路径会出现问题，请使用 Save-Script 而非 Install-Script。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Get-InstalledScripts and Uninstall-Script can only work with scripts placed on the system using Install-Script.</source>
          <target state="translated">Get InstalledScripts 和 Uninstall-Script 只能处理使用 Install-Script 放置在系统上的脚本。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>You can also use Get-Command –Name <ph id="ph1">&amp;lt;</ph>InstalledScriptFileName<ph id="ph2">&amp;gt;</ph> to get it.</source>
          <target state="translated">你还可以使用 Get-Command –Name <ph id="ph1">&amp;lt;</ph>InstalledScriptFileName<ph id="ph2">&amp;gt;</ph> 来获取它。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Two install locations are added to the PATH environment variable on first use of a specified scope.</source>
          <target state="translated">第一次使用指定的作用域时，会将两个安装位置添加到 PATH 环境变量。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Update-Script cmdlet</source>
          <target state="translated">Update-Script cmdlet</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Update-Script cmdlet lets you to do in-place update of the script files which were installed using Install-Script cmdlet.</source>
          <target state="translated">Update-Script cmdlet 可对使用 Install-Script cmdlet 安装的脚本文件进行就地更新。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Uninstall-Script cmdlet</source>
          <target state="translated">Uninstall-Script cmdlet</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>New-ScriptFileInfo and Test-ScriptFileInfo cmdlets</source>
          <target state="translated">New-ScriptFileInfo cmdlet 和 Test-ScriptFileInfo cmdlet</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>New-ScriptFileInfo cmdlet lets you to create a new script file with metadata like Version, Guid, Author, and Description, etc. Test-ScriptFileInfo cmdlet lets you to validate and get the script file metadata.</source>
          <target state="translated">New-ScriptFileInfo cmdlet 可创建包含诸如 Version、Guid、Author 和 Description 等元数据的新脚本文件。Test-ScriptFileInfo cmdlet 可验证和获取脚本文件元数据。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Update-ScriptFileInfo cmdlet</source>
          <target state="translated">Update-ScriptFileInfo cmdlet</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Update-ScriptFileInfo cmdlet lets you to update the existing script file metadata.</source>
          <target state="translated">Update-ScriptFileInfo cmdlet 可更新现有的脚本文件元数据。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Register-PSRepository and Set-PSRepository cmdlets with script sharing support</source>
          <target state="translated">支持脚本共享的 Register-PSRepository cmdlet 和 Set-PSRepository cmdlet</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Use Register-PSRepository/Set-PSRepository cmdlets to add the <bpt id="p1">**</bpt>ScriptSourceLocation<ept id="p1">**</ept> and <bpt id="p2">**</bpt>ScriptPublishLocation<ept id="p2">**</ept> to the PSRepository.</source>
          <target state="translated">使用 Register-PSRepository/Set-PSRepository cmdlet 将 <bpt id="p1">**</bpt>ScriptSourceLocation<ept id="p1">**</ept> 和 <bpt id="p2">**</bpt>ScriptPublishLocation<ept id="p2">**</ept> 添加到 PSRepository。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Publish-Script cmdlet</source>
          <target state="translated">Publish-Script cmdlet</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Publish-Script cmdlet lets you to publish your script file with valid metadata like Version, Guid, Author, and Description, etc.</source>
          <target state="translated">Publish-Script cmdlet 可发布包含诸如 Version、Guid、Author 和 Description 等有效元数据的脚本文件。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>