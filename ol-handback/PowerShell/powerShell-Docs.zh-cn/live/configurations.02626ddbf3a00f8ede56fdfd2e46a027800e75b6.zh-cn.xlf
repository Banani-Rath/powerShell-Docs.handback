<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" source-language="en-US" target-language="zh-cn">
    <body>
      <group id="main" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>DSC Configurations</source>
          <target state="translated">DSC 配置</target>         
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Applies To: Windows PowerShell 4.0, Windows PowerShell 5.0</source>
          <target state="translated">适用于：Windows PowerShell 4.0 和 Windows PowerShell 5.0</target>         
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>DSC configurations are PowerShell scripts that define a special type of function.</source>
          <target state="translated">DSC 配置是定义某一特殊类型函数的 PowerShell 脚本。</target>         
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>To define a configuration, you use the PowerShell keyword <bpt id="p1">__</bpt>Configuration<ept id="p1">__</ept>.</source>
          <target state="translated">若要定义配置，你可使用 PowerShell 关键字 <bpt id="p1">__</bpt>Configuration<ept id="p1">__</ept>。</target>         
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Save the script as a .ps1 file.</source>
          <target state="translated">将脚本保存为 .ps1 文件。</target>         
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Configuration syntax</source>
          <target state="translated">配置语法</target>         
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>A configuration script consists of the following parts:</source>
          <target state="translated">配置脚本由以下部分组成：</target>         
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>The <bpt id="p2">**</bpt>Configuration<ept id="p2">**</ept> block.</source>
          <target state="translated"><bpt id="p2">**</bpt>配置<ept id="p2">**</ept>块。</target>         
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>This is the outermost script block.</source>
          <target state="translated">这是最外层的脚本块。</target>         
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>You define it by using the <bpt id="p3">**</bpt>Configuration<ept id="p3">**</ept> keyword and providing a name.</source>
          <target state="translated">你可通过使用 <bpt id="p3">**</bpt>Configuration<ept id="p3">**</ept> 关键字并提供配置名进行定义。</target>         
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>In this case, the name of the configuration is "MyDscConfiguration".</source>
          <target state="translated">在这种情况下，该配置名为“MyDscConfiguration”。</target>         
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>One or more <bpt id="p4">**</bpt>Node<ept id="p4">**</ept> blocks.</source>
          <target state="translated">一个或多个<bpt id="p4">**</bpt>节点<ept id="p4">**</ept>块。</target>         
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>These define the nodes (computers or VMs) that you are configuring.</source>
          <target state="translated">这些将定义正在配置的节点（计算机或 VM）。</target>         
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>In the above configuration, there is one <bpt id="p5">**</bpt>Node<ept id="p5">**</ept> block that targets a computer named "TEST-PC1".</source>
          <target state="translated">在以上配置中，有一个以计算机为目标的名为“TEST-PC1”的<bpt id="p5">**</bpt>节点<ept id="p5">**</ept>块。</target>         
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>One or more resource blocks.</source>
          <target state="translated">一个或多个资源块。</target>         
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>This is where the configuration sets the properties for the resources that it is configuring.</source>
          <target state="translated">这是此配置为其正在配置的资源设置属性的位置。</target>         
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>In this case, there are two resource blocks, each of which call the "WindowsFeature" resource.</source>
          <target state="translated">在这种情况下，有两个资源块，每个资源块都调用“WindowsFeature”资源。</target>         
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Within a <bpt id="p6">**</bpt>Configuration<ept id="p6">**</ept> block, you can do anything that you normally could in a PoweShell function.</source>
          <target state="translated">在<bpt id="p6">**</bpt>配置<ept id="p6">**</ept>块中，你可以执行通常可在 PoweShell 函数中执行的任何操作。</target>         
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>For example, in the previous example, if you didn't want to hard code the name of the target computer in the configuration, you could add a parameter for the node name:</source>
          <target state="translated">例如，在上一示例中，如果不想在配置中对目标计算机名进行硬编码，则可以为节点名添加参数：</target>         
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>In this example, you specify the name of the node by passing it as the $computerName parameter when you [compile the configuraton](# Compiling the configuration).</source>
          <target state="translated">在此示例中，当你 [编译配置](# Compiling the configuration) 时，可通过将其传递为 $computerName 参数以指定节点名。</target>         
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>The name defaults to "localhost".</source>
          <target state="translated">该名称默认为“localhost”。</target>         
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Compiling the configuration</source>
          <target state="translated">正在编译配置</target>         
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Before you can enact a configuration, you have to compile it into a MOF document.</source>
          <target state="translated">必须将其编译为 MOF 文档才能执行配置。</target>         
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>You do this by calling the configuration like you would a PowerShell function.</source>
          <target state="translated">你可通过调用配置（像调用 PowerShell 函数一样）以执行此操作。</target>         
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source><bpt id="p7">__</bpt>Note:<ept id="p7">__</ept> To call a configuration, the function must be in global scope (as with any other PowerShell function).</source>
          <target state="translated"><bpt id="p7">__</bpt>注意：<ept id="p7">__</ept>若要调用配置，该函数必须在全局范围内（与任何其他 PowerShell 函数一样）。</target>         
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>You can make this happen either by "dot-sourcing" the script, or by running the configuration script by using F5 or clicking on the <bpt id="p8">__</bpt>Run Script<ept id="p8">__</ept> button in the ISE.</source>
          <target state="translated">可通过以下方式来实现此操作：对脚本执行“dot-source”操作，或者使用 F5 或单击 ISE 中的“运行脚本”<bpt id="p8">__</bpt><ept id="p8">__</ept>按钮以运行配置脚本。</target>         
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>To dot-source the script, run the command <ph id="ph1">`. .\myConfig.ps1`</ph> where <ph id="ph2">`myConfig.ps1`</ph> is the name of the script file that contains your configuration.</source>
          <target state="translated">若要对脚本执行“dot-source”操作，请运行命令 <ph id="ph1">`. .\myConfig.ps1`</ph>，其中 <ph id="ph2">`myConfig.ps1`</ph> 是包含配置的脚本文件的名称。</target>         
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>When you call the configuration, it creates:</source>
          <target state="translated">调用配置时，将创建：</target>         
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>A folder in the current directory with the same name as the configuration.</source>
          <target state="translated">与配置名称相同的位于当前目录的文件夹。</target>         
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>A file named <bpt id="p9">_</bpt>NodeName<ept id="p9">_</ept>.mof in the new directory, where <bpt id="p10">_</bpt>NodeName<ept id="p10">_</ept> is the name of the target node of the configuration.</source>
          <target state="translated">新目录中名为 <bpt id="p9">_</bpt>NodeName<ept id="p9">_</ept>.mof 的文件，其中 <bpt id="p10">_</bpt>NodeName<ept id="p10">_</ept> 为配置的目标节点名称。</target>         
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>If there are more than one nodes, a MOF file will be created for each node.</source>
          <target state="translated">如果有多个节点，则将为每个节点创建 MOF 文件。</target>         
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source><bpt id="p11">__</bpt>Note<ept id="p11">__</ept>: The MOF file contains all of the configuration information for the target node.</source>
          <target state="translated"><bpt id="p11">__</bpt>请注意<ept id="p11">__</ept>：此 MOF 文件包含目标节点的所有配置信息。</target>         
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Because of this, it’s important to keep it secure.</source>
          <target state="translated">因此，务必确保其安全性。</target>         
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p12">[</bpt>Securing the MOF file<ept id="p12">](secureMOF.md)</ept>.</source>
          <target state="translated">有关详细信息，请参阅<bpt id="p12">[</bpt>保护 MOF 文件<ept id="p12">](secureMOF.md)</ept>。</target>         
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Compiling the first configuration above results in the following folder structure:</source>
          <target state="translated">编译上述第一个配置会形成以下文件夹结构：</target>         
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>If the configuration takes a parameter, as in the second example, that has to be provided at compile time.</source>
          <target state="translated">如果配置采用了参数（如示例 2 所述），则需在编译时提供该参数。</target>         
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Here's how that would look:</source>
          <target state="translated">其形式如下：</target>         
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Using DependsOn</source>
          <target state="translated">使用 DependsOn</target>         
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>A useful DSC keyword is <bpt id="p13">__</bpt>DependsOn<ept id="p13">__</ept>.</source>
          <target state="translated">有效的 DSC 关键字为 <bpt id="p13">__</bpt>DependsOn<ept id="p13">__</ept>。</target>         
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Typically (though not necessarily always), DSC applies the resources in the order that they appear within the configuration.</source>
          <target state="translated">通常（但不一定总是），DSC 将按资源在配置中显示的顺序来应用这些资源。</target>         
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>However, <bpt id="p14">__</bpt>DependsOn<ept id="p14">__</ept> specifies which resources depend on other resources, and the LCM ensures that they are applied in the correct order, regardless of the order in which resource instances are defined.</source>
          <target state="translated">但是，由 <bpt id="p14">__</bpt>DependsOn<ept id="p14">__</ept> 指定哪些资源依赖于其他资源，而 LCM 则确保这些资源的应用顺序正确（无论资源实例是以何种顺序定义的）。</target>         
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>For example, a configuration might specify that an instance of the <bpt id="p15">__</bpt>User<ept id="p15">__</ept> resource depends on the existence of a <bpt id="p16">__</bpt>Group<ept id="p16">__</ept> instance:</source>
          <target state="translated">例如，配置可能会指定<bpt id="p15">__</bpt>用户<ept id="p15">__</ept>资源实例依赖于<bpt id="p16">__</bpt>组<ept id="p16">__</ept>实例的存在：</target>         
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Using New Resources in Your Configuration</source>
          <target state="translated">在配置中使用新的资源</target>         
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>If you ran the previous examples, you might have noticed that you were warned that you were using a resource without explicitly importing it.</source>
          <target state="translated">如果运行了前面的示例，你可能注意到你已收到警告信息，提示你正在使用未显式导入的资源。</target>         
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Today, DSC ships with 12 resources as part of the PSDesiredStateConfiguration module.</source>
          <target state="translated">现在，DSC 附带 12 种资源作为 PSDesiredStateConfiguration 模块的一部分。</target>         
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Other resources in external modules must be placed in <ph id="ph3">`$env:PSModulePath`</ph> in order to be recognized by the LCM.</source>
          <target state="translated">外部模块中的其他资源须置于 <ph id="ph3">`$env:PSModulePath`</ph> 中以便 LCM 能够识别。</target>         
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>A new cmdlet, <bpt id="p17">[</bpt>Get-DscResource<ept id="p17">](https://technet.microsoft.com/en-us/library/dn521625.aspx)</ept>, can be used to determine what resources are installed on the system and available for use by the LCM.</source>
          <target state="translated">新的 cmdlet - <bpt id="p17">[</bpt>Get-DscResource<ept id="p17">](https://technet.microsoft.com/en-us/library/dn521625.aspx)</ept>，可用来确定哪些资源已安装在系统上并且可供 LCM 使用。</target>         
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Once these modules have been placed in <ph id="ph4">`$env:PSModulePath`</ph> and are properly recognized by <bpt id="p18">[</bpt>Get-DscResource<ept id="p18">](https://technet.microsoft.com/en-us/library/dn521625.aspx)</ept>, they still need to be loaded within your configuration.</source>
          <target state="translated">一旦这些模块已置于 <ph id="ph4">`$env:PSModulePath`</ph> 中并由 <bpt id="p18">[</bpt>Get-DscResource<ept id="p18">](https://technet.microsoft.com/en-us/library/dn521625.aspx)</ept> 正确识别，你仍需在配置中加载它们。</target>         
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source><bpt id="p19">__</bpt>Import-DscResource<ept id="p19">__</ept> is a dynamic keyword that can only be recognized within a <bpt id="p20">__</bpt>Configuration<ept id="p20">__</ept> block (i.e. it is not a cmdlet).</source>
          <target state="translated"><bpt id="p19">__</bpt>Import-DscResource<ept id="p19">__</ept> 是仅可在<bpt id="p20">__</bpt>配置<ept id="p20">__</ept>块中识别的动态关键字（即它不是 cmdlet）。</target>         
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source><bpt id="p21">__</bpt>Import-DscResource<ept id="p21">__</ept> supports two parameters:</source>
          <target state="translated"><bpt id="p21">__</bpt>Import-DscResource<ept id="p21">__</ept> 支持两种参数：</target>         
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source><bpt id="p22">__</bpt>ModuleName<ept id="p22">__</ept> is the recommended way of using <bpt id="p23">__</bpt>Import-DscResource<ept id="p23">__</ept>.</source>
          <target state="translated"><bpt id="p22">__</bpt>ModuleName<ept id="p22">__</ept> 是使用 <bpt id="p23">__</bpt>Import-DscResource<ept id="p23">__</ept> 的推荐方法。</target>         
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>It accepts the name of the module that contains the resources to be imported (as well as a string array of module names).</source>
          <target state="translated">它接受包含要导入资源的模块名称以及模块名称的字符串数组。</target>         
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source><bpt id="p24">__</bpt>Name<ept id="p24">__</ept> is the name of the resource to import.</source>
          <target state="translated"><bpt id="p24">__</bpt>Name<ept id="p24">__</ept> 是要导入资源的名称。</target>         
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>This is not the friendly name returned as "Name" by <bpt id="p25">[</bpt>Get-DscResource<ept id="p25">](https://technet.microsoft.com/en-us/library/dn521625.aspx)</ept>, but the class name used when defining the resource schema (returned as <bpt id="p26">__</bpt>ResourceType<ept id="p26">__</ept> by <bpt id="p27">[</bpt>Get-DscResource<ept id="p27">](https://technet.microsoft.com/en-us/library/dn521625.aspx)</ept>).</source>
          <target state="translated">这不是由 <bpt id="p25">[</bpt>Get-DscResource<ept id="p25">](https://technet.microsoft.com/en-us/library/dn521625.aspx)</ept> 返回为“Name”的友好名称，而是定义资源架构时使用的类名（由 <bpt id="p27">[</bpt>Get-DscResource<ept id="p27">](https://technet.microsoft.com/en-us/library/dn521625.aspx)</ept> 返回为 <bpt id="p26">__</bpt>ResourceType<ept id="p26">__</ept>）。</target>         
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>See Also</source>
          <target state="translated">另请参阅</target>         
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source><ph id="ph5">[</ph>Windows PowerShell Desired State Configuration Overview<ph id="ph6">](overview.md)</ph></source>
          <target state="translated"><ph id="ph5">[</ph>Windows PowerShell Desired State Configuration 概述<ph id="ph6">](overview.md)</ph></target>         
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source><ph id="ph7">[</ph>DSC Resources<ph id="ph8">](resources.md)</ph></source>
          <target state="translated"><ph id="ph7">[</ph>DSC 资源<ph id="ph8">](resources.md)</ph></target>         
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source><ph id="ph9">[</ph>Configuring The Local Configuration Manager<ph id="ph10">](metaconfig.md)</ph></source>
          <target state="translated"><ph id="ph9">[</ph>配置本地配置管理器<ph id="ph10">](metaconfig.md)</ph></target>         
        </trans-unit>
      </group>
    </body>
  </file>
  <header xmlns="">
    <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">625d4c0a9b1d0b6f23dcf1b07dd3f567699f7cd9</xliffext:olfilehash>
  </header>
</xliff>