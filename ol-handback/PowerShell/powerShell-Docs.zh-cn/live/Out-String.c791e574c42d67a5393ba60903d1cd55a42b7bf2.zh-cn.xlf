<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-cn">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-1c394fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">60af40f1100548229d2e571293b832a23ac852da</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">reference\5.0\Microsoft.PowerShell.Utility\Out-String.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions" />
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">6d36c2ac520544c0e050972d1d754a96f1cfad84</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d09caffddee3a2bfc29f67cd6387c3ca814a29ee</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>powershell, cmdlet</source>
          <target state="translated">powershell cmdlet</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Out-String</source>
          <target state="translated">Out-String</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Out-String</source>
          <target state="translated">Out-String</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>SYNOPSIS</source>
          <target state="translated">简述</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Sends objects to the host as a series of strings.</source>
          <target state="translated">将对象作为一系列字符串发送到主机。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>SYNTAX</source>
          <target state="translated">语法</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>DESCRIPTION</source>
          <target state="translated">说明</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>Out-String<ept id="p1">**</ept> cmdlet converts the objects that Windows PowerShell manages into an array of strings.</source>
          <target state="translated"> <bpt id="p1">**</bpt>Out-string<ept id="p1">**</ept> cmdlet 将 Windows PowerShell 管理的对象转换为一个字符串数组。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>By default, <bpt id="p1">**</bpt>Out-String<ept id="p1">**</ept> accumulates the strings and returns them as a single string, but you can use the stream parameter to direct <bpt id="p2">**</bpt>Out-String<ept id="p2">**</ept> to return one string at a time.</source>
          <target state="translated">默认情况下， <bpt id="p1">**</bpt>Out-string<ept id="p1">**</ept> 累积字符串并返回它们作为一个字符串，但您可以使用 stream 参数将定向 <bpt id="p2">**</bpt>Out-string<ept id="p2">**</ept> 一次返回一个字符串。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>This cmdlet lets you search and manipulate string output as you would in traditional shells when object manipulation is less convenient.</source>
          <target state="translated">此 cmdlet 用于在对象操作不太方便时像在传统 shell 中一样搜索和操作字符串输出。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>EXAMPLES</source>
          <target state="translated">示例</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Example 1: Output text to the console as a string</source>
          <target state="translated">示例 1︰ 输出到控制台中以字符串形式的文本</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>This command sends the content of the Testfile2.txt file to the console as a single string.</source>
          <target state="translated">此命令将 Testfile2.txt 文件的内容作为单个字符串发送到控制台。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>It uses the Get-Content cmdlet to get the content of the file.</source>
          <target state="translated">它使用 Get-content cmdlet 来获取该文件的内容。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>The pipeline operator (|) sends the content to <bpt id="p1">**</bpt>Out-String<ept id="p1">**</ept>, which sends the content to the console as a string.</source>
          <target state="translated">管道运算符 (|) 将发送到的内容 <bpt id="p1">**</bpt>Out-string<ept id="p1">**</ept>, ，将内容发送到控制台中以字符串形式。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Example 2: Get the current culture and convert the data to strings.</source>
          <target state="translated">示例 2︰ 获取当前区域性，并将数据转换为字符串。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>These commands get the regional settings for the current user and convert the data to strings.</source>
          <target state="translated">这些命令获取当前用户的区域设置，并将该数据转换为字符串。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Example 3: Working with objects</source>
          <target state="translated">示例 3︰ 使用对象</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>This example demonstrates the difference between working with objects and working with strings.</source>
          <target state="translated">此示例演示了使用对象和使用字符串之间的差异。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>The command displays aliases that include the phrase Get-Command.</source>
          <target state="translated">该命令显示包含短语 Get 命令的别名。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>It uses the Get-Alias cmdlet to get a set of <bpt id="p1">**</bpt>AliasInfo<ept id="p1">**</ept> objects (one for each alias in the current session).</source>
          <target state="translated">它使用 Get-alias cmdlet 来获取一套 <bpt id="p1">**</bpt>AliasInfo<ept id="p1">**</ept> 对象 （一个用于在当前会话中每个别名）。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>The pipeline operator (|) sends the output of the <bpt id="p1">**</bpt>Get-Alias<ept id="p1">**</ept> cmdlet to the <bpt id="p2">**</bpt>Out-String<ept id="p2">**</ept> cmdlet, which converts the objects to a series of strings.</source>
          <target state="translated">管道运算符 (|) 将发送的输出 <bpt id="p1">**</bpt>Get-alias<ept id="p1">**</ept> cmdlet <bpt id="p2">**</bpt>Out-string<ept id="p2">**</ept> cmdlet，后者将对象转换为一系列的字符串。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>It uses the <bpt id="p1">*</bpt>Stream<ept id="p1">*</ept> parameter of <bpt id="p2">**</bpt>Out-String<ept id="p2">**</ept> to send each string individually, instead of concatenating them into a single string.</source>
          <target state="translated">它使用 <bpt id="p1">*</bpt>流<ept id="p1">*</ept> 参数 <bpt id="p2">**</bpt>Out-string<ept id="p2">**</ept> 单独发送每个字符串，而不是将它们连成单个字符串。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Another pipeline operator sends the strings to the Select-String cmdlet, which selects the strings that include <bpt id="p1">**</bpt>Get-Command<ept id="p1">**</ept> anywhere in the string.</source>
          <target state="translated">另一个管道运算符将字符串发送到 Select-string cmdlet，后者选择字符串中包含 <bpt id="p1">**</bpt>Get-command<ept id="p1">**</ept> 字符串中的任意位置。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>If you omit the <bpt id="p1">*</bpt>Stream<ept id="p1">*</ept> parameter, the command displays all of the aliases, because <bpt id="p2">**</bpt>Select-String<ept id="p2">**</ept> finds <bpt id="p3">**</bpt>Get-Command<ept id="p3">**</ept> in the single string that <bpt id="p4">**</bpt>Out-String<ept id="p4">**</ept> returns, and the formatter displays the string as a table.</source>
          <target state="translated">如果省略 <bpt id="p1">*</bpt>流<ept id="p1">*</ept> 参数，该命令将显示所有别名，因为 <bpt id="p2">**</bpt>Select-string<ept id="p2">**</ept> 查找 <bpt id="p3">**</bpt>Get-command<ept id="p3">**</ept> 中单个字符串 <bpt id="p4">**</bpt>Out-string<ept id="p4">**</ept> 返回，并且格式化程序将以表的形式显示的字符串。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>PARAMETERS</source>
          <target state="translated">参数</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>-InputObject</source>
          <target state="translated">-InputObject</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Specifies the objects to be written to a string.</source>
          <target state="translated">指定要写入字符串的对象。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Enter a variable that contains the objects, or type a command or expression that gets the objects.</source>
          <target state="translated">输入一个包含对象的变量，或键入可获取对象的命令或表达式。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>-Stream</source>
          <target state="translated">数据流</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Indicates that the cmdlet sends the strings for each object separately.</source>
          <target state="translated">指示该 cmdlet 单独发送每个对象的字符串。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>By default, the strings for each object are accumulated and sent as a single string.</source>
          <target state="translated">默认情况下，每个对象的字符串都将作为单个字符串进行累积和发送。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>To use the <bpt id="p1">*</bpt>Stream<ept id="p1">*</ept> parameter, type <ph id="ph1">`-Stream`</ph> or its alias, <ph id="ph2">`ost`</ph>.</source>
          <target state="translated">若要使用 <bpt id="p1">*</bpt>流<ept id="p1">*</ept> 参数，请键入 <ph id="ph1">`-Stream`</ph> 或其别名 <ph id="ph2">`ost`</ph>。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>-Width</source>
          <target state="translated">宽度</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Specifies the number of characters in each line of output.</source>
          <target state="translated">指定输出的每一行中的字符数。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Any additional characters are truncated, not wrapped.</source>
          <target state="translated">将截断任何额外字符，不换行。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>If you omit this parameter, the width is determined by the characteristics of the host program.</source>
          <target state="translated">如果省略此参数，则由主机程序的特征确定宽度。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>The default value for the Windows PowerShell console is 80 (characters).</source>
          <target state="translated">Windows PowerShell 控制台的默认值为 80（字符）。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>CommonParameters</source>
          <target state="translated">CommonParameters</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutVariable, -OutBuffer, -PipelineVariable, -Verbose, -WarningAction, and -WarningVariable.</source>
          <target state="translated">此 cmdlet 支持以下常见参数:-调试-ErrorAction、-ErrorVariable、-InformationAction、-InformationVariable、-OutVariable、-OutBuffer、-PipelineVariable、-Verbose、-WarningAction 和-WarningVariable。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>For more information, see about_CommonParameters (http://go.microsoft.com/fwlink/?LinkID=113216).</source>
          <target state="translated">有关详细信息，请参阅 about_CommonParameters (http://go.microsoft.com/fwlink/?LinkID=113216)。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>INPUTS</source>
          <target state="translated">输入</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>System.Management.Automation.PSObject</source>
          <target state="translated">System.Management.Automation.PSObject</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>You can pipe objects to <bpt id="p1">**</bpt>Out-String<ept id="p1">**</ept>.</source>
          <target state="translated">您可以通过管道传递对象传递给 <bpt id="p1">**</bpt>Out-string<ept id="p1">**</ept>。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>OUTPUTS</source>
          <target state="translated">输出</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>System.String</source>
          <target state="translated">System.String</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Out-String<ept id="p1">**</ept> returns the string that it creates from the input object.</source>
          <target state="translated"><bpt id="p1">**</bpt>Out-string<ept id="p1">**</ept> 返回它创建从输入对象的字符串。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>NOTES</source>
          <target state="translated">说明</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>The cmdlets that contain the <bpt id="p1">**</bpt>Out<ept id="p1">**</ept> verb that do not format objects; they just render them and send them to the specified display destination.</source>
          <target state="translated">包含的 cmdlet <bpt id="p1">**</bpt>出<ept id="p1">**</ept> 谓词，不要格式化对象; 它们只呈现它们并将其发送给指定的显示目标。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>If you send an unformatted object to an <bpt id="p1">**</bpt>Out<ept id="p1">**</ept> cmdlet, the cmdlet sends it to a formatting cmdlet before rendering it.</source>
          <target state="translated">如果发送到的未格式化的对象 <bpt id="p1">**</bpt>出<ept id="p1">**</ept> cmdlet，该 cmdlet 将其发送到格式化 cmdlet 在呈现它之前。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>Out<ept id="p1">**</ept> cmdlets do not have parameters that take names or file paths.</source>
          <target state="translated"> <bpt id="p1">**</bpt>出<ept id="p1">**</ept> cmdlet 没有参数的名称和文件路径。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>To send data to an <bpt id="p1">**</bpt>Out<ept id="p1">**</ept> cmdlet, use a pipeline operator (|) to send the output of a Windows PowerShell command to the cmdlet.</source>
          <target state="translated">若要将数据发送到 <bpt id="p1">**</bpt>出<ept id="p1">**</ept> cmdlet，使用管道运算符 (|) 将 Windows PowerShell 命令的输出发送到 cmdlet。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>You can also store data in a variable and use the <bpt id="p1">*</bpt>InputObject<ept id="p1">*</ept> parameter to pass the data to the cmdlet.</source>
          <target state="translated">此外可以将数据存储在变量中，并使用 <bpt id="p1">*</bpt>InputObject<ept id="p1">*</ept> 将数据传递给 cmdlet 的参数。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>RELATED LINKS</source>
          <target state="translated">相关的链接</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Out-Default</source>
          <target state="translated">Out-Default</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>Out-File</source>
          <target state="translated">Out-file</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Out-GridView</source>
          <target state="translated">Out-GridView</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Out-Host</source>
          <target state="translated">Out-Host</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>Out-Null</source>
          <target state="translated">Out-Null</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>Out-Printer</source>
          <target state="translated">Out-printer</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>