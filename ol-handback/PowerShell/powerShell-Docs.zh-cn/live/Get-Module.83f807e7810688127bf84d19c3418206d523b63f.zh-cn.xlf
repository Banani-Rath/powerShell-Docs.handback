<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-cn">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-1c394fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f6f44fe03bf31070c7e6ad331b438c9134ab55ae</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">reference\3.0\Microsoft.PowerShell.Core\Get-Module.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions" />
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">7622848439ee83ac4ec1fdb734be96816a66556e</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">bf2880552df79f224c63554687c2681cae84a103</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>powershell, cmdlet</source>
          <target state="translated">powershell cmdlet</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Get-Module</source>
          <target state="translated">Get-Module</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Get-Module</source>
          <target state="translated">Get-Module</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>SYNOPSIS</source>
          <target state="translated">简述</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Gets the modules that have been imported or that can be imported into the current session.</source>
          <target state="translated">获取已导入或可导入到当前会话的模块。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>SYNTAX</source>
          <target state="translated">语法</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Loaded (Default)</source>
          <target state="translated">加载 （默认值）</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Available</source>
          <target state="translated">可用</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>PsSession</source>
          <target state="translated">PsSession</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>CimSession</source>
          <target state="translated">CimSession</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>DESCRIPTION</source>
          <target state="translated">说明</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>Get-Module<ept id="p1">**</ept> cmdlet gets the Windows PowerShell modules that have been imported, or that can be imported, into a Windows PowerShell session.</source>
          <target state="translated"> <bpt id="p1">**</bpt>Get-module<ept id="p1">**</ept> cmdlet 可获取的已导入，或者，可以导入的 Windows PowerShell 会话的 Windows PowerShell 模块。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>The module object that <bpt id="p1">**</bpt>Get-Module<ept id="p1">**</ept> returns contains valuable information about the module.</source>
          <target state="translated">模块对象 <bpt id="p1">**</bpt>Get-module<ept id="p1">**</ept> 返回包含有关该模块的重要信息。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>You can also pipe the module objects to other cmdlets, such as the Import-Module and Remove-Module cmdlets.</source>
          <target state="translated">您还可以通过管道将模块对象传送到其他 cmdlet，如导入模块和删除模块 cmdlet。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Without parameters, <bpt id="p1">**</bpt>Get-Module<ept id="p1">**</ept> gets modules that have been imported into the current session.</source>
          <target state="translated">不带参数， <bpt id="p1">**</bpt>Get-module<ept id="p1">**</ept> 获取已导入到当前会话的模块。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>To get all installed modules, use the <bpt id="p1">**</bpt>ListAvailable<ept id="p1">**</ept> parameter.</source>
          <target state="translated">若要获取所有已安装的模块，请使用 <bpt id="p1">**</bpt>ListAvailable<ept id="p1">**</ept> 参数。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Get-Module<ept id="p1">**</ept> gets modules, but it does not import them.</source>
          <target state="translated"><bpt id="p1">**</bpt>Get-module<ept id="p1">**</ept> 获取模块，但它不导入它们。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Beginning in Windows PowerShell 3.0, modules are automatically imported when you use a command in the module, but a <bpt id="p1">**</bpt>Get-Module<ept id="p1">**</ept> command does not trigger an automatic import.</source>
          <target state="translated">从 Windows PowerShell 3.0 开始，模块会自动导入的模块中使用命令时，但 <bpt id="p1">**</bpt>Get-module<ept id="p1">**</ept> 命令不会触发自动导入。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>You can also import the modules into your session by using the Import-Module cmdlet.</source>
          <target state="translated">您可以使用 Import-module cmdlet 模块导入到你的会话。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Beginning in Windows PowerShell 3.0, you can get (and then, import) modules from remote sessions into the local session.</source>
          <target state="translated">从 Windows PowerShell 3.0 开始，可以从远程会话中获取模块（然后将其导入到本地会话中）。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>This strategy uses the Implicit Remoting feature of Windows PowerShell and is equivalent to using the Import-PSSession cmdlet.</source>
          <target state="translated">此策略使用 Windows PowerShell 的隐式远程处理功能，并等效于使用 Import-pssession cmdlet。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>When you use commands in modules imported from another session, the commands run implicitly in the remote session, allowing you to manage the remote computer from the local session.</source>
          <target state="translated">当你在从另一个会话中导入的模块中使用命令时，这些命令将在远程会话中隐式运行，从而允许你通过本地会话管理远程计算机。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Also, beginning in Windows PowerShell 3.0, you can use <bpt id="p1">**</bpt>Get-Module<ept id="p1">**</ept> and <bpt id="p2">**</bpt>Import-Module<ept id="p2">**</ept> to get and import Common Information Model (CIM) modules, in which the cmdlets are defined in Cmdlet Definition XML (CDXML) files.</source>
          <target state="translated">此外，从 Windows PowerShell 3.0 开始，您可以使用 <bpt id="p1">**</bpt>Get-module<ept id="p1">**</ept> 和 <bpt id="p2">**</bpt>导入模块<ept id="p2">**</ept> 获取和导入通用信息模型 (CIM) 模块，这些 cmdlet 在 Cmdlet 定义 XML (CDXML) 文件中在其中的定义。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>This feature allows you to use cmdlets that are implemented in non-managed code assemblies, such as those written in C++.</source>
          <target state="translated">此功能允许你使用在非托管代码程序集（例如采用 C++ 编写的程序集）中实现的 cmdlet。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>With these new features, the <bpt id="p1">**</bpt>Get-Module<ept id="p1">**</ept> and <bpt id="p2">**</bpt>Import-Module<ept id="p2">**</ept> cmdlets become primary tools for managing heterogeneous enterprises that include Windows computers and computers that are running other operating systems.</source>
          <target state="translated">借助这些新功能， <bpt id="p1">**</bpt>Get-module<ept id="p1">**</ept> 和 <bpt id="p2">**</bpt>导入模块<ept id="p2">**</ept> cmdlet 成为了用于管理包括 Windows 计算机和正在运行其他操作系统的计算机的异类企业的主要工具。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>To manage remote Windows computers that have Windows PowerShell and Windows PowerShell remoting enabled, create a PSSession on the remote computer and then use the <bpt id="p1">**</bpt>PSSession<ept id="p1">**</ept> parameter of <bpt id="p2">**</bpt>Get-Module<ept id="p2">**</ept> to get the Windows PowerShell modules in the PSSession.</source>
          <target state="translated">要管理远程了 Windows PowerShell 和启用 Windows PowerShell 远程处理的 Windows 计算机，请在远程计算机上创建 PSSession，然后使用 <bpt id="p1">**</bpt>PSSession<ept id="p1">**</ept> 参数 <bpt id="p2">**</bpt>Get-module<ept id="p2">**</ept> 获取 PSSession 中的 Windows PowerShell 模块。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>When you import the modules, and then use the imported commands in the current session, the commands run implicitly in the PSSession on the remote computer.</source>
          <target state="translated">如果你导入模块，然后在当前会话中使用导入的模块，这些命令将在远程计算机上的 PSSession 中隐式运行。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>You can use this strategy to manage the remote computer.</source>
          <target state="translated">你可以将此策略用于管理远程计算机。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>You can use a similar strategy to manage computers that do not have Windows PowerShell remoting enabled, including computers that are not running a Windows operating system, and Windows computers that have Windows PowerShell, but do not have Windows PowerShell remoting enabled.</source>
          <target state="translated">可以使用类似的策略来管理未启用 Windows PowerShell 远程处理的计算机，包括未运行 Windows 操作系统的计算机以及虽然具有 Windows PowerShell 但未启用 Windows PowerShell 远程处理的 Windows 计算机。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Begin by creating a "CIM session" on the remote computer; a connection  to Windows Management Instrumentation (WMI) on the remote computer.</source>
          <target state="translated">首先，在远程计算机; 上创建"CIM 会话"一种连接到 Windows Management Instrumentation (WMI) 远程计算机上。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Then use the <bpt id="p1">**</bpt>CIMSession<ept id="p1">**</ept> parameter of <bpt id="p2">**</bpt>Get-Module<ept id="p2">**</ept> to get CIM modules from the CIM session.</source>
          <target state="translated">然后，使用 <bpt id="p1">**</bpt>CIMSession<ept id="p1">**</ept> 参数 <bpt id="p2">**</bpt>Get-module<ept id="p2">**</ept> 从 CIM 会话获取 CIM 模块。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>When you import a CIM module (by using the <bpt id="p1">**</bpt>Import-Module<ept id="p1">**</ept> cmdlet) and then run the imported commands, the commands run implicitly on the remote computer.</source>
          <target state="translated">当你导入 CIM 模块 (通过使用 <bpt id="p1">**</bpt>导入模块<ept id="p1">**</ept> cmdlet) 然后运行导入的命令，这些命令在远程计算机上隐式运行。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>You can use this WMI and CIM strategy to manage the remote computer.</source>
          <target state="translated">你可以将此 WMI 和 CIM 策略用于管理远程计算机。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>EXAMPLES</source>
          <target state="translated">示例</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>-------------------------- EXAMPLE 1 --------------------------</source>
          <target state="translated">-------------------------- 示例 1 --------------------------</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>This command gets modules that have been imported into the current session.</source>
          <target state="translated">此命令将获取已导入当前会话的模块。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>-------------------------- EXAMPLE 2 --------------------------</source>
          <target state="translated">-------------------------- EXAMPLE 2 --------------------------</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>This command gets the modules that are installed on the computer and can be imported into the current session.</source>
          <target state="translated">此命令将获取已安装在计算机上的且可导入当前会话的模块。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Get-Module<ept id="p1">**</ept> looks for available modules in the path specified by the <bpt id="p2">**</bpt>$env:PSModulePath<ept id="p2">**</ept> environment variable.</source>
          <target state="translated"><bpt id="p1">**</bpt>Get-module<ept id="p1">**</ept> 查找可用模块中指定的路径 <bpt id="p2">**</bpt>$env: PSModulePath<ept id="p2">**</ept> 环境变量。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>For more information about <bpt id="p1">**</bpt>PSModulePath<ept id="p1">**</ept>, see about_Modules and about_Environment_Variables.</source>
          <target state="translated">有关详细信息 <bpt id="p1">**</bpt>PSModulePath<ept id="p1">**</ept>, ，请参阅 about_Modules 和 about_Environment_Variables。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>-------------------------- EXAMPLE 3 --------------------------</source>
          <target state="translated">-------------------------- EXAMPLE 3 --------------------------</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>This command gets all of the exported files for all available modules.</source>
          <target state="translated">此命令将获取所有可用模块的所有导出的文件。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>-------------------------- EXAMPLE 4 --------------------------</source>
          <target state="translated">-------------------------- EXAMPLE 4 --------------------------</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>This command gets the properties of the <bpt id="p1">**</bpt>PSModuleInfo<ept id="p1">**</ept> object that <bpt id="p2">**</bpt>Get-Module<ept id="p2">**</ept> returns.</source>
          <target state="translated">此命令将获取的属性 <bpt id="p1">**</bpt>PSModuleInfo<ept id="p1">**</ept> 对象 <bpt id="p2">**</bpt>Get-module<ept id="p2">**</ept> 返回。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>There is one object for each module file.</source>
          <target state="translated">每个模块文件都有一个对应对象。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>You can use the properties to format and filter the module objects.</source>
          <target state="translated">可以使用属性来对模块对象进行格式设置和筛选。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>For more information about the properties, see "PSModule Properties" in the MSDN (Microsoft Developer Network) library at http://go.microsoft.com/fwlink/?LinkId=143624http://go.microsoft.com/fwlink/?LinkId=143624.</source>
          <target state="translated">有关属性的详细信息，请参阅在 http://go.microsoft.com/fwlink/?LinkId=143624http MSDN (Microsoft Developer Network) 库中的"PSModule 属性": / / go.microsoft.com/fwlink/?LinkId=143624。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>The output includes the new properties, such as <bpt id="p1">**</bpt>Author<ept id="p1">**</ept> and <bpt id="p2">**</bpt>CompanyName<ept id="p2">**</ept>, that were introduced in Windows PowerShell 3.0</source>
          <target state="translated">输出包括新的属性，如 <bpt id="p1">**</bpt>作者<ept id="p1">**</ept> 和 <bpt id="p2">**</bpt>CompanyName<ept id="p2">**</ept>, ，Windows PowerShell 3.0 中引入</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>-------------------------- EXAMPLE 5 --------------------------</source>
          <target state="translated">-------------------------- EXAMPLE 5 --------------------------</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>This command gets all module files (imported and available) and groups them by module name.</source>
          <target state="translated">此命令将获取所有模块文件（已导入的和可用的），并按模块名称对其进行分组。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>This lets you see the module files that each script is exporting.</source>
          <target state="translated">这使你能够查看每个脚本将要导出的模块文件。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>-------------------------- EXAMPLE 6 --------------------------</source>
          <target state="translated">-------------------------- EXAMPLE 6 --------------------------</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>These commands display the contents of the module manifest for the Windows PowerShell BitsTransfer module.</source>
          <target state="translated">这些命令将显示 Windows PowerShell BitsTransfer 模块的模块清单的内容。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Modules are not required to have manifest files and, when they do have a manifest file, the manifest file is required only to include a version number.</source>
          <target state="translated">模块不需具有清单文件，而当它们具有清单文件时，清单文件只需包含版本号。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>However, manifest files often provide useful information about a module, its requirements, and its contents.</source>
          <target state="translated">但是，清单文件通常可提供有关模块、模块要求和模块内容的有用信息。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>-------------------------- EXAMPLE 7 --------------------------</source>
          <target state="translated">-------------------------- EXAMPLE 7 --------------------------</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>This command lists the files in the module's directory.</source>
          <target state="translated">此命令将列出模块的目录中的文件。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>This is another way to determine what is in a module before you import it.</source>
          <target state="translated">这是另一种用于在导入模块之前确定模块中的内容的方法。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>Some modules might have help files or ReadMe files that describe the module.</source>
          <target state="translated">某些模块可能具有帮助文件或描述该模板的自述文件。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>-------------------------- EXAMPLE 8 --------------------------</source>
          <target state="translated">-------------------------- EXAMPLE 8 --------------------------</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>These commands get the modules that are installed on the Server01 computer.</source>
          <target state="translated">这些命令将获取安装在 Server01 计算机上的模块。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>The first command uses the New-PSSession cmdlet to create a PSSession on the Server01 computer.</source>
          <target state="translated">第一条命令使用 New-PSSession cmdlet 在 Server01 计算机上创建 PSSession。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>The command saves the PSSession in the $s variable.</source>
          <target state="translated">此命令将 PSSession 保存在 $s 变量中。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>The second command uses the <bpt id="p1">**</bpt>PSSession<ept id="p1">**</ept> and <bpt id="p2">**</bpt>ListAvailable<ept id="p2">**</ept> parameters of <bpt id="p3">**</bpt>Get-Module<ept id="p3">**</ept> to get the modules in the PSSession in the $s variable.</source>
          <target state="translated">第二个命令使用 <bpt id="p1">**</bpt>PSSession<ept id="p1">**</ept> 和 <bpt id="p2">**</bpt>ListAvailable<ept id="p2">**</ept> 参数 <bpt id="p3">**</bpt>Get-module<ept id="p3">**</ept> 来获取在 $s 变量的 PSSession 中的模块。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>If you pipe modules from other sessions to the <bpt id="p1">**</bpt>Import-Module<ept id="p1">**</ept> cmdlet, <bpt id="p2">**</bpt>Import-Module<ept id="p2">**</ept> imports the module into the current session by using the implicit remoting feature.</source>
          <target state="translated">如果你通过管道将模块从其他会话 <bpt id="p1">**</bpt>导入模块<ept id="p1">**</ept> cmdlet， <bpt id="p2">**</bpt>导入模块<ept id="p2">**</ept> 将模块导入当前会话，通过使用隐式远程处理功能。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>This is equivalent to using the  Import-PSSession cmdlet.</source>
          <target state="translated">这相当于使用 Import-pssession cmdlet。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>You can use the cmdlets from the module in the current session, but commands that use these cmdlets actually run the remote session.</source>
          <target state="translated">可以在当前会话中使用模块中的 cmdlet，但使用这些 cmdlet 的命令实际在远程会话中运行。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>For more information, see Import-Module and Import-PSSession.</source>
          <target state="translated">有关详细信息，请参阅导入模块和导入 PSSession。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>-------------------------- EXAMPLE 9 --------------------------</source>
          <target state="translated">-------------------------- EXAMPLE 9 --------------------------</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>The commands in this example enable you to manage the storage systems of a remote computer that is not running a Windows operating system.</source>
          <target state="translated">此示例中的命令使你能够管理未运行 Windows 操作系统的远程计算机的存储系统。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>In this example, because the administrator of the computer has installed the Module Discovery WMI provider, the CIM commands can use the default values, which are designed for the provider.</source>
          <target state="translated">在此示例中，由于计算机的管理员已安装模块发现 WMI 提供程序，因此 CIM 命令可以使用专门用于该提供程序的默认值。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>PARAMETERS</source>
          <target state="translated">参数</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>-All</source>
          <target state="translated">-全部</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>Gets all modules in each module folder, including nested modules, manifest (.psd1) files, script module (.psm1) files, and binary module (.dll) files.</source>
          <target state="translated">获取每个模块文件夹中的所有模块，包括嵌套模块、清单 (.psd1) 文件、脚本模块 (.psm1) 文件和二进制模块 (.dll) 文件。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>Without the <bpt id="p1">**</bpt>All<ept id="p1">**</ept> parameter, Get-Module gets only the default module in each module folder.</source>
          <target state="translated">而无需 <bpt id="p1">**</bpt>所有<ept id="p1">**</ept> 参数，Get-module 获取仅默认模块中的每个模块文件夹。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>-CimNamespace</source>
          <target state="translated">-CimNamespace</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>Specifies the namespace of an alternate CIM provider that exposes CIM modules.</source>
          <target state="translated">指定可公开 CIM 模块的备用 CIM 提供程序的命名空间。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>The default value is the namespace of the Module Discovery WMI provider.</source>
          <target state="translated">默认值是模块发现 WMI 提供程序的命名空间。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>Use this parameter to get CIM modules from computers and devices that are not running a Windows operating system.</source>
          <target state="translated">使用此参数从未运行 Windows 操作系统的计算机和设备获取 CIM 模块。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>This parameter is introduced in Windows PowerShell 3.0.</source>
          <target state="translated">此参数是在 Windows PowerShell 3.0 中引入的。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>-CimResourceUri</source>
          <target state="translated">-CimResourceUri</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>Specifies an alternate location for CIM modules.</source>
          <target state="translated">指定 CIM 模块的备用位置。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>The default value is the  resource URI of the Module Discovery WMI provider on the remote computer.</source>
          <target state="translated">默认值是远程计算机上模块发现 WMI 提供程序的资源 URI。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>Use this parameter to get CIM modules from computers and devices that are not running a Windows operating system.</source>
          <target state="translated">使用此参数从未运行 Windows 操作系统的计算机和设备获取 CIM 模块。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>This parameter is introduced in Windows PowerShell 3.0.</source>
          <target state="translated">此参数是在 Windows PowerShell 3.0 中引入的。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>-ListAvailable</source>
          <target state="translated">-ListAvailable</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>Gets all installed modules.</source>
          <target state="translated">获取所有已安装的模块。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Get-Module<ept id="p1">**</ept> gets modules in paths listed in the <bpt id="p2">**</bpt>PSModulePath<ept id="p2">**</ept> environment variable.</source>
          <target state="translated"><bpt id="p1">**</bpt>Get-module<ept id="p1">**</ept> 中列出的路径中获取模块 <bpt id="p2">**</bpt>PSModulePath<ept id="p2">**</ept> 环境变量。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>Without this parameter, <bpt id="p1">**</bpt>Get-Module<ept id="p1">**</ept> gets only the modules that are both listed in the <bpt id="p2">**</bpt>PSModulePath<ept id="p2">**</ept> environment variable, and that are loaded in the current session.</source>
          <target state="translated">如果没有此参数， <bpt id="p1">**</bpt>Get-module<ept id="p1">**</ept> 存在以下两种模块中列出的获取 <bpt id="p2">**</bpt>PSModulePath<ept id="p2">**</ept> 环境变量，并且在当前会话中加载。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>ListAvailable<ept id="p1">**</ept> does not return information about modules that are not found in the <bpt id="p2">**</bpt>PSModulePath<ept id="p2">**</ept> environment variable, even if those modules are loaded in the current session.</source>
          <target state="translated"><bpt id="p1">**</bpt>ListAvailable<ept id="p1">**</ept> 不返回有关模块中找不到的信息 <bpt id="p2">**</bpt>PSModulePath<ept id="p2">**</ept> 环境变量，即使在当前会话中加载这些模块。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>-Name</source>
          <target state="translated">-Name</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>Gets only modules with the specified names or name patterns.</source>
          <target state="translated">只获取具有指定名称或名称模式的模块。</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>Wildcards are permitted.</source>
          <target state="translated">允许使用通配符。</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>You can also pipe the names to <bpt id="p1">**</bpt>Get-Module<ept id="p1">**</ept>.</source>
          <target state="translated">您还可以通过管道名称以适应 <bpt id="p1">**</bpt>Get-module<ept id="p1">**</ept>。</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>-CimSession</source>
          <target state="translated">-CimSession</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>Specifies a CIM session on the remote computer.</source>
          <target state="translated">指定远程计算机上的 CIM 会话。</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>Enter a variable that contains the CIM session or a command that gets the CIM session, such as a Get-CIMSessionhttp://go.microsoft.com/fwlink/?LinkId=227966 command.</source>
          <target state="translated">输入包含 CIM 会话或可获取 CIM 会话，如 Get CIMSessionhttp://go.microsoft.com/fwlink/?LinkId=227966 命令的命令的变量。</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Get-Module<ept id="p1">**</ept> uses the CIM session connection to get modules from the remote computer.</source>
          <target state="translated"><bpt id="p1">**</bpt>Get-module<ept id="p1">**</ept> 使用 CIM 会话连接从远程计算机获取模块。</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>When you import the module (by using the Import-Module cmdlet) and use the commands from the imported module in the current session, the commands actually run on the remote computer.</source>
          <target state="translated">如果您 （通过使用 Import-module cmdlet） 导入模块，并在当前会话中使用导入的模块中的命令，命令实际上在远程计算机上运行。</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>You can use this parameter to get modules from computers and devices that are not running a Windows operating system, and Windows computers that have Windows PowerShell, but do not have Windows PowerShell remoting enabled.</source>
          <target state="translated">通过使用此参数，可从未运行 Windows 操作系统的计算机和设备以及虽然具有 Windows PowerShell 但未启用 Windows PowerShell 远程处理的 Windows 计算机中获取模块。</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>CimSession<ept id="p1">**</ept> parameter gets all modules in the <bpt id="p2">**</bpt>CIMSession<ept id="p2">**</ept>.</source>
          <target state="translated"> <bpt id="p1">**</bpt>CimSession<ept id="p1">**</ept> 参数获取所有模块 <bpt id="p2">**</bpt>CIMSession<ept id="p2">**</ept>。</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>However, you can import only CIM-based and Cmdlet Definition XML (CDXML)-based modules.</source>
          <target state="translated">但是，你只能导入基于 CIM 和基于 Cmdlet 定义 XML (CDXML) 的模块。</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>-PSSession</source>
          <target state="translated">-PSSession</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>Gets the modules in the specified user-managed Windows PowerShell session (PSSession).</source>
          <target state="translated">获取指定的用户托管的 Windows PowerShell 会话 (PSSession) 中的模块。</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>Enter a variable that contains the session, a command that gets the session, such as a Get-PSSession command, or a command that creates the session, such as a New-PSSession command.</source>
          <target state="translated">输入包含会话、 获取会话，例如 Get-pssession 命令的命令或创建该会话，例如 New-pssession 命令的命令的变量。</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>When the session is connected to a remote computer, the <bpt id="p1">**</bpt>ListAvailable<ept id="p1">**</ept> parameter is required.</source>
          <target state="translated">当会话连接到远程计算机， <bpt id="p1">**</bpt>ListAvailable<ept id="p1">**</ept> 参数是必需的。</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">**</bpt>Get-Module<ept id="p1">**</ept> command with the <bpt id="p2">**</bpt>PSSession<ept id="p2">**</ept> parameter is equivalent to using the Invoke-Command cmdlet to run a <bpt id="p3">**</bpt>Get-Module -ListAvailable<ept id="p3">**</ept> command in a PSSession.</source>
          <target state="translated">一个 <bpt id="p1">**</bpt>Get-module<ept id="p1">**</ept> 命令 <bpt id="p2">**</bpt>PSSession<ept id="p2">**</ept> 参数等效于使用 Invoke-command cmdlet 运行 <bpt id="p3">**</bpt>Get-module-ListAvailable<ept id="p3">**</ept> 命令在 PSSession 中。</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>This parameter is introduced in Windows PowerShell 3.0.</source>
          <target state="translated">此参数是在 Windows PowerShell 3.0 中引入的。</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>-Refresh</source>
          <target state="translated">刷新</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>Refreshes the cache of installed commands.</source>
          <target state="translated">刷新已安装命令的缓存。</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>The command cache is created when the session starts.</source>
          <target state="translated">命令缓存是在会话启动时创建的。</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>It enables the Get-Command cmdlet to get commands from modules that are not imported into the session.</source>
          <target state="translated">它使 Get-command cmdlet 来获取命令不导入会话的模块中。</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>This parameter is designed for development and testing scenarios in which the contents of modules have changed since the session started.</source>
          <target state="translated">此参数旨在用于开发和测试方案，在这些方案中，模块的内容自会话启动后已发生更改。</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>When the <bpt id="p1">**</bpt>Refresh<ept id="p1">**</ept> parameter is used in a command, the <bpt id="p2">**</bpt>ListAvailable<ept id="p2">**</ept> parameter is required.</source>
          <target state="translated">当 <bpt id="p1">**</bpt>刷新<ept id="p1">**</ept> 命令中使用参数 <bpt id="p2">**</bpt>ListAvailable<ept id="p2">**</ept> 参数是必需的。</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>This parameter is introduced in Windows PowerShell 3.0.</source>
          <target state="translated">此参数是在 Windows PowerShell 3.0 中引入的。</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>CommonParameters</source>
          <target state="translated">CommonParameters</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutVariable, -OutBuffer, -PipelineVariable, -Verbose, -WarningAction, and -WarningVariable.</source>
          <target state="translated">此 cmdlet 支持以下常见参数:-调试-ErrorAction、-ErrorVariable、-InformationAction、-InformationVariable、-OutVariable、-OutBuffer、-PipelineVariable、-Verbose、-WarningAction 和-WarningVariable。</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>For more information, see about_CommonParameters (http://go.microsoft.com/fwlink/?LinkID=113216).</source>
          <target state="translated">有关详细信息，请参阅 about_CommonParameters (http://go.microsoft.com/fwlink/?LinkID=113216)。</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>INPUTS</source>
          <target state="translated">输入</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>System.String</source>
          <target state="translated">System.String</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>You can pipe module names to <bpt id="p1">**</bpt>Get-Module<ept id="p1">**</ept>.</source>
          <target state="translated">您可以通过管道将模块名称传递给 <bpt id="p1">**</bpt>Get-module<ept id="p1">**</ept>。</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>OUTPUTS</source>
          <target state="translated">输出</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>System.Management.Automation.PSModuleInfo</source>
          <target state="translated">System.Management.Automation.PSModuleInfo</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>Get-Module returns objects that represent modules.</source>
          <target state="translated">Get-Module 将返回表示模块的对象。</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>When you use the <bpt id="p1">**</bpt>ListAvailable<ept id="p1">**</ept> parameter, Get-Module returns a <bpt id="p2">**</bpt>ModuleInfoGrouping<ept id="p2">**</ept> object, which is a type of <bpt id="p3">**</bpt>PSModuleInfo<ept id="p3">**</ept> object that has the same properties and methods.</source>
          <target state="translated">当您使用 <bpt id="p1">**</bpt>ListAvailable<ept id="p1">**</ept> 参数，Get-module 将返回 <bpt id="p2">**</bpt>ModuleInfoGrouping<ept id="p2">**</ept> 对象，它是一种类型的 <bpt id="p3">**</bpt>PSModuleInfo<ept id="p3">**</ept> 具有相同的属性和方法的对象。</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>NOTES</source>
          <target state="translated">说明</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>Beginning in Windows PowerShell 3.0, the core commands that are included in Windows PowerShell are packaged in modules.</source>
          <target state="translated">从 Windows PowerShell 3.0 开始，将 Windows PowerShell 中包含的核心命令打包在模块中。</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>The exception is <bpt id="p1">**</bpt>Microsoft.PowerShell.Core<ept id="p1">**</ept>, which is a snap-in (PSSnapin).</source>
          <target state="translated">例外情况是 <bpt id="p1">**</bpt>Microsoft.PowerShell.Core<ept id="p1">**</ept>, ，这是一个管理单元 (PSSnapin)。</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>By default, only the <bpt id="p1">**</bpt>Microsoft.PowerShell.Core<ept id="p1">**</ept> snap-in is added to the session by default.</source>
          <target state="translated">默认情况下，仅 <bpt id="p1">**</bpt>Microsoft.PowerShell.Core<ept id="p1">**</ept> 管理单元添加到会话默认情况下。</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>Modules are imported automatically on first use and you can use the Import-Module cmdlet to import them.</source>
          <target state="translated">模块自动导入在首次使用并可以使用 Import-module cmdlet 导入它们。</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>Beginning in Windows PowerShell 3.0, the core commands that are installed with Windows PowerShell are packaged in modules.</source>
          <target state="translated">从 Windows PowerShell 3.0 开始，将与 Windows PowerShell 一起安装的核心命令打包在模块中。</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>In Windows PowerShell 2.0, and in host programs that create older-style sessions in later versions of Windows PowerShell, the core commands are packaged in snap-ins ("PSSnapins").</source>
          <target state="translated">在 Windows PowerShell 2.0 中，以及在更高版本的 Windows PowerShell 中创建旧样式会话的托管程序中，将核心命令打包到管理单元中 ("PSSnapins")。</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>The exception is <bpt id="p1">**</bpt>Microsoft.PowerShell.Core<ept id="p1">**</ept>, which is always a snap-in.</source>
          <target state="translated">例外情况是 <bpt id="p1">**</bpt>Microsoft.PowerShell.Core<ept id="p1">**</ept>, ，这始终是管理单元。</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>Also, remote sessions, such as those started by the New-PSSession cmdlet, are older-style sessions that include core snap-ins.</source>
          <target state="translated">此外，远程会话，例如 New-pssession cmdlet 启动是包括核心管理单元的旧样式会话。</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>For information about the <bpt id="p1">**</bpt>CreateDefault2<ept id="p1">**</ept> method that creates newer-style sessions with core modules, see "CreateDefault2 Method" in MSDN at http://msdn.microsoft.com/library/windows/desktop/system.management.automation.runspaces.initialsessionstate.createdefault2(v=VS.85).aspxhttp://msdn.microsoft.com/en-us/library/windows/desktop/system.management.automation.runspaces.initialsessionstate.createdefault2(v=VS.85).aspx.</source>
          <target state="translated">璝惠 <bpt id="p1">**</bpt>CreateDefault2<ept id="p1">**</ept> 方法，可使用核心模块创建较新样式会话查看"CreateDefault2 方法"在 MSDN 中 http://msdn.microsoft.com/library/windows/desktop/system.management.automation.runspaces.initialsessionstate.createdefault2 (v = vs.85).aspxhttp://msdn.microsoft.com/en-us/library/windows/desktop/system.management.automation.runspaces.initialsessionstate.createdefault2 (v=VS.85).aspx。</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Get-Module<ept id="p1">**</ept> only gets modules in locations that are stored in the value of the <bpt id="p2">**</bpt>PSModulePath<ept id="p2">**</ept> environment variable ($env:PSModulePath).</source>
          <target state="translated"><bpt id="p1">**</bpt>Get-module<ept id="p1">**</ept> 只在存储的值中的位置获取模块 <bpt id="p2">**</bpt>PSModulePath<ept id="p2">**</ept> 环境变量 ($env: PSModulePath)。</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>You can use the <bpt id="p1">**</bpt>Path<ept id="p1">**</ept> parameter of the Import-Module cmdlet to import modules in other locations, but you cannot use the <bpt id="p2">**</bpt>Get-Module<ept id="p2">**</ept> cmdlet to get them.</source>
          <target state="translated">您可以使用 <bpt id="p1">**</bpt>路径<ept id="p1">**</ept> 参数导入模块 cmdlet 来导入的模块中其他位置，但是您不能使用 <bpt id="p2">**</bpt>Get-module<ept id="p2">**</ept> cmdlet 来获取它们。</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>Also, beginning in Windows PowerShell 3.0, new properties have been added to the object that <bpt id="p1">**</bpt>Get-Module<ept id="p1">**</ept> returns that make it easier to learn about modules even before they are imported.</source>
          <target state="translated">此外，从 Windows PowerShell 3.0 开始，新的属性具有已添加到对象的 <bpt id="p1">**</bpt>Get-module<ept id="p1">**</ept> 更加轻松地了解模块，即使它们被导入之前返回。</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>All properties are populated before importing, including the <bpt id="p1">**</bpt>ExportedCommands<ept id="p1">**</ept>, <bpt id="p2">**</bpt>ExportedCmdlets<ept id="p2">**</ept> and <bpt id="p3">**</bpt>ExportedFunctions<ept id="p3">**</ept> properties that list the commands that the module exports.</source>
          <target state="translated">所有属性进行都填充导之前，包括 <bpt id="p1">**</bpt>ExportedCommands<ept id="p1">**</ept>, ，<bpt id="p2">**</bpt>ExportedCmdlets<ept id="p2">**</ept> 和 <bpt id="p3">**</bpt>ExportedFunctions<ept id="p3">**</ept> 列出模块导出的命令的属性。</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>ListAvailable<ept id="p1">**</ept> parameter gets only well-formed modules, that is, folders that contain at least one file whose base name (the name without the file name extension) is the same as the name of the module folder.</source>
          <target state="translated"> <bpt id="p1">**</bpt>ListAvailable<ept id="p1">**</ept> 参数只获取格式正确的模块，即，文件夹，其中包含至少一个文件其基名称 （不带文件扩展名的名称） 是与模块文件夹的名称相同。</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>Folders that contain files with different names are considered to be containers, but not modules.</source>
          <target state="translated">将包含名称不同的文件的文件夹视为容器，而不是模块。</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source>To get modules that are implemented as .dll files, but are not enclosed in a module folder, use both the <bpt id="p1">**</bpt>ListAvailable<ept id="p1">**</ept> and <bpt id="p2">**</bpt>All<ept id="p2">**</ept> parameters.</source>
          <target state="translated">若要获取作为.dll 文件，而实现，但没有包含在模块文件夹的模块，请同时使用 <bpt id="p1">**</bpt>ListAvailable<ept id="p1">**</ept> 和 <bpt id="p2">**</bpt>所有<ept id="p2">**</ept> 参数。</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source>To use the CIM session feature, the remote computer must have WS-Management remoting and Windows Management Instrumentation (WMI), which is the Microsoft implementation of the Common Information Model (CIM) standard.</source>
          <target state="translated">若要使用 CIM 会话功能，远程计算机必须具有 WS-Management 远程处理和 Windows Management Instrumentation (WMI)，后者是通用信息模型 (CIM) 标准的 Microsoft 实现。</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source>The computer must also have the Module Discovery WMI provider or an alternate WMI provider that has the same basic features.</source>
          <target state="translated">计算机必须还具有模块发现 WMI 提供程序或具有相同基本功能的备用 WMI 提供程序。</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source>You can use the CIM session feature on computers that are not running a Windows operating system and on Windows computers that have Windows PowerShell, but do not have Windows PowerShell remoting enabled.</source>
          <target state="translated">你可以在未运行 Windows 操作系统的计算机上，以及具有 Windows PowerShell，但未启用 Windows PowerShell 远程处理的 Windows 计算机上使用 CIM 会话功能。</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source>You can also use the CIM parameters to get CIM modules from computers that have Windows PowerShell remoting enabled, including the local computer.</source>
          <target state="translated">你还可以使用 CIM 参数从已启用 Windows PowerShell 远程处理的计算机（包括本地计算机）中获取 CIM 模块。</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source>When you create a CIM session on the local computer, Windows PowerShell uses DCOM, instead of WMI, to create the session.</source>
          <target state="translated">在本地计算机上创建 CIM 会话时，Windows PowerShell 使用 DCOM，而不是 WMI 来创建会话。</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve">
          <source>RELATED LINKS</source>
          <target state="translated">相关的链接</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source>Get-CimSession</source>
          <target state="translated">Get-CimSession</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source>New-CimSession</source>
          <target state="translated">New-CimSession</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source>about_Modules</source>
          <target state="translated">about_Modules</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve">
          <source>Get-PSSession</source>
          <target state="translated">Get-pssession</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve">
          <source>Import-Module</source>
          <target state="translated">Import-Module</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve">
          <source>Import-PSSession</source>
          <target state="translated">Import-PSSession</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve">
          <source>New-PSSession</source>
          <target state="translated">New-PSSession</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve">
          <source>Remove-Module</source>
          <target state="translated">Remove-Module</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>