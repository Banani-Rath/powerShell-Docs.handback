<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="md" source-language="en-US" target-language="zh-cn">
    <header>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">3a0ad4ab86a570279e8ebdec35edb9dafc69e9bf</xliffext:olfilehash>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-02a95cf" tool-company="Microsoft" />
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Setting up a DSC web pull server</source>
          <target state="translated">设置 DSC Web 请求服务器</target>         
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Applies To: Windows PowerShell 5.0</source>
          <target state="translated">适用于：Windows PowerShell 5.0</target>         
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>A DSC web pull server is a web service in IIS that uses an OData interface to make DSC configuration files available to target nodes when those nodes ask for them.</source>
          <target state="translated">DSC Web 请求服务器是 IIS 中的一项 Web 服务，当目标节点请求 DSC 配置文件时，此服务通过 OData 接口向这些节点提供它们。</target>         
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Requirements for using a pull server:</source>
          <target state="translated">使用请求服务器的要求：</target>         
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>A server running:</source>
          <target state="translated">运行的服务器：</target>         
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>WMF/PowerShell 5.0 or greater</source>
          <target state="translated">WMF/PowerShell 5.0 或更高版本</target>         
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>IIS server role</source>
          <target state="translated">IIS 服务器角色</target>         
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>DSC Service</source>
          <target state="translated">DSC 服务</target>         
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Ideally, some means of generating a certificate, to secure credentials passed to the Local Configuration Manager (LCM) on target nodes</source>
          <target state="translated">理想情况下，可通过某些方式生成证书，以便保护传递给目标节点上本地配置管理器 (LCM) 的凭据</target>         
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>You can add the IIS server role and DSC Service with the Add Roles and Features wizard in Server Manager, or by using PowerShell.</source>
          <target state="translated">可使用服务器管理器中的添加角色和功能向导或使用 PowerShell 来添加 IIS 服务器角色和 DSC 服务。</target>         
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>The sample scripts included in this topic will handle both of these steps for you as well.</source>
          <target state="translated">本主题中包含的示例脚本将为你提供这两种方法的步骤。</target>         
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Using the xWebService resource</source>
          <target state="translated">使用 xWebService 资源</target>         
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>The easiest way to set up a web pull server is to use the xWebService resource, included in the xPSDesiredStateConfiguration module.</source>
          <target state="translated">设置 Web 请求服务器的最简单方法是使用包含在 xPSDesiredStateConfiguration 模块中的 xWebService 资源。</target>         
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>The following steps explain how to use the resource in a configuration that sets up the web service.</source>
          <target state="translated">下列步骤说明如何使用设置 Web 服务的配置中的资源。</target>         
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Call the <g id="p1" mdpre="[" mdpost="](https://technet.microsoft.com/en-us/library/dn807162.aspx)">Install-Module</g> cmdlet to install the <g id="p2" mdpre="**" mdpost="**">xPSDesiredStateConfiguration</g> module.</source>
          <target state="translated">调用 <g id="p1" mdpre="[" mdpost="](https://technet.microsoft.com/en-us/library/dn807162.aspx)">Install-Module</g> 以安装 <g id="p2" mdpre="**" mdpost="**">xPSDesiredStateConfiguration</g> 模块。</target>         
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source><g id="p1" mdpre="**" mdpost="**">Note</g>: <g id="p2" mdpre="**" mdpost="**">Install-Module</g> is included in the <g id="p3" mdpre="**" mdpost="**">PowerShellGet</g> module, which is included in PowerShell 5.0.</source>
          <target state="translated"><g id="p1" mdpre="**" mdpost="**">注意</g>：<g id="p2" mdpre="**" mdpost="**">Install-Module</g> 包含在 <g id="p3" mdpre="**" mdpost="**">PowerShellGet</g> 模块中，后者纳入 PowerShell 5.0。</target>         
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>You can download the <g id="p1" mdpre="**" mdpost="**">PowerShellGet</g> module for PowerShell 3.0 and 4.0 at <g id="p2" mdpre="[" mdpost="](https://www.microsoft.com/en-us/download/details.aspx?id=49186)">PackageManagement PowerShell Modules Preview</g>.</source>
          <target state="translated">可在 <g id="p2" mdpre="[" mdpost="](https://www.microsoft.com/en-us/download/details.aspx?id=49186)">PackageManagement PowerShell 模块预览</g>中下载适用于 PowerShell 3.0 和 4.0 的 <g id="p1" mdpre="**" mdpost="**">PowerShellGet</g>。</target>         
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Get an SSL certificate for the DSC Pull server from a trusted Certificate Authority, either within your orgnaization or a public authority.</source>
          <target state="translated">从受信任的证书颁发机构（在你的组织或公共颁发机构中）获取 DSC 请求服务器的 SSL 证书。</target>         
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>The certificate recieved from the authority is usually in the PFX format.</source>
          <target state="translated">从颁发机构收到的证书通常采用 PFX 格式。</target>         
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Install the certificate on the node that will become the DSC Pull server in the default location which should be CERT:\LocalMachine\My.</source>
          <target state="translated">采用默认位置（应是 CERT:\LocalMachine\My），在将成为请求服务器的节点上安装证书。</target>         
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Make a note of the certificate thumbprint.</source>
          <target state="translated">记下证书指纹。</target>         
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Select a GUID to be used as the Registration Key.</source>
          <target state="translated">选择要用作注册密钥的 GUID。</target>         
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>To generate one using PowerShell enter the following at the PS prompt and press enter: '<ph id="ph1">``` [guid]::newGuid()```</ph>'.</source>
          <target state="translated">若要使用 PowerShell 生成一个，请在 PS 提示符处输入以下内容令，然后按 Enter：“<ph id="ph1">``` [guid]::newGuid()```</ph>”。</target>         
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>This key will be used by client nodes as a shared key to authenticate during registration.</source>
          <target state="translated">此密钥将由客户端节点用作共享密钥，以便在注册过程中进行身份验证。</target>         
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>For more information see <g id="p1" mdpre="[" mdpost="](#RegKey)">Registration Key</g> section below.</source>
          <target state="translated">有关详细信息，请参阅下面的<g id="p1" mdpre="[" mdpost="](#RegKey)">注册密钥</g>部分。</target>         
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>In the PowerShell ISE, start (F5) the following configuration script (included in the Example folder of the  <g id="p1" mdpre="**" mdpost="**">xPSDesiredStateConfiguration</g> module as Sample_xDscWebService.ps1).</source>
          <target state="translated">在 PowerShell ISE 中，启动 (F5) 以下配置脚本（包含于 <g id="p1" mdpre="**" mdpost="**">xPSDesiredStateConfiguration</g> 模块的示例文件夹中，名为 Sample_xDscWebService.ps1）。</target>         
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>This script sets up the pull server.</source>
          <target state="translated">此脚本会设置请求服务器。</target>         
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Run the configuration, passing the thumbprint of the SSL certificate as the <g id="p1" mdpre="**" mdpost="**">certificateThumbPrint</g> parameter and a GUID registration key as the <g id="p2" mdpre="**" mdpost="**">RegistrationKey</g> parameter:</source>
          <target state="translated">运行配置，将 SSL 证书的指纹作为 <g id="p1" mdpre="**" mdpost="**">certificateThumbPrint</g> 参数进行传递，并将 GUID 注册密钥作为 <g id="p2" mdpre="**" mdpost="**">RegistrationKey</g> 参数进行传递：</target>         
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Registration Key</source>
          <target state="translated">注册密钥</target>         
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>To allow client nodes to register with the server so that they can use configuration names instead of a configuration ID, a registration key which was created by the above configuration is saved in a file named <ph id="ph1">`RegistrationKeys.txt`</ph> in <ph id="ph2">`C:\Program Files\WindowsPowerShell\DscService`</ph>.</source>
          <target state="translated">若要允许客户端节点注册到服务器以便使用配置名称代替配置 ID，需将以上配置创建的注册密钥保存在 <ph id="ph2">`C:\Program Files\WindowsPowerShell\DscService`</ph> 中名为 <ph id="ph1">`RegistrationKeys.txt`</ph> 的文件中。</target>         
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>The registration key functions as a shared secret used during the initial registration by the client with the pull server.</source>
          <target state="translated">注册密钥会在初始注册过程中充当由客户端用于请求服务器的共享密钥。</target>         
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>The client will generate a self-signed certificate which is used to uniquely authenticate to the pull server once registration is successfully completed.</source>
          <target state="translated">注册成功完成之后，客户端会生成用于唯一地向请求服务器进行身份验证的自签名证书。</target>         
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>The thumbprint of the this certificate is stored locally and associated with the URL of the pull server.</source>
          <target state="translated">此证书的指纹在本地进行存储，并与请求服务器的 URL 关联。</target>         
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source><g id="p1" mdpre="**" mdpost="**">Note</g>: Registration keys are not supported in PowerShell 4.0.</source>
          <target state="translated"><g id="p1" mdpre="**" mdpost="**">注意</g>：PowerShell 4.0 中不支持注册密钥。</target>         
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>In order to configure the a node to authenticate with the pull server the registration key needs to be in the metaconfiguration for any target node that will be registering with this pull server.</source>
          <target state="translated">为了配置节点以便向请求服务器进行身份验证，注册密钥需要处于将向此请求服务器注册的任何目标节点的元配置中。</target>         
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Note that the <g id="p1" mdpre="**" mdpost="**">RegistrationKey</g> in the metaconfiguration below is removed after the target machine has successfully registered, and that the value '140a952b-b9d6-406b-b416-e0f759c9c0e4' must match the value stored in the RegistrationKeys.txt file on the pull server.</source>
          <target state="translated">请注意，以下元配置中的 <g id="p1" mdpre="**" mdpost="**">RegistrationKey</g> 会在目标计算机成功注册之后删除，并且值“140a952b-b9d6-406b-b416-e0f759c9c0e4”必须与请求服务器上的 RegistrationKeys.txt 文件中存储的值匹配。</target>         
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Always treat the registration key value securely, because knowing it allows any target machine to register with the pull server.</source>
          <target state="translated">请始终安全地处理注册密钥值，因为知道它便可以向请求服务器注册任何目标计算机。</target>         
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source><g id="p1" mdpre="**" mdpost="**">Note</g>: The <g id="p2" mdpre="**" mdpost="**">ReportServerWeb</g> section allows reporting data to be sent to the pull server.</source>
          <target state="translated"><g id="p1" mdpre="**" mdpost="**">注意</g>：<g id="p2" mdpre="**" mdpost="**">ReportServerWeb</g> 部分允许将报表数据发送到请求服务器。</target>         
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>The lack of the <g id="p1" mdpre="**" mdpost="**">ConfigurationID</g> property in the metaconfiguration file implicitly means that pull server is supporting the V2 version of the pull server protocol so an initial registration is required.</source>
          <target state="translated">元配置文件中缺少 <g id="p1" mdpre="**" mdpost="**">ConfigurationID</g> 属性暗示请求服务器支持 V2 版本的请求服务器协议，因此需要初始注册。</target>         
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Conversely, the presents of a <g id="p1" mdpre="**" mdpost="**">ConfigurationID</g> means that the V1 version of the pull server protocol is used and there is no registration processing.</source>
          <target state="translated">相反，存在 <g id="p1" mdpre="**" mdpost="**">ConfigurationID</g> 意味着使用 V1 版本的请求服务器协议，不会进行注册处理。</target>         
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source><g id="p1" mdpre="**" mdpost="**">Note</g>: In a PUSH scenario, a bug exists in the current relase that makes it necessary to define a ConfigurationID property in the metaconfiguration file for nodes that have never registered with a pull server.</source>
          <target state="translated"><g id="p1" mdpre="**" mdpost="**">注意</g>：在推送方案中，当前版本中存在一个 bug，因此需要在元配置文件中为绝不会向请求服务器注册的节点定义 ConfigurationID 属性。</target>         
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>This will force the V1 Pull Server protocol and avoid registration failure messages.</source>
          <target state="translated">这会强制使用 V1 请求服务器协议，避免注册失败消息。</target>         
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Placing configurations and resources</source>
          <target state="translated">放置配置和资源</target>         
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>After the pull server setup completes, the folders defined by the <g id="p1" mdpre="**" mdpost="**">ConfigurationPath</g> and <g id="p2" mdpre="**" mdpost="**">ModulePath</g> properties in the pull server configuration are where you will place modules and configurations that will be available for target nodes to pull.</source>
          <target state="translated">请求服务器设置完成之后，在请求服务器配置中通过 <g id="p1" mdpre="**" mdpost="**">ConfigurationPath</g> 和 <g id="p2" mdpre="**" mdpost="**">ModulePath</g> 属性定义的文件夹是用于放置可供目标节点请求的模块和配置的位置。</target>         
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>These files need to be in a specific format in order for the pull server to correctly process them.</source>
          <target state="translated">这些文件需要采用特定格式，以便请求服务器可正确处理它们。</target>         
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>DSC resource module package format</source>
          <target state="translated">DSC 资源模块程序包格式</target>         
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Each resource module needs to be zipped and named according the the following pattern <g id="p1" mdpre="**" mdpost="**">{Module Name}_{Module Version}.zip</g>.</source>
          <target state="translated">每个资源模块需要进行压缩并按照以下模式 <g id="p1" mdpre="**" mdpost="**">{模块名称}_{模块版本}.zip</g> 进行命名。</target>         
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>For example, a module named xWebAdminstration with a module version of 3.1.2.0 would be named 'xWebAdministration_3.2.1.0.zip'.</source>
          <target state="translated">例如，一个名为 xWebAdminstration 并且模块版本为 3.1.2.0 的模块会命名为“xWebAdministration_3.2.1.0.zip”。</target>         
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Each version of a module must be contained in a single zip file.</source>
          <target state="translated">每个版本的模块都必须包含在单个 zip 文件中。</target>         
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Since there is only a single version of a resource in each zip file the module format added in WMF 5.0 with support for multiple module versions in a single directory is not supported.</source>
          <target state="translated">由于每个 zip 文件中只有单个版本的资源，因此不支持在 WMF 5.0 中添加的可在单个目录中支持多个模块版本的模块格式。</target>         
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>This means that before packaging up DSC resource modules for use with pull server you will need to make a small change to the directory structure.</source>
          <target state="translated">这意味着在打包 DSC 资源模块以便用于请求服务器之前，需要对目录结构进行少量更改。</target>         
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>The default format of modules containing DSC resource in WMF 5.0 is '{Module Folder}\{Module Version}\DscResources\{DSC Resource Folder}\'.</source>
          <target state="translated">WMF 5.0 中包含 DSC 资源的模块的默认格式是“{模块文件夹}\{模块版本}\DscResources\{DSC 资源文件夹}\”。</target>         
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Before packaging up for the pull server simply remove the <g id="p1" mdpre="**" mdpost="**">{Module version}</g> folder so the path becomes '{Module Folder}\DscResources\{DSC Resource Folder}\'.</source>
          <target state="translated">为请求服务器进行打包之前，只需删除 <g id="p1" mdpre="**" mdpost="**">{模块版本}</g> 文件夹，以便路径成为“{模块文件夹}\DscResources\{DSC 资源文件夹}\”。</target>         
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>With this change, zip the folder as described above and place these zip files in the <g id="p1" mdpre="**" mdpost="**">ModulePath</g> folder.</source>
          <target state="translated">进行此更改之后，按上文所述压缩文件夹，并将这些 zip 文件置于 <g id="p1" mdpre="**" mdpost="**">ModulePath</g> 文件夹中。</target>         
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Configuration MOF format</source>
          <target state="translated">配置 MOF 格式</target>         
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>A configuration MOF file needs to be paired with a checksum file so that an LCM on a target node can validate the configuration.</source>
          <target state="translated">配置 MOF 文件需要与校验和文件配对，以使目标节点上的 LCM 可以验证配置。</target>         
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>To create a checksum, call the <g id="p1" mdpre="[" mdpost="](https://technet.microsoft.com/en-us/library/dn521622.aspx)">New-DSCCheckSum</g> cmdlet.</source>
          <target state="translated">若要创建校验和，请调用 <g id="p1" mdpre="[" mdpost="](https://technet.microsoft.com/en-us/library/dn521622.aspx)">New-DSCCheckSum</g> cmdlet。</target>         
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>The cmdlet takes a <g id="p1" mdpre="**" mdpost="**">Path</g> parameter that specifies the folder where the configuration MOF is located.</source>
          <target state="translated">该 cmdlet 将接受 <g id="p1" mdpre="**" mdpost="**">Path</g> 参数，该参数指定了配置 MOF 所在的文件夹。</target>         
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>The cmdlet creates a checksum file named <ph id="ph1">`ConfigurationMOFName.mof.checksum`</ph>, where <ph id="ph2">`ConfigurationMOFName`</ph> is the name of the configuration mof file.</source>
          <target state="translated">该 cmdlet 将创建名为 <ph id="ph1">`ConfigurationMOFName.mof.checksum`</ph> 的校验和文件，其中 <ph id="ph2">`ConfigurationMOFName`</ph> 是配置 mof 文件的名称。</target>         
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>If there are more than one configuration MOF files in the specified folder, a checksum is created for each configuration in the folder.</source>
          <target state="translated">如果指定文件夹中存在多个配置 MOF 文件，则将为该文件夹中的每个配置分别创建校验和。</target>         
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>Place the MOF files and their associated checksum files in the the <g id="p1" mdpre="**" mdpost="**">ConfigurationPath</g> folder.</source>
          <target state="translated">将 MOF 文件及其关联校验和文件置于 <g id="p1" mdpre="**" mdpost="**">ConfigurationPath</g> 文件夹中。</target>         
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source><g id="p1" mdpre="**" mdpost="**">Note</g>: If you change the configuration MOF file in any way, you must also recreate the checksum file.</source>
          <target state="translated"><g id="p1" mdpre="**" mdpost="**">注意</g>：如果以任何方式更改配置 MOF 文件，则也必须重新创建校验和文件。</target>         
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>Tooling</source>
          <target state="translated">工具</target>         
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>In order to make setting up, validating and managing the pull server easier, the following tools are included as examples in the latest version of the xPSDesiredStateConfiguration module:</source>
          <target state="translated">为了使请求服务器的设置、验证和管理更加容易，以下工具作为示例包含在最新版本的 xPSDesiredStateConfiguration 模块中：</target>         
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>A module that will help with packaging DSC resource modules and configuration files for use on the pull server.</source>
          <target state="translated">该模块有助于打包 DSC 资源模块和配置文件以便在请求服务器上使用。</target>         
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source><g id="p1" mdpre="[" mdpost="](https://github.com/PowerShell/xPSDesiredStateConfiguration/blob/dev/DSCPullServerSetup/PublishModulesAndMofsToPullServer.psm1)">PublishModulesAndMofsToPullServer.psm1</g>.</source>
          <target state="translated"><g id="p1" mdpre="[" mdpost="](https://github.com/PowerShell/xPSDesiredStateConfiguration/blob/dev/DSCPullServerSetup/PublishModulesAndMofsToPullServer.psm1)">PublishModulesAndMofsToPullServer.psm1</g>。</target>         
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>Examples below:</source>
          <target state="translated">以下示例：</target>         
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>A script that validates the Pull Server is configured correctly.</source>
          <target state="translated">验证请求服务器是否配置正确的脚本。</target>         
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source><g id="p1" mdpre="[" mdpost="](https://github.com/PowerShell/xPSDesiredStateConfiguration/blob/dev/Examples/PullServerDeploymentVerificationTest/PullServerSetupTests.ps1)">PullServerSetupTests.ps1</g>.</source>
          <target state="translated"><g id="p1" mdpre="[" mdpost="](https://github.com/PowerShell/xPSDesiredStateConfiguration/blob/dev/Examples/PullServerDeploymentVerificationTest/PullServerSetupTests.ps1)">PullServerSetupTests.ps1</g>。</target>         
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>Pull client configuration</source>
          <target state="translated">请求客户端配置</target>         
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>The following topics describe setting up pull clients in detail:</source>
          <target state="translated">以下主题详细描述了如何设置请求客户端：</target>         
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>Setting up a DSC pull client using a configuration ID</source>
          <target state="translated">使用配置 ID 设置 DSC 请求客户端</target>         
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>Setting up a DSC pull client using configuration names</source>
          <target state="translated">使用配置名称设置 DSC 请求客户端</target>         
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>Partial configurations</source>
          <target state="translated">部分配置</target>         
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>See also</source>
          <target state="translated">另请参阅</target>         
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>Windows PowerShell Desired State Configuration Overview</source>
          <target state="translated">Windows PowerShell Desired State Configuration 概述</target>         
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>Enacting configurations</source>
          <target state="translated">执行配置</target>         
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>How to retrieve node information from DSC pull server</source>
          <target state="translated">如何从 DSC 请求服务器检索节点信息</target>         
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>