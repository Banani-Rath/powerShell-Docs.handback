<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="pt-br">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-1c394fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">dac5b4f8c6a2b76686abf540c95c5b0ed8655f92</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">reference\3.0\Microsoft.PowerShell.Core\ForEach-Object.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions" />
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">3e25c5fe0d6d7cf344e33a623fe23b8167703d8a</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">b9a1c6a7bbc98b6b2292765ead534353a51657c4</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>powershell, cmdlet</source>
          <target state="translated">PowerShell, cmdlet</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>ForEach-Object</source>
          <target state="translated">ForEach-Object</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>ForEach-Object</source>
          <target state="translated">ForEach-Object</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>SYNOPSIS</source>
          <target state="translated">SINOPSE</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Performs an operation against each item in a collection of input objects.</source>
          <target state="translated">Executa uma operação em cada item de uma coleção de objetos de entrada.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>SYNTAX</source>
          <target state="translated">SINTAXE</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>ScriptBlockSet (Default)</source>
          <target state="translated">ScriptBlockSet (padrão)</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>PropertyAndMethodSet</source>
          <target state="translated">PropertyAndMethodSet</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>DESCRIPTION</source>
          <target state="translated">DESCRIÇÃO</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>ForEach-Object<ept id="p1">**</ept> cmdlet performs an operation on each item in a collection of input objects.</source>
          <target state="translated">O <bpt id="p1">**</bpt>ForEach-Object<ept id="p1">**</ept> cmdlet executa uma operação em cada item em uma coleção de objetos de entrada.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>The input objects can be piped to the cmdlet or specified by using the InputObject parameter.</source>
          <target state="translated">Os objetos de entrada podem ser redirecionados para o cmdlet ou especificados usando o parâmetro InputObject.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Beginning in Windows PowerShell 3.0, there are two different ways to construct a  <bpt id="p1">**</bpt>ForEach-Object<ept id="p1">**</ept> command.</source>
          <target state="translated">Começando no Windows PowerShell 3.0, há duas maneiras diferentes para construir um  <bpt id="p1">**</bpt>ForEach-Object<ept id="p1">**</ept> comando.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Script block<ept id="p1">**</ept>.</source>
          <target state="translated"><bpt id="p1">**</bpt>Bloco de script<ept id="p1">**</ept>.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>You can use a script block to specify the operation.</source>
          <target state="translated">Você pode usar um bloco de script para especificar a operação.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Within the script block, use the $_ variable to represent the current object.</source>
          <target state="translated">Dentro do bloco de script, use a variável $_ para representar o objeto atual.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>The script block is the value of the <bpt id="p1">**</bpt>Process<ept id="p1">**</ept> parameter.</source>
          <target state="translated">O bloco de script é o valor de <bpt id="p1">**</bpt>processo<ept id="p1">**</ept> parâmetro.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>The script block can contain any Windows PowerShell script.</source>
          <target state="translated">O bloco de script pode conter qualquer script do Windows PowerShell.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>For example, the following command gets the value of the <bpt id="p1">**</bpt>ProcessName<ept id="p1">**</ept> property of each process on the computer.</source>
          <target state="translated">Por exemplo, o comando a seguir obtém o valor de <bpt id="p1">**</bpt>ProcessName<ept id="p1">**</ept> propriedade de cada processo no computador.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Operation statement<ept id="p1">**</ept>.</source>
          <target state="translated"><bpt id="p1">**</bpt>Instrução de operação<ept id="p1">**</ept>.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>You can also write a operation statement, which is much more like natural language.</source>
          <target state="translated">Você também pode escrever uma instrução de operação, que é muito mais semelhante à linguagem natural.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>You can use the operation statement to specify a property value or call a method.</source>
          <target state="translated">Você pode usar a instrução de operação para especificar um valor de propriedade ou chamar um método.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Operation statements were introduced in Windows PowerShell 3.0.</source>
          <target state="translated">Instruções de operação foram introduzidas no Windows PowerShell 3.0.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>For example, the following command also gets the value of the <bpt id="p1">**</bpt>ProcessName<ept id="p1">**</ept> property of each process on the computer.</source>
          <target state="translated">Por exemplo, o comando a seguir também obtém o valor de <bpt id="p1">**</bpt>ProcessName<ept id="p1">**</ept> propriedade de cada processo no computador.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>When using the script block format, in addition to using the script block that describes the operations that are performed on each input object, you can provide two additional script blocks.</source>
          <target state="translated">Ao usar o formato de bloco de script, além de usar o bloco de script que descreve as operações que são executadas em cada objeto de entrada, você pode fornecer dois blocos de script adicionais.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>The Begin script block, which is the value of the <bpt id="p1">**</bpt>Begin<ept id="p1">**</ept> parameter, runs before the first input object is processed.</source>
          <target state="translated">O bloco de scripts Begin, que é o valor da <bpt id="p1">**</bpt>começar<ept id="p1">**</ept> parâmetro, é executado antes do primeiro objeto de entrada é processado.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>The End script block, which is the value of the <bpt id="p1">**</bpt>End<ept id="p1">**</ept> parameter, runs after the last input object is processed.</source>
          <target state="translated">O bloco de scripts End, que é o valor da <bpt id="p1">**</bpt>final<ept id="p1">**</ept> parâmetro, é executado após o último objeto de entrada é processado.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>EXAMPLES</source>
          <target state="translated">EXEMPLOS</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>-------------------------- EXAMPLE 1 --------------------------</source>
          <target state="translated">------------------------- EXEMPLO 1 --------------------------</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>This command takes an array of three integers and divides each one of them by 1024.</source>
          <target state="translated">Este comando pega uma matriz de três inteiros e divide cada um deles por 1024.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>-------------------------- EXAMPLE 2 --------------------------</source>
          <target state="translated">-------------------------- EXAMPLE 2 --------------------------</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>This command gets the files and directories in the Windows PowerShell installation directory ($pshome) and passes them to the ForEach-Object cmdlet.</source>
          <target state="translated">Este comando obtém os arquivos e diretórios do diretório de instalação do Windows PowerShell ($pshome) e os transfere para o cmdlet ForEach-Object.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>If the object is not a directory (the value of the PSISContainer property is false), the script block gets the name of the file, divides the value of its Length property by 1024, and adds a space ("") to separate it from the next entry.</source>
          <target state="translated">Se o objeto não for um diretório (se o valor da propriedade PSISContainer for false), o bloco de script obtém o nome do arquivo, divide o valor de sua propriedade Length por 1024 e adiciona um espaço ("") para separá-lo da entrada seguinte.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>-------------------------- EXAMPLE 3 --------------------------</source>
          <target state="translated">-------------------------- EXAMPLE 3 --------------------------</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>This command gets the 1000 most recent events from the System event log and stores them in the $Events variable.</source>
          <target state="translated">Este comando obtém os 1.000 eventos mais recentes do log de eventos do Sistema e os armazena na variável $Events.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>It then pipes the events to the <bpt id="p1">**</bpt>ForEach-Object<ept id="p1">**</ept> cmdlet.</source>
          <target state="translated">Ele canaliza os eventos para o <bpt id="p1">**</bpt>ForEach-Object<ept id="p1">**</ept> cmdlet.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>Begin<ept id="p1">**</ept> parameter displays the current date and time.</source>
          <target state="translated">O <bpt id="p1">**</bpt>começar<ept id="p1">**</ept> parâmetro exibe a data e hora atuais.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Next, the <bpt id="p1">**</bpt>Process<ept id="p1">**</ept> parameter uses the <bpt id="p2">**</bpt>Out-File<ept id="p2">**</ept> cmdlet to create a text file named events.txt and stores the message property of each of the events in that file.</source>
          <target state="translated">Em seguida, o <bpt id="p1">**</bpt>processo<ept id="p1">**</ept> parâmetro usa o <bpt id="p2">**</bpt>out-File<ept id="p2">**</ept> para criar um arquivo de texto chamado Events e armazena a propriedade message de cada um dos eventos nesse arquivo.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Last, the <bpt id="p1">**</bpt>End<ept id="p1">**</ept> parameter is used to display the date and time after all of the processing has completed.</source>
          <target state="translated">Finalmente, o <bpt id="p1">**</bpt>final<ept id="p1">**</ept> parâmetro é usado para exibir a data e hora Afinal de contas do processamento foi concluído.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>-------------------------- EXAMPLE 4 --------------------------</source>
          <target state="translated">-------------------------- EXAMPLE 4 --------------------------</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>This command changes the value of the <bpt id="p1">**</bpt>RemotePath<ept id="p1">**</ept> registry entry in all of the subkeys under the HKCU:\Network key to uppercase text.</source>
          <target state="translated">Esse comando altera o valor de <bpt id="p1">**</bpt>RemotePath<ept id="p1">**</ept> entrada do registro em todas as subchaves da chave HKCU: \ Network para texto em maiusculas.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>You can use this format to change the form or content of a registry entry value.</source>
          <target state="translated">Você pode usar esse formato para alterar a forma ou o conteúdo de um valor de entrada de registro.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Each subkey in the <bpt id="p1">**</bpt>Network<ept id="p1">**</ept> key represents a mapped network drive that will reconnect at logon.</source>
          <target state="translated">Cada subchave no <bpt id="p1">**</bpt>rede<ept id="p1">**</ept> chave representa uma unidade de rede mapeada que será reconectada ao efetuar logon.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>RemotePath<ept id="p1">**</ept> entry contains the UNC path of the connected drive.</source>
          <target state="translated">O <bpt id="p1">**</bpt>RemotePath<ept id="p1">**</ept> entrada contém o caminho UNC da unidade conectada.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>For example, if you map the E: drive to <ph id="ph1">\\\\</ph>Server\Share, there will be an E subkey of HKCU:\Network and the value of the <bpt id="p1">**</bpt>RemotePath<ept id="p1">**</ept> registry entry in the E subkey will be <ph id="ph2">\\\\</ph>Server\Share.</source>
          <target state="translated">Por exemplo, se você mapear a unidade e: para <ph id="ph1">\\\\</ph>servidor\compartilhamento, haverá uma subchave E de HKCU: \ Network e o valor de <bpt id="p1">**</bpt>RemotePath<ept id="p1">**</ept> entrada do registro na subchave E será <ph id="ph2">\\\\</ph>servidor\compartilhamento.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>The command uses the Get-ItemProperty cmdlet to get all of the subkeys of the <bpt id="p1">**</bpt>Network<ept id="p1">**</ept> key and the Set-ItemProperty cmdlet to change the value of the <bpt id="p2">**</bpt>RemotePath<ept id="p2">**</ept> registry entry in each key.</source>
          <target state="translated">O comando usa o cmdlet Get-ItemProperty para obter todas as subchaves do <bpt id="p1">**</bpt>rede<ept id="p1">**</ept> chave e o cmdlet Set-ItemProperty para alterar o valor da <bpt id="p2">**</bpt>RemotePath<ept id="p2">**</ept> entrada do registro em cada chave.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>In the <bpt id="p1">**</bpt>Set-ItemProperty<ept id="p1">**</ept> command, the path is the value of the <bpt id="p2">**</bpt>PSPath<ept id="p2">**</ept> property of the registry key.</source>
          <target state="translated">No <bpt id="p1">**</bpt>Set-ItemProperty<ept id="p1">**</ept> de comando, o caminho é o valor da <bpt id="p2">**</bpt>PSPath<ept id="p2">**</ept> propriedade da chave do registro.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>(This is a property of the Microsoft .NET Framework object that represents the registry key; it is not a registry entry.) The command uses the ToUpper() method of the RemotePath value, which is a string (REG_SZ).</source>
          <target state="translated">(Essa é uma propriedade do objeto do Microsoft .NET Framework que representa a chave do registro; não é uma entrada de registro). O comando usa o método ToUpper() do valor RemotePath, que é uma cadeia de caracteres (REG_SZ).</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Because <bpt id="p1">**</bpt>Set-ItemProperty<ept id="p1">**</ept> is changing the property of each key, the <bpt id="p2">**</bpt>ForEach-Object<ept id="p2">**</ept> cmdlet is required to access the property.</source>
          <target state="translated">Porque <bpt id="p1">**</bpt>Set-ItemProperty<ept id="p1">**</ept> está alterando a propriedade de cada chave, o <bpt id="p2">**</bpt>ForEach-Object<ept id="p2">**</ept> cmdlet é necessária para acessar a propriedade.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>-------------------------- EXAMPLE 5 --------------------------</source>
          <target state="translated">-------------------------- EXAMPLE 5 --------------------------</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>This example shows the effect of piping the $null automatic variable to the <bpt id="p1">**</bpt>ForEach-Object<ept id="p1">**</ept> cmdlet.</source>
          <target state="translated">Este exemplo mostra o efeito de redirecionar a variável automática $null para o <bpt id="p1">**</bpt>ForEach-Object<ept id="p1">**</ept> cmdlet.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Because Windows PowerShell treats null as an explicit placeholder, the <bpt id="p1">**</bpt>ForEach-Object<ept id="p1">**</ept> cmdlet generates a value for $null, just as it does for other objects that you pipe to it.</source>
          <target state="translated">Como o Windows PowerShell trata null como um espaço reservado explícito, o <bpt id="p1">**</bpt>ForEach-Object<ept id="p1">**</ept> cmdlet gera um valor para $null, assim como faz para outros objetos que você transmitir a ele.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>For more information about the $null automatic variable, see about_Automatic_Variables.</source>
          <target state="translated">Para obter mais informações sobre a variável automática $null, consulte about_Automatic_Variables.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>-------------------------- EXAMPLE 6 --------------------------</source>
          <target state="translated">------------------------- EXEMPLO 6 --------------------------</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>These commands gets the value of the <bpt id="p1">**</bpt>Path<ept id="p1">**</ept> property of all installed Windows PowerShell modules.</source>
          <target state="translated">Esses comandos obtém o valor de <bpt id="p1">**</bpt>caminho<ept id="p1">**</ept> instalado de propriedade de todos os módulos do Windows PowerShell.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>They use the <bpt id="p1">**</bpt>MemberName<ept id="p1">**</ept> parameter to specify the <bpt id="p2">**</bpt>Path<ept id="p2">**</ept> property of modules.</source>
          <target state="translated">Eles usam o <bpt id="p1">**</bpt>MemberName<ept id="p1">**</ept> parâmetro para especificar o <bpt id="p2">**</bpt>caminho<ept id="p2">**</ept> propriedade de módulos.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>The second command is equivalent to the first.</source>
          <target state="translated">O segundo comando é equivalente ao primeiro.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>It uses the <bpt id="p1">**</bpt>Foreach<ept id="p1">**</ept> alias of the <bpt id="p2">**</bpt>Foreach-Object<ept id="p2">**</ept> cmdlet and omits the name of the <bpt id="p3">**</bpt>MemberName<ept id="p3">**</ept> parameter, which is optional.</source>
          <target state="translated">Ele usa o <bpt id="p1">**</bpt>Foreach<ept id="p1">**</ept> alias do <bpt id="p2">**</bpt>Foreach-Object<ept id="p2">**</ept> cmdlet e omite o nome do <bpt id="p3">**</bpt>MemberName<ept id="p3">**</ept> parâmetro, que é opcional.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>ForEach-Object<ept id="p1">**</ept> cmdlet is very useful for getting property values, because it gets the value without changing the type, unlike the <bpt id="p2">**</bpt>Format<ept id="p2">**</ept> cmdlets or the Select-Object cmdlet, which change the property value type.</source>
          <target state="translated">O <bpt id="p1">**</bpt>ForEach-Object<ept id="p1">**</ept> cmdlet é muito útil para obter valores de propriedade, porque ele obtém o valor sem alterar o tipo, ao contrário de <bpt id="p2">**</bpt>formato<ept id="p2">**</ept> cmdlets ou o cmdlet Select-Object, que alterar a propriedade tipo de valor.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>-------------------------- EXAMPLE 7 --------------------------</source>
          <target state="translated">-------------------------- EXAMPLE 7 --------------------------</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>These commands split two dot-separated module names into their component names.</source>
          <target state="translated">Estes comandos dividem dois nomes de módulo separados por ponto em seus nomes de componente.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>The commands call the <bpt id="p1">**</bpt>Split<ept id="p1">**</ept> method of strings.</source>
          <target state="translated">Os comandos chamam o <bpt id="p1">**</bpt>divisão<ept id="p1">**</ept> método de cadeias de caracteres.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>The three commands use different syntax, but they are equivalent and interchangeable.</source>
          <target state="translated">Os três comandos usam uma sintaxe diferente, mas são equivalentes e intercambiáveis.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>The first command uses the traditional syntax, which includes a script block and the current object operator ($_).</source>
          <target state="translated">O primeiro comando usa a sintaxe tradicional, que inclui um bloco de script e o operador de objeto atual ($_).</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>It uses the dot syntax to specify the method and parentheses to enclose the delimiter argument.</source>
          <target state="translated">Ele usa a sintaxe de ponto para especificar o método e parênteses para incluir o argumento delimitador.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>The second command uses the <bpt id="p1">**</bpt>MemberName<ept id="p1">**</ept> parameter to specify the <bpt id="p2">**</bpt>Split<ept id="p2">**</ept> method and the <bpt id="p3">**</bpt>ArgumentName<ept id="p3">**</ept> parameter to identify the dot (".") as the split delimiter.</source>
          <target state="translated">O segundo comando usa o <bpt id="p1">**</bpt>MemberName<ept id="p1">**</ept> parâmetro para especificar o <bpt id="p2">**</bpt>divisão<ept id="p2">**</ept> método e o <bpt id="p3">**</bpt>ArgumentName<ept id="p3">**</ept> parâmetro para identificar o ponto (".") como o delimitador de divisão.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>The third command  uses the <bpt id="p1">**</bpt>Foreach<ept id="p1">**</ept> alias of the <bpt id="p2">**</bpt>Foreach-Object<ept id="p2">**</ept> cmdlet and omits the names of the <bpt id="p3">**</bpt>MemberName<ept id="p3">**</ept> and <bpt id="p4">**</bpt>ArgumentList<ept id="p4">**</ept> parameters, which are optional.</source>
          <target state="translated">O terceiro comando usa o <bpt id="p1">**</bpt>Foreach<ept id="p1">**</ept> alias do <bpt id="p2">**</bpt>Foreach-Object<ept id="p2">**</ept> cmdlet e omite os nomes do <bpt id="p3">**</bpt>MemberName<ept id="p3">**</ept> e <bpt id="p4">**</bpt>ArgumentList<ept id="p4">**</ept> parâmetros, que são opcionais.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>The output of these three commands, shown below, is identical.</source>
          <target state="translated">A saída desses três comandos, mostrada abaixo, é idêntica.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Split<ept id="p1">**</ept> is just one of many useful methods of strings.</source>
          <target state="translated"><bpt id="p1">**</bpt>Divisão<ept id="p1">**</ept> é apenas um dos muitos métodos úteis de cadeias de caracteres.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>To see all of the properties and methods of strings, pipe a string to the Get-Member cmdlet.</source>
          <target state="translated">Para ver todas as propriedades e métodos de cadeias de caracteres, redirecione uma cadeia de caracteres para o cmdlet Get-Member.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>PARAMETERS</source>
          <target state="translated">PARÂMETROS</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>-Begin</source>
          <target state="translated">-Começar</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>Specifies a script block that runs before processing any input objects.</source>
          <target state="translated">Especifica um bloco de script que é executado antes do processamento de qualquer objeto de entrada.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>-End</source>
          <target state="translated">-End</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>Specifies a script block that runs after processing all input objects.</source>
          <target state="translated">Especifica um bloco de script que é executado após o processamento de todos os objetos de entrada.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>-InputObject</source>
          <target state="translated">-InputObject</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>Specifies the input objects.</source>
          <target state="translated">Especifica os objetos de entrada.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>ForEach-Object runs the script block or operation statement on each input object.</source>
          <target state="translated">ForEach-Object executa o bloco de script ou a instrução de operação de cada objeto de entrada.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>Enter a variable that contains the objects, or type a command or expression that gets the objects.</source>
          <target state="translated">Insira uma variável que contém os objetos ou digite um comando ou uma expressão que obtém os objetos.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>When you use the InputObject parameter with ForEach-Object, instead of piping command results to ForEach-Object, the InputObject value-even if the value is a collection that is the result of a command, such as -InputObject (Get-Process)-is treated as a single object.</source>
          <target state="translated">Quando você usa o parâmetro InputObject com ForEach-Object, em vez de resultados do comando tubulação para ForEach-Object, o InputObject valor, mesmo se o valor for uma coleção que é o resultado de um comando, como - InputObject (Get-Process)-é tratado como um único objeto.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>Because InputObject cannot return individual properties from an array or collection of objects, it is recommended that if you use ForEach-Object to perform operations on a collection of objects for those objects that have specific values in defined properties, you use ForEach-Object in the pipeline, as shown in the examples in this topic.</source>
          <target state="translated">Como InputObject não pode retornar propriedades individuais de uma matriz ou coleção de objetos, é recomendável que, se usar ForEach-Object para realizar operações em uma coleção de objetos para os objetos que têm valores específicos nas propriedades definidas, você use ForEach-Object no pipeline, como mostrado nos exemplos deste tópico.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>-Process</source>
          <target state="translated">-Processo</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>Specifies the operation that is performed on each input object.</source>
          <target state="translated">Especifica a operação que é executada em cada objeto de entrada.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>Enter a script block that describes the operation.</source>
          <target state="translated">Insira um bloco de script que descreve a operação.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>-RemainingScripts</source>
          <target state="translated">-RemainingScripts</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>Takes all script blocks that are not taken by the <bpt id="p1">**</bpt>Process<ept id="p1">**</ept> parameter.</source>
          <target state="translated">Usa todos os blocos de script que não são usados pelo <bpt id="p1">**</bpt>processo<ept id="p1">**</ept> parâmetro.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>This parameter is introduced in Windows PowerShell 3.0.</source>
          <target state="translated">Este parâmetro é introduzido no Windows PowerShell 3.0.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>-ArgumentList</source>
          <target state="translated">-ArgumentList</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>Specifies the arguments to a method call.</source>
          <target state="translated">Especifica os argumentos de uma chamada de método.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>This parameter is introduced in Windows PowerShell 3.0.</source>
          <target state="translated">Este parâmetro é introduzido no Windows PowerShell 3.0.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>-MemberName</source>
          <target state="translated">-MemberName</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>Specifies the property to get or the method to call.</source>
          <target state="translated">Especifica a propriedade a ser obtida ou o método a ser chamado.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>Wildcard characters are permitted, but work only if the resulting string resolves to a unique value.</source>
          <target state="translated">Caracteres curinga são permitidos, mas funcionam somente se a cadeia de caracteres resultante é resolvida como um valor exclusivo.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>If, for example, you run Get-Process | ForEach -MemberName *Name, and more than one member exists with a name that contains the string Name--such as the ProcessName and Name properties--the command fails.</source>
          <target state="translated">Se, por exemplo, execute Get-Process | ForEach - MemberName * nome e mais de um membro existe com um nome que contém a cadeia de nome-- como as propriedades ProcessName e nome – o comando falhará.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>This parameter is introduced in Windows PowerShell 3.0.</source>
          <target state="translated">Este parâmetro é introduzido no Windows PowerShell 3.0.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>-Confirm</source>
          <target state="translated">-Confirm</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>Prompts you for confirmation before running the cmdlet.Prompts you for confirmation before running the cmdlet.</source>
          <target state="translated">Solicita confirmação antes de executar o cmdlet. Solicita confirmação antes de executar o cmdlet.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>-WhatIf</source>
          <target state="translated">-WhatIf</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>Shows what would happen if the cmdlet runs.</source>
          <target state="translated">Mostra o que aconteceria se o cmdlet fosse executado.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>The cmdlet is not run.Shows what would happen if the cmdlet runs.</source>
          <target state="translated">O cmdlet não é executado. Mostra o que aconteceria se o cmdlet fosse executado.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>The cmdlet is not run.</source>
          <target state="translated">O cmdlet não é executado.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>CommonParameters</source>
          <target state="translated">CommonParameters</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutVariable, -OutBuffer, -PipelineVariable, -Verbose, -WarningAction, and -WarningVariable.</source>
          <target state="translated">Esse cmdlet oferece suporte aos parâmetros comuns:-Debug, - ErrorAction, - ErrorVariable, - InformationAction, - InformationVariable, - OutVariable,-OutBuffer, - PipelineVariable, - Verbose, - WarningAction e - WarningVariable.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>For more information, see about_CommonParameters (http://go.microsoft.com/fwlink/?LinkID=113216).</source>
          <target state="translated">Para obter mais informações, consulte about_CommonParameters (http://go.microsoft.com/fwlink/?LinkID=113216).</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>INPUTS</source>
          <target state="translated">ENTRADAS</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>System.Management.Automation.PSObject</source>
          <target state="translated">System.Management.Automation.PSObject</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>You can pipe any object to ForEach-Object.</source>
          <target state="translated">Você pode redirecionar qualquer objeto para ForEach-Object.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>OUTPUTS</source>
          <target state="translated">SAÍDAS</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>System.Management.Automation.PSObject</source>
          <target state="translated">System.Management.Automation.PSObject</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>The objects that ForEach-Object returns are determined by the input.</source>
          <target state="translated">Os objetos que ForEach-Object retorna são determinados pela entrada.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>NOTES</source>
          <target state="translated">ANOTAÇÕES</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>ForEach-Object<ept id="p1">**</ept> cmdlet works much like the <bpt id="p2">**</bpt>Foreach<ept id="p2">**</ept> statement, except that you cannot pipe input to a <bpt id="p3">**</bpt>Foreach<ept id="p3">**</ept> statement.</source>
          <target state="translated">O <bpt id="p1">**</bpt>ForEach-Object<ept id="p1">**</ept> cmdlet funciona de maneira muito semelhante a <bpt id="p2">**</bpt>Foreach<ept id="p2">**</ept> instrução, exceto que você não pode redirecionar a entrada para um <bpt id="p3">**</bpt>Foreach<ept id="p3">**</ept> instrução.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>For more information about the <bpt id="p1">**</bpt>Foreach<ept id="p1">**</ept> statement, see about_Foreach (http://go.microsoft.com/fwlink/?LinkID=113229).</source>
          <target state="translated">Para obter mais informações sobre o <bpt id="p1">**</bpt>Foreach<ept id="p1">**</ept> instrução, consulte about_Foreach (http://go.microsoft.com/fwlink/?LinkID=113229).</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>RELATED LINKS</source>
          <target state="translated">LINKS RELACIONADOS</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>