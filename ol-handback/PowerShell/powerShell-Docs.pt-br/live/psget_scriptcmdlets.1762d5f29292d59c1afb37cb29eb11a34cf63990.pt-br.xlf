<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="pt-br">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-db30baf" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">91a4ed1e8912f77e274d64db7873ad56edbbd17b</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">wmf\psget_scriptcmdlets.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions" />
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>PowerShellGet Cmdlets for Script Management</source>
          <target state="translated">Cmdlets do PowerShellGet para Gerenciamento de Script</target>         
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Find-Script cmdlet</source>
          <target state="translated">Cmdlet Find-Script</target>         
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Find-Script cmdlet lets you to discover the script files with different search criteria like name, tag, filter, command name, version range, exact version, all versions, including its dependencies and from specific or all registered repositories.</source>
          <target state="translated">O cmdlet Find-Script permite descobrir os arquivos de script com critérios de pesquisa diferentes, como nome, marca, filtro, nome do comando, intervalo de versão, a versão exata, todas as versões, incluindo suas dependências e de repositórios específicos ou de todos os repositórios.</target>         
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Example usage:</source>
          <target state="translated">Exemplo de uso:</target>         
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Save-Script cmdlet</source>
          <target state="translated">Cmdlet Save-Script</target>         
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Save-Script cmdlet lets you to review the script file by saving it to a specified location.</source>
          <target state="translated">O cmdlet Save-Script permite examinar o arquivo de script salvando-o em um local especificado.</target>         
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Install-Script and Get-InstalledScript cmdlets</source>
          <target state="translated">Cmdlets Install-Script e Get-InstalledScript</target>         
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Install-Script cmdlet lets you to install a specific script file along with its dependencies to the specified scope.</source>
          <target state="translated">O cmdlet Install-Script permite instalar um arquivo de script específico junto com suas dependências no escopo especificado.</target>         
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>By default, scripts are installed to the AllUsers scope.</source>
          <target state="translated">Por padrão, os scripts são instalados no escopo AllUsers.</target>         
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Get-InstalledScript cmdlet lets you to get the list of script files which were installed using Install-Script cmdlet.</source>
          <target state="translated">O cmdlet Get-InstalledScript permite obter a lista de arquivos de script que foram instalados com o cmdlet Install-Script.</target>         
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Use note: To allow management and locating of scripts once they are installed, Install-script will create a default folder for storing scripts at $home\Documents\WindowsPowerShell\Scripts, and add that folder to your PATH environment.</source>
          <target state="translated">Observação de uso: para permitir o gerenciamento e a localização dos scripts quando eles forem instalados, Install-Script criará uma pasta padrão para armazenar scripts em $home\Documents\WindowsPowerShell\Scripts e adicionará essa pasta ao seu ambiente PATH.</target>         
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>If modifying the path is a concern, use Save-Script instead of Install-Script.</source>
          <target state="translated">Caso a modificação do caminho seja uma preocupação, use Save-Script em vez de Install-Script.</target>         
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Get-InstalledScripts and Uninstall-Script can only work with scripts placed on the system using Install-Script.</source>
          <target state="translated">Get-InstalledScripts e Uninstall-Script só podem funcionar com scripts colocados no sistema usando Install-Script.</target>         
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>You can also use Get-Command –Name <ph id="ph1">&amp;lt;</ph>InstalledScriptFileName<ph id="ph2">&amp;gt;</ph> to get it.</source>
          <target state="translated">Também é possível usar Get-Command –Name <ph id="ph1">&amp;lt;</ph>InstalledScriptFileName<ph id="ph2">&amp;gt;</ph> para obtê-lo.</target>         
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Two install locations are added to the PATH environment variable on first use of a specified scope.</source>
          <target state="translated">Dois locais de instalação são adicionados à variável de ambiente PATH na primeira utilização de um escopo especificado.</target>         
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Update-Script cmdlet</source>
          <target state="translated">Cmdlet Update-Script</target>         
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Update-Script cmdlet lets you to do in-place update of the script files which were installed using Install-Script cmdlet.</source>
          <target state="translated">O cmdlet Update-Script permite a atualização in-loco dos arquivos de script que foram instalados usando o cmdlet Install-Script.</target>         
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Uninstall-Script cmdlet</source>
          <target state="translated">Cmdlet Uninstall-Script</target>         
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>New-ScriptFileInfo and Test-ScriptFileInfo cmdlets</source>
          <target state="translated">Cmdlets New-ScriptFileInfo e Test-ScriptFileInfo</target>         
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>New-ScriptFileInfo cmdlet lets you to create a new script file with metadata like Version, Guid, Author, and Description, etc. Test-ScriptFileInfo cmdlet lets you to validate and get the script file metadata.</source>
          <target state="translated">O cmdlet New-ScriptFileInfo permite criar um novo arquivo de script com metadados como Versão, Guid, Autor, Descrição, etc. O cmdlet Test-ScriptFileInfo permite validar e obter os metadados do arquivo de script.</target>         
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Update-ScriptFileInfo cmdlet</source>
          <target state="translated">Cmdlet Update-ScriptFileInfo</target>         
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Update-ScriptFileInfo cmdlet lets you to update the existing script file metadata.</source>
          <target state="translated">O cmdlet Update-ScriptFileInfo permite atualizar os metadados do arquivo de script existente.</target>         
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Register-PSRepository and Set-PSRepository cmdlets with script sharing support</source>
          <target state="translated">Cmdlets Register-PSRepository e Set-PSRepository com suporte ao compartilhamento de script</target>         
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Use Register-PSRepository/Set-PSRepository cmdlets to add the <bpt id="p1">**</bpt>ScriptSourceLocation<ept id="p1">**</ept> and <bpt id="p2">**</bpt>ScriptPublishLocation<ept id="p2">**</ept> to the PSRepository.</source>
          <target state="translated">Use os cmdlets Register-PSRepository/Set-PSRepository para adicionar o <bpt id="p1">**</bpt>ScriptSourceLocation<ept id="p1">**</ept> e <bpt id="p2">**</bpt>ScriptPublishLocation<ept id="p2">**</ept> ao PSRepository.</target>         
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Publish-Script cmdlet</source>
          <target state="translated">Cmdlet Publish-Script</target>         
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Publish-Script cmdlet lets you to publish your script file with valid metadata like Version, Guid, Author, and Description, etc.</source>
          <target state="translated">O cmdlet Publish-Script permite publicar o arquivo de script com metadados válidos como Versão, Guid, Autor, Descrição, etc.</target>         
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>