<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="md" source-language="en-US" target-language="pt-br">
    <header>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">2021f5b0e8a50a720c8334011848b1d8826bca6c</xliffext:olfilehash>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-04046aa" tool-company="Microsoft" />
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Getting Information About Commands</source>
          <target state="translated">Obtendo informações sobre comandos</target>         
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Getting Information About Commands</source>
          <target state="translated">Obtendo informações sobre comandos</target>         
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>The Windows PowerShell <bpt id="p1">**</bpt>Get\-Command<ept id="p1">**</ept> cmdlet gets all commands that are available in your current session.</source>
          <target state="translated">O cmdlet <bpt id="p1">**</bpt>Get-Command<ept id="p1">**</ept> do Windows PowerShell obtém todos os comandos que estão disponíveis na sessão atual.</target>         
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>When you type <bpt id="p1">**</bpt>Get\-Command<ept id="p1">**</ept> at a Windows PowerShell prompt, you will see output similar to the following:</source>
          <target state="translated">Quando você digita <bpt id="p1">**</bpt>Get-Command<ept id="p1">**</ept> em um prompt do Windows PowerShell, você verá uma saída semelhante à seguinte:</target>         
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>This output looks a lot like the Help output of Cmd.exe: a tabular summary of internal commands.</source>
          <target state="translated">Esta saída se parece muito como a saída de Ajuda do Cmd.exe: um resumo tabular de comandos internos.</target>         
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>In the excerpt of the <bpt id="p1">**</bpt>Get\-Command<ept id="p1">**</ept> command output shown above, every command shown has a CommandType of Cmdlet.</source>
          <target state="translated">No trecho do resultado do comando <bpt id="p1">**</bpt>Get-Command<ept id="p1">**</ept> mostrado acima, todos os comandos mostrados tem um CommandType do Cmdlet.</target>         
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>A cmdlet is Windows PowerShell's intrinsic command type – a type that corresponds roughly to the <bpt id="p1">**</bpt>dir<ept id="p1">**</ept> and <bpt id="p2">**</bpt>cd<ept id="p2">**</ept> commands of Cmd.exe and to built\-ins in UNIX shells such as BASH.</source>
          <target state="translated">Um cmdlet é o tipo de comando intrínseco do Windows PowerShell, um tipo que corresponde aproximadamente aos comandos <bpt id="p1">**</bpt>dir<ept id="p1">**</ept> e <bpt id="p2">**</bpt>cd<ept id="p2">**</ept> de Cmd.exe e shells integrados do UNIX como BASH.</target>         
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>In the output of the <bpt id="p1">**</bpt>Get\-Command<ept id="p1">**</ept> command, all the definitions end with ellipses (...) to indicate that PowerShell cannot display all the content in the available space.</source>
          <target state="translated">Na saída do comando <bpt id="p1">**</bpt>Get-Command<ept id="p1">**</ept>, todas as definições terminam com reticências (...) para indicar que o PowerShell não consegue exibir todo o conteúdo no espaço disponível.</target>         
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>When Windows PowerShell displays output, it formats the output as text and then arranges it to make the data fit cleanly into the window.</source>
          <target state="translated">Quando o Windows PowerShell exibe a saída, ele formata o resultado como texto e o organiza para ajustar os dados corretamente na janela.</target>         
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>We will talk about this later in the section on formatters.</source>
          <target state="translated">Falaremos sobre isso mais tarde na seção sobre formatadores.</target>         
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>Get\-Command<ept id="p1">**</ept> cmdlet has a <bpt id="p2">**</bpt>Syntax<ept id="p2">**</ept> parameter that gets the syntax of each cmdlet.</source>
          <target state="translated">O cmdlet <bpt id="p1">**</bpt>Get-Command<ept id="p1">**</ept> tem um parâmetro <bpt id="p2">**</bpt>Syntax<ept id="p2">**</ept> que obtém a sintaxe de cada cmdlet.</target>         
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>To get the syntax of the Get\-Help cmdlet, use the following command:</source>
          <target state="translated">Para obter a sintaxe do cmdlet Get-Help, use o seguinte comando:</target>         
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Get\-Command Get\-Help \-Syntax</source>
          <target state="translated">Get-Command Get-Help -Syntax</target>         
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Displaying Available Command Types</source>
          <target state="translated">Exibindo tipos de comando disponíveis</target>         
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>Get\-Command<ept id="p1">**</ept> command does not list every command that is available in Windows PowerShell.</source>
          <target state="translated">O comando <bpt id="p1">**</bpt>Get-Command<ept id="p1">**</ept> não lista todos os comandos disponíveis no Windows PowerShell.</target>         
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Instead, the <bpt id="p1">**</bpt>Get\-Command<ept id="p1">**</ept> command lists only the cmdlets in the current session.</source>
          <target state="translated">Em vez disso, o comando <bpt id="p1">**</bpt>Get-Command<ept id="p1">**</ept> lista somente os cmdlets da sessão atual.</target>         
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Windows PowerShell actually supports several other types of commands.</source>
          <target state="translated">Na verdade, o Windows PowerShell oferece suporte a vários outros tipos de comandos.</target>         
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Aliases, functions, and scripts are also Windows PowerShell commands, although they are not discussed in detail in the Windows PowerShell User's Guide.</source>
          <target state="translated">Aliases, funções e scripts também são comandos do Windows PowerShell, embora eles não sejam discutidos em detalhes no Guia do Usuário do Windows PowerShell.</target>         
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>External files that are executable, or have a registered file type handler, are also classified as commands.</source>
          <target state="translated">Arquivos externos executáveis ou que possuem um manipulador do tipo de arquivo registrado também são classificados como comandos.</target>         
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>To get all commands in the session, type:</source>
          <target state="translated">Para obter todos os comandos na sessão, digite:</target>         
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Because this list includes external files in your search path, it may contain thousands of items.</source>
          <target state="translated">Como essa lista inclui arquivos externos em seu caminho de pesquisa, ela pode conter milhares de itens.</target>         
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>It is more useful to look at a reduced set of commands.</source>
          <target state="translated">É mais útil examinar um conjunto reduzido de comandos.</target>         
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>To get native commands of other types, use the <bpt id="p1">**</bpt>CommandType<ept id="p1">**</ept> parameter of the <bpt id="p2">**</bpt>Get\-Command<ept id="p2">**</ept> cmdlet.</source>
          <target state="translated">Para obter comandos nativos de outros tipos, use o parâmetro <bpt id="p1">**</bpt>CommandType<ept id="p1">**</ept> do cmdlet <bpt id="p2">**</bpt>Get-Command<ept id="p2">**</ept>.</target>         
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>The asterisk (\*) is used for wildcard matching in Windows PowerShell command arguments.</source>
          <target state="translated">O asterisco (*) é usado para correspondência de curingas nos argumentos de comando do Windows PowerShell.</target>         
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>The \* means "match one or more of any characters".</source>
          <target state="translated">O * corresponde a "um ou mais caracteres quaisquer".</target>         
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>You can type <bpt id="p1">**</bpt>Get\-Command a\&amp;#42;<ept id="p1">**</ept> to find all commands that begin with the letter "a".</source>
          <target state="translated">Você pode digitar <bpt id="p1">**</bpt>Get-Command a&amp;#42;<ept id="p1">**</ept> para encontrar todos os comandos que começam com a letra "a".</target>         
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Unlike wildcard matching in Cmd.exe, Windows PowerShell's wildcard will also match a period.</source>
          <target state="translated">Diferentemente da correspondência de curingas no Cmd.exe, curingas do Windows PowerShell também serão compatíveis com um ponto.</target>         
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>To get command aliases, which are the assigned nicknames of commands, type:</source>
          <target state="translated">Para obter os aliases de comando, que são os apelidos atribuídos a comandos, digite:</target>         
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>To get the functions in the current session, type:</source>
          <target state="translated">Para obter as funções na sessão atual, digite:</target>         
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>To display scripts in Windows PowerShell's search path, type:</source>
          <target state="translated">Para exibir os scripts no caminho de pesquisa do Windows PowerShell, digite:</target>         
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>