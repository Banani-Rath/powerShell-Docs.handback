<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="pt-br">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-1c394fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">208f566c5b1ab7b3ac1e7aaa71e4933b85e4808d</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">reference\5.0\Microsoft.PowerShell.Utility\Group-Object.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions" />
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ad3ce6572cde1feb8dc6a18198263aac25a59430</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">42db0386139a20e99a6ea881354d95d890d0d956</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>powershell, cmdlet</source>
          <target state="translated">PowerShell, cmdlet</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Group-Object</source>
          <target state="translated">Group-Object</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Group-Object</source>
          <target state="translated">Group-Object</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>SYNOPSIS</source>
          <target state="translated">SINOPSE</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Groups objects that contain the same value for specified properties.</source>
          <target state="translated">Objetos de grupos que contêm o mesmo valor para as propriedades especificadas.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>SYNTAX</source>
          <target state="translated">SINTAXE</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>DESCRIPTION</source>
          <target state="translated">DESCRIÇÃO</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>Group-Object<ept id="p1">**</ept> cmdlet displays objects in groups based on the value of a specified property.</source>
          <target state="translated">O <bpt id="p1">**</bpt>Group-Object<ept id="p1">**</ept> cmdlet exibe objetos em grupos com base no valor de uma propriedade especificada.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Group-Object<ept id="p1">**</ept> returns a table with one row for each property value and a column that displays the number of items with that value.</source>
          <target state="translated"><bpt id="p1">**</bpt>Objeto de grupo<ept id="p1">**</ept> retorna uma tabela com uma linha para cada valor de propriedade e uma coluna que exibe o número de itens com esse valor.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>If you specify more than one property, <bpt id="p1">**</bpt>Group-Object<ept id="p1">**</ept> first groups them by the values of the first property, and then, within each property group, it groups by the value of the next property.</source>
          <target state="translated">Se você especificar mais de uma propriedade, <bpt id="p1">**</bpt>Group-Object<ept id="p1">**</ept> agrupa primeiro pelos valores da propriedade primeiro, e em seguida, em cada grupo de propriedade, ela agrupa pelo valor da propriedade próxima.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>EXAMPLES</source>
          <target state="translated">EXEMPLOS</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Example 1: Group files by size</source>
          <target state="translated">Exemplo 1: Agrupar arquivos por tamanho</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>This command gets the files in the current location that have a .doc extension and groups them by size.</source>
          <target state="translated">Esse comando obtém os arquivos no local atual com uma extensão. doc e os agrupa por tamanho.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Example 2: Group files by extension</source>
          <target state="translated">Exemplo 2: Agrupar arquivos por extensão</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>This command gets the files in the current location, sorts them by file name extension, and then groups them by file name extension.</source>
          <target state="translated">Esse comando obtém os arquivos no local atual, os classifica pela extensão de nome de arquivo e, em seguida, os agrupa pela extensão de nome de arquivo.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Note that the files are sorted before they are grouped.</source>
          <target state="translated">Observe que os arquivos são classificados antes de serem agrupados.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Example 3: Group integers by remainder</source>
          <target state="translated">Exemplo 3: Agrupar inteiros por restante</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>This example shows how to use script blocks as the value of the <bpt id="p1">*</bpt>Property<ept id="p1">*</ept> parameter.</source>
          <target state="translated">Este exemplo mostra como usar blocos de script como o valor de <bpt id="p1">*</bpt>propriedade<ept id="p1">*</ept> parâmetro.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>This command displays the integers from 1 to 35, grouped by the remainder left when they are divided by 2 or 3.</source>
          <target state="translated">Esse comando exibe os inteiros de 1 a 35, agrupados pelo resto deixado quando divididos por 2 ou 3.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Example 4: Group event log events by ID</source>
          <target state="translated">Exemplo 4: Log de eventos por ID de grupo</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>These commands display the 1,000 most recent entries in the System event log, grouped by Event ID.</source>
          <target state="translated">Esses comandos exibem as 1.000 entradas mais recentes no log de eventos System, agrupado por ID do Evento.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>The first command uses the Get-EventLog cmdlet to retrieve the events and the assignment operator (=) to save them in the $Events variable.</source>
          <target state="translated">O primeiro comando usa o cmdlet Get-EventLog para recuperar os eventos e o operador de atribuição (=) para salvá-los na variável $Events.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>The second command uses a pipeline operator (|) to send the events in the $Events variable to the <bpt id="p1">**</bpt>Group-Object<ept id="p1">**</ept> cmdlet.</source>
          <target state="translated">O segundo comando usa um operador de pipeline (|) para enviar os eventos na variável $Events para o <bpt id="p1">**</bpt>Group-Object<ept id="p1">**</ept> cmdlet.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>The command uses the <bpt id="p1">*</bpt>Property<ept id="p1">*</ept> parameter to specify that the events should be grouped according to the value of their EventID property.</source>
          <target state="translated">O comando usa o <bpt id="p1">*</bpt>propriedade<ept id="p1">*</ept> parâmetro para especificar que os eventos devem ser agrupados de acordo com o valor de sua propriedade EventID.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>In the output, the Count column represents the number of entries in each group, the Name column represents the EventID values that define a group, and the Group column represents the objects in each group.</source>
          <target state="translated">Na saída, a coluna Count representa o número de entradas em cada grupo, a coluna Name representa os valores de EventID que definem um grupo e a coluna Group representa os objetos em cada grupo.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Example 5: Group processes by priority class</source>
          <target state="translated">Exemplo 5: Agrupar processos por classe de prioridade</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>This example demonstrates the effect of the <bpt id="p1">*</bpt>NoElement<ept id="p1">*</ept> parameter.</source>
          <target state="translated">Este exemplo demonstra o efeito de <bpt id="p1">*</bpt>NoElement<ept id="p1">*</ept> parâmetro.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>These commands group the processes on the computer by priority class.</source>
          <target state="translated">Esses comandos agrupam os processos no computador por classe de prioridade.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>The first command uses the Get-Process cmdlet to get the processes on the computer.</source>
          <target state="translated">O primeiro comando usa o cmdlet Get-Process para obter os processos no computador.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>It uses a pipeline operator (|) to send the results to <bpt id="p1">**</bpt>Group-Object<ept id="p1">**</ept>, which groups the objects by the value of the PriorityClass property of the process.</source>
          <target state="translated">Ele usa um operador de pipeline (|) para enviar os resultados para <bpt id="p1">**</bpt>Group-Object<ept id="p1">**</ept>, que agrupa os objetos pelo valor da propriedade PriorityClass do processo.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>The second command is identical to the first, except that it uses the <bpt id="p1">*</bpt>NoElement<ept id="p1">*</ept> parameter to eliminate the members of the group from the output.</source>
          <target state="translated">O segundo comando é idêntico ao primeiro, exceto que ele usa o <bpt id="p1">*</bpt>NoElement<ept id="p1">*</ept> parâmetro para eliminar os membros do grupo da saída.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>The result is a table with only the count and property value name.</source>
          <target state="translated">O resultado é uma tabela com apenas o nome do valor da propriedade e da contagem.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>The results are shown in the following sample output.</source>
          <target state="translated">Os resultados são mostrados na seguinte saída de exemplo.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Example 6: Group events by time</source>
          <target state="translated">Exemplo 6: Agrupar eventos por hora</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>This command demonstrates how to provide the value of the <bpt id="p1">*</bpt>Property<ept id="p1">*</ept> parameter as a script block.</source>
          <target state="translated">Esse comando demonstra como fornecer o valor de <bpt id="p1">*</bpt>propriedade<ept id="p1">*</ept> parâmetro como um bloco de script.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>This command displays the most recent 1,000 entries from the System event log, grouped according to the time between when they were generated and when they were written to the log.</source>
          <target state="translated">Esse comando exibe as 1.000 entradas mais recentes do log de eventos do sistema, agrupados de acordo com o tempo entre quando foram geradas e quando eles foram gravados no log.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>The command uses the Get-EventLog cmdlet to get the event log entries.</source>
          <target state="translated">O comando usa o cmdlet Get-EventLog para obter as entradas do log de eventos.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>It uses a pipeline operator (|) to send the entries to the <bpt id="p1">**</bpt>Group-Object<ept id="p1">**</ept> cmdlet.</source>
          <target state="translated">Ele usa um operador de pipeline (|) para enviar as entradas para o <bpt id="p1">**</bpt>Group-Object<ept id="p1">**</ept> cmdlet.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>The value of the <bpt id="p1">*</bpt>Property<ept id="p1">*</ept> parameter is specified as a script block (an expression in braces).</source>
          <target state="translated">O valor de <bpt id="p1">*</bpt>propriedade<ept id="p1">*</ept> parâmetro é especificado como um bloco de script (uma expressão entre chaves).</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>The result of evaluating the script block is the time between when the log entry was generated and when it was written to the log.</source>
          <target state="translated">O resultado da avaliação do bloco de script é o tempo entre quando a entrada de log foi gerada e quando foi gravada no log.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>That value is used to group the 1,000 most recent events.</source>
          <target state="translated">Esse valor é usado para agrupar os 1.000 eventos mais recentes.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Example 7: Group items by file name extension</source>
          <target state="translated">Exemplo 7: Agrupar itens por extensão de nome de arquivo</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>This command groups the items in the current directory by file name extension.</source>
          <target state="translated">Esse comando agrupa os itens no diretório atual pela extensão do nome de arquivo.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>It uses the <bpt id="p1">*</bpt>NoElement<ept id="p1">*</ept> parameter to omit the members of the group.</source>
          <target state="translated">Ele usa o <bpt id="p1">*</bpt>NoElement<ept id="p1">*</ept> parâmetro omitir os membros do grupo.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>The results are shown in the following sample output.</source>
          <target state="translated">Os resultados são mostrados na seguinte saída de exemplo.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Example 8: Group objects by value</source>
          <target state="translated">Exemplo 8: Agrupar objetos por valor</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>This example shows how to find the unique and non-unique (repeated) property values in a collection.</source>
          <target state="translated">Este exemplo mostra como localizar os valores de propriedade exclusivos e não exclusivos (repetidos) em uma coleção.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>The first command gets the unique elements of an array by piping the array to the Get-Unique cmdlet.</source>
          <target state="translated">O primeiro comando obtém os elementos únicos de uma matriz canalizando a matriz para o cmdlet Get-Unique.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>The second command gets the non-unique elements of an array.</source>
          <target state="translated">O segundo comando obtém os elementos não exclusivos de uma matriz.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>It pipes the array to the <bpt id="p1">**</bpt>Group-Object<ept id="p1">**</ept> cmdlet, which groups the objects by value.</source>
          <target state="translated">Ele canaliza a matriz para o <bpt id="p1">**</bpt>Group-Object<ept id="p1">**</ept> cmdlet, que agrupa os objetos por valor.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>The resulting groups are piped to the Where-Object cmdlet, which selects objects with groups with more than one member.</source>
          <target state="translated">Os grupos resultantes serão canalizados para o cmdlet Where-Object, que seleciona objetos com grupos com mais de um membro.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>The third command shows a practical use for this technique.</source>
          <target state="translated">O terceiro comando mostra um uso prático para essa técnica.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>It uses the same method to find processes on the computer that have the same process name.</source>
          <target state="translated">Ele usa o mesmo método para localizar processos no computador com o mesmo nome de processo.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>The results are shown in the following sample output.</source>
          <target state="translated">Os resultados são mostrados na seguinte saída de exemplo.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Example 9: Group objects in a hash table</source>
          <target state="translated">Exemplo 9: Agrupar objetos em uma tabela de hash</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>This example uses the <bpt id="p1">*</bpt>AsHashTable<ept id="p1">*</ept> and <bpt id="p2">*</bpt>AsString<ept id="p2">*</ept> parameters to return the groups in a hash table, that is, as a collection of key-value pairs.</source>
          <target state="translated">Este exemplo usa o <bpt id="p1">*</bpt>AsHashTable<ept id="p1">*</ept> e <bpt id="p2">*</bpt>AsString<ept id="p2">*</ept> parâmetros para retornar os grupos em uma tabela de hash, ou seja, como uma coleção de pares chave-valor.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>In the resulting hash table, each property value is a key, and the group elements are the values.</source>
          <target state="translated">Na tabela de hash resultante, cada valor de propriedade é uma chave e os elementos de grupo são os valores.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Because each key is a property of the hash table object, you can use dot notation to display the values.</source>
          <target state="translated">Como cada chave é uma propriedade do objeto de tabela de hash, você pode usar a notação de ponto para exibir os valores.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>The first command gets the Get and Set cmdlets in the session, groups them by verb, returns the groups as a hash table, and saves the hash table in the $A variable.</source>
          <target state="translated">O primeiro comando obtém os cmdlets Get e Set na sessão, agrupa por verbo, retorna os grupos como uma tabela de hash e salva a tabela de hash na variável $A.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>The second command displays the hash table in $A.</source>
          <target state="translated">O segundo comando exibe a tabela de hash em $A.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>There are two key-value pairs, one for the Get cmdlets and one for the Set cmdlets.</source>
          <target state="translated">Há dois pares de chave-valor, um dos cmdlets Get e outro para os conjunto de cmdlets.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>The third command uses dot notation to display the values of the Get key in $A.</source>
          <target state="translated">O terceiro comando usa a notação de ponto para exibir os valores da chave Get em $A.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>The values are CmdletInfo object.</source>
          <target state="translated">Os valores são objetos cmdletinfo.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">*</bpt>AsString<ept id="p1">*</ept> parameter does not convert the objects in the groups to strings.</source>
          <target state="translated">O <bpt id="p1">*</bpt>AsString<ept id="p1">*</ept> parâmetro não converte os objetos nos grupos em cadeias de caracteres.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>PARAMETERS</source>
          <target state="translated">PARÂMETROS</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>-AsHashTable</source>
          <target state="translated">-AsHashTable</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>Indicates that this cmdlet returns the group as a hash table.</source>
          <target state="translated">Indica que esse cmdlet retorna o grupo como uma tabela de hash.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>The keys of the hash table are the property values by which the objects are grouped.</source>
          <target state="translated">As chaves da tabela de hash são os valores de propriedade pelos quais os objetos são agrupados.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>The values of the hash table are the objects that have that property value.</source>
          <target state="translated">Os valores da tabela de hash são os objetos que têm o valor da propriedade.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>By itself, the <bpt id="p1">*</bpt>AsHashTable<ept id="p1">*</ept> parameter returns each hash table in which each key is an instance of the grouped object.</source>
          <target state="translated">Por si só, o <bpt id="p1">*</bpt>AsHashTable<ept id="p1">*</ept> parâmetro retorna cada tabela de hash em que cada chave é uma instância do objeto agrupado.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>When used with the <bpt id="p1">*</bpt>AsString<ept id="p1">*</ept> parameter, the keys in the hash table are strings.</source>
          <target state="translated">Quando usado com o <bpt id="p1">*</bpt>AsString<ept id="p1">*</ept> parâmetro, as chaves na tabela de hash são cadeias de caracteres.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>-AsString</source>
          <target state="translated">-AsString</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>Indicates that this cmdlet converts the hash table keys to strings.</source>
          <target state="translated">Indica que este cmdlet converte as chaves de tabela de hash para cadeias de caracteres.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>By default, the hash table keys are instances of the grouped object.</source>
          <target state="translated">Por padrão, as chaves de tabela de hash são instâncias de objeto agrupado.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>This parameter is valid only when used with the <bpt id="p1">*</bpt>AsHashTable<ept id="p1">*</ept> parameter.</source>
          <target state="translated">Este parâmetro é válido somente quando usado com o <bpt id="p1">*</bpt>AsHashTable<ept id="p1">*</ept> parâmetro.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>-CaseSensitive</source>
          <target state="translated">-CaseSensitive</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>Indicates that this cmdlet makes the grouping case-sensitive.</source>
          <target state="translated">Indica que este cmdlet faz o agrupamento diferencia maiusculas de minúsculas.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>Without this parameter, the property values of objects in a group might have different cases.</source>
          <target state="translated">Sem esse parâmetro, os valores de propriedade dos objetos em um grupo podem ter diferentes casos.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>-Culture</source>
          <target state="translated">-Culture</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>Specifies the culture to use when comparing strings.</source>
          <target state="translated">Especifica a cultura a ser usada ao comparar cadeias de caracteres.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>-InputObject</source>
          <target state="translated">-InputObject</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>Specifies the objects to group.</source>
          <target state="translated">Especifica os objetos ao grupo.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>Enter a variable that contains the objects, or type a command or expression that gets the objects.</source>
          <target state="translated">Insira uma variável que contém os objetos ou digite um comando ou uma expressão que obtém os objetos.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>When you use the <bpt id="p1">*</bpt>InputObject<ept id="p1">*</ept> parameter to submit a collection of objects to <bpt id="p2">**</bpt>Group-Object<ept id="p2">**</ept>, <bpt id="p3">**</bpt>Group-Object<ept id="p3">**</ept> receives one object that represents the collection.</source>
          <target state="translated">Quando você usa o <bpt id="p1">*</bpt>InputObject<ept id="p1">*</ept> parâmetro para enviar uma coleção de objetos <bpt id="p2">**</bpt>Group-Object<ept id="p2">**</ept>, <bpt id="p3">**</bpt>Group-Object<ept id="p3">**</ept> recebe um objeto que representa a coleção.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>As a result, it creates a single group with that object as its member.</source>
          <target state="translated">Como resultado, ele cria um único grupo com esse objeto como seu membro.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>To group the objects in a collection, pipe the objects to <bpt id="p1">**</bpt>Group-Object<ept id="p1">**</ept>.</source>
          <target state="translated">Para agrupar os objetos em uma coleção, canalizar os objetos a serem <bpt id="p1">**</bpt>Group-Object<ept id="p1">**</ept>.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>-NoElement</source>
          <target state="translated">-NoElement</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>Indicates that this cmdlet omits the members of a group from the results.</source>
          <target state="translated">Indica que este cmdlet omite os membros de um grupo de resultados.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>-Property</source>
          <target state="translated">-Propriedade</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>Specifies the properties for grouping.</source>
          <target state="translated">Especifica as propriedades de agrupamento.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>The objects are arranged into groups based on the value of the specified property.</source>
          <target state="translated">Os objetos são organizados em grupos com base no valor da propriedade especificada.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>The value of the <bpt id="p1">*</bpt>Property<ept id="p1">*</ept> parameter can be a new calculated property.</source>
          <target state="translated">O valor de <bpt id="p1">*</bpt>propriedade<ept id="p1">*</ept> parâmetro pode ser uma nova propriedade calculada.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>To create a calculated, property, create a hash table with an Expression key that specifies a string or script block value.</source>
          <target state="translated">Para criar uma propriedade calculada, crie uma tabela de hash com uma chave Expression que especifique um valor de bloco de script ou de cadeia de caracteres.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>CommonParameters</source>
          <target state="translated">CommonParameters</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutVariable, -OutBuffer, -PipelineVariable, -Verbose, -WarningAction, and -WarningVariable.</source>
          <target state="translated">Esse cmdlet oferece suporte aos parâmetros comuns:-Debug, - ErrorAction, - ErrorVariable, - InformationAction, - InformationVariable, - OutVariable,-OutBuffer, - PipelineVariable, - Verbose, - WarningAction e - WarningVariable.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>For more information, see about_CommonParameters (http://go.microsoft.com/fwlink/?LinkID=113216).</source>
          <target state="translated">Para obter mais informações, consulte about_CommonParameters (http://go.microsoft.com/fwlink/?LinkID=113216).</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>INPUTS</source>
          <target state="translated">ENTRADAS</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>System.Management.Automation.PSObject</source>
          <target state="translated">System.Management.Automation.PSObject</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>You can pipe any object to <bpt id="p1">**</bpt>Group-Object<ept id="p1">**</ept>.</source>
          <target state="translated">Você pode direcionar qualquer objeto para <bpt id="p1">**</bpt>Group-Object<ept id="p1">**</ept>.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>OUTPUTS</source>
          <target state="translated">SAÍDAS</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>Microsoft.PowerShell.Commands.GroupInfo or System.Collections.Hashtable</source>
          <target state="translated">Microsoft.PowerShell.Commands.GroupInfo ou System.Collections.Hashtable</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>When you use the <bpt id="p1">*</bpt>AsHashTable<ept id="p1">*</ept> parameter, <bpt id="p2">**</bpt>Group-Object<ept id="p2">**</ept> returns a hash table.</source>
          <target state="translated">Quando você usa o <bpt id="p1">*</bpt>AsHashTable<ept id="p1">*</ept> parâmetro <bpt id="p2">**</bpt>Group-Object<ept id="p2">**</ept> retorna uma tabela de hash.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>Otherwise, it returns a <bpt id="p1">**</bpt>GroupInfo<ept id="p1">**</ept> object.</source>
          <target state="translated">Caso contrário, ela retorna um <bpt id="p1">**</bpt>GroupInfo<ept id="p1">**</ept> objeto.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>NOTES</source>
          <target state="translated">ANOTAÇÕES</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>You can also use the <bpt id="p1">*</bpt>GroupBy<ept id="p1">*</ept> parameter of the formatting cmdlets (such as Format-Table <ph id="ph1">\[</ph>m2<ph id="ph2">\]</ph> and Format-List <ph id="ph3">\[</ph>m2<ph id="ph4">\]</ph>) to group objects.</source>
          <target state="translated">Você também pode usar o <bpt id="p1">*</bpt>GroupBy<ept id="p1">*</ept> parâmetro dos cmdlets de formatação (como Format-Table <ph id="ph1">\[</ph>m2<ph id="ph2">\]</ph> e Format-List <ph id="ph3">\[</ph>m2<ph id="ph4">\]</ph>) para objetos de grupo.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>Unlike <bpt id="p1">**</bpt>Group-Object<ept id="p1">**</ept>, which creates a single table with a row for each property value, the <bpt id="p2">*</bpt>GroupBy<ept id="p2">*</ept> parameters create a table for each property value with a row for each item that has the property value.</source>
          <target state="translated">Ao contrário de <bpt id="p1">**</bpt>Group-Object<ept id="p1">**</ept>, que cria uma única tabela com uma linha para cada valor de propriedade, o <bpt id="p2">*</bpt>GroupBy<ept id="p2">*</ept> parâmetros de criar uma tabela para cada valor de propriedade com uma linha para cada item que tem o valor da propriedade.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Group-Object<ept id="p1">**</ept> does not require that the objects being grouped be of the same Microsoft .NET Framework type.</source>
          <target state="translated"><bpt id="p1">**</bpt>Objeto de grupo<ept id="p1">**</ept> não exige que os objetos sendo agrupados sejam do mesmo tipo do Microsoft .NET Framework.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>When grouping objects of different .NET Framework types, <bpt id="p1">**</bpt>Group-Object<ept id="p1">**</ept> uses the following rules:</source>
          <target state="translated">Ao agrupar objetos de diferentes tipos de .NET Framework, <bpt id="p1">**</bpt>Group-Object<ept id="p1">**</ept> usa as seguintes regras:</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>Same Property Names and Types.</source>
          <target state="translated">Mesmos nomes de propriedade e tipos.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>If the objects have a property with the specified name, and the property values have the same .NET Framework type, the property values are grouped by using the same rules that would be used for objects of the same type.</source>
          <target state="translated">Se os objetos têm uma propriedade com o nome especificado e os valores de propriedade o mesmo tipo .NET Framework, os valores de propriedade são agrupados usando as mesmas regras que devem ser usadas para objetos do mesmo tipo.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>Same Property Names, Different Types.</source>
          <target state="translated">Mesmos nomes de propriedade, tipos diferentes.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>If the objects have a property with the specified name, but the property values have a different .NET Framework type in different objects, <bpt id="p1">**</bpt>Group-Object<ept id="p1">**</ept> uses the .NET Framework type of the first occurrence of the property as the .NET Framework type for that property group.</source>
          <target state="translated">Se os objetos têm uma propriedade com o nome especificado, mas os valores de propriedade tem um tipo diferente do .NET Framework em objetos diferentes, <bpt id="p1">**</bpt>Group-Object<ept id="p1">**</ept> usa o tipo de .NET Framework da primeira ocorrência da propriedade como o tipo do .NET Framework para esse grupo de propriedade.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>When an object has a property with a different type, the property value is converted to the type for that group.</source>
          <target state="translated">Quando um objeto tem uma propriedade com um tipo diferente, o valor da propriedade é convertido no tipo daquele grupo.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>If the type conversion fails, the object is not included in the group.</source>
          <target state="translated">Se a conversão de tipo falhar, o objeto não está incluído no grupo.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>Missing Properties.</source>
          <target state="translated">Propriedades ausentes.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>Objects that do not have a specified property are considered ungroupable.</source>
          <target state="translated">Objetos que não têm uma propriedade especificada são considerados não agrupáveis.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>Ungroupable objects appear in the final <bpt id="p1">**</bpt>GroupInfo<ept id="p1">**</ept> object output in a group named AutomationNull.Value.</source>
          <target state="translated">Objetos não agrupáveis aparecem no final <bpt id="p1">**</bpt>GroupInfo<ept id="p1">**</ept> objeto saída em um grupo denominado Automationnull.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>RELATED LINKS</source>
          <target state="translated">LINKS RELACIONADOS</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>Compare-Object</source>
          <target state="translated">Compare-Object</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>ForEach-Object</source>
          <target state="translated">ForEach-Object</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>Where-Object</source>
          <target state="translated">Where-Object</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>Measure-Object</source>
          <target state="translated">Measure-Object</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>New-Object</source>
          <target state="translated">Novo objeto</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>Select-Object</source>
          <target state="translated">Select-Object</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>Sort-Object</source>
          <target state="translated">Sort-Object</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>Tee-Object</source>
          <target state="translated">O Tee-Object</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>