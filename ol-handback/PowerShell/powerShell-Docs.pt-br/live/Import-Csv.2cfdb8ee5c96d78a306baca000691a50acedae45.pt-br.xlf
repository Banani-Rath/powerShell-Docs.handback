<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="pt-br">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-1c394fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">e747224a913bf28c66dc4903b7b25ea3b9d4a8c6</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">reference\3.0\Microsoft.PowerShell.Utility\Import-Csv.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions" />
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">a16087a06259b6379e5faca3521100a11625abc4</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">61a9c1a3601224d64a9993225a8548cad3c85b72</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>powershell, cmdlet</source>
          <target state="translated">PowerShell, cmdlet</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Import-Csv</source>
          <target state="translated">Import-Csv</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Import-Csv</source>
          <target state="translated">Import-Csv</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>SYNOPSIS</source>
          <target state="translated">SINOPSE</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Creates table-like custom objects from the items in a CSV file.</source>
          <target state="translated">Cria objetos personalizados em formato de tabela por meio dos itens em um arquivo CSV.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>SYNTAX</source>
          <target state="translated">SINTAXE</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Delimiter (Default)</source>
          <target state="translated">Delimitador (padrão)</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>UseCulture</source>
          <target state="translated">parâmetro</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>DESCRIPTION</source>
          <target state="translated">DESCRIÇÃO</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>Import-Csv<ept id="p1">**</ept> cmdlet creates table-like custom objects from the items in CSV files.</source>
          <target state="translated">O <bpt id="p1">**</bpt>Import-Csv<ept id="p1">**</ept> cmdlet cria objetos personalizados da tabela de itens em arquivos CSV.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Each column in the CSV file becomes a property of the custom object and  the items in rows become the property values.</source>
          <target state="translated">Cada coluna no arquivo CSV torna-se uma propriedade do objeto personalizado e os itens nas linhas tornam-se os valores de propriedade.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Import-Csv<ept id="p1">**</ept> works on any CSV file, including files that are generated by the Export-Csv cmdlet.</source>
          <target state="translated"><bpt id="p1">**</bpt>Import-Csv<ept id="p1">**</ept> funciona em qualquer arquivo CSV, incluindo os arquivos que são gerados pelo cmdlet Export-Csv.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>You can use the parameters of the <bpt id="p1">**</bpt>Import-Csv<ept id="p1">**</ept> cmdlet to specify the column header row and the item delimiter, or direct <bpt id="p2">**</bpt>Import-Csv<ept id="p2">**</ept> to use the list separator for the current culture as the item delimiter.</source>
          <target state="translated">Você pode usar os parâmetros do <bpt id="p1">**</bpt>Import-Csv<ept id="p1">**</ept> cmdlet para especificar a linha de cabeçalho de coluna e o delimitador de item ou direcionar <bpt id="p2">**</bpt>Import-Csv<ept id="p2">**</ept> para usar o separador de lista para a cultura atual como o delimitador de item.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>You can also use the ConvertTo-Csv and ConvertFrom-Csv cmdlets to convert objects to CSV strings (and back).</source>
          <target state="translated">Você também pode usar os cmdlets ConvertTo-Csv e ConvertFrom-Csv para converter objetos em cadeias de caracteres CSV (e vice-versa).</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>These cmdlets are the same as the <bpt id="p1">**</bpt>Export-CSV<ept id="p1">**</ept> and <bpt id="p2">**</bpt>Import-Csv<ept id="p2">**</ept> cmdlets, except that they do not deal with files.</source>
          <target state="translated">Esses cmdlets são os mesmos que os <bpt id="p1">**</bpt>Export-CSV<ept id="p1">**</ept> e <bpt id="p2">**</bpt>Import-Csv<ept id="p2">**</ept> cmdlets, exceto pelo fato de não lidarem com arquivos.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Beginning in Windows PowerShell 3.0, if a header row entry in a CSV file contains an empty or null value, Windows PowerShell inserts a default header row name and displays a warning message.</source>
          <target state="translated">A partir do Windows PowerShell 3.0, se uma entrada de linha de cabeçalho em um arquivo CSV contém um valor vazio ou nulo, o Windows PowerShell insere um nome de linha de cabeçalho padrão e exibe uma mensagem de aviso.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>In previous versions of Windows PowerShell, if a header row entry in a CSV file contains an empty or null value, the <bpt id="p1">**</bpt>Import-Csv<ept id="p1">**</ept> command fails.</source>
          <target state="translated">Nas versões anteriores do Windows PowerShell, se uma entrada de linha de cabeçalho em um arquivo CSV contém um valor vazio ou nulo, o <bpt id="p1">**</bpt>Import-Csv<ept id="p1">**</ept> comando falhará.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>EXAMPLES</source>
          <target state="translated">EXEMPLOS</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>-------------------------- EXAMPLE 1 --------------------------</source>
          <target state="translated">------------------------- EXEMPLO 1 --------------------------</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>This example shows how to export and then import a CSV file of objects.</source>
          <target state="translated">Este exemplo mostra como exportar e então importar um arquivo CSV contendo objetos.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>-------------------------- EXAMPLE 2 --------------------------</source>
          <target state="translated">-------------------------- EXAMPLE 2 --------------------------</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>This example shows how to use the <bpt id="p1">*</bpt>Delimiter<ept id="p1">*</ept> parameter of the Import-Csv cmdlet.</source>
          <target state="translated">Este exemplo mostra como usar o <bpt id="p1">*</bpt>delimitador<ept id="p1">*</ept> parâmetro do cmdlet Import-Csv.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>In this example, the processes are exported to a file that uses a colon (:) as a delimiter.</source>
          <target state="translated">Neste exemplo, os processos são exportados para um arquivo que utiliza dois pontos (:) como um delimitador.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>When importing, the Import-Csv file uses the <bpt id="p1">*</bpt>Delimiter<ept id="p1">*</ept> parameter to indicate the delimiter that is used in the file.</source>
          <target state="translated">Durante a importação, o arquivo Import-Csv usa o <bpt id="p1">*</bpt>delimitador<ept id="p1">*</ept> parâmetro para indicar o delimitador usado no arquivo.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>-------------------------- EXAMPLE 3 --------------------------</source>
          <target state="translated">-------------------------- EXAMPLE 3 --------------------------</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>This example shows how to use the <bpt id="p1">*</bpt>UseCulture<ept id="p1">*</ept> parameter of the Import-Csv cmdlet.</source>
          <target state="translated">Este exemplo mostra como usar o <bpt id="p1">*</bpt>UseCulture<ept id="p1">*</ept> parâmetro do cmdlet Import-Csv.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>The first command imports the objects in the Processes.csv file into the $p variable.</source>
          <target state="translated">O primeiro comando importa os objetos contidos no arquivo Processes.csv para a variável $p.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>It uses the <bpt id="p1">*</bpt>UseCulture<ept id="p1">*</ept> parameter to direct Import-Csv to use the list separator defined for the current culture.</source>
          <target state="translated">Ele usa o <bpt id="p1">*</bpt>UseCulture<ept id="p1">*</ept> parâmetro para direcionar o Import-Csv, use o separador de lista definido para a cultura atual.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>The second command displays the list separator for the current culture.</source>
          <target state="translated">O segundo comando exibe o separador de lista para a cultura atual.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>It uses the Get-Culture cmdlet to get the current culture.</source>
          <target state="translated">Ele usa o cmdlet Get-Culture para obter a cultura atual.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>It uses the dot (.) method to get the TextInfo property of the current culture and the ListSeparator property of the object in TextInfo.</source>
          <target state="translated">Ele usa o método de ponto (.) para obter a propriedade TextInfo da cultura atual e a propriedade ListSeparator do objeto em TextInfo.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>In this example, the command returns a comma.</source>
          <target state="translated">Neste exemplo, o comando retorna uma vírgula.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>-------------------------- EXAMPLE 4 --------------------------</source>
          <target state="translated">-------------------------- EXAMPLE 4 --------------------------</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>This example shows how to use the Header parameter of Import-Csv to change the names of properties in the resulting imported object.</source>
          <target state="translated">Este exemplo mostra como usar o parâmetro Header do Import-Csv para alterar os nomes das propriedades no objeto importado resultante.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>-------------------------- EXAMPLE 5 --------------------------</source>
          <target state="translated">-------------------------- EXAMPLE 5 --------------------------</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>This example shows how to create a custom object in Windows PowerShell by using a CSV file.</source>
          <target state="translated">Este exemplo mostra como criar um objeto personalizado no Windows PowerShell pelo uso de um arquivo CSV.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>-------------------------- EXAMPLE 6 --------------------------</source>
          <target state="translated">------------------------- EXEMPLO 6 --------------------------</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>This example shows how the <bpt id="p1">**</bpt>Import-Csv<ept id="p1">**</ept> cmdlet in Windows PowerShell 3.0 responds when the header row in a CSV file includes a null or empty value.</source>
          <target state="translated">Este exemplo mostra como o <bpt id="p1">**</bpt>Import-Csv<ept id="p1">**</ept> cmdlet no Windows PowerShell 3.0 responde quando a linha de cabeçalho em um arquivo CSV inclui um valor nulo ou vazio.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Import-Csv<ept id="p1">**</ept> substitutes a default name for the header row.</source>
          <target state="translated"><bpt id="p1">**</bpt>Import-Csv<ept id="p1">**</ept> substitui um nome padrão para a linha de cabeçalho.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>The default name becomes the name of the property of the object that <bpt id="p1">**</bpt>Import-Csv<ept id="p1">**</ept> returns.</source>
          <target state="translated">O nome padrão torna-se o nome da propriedade do objeto que <bpt id="p1">**</bpt>Import-Csv<ept id="p1">**</ept> retorna.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>PARAMETERS</source>
          <target state="translated">PARÂMETROS</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>-Delimiter</source>
          <target state="translated">-Delimitador</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Specifies the delimiter that separates the property values in the CSV file.</source>
          <target state="translated">Especifica o delimitador que separa os valores de propriedade no arquivo CSV.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>The default is a comma (,).</source>
          <target state="translated">O padrão é uma vírgula (,).</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Enter a character, such as a colon (:).</source>
          <target state="translated">Insira um caractere, como dois pontos (:).</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>To specify a semicolon (;), enclose it in quotation marks.</source>
          <target state="translated">Para especificar um ponto e vírgula (;), coloque-o entre aspas.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>If you specify a character other than the actual string delimiter in the file, Import-Csv cannot create objects from the CSV strings.</source>
          <target state="translated">Se você especificar um caractere diferente do delimitador de cadeia de caracteres real no arquivo, o Import-Csv não poderá criar objetos por meio de cadeias de caracteres CSV.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Instead, it returns the strings.</source>
          <target state="translated">Em vez disso, ele retorna as cadeias de caracteres.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>-Encoding</source>
          <target state="translated">-Codificação</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Specifies the type of character encoding that was used in the CSV file.</source>
          <target state="translated">Especifica o tipo de codificação de caracteres usada no arquivo CSV.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Valid values are Unicode, UTF7, UTF8, ASCII, UTF32, BigEndianUnicode, Default, and OEM.</source>
          <target state="translated">Os valores válidos são Unicode, UTF7, UTF8, ASCII, UTF32, BigEndianUnicode, Padrão e OEM.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>The default is ASCII.</source>
          <target state="translated">O padrão é ASCII.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>This parameter is introduced in Windows PowerShell 3.0.</source>
          <target state="translated">Este parâmetro é introduzido no Windows PowerShell 3.0.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>-Header</source>
          <target state="translated">-Cabeçalho</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Specifies an alternate column header row for the imported file.</source>
          <target state="translated">Especifica uma linha de cabeçalho de coluna alternativo para o arquivo importado.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>The column header determines the names of the properties of the object that Import-Csv creates.</source>
          <target state="translated">O cabeçalho de coluna determina os nomes das propriedades do objeto que o Import-Csv cria.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Enter a comma-separated list of the column headers.</source>
          <target state="translated">Digite uma lista dos cabeçalhos de coluna separados por vírgulas.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Enclose each item in quotation marks (single or double).</source>
          <target state="translated">Coloque cada item entre aspas (simples ou duplas).</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>Do not enclose the header string in quotation marks.</source>
          <target state="translated">Não coloque a cadeia de caracteres do cabeçalho entre aspas.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>If you enter fewer column headers than there are columns, the remaining columns will have no header.</source>
          <target state="translated">Se você inserir um número de cabeçalhos de coluna menor que o número de colunas existentes, as colunas restantes não terão nenhum cabeçalho.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>If you enter more headers than there are columns, the extra headers are ignored.</source>
          <target state="translated">Se você inserir um número de cabeçalhos de coluna maior que o número de colunas existentes, os cabeçalhos adicionais são ignorados.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>When using the <bpt id="p1">*</bpt>Header<ept id="p1">*</ept> parameter, delete the original header row from the CSV file.</source>
          <target state="translated">Ao usar o <bpt id="p1">*</bpt>cabeçalho<ept id="p1">*</ept> parâmetro, exclua a linha de cabeçalho original do arquivo CSV.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>Otherwise, Import-Csv creates an extra object from the items in the header row.</source>
          <target state="translated">Caso contrário, o Import-Csv cria um objeto extra por meio dos itens na linha de cabeçalho.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>-Path</source>
          <target state="translated">-Path</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>Specifies the path to the CSV file to import.</source>
          <target state="translated">Especifica o caminho para o arquivo CSV a importar.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>You can also pipe a path to Import-Csv.</source>
          <target state="translated">Também é possível direcionar um caminho para o Import-Csv.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>-UseCulture</source>
          <target state="translated">-UseCulture</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>Use the list separator for the current culture as the item delimiter.</source>
          <target state="translated">Utilize o separador de lista para a cultura atual como o delimitador de item.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>The default is a comma (,).</source>
          <target state="translated">O padrão é uma vírgula (,).</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>To find the list separator for a culture, use the following command: (Get-Culture).TextInfo.ListSeparator.</source>
          <target state="translated">Para localizar o separador de lista para uma cultura, use o seguinte comando: (Get-Culture). TextInfo.ListSeparator.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>If you specify a character other than the delimiter used in the CSV strings, ConvertFrom-CSV cannot create objects from the CSV strings.</source>
          <target state="translated">Se você especificar um caractere diferente do delimitador usado nas cadeias CSV, o ConvertFrom-CSV não poderá criar objetos por meio das cadeias de caracteres CSV.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>Instead, it returns the strings.</source>
          <target state="translated">Em vez disso, ele retorna as cadeias de caracteres.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>-LiteralPath</source>
          <target state="translated">-LiteralPath</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>Specifies the path to the CSV file to import.</source>
          <target state="translated">Especifica o caminho para o arquivo CSV a importar.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>Unlike <bpt id="p1">**</bpt>Path<ept id="p1">**</ept>, the value of the <bpt id="p2">**</bpt>LiteralPath<ept id="p2">**</ept> parameter is used exactly as it is typed.</source>
          <target state="translated">Ao contrário de <bpt id="p1">**</bpt>caminho<ept id="p1">**</ept>, o valor da <bpt id="p2">**</bpt>LiteralPath<ept id="p2">**</ept> parâmetro é usado exatamente como digitado.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>No characters are interpreted as wildcards.</source>
          <target state="translated">Nenhum caractere é interpretado como caractere curinga.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>If the path includes escape characters, enclose it in single quotation marks.</source>
          <target state="translated">Se o caminho incluir caracteres de escape, coloque-o entre aspas simples.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>Single quotation marks tell Windows PowerShell not to interpret any characters as escape sequences.</source>
          <target state="translated">As aspas simples instruem o Windows PowerShell a nunca interpretar caracteres como sequências de escape.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>CommonParameters</source>
          <target state="translated">CommonParameters</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutVariable, -OutBuffer, -PipelineVariable, -Verbose, -WarningAction, and -WarningVariable.</source>
          <target state="translated">Esse cmdlet oferece suporte aos parâmetros comuns:-Debug, - ErrorAction, - ErrorVariable, - InformationAction, - InformationVariable, - OutVariable,-OutBuffer, - PipelineVariable, - Verbose, - WarningAction e - WarningVariable.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>For more information, see about_CommonParameters (http://go.microsoft.com/fwlink/?LinkID=113216).</source>
          <target state="translated">Para obter mais informações, consulte about_CommonParameters (http://go.microsoft.com/fwlink/?LinkID=113216).</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>INPUTS</source>
          <target state="translated">ENTRADAS</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>System.String</source>
          <target state="translated">System.String</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>You can pipe a string that contains a path to Import-Csv.</source>
          <target state="translated">É possível direcionar uma cadeia de caracteres que contém um caminho para Import-Csv.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>OUTPUTS</source>
          <target state="translated">SAÍDAS</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>Object.</source>
          <target state="translated">O objeto.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>Import-Csv returns the objects described by the content in the CSV file.</source>
          <target state="translated">O Import-Csv retorna os objetos descritos pelo conteúdo no arquivo CSV.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>NOTES</source>
          <target state="translated">ANOTAÇÕES</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>Because the imported objects are CSV versions of the object type, they are not recognized and formatted by the Windows PowerShell type formatting entries that format the non-CSV versions of the object type.</source>
          <target state="translated">Já que os objetos importados são versões CSV do tipo de objeto, eles não são reconhecidos e formatados pelas entradas de formatação de tipo do Windows PowerShell que formatam as versões não CSV do tipo de objeto.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>The result of an Import-Csv command is a collection of strings that form a table-like custom object.</source>
          <target state="translated">O resultado de um comando Import-Csv é uma coleção de cadeias de caracteres que formam um objeto personalizado em formato de tabela.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>Each row is a separate string, so you can use the Count property of the object to count the table rows.</source>
          <target state="translated">Cada linha é uma cadeia de caracteres separada, então você pode usar a propriedade Count do objeto para contar as linhas da tabela.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>The columns are the properties of the object and items in the rows are the property values.</source>
          <target state="translated">As colunas são as propriedades do objeto e os itens nas linhas são os valores das propriedades.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>The column header row determines the number of columns and the column names.</source>
          <target state="translated">A linha de cabeçalho de coluna determina o número de colunas e os nomes dessas colunas.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>The column names are also the names of the properties of the objects.</source>
          <target state="translated">Os nomes das colunas também são os nomes das propriedades dos objetos.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>The first row is interpreted to be the column headers, unless you use the Header parameter to specify column headers.</source>
          <target state="translated">O conteúdo da primeira linha é interpretado como cabeçalhos de coluna, a menos que você use o parâmetro Header para especificar esses cabeçalhos.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>If any row has more values than the header row, the additional values are ignored.</source>
          <target state="translated">Se uma linha qualquer tiver mais valores que a linha de cabeçalhos, os valores excedentes serão ignorados.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>If the column header row is missing a value or contains a null or empty value, <bpt id="p1">**</bpt>Import-Csv<ept id="p1">**</ept> uses "H" followed by a number for the missing column header and property name.</source>
          <target state="translated">Se a linha de cabeçalho de coluna é um valor ausente ou contém um valor nulo ou vazio, <bpt id="p1">**</bpt>Import-Csv<ept id="p1">**</ept> usa "H" seguido por um número para o nome de propriedade e o cabeçalho de coluna ausente.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>In the CSV file, each object is represented by a comma-separated list of the property values of the object.</source>
          <target state="translated">No arquivo CSV, cada objeto é representado por uma lista separada por vírgulas dos valores de propriedade do objeto.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>The property values are converted to strings (by using the ToString() method of the object), so they are generally represented by the name of the property value.</source>
          <target state="translated">Os valores da propriedade são convertidos em cadeias de caracteres (usando o método ToString() do objeto), de modo que são geralmente representados pelo nome do valor da propriedade.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>Export-CSV does not export the methods of the object.</source>
          <target state="translated">O Export-CSV não exporta os métodos do objeto.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>RELATED LINKS</source>
          <target state="translated">LINKS RELACIONADOS</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>ConvertFrom-Csv</source>
          <target state="translated">ConvertFrom-Csv</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>ConvertTo-Csv</source>
          <target state="translated">ConvertTo-Csv</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>Export-Csv</source>
          <target state="translated">Export-Csv</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>