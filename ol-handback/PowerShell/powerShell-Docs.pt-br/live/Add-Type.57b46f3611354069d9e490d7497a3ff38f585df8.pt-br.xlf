<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="pt-br">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-1c394fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">3477e1c213de5436e48d4a0ac4790675f11a2d5a</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">reference\3.0\Microsoft.PowerShell.Utility\Add-Type.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions" />
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">2ffcff4b17d50fd06b8fc92524b33b41f681634a</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">19a9847c5552b076d1bbec6a9620b9f687c78dc1</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>powershell, cmdlet</source>
          <target state="translated">PowerShell, cmdlet</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Add-Type</source>
          <target state="translated">Adicionar tipo</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Add-Type</source>
          <target state="translated">Adicionar tipo</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>SYNOPSIS</source>
          <target state="translated">SINOPSE</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Adds a Microsoft .NET Framework type (a class) to a Windows PowerShell session.</source>
          <target state="translated">Adiciona um tipo (uma classe) do Microsoft .NET Framework a uma sessão do Windows PowerShell.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>SYNTAX</source>
          <target state="translated">SINTAXE</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>FromSource (Default)</source>
          <target state="translated">FromSource (padrão)</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>FromMember</source>
          <target state="translated">FromMember</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>FromPath</source>
          <target state="translated">FromPath</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>FromLiteralPath</source>
          <target state="translated">FromLiteralPath</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>FromAssemblyName</source>
          <target state="translated">FromAssemblyName</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>DESCRIPTION</source>
          <target state="translated">DESCRIÇÃO</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>Add-Type<ept id="p1">**</ept> cmdlet lets you define a .NET Framework class in your Windows PowerShell session.</source>
          <target state="translated">O <bpt id="p1">**</bpt>Add-Type<ept id="p1">**</ept> cmdlet permite que você defina uma classe do .NET Framework em sua sessão do Windows PowerShell.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>You can then instantiate objects (by using the New-Object cmdlet) and use the objects, just as you would use any .NET Framework object.</source>
          <target state="translated">Em seguida, você pode instanciar objetos (usando o cmdlet New-Object) e usar os objetos, assim como você usaria qualquer objeto do .NET Framework.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>If you add an <bpt id="p1">**</bpt>Add-Type<ept id="p1">**</ept> command to your Windows PowerShell profile, the class is available in all Windows PowerShell sessions.</source>
          <target state="translated">Se você adicionar um <bpt id="p1">**</bpt>Add-Type<ept id="p1">**</ept> comando ao seu perfil do Windows PowerShell, a classe está disponível em todas as sessões do Windows PowerShell.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>You can specify the type by specifying an existing assembly or source code files, or you can specify the source code inline or saved in a variable.</source>
          <target state="translated">Você pode especificar o tipo especificando um assembly existente ou arquivos de código-fonte, ou você pode especificar o código-fonte embutido ou salvo em uma variável.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>You can even specify only a method and <bpt id="p1">**</bpt>Add-Type<ept id="p1">**</ept> will define and generate the class.</source>
          <target state="translated">Você pode especificar apenas um método e <bpt id="p1">**</bpt>Add-Type<ept id="p1">**</ept> irá definir e gerar a classe.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>You can use this feature to make Platform Invoke (P/Invoke) calls to unmanaged functions in Windows PowerShell.</source>
          <target state="translated">Você pode usar esse recurso para fazer chamadas de invocação de plataforma (P/Invoke) para funções não gerenciadas do Windows PowerShell.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>If you specify source code, <bpt id="p1">**</bpt>Add-Type<ept id="p1">**</ept> compiles the specified source code and generates an in-memory assembly that contains the new .NET Framework types.</source>
          <target state="translated">Se você especificar o código-fonte, <bpt id="p1">**</bpt>Add-Type<ept id="p1">**</ept> compila o código-fonte especificado e gera um assembly na memória que contém os novos tipos de .NET Framework.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>You can use the parameters of <bpt id="p1">**</bpt>Add-Type<ept id="p1">**</ept> to specify an alternate language and compiler (CSharp is the default), compiler options, assembly dependencies, the class namespace, the names of the type, and the resulting assembly.</source>
          <target state="translated">Você pode usar os parâmetros de <bpt id="p1">**</bpt>Add-Type<ept id="p1">**</ept> para especificar um idioma alternativo e compilador (CSharp é o padrão), opções de compilador, dependências do assembly, o namespace da classe, os nomes do tipo e o assembly resultante.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>EXAMPLES</source>
          <target state="translated">EXEMPLOS</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>-------------------------- EXAMPLE 1 --------------------------</source>
          <target state="translated">------------------------- EXEMPLO 1 --------------------------</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>These commands add the BasicTest class to the session by specifying source code that is stored in a variable.</source>
          <target state="translated">Esses comandos adicionam a classe BasicTest à sessão, especificando o código-fonte armazenado em uma variável.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>The type has a static method called Add and a non-static method called Multiply.</source>
          <target state="translated">O tipo tem um método estático chamado Add e um método não estático chamado Multiply.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>The first command stores the source code for the class in the $source variable.</source>
          <target state="translated">O primeiro comando armazena o código-fonte para a classe na variável $source.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>The second command uses the <bpt id="p1">**</bpt>Add-Type<ept id="p1">**</ept> cmdlet to add the class to the session.</source>
          <target state="translated">O segundo comando usa o <bpt id="p1">**</bpt>Add-Type<ept id="p1">**</ept> cmdlet para adicionar a classe para a sessão.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Because it is using inline source code, the command uses the <bpt id="p1">**</bpt>TypeDefinition<ept id="p1">**</ept> parameter to specify the code in the $source variable.</source>
          <target state="translated">Porque ele está usando o código-fonte embutido, o comando usa o <bpt id="p1">**</bpt>TypeDefinition<ept id="p1">**</ept> parâmetro para especificar o código na variável $source.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>The remaining commands use the new class.</source>
          <target state="translated">Os comandos restantes usam a nova classe.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>The third command calls the Add static method of the BasicTest class.</source>
          <target state="translated">O terceiro comando chama o método estático Add da classe BasicTest.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>It uses the double-colon characters (::) to specify a static member of the class.</source>
          <target state="translated">Ele usa os caracteres de dois-pontos duplos (::) para especificar um membro estático da classe.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>The fourth command uses the <bpt id="p1">**</bpt>New-Object<ept id="p1">**</ept> cmdlet to instantiate an instance of the BasicTest class.</source>
          <target state="translated">O quarto comando usa o <bpt id="p1">**</bpt>New-Object<ept id="p1">**</ept> cmdlet para criar uma instância da classe BasicTest.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>It saves the new object in the $basicTestObject variable.</source>
          <target state="translated">Ele salva o novo objeto na variável $basicTestObject.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>The fifth command uses the Multiply method of $basicTestObject.</source>
          <target state="translated">O quinto comando usa o método Multiply de $basicTestObject.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>-------------------------- EXAMPLE 2 --------------------------</source>
          <target state="translated">-------------------------- EXAMPLE 2 --------------------------</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>These commands use the Get-Member cmdlet to examine the objects that the <bpt id="p1">**</bpt>Add-Type<ept id="p1">**</ept> and New-Object cmdlets created in the previous example.</source>
          <target state="translated">Esses comandos usam o cmdlet Get-Member para examinar os objetos que o <bpt id="p1">**</bpt>Add-Type<ept id="p1">**</ept> e os cmdlets New-Object criados no exemplo anterior.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>The first command uses the <bpt id="p1">**</bpt>Get-Member<ept id="p1">**</ept> cmdlet to get the type and members of the BasicTest class that <bpt id="p2">**</bpt>Add-Type<ept id="p2">**</ept> added to the session.</source>
          <target state="translated">O primeiro comando usa o <bpt id="p1">**</bpt>Get-Member<ept id="p1">**</ept> para obter o tipo e os membros de BasicTest classe <bpt id="p2">**</bpt>Add-Type<ept id="p2">**</ept> adicionado à sessão.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>Get-Member<ept id="p1">**</ept> command reveals that it is a <bpt id="p2">**</bpt>System.RuntimeType<ept id="p2">**</ept> object, which is derived from the System.Object class.</source>
          <target state="translated">O <bpt id="p1">**</bpt>Get-Member<ept id="p1">**</ept> comando revela que é um <bpt id="p2">**</bpt>System. RuntimeType<ept id="p2">**</ept> objeto, que é derivado da classe System. Object.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>The second command uses the <bpt id="p1">**</bpt>Static<ept id="p1">**</ept> parameter of the <bpt id="p2">**</bpt>Get-Member<ept id="p2">**</ept> cmdlet to get the static properties and methods of the BasicTest class.</source>
          <target state="translated">O segundo comando usa o <bpt id="p1">**</bpt>estático<ept id="p1">**</ept> parâmetro o <bpt id="p2">**</bpt>Get-Member<ept id="p2">**</ept> para obter as propriedades e métodos estáticos da classe BasicTest.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>The output shows that the Add method is included.</source>
          <target state="translated">A saída mostra que o método Add está incluído.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>The third command uses the <bpt id="p1">**</bpt>Get-Member<ept id="p1">**</ept> cmdlet to get the members of the object stored in the $BasicTestObject variable.</source>
          <target state="translated">O terceiro comando usa o <bpt id="p1">**</bpt>Get-Member<ept id="p1">**</ept> para obter os membros do objeto armazenado na variável $BasicTestObject.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>This was the object instance that was created by using the <bpt id="p1">**</bpt>New-Object<ept id="p1">**</ept> cmdlet with the $BasicType class.</source>
          <target state="translated">Essa era a instância do objeto que foi criada usando o <bpt id="p1">**</bpt>New-Object<ept id="p1">**</ept> cmdlet com a classe $BasicType.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>The output reveals that the value of the $BasicTestObject variable is an instance of the BasicTest class and that it includes a member called Multiply.</source>
          <target state="translated">O resultado revela que o valor da variável $BasicTestObject é uma instância da classe BasicTest e que ele inclui um membro chamado Multiply.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>-------------------------- EXAMPLE 3 --------------------------</source>
          <target state="translated">-------------------------- EXAMPLE 3 --------------------------</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>This command adds the classes from the Accessibility assembly to the current session.</source>
          <target state="translated">Este comando adiciona as classes do assembly Accessibility para a sessão atual.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>The command uses the <bpt id="p1">**</bpt>AssemblyName<ept id="p1">**</ept> parameter to specify the name of the assembly.</source>
          <target state="translated">O comando usa o <bpt id="p1">**</bpt>AssemblyName<ept id="p1">**</ept> parâmetro para especificar o nome do assembly.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>The wildcard character allows you to get the correct assembly even when you are not sure of the name or its spelling.</source>
          <target state="translated">O caractere curinga permite que você obtenha o assembly correto, mesmo quando não tiver certeza do nome ou da ortografia.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>The command uses the <bpt id="p1">**</bpt>PassThru<ept id="p1">**</ept> parameter to generate objects that represent the classes that are added to the session, and it saves the objects in the $accType variable.</source>
          <target state="translated">O comando usa o <bpt id="p1">**</bpt>PassThru<ept id="p1">**</ept> parâmetro para gerar objetos que representam as classes que são adicionadas à sessão e salva os objetos na variável $accType.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>-------------------------- EXAMPLE 4 --------------------------</source>
          <target state="translated">-------------------------- EXAMPLE 4 --------------------------</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>This example uses the <bpt id="p1">**</bpt>Add-Type<ept id="p1">**</ept> cmdlet to add the VBFromFile class that is defined in the Hello.vb file to the current session.</source>
          <target state="translated">Este exemplo usa o <bpt id="p1">**</bpt>Add-Type<ept id="p1">**</ept> cmdlet para adicionar a classe VBFromFile definida no arquivo Hello VB para a sessão atual.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>The text of the Hello.vb file is shown in the command output.</source>
          <target state="translated">O texto do arquivo Hello.vb é mostrado na saída do comando.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>The first command uses the <bpt id="p1">**</bpt>Add-Type<ept id="p1">**</ept> cmdlet to add the type defined in the Hello.vb file to the current session.</source>
          <target state="translated">O primeiro comando usa o <bpt id="p1">**</bpt>Add-Type<ept id="p1">**</ept> cmdlet para adicionar o tipo definido no arquivo Hello VB para a sessão atual.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>The command uses the <bpt id="p1">**</bpt>Path<ept id="p1">**</ept> parameter to specify the source file.</source>
          <target state="translated">O comando usa o <bpt id="p1">**</bpt>caminho<ept id="p1">**</ept> para especificar o arquivo de origem.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>The second command calls the SayHello function as a static method of the VBFromFile class.</source>
          <target state="translated">O segundo comando chama a função SayHello como um método estático da classe VBFromFile.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>-------------------------- EXAMPLE 5 --------------------------</source>
          <target state="translated">-------------------------- EXAMPLE 5 --------------------------</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>The commands in this example demonstrate how to call native Windows APIs in Windows PowerShell.</source>
          <target state="translated">Os comandos neste exemplo demonstram como chamar APIs nativas do Windows no Windows PowerShell.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Add-Type<ept id="p1">**</ept> uses the Platform Invoke (P/Invoke) mechanism to call a function in User32.dll from Windows PowerShell.</source>
          <target state="translated"><bpt id="p1">**</bpt>Adicionar tipo<ept id="p1">**</ept> usa o mecanismo P/Invoke () de invocação de plataforma para chamar uma função na User32. dll do Windows PowerShell.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>The first command stores the C# signature of the <bpt id="p1">**</bpt>ShowWindowAsync<ept id="p1">**</ept> function in the $signature variable.</source>
          <target state="translated">O primeiro comando armazena a assinatura do c# a <bpt id="p1">**</bpt>ShowWindowAsync<ept id="p1">**</ept> função na variável $signature.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>(For more information, see "ShowWindowAsync Function" in the MSDN library at http://go.microsoft.com/fwlink/?LinkId=143643.) To ensure that the resulting method will be visible in a Windows PowerShell session, the "public" keyword has been added to the standard signature.</source>
          <target state="translated">(Para obter mais informações, consulte "ShowWindowAsync função" na biblioteca MSDN em http://go.microsoft.com/fwlink/?LinkId=143643.) Para garantir que o método resultante estará visível em uma sessão do Windows PowerShell, a palavra-chave "public" foi adicionada à assinatura padrão.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>The second command uses the <bpt id="p1">**</bpt>Add-Type<ept id="p1">**</ept> cmdlet to add the ShowWindowAsync function to the Windows PowerShell session as a static method of a class that <bpt id="p2">**</bpt>Add-Type<ept id="p2">**</ept> creates.</source>
          <target state="translated">O segundo comando usa o <bpt id="p1">**</bpt>Add-Type<ept id="p1">**</ept> cmdlet para adicionar a função ShowWindowAsync à sessão do Windows PowerShell como um método estático de uma classe que <bpt id="p2">**</bpt>Add-Type<ept id="p2">**</ept> cria.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>The command uses the <bpt id="p1">**</bpt>MemberDefinition<ept id="p1">**</ept> parameter to specify the method definition saved in the $signature variable.</source>
          <target state="translated">O comando usa o <bpt id="p1">**</bpt>MemberDefinition<ept id="p1">**</ept> parâmetro para especificar a definição do método salva na variável $signature.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>The command uses the <bpt id="p1">**</bpt>Name<ept id="p1">**</ept> and <bpt id="p2">**</bpt>Namespace<ept id="p2">**</ept> parameters to specify a name and namespace for the class.</source>
          <target state="translated">O comando usa o <bpt id="p1">**</bpt>nome<ept id="p1">**</ept> e <bpt id="p2">**</bpt>Namespace<ept id="p2">**</ept> parâmetros para especificar um nome e namespace para a classe.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>It uses the <bpt id="p1">**</bpt>PassThru<ept id="p1">**</ept> parameter to generate an object that represents the types, and it saves the object in the $showWindowAsync variable.</source>
          <target state="translated">Ele usa o <bpt id="p1">**</bpt>PassThru<ept id="p1">**</ept> parâmetro para gerar um objeto que representa os tipos e salva o objeto na variável $showWindowAsync.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>The third and fourth commands use the new ShowWindowAsync static method.</source>
          <target state="translated">O terceiro e o quarto comandos usam o novo método estático ShowWindowAsync.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>The method takes two parameters, the window handle, and an integer specifies how the window is to be shown.</source>
          <target state="translated">O método aceita dois parâmetros, o identificador de janela e um inteiro especifica como a janela é mostrada.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>The third command calls ShowWindowAsync.</source>
          <target state="translated">O terceiro comando chama o ShowWindowAsync.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>It uses the Get-Process cmdlet with the $pid automatic variable to get the process that is hosting the current Windows PowerShell session.</source>
          <target state="translated">Ele usa o cmdlet Get-Process com a variável automática $pid para obter o processo que está hospedando a sessão atual do Windows PowerShell.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>Then it uses the <bpt id="p1">**</bpt>MainWindowHandle<ept id="p1">**</ept> property of the current process and a value of "2", which represents the SW_MINIMIZE value.</source>
          <target state="translated">Em seguida, ele usa o <bpt id="p1">**</bpt>MainWindowHandle<ept id="p1">**</ept> propriedade do processo atual e um valor de "2", que representa o valor SW_MINIMIZE.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>To restore the window, the fourth command use a value of "4" for the window position, which represents the SW_RESTORE value.</source>
          <target state="translated">Para restaurar a janela, o quarto comando use um valor de "4" para a posição da janela, que representa o valor SW_RESTORE.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>(SW_MAXIMIZE is 3.)</source>
          <target state="translated">(SW_MAXIMIZE é 3.)</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>-------------------------- EXAMPLE 6 --------------------------</source>
          <target state="translated">------------------------- EXEMPLO 6 --------------------------</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>This command uses the <bpt id="p1">**</bpt>Add-Type<ept id="p1">**</ept> cmdlet to add a method from inline JScript code to the Windows PowerShell session.</source>
          <target state="translated">Esse comando usa o <bpt id="p1">**</bpt>Add-Type<ept id="p1">**</ept> cmdlet para adicionar um método do código JScript embutido à sessão do Windows PowerShell.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>It uses the <bpt id="p1">**</bpt>MemberDefinition<ept id="p1">**</ept> parameter to submit source code stored in the $jsMethod variable.</source>
          <target state="translated">Ele usa o <bpt id="p1">**</bpt>MemberDefinition<ept id="p1">**</ept> parâmetro para enviar o código-fonte armazenado na variável $jsMethod.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>It uses the <bpt id="p1">**</bpt>Name<ept id="p1">**</ept> parameter to specify a name for the class that <bpt id="p2">**</bpt>Add-Type<ept id="p2">**</ept> creates for the method and the <bpt id="p3">**</bpt>Language<ept id="p3">**</ept> parameter to specify the JScript language.</source>
          <target state="translated">Ele usa o <bpt id="p1">**</bpt>nome<ept id="p1">**</ept> para especificar um nome para a classe que <bpt id="p2">**</bpt>Add-Type<ept id="p2">**</ept> cria para o método e o <bpt id="p3">**</bpt>idioma<ept id="p3">**</ept> parâmetro para especificar a linguagem JScript.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>-------------------------- EXAMPLE 7 --------------------------</source>
          <target state="translated">-------------------------- EXAMPLE 7 --------------------------</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>This example shows how to use the <bpt id="p1">**</bpt>Add-Type<ept id="p1">**</ept> cmdlet to add an FSharp code compiler to your Windows PowerShell session.</source>
          <target state="translated">Este exemplo mostra como usar o <bpt id="p1">**</bpt>Add-Type<ept id="p1">**</ept> cmdlet para adicionar um compilador de código FSharp à sua sessão do Windows PowerShell.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>To run this example in Windows PowerShell, you must have the FSharp.Compiler.CodeDom.dll that is installed with the FSharp language.</source>
          <target state="translated">Para executar esse exemplo no Windows PowerShell, você deve ter o FSharp.Compiler.CodeDom.dll que é instalado com a linguagem FSharp.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>The first command in the example uses the <bpt id="p1">**</bpt>Add-Type<ept id="p1">**</ept> cmdlet with the <bpt id="p2">**</bpt>Path<ept id="p2">**</ept> parameter to specify an assembly.</source>
          <target state="translated">O primeiro comando no exemplo usa o <bpt id="p1">**</bpt>Add-Type<ept id="p1">**</ept> cmdlet com o <bpt id="p2">**</bpt>caminho<ept id="p2">**</ept> para especificar um assembly.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Add-Type<ept id="p1">**</ept> gets the types in the assembly.</source>
          <target state="translated"><bpt id="p1">**</bpt>Adicionar tipo<ept id="p1">**</ept> obtém os tipos no assembly.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>The second command uses the New-Object cmdlet to create an instance of the FSharp code provider and saves the result in the $Provider variable.</source>
          <target state="translated">O segundo comando usa o cmdlet New-Object para criar uma instância do provedor de código FSharp e salva o resultado na variável $Provider.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>The third command saves the FSharp code that defines the Loop method in the $FSharpCode variable.</source>
          <target state="translated">O terceiro comando salva o código FSharp que define o método de Loop na variável $FSharpCode.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>The fourth command uses the <bpt id="p1">**</bpt>Add-Type<ept id="p1">**</ept> cmdlet to save the public types defined in $fSharpCode in the $fSharpType variable.</source>
          <target state="translated">O quarto comando usa o <bpt id="p1">**</bpt>Add-Type<ept id="p1">**</ept> cmdlet para salvar os tipos públicos definidos em $fSharpCode na variável $fSharpType.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>TypeDefinition<ept id="p1">**</ept> parameter specifies the source code that defines the types.</source>
          <target state="translated">O <bpt id="p1">**</bpt>TypeDefinition<ept id="p1">**</ept> parâmetro especifica o código-fonte que define os tipos.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>CodeDomProvider<ept id="p1">**</ept> parameter specifies the source code compiler.</source>
          <target state="translated">O <bpt id="p1">**</bpt>CodeDomProvider<ept id="p1">**</ept> parâmetro especifica o compilador de código-fonte.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>PassThru<ept id="p1">**</ept> parameter directs <bpt id="p2">**</bpt>Add-Type<ept id="p2">**</ept> to return a <bpt id="p3">**</bpt>Runtime<ept id="p3">**</ept> object that represents the types and a pipeline operator (|) sends the <bpt id="p4">**</bpt>Runtime<ept id="p4">**</ept> object to the Where-Object cmdlet, which returns only the public types.</source>
          <target state="translated">O <bpt id="p1">**</bpt>PassThru<ept id="p1">**</ept> parâmetro direciona <bpt id="p2">**</bpt>Add-Type<ept id="p2">**</ept> para retornar um <bpt id="p3">**</bpt>tempo de execução<ept id="p3">**</ept> objeto que representa os tipos e um operador de pipeline (|) envia o <bpt id="p4">**</bpt>tempo de execução<ept id="p4">**</ept> objeto para o cmdlet Where-Object, que retorna apenas os tipos públicos.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>Where-Object<ept id="p1">**</ept> cmdlet is used because the FSharp provider generates non-public types to support the resulting public type.</source>
          <target state="translated">O <bpt id="p1">**</bpt>Where-Object<ept id="p1">**</ept> cmdlet é usado como o provedor FSharp gera tipos não públicos para dar suporte a tipo de público resultante.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>The fifth command calls the Loop method as a static method of the type stored in the $fSharpType variable.</source>
          <target state="translated">O quinto comando chama o método Loop como um método estático do tipo armazenado na variável $fSharpType.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>PARAMETERS</source>
          <target state="translated">PARÂMETROS</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>-AssemblyName</source>
          <target state="translated">-AssemblyName</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>Specifies the name of an assembly that includes the types.</source>
          <target state="translated">Especifica o nome de um assembly que inclui os tipos.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Add-Type<ept id="p1">**</ept> takes the types from the specified assembly.</source>
          <target state="translated"><bpt id="p1">**</bpt>Adicionar tipo<ept id="p1">**</ept> usa os tipos do assembly especificado.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>This parameter is required when you are creating types based on an assembly name.</source>
          <target state="translated">Esse parâmetro é necessário ao criar tipos com base em um nome de assembly.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>Enter the full or simple name (also known as the "partial name") of an assembly.</source>
          <target state="translated">Digite o nome completo ou simples (também conhecido como "nome parcial") de um assembly.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>Wildcard characters are permitted in the assembly name.</source>
          <target state="translated">Caracteres curinga são permitidos no nome do assembly.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>If you enter a simple or partial name, <bpt id="p1">**</bpt>Add-Type<ept id="p1">**</ept> resolves it to the full name, and then uses the full name to load the assembly.</source>
          <target state="translated">Se você digitar um nome parcial ou simple, <bpt id="p1">**</bpt>Add-Type<ept id="p1">**</ept> resolve para o nome completo e, em seguida, usa o nome completo para carregar o assembly.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>This parameter does not accept a path or file name.</source>
          <target state="translated">Esse parâmetro não aceita um nome de arquivo ou caminho.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>To enter the path to the assembly dynamic-link library (DLL) file, use the Path parameter.</source>
          <target state="translated">Para inserir o caminho do arquivo da DLL (biblioteca de vínculo dinâmico) do assembly, use o parâmetro Path.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>-CodeDomProvider</source>
          <target state="translated">-CodeDomProvider</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>Specifies a code generator or compiler.</source>
          <target state="translated">Especifica um compilador ou gerador de código.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Add-Type<ept id="p1">**</ept> uses the specified compiler to compile the source code.</source>
          <target state="translated"><bpt id="p1">**</bpt>Adicionar tipo<ept id="p1">**</ept> usa o compilador especificado para compilar o código-fonte.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>The default is the CSharp compiler.</source>
          <target state="translated">O padrão é o compilador CSharp.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>Use this parameter if you are using a language that cannot be specified by using the Language parameter.</source>
          <target state="translated">Use esse parâmetro se estiver usando uma linguagem que não pode ser especificada usando o parâmetro Language.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>The CodeDomProvider that you specify must be able to generate assemblies from source code.</source>
          <target state="translated">O CodeDomProvider que você especificar deve ser capaz de gerar assemblies por meio do código-fonte.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>-CompilerParameters</source>
          <target state="translated">-CompilerParameters</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>Specifies the options for the source code compiler.</source>
          <target state="translated">Especifica as opções para o compilador de código fonte.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>These options are sent to the compiler without revision.</source>
          <target state="translated">Essas opções são enviadas sem revisão para o compilador.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>This parameter allows you to direct the compiler to generate an executable file, embed resources, or set command-line options, such as the "/unsafe" option.</source>
          <target state="translated">Esse parâmetro permite que você direcione o compilador para gerar um arquivo executável, incorporar recursos ou definir opções de linha de comando, como a opção "/unsafe".</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>This parameter implements the <bpt id="p1">**</bpt>CompilerParameters<ept id="p1">**</ept> class (System.CodeDom.Compiler.CompilerParameters).</source>
          <target state="translated">Esse parâmetro implementa o <bpt id="p1">**</bpt>CompilerParameters<ept id="p1">**</ept> classe (CompilerParameters).</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>You cannot use the <bpt id="p1">**</bpt>CompilerParameters<ept id="p1">**</ept> and <bpt id="p2">**</bpt>ReferencedAssemblies<ept id="p2">**</ept> parameters in the same command.</source>
          <target state="translated">Não é possível usar o <bpt id="p1">**</bpt>CompilerParameters<ept id="p1">**</ept> e <bpt id="p2">**</bpt>ReferencedAssemblies<ept id="p2">**</ept> parâmetros no mesmo comando.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>-IgnoreWarnings</source>
          <target state="translated">-IgnoreWarnings</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>Ignores compiler warnings.</source>
          <target state="translated">Ignora os avisos do compilador.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>Use this parameter to prevent <bpt id="p1">**</bpt>Add-Type<ept id="p1">**</ept> from handling compiler warnings as errors.</source>
          <target state="translated">Use este parâmetro para evitar <bpt id="p1">**</bpt>Add-Type<ept id="p1">**</ept> trate avisos do compilador como erros.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>-Language</source>
          <target state="translated">-Idioma</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>Specifies the language that is used in the source code.</source>
          <target state="translated">Especifica a linguagem usada no código-fonte.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>Add-Type<ept id="p1">**</ept> cmdlet uses the value of this parameter to select the appropriate CodeDomProvider.</source>
          <target state="translated">O <bpt id="p1">**</bpt>Add-Type<ept id="p1">**</ept> cmdlet usa o valor desse parâmetro para selecionar o CodeDomProvider apropriado.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>Valid values are "CSharp", "CSharpVersion3", "VisualBasic", and "JScript".</source>
          <target state="translated">Os valores válidos são "CSharp", "CSharpVersion3", "VisualBasic" e "JScript".</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>"CSharp" is the default value.</source>
          <target state="translated">"CSharp" é o valor padrão.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>-LiteralPath</source>
          <target state="translated">-LiteralPath</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>Specifies the path to source code files or assembly DLL files that contain the types.</source>
          <target state="translated">Especifica o caminho para arquivos de código fonte ou arquivos DLL de assembly que contêm os tipos.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>Unlike <bpt id="p1">**</bpt>Path<ept id="p1">**</ept>, the value of the <bpt id="p2">**</bpt>LiteralPath<ept id="p2">**</ept> parameter is used exactly as it is typed.</source>
          <target state="translated">Ao contrário de <bpt id="p1">**</bpt>caminho<ept id="p1">**</ept>, o valor da <bpt id="p2">**</bpt>LiteralPath<ept id="p2">**</ept> parâmetro é usado exatamente como digitado.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>No characters are interpreted as wildcards.</source>
          <target state="translated">Nenhum caractere é interpretado como caractere curinga.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>If the path includes escape characters, enclose it in single quotation marks.</source>
          <target state="translated">Se o caminho incluir caracteres de escape, coloque-o entre aspas simples.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>Single quotation marks tell Windows PowerShell not to interpret any characters as escape sequences.</source>
          <target state="translated">As aspas simples instruem o Windows PowerShell a nunca interpretar caracteres como sequências de escape.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>-MemberDefinition</source>
          <target state="translated">-MemberDefinition</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>Specifies new properties or methods for the class.</source>
          <target state="translated">Especifica novas propriedades ou métodos para a classe.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Add-Type<ept id="p1">**</ept> generates the template code that is required to support the properties or methods.</source>
          <target state="translated"><bpt id="p1">**</bpt>Adicionar tipo<ept id="p1">**</ept> gera o código de modelo que é necessário para suportar as propriedades ou métodos.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>You can use this feature to make Platform Invoke (P/Invoke) calls to unmanaged functions in Windows PowerShell.</source>
          <target state="translated">Você pode usar esse recurso para fazer chamadas de invocação de plataforma (P/Invoke) para funções não gerenciadas do Windows PowerShell.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>For more information, see the examples.</source>
          <target state="translated">Para obter mais informações, consulte os exemplos.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>-Name</source>
          <target state="translated">-Name</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>Specifies the name of the class to create.</source>
          <target state="translated">Especifica o nome da classe a ser criada.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>This parameter is required when generating a type from a member definition.</source>
          <target state="translated">Esse parâmetro é necessário ao gerar um tipo por meio de uma definição de membro.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>The type name and namespace must be unique within a session.</source>
          <target state="translated">O nome do tipo e o namespace devem ser exclusivos dentro de uma sessão.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>You cannot unload a type or change it.</source>
          <target state="translated">Você não pode descarregar um tipo ou alterá-lo.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>If you need to change the code for a type, you must change the name or start a new Windows PowerShell session.</source>
          <target state="translated">Se precisar alterar o código para um tipo, você deve alterar o nome ou iniciar uma nova sessão do Windows PowerShell.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>Otherwise, the command fails.</source>
          <target state="translated">Caso contrário, o comando falhará.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>-Namespace</source>
          <target state="translated">-Namespace</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>Specifies a namespace for the type.</source>
          <target state="translated">Especifica um namespace para o tipo.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>If this parameter is not included in the command, the type is created in the <bpt id="p1">**</bpt>Microsoft.PowerShell.Commands.AddType.AutoGeneratedTypes<ept id="p1">**</ept> namespace.</source>
          <target state="translated">Se esse parâmetro não for incluído no comando, o tipo é criado no <bpt id="p1">**</bpt>autogeneratedtypes<ept id="p1">**</ept> namespace.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>If the parameter is included in the command with an empty string value or a value of $null, the type is generated in the global namespace.</source>
          <target state="translated">Se o parâmetro é incluído no comando com um valor de cadeia de caracteres vazio ou com um valor $null, o tipo é gerado no namespace global.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>-OutputAssembly</source>
          <target state="translated">-OutputAssembly</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>Generates a DLL file for the assembly with the specified name in the location.</source>
          <target state="translated">Gera um arquivo DLL para o assembly com o nome especificado no local.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>Enter a path (optional) and file name.</source>
          <target state="translated">Digite um caminho (opcional) e um nome de arquivo.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source>Wildcard characters are permitted.</source>
          <target state="translated">Caracteres curinga são permitidos.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source>By default, <bpt id="p1">**</bpt>Add-Type<ept id="p1">**</ept> generates the assembly only in memory.</source>
          <target state="translated">Por padrão, <bpt id="p1">**</bpt>Add-Type<ept id="p1">**</ept> gera o assembly apenas na memória.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source>-OutputType</source>
          <target state="translated">-OutputType</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source>Specifies the output type of the output assembly.</source>
          <target state="translated">Especifica o tipo de saída do assembly de saída.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source>Valid values are <bpt id="p1">**</bpt>Library<ept id="p1">**</ept>, <bpt id="p2">**</bpt>ConsoleApplication<ept id="p2">**</ept>, and <bpt id="p3">**</bpt>WindowsApplication<ept id="p3">**</ept>.</source>
          <target state="translated">Os valores válidos são <bpt id="p1">**</bpt>biblioteca<ept id="p1">**</ept>, <bpt id="p2">**</bpt>aplicativo Deconsole<ept id="p2">**</ept>, e <bpt id="p3">**</bpt>WindowsApplication<ept id="p3">**</ept>.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source>For more information about the values, see "OutputAssemblyType Enumeration" in MSDN.</source>
          <target state="translated">Para obter mais informações sobre os valores, consulte "OutputAssemblyType Enumeration" no MSDN.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve">
          <source>By default, no output type is specified.</source>
          <target state="translated">Por padrão, nenhum tipo de saída é especificado.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source>This parameter is valid only when an output assembly is specified in the command.</source>
          <target state="translated">Este parâmetro é válido somente quando um assembly de saída é especificado no comando.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source>-PassThru</source>
          <target state="translated">-PassThru</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source>Returns a <bpt id="p1">**</bpt>System.Runtime<ept id="p1">**</ept> object that represents the types that were added.</source>
          <target state="translated">Retorna um <bpt id="p1">**</bpt>System. Runtime<ept id="p1">**</ept> objeto que representa os tipos que foram adicionados.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve">
          <source>By default, this cmdlet does not generate any output.</source>
          <target state="translated">Por padrão, este cmdlet não gera saída.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve">
          <source>-Path</source>
          <target state="translated">-Path</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve">
          <source>Specifies the path to source code files or assembly DLL files that contain the types.</source>
          <target state="translated">Especifica o caminho para arquivos de código fonte ou arquivos DLL de assembly que contêm os tipos.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve">
          <source>If you submit source code files, <bpt id="p1">**</bpt>Add-Type<ept id="p1">**</ept> compiles the code in the files and creates an in-memory assembly of the types.</source>
          <target state="translated">Se você enviar arquivos de código fonte, <bpt id="p1">**</bpt>Add-Type<ept id="p1">**</ept> compila o código nos arquivos e cria um assembly na memória dos tipos.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve">
          <source>The file name extension specified in the value of Path determines the compiler that <bpt id="p1">**</bpt>Add-Type<ept id="p1">**</ept> uses.</source>
          <target state="translated">A extensão de nome de arquivo especificada no valor do caminho determina o compilador que <bpt id="p1">**</bpt>Add-Type<ept id="p1">**</ept> usa.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve">
          <source>If you submit an assembly file, <bpt id="p1">**</bpt>Add-Type<ept id="p1">**</ept> takes the types from the assembly.</source>
          <target state="translated">Se você enviar um arquivo de assembly <bpt id="p1">**</bpt>Add-Type<ept id="p1">**</ept> usa os tipos do assembly.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve">
          <source>To specify an in-memory assembly or the global assembly cache, use the <bpt id="p1">**</bpt>AssemblyName<ept id="p1">**</ept> parameter.</source>
          <target state="translated">Para especificar um assembly na memória ou cache de assembly global, use o <bpt id="p1">**</bpt>AssemblyName<ept id="p1">**</ept> parâmetro.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve">
          <source>-ReferencedAssemblies</source>
          <target state="translated">-ReferencedAssemblies</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve">
          <source>Specifies the assemblies upon which the type depends.</source>
          <target state="translated">Especifica os assemblies dos quais depende o tipo.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve">
          <source>By default, <bpt id="p1">**</bpt>Add-Type<ept id="p1">**</ept> references System.dll and System.Management.Automation.dll.</source>
          <target state="translated">Por padrão, <bpt id="p1">**</bpt>Add-Type<ept id="p1">**</ept> faz referência a System. dll e Automation.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve">
          <source>The assemblies that you specify by using this parameter are referenced in addition to the default assemblies.</source>
          <target state="translated">Os assemblies que você especificar usando esse parâmetro são referenciados além os assemblies padrão.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve">
          <source>You cannot use the <bpt id="p1">**</bpt>CompilerParameters<ept id="p1">**</ept> and <bpt id="p2">**</bpt>ReferencedAssemblies<ept id="p2">**</ept> parameters in the same command.</source>
          <target state="translated">Não é possível usar o <bpt id="p1">**</bpt>CompilerParameters<ept id="p1">**</ept> e <bpt id="p2">**</bpt>ReferencedAssemblies<ept id="p2">**</ept> parâmetros no mesmo comando.</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve">
          <source>-TypeDefinition</source>
          <target state="translated">-TypeDefinition</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve">
          <source>Specifies the source code that contains the type definitions.</source>
          <target state="translated">Especifica o código-fonte que contém as definições de tipo.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve">
          <source>Enter the source code in a string or here-string, or enter a variable that contains the source code.</source>
          <target state="translated">Insira o código-fonte em uma cadeia de caracteres ou cadeia de caracteres here, ou insira uma variável que contenha o código-fonte.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve">
          <source>For more information about here-strings, see about_Quoting_Rules (http://go.microsoft.com/fwlink/?LinkID=113253).</source>
          <target state="translated">Para obter mais informações sobre here-strings, consulte about_Quoting_Rules (http://go.microsoft.com/fwlink/?LinkID=113253).</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve">
          <source>Include a namespace declaration in your type definition.</source>
          <target state="translated">Inclua uma declaração de namespace em sua definição de tipo.</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve">
          <source>If you omit the namespace declaration, your type might have the same name as another type or the shortcut for another type, causing an unintentional overwrite.</source>
          <target state="translated">Se você omitir a declaração de namespace, seu tipo pode ter o mesmo nome que outro tipo ou o atalho para outro tipo, causando uma substituição não intencional.</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve">
          <source>For example, if you define a type called "Exception", scripts that use "Exception" as the shortcut for <bpt id="p1">**</bpt>System.Exception<ept id="p1">**</ept> will fail.</source>
          <target state="translated">Por exemplo, se você definir um tipo chamado "Exceção", scripts que usam "Exceção" como o atalho para <bpt id="p1">**</bpt>Exception<ept id="p1">**</ept> falhará.</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve">
          <source>-UsingNamespace</source>
          <target state="translated">-UsingNamespace</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve">
          <source>Specifies other namespaces that are required for the class.</source>
          <target state="translated">Especifica outros namespaces que são necessários para a classe.</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve">
          <source>This is much like the Using keyword in C#.</source>
          <target state="translated">Isso é muito semelhante a palavra-chave Using em C#.</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve">
          <source>By default, <bpt id="p1">**</bpt>Add-Type<ept id="p1">**</ept> references the <bpt id="p2">**</bpt>System<ept id="p2">**</ept> namespace.</source>
          <target state="translated">Por padrão, <bpt id="p1">**</bpt>Add-Type<ept id="p1">**</ept> referências a <bpt id="p2">**</bpt>System<ept id="p2">**</ept> namespace.</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve">
          <source>When the <bpt id="p1">**</bpt>MemberDefinition<ept id="p1">**</ept> parameter is used, <bpt id="p2">**</bpt>Add-Type<ept id="p2">**</ept> also references the <bpt id="p3">**</bpt>System.Runtime.InteropServices<ept id="p3">**</ept> namespace by default.</source>
          <target state="translated">Quando o <bpt id="p1">**</bpt>MemberDefinition<ept id="p1">**</ept> parâmetro for usado, <bpt id="p2">**</bpt>Add-Type<ept id="p2">**</ept> também faz referência a <bpt id="p3">**</bpt>System.Runtime.InteropServices<ept id="p3">**</ept> namespace por padrão.</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve">
          <source>The namespaces that you add by using the <bpt id="p1">**</bpt>UsingNamespace<ept id="p1">**</ept> parameter are referenced in addition to the default namespaces.</source>
          <target state="translated">Os namespaces que você adiciona usando o <bpt id="p1">**</bpt>UsingNamespace<ept id="p1">**</ept> são mencionados além dos namespaces padrão.</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve">
          <source>CommonParameters</source>
          <target state="translated">CommonParameters</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve">
          <source>This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutVariable, -OutBuffer, -PipelineVariable, -Verbose, -WarningAction, and -WarningVariable.</source>
          <target state="translated">Esse cmdlet oferece suporte aos parâmetros comuns:-Debug, - ErrorAction, - ErrorVariable, - InformationAction, - InformationVariable, - OutVariable,-OutBuffer, - PipelineVariable, - Verbose, - WarningAction e - WarningVariable.</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve">
          <source>For more information, see about_CommonParameters (http://go.microsoft.com/fwlink/?LinkID=113216).</source>
          <target state="translated">Para obter mais informações, consulte about_CommonParameters (http://go.microsoft.com/fwlink/?LinkID=113216).</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve">
          <source>INPUTS</source>
          <target state="translated">ENTRADAS</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve">
          <source>None</source>
          <target state="translated">Não</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve">
          <source>You cannot pipe objects to Add-Type.</source>
          <target state="translated">Não é possível transferir objetos o Add-Type.</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve">
          <source>OUTPUTS</source>
          <target state="translated">SAÍDAS</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve">
          <source>None or System.Type</source>
          <target state="translated">Nenhum ou System. Type</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve">
          <source>When you use the <bpt id="p1">**</bpt>PassThru<ept id="p1">**</ept> parameter, <bpt id="p2">**</bpt>Add-Type<ept id="p2">**</ept> returns a <bpt id="p3">**</bpt>System.Type<ept id="p3">**</ept> object that represents the new type.</source>
          <target state="translated">Quando você usa o <bpt id="p1">**</bpt>PassThru<ept id="p1">**</ept> parâmetro <bpt id="p2">**</bpt>Add-Type<ept id="p2">**</ept> retorna um <bpt id="p3">**</bpt>Type<ept id="p3">**</ept> objeto que representa o novo tipo.</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve">
          <source>Otherwise, this cmdlet does not generate any output.</source>
          <target state="translated">Caso contrário, este cmdlet não gera nenhuma saída.</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve">
          <source>NOTES</source>
          <target state="translated">ANOTAÇÕES</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve">
          <source>The types that you add exist only in the current session.</source>
          <target state="translated">Os tipos que você adiciona existem apenas na sessão atual.</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve">
          <source>To use the types in all sessions, add them to your Windows PowerShell profile.</source>
          <target state="translated">Para usar os tipos em todas as sessões, adicione-os ao seu perfil do Windows PowerShell.</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve">
          <source>For more information about the profile, see about_Profiles (http://go.microsoft.com/fwlink/?LinkID=113729).</source>
          <target state="translated">Para obter mais informações sobre o perfil, consulte about_Profiles (http://go.microsoft.com/fwlink/?LinkID=113729).</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve">
          <source>Type names (and namespaces) must be unique within a session.</source>
          <target state="translated">Nomes (e namespaces) de tipo devem ser exclusivos dentro de uma sessão.</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve">
          <source>You cannot unload a type or change it.</source>
          <target state="translated">Você não pode descarregar um tipo ou alterá-lo.</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve">
          <source>If you need to change the code for a type, you must change the name or start a new Windows PowerShell session.</source>
          <target state="translated">Se precisar alterar o código para um tipo, você deve alterar o nome ou iniciar uma nova sessão do Windows PowerShell.</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve">
          <source>Otherwise, the command fails.</source>
          <target state="translated">Caso contrário, o comando falhará.</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve">
          <source>The CodeDomProvider class for some languages, such as IronPython and JSharp, does not generate output.</source>
          <target state="translated">A classe CodeDomProvider não gera saída para algumas linguagens, como o IronPython e o JSharp.</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve">
          <source>As a result, types written in these languages cannot be used with <bpt id="p1">**</bpt>Add-Type<ept id="p1">**</ept>.</source>
          <target state="translated">Como resultado, os tipos escritos nessas linguagens não podem ser usados com <bpt id="p1">**</bpt>Add-Type<ept id="p1">**</ept>.</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve">
          <source>This cmdlet is based on the <bpt id="p1">**</bpt>CodeDomProvider<ept id="p1">**</ept> class.</source>
          <target state="translated">Este cmdlet se baseia o <bpt id="p1">**</bpt>CodeDomProvider<ept id="p1">**</ept> classe.</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve">
          <source>For more information about this class, see the Microsoft .NET Framework SDK.</source>
          <target state="translated">Para obter mais informações sobre essa classe, consulte o SDK do Microsoft .NET Framework.</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve">
          <source>RELATED LINKS</source>
          <target state="translated">LINKS RELACIONADOS</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve">
          <source>Add-Member</source>
          <target state="translated">Add-Member</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve">
          <source>New-Object</source>
          <target state="translated">Novo objeto</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>