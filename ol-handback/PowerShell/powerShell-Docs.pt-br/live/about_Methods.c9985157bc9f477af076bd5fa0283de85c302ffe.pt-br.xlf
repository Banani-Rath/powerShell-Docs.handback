<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="pt-br">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-1c394fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">6d59635115104ea0d446e96863147805402a802b</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">reference\4.0\Microsoft.PowerShell.Core\About\about_Methods.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions" />
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">da528ad56c762ad7c9c2abd8777cc6e758400983</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">353d62fac859ec6df86fc2836233a7e9182defea</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>powershell, cmdlet</source>
          <target state="translated">PowerShell, cmdlet</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>about_methods</source>
          <target state="translated">about_methods</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>About methods</source>
          <target state="translated">Sobre métodos</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>about_methods</source>
          <target state="translated">about_methods</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>about_methods</source>
          <target state="translated">about_methods</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>SHORT DESCRIPTION</source>
          <target state="translated">DESCRIÇÃO BREVE</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Describes how to use methods to perform actions on objects in  Windows PowerShell�.</source>
          <target state="translated">Descreve como usar os métodos para executar ações em objetos do Windows PowerShell.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>LONG DESCRIPTION</source>
          <target state="translated">DESCRIÇÃO LONGA</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Windows PowerShell uses objects to represent the items in data stores or the state of the computer.</source>
          <target state="translated">O Windows PowerShell usa objetos para representar os itens em armazenamentos de dados ou o estado do computador.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>For example, FileInfo objects represent the files in file system drives and ProcessInfo objects represent the processes on the computer.</source>
          <target state="translated">Por exemplo, objetos FileInfo representam os arquivos em unidades de sistema de arquivos e objetos ProcessInfo representam os processos no computador.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Objects have properties, which store data about the object, and methods that let you change the object.</source>
          <target state="translated">Objetos têm propriedades que armazenam dados sobre o objeto, e métodos que permitem que você altere o objeto.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>A "method" is a set of instructions that specify an action you can perform on the object.</source>
          <target state="translated">Um "método" é um conjunto de instruções que especificam uma ação que você pode executar no objeto.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>For example, the FileInfo object includes the CopyTo method that copies the file that the FileInfo object represents.</source>
          <target state="translated">Por exemplo, o objeto FileInfo inclui o método CopyTo que copia o arquivo que representa o objeto FileInfo.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>To get the methods of any object, use the Get-Member cmdlet.</source>
          <target state="translated">Para obter os métodos de qualquer objeto, use o cmdlet Get-Member.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Use its MemberType property with a value of "Method".</source>
          <target state="translated">Use a propriedade MemberType com um valor de "Method".</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>The following command gets the methods of process objects.</source>
          <target state="translated">O comando a seguir obtém os métodos dos objetos de processo.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>To perform or "invoke" a method of an object, type a dot (.), the method name, and a set of parentheses "()".</source>
          <target state="translated">Para executar ou "invocar" um método de um objeto, digite um ponto (.), o nome do método e um conjunto de parênteses "()".</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>If the method has arguments, place the argument values inside the parentheses.</source>
          <target state="translated">Se o método tiver argumentos, coloque os valores de argumento entre parênteses.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>The parentheses are required for every method call, even when there are no arguments.</source>
          <target state="translated">Os parênteses são necessários para cada chamada de método, mesmo quando não houver nenhum argumento.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>For example, the following command invokes the Kill method of processes to end the Notepad process on the computer.</source>
          <target state="translated">Por exemplo, o comando a seguir chama o método de eliminação de processos para finalizar o processo do bloco de notas no computador.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>As a result, the instance of Notepad closes.</source>
          <target state="translated">Como resultado, fecha a instância do bloco de notas.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>(The Get-Process command is enclosed in parentheses to insure that it runs before the Kill method is invoked.</source>
          <target state="translated">(O comando Get-Process é colocado entre parênteses para garantir que ele seja executado antes que o método Kill é invocado.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Another very useful process is the Split method of strings.</source>
          <target state="translated">Outro processo muito útil é o método de divisão de cadeias de caracteres.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>The split method takes a delimiter character argument that tells the method where to split the string.</source>
          <target state="translated">O método split leva um argumento de caractere delimitador que informa ao método where dividir a cadeia de caracteres.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>As shown in the previous examples, you can invoke a method on an object that you get by using a command or an object in a variable.</source>
          <target state="translated">Conforme mostrado nos exemplos anteriores, você pode chamar um método em um objeto que você obtém por meio de um comando ou um objeto em uma variável.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Starting in  Windows PowerShell 4.0, method invocation by using dynamic method names is supported.</source>
          <target state="translated">A partir do Windows PowerShell 4.0, invocação de método usando nomes de método dinâmico é suportada.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>LEARNING ABOUT METHODS</source>
          <target state="translated">APRENDER SOBRE MÉTODOS</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>To find definitions of the methods of an object, go to help topic for the object type in MSDN and look for its methods page.</source>
          <target state="translated">Para obter definições dos métodos de um objeto, vá à Ajuda do tópico para o tipo de objeto no MSDN e procure sua página de métodos.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>For example, the following page describes the methods of process objects (System.Diagnostics.Process).</source>
          <target state="translated">Por exemplo, a página a seguir descreve os métodos dos objetos de processo (System.Diagnostics.Process).</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>To determine the arguments of a method, review the method definition, which is like the syntax diagram of a  Windows PowerShell cmdlet.</source>
          <target state="translated">Para determinar os argumentos de um método, examine a definição do método, que é como o diagrama de sintaxe de um cmdlet do Windows PowerShell.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>A method definition might have one or more method signatures, which are like the parameter sets of  Windows PowerShell cmdlets.</source>
          <target state="translated">Uma definição de método pode ter uma ou mais assinaturas de método, que são como conjuntos de parâmetros de cmdlets do Windows PowerShell.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>The signatures show all of the valid formats of commands to invoke the method.</source>
          <target state="translated">As assinaturas de mostram todos os formatos válidos de comandos para invocar o método.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>For example, the CopyTo method of the FileInfo class contains the following two method signatures:</source>
          <target state="translated">Por exemplo, o método CopyTo da classe FileInfo contém as seguintes assinaturas de dois método:</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>The first method signature takes the destination file name (and a path).</source>
          <target state="translated">A primeira assinatura de método utiliza o nome do arquivo de destino (e um caminho).</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>The following example use The first CopyTo method to copy the Final.txt file to the C:\Bin directory.</source>
          <target state="translated">O exemplo a seguir usa o primeiro método CopyTo para copiar o arquivo Final.txt para o diretório C:\Bin.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>The second method signature take a destination file name and a Boolean value that determines whether the destination file should be overwritten, if it already exists.</source>
          <target state="translated">A segunda assinatura de método têm um nome de arquivo de destino e um valor booleano que determina se o arquivo de destino deve ser substituído, se ele já existir.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>The following example use The second CopyTo method to copy the Final.txt file to the C:\Bin directory, and to overwrite existing files.</source>
          <target state="translated">O exemplo a seguir usa o segundo método CopyTo para copiar o arquivo Final.txt para o diretório C:\Bin e para substituir arquivos existentes.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>METHODS OF SCALAR OBJECTS AND COLLECTIONS</source>
          <target state="translated">MÉTODOS DE OBJETOS ESCALARES E COLEÇÕES</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>The methods of one ("scalar") object of a particular type are often different from the methods of a collection of objects of the same type.</source>
          <target state="translated">Os métodos de um objeto ("escalar") de um tipo específico geralmente são diferentes dos métodos de uma coleção de objetos do mesmo tipo.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>For example, every process has a Kill method, but a collection of processes does not have a Kill method.</source>
          <target state="translated">Por exemplo, cada processo tem um método Kill, mas uma coleção de processos não tem um método Kill.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Beginning in  Windows PowerShell 3.0,  Windows PowerShell tries to prevent scripting errors that result from the differing methods of scalar objects and collections.</source>
          <target state="translated">Começando no Windows PowerShell 3.0, Windows PowerShell tenta evitar erros de script que resultam dos métodos diferentes de coleções e objetos escalares.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Beginning in  Windows PowerShell 4.0, collection filtering by using a method syntax is supported.</source>
          <target state="translated">A partir do Windows PowerShell 4.0, filtragem usando uma sintaxe de método de coleta é suportada.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>If you submit a collection, but request a method that exists only on single ("scalar") objects, Windows invokes the method on every object in the collection.</source>
          <target state="translated">Se você enviar uma coleção, mas um método que existe apenas em objetos ("escalares") únicos de solicitação, o Windows chama o método em cada objeto na coleção.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>If the method exists on the individual objects and on the collection,  Windows PowerShell does not alter the result.</source>
          <target state="translated">Se o método existe em objetos individuais e na coleção, o Windows PowerShell não altera o resultado.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>This feature also works on properties of scalar objects and collections.</source>
          <target state="translated">Esse recurso também funciona nas propriedades dos objetos escalares e coleções.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>For more information, see about_Properties.</source>
          <target state="translated">Para obter mais informações, consulte about_Properties.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>EXAMPLES</source>
          <target state="translated">EXEMPLOS</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>The following example runs the Kill method of individual process objects on a collection of process objects.</source>
          <target state="translated">O exemplo a seguir executa o método Kill dos objetos de processo individual em uma coleção de objetos de processo.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>This example works only on  Windows PowerShell 3.0 and later versions of  Windows PowerShell.</source>
          <target state="translated">Este exemplo funciona apenas no Windows PowerShell 3.0 e versões posteriores do Windows PowerShell.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>The first command starts three instances of the Notepad process.</source>
          <target state="translated">O primeiro comando inicia três instâncias do processo do bloco de notas.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>The second command uses the Get-Process command to get all three instance of the Notepad process and save them in the $p variable.</source>
          <target state="translated">O segundo comando usa o comando Get-Process para obter todas as três instâncias do processo do bloco de notas e salvá-los na variável $p.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>The third command uses the Count property of all collections to verify that there are three processes in the $p variable.</source>
          <target state="translated">O terceiro comando usa a propriedade de contagem de todas as coleções para verificar se há três processos na variável $p.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>The fourth command runs the Kill method on all three processes in the $p variable.</source>
          <target state="translated">O quarto comando executa o método Kill em todos os três processos na variável $p.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>This command works even though a collection of processes does not have a Kill method.</source>
          <target state="translated">Esse comando funciona mesmo que uma coleção de processos não tem um método Kill.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>The fifth command uses the Get-Process command to confirm that the Kill command worked.</source>
          <target state="translated">O quinto comando usa o comando Get-Process para confirmar se o comando Kill funcionou.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>To perform the same task on  Windows PowerShell 2.0, use the Foreach-Object cmdlet to run the method on each object in the collection.</source>
          <target state="translated">Para executar a mesma tarefa no Windows PowerShell 2.0, use o cmdlet Foreach-Object para executar o método em cada objeto na coleção.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>SEE ALSO</source>
          <target state="translated">CONSULTE TAMBÉM</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>about_Objects</source>
          <target state="translated">about_Objects</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>about_Properties</source>
          <target state="translated">about_Properties</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>Get-Member</source>
          <target state="translated">Get-Member</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>