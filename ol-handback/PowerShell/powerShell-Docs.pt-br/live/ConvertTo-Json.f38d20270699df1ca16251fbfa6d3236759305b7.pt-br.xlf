<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="pt-br">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-1c394fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">11c2baeb16d97fe7b03782d20d1a45190c3ad4ac</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">reference\5.0\Microsoft.PowerShell.Utility\ConvertTo-Json.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions" />
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f5e57a8a7caa7611a38c581d66c8308291ac36d5</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">9d37067d93fcc713ccb184f561cf7248883eec2e</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>powershell, cmdlet</source>
          <target state="translated">PowerShell, cmdlet</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>ConvertTo-Json</source>
          <target state="translated">ConvertTo-Json</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>ConvertTo-Json</source>
          <target state="translated">ConvertTo-Json</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>SYNOPSIS</source>
          <target state="translated">SINOPSE</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Converts an object to a JSON-formatted string.</source>
          <target state="translated">Converte um objeto em uma cadeia de caracteres formatada em JSON.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>SYNTAX</source>
          <target state="translated">SINTAXE</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>DESCRIPTION</source>
          <target state="translated">DESCRIÇÃO</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>ConvertTo-Json<ept id="p1">**</ept> cmdlet converts any object to a string in JavaScript Object Notation (JSON) format.</source>
          <target state="translated">O <bpt id="p1">**</bpt>ConvertTo-Json<ept id="p1">**</ept> cmdlet Converte qualquer objeto em uma cadeia de caracteres no formato de notação JSON (JavaScript Object).</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>The properties are converted to field names, the field values are converted to property values, and the methods are removed.</source>
          <target state="translated">As propriedades são convertidas em nomes de campo, os valores de campo são convertidos em valores de propriedade e os métodos são removidos.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>You can then use the ConvertFrom-Json cmdlet to convert a JSON-formatted string to a JSON object, which is easily managed in Windows PowerShell.</source>
          <target state="translated">Em seguida, você pode usar o cmdlet ConvertFrom-Json para converter uma cadeia de caracteres formatada em JSON para um objeto JSON, que é facilmente gerenciado no Windows PowerShell.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Many web sites use JSON instead of XML to serialize data for communication between servers and web-based apps.</source>
          <target state="translated">Muitos sites usam JSON em vez de XML para serializar dados para a comunicação entre servidores e aplicativos baseados na web.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>This cmdlet was introduced in Windows PowerShell 3.0.</source>
          <target state="translated">Este cmdlet foi introduzido no Windows PowerShell 3.0.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>EXAMPLES</source>
          <target state="translated">EXEMPLOS</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Example 1: Convert a Calendar object to a JSON string</source>
          <target state="translated">Exemplo 1: Converter um objeto de calendário em uma cadeia de caracteres JSON</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>This command uses the <bpt id="p1">**</bpt>ConvertTo-Json<ept id="p1">**</ept> cmdlet to convert a GregorianCalendar object to a JSON-formatted string.</source>
          <target state="translated">Esse comando usa o <bpt id="p1">**</bpt>ConvertTo-Json<ept id="p1">**</ept> cmdlet para converter um objeto GregorianCalendar em uma cadeia de caracteres formatada em JSON.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Example 2: Compress the JSON output</source>
          <target state="translated">Exemplo 2: Compactar a saída JSON</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>This command shows the effect of using the <bpt id="p1">*</bpt>Compress<ept id="p1">*</ept> parameter of <bpt id="p2">**</bpt>ConvertTo-Json<ept id="p2">**</ept>.</source>
          <target state="translated">Esse comando mostra o efeito de usar o <bpt id="p1">*</bpt>Compactar<ept id="p1">*</ept> parâmetro <bpt id="p2">**</bpt>ConvertTo-Json<ept id="p2">**</ept>.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>The compression affects only the appearance of the string, not its validity.</source>
          <target state="translated">A compactação afeta apenas a aparência da cadeia de caracteres, não sua validade.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Example 3: Convert an object to a JSON string and JSON object</source>
          <target state="translated">Exemplo 3: Converter um objeto em uma cadeia de caracteres JSON e o objeto JSON</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>This command shows how to use the <bpt id="p1">**</bpt>ConvertTo-Json<ept id="p1">**</ept> and <bpt id="p2">**</bpt>ConvertFrom-Json<ept id="p2">**</ept> cmdlets to convert an object to a JSON string and a JSON object.</source>
          <target state="translated">Esse comando mostra como usar o <bpt id="p1">**</bpt>ConvertTo-Json<ept id="p1">**</ept> e <bpt id="p2">**</bpt>ConvertFrom-Json<ept id="p2">**</ept> cmdlets para converter um objeto em uma cadeia de caracteres JSON e um objeto JSON.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>The first command uses the <bpt id="p1">**</bpt>ConvertTo-Json<ept id="p1">**</ept> cmdlet to convert a <bpt id="p2">**</bpt>System.DateTime<ept id="p2">**</ept> object from the Get-Date cmdlet to a JSON-formatted string.</source>
          <target state="translated">O primeiro comando usa o <bpt id="p1">**</bpt>ConvertTo-Json<ept id="p1">**</ept> cmdlet para converter um <bpt id="p2">**</bpt>DateTime<ept id="p2">**</ept> objeto do cmdlet Get-Date para uma cadeia de caracteres formatada em JSON.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>The command uses the Select-Object cmdlet to get all (<bpt id="p1">*</bpt>) of the properties of the <ept id="p1">*</ept><bpt id="p2">*</bpt>DateTime<ept id="p2">*</ept><bpt id="p3">*</bpt> object. The output shows the JSON string that <ept id="p3">*</ept><bpt id="p4">*</bpt>ConvertTo-Json<ept id="p4">*</ept>* returned.</source>
          <target state="translated">O comando usa o cmdlet Select-Object para obter todos os (<bpt id="p1">*</bpt>) das propriedades do <ept id="p1">*</ept><bpt id="p2">*</bpt>DateTime<ept id="p2">*</ept><bpt id="p3">*</bpt> objeto. A saída mostra a cadeia de caracteres JSON <ept id="p3">*</ept><bpt id="p4">*</bpt>ConvertTo-Json<ept id="p4">*</ept>* retornado.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>The second command uses <bpt id="p1">**</bpt>ConvertFrom-Json<ept id="p1">**</ept> to convert the JSON string to a JSON object.</source>
          <target state="translated">O segundo comando usa <bpt id="p1">**</bpt>ConvertFrom-Json<ept id="p1">**</ept> para converter a cadeia de caracteres JSON para um objeto JSON.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Example 4: Convert a PowerShell Help file to JSON format</source>
          <target state="translated">Exemplo 4: Converter um arquivo de Ajuda do PowerShell em formato JSON</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>This command uses the <bpt id="p1">**</bpt>ConvertTo-Json<ept id="p1">**</ept> cmdlet to convert a Windows PowerShell Help file from XML format to JSON format.</source>
          <target state="translated">Esse comando usa o <bpt id="p1">**</bpt>ConvertTo-Json<ept id="p1">**</ept> cmdlet para converter um arquivo de Ajuda do Windows PowerShell do formato XML em formato JSON.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>You can use a command like this to use the Help topic content in a web service application.</source>
          <target state="translated">Você pode usar um comando como este para usar o conteúdo do tópico da Ajuda em um aplicativo de serviço web.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>PARAMETERS</source>
          <target state="translated">PARÂMETROS</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>-Compress</source>
          <target state="translated">-Compactar</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Omits white space and indented formatting in the output string.</source>
          <target state="translated">Omite o espaço em branco e a formatação recuada na cadeia de saída.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>-Depth</source>
          <target state="translated">-Depth</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Specifies how many levels of contained objects are included in the JSON representation.</source>
          <target state="translated">Especifica quantos níveis de objetos contidos estão incluídos na representação JSON.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>The default value is 2.</source>
          <target state="translated">O valor padrão é 2.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>-InputObject</source>
          <target state="translated">-InputObject</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Specifies the objects to convert to JSON format.</source>
          <target state="translated">Especifica os objetos para converter em formato JSON.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Enter a variable that contains the objects, or type a command or expression that gets the objects.</source>
          <target state="translated">Insira uma variável que contém os objetos ou digite um comando ou uma expressão que obtém os objetos.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>You can also pipe an object to <bpt id="p1">**</bpt>ConvertTo-Json<ept id="p1">**</ept>.</source>
          <target state="translated">Também é possível redirecionar um objeto <bpt id="p1">**</bpt>ConvertTo-Json<ept id="p1">**</ept>.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">*</bpt>InputObject<ept id="p1">*</ept> parameter is required, but its value can be null ($Null) or an empty string.</source>
          <target state="translated">O <bpt id="p1">*</bpt>InputObject<ept id="p1">*</ept> parâmetro é obrigatório, mas seu valor pode ser null ($Null) ou uma cadeia de caracteres vazia.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>When the input object is $Null, <bpt id="p1">**</bpt>ConvertTo-Json<ept id="p1">**</ept> does not generate any output.</source>
          <target state="translated">Quando o objeto de entrada é $Null, <bpt id="p1">**</bpt>ConvertTo-Json<ept id="p1">**</ept> não gera nenhuma saída.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>When the input object is an empty string, <bpt id="p1">**</bpt>ConvertTo-Json<ept id="p1">**</ept> returns an empty string.</source>
          <target state="translated">Quando o objeto de entrada é uma cadeia de caracteres vazia, <bpt id="p1">**</bpt>ConvertTo-Json<ept id="p1">**</ept> retorna uma cadeia de caracteres vazia.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>CommonParameters</source>
          <target state="translated">CommonParameters</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutVariable, -OutBuffer, -PipelineVariable, -Verbose, -WarningAction, and -WarningVariable.</source>
          <target state="translated">Esse cmdlet oferece suporte aos parâmetros comuns:-Debug, - ErrorAction, - ErrorVariable, - InformationAction, - InformationVariable, - OutVariable,-OutBuffer, - PipelineVariable, - Verbose, - WarningAction e - WarningVariable.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>For more information, see about_CommonParameters (http://go.microsoft.com/fwlink/?LinkID=113216).</source>
          <target state="translated">Para obter mais informações, consulte about_CommonParameters (http://go.microsoft.com/fwlink/?LinkID=113216).</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>INPUTS</source>
          <target state="translated">ENTRADAS</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>System.Object</source>
          <target state="translated">System.Object</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>You can pipe any object to <bpt id="p1">**</bpt>ConvertTo-Json<ept id="p1">**</ept>.</source>
          <target state="translated">Você pode direcionar qualquer objeto para <bpt id="p1">**</bpt>ConvertTo-Json<ept id="p1">**</ept>.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>OUTPUTS</source>
          <target state="translated">SAÍDAS</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>System.String</source>
          <target state="translated">System.String</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>NOTES</source>
          <target state="translated">ANOTAÇÕES</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>ConvertTo-Json<ept id="p1">**</ept> cmdlet is implemented by using the JavaScriptSerializer classhttp://msdn.microsoft.com/en-us/library/system.web.script.serialization.javascriptserializer(VS.100).aspx (http://msdn.microsoft.com/en-us/library/system.web.script.serialization.javascriptserializer(VS.100).aspx).</source>
          <target state="translated">O <bpt id="p1">**</bpt>ConvertTo-Json<ept id="p1">**</ept> cmdlet é implementado usando o JavaScriptSerializer classhttp://msdn.microsoft.com/en-us/library/system.web.script.serialization.javascriptserializer (VS.100).aspx (http://msdn.microsoft.com/en-us/library/system.web.script.serialization.javascriptserializer (VS.100).aspx).</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>RELATED LINKS</source>
          <target state="translated">LINKS RELACIONADOS</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>ConvertFrom-Json</source>
          <target state="translated">ConvertFrom-Json</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Get-Content</source>
          <target state="translated">Get-Content</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Get-UICulture</source>
          <target state="translated">Get-UICulture</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Invoke-WebRequest</source>
          <target state="translated">Invoke-WebRequest</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Invoke-RestMethod</source>
          <target state="translated">Invoke-RestMethod</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>