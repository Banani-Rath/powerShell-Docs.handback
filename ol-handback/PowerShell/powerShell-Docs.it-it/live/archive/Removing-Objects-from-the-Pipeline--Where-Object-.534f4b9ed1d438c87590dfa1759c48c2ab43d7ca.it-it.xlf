<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="md" source-language="en-US" target-language="it-it">
    <header>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ba19c46bed78498fb708014228488ab7dedc10dc</xliffext:olfilehash>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-04046aa" tool-company="Microsoft" />
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Removing Objects from the Pipeline (Where-Object)</source>
          <target state="translated">Rimozione di oggetti dalla pipeline (Where-Object)</target>         
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Removing Objects from the Pipeline (Where-Object)</source>
          <target state="translated">Rimozione di oggetti dalla pipeline (Where-Object)</target>         
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>In Windows PowerShell, you often generate and pass along more objects to a pipeline than you want.</source>
          <target state="translated">In Windows PowerShell spesso si generano e si passano più oggetti a una pipeline di quelli desiderati.</target>         
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>You can specify the properties of particular objects to display by using the <bpt id="p1">**</bpt>Format<ept id="p1">**</ept> cmdlets, but this does not help with the problem of removing entire objects from the display.</source>
          <target state="translated">È possibile specificare le proprietà di oggetti specifici da visualizzare usando i cmdlet <bpt id="p1">**</bpt>Format<ept id="p1">**</ept>, ma questo non consente di risolvere il problema della rimozione di interi oggetti dalla visualizzazione.</target>         
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>You may want to filter objects before the end of a pipeline, so you can perform actions on only a subset of the initially\-generated objects.</source>
          <target state="translated">Si consiglia di filtrare gli oggetti prima della fine di una pipeline, in modo da eseguire operazioni solo su un sottoinsieme degli oggetti generati inizialmente.</target>         
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Windows PowerShell includes a <bpt id="p1">**</bpt>Where\-Object<ept id="p1">**</ept> cmdlet that allows you to test each object in the pipeline and only pass it along the pipeline if it meets a particular test condition.</source>
          <target state="translated">Windows PowerShell include un cmdlet <bpt id="p1">**</bpt>Where-Object<ept id="p1">**</ept> che consente di testare ogni oggetto nella pipeline e passarlo lungo la pipeline solo se soddisfa una specifica condizione di test.</target>         
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Objects that do not pass the test are removed from the pipeline.</source>
          <target state="translated">Gli oggetti che non superano il test vengono rimossi dalla pipeline.</target>         
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>You supply the test condition as the value of the <bpt id="p1">**</bpt>Where\-ObjectFilterScript<ept id="p1">**</ept> parameter.</source>
          <target state="translated">La condizione di test viene specificata sotto forma di valore del parametro <bpt id="p1">**</bpt>Where-ObjectFilterScript<ept id="p1">**</ept>.</target>         
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Performing Simple Tests with Where\-Object</source>
          <target state="translated">Esecuzione di test semplici con Where-Object</target>         
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The value of <bpt id="p1">**</bpt>FilterScript<ept id="p1">**</ept> is a <bpt id="p2">*</bpt>script block<ept id="p2">*</ept> \-  one or more Windows PowerShell commands surrounded by braces {} \- that evaluates to true or false.</source>
          <target state="translated">Il valore di <bpt id="p1">**</bpt>FilterScript<ept id="p1">**</ept> è un <bpt id="p2">*</bpt>blocco di script<ept id="p2">*</ept>, uno o più comandi di Windows PowerShell racchiusi tra parentesi graffe ({}), che restituisce true o false.</target>         
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>These script blocks can be very simple, but creating them requires knowing about another Windows PowerShell concept, comparison operators.</source>
          <target state="translated">Questi blocchi di script possono essere molto semplici, ma per la loro creazione è richiesta familiarità con un altro concetto di Windows PowerShell, gli operatori di confronto.</target>         
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>A comparison operator compares the items that appear on each side of it.</source>
          <target state="translated">Un operatore di confronto mette a confronto gli elementi visualizzati alle sue due estremità.</target>         
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Comparison operators begin with a '\-' character and are followed by a name.</source>
          <target state="translated">Gli operatori di confronto iniziano con un carattere "-" e sono seguiti da un nome.</target>         
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Basic comparison operators work on almost any kind of object.</source>
          <target state="translated">Gli operatori di confronto di base possono essere usati con qualsiasi tipo di oggetto.</target>         
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>The more advanced comparison operators might only work on text or arrays.</source>
          <target state="translated">Quelli più avanzati potrebbero funzionare solo su testo o array.</target>         
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>By default, when working with text, Windows PowerShell comparison operators are case\-insensitive.</source>
          <target state="translated">Per impostazione predefinita, quando si lavora sul testo, gli operatori di confronto di Windows PowerShell non fanno distinzione tra maiuscole e minuscole.</target>         
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Due to parsing considerations, symbols such as &lt;,&gt;, and \= are not used as comparison operators.</source>
          <target state="translated">In base a considerazioni a livello di analisi, i simboli come &lt;,&gt; e = non sono usati come operatori di confronto.</target>         
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Instead, comparison operators are comprised of letters.</source>
          <target state="translated">Al contrario, gli operatori di confronto possono essere costituiti da lettere.</target>         
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>The basic comparison operators are listed in the following table.</source>
          <target state="translated">Nella tabella seguente sono elencati gli operatori di confronto di base.</target>         
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Comparison Operator</source>
          <target state="translated">Operatore di confronto</target>         
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Meaning</source>
          <target state="translated">Significato</target>         
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Example (returns true)</source>
          <target state="translated">Esempio (restituisce true)</target>         
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>\-eq</source>
          <target state="translated">-eq</target>         
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>is equal to</source>
          <target state="translated">È uguale a</target>         
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>1 \-eq 1</source>
          <target state="translated">1 -eq 1</target>         
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>\-ne</source>
          <target state="translated">-ne</target>         
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Is not equal to</source>
          <target state="translated">Non è uguale a</target>         
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>1 \-ne 2</source>
          <target state="translated">1 -ne 2</target>         
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>\-lt</source>
          <target state="translated">-lt</target>         
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Is less than</source>
          <target state="translated">È minore di</target>         
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>1 \-lt 2</source>
          <target state="translated">1 -lt 2</target>         
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>\-le</source>
          <target state="translated">-le</target>         
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Is less than or equal to</source>
          <target state="translated">È minore o uguale a</target>         
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>1 \-le 2</source>
          <target state="translated">1 -le 2</target>         
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>\-gt</source>
          <target state="translated">-gt</target>         
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Is greater than</source>
          <target state="translated">È maggiore di</target>         
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>2 \-gt 1</source>
          <target state="translated">2 -gt 1</target>         
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>\-ge</source>
          <target state="translated">-ge</target>         
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Is greater than or equal to</source>
          <target state="translated">È maggiore o uguale a</target>         
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>2 \-ge 1</source>
          <target state="translated">2 -ge 1</target>         
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>\-like</source>
          <target state="translated">-like</target>         
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Is like (wildcard comparison for text)</source>
          <target state="translated">Corrisponde (confronto con caratteri jolly per il testo)</target>         
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>"file.doc" \-like "f\*.do?"</source>
          <target state="translated">"file.doc" -like "f*.do?"</target>         
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>\-notlike</source>
          <target state="translated">-notlike</target>         
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Is not like (wildcard comparison for text)</source>
          <target state="translated">Non corrisponde (confronto con caratteri jolly per il testo)</target>         
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>"file.doc" \-notlike "p\*.doc"</source>
          <target state="translated">"file.doc" -notlike "p*.doc"</target>         
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>\-contains</source>
          <target state="translated">-contains</target>         
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Contains</source>
          <target state="translated">Contiene</target>         
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>1,2,3 \-contains 1</source>
          <target state="translated">1,2,3 -contains 1</target>         
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>\-notcontains</source>
          <target state="translated">-notcontains</target>         
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Does not contain</source>
          <target state="translated">Non contiene</target>         
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>1,2,3 \-notcontains 4</source>
          <target state="translated">1,2,3 -notcontains 4</target>         
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Where\-Object script blocks use the special variable '$\_' to refer to the current object in the pipeline.</source>
          <target state="translated">I blocchi di script di Where-Object usano la variabile speciale " $_" per fare riferimento all'oggetto corrente nella pipeline.</target>         
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Here is an example of how it works.</source>
          <target state="translated">Di seguito è riportato un esempio del funzionamento.</target>         
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>If you have a list of numbers, and only want to return the ones that are less than 3, you can use Where\-Object to filter the numbers by typing:</source>
          <target state="translated">Se si ha un elenco di numeri e si vogliono restituire solo quelli minori di 3, è possibile usare Where-Object per filtrare i numeri digitando:</target>         
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>Filtering Based on Object Properties</source>
          <target state="translated">Filtro in base alle proprietà dell'oggetto</target>         
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Since $\_ refers to the current pipeline object, we can access its properties for our tests.</source>
          <target state="translated">Dal momento che $_ fa riferimento all'oggetto della pipeline corrente, è possibile accedere alle relative proprietà per i test.</target>         
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>As an example, we can look at the Win32\_SystemDriver class in WMI.</source>
          <target state="translated">È ad esempio possibile esaminare la classe Win32_SystemDriver in Strumentazione gestione Windows (WMI).</target>         
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>There might be hundreds of system drivers on a particular system, but you might only be interested in a particular set of the system drivers, such as those which are currently running.</source>
          <target state="translated">Potrebbero esserci centinaia di driver di sistema in un determinato sistema, ma solo uno specifico set di driver di sistema potrebbe essere interessante, ad esempio quello dei driver attualmente in esecuzione.</target>         
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>If you use Get\-Member to view Win32\_SystemDriver members (<bpt id="p1">**</bpt>Get\-WmiObject \-Class Win32\_SystemDriver | Get\-Member \-MemberType Property<ept id="p1">**</ept>) you will see that the relevant property is State, and that it has a value of "Running" when the driver is running.</source>
          <target state="translated">Se si usa Get-Member per visualizzare i membri di Win32_SystemDriver (<bpt id="p1">**</bpt>Get-WmiObject -Class Win32_SystemDriver | Get-Member -MemberType Property<ept id="p1">**</ept>), si noterà che la proprietà pertinente è State e che ha il valore "Running" quando il driver è in esecuzione.</target>         
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>You can filter the system drivers, selecting only the running ones by typing:</source>
          <target state="translated">È possibile filtrare i driver di sistema selezionando solo quelli in esecuzione digitando:</target>         
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>This still produces a long list.</source>
          <target state="translated">Questa operazione genera comunque un lungo elenco.</target>         
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>You may want to filter to only select the drivers set to start automatically by testing the StartMode value as well:</source>
          <target state="translated">Si consiglia di applicare un filtro per selezionare solo i driver impostati per l'avvio automatico testando anche il valore StartMode:</target>         
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>This gives us a lot of information we no longer need because we know that the drivers are running.</source>
          <target state="translated">Questa operazione produce numerose informazioni che non sono più necessarie poiché è noto che i driver sono in esecuzione.</target>         
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>In fact, the only information we probably need at this point are the name and the display name.</source>
          <target state="translated">In effetti, le uniche informazioni che a questo punto risultano probabilmente necessarie sono il nome e il nome visualizzato.</target>         
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>The following command includes only those two properties, resulting in much simpler output:</source>
          <target state="translated">Il comando seguente include solo queste due proprietà, generando un output molto più semplice:</target>         
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>There are two Where\-Object elements in the above command, but they can be expressed in a single Where\-Object element by using the \-and logical operator, like this:</source>
          <target state="translated">Sono presenti due elementi Where-Object nel comando precedente, ma possono essere espressi con un unico elemento Where-Object usando l'operatore logico -and, come nell'esempio seguente:</target>         
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>The standard logical operators are listed in the following table.</source>
          <target state="translated">Nella tabella seguente sono elencati gli operatori logici standard.</target>         
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>Logical Operator</source>
          <target state="translated">Operatore logico</target>         
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>Meaning</source>
          <target state="translated">Significato</target>         
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>Example (returns true)</source>
          <target state="translated">Esempio (restituisce true)</target>         
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>\-and</source>
          <target state="translated">-and</target>         
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>Logical and; true if both sides are true</source>
          <target state="translated">AND logico; true se i valori a entrambe le estremità sono true</target>         
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>(1 \-eq 1) \-and (2 \-eq 2)</source>
          <target state="translated">(1 -eq 1) -and (2 -eq 2)</target>         
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>\-or</source>
          <target state="translated">-or</target>         
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>Logical or; true if either side is true</source>
          <target state="translated">OR logico; true se i valori a entrambe le estremità sono true</target>         
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>(1 \-eq 1) \-or (1 \-eq 2)</source>
          <target state="translated">(1 -eq 1) -or (1 -eq 2)</target>         
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>\-not</source>
          <target state="translated">-not</target>         
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>Logical not; reverses true and false</source>
          <target state="translated">NOT logico; inverte true e false</target>         
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>\-not (1 \-eq 2)</source>
          <target state="translated">-not (1 -eq 2)</target>         
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>Logical not; reverses true and false</source>
          <target state="translated">NOT logico; inverte true e false</target>         
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>\!(1 \-eq 2)</source>
          <target state="translated">!(1 -eq 2)</target>         
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>