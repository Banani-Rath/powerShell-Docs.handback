<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="es-es">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-1c394fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1279ddd07011124311dd97bd621ab525501691a3</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">reference\3.0\Microsoft.PowerShell.Core\About\about_Operator_Precedence.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions" />
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">bfdffbc6a5e96b9db1e0ede0a09eb927ba37be52</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">38499558304974aacfe4a41d2a64e8c60090a4b1</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>about_Operator_Precedence</source>
          <target state="translated">about_Operator_Precedence</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>powershell, cmdlet</source>
          <target state="translated">cmdlet de PowerShell</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>About Operator Precedence</source>
          <target state="translated">Acerca de la precedencia de operadores</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>about_Operator_Precedence</source>
          <target state="translated">about_Operator_Precedence</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>TOPIC</source>
          <target state="translated">TEMA</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>about_Operator_Precedence</source>
          <target state="translated">about_Operator_Precedence</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>SHORT DESCRIPTION</source>
          <target state="translated">DESCRIPCIÓN BREVE</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Lists the Windows PowerShell operators in precedence order.</source>
          <target state="translated">Muestra los operadores de Windows PowerShell en orden de prioridad.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>[This topic was contributed by Kirk Munro, a Windows PowerShell MVP from Ottawa, Ontario]</source>
          <target state="translated">[Este tema se ha aportado por Kirk Munro, MVP de Windows PowerShell desde Ottawa, Ontario]</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>LONG DESCRIPTION</source>
          <target state="translated">DESCRIPCIÓN LARGA</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Windows PowerShell operators let you construct simple, but powerful expressions.</source>
          <target state="translated">Operadores de Windows PowerShell permiten construir expresiones sencillas pero eficaces.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>This topic lists the operators in precedence order.</source>
          <target state="translated">En este tema se enumera los operadores en orden de prioridad.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Precedence order is the order in which Windows PowerShell evaluates the operators when multiple operators appear in the same expression.</source>
          <target state="translated">Orden de prioridad es el orden en que Windows PowerShell evalúa los operadores cuando varios operadores aparecen en la misma expresión.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>When operators have equal precedence, Windows PowerShell evaluates them from left to right.</source>
          <target state="translated">Cuando los operadores tienen la misma precedencia, Windows PowerShell los evalúa de izquierda a derecha.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>The exceptions are the assignment operators, the cast operators, and the negation operators (!, -not, -bnot), which are evaluated from right to left.</source>
          <target state="translated">Las excepciones son los operadores de asignación, los operadores de conversión y los operadores de negación (!, - no - bNo), que se evalúan de derecha a izquierda.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>You can use enclosures, such as parentheses, to override the standard precedence order and force Windows PowerShell to evaluate the enclosed part of an expression before an unenclosed part.</source>
          <target state="translated">Puede usar contenedores, como paréntesis, para invalidar el orden de prioridad estándar y obligar a Windows PowerShell para evaluar la parte de una expresión antes de una parte no encerrada adjunta.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>In the following list, operators are listed in the order that they are evaluated.</source>
          <target state="translated">En la lista siguiente, se enumeran en el orden en que se evalúan los operadores.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Operators on the same line, or in the same group, have equal precedence.</source>
          <target state="translated">En la misma línea o en el mismo grupo, los operadores tienen la misma prioridad.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>The Operator column lists the operators.</source>
          <target state="translated">La columna operador enumera los operadores.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>The Reference column lists the Windows PowerShell Help topic in which the operator is described.</source>
          <target state="translated">La columna de referencia muestra el tema de Ayuda de Windows PowerShell en el que se describe el operador.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>To display the topic, type "get-help &lt;topic-name&gt;".</source>
          <target state="translated">Para mostrar el tema, escriba "get-help &lt; nombre de tema &gt;".</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>OPERATOR                         REFERENCE</source>
          <target state="translated">REFERENCIA DE OPERADORES</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>$()  @()                         about_Operators</source>
          <target state="translated">$ () @ about_Operators)</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>.</source>
          <target state="translated">.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>(dereference) :: (static)      about_Operators</source>
          <target state="translated">(desreferencia):: about_Operators (estático)</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>[0] (index operator)             about_Operators</source>
          <target state="translated">[0] about_Operators (operador de índice)</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>[int] (cast operators)           about_Operators</source>
          <target state="translated">[int] about_Operators (operadores de conversión)</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>-split (unary) -join (unary)     about_Split, about_Join</source>
          <target state="translated">-división (unario) - combinación (unario) about_Split, about_Join</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>, (comma operator)               about_Operators</source>
          <target state="translated">, about_Operators (operador de coma)</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>++ --                            about_Assignment_Operators</source>
          <target state="translated">++--about_Assignment_Operators</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>-not !</source>
          <target state="translated">-no!</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>-bNot                     about_Logical_Operators, about_Comparison_Operators</source>
          <target state="translated">bNo - about_Logical_Operators, about_Comparison_Operators</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>..</source>
          <target state="translated">..</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>(range operator)              about_Operators</source>
          <target state="translated">about_Operators (operador de intervalo)</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>-f (format operator)             about_Operators</source>
          <target state="translated">about_Operators -f (operador de formato)</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>/ %                            about_Arithmetic_Operators</source>
          <target state="translated">/ % about_Arithmetic_Operators</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>about_Arithmetic_Operators</source>
          <target state="translated">about_Arithmetic_Operators</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>The following group of operators have equal precedence.</source>
          <target state="translated">El siguiente grupo de operadores tienen la misma prioridad.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Their case-sensitive and explicitly case-insensitive variants have the same precedence.</source>
          <target state="translated">Sus variantes de mayúsculas y minúsculas explícitamente tienen la misma prioridad.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>-split (binary)                  about_Split -join (binary)                   about_Join -is  -isnot  -as                 about_Type_Operators -eq  -ne  -gt  -gt  -lt  -le     about_Comparison_Operators -like  -notlike                  about_comparison_operators -match  -notmatch                about_comparison_operators -in -notIn                       about_comparison_operators -contains -notContains           about_comparison_operators -replace                         about_comparison_operators</source>
          <target state="translated">-dividir about_Split (binario)-unirse about_Join (binario)-es - isnot-como about_Type_Operators - eq - ne - gt - gt - lt-le about_Comparison_Operators-como - notlike about_comparison_operators-coincide con about_comparison_operators - notmatch-en about_comparison_operators - notIn-contiene about_comparison_operators - notContains-reemplazar about_comparison_operators</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>The list resumes here with the following operators in precedence order:</source>
          <target state="translated">La lista se reanuda aquí con los operadores siguientes en orden de prioridad:</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>-band -bor -bxor                 about_Comparison_Operators</source>
          <target state="translated">-banda BO - bxor - about_Comparison_Operators</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>-and -or -xor                    about_Comparison_Operators</source>
          <target state="translated">- y - o about_Comparison_Operators - xor</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>.</source>
          <target state="translated">.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>(dot-source)  &amp; (call)         about_Scopes, about_Operators</source>
          <target state="translated">(punto de origen) &amp; about_Scopes (llamada), about_Operators</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>| (pipeline operator)            about_Operators</source>
          <target state="translated">| about_Operators (operador de canalización)</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>2&gt;  2&gt;&gt;  2&gt;&amp;1             about_Redirection</source>
          <target state="translated">2 2 &gt; &gt;&gt; 2 &gt; &amp; 1 about_Redirection</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>=  +=  -=  *=  /= %=             about_Assignment_Operators</source>
          <target state="translated">= +=-= * = / = % = about_Assignment_Operators</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>EXAMPLES</source>
          <target state="translated">EJEMPLOS</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>The following two commands show the arithmetic operators and the effect of using parentheses to force Windows PowerShell to evaluate the enclosed part of the expression first.</source>
          <target state="translated">Los dos comandos siguientes muestran los operadores aritméticos y el efecto de usar paréntesis para obligar a Windows PowerShell a la parte de la expresión adjunta se evalúan primero.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>C:\PS&gt; 2 + 3 * 4</source>
          <target state="translated">C:\PS &gt; 2 + 3 * 4</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>14</source>
          <target state="translated">14</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>C:\PS&gt; (2 + 3) * 4</source>
          <target state="translated">C:\PS &gt; (2 + 3) * 4</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>20</source>
          <target state="translated">20</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>The following example gets the read-only text files from the local directory and saves them in the $read_only variable.</source>
          <target state="translated">En el ejemplo siguiente se obtiene los archivos de texto de sólo lectura desde el directorio local y los guarda en la variable read_only.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>$read_only = get-childitem *.txt | where-object {$_.isReadOnly}</source>
          <target state="translated">$read_only = get-childitem *.txt | WHERE-object {$_.isReadOnly}</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>It is equivalent to the following example.</source>
          <target state="translated">Es equivalente al ejemplo siguiente.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>$read_only = ( get-childitem *.txt | where-object {$_.isReadOnly} )</source>
          <target state="translated">$read_only = (get-childitem *.txt | where-object {$_.isReadOnly})</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>Because the pipeline operator (|) has a higher precedence than the assignment operator (=), the files that the Get-ChildItem cmdlet gets are sent to the Where-Object cmdlet for filtering before they are assigned to the $read_only variable.</source>
          <target state="translated">Dado que el operador de canalización (|) tiene mayor prioridad que el operador de asignación (=), se envían los archivos que se obtiene el cmdlet Get-ChildItem al cmdlet Where-Object para filtrar antes de que se asignan a la variable read_only.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>The following example demonstrates that the index operator takes precedence over the cast operator.</source>
          <target state="translated">En el ejemplo siguiente se muestra que el operador índice tiene prioridad sobre el operador de conversión.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>The first expression creates an array of three strings.</source>
          <target state="translated">La primera expresión, crea una matriz de tres cadenas.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>Then, it uses the index operator with a value of 0 to select the first object in the array, which is the first string.</source>
          <target state="translated">A continuación, utiliza el operador índice con un valor de 0 para seleccionar el primer objeto de la matriz, que es la primera cadena.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>Finally, it casts the selected object as a string.</source>
          <target state="translated">Por último, se convierte el objeto seleccionado como una cadena.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>In this case, the cast has no effect.</source>
          <target state="translated">En este caso, la conversión tiene ningún efecto.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>C:\PS&gt; [string]@('Windows','PowerShell','2.0')[0] Windows</source>
          <target state="translated">C:\PS &gt; [string]@('Windows','PowerShell','2.0') [0] Windows</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>The second expression uses parentheses to force the cast operation to occur before the index selection.</source>
          <target state="translated">La segunda expresión utiliza paréntesis para forzar la operación de conversión que se produzca antes de la selección de índice.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>As a result, the entire array is cast as a (single) string.</source>
          <target state="translated">Como resultado, toda la matriz se convierte en una cadena (única).</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>Then, the index operator selects the first item in the string array, which is the first character.</source>
          <target state="translated">A continuación, el operador índice selecciona el primer elemento de la matriz de cadena, que es el primer carácter.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>C:\PS&gt; ([string]@('Windows','PowerShell','2.0'))[0]</source>
          <target state="translated">C:\PS &gt; ([string]@('Windows','PowerShell','2.0')) [0]</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>W</source>
          <target state="translated">W</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>In the following example, because the -gt (greater-than) operator has a higher precedence than the -and (logical AND) operator, the result of the expression is FALSE.</source>
          <target state="translated">En el ejemplo siguiente, porque - gt (mayor-de) el operador tiene una prioridad mayor que- y (AND lógico) operador, el resultado de la expresión es FALSE.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>C:\PS&gt; 2 -gt 4 -and 1 False</source>
          <target state="translated">C:\PS &gt; 2 - gt 1 y 4 - falso</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>It is equivalent to the following expression.</source>
          <target state="translated">Es equivalente a la siguiente expresión.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>C:\PS&gt; (2 -gt 4) -and 1 False</source>
          <target state="translated">C:\PS &gt; (2 - gt 4)- y 1 False</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>If the -and operator had higher precedence, the answer would be TRUE.</source>
          <target state="translated">Si- y operador tenía prioridad, la respuesta sería TRUE.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>C:\PS&gt; 2 -gt (4 -and 1) True</source>
          <target state="translated">C:\PS &gt; 2 - gt (4 - y 1) True</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>However, this example demonstrates an important principle of managing operator precedence.</source>
          <target state="translated">Sin embargo, en este ejemplo se muestra un principio importante de la administración de prioridad de operador.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>When an expression is difficult for people to interpret, use parentheses to force the evaluation order, even when it forces the default operator precedence.</source>
          <target state="translated">Cuando es difícil interpretar una expresión, utilice paréntesis para forzar el orden de evaluación, incluso cuando se fuerza la precedencia de operadores predeterminada.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>The parentheses make your intentions clear to people who are reading and maintaining your scripts.</source>
          <target state="translated">Los paréntesis hacer sus intenciones claro a personas que estén leyendo y mantener las secuencias de comandos.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>SEE ALSO</source>
          <target state="translated">VEA TAMBIÉN</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>about_Assignment_Operators about_Comparison_Operators about_Join about_Logical_Operators about_Operators about_Redirection about_Scopes about_Split about_Type_Operators</source>
          <target state="translated">about_Assignment_Operators about_Comparison_Operators about_Join about_Logical_Operators about_Operators about_Redirection about_Scopes about_Split about_Type_Operators</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>