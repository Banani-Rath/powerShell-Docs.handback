<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="es-es">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-56a7a5e" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">91a4ed1e8912f77e274d64db7873ad56edbbd17b</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">wmf\5.0\psget_scriptcmdlets.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions" />
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">b8191ffeee095a7d0d90c02ab30ed1cab5e0f521</xliffext:olskeletonhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>PowerShellGet Cmdlets for Script Management</source>
          <target state="translated">Cmdlets de PowerShellGet para la administración de scripts</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Find-Script cmdlet</source>
          <target state="translated">Cmdlet Find-Script</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Find-Script cmdlet lets you to discover the script files with different search criteria like name, tag, filter, command name, version range, exact version, all versions, including its dependencies and from specific or all registered repositories.</source>
          <target state="translated">El cmdlet Find-Script permite detectar los archivos de script con criterios de búsqueda diferentes, tales como nombre, etiqueta, filtro, nombre de comando, intervalo de versiones, versión exacta, todas las versiones, incluidas sus dependencias y de repositorios específicos o todos los repositorios registrados.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Example usage:</source>
          <target state="translated">Ejemplo de uso:</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Save-Script cmdlet</source>
          <target state="translated">Cmdlet Save-Script</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Save-Script cmdlet lets you to review the script file by saving it to a specified location.</source>
          <target state="translated">El cmdlet Save-Script permite revisar el archivo de script, para lo cual debe guardarse en una ubicación especificada.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Install-Script and Get-InstalledScript cmdlets</source>
          <target state="translated">Cmdlets Install-Script y Get-InstalledScript</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Install-Script cmdlet lets you to install a specific script file along with its dependencies to the specified scope.</source>
          <target state="translated">El cmdlet Install-Script permite instalar un archivo de script específico junto con sus dependencias en el ámbito especificado.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>By default, scripts are installed to the AllUsers scope.</source>
          <target state="translated">De forma predeterminada, los scripts se instalan en el ámbito AllUsers.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Get-InstalledScript cmdlet lets you to get the list of script files which were installed using Install-Script cmdlet.</source>
          <target state="translated">El cmdlet Get-InstalledScript permite obtener la lista de archivos de script que se instalaron mediante el cmdlet Install-Script.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Use note: To allow management and locating of scripts once they are installed, Install-script will create a default folder for storing scripts at $home\Documents\WindowsPowerShell\Scripts, and add that folder to your PATH environment.</source>
          <target state="translated">Nota de uso: Para permitir la administración y localización de scripts una vez que están instalados, Install-Script creará una carpeta predeterminada para almacenar los scripts en $home\Documents\WindowsPowerShell\Scripts y la agregará a su entorno PATH.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>If modifying the path is a concern, use Save-Script instead of Install-Script.</source>
          <target state="translated">Si la modificación de la ruta de acceso es un problema, use Save-Script en lugar de Install-Script.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Get-InstalledScripts and Uninstall-Script can only work with scripts placed on the system using Install-Script.</source>
          <target state="translated">Get-InstalledScripts y Uninstall-Script solo pueden funcionar con scripts colocados en el sistema mediante Install-Script.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>You can also use Get-Command –Name <ph id="ph1">&amp;lt;</ph>InstalledScriptFileName<ph id="ph2">&amp;gt;</ph> to get it.</source>
          <target state="translated">También puede usar Get-Command –Name <ph id="ph1">&amp;lt;</ph>InstalledScriptFileName<ph id="ph2">&amp;gt;</ph> para obtenerlo.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Two install locations are added to the PATH environment variable on first use of a specified scope.</source>
          <target state="translated">Se agregan dos ubicaciones de instalación a la variable de entorno PATH la primera vez que se usa un ámbito especificado.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Update-Script cmdlet</source>
          <target state="translated">Cmdlet Update-Script</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Update-Script cmdlet lets you to do in-place update of the script files which were installed using Install-Script cmdlet.</source>
          <target state="translated">El cmdlet Update-Script permite la actualización en contexto de los archivos de script que se instalaron mediante el cmdlet Install-Script.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Uninstall-Script cmdlet</source>
          <target state="translated">Cmdlet Uninstall-Script</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>New-ScriptFileInfo and Test-ScriptFileInfo cmdlets</source>
          <target state="translated">Cmdlets New-ScriptFileInfo y Test-ScriptFileInfo</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>New-ScriptFileInfo cmdlet lets you to create a new script file with metadata like Version, Guid, Author, and Description, etc. Test-ScriptFileInfo cmdlet lets you to validate and get the script file metadata.</source>
          <target state="translated">El cmdlet New-ScriptFileInfo permite crear un nuevo archivo de script con metadatos, como Version, Guid, Author, Description, etc. El cmdlet Test-ScriptFileInfo permite validar y obtener los metadatos del archivo de script.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Update-ScriptFileInfo cmdlet</source>
          <target state="translated">Cmdlet Update-ScriptFileInfo</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Update-ScriptFileInfo cmdlet lets you to update the existing script file metadata.</source>
          <target state="translated">El cmdlet Update-ScriptFileInfo permite actualizar los metadatos existentes del archivo de script.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Register-PSRepository and Set-PSRepository cmdlets with script sharing support</source>
          <target state="translated">Cmdlets Register-PSRepository y Set-PSRepository compatibles con el uso compartido de scripts</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Use Register-PSRepository/Set-PSRepository cmdlets to add the <bpt id="p1">**</bpt>ScriptSourceLocation<ept id="p1">**</ept> and <bpt id="p2">**</bpt>ScriptPublishLocation<ept id="p2">**</ept> to the PSRepository.</source>
          <target state="translated">Use los cmdlets Register-PSRepository/Set-PSRepository para agregar <bpt id="p1">**</bpt>ScriptSourceLocation<ept id="p1">**</ept> y <bpt id="p2">**</bpt>ScriptPublishLocation<ept id="p2">**</ept> a PSRepository.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Publish-Script cmdlet</source>
          <target state="translated">Cmdlet Publish-Script</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Publish-Script cmdlet lets you to publish your script file with valid metadata like Version, Guid, Author, and Description, etc.</source>
          <target state="translated">El cmdlet Publish-Script permite publicar el archivo de script con metadatos válidos, como Version, Guid, Author, Description, etc.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>