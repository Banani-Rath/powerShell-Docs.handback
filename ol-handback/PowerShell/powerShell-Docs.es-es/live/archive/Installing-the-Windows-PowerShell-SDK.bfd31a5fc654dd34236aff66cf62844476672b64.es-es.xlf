<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="es-es">
    <header>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions" />
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">scripting\setup\Installing-the-Windows-PowerShell-SDK.md</xliffext:olfilepath>
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">9ba9ef3efe6a8ae85d96b59db53ad3a16bf57699</xliffext:olfilehash>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-3d52e17" tool-company="Microsoft" />
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Installing the Windows PowerShell SDK</source>
          <target state="translated">Instalar el SDK de Windows PowerShell</target>         
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Installing the Windows PowerShell SDK</source>
          <target state="translated">Instalar el SDK de Windows PowerShell</target>         
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>The following topic describes how to install the PowerShell SDK on different versions of Windows.</source>
          <target state="translated">En el siguiente tema se describe cómo instalar PowerShell SDK en distintas versiones de Windows.</target>         
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Installing Windows PowerShell 3.0 SDK for Windows 8 and Windows Server 2012<ph id="ph1">&lt;/title&gt;
    &lt;content&gt;
      &lt;para&gt;</ph>Windows PowerShell 3.0 is automatically installed with Windows 8 and Windows Server 2012.</source>
          <target state="translated">Instalación de Windows PowerShell 3.0 SDK para Windows 8 y Windows Server 2012<ph id="ph1">&lt;/title&gt;
    &lt;content&gt;
      &lt;para&gt;</ph>Windows PowerShell 3.0 está instalado automáticamente en Windows 8 y Windows Server 2012.</target>         
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>In addition, you can download and install the reference assemblies for Windows PowerShell 3.0 as part of the Windows 8 SDK.</source>
          <target state="translated">Además, puede descargar e instalar los ensamblados de referencia para Windows PowerShell 3.0 como parte de Windows 8 SDK.</target>         
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>These assemblies allow you to write cmdlets, providers, and host programs for Windows PowerShell 3.0.</source>
          <target state="translated">Estos ensamblados le permiten escribir cmdlets, proveedores y programas host para Windows PowerShell 3.0.</target>         
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>When you install the Windows SDK for Windows 8, the Windows PowerShell assemblies are automatically installed in the reference assembly folder, in \Program Files (x86)\Reference Assemblies\Microsoft\WindowsPowerShell\3.0.</source>
          <target state="translated">Al instalar Windows SDK para Windows 8, los ensamblados de Windows PowerShell se instalan automáticamente en la carpeta de ensamblados de referencia, en \Archivos de programa (x86)\Reference Assemblies\Microsoft\WindowsPowerShell\3.0.</target>         
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>For more information, see the <ph id="ph1">&lt;externalLink&gt;&lt;linkText&gt;</ph>Windows 8 SDK download site<ph id="ph2">&lt;/linkText&gt;&lt;linkUri&gt;</ph>http://msdn.microsoft.com/windows/hardware/hh852363.aspx<ph id="ph3">&lt;/linkUri&gt;&lt;/externalLink&gt;</ph>.</source>
          <target state="translated">Para obtener más información, consulte el <ph id="ph1">&lt;externalLink&gt;&lt;linkText&gt;</ph>sitio de descarga de Windows 8 SDK<ph id="ph2">&lt;/linkText&gt;&lt;linkUri&gt;</ph>http://msdn.microsoft.com/windows/hardware/hh852363.aspx<ph id="ph3">&lt;/linkUri&gt;&lt;/externalLink&gt;</ph>.</target>         
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Windows PowerShell code samples are also available on the Development Center.</source>
          <target state="translated">También hay disponibles ejemplos de código de Windows PowerShell en el Centro de desarrollo.</target>         
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>For more information, see the Desktop code sample page on the <ph id="ph1">&lt;externalLink&gt;&lt;linkText&gt;</ph>Dev center site<ph id="ph2">&lt;/linkText&gt;&lt;linkUri&gt;</ph>http://code.msdn.microsoft.com/windowsdesktop/<ph id="ph3">&lt;/linkUri&gt;&lt;/externalLink&gt;</ph>.</source>
          <target state="translated">Para obtener más información, consulte la página de ejemplos de código de escritorio en el <ph id="ph1">&lt;externalLink&gt;&lt;linkText&gt;</ph>sitio del Centro de desarrollo<ph id="ph2">&lt;/linkText&gt;&lt;linkUri&gt;</ph>http://code.msdn.microsoft.com/windowsdesktop/<ph id="ph3">&lt;/linkUri&gt;&lt;/externalLink&gt;</ph>.</target>         
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>In addition, Windows PowerShell 3.0 is backwards-compatible with the Windows PowerShell 2.0 SDK, which includes a number of code samples.</source>
          <target state="translated">Además, Windows PowerShell 3.0 también es compatible con Windows PowerShell 2.0 SDK, que incluye varios ejemplos de código.</target>         
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>For more information on how to download the Windows PowerShell 2.0 SDK, see below.</source>
          <target state="translated">Más abajo le indicamos cómo descargar Windows PowerShell 2.0 SDK.</target>         
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>(Note that while the 2.0 code samples are compatible with Windows 8 and Windows PowerShell 3.0, you cannot install Windows PowerShell 2.0 on a Windows 8 platform.)</source>
          <target state="translated">(Tenga en cuenta que, a pesar de que los ejemplos de código de la versión 2.0 son compatibles con Windows 8 y Windows PowerShell 3.0, no puede instalar Windows PowerShell 2.0 en una plataforma de Windows 8).</target>         
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Installing Windows PowerShell 3.0 SDK for Windows 7 and Windows Server 2008 R2<ph id="ph1">&lt;/title&gt;
    &lt;content&gt;
      &lt;para&gt;</ph>Windows 7 and Windows Server 2008 R2 automatically have PowerShell 2.0 installed.</source>
          <target state="translated">Instalación de Windows PowerShell 3.0 SDK para Windows 7 y Windows Server 2008 R2<ph id="ph1">&lt;/title&gt;
    &lt;content&gt;
      &lt;para&gt;</ph>Windows 7 y Windows Server 2008 R2 ya tienen instalado automáticamente PowerShell 2.0.</target>         
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>In addition, you can install PowerShell 3.0 on these systems.</source>
          <target state="translated">Además, puede instalar PowerShell 3.0 en estos sistemas.</target>         
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>(For more information, see <ph id="ph1">&lt;link xlink:href="6fbb0409-5a54-48ec-95e6-7f8b7d8c4969"&gt;</ph>Installing Windows PowerShell<ph id="ph2">&lt;/link&gt;</ph>.).</source>
          <target state="translated">(Para obtener más información, consulte <ph id="ph1">&lt;link xlink:href="6fbb0409-5a54-48ec-95e6-7f8b7d8c4969"&gt;</ph>Installing Windows PowerShell<ph id="ph2">&lt;/link&gt;</ph> [Instalación de Windows PowerShell]).</target>         
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>As described above, you can also install the Windows 8 SDK on Windows 7 and Windows Server 2008 R2.</source>
          <target state="translated">Tal como se ha descrito anteriormente, también puede instalar Windows 8 SDK en Windows 7 y Windows Server 2008 R2.</target>         
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Installing Windows PowerShell 2.0 SDK for Windows 7, Vista, XP, Server 2003, and Server 2008<ph id="ph1">&lt;/title&gt;
    &lt;content&gt;
      &lt;para&gt;</ph>The <ph id="ph2">&lt;token&gt;</ph>mshshort<ph id="ph3">&lt;/token&gt;</ph> 2.0 SDK provides the reference assemblies needed to write cmdlets, providers, and hosting applications, and it provides C# sample code that can be used as the starting point when you begin writing code.</source>
          <target state="translated">Instalación de Windows PowerShell 2.0 SDK para Windows 7, Vista, XP, Server 2003 y Server 2008<ph id="ph1">&lt;/title&gt;
    &lt;content&gt;
      &lt;para&gt;</ph><ph id="ph2">&lt;token&gt;</ph>mshshort<ph id="ph3">&lt;/token&gt;</ph> 2.0 SDK proporciona los ensamblados de referencia necesarios para escribir cmdlets, proveedores y aplicaciones host, así como código de ejemplo en C# que se puede usar como punto de partida para comenzar a escribir código.</target>         
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>To install this SDK, see <ph id="ph1">&lt;externalLink&gt;&lt;linkText&gt;</ph>Windows PowerShell 2.0 SDK<ph id="ph2">&lt;/linkText&gt;&lt;linkUri&gt;</ph>http://go.microsoft.com/fwlink/?LinkId=184611<ph id="ph3">&lt;/linkUri&gt;&lt;/externalLink&gt;</ph>.</source>
          <target state="translated">Para instalar este SDK, consulte <ph id="ph1">&lt;externalLink&gt;&lt;linkText&gt;</ph>Windows PowerShell 2.0 SDK<ph id="ph2">&lt;/linkText&gt;&lt;linkUri&gt;</ph>http://go.microsoft.com/fwlink/?LinkId=184611<ph id="ph3">&lt;/linkUri&gt;&lt;/externalLink&gt;</ph>.</target>         
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Reference assemblies<ph id="ph1">&lt;/title&gt;
        &lt;content&gt;
          &lt;para&gt;</ph>Reference assemblies are installed in the following location by default: <ph id="ph2">&lt;codeInline&gt;</ph>c:\Program Files\Reference Assemblies\Microsoft\WindowsPowerShell\V1.0<ph id="ph3">&lt;/codeInline&gt;</ph>.<ph id="ph4">&lt;/para&gt;
          &lt;alert class="note"&gt;
            &lt;para&gt;</ph>Code that is compiled against the Windows PowerShell 2.0 assemblies cannot be loaded into Windows PowerShell 1.0 installations.</source>
          <target state="translated">Ensamblados de referencia<ph id="ph1">&lt;/title&gt;
        &lt;content&gt;
          &lt;para&gt;</ph>Los ensamblados de referencia se instalan de forma predeterminada en la siguiente ubicación:<ph id="ph2">&lt;codeInline&gt;</ph>C:\Archivos de programa\Reference Assemblies\Microsoft\WindowsPowerShell\V1.0<ph id="ph3">&lt;/codeInline&gt;</ph>.<ph id="ph4">&lt;/para&gt;
          &lt;alert class="note"&gt;
            &lt;para&gt;</ph>El código compilado con los ensamblados de Windows PowerShell 2.0 no se puede cargar en las instalaciones de Windows PowerShell 1.0.</target>         
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>However, code that is compiled against the Windows PowerShell 1.0 assemblies can be loaded into Windows PowerShell 2.0 installations.</source>
          <target state="translated">Sin embargo, el código compilado con los ensamblados de Windows PowerShell 1.0 sí puede cargarse en las instalaciones de Windows PowerShell 2.0.</target>         
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Samples<ph id="ph1">&lt;/title&gt;
        &lt;content&gt;
          &lt;para&gt;</ph>Code samples are installed in the following location by default: <ph id="ph2">&lt;codeInline&gt;</ph>C:\Program Files\Microsoft SDKs\Windows\v7.0\Samples\sysmgmt\WindowsPowerShell\<ph id="ph3">&lt;/codeInline&gt;</ph>.<ph id="ph4">&lt;/para&gt;
          &lt;para&gt;</ph>The following sections provide a brief description of what each sample does.</source>
          <target state="translated">Ejemplos<ph id="ph1">&lt;/title&gt;
        &lt;content&gt;
          &lt;para&gt;</ph>Los ejemplos de código se instalan de forma predeterminada en la siguiente ubicación: <ph id="ph2">&lt;codeInline&gt;</ph>C:\Archivos de programa\Microsoft SDKs\Windows\v7.0\Samples\sysmgmt\WindowsPowerShell\<ph id="ph3">&lt;/codeInline&gt;</ph>.<ph id="ph4">&lt;/para&gt;
          &lt;para&gt;</ph>Las siguientes secciones proporcionan una breve descripción del efecto de cada ejemplo.</target>         
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Cmdlet samples<ph id="ph1">&lt;/title&gt;
            &lt;content&gt;
              &lt;definitionTable&gt;
                &lt;definedTerm&gt;</ph>GetProcessSample01<ph id="ph2">&lt;/definedTerm&gt;
                &lt;definition&gt;
                  &lt;para&gt;</ph>Shows how to write a simple cmdlet that gets all the processes on the local computer.<ph id="ph3">&lt;/para&gt;
                &lt;/definition&gt;
                &lt;definedTerm&gt;</ph>GetProcessSample02<ph id="ph4">&lt;/definedTerm&gt;
                &lt;definition&gt;
                  &lt;para&gt;</ph>Shows how to add parameters to the cmdlet.</source>
          <target state="translated">Ejemplos de cmdlet<ph id="ph1">&lt;/title&gt;
            &lt;content&gt;
              &lt;definitionTable&gt;
                &lt;definedTerm&gt;</ph>GetProcessSample01<ph id="ph2">&lt;/definedTerm&gt;
                &lt;definition&gt;
                  &lt;para&gt;</ph>Muestra cómo escribir un cmdlet sencillo que obtiene todos los procesos en el equipo local.<ph id="ph3">&lt;/para&gt;
                &lt;/definition&gt;
                &lt;definedTerm&gt;</ph>GetProcessSample02<ph id="ph4">&lt;/definedTerm&gt;
                &lt;definition&gt;
                  &lt;para&gt;</ph>Muestra cómo agregar parámetros al cmdlet.</target>         
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>The cmdlet takes one or more process names and returns the matching processes.<ph id="ph1">&lt;/para&gt;
                &lt;/definition&gt;
                &lt;definedTerm&gt;</ph>GetProcessSample03<ph id="ph2">&lt;/definedTerm&gt;
                &lt;definition&gt;
                  &lt;para&gt;</ph>Shows how to add parameters that accept input from the pipeline.<ph id="ph3">&lt;/para&gt;
                &lt;/definition&gt;
                &lt;definedTerm&gt;</ph>GetProcessSample04<ph id="ph4">&lt;/definedTerm&gt;
                &lt;definition&gt;
                  &lt;para&gt;</ph>Shows how to handle nonterminating errors.<ph id="ph5">&lt;/para&gt;
                &lt;/definition&gt;
                &lt;definedTerm&gt;</ph>GetProcessSample05<ph id="ph6">&lt;/definedTerm&gt;
                &lt;definition&gt;
                  &lt;para&gt;</ph>Shows how to display a list of specified processes.<ph id="ph7">&lt;/para&gt;
                &lt;/definition&gt;
                &lt;definedTerm&gt;</ph>SelectObject<ph id="ph8">&lt;/definedTerm&gt;
                &lt;definition&gt;
                  &lt;para&gt;</ph>Shows how to write a filter to select only certain objects.</source>
          <target state="translated">El cmdlet como mínimo un nombre de proceso y devuelve los procesos coincidentes.<ph id="ph1">&lt;/para&gt;
                &lt;/definition&gt;
                &lt;definedTerm&gt;</ph>GetProcessSample03<ph id="ph2">&lt;/definedTerm&gt;
                &lt;definition&gt;
                  &lt;para&gt;</ph>Muestra cómo agregar parámetros que aceptan la entrada desde la canalización.<ph id="ph3">&lt;/para&gt;
                &lt;/definition&gt;
                &lt;definedTerm&gt;</ph>GetProcessSample04<ph id="ph4">&lt;/definedTerm&gt;
                &lt;definition&gt;
                  &lt;para&gt;</ph>Muestra cómo controlar errores de no terminación.<ph id="ph5">&lt;/para&gt;
                &lt;/definition&gt;
                &lt;definedTerm&gt;</ph>GetProcessSample05<ph id="ph6">&lt;/definedTerm&gt;
                &lt;definition&gt;
                  &lt;para&gt;</ph>Muestra cómo mostrar una lista de procesos especificados.<ph id="ph7">&lt;/para&gt;
                &lt;/definition&gt;
                &lt;definedTerm&gt;</ph>SelectObject<ph id="ph8">&lt;/definedTerm&gt;
                &lt;definition&gt;
                  &lt;para&gt;</ph>Muestra cómo escribir un filtro para seleccionar solo determinados objetos.</target>         
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>SelectString<ph id="ph1">&lt;/definedTerm&gt;
                &lt;definition&gt;
                  &lt;para&gt;</ph>Shows how to search files for specified patterns.<ph id="ph2">&lt;/para&gt;
                &lt;/definition&gt;
                &lt;definedTerm&gt;</ph>StopProcessSample01<ph id="ph3">&lt;/definedTerm&gt;
                &lt;definition&gt;
                  &lt;para&gt;</ph>Shows how to implement a <ph id="ph4">&lt;parameterReference&gt;</ph>PassThru<ph id="ph5">&lt;/parameterReference&gt;</ph> parameter, and how to request user feedback by calls to the <ph id="ph6">&lt;codeEntityReference&gt;</ph>Overload:System.Management.Automation.Cmdlet.ShouldProcess<ph id="ph7">&lt;/codeEntityReference&gt;</ph> and <ph id="ph8">&lt;codeEntityReference&gt;</ph>Overload:System.Management.Automation.Cmdlet.ShouldContinue<ph id="ph9">&lt;/codeEntityReference&gt;</ph> methods.</source>
          <target state="translated">SelectString<ph id="ph1">&lt;/definedTerm&gt;
                &lt;definition&gt;
                  &lt;para&gt;</ph>Muestra cómo buscar patrones específicos en archivos.<ph id="ph2">&lt;/para&gt;
                &lt;/definition&gt;
                &lt;definedTerm&gt;</ph>StopProcessSample01<ph id="ph3">&lt;/definedTerm&gt;
                &lt;definition&gt;
                  &lt;para&gt;</ph>Muestra cómo implementar un parámetro <ph id="ph4">&lt;parameterReference&gt;</ph>PassThru<ph id="ph5">&lt;/parameterReference&gt;</ph> y cómo solicitar comentarios de los usuarios mediante llamadas a los métodos <ph id="ph6">&lt;codeEntityReference&gt;</ph>Overload:System.Management.Automation.Cmdlet.ShouldProcess<ph id="ph7">&lt;/codeEntityReference&gt;</ph> y <ph id="ph8">&lt;codeEntityReference&gt;</ph>Overload:System.Management.Automation.Cmdlet.ShouldContinue<ph id="ph9">&lt;/codeEntityReference&gt;</ph>.</target>         
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Users specify the <ph id="ph1">&lt;parameterReference&gt;</ph>PassThru<ph id="ph2">&lt;/parameterReference&gt;</ph> parameter when they want to force the cmdlet to return an object, <ph id="ph3">&lt;/para&gt;
                &lt;/definition&gt;
                &lt;definedTerm&gt;</ph>StopProcessSample02<ph id="ph4">&lt;/definedTerm&gt;
                &lt;definition&gt;
                  &lt;para&gt;</ph>Shows how to stop a specific process.<ph id="ph5">&lt;/para&gt;
                &lt;/definition&gt;
                &lt;definedTerm&gt;</ph>StopProcessSample03<ph id="ph6">&lt;/definedTerm&gt;
                &lt;definition&gt;
                  &lt;para&gt;</ph>Shows how to declare aliases for parameters and how to support wildcards.<ph id="ph7">&lt;/para&gt;
                &lt;/definition&gt;
                &lt;definedTerm&gt;</ph>StopProcessSample04<ph id="ph8">&lt;/definedTerm&gt;
                &lt;definition&gt;
                  &lt;para&gt;</ph>Shows how to declare parameter sets, the object that the cmdlet takes as input, and how to specify the default parameter set to use.</source>
          <target state="translated">Los usuarios especifican el parámetro <ph id="ph1">&lt;parameterReference&gt;</ph>PassThru<ph id="ph2">&lt;/parameterReference&gt;</ph> cuando deseen forzar al cmdlet para devolver un objeto.<ph id="ph3">&lt;/para&gt;
                &lt;/definition&gt;
                &lt;definedTerm&gt;</ph>StopProcessSample02<ph id="ph4">&lt;/definedTerm&gt;
                &lt;definition&gt;
                  &lt;para&gt;</ph>Muestra cómo detener un proceso específico.<ph id="ph5">&lt;/para&gt;
                &lt;/definition&gt;
                &lt;definedTerm&gt;</ph>StopProcessSample03<ph id="ph6">&lt;/definedTerm&gt;
                &lt;definition&gt;
                  &lt;para&gt;</ph>Muestra cómo declarar los alias de parámetros y cómo agregar compatibilidad con caracteres comodín.<ph id="ph7">&lt;/para&gt;
                &lt;/definition&gt;
                &lt;definedTerm&gt;</ph>StopProcessSample04<ph id="ph8">&lt;/definedTerm&gt;
                &lt;definition&gt;
                  &lt;para&gt;</ph>Muestra cómo declarar los conjuntos de parámetros, el objeto que el cmdlet toma como entrada, y también cómo especificar el parámetro predeterminado configurado para usarse.</target>         
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Remoting samples<ph id="ph1">&lt;/title&gt;
            &lt;content&gt;
              &lt;definitionTable&gt;
                &lt;definedTerm&gt;</ph>RemoteRunspace01<ph id="ph2">&lt;/definedTerm&gt;
                &lt;definition&gt;
                  &lt;para&gt;</ph>Shows how to create a remote runspace that is used to establish a remote connection.<ph id="ph3">&lt;/para&gt;
                &lt;/definition&gt;
                &lt;definedTerm&gt;</ph>RemoteRunspacePool01<ph id="ph4">&lt;/definedTerm&gt;
                &lt;definition&gt;
                  &lt;para&gt;</ph>Shows how to construct a remote runspace pool and how to run multiple commands concurrently by using this pool.<ph id="ph5">&lt;/para&gt;
                &lt;/definition&gt;
                &lt;definedTerm&gt;</ph>Serialization01<ph id="ph6">&lt;/definedTerm&gt;
                &lt;definition&gt;
                  &lt;para&gt;</ph>Shows how to look at an existing .NET class and make sure that information from selected public properties of this class is preserved across serialization/deserialization.<ph id="ph7">&lt;/para&gt;
                &lt;/definition&gt;
                &lt;definedTerm&gt;</ph>Serialization02<ph id="ph8">&lt;/definedTerm&gt;
                &lt;definition&gt;
                  &lt;para&gt;</ph>Shows how to look at an existing .NET class and make sure that information from instance of this class is preserved across serialization/deserialization when the information is not available in public properties of the class.<ph id="ph9">&lt;/para&gt;
                &lt;/definition&gt;
                &lt;definedTerm&gt;</ph>Serialization03<ph id="ph10">&lt;/definedTerm&gt;
                &lt;definition&gt;
                  &lt;para&gt;</ph>Shows how to look at an existing .NET class and make sure that instances of this class and of derived classes are deserialized (rehydrated) into live .NET objects.</source>
          <target state="translated">Ejemplos de comunicación remota<ph id="ph1">&lt;/title&gt;
            &lt;content&gt;
              &lt;definitionTable&gt;
                &lt;definedTerm&gt;</ph>RemoteRunspace01<ph id="ph2">&lt;/definedTerm&gt;
                &lt;definition&gt;
                  &lt;para&gt;</ph>Muestra cómo crear un espacio de ejecución remoto que se usa para establecer una conexión remota.<ph id="ph3">&lt;/para&gt;
                &lt;/definition&gt;
                &lt;definedTerm&gt;</ph>RemoteRunspacePool01<ph id="ph4">&lt;/definedTerm&gt;
                &lt;definition&gt;
                  &lt;para&gt;</ph>Muestra cómo crear un grupo de espacio de ejecución remoto y cómo ejecutar varios comandos simultáneamente mediante el uso de este grupo.<ph id="ph5">&lt;/para&gt;
                &lt;/definition&gt;
                &lt;definedTerm&gt;</ph>Serialization01<ph id="ph6">&lt;/definedTerm&gt;
                &lt;definition&gt;
                  &lt;para&gt;</ph>Muestra cómo examinar una clase .NET existente y cómo asegurarse de que se conserva la información de las propiedades públicas seleccionadas de esta clase a través de la serialización o deserialización.<ph id="ph7">&lt;/para&gt;
                &lt;/definition&gt;
                &lt;definedTerm&gt;</ph>Serialization02<ph id="ph8">&lt;/definedTerm&gt;
                &lt;definition&gt;
                  &lt;para&gt;</ph>Muestra cómo examinar una clase .NET existente y cómo asegurarse de que la información de la instancia de esta clase se conserva en la serialización o deserialización cuando la información no está disponible en las propiedades públicas de la clase.<ph id="ph9">&lt;/para&gt;
                &lt;/definition&gt;
                &lt;definedTerm&gt;</ph>Serialization03<ph id="ph10">&lt;/definedTerm&gt;
                &lt;definition&gt;
                  &lt;para&gt;</ph>Muestra cómo examinar una clase .NET existente y cómo asegurarse de que las instancias de esta clase y de las clases derivadas se deserializan (rehidratan) en objetos de .NET dinámicos.</target>         
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Event samples<ph id="ph1">&lt;/title&gt;
            &lt;content&gt;
              &lt;definitionTable&gt;
                &lt;definedTerm&gt;</ph>Event01<ph id="ph2">&lt;/definedTerm&gt;
                &lt;definition&gt;
                  &lt;para&gt;</ph>Shows how to create a cmdlet for event registration by deriving from ObjectEventRegistrationBase.<ph id="ph3">&lt;/para&gt;
                &lt;/definition&gt;
                &lt;definedTerm&gt;</ph>Event02<ph id="ph4">&lt;/definedTerm&gt;
                &lt;definition&gt;
                  &lt;para&gt;</ph>Shows how to shows how to receive notifications of <ph id="ph5">&lt;token&gt;</ph>mshshort<ph id="ph6">&lt;/token&gt;</ph> events that are generated on remote computers.</source>
          <target state="translated">Ejemplos de eventos<ph id="ph1">&lt;/title&gt;
            &lt;content&gt;
              &lt;definitionTable&gt;
                &lt;definedTerm&gt;</ph>Event01<ph id="ph2">&lt;/definedTerm&gt;
                &lt;definition&gt;
                  &lt;para&gt;</ph>Muestra cómo crear un cmdlet para el registro de eventos mediante la derivación de ObjectEventRegistrationBase.<ph id="ph3">&lt;/para&gt;
                &lt;/definition&gt;
                &lt;definedTerm&gt;</ph>Event02<ph id="ph4">&lt;/definedTerm&gt;
                &lt;definition&gt;
                  &lt;para&gt;</ph>Muestra cómo recibir notificaciones de eventos de <ph id="ph5">&lt;token&gt;</ph>mshshort<ph id="ph6">&lt;/token&gt;</ph> que se generan en equipos remotos.</target>         
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>It uses the PSEventReceived event exposed through the <ph id="ph1">&lt;codeEntityReference&gt;</ph>T:System.Management.Automation.Runspaces.Runspace<ph id="ph2">&lt;/codeEntityReference&gt;</ph> class.</source>
          <target state="translated">Usa el evento PSEventReceived que se expone a través de la clase <ph id="ph1">&lt;codeEntityReference&gt;</ph>T:System.Management.Automation.Runspaces.Runspace<ph id="ph2">&lt;/codeEntityReference&gt;</ph>.</target>         
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Hosting application samples<ph id="ph1">&lt;/title&gt;
            &lt;content&gt;
              &lt;definitionTable&gt;
                &lt;definedTerm&gt;</ph>Runspace01<ph id="ph2">&lt;/definedTerm&gt;
                &lt;definition&gt;
                  &lt;para&gt;</ph>Shows how to use the <ph id="ph3">&lt;codeEntityReference&gt;</ph>T:System.Management.Automation.PowerShell<ph id="ph4">&lt;/codeEntityReference&gt;</ph> class to run the <ph id="ph5">&lt;externalLink&gt;&lt;linkText&gt;</ph>Get-Process<ph id="ph6">&lt;/linkText&gt;&lt;linkUri&gt;</ph>http://go.microsoft.com/fwlink/?LinkId=113324<ph id="ph7">&lt;/linkUri&gt;&lt;/externalLink&gt;</ph> cmdlet synchronously.</source>
          <target state="translated">Ejemplos de aplicación host<ph id="ph1">&lt;/title&gt;
            &lt;content&gt;
              &lt;definitionTable&gt;
                &lt;definedTerm&gt;</ph>Runspace01<ph id="ph2">&lt;/definedTerm&gt;
                &lt;definition&gt;
                  &lt;para&gt;</ph>Muestra cómo usar la clase <ph id="ph3">&lt;codeEntityReference&gt;</ph>T:System.Management.Automation.PowerShell<ph id="ph4">&lt;/codeEntityReference&gt;</ph> para ejecutar el cmdlet <ph id="ph5">&lt;externalLink&gt;&lt;linkText&gt;</ph>Get-Process<ph id="ph6">&lt;/linkText&gt;&lt;linkUri&gt;</ph>http://go.microsoft.com/fwlink/?LinkId=113324<ph id="ph7">&lt;/linkUri&gt;&lt;/externalLink&gt;</ph> de forma sincrónica.</target>         
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;externalLink&gt;&lt;linkText&gt;</ph>Get-Process<ph id="ph2">&lt;/linkText&gt;&lt;linkUri&gt;</ph>http://go.microsoft.com/fwlink/?LinkId=113324<ph id="ph3">&lt;/linkUri&gt;&lt;/externalLink&gt;</ph> cmdlet returns <ph id="ph4">&lt;codeEntityReference&gt;</ph>T:System.Diagnostics.Process<ph id="ph5">&lt;/codeEntityReference&gt;</ph> objects for each process running on the local computer.<ph id="ph6">&lt;/para&gt;
                &lt;/definition&gt;
                &lt;definedTerm&gt;</ph>Runspace02<ph id="ph7">&lt;/definedTerm&gt;
                &lt;definition&gt;
                  &lt;para&gt;</ph>Shows how to use the <ph id="ph8">&lt;codeEntityReference&gt;</ph>T:System.Management.Automation.PowerShell<ph id="ph9">&lt;/codeEntityReference&gt;</ph> class to run the <ph id="ph10">&lt;externalLink&gt;&lt;linkText&gt;</ph>Get-Process<ph id="ph11">&lt;/linkText&gt;&lt;linkUri&gt;</ph>http://go.microsoft.com/fwlink/?LinkId=113324<ph id="ph12">&lt;/linkUri&gt;&lt;/externalLink&gt;</ph> and <ph id="ph13">&lt;externalLink&gt;&lt;linkText&gt;</ph>Sort-Object<ph id="ph14">&lt;/linkText&gt;&lt;linkUri&gt;</ph>http://go.microsoft.com/fwlink/?LinkID=113403<ph id="ph15">&lt;/linkUri&gt;&lt;/externalLink&gt;</ph> cmdlets synchronously.</source>
          <target state="translated">El cmdlet <ph id="ph1">&lt;externalLink&gt;&lt;linkText&gt;</ph>Get-Process<ph id="ph2">&lt;/linkText&gt;&lt;linkUri&gt;</ph>http://go.microsoft.com/fwlink/?LinkId=113324<ph id="ph3">&lt;/linkUri&gt;&lt;/externalLink&gt;</ph> devuelve objetos <ph id="ph4">&lt;codeEntityReference&gt;</ph>T:System.Diagnostics.Process<ph id="ph5">&lt;/codeEntityReference&gt;</ph> para cada proceso que se ejecuta en el equipo local.<ph id="ph6">&lt;/para&gt;
                &lt;/definition&gt;
                &lt;definedTerm&gt;</ph>Runspace02<ph id="ph7">&lt;/definedTerm&gt;
                &lt;definition&gt;
                  &lt;para&gt;</ph>Muestra cómo usar la clase <ph id="ph8">&lt;codeEntityReference&gt;</ph>T:System.Management.Automation.PowerShell<ph id="ph9">&lt;/codeEntityReference&gt;</ph> para ejecutar los cmdlets <ph id="ph10">&lt;externalLink&gt;&lt;linkText&gt;</ph>Get-Process<ph id="ph11">&lt;/linkText&gt;&lt;linkUri&gt;</ph>http://go.microsoft.com/fwlink/?LinkId=113324<ph id="ph12">&lt;/linkUri&gt;&lt;/externalLink&gt;</ph> y <ph id="ph13">&lt;externalLink&gt;&lt;linkText&gt;</ph>Sort-Object<ph id="ph14">&lt;/linkText&gt;&lt;linkUri&gt;</ph>http://go.microsoft.com/fwlink/?LinkID=113403<ph id="ph15">&lt;/linkUri&gt;&lt;/externalLink&gt;</ph> de forma sincrónica.</target>         
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;externalLink&gt;&lt;linkText&gt;</ph>Get-Process<ph id="ph2">&lt;/linkText&gt;&lt;linkUri&gt;</ph>http://go.microsoft.com/fwlink/?LinkId=113324<ph id="ph3">&lt;/linkUri&gt;&lt;/externalLink&gt;</ph> cmdlet returns <ph id="ph4">&lt;codeEntityReference&gt;</ph>T:System.Diagnostics.Process<ph id="ph5">&lt;/codeEntityReference&gt;</ph> objects for each process running on the local computer, and the Sort-Object sorts the objects based on their <ph id="ph6">&lt;codeEntityReference&gt;</ph>P:System.Diagnostics.Process.Id<ph id="ph7">&lt;/codeEntityReference&gt;</ph> property.</source>
          <target state="translated">El cmdlet <ph id="ph1">&lt;externalLink&gt;&lt;linkText&gt;</ph>Get-Process<ph id="ph2">&lt;/linkText&gt;&lt;linkUri&gt;</ph>http://go.microsoft.com/fwlink/?LinkId=113324<ph id="ph3">&lt;/linkUri&gt;&lt;/externalLink&gt;</ph> devuelve objetos <ph id="ph4">&lt;codeEntityReference&gt;</ph>T:System.Diagnostics.Process<ph id="ph5">&lt;/codeEntityReference&gt;</ph> para cada proceso que se ejecuta en el equipo local y el cmdlet Sort-Object ordena los objetos según su propiedad <ph id="ph6">&lt;codeEntityReference&gt;</ph>P:System.Diagnostics.Process.Id<ph id="ph7">&lt;/codeEntityReference&gt;</ph>.</target>         
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>The results of these commands is displayed by using a <ph id="ph1">&lt;codeEntityReference&gt;</ph>T:System.Windows.Forms.DataGridView<ph id="ph2">&lt;/codeEntityReference&gt;</ph> control.<ph id="ph3">&lt;/para&gt;
                &lt;/definition&gt;
                &lt;definedTerm&gt;</ph>Runspace03<ph id="ph4">&lt;/definedTerm&gt;
                &lt;definition&gt;
                  &lt;para&gt;</ph>Shows how to use the <ph id="ph5">&lt;codeEntityReference&gt;</ph>T:System.Management.Automation.PowerShell<ph id="ph6">&lt;/codeEntityReference&gt;</ph> class to run a script synchronously, and how to handle non-terminating errors.</source>
          <target state="translated">Los resultados de estos comandos se muestran mediante un control <ph id="ph1">&lt;codeEntityReference&gt;</ph>DataGridView<ph id="ph2">&lt;/codeEntityReference&gt;</ph>.<ph id="ph3">&lt;/para&gt;
                &lt;/definition&gt;
                &lt;definedTerm&gt;</ph>Runspace03<ph id="ph4">&lt;/definedTerm&gt;
                &lt;definition&gt;
                  &lt;para&gt;</ph>Muestra cómo usar la clase <ph id="ph5">&lt;codeEntityReference&gt;</ph>T:System.Management.Automation.PowerShell<ph id="ph6">&lt;/codeEntityReference&gt;</ph> para ejecutar un script de forma sincrónica y cómo controlar los errores de no terminación.</target>         
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>The script receives a list of process names and then retrieves those processes.</source>
          <target state="translated">El script recibe una lista de nombres de procesos y después los recupera.</target>         
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>The results of the script, including any non-terminating errors that were generated when running the script, are displayed in a console window.<ph id="ph1">&lt;/para&gt;
                &lt;/definition&gt;
                &lt;definedTerm&gt;</ph>Runspace04<ph id="ph2">&lt;/definedTerm&gt;
                &lt;definition&gt;
                  &lt;para&gt;</ph>Shows how to use the <ph id="ph3">&lt;codeEntityReference&gt;</ph>T:System.Management.Automation.PowerShell<ph id="ph4">&lt;/codeEntityReference&gt;</ph> class to run commands, and how to catch terminating errors that are thrown when running the commands.</source>
          <target state="translated">Los resultados del script, incluidos los errores de no terminación generados al ejecutarlo, se muestran en una ventana de consola.<ph id="ph1">&lt;/para&gt;
                &lt;/definition&gt;
                &lt;definedTerm&gt;</ph>Runspace04<ph id="ph2">&lt;/definedTerm&gt;
                &lt;definition&gt;
                  &lt;para&gt;</ph>Muestra cómo usar la clase <ph id="ph3">&lt;codeEntityReference&gt;</ph>T:System.Management.Automation.PowerShell<ph id="ph4">&lt;/codeEntityReference&gt;</ph> para ejecutar comandos y cómo capturar los errores de terminación que se producen al ejecutar dichos comandos.</target>         
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Two commands are run, and the last command is passed a parameter argument that is not valid.</source>
          <target state="translated">Se ejecutan dos comandos; al último, se le pasa un argumento de parámetro que no es válido.</target>         
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>As a result, no objects are returned and a terminating error is thrown.<ph id="ph1">&lt;/para&gt;
                &lt;/definition&gt;
                &lt;definedTerm&gt;</ph>Runspace05<ph id="ph2">&lt;/definedTerm&gt;
                &lt;definition&gt;
                  &lt;para&gt;</ph>Shows how to add a snap-in to an <ph id="ph3">&lt;codeEntityReference&gt;</ph>T:System.Management.Automation.Runspaces.InitialSessionState<ph id="ph4">&lt;/codeEntityReference&gt;</ph> object so that the cmdlet of the snap-in is available when the runspace is opened.</source>
          <target state="translated">Como resultado, no se devuelve ningún objeto y se produce un error de terminación.<ph id="ph1">&lt;/para&gt;
                &lt;/definition&gt;
                &lt;definedTerm&gt;</ph>Runspace05<ph id="ph2">&lt;/definedTerm&gt;
                &lt;definition&gt;
                  &lt;para&gt;</ph>Muestra cómo agregar un complemento a un objeto <ph id="ph3">&lt;codeEntityReference&gt;</ph>T:System.Management.Automation.Runspaces.InitialSessionState<ph id="ph4">&lt;/codeEntityReference&gt;</ph> para que el cmdlet del complemento esté disponible al abrir el espacio de ejecución.</target>         
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>The snap-in provides a Get-Proc cmdlet (defined by the <ph id="ph1">&lt;legacyLink xlink:href="7b48bf80-cbf0-4cb1-8d5b-3b8d06196598"&gt;</ph>GetProcessSample01 Sample<ph id="ph2">&lt;/legacyLink&gt;</ph>) that is run synchronously by using a <ph id="ph3">&lt;codeEntityReference&gt;</ph>T:System.Management.Automation.PowerShell<ph id="ph4">&lt;/codeEntityReference&gt;</ph> object.<ph id="ph5">&lt;/para&gt;
                &lt;/definition&gt;
                &lt;definedTerm&gt;</ph>Runspace06<ph id="ph6">&lt;/definedTerm&gt;
                &lt;definition&gt;
                  &lt;para&gt;</ph>Shows how to add a module to an <ph id="ph7">&lt;codeEntityReference&gt;</ph>T:System.Management.Automation.Runspaces.InitialSessionState<ph id="ph8">&lt;/codeEntityReference&gt;</ph> object so that the module is loaded when the runspace is opened.</source>
          <target state="translated">El complemento proporciona un cmdlet Get-Proc (definido por el <ph id="ph1">&lt;legacyLink xlink:href="7b48bf80-cbf0-4cb1-8d5b-3b8d06196598"&gt;</ph>ejemplo GetProcessSample01<ph id="ph2">&lt;/legacyLink&gt;</ph>) que se ejecuta de forma sincrónica mediante un objeto <ph id="ph3">&lt;codeEntityReference&gt;</ph>T:System.Management.Automation.PowerShell<ph id="ph4">&lt;/codeEntityReference&gt;</ph>.<ph id="ph5">&lt;/para&gt;
                &lt;/definition&gt;
                &lt;definedTerm&gt;</ph>Runspace06<ph id="ph6">&lt;/definedTerm&gt;
                &lt;definition&gt;
                  &lt;para&gt;</ph>Muestra cómo agregar un módulo a un objeto <ph id="ph7">&lt;codeEntityReference&gt;</ph>T:System.Management.Automation.Runspaces.InitialSessionState<ph id="ph8">&lt;/codeEntityReference&gt;</ph> para que el módulo se cargue al abrir el espacio de ejecución.</target>         
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>The module provides a Get-Proc cmdlet (defined by the <ph id="ph1">&lt;legacyLink xlink:href="481f557d-3344-4d33-b2da-4736a0165181"&gt;</ph>GetProcessSample02 Sample<ph id="ph2">&lt;/legacyLink&gt;</ph>) that is run synchronously by using a <ph id="ph3">&lt;codeEntityReference&gt;</ph>T:System.Management.Automation.PowerShell<ph id="ph4">&lt;/codeEntityReference&gt;</ph> object.<ph id="ph5">&lt;/para&gt;
                &lt;/definition&gt;
                &lt;definedTerm&gt;</ph>Runspace07<ph id="ph6">&lt;/definedTerm&gt;
                &lt;definition&gt;
                  &lt;para&gt;</ph>Shows how to create a runspace, and then use that runspace to run two cmdlets synchronously by using a <ph id="ph7">&lt;codeEntityReference&gt;</ph>T:System.Management.Automation.PowerShell<ph id="ph8">&lt;/codeEntityReference&gt;</ph> object.<ph id="ph9">&lt;/para&gt;
                &lt;/definition&gt;
                &lt;definedTerm&gt;</ph>Runspace08<ph id="ph10">&lt;/definedTerm&gt;
                &lt;definition&gt;
                  &lt;para&gt;</ph>Shows how to add commands and arguments to the pipeline of a <ph id="ph11">&lt;codeEntityReference&gt;</ph>T:System.Management.Automation.PowerShell<ph id="ph12">&lt;/codeEntityReference&gt;</ph> object and how to run the commands synchronously.<ph id="ph13">&lt;/para&gt;
                &lt;/definition&gt;
                &lt;definedTerm&gt;</ph>Runspace09<ph id="ph14">&lt;/definedTerm&gt;
                &lt;definition&gt;
                  &lt;para&gt;</ph>Shows how to add a script to the pipeline of a <ph id="ph15">&lt;codeEntityReference&gt;</ph>T:System.Management.Automation.PowerShell<ph id="ph16">&lt;/codeEntityReference&gt;</ph> object and how to run the script asynchronously.</source>
          <target state="translated">El módulo proporciona un cmdlet Get-Proc (definido por el <ph id="ph1">&lt;legacyLink xlink:href="481f557d-3344-4d33-b2da-4736a0165181"&gt;</ph>ejemplo GetProcessSample02<ph id="ph2">&lt;/legacyLink&gt;</ph>) que se ejecuta de forma sincrónica mediante un objeto <ph id="ph3">&lt;codeEntityReference&gt;</ph>T:System.Management.Automation.PowerShell<ph id="ph4">&lt;/codeEntityReference&gt;</ph>.<ph id="ph5">&lt;/para&gt;
                &lt;/definition&gt;
                &lt;definedTerm&gt;</ph>Runspace07<ph id="ph6">&lt;/definedTerm&gt;
                &lt;definition&gt;
                  &lt;para&gt;</ph>Muestra cómo crear un espacio de ejecución y lo usa para ejecutar dos cmdlets de forma sincrónica mediante un objeto <ph id="ph7">&lt;codeEntityReference&gt;</ph>T:System.Management.Automation.PowerShell<ph id="ph8">&lt;/codeEntityReference&gt;</ph>.<ph id="ph9">&lt;/para&gt;
                &lt;/definition&gt;
                &lt;definedTerm&gt;</ph>Runspace08<ph id="ph10">&lt;/definedTerm&gt;
                &lt;definition&gt;
                  &lt;para&gt;</ph>Muestra cómo agregar comandos y argumentos a la canalización de un objeto <ph id="ph11">&lt;codeEntityReference&gt;</ph>T:System.Management.Automation.PowerShell<ph id="ph12">&lt;/codeEntityReference&gt;</ph> y cómo ejecutar los comandos de forma sincrónica.<ph id="ph13">&lt;/para&gt;
                &lt;/definition&gt;
                &lt;definedTerm&gt;</ph>Runspace09<ph id="ph14">&lt;/definedTerm&gt;
                &lt;definition&gt;
                  &lt;para&gt;</ph>Muestra cómo agregar un script a la canalización de un objeto <ph id="ph15">&lt;codeEntityReference&gt;</ph>T:System.Management.Automation.PowerShell<ph id="ph16">&lt;/codeEntityReference&gt;</ph> y cómo ejecutar la secuencia de comandos de forma asincrónica.</target>         
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Events are used to handle the output of the script.<ph id="ph1">&lt;/para&gt;
                &lt;/definition&gt;
                &lt;definedTerm&gt;</ph>Runspace10<ph id="ph2">&lt;/definedTerm&gt;
                &lt;definition&gt;
                  &lt;para&gt;</ph>Shows how to create a default initial session state, how to add a cmdlet to the <ph id="ph3">&lt;codeEntityReference&gt;</ph>T:System.Management.Automation.Runspaces.InitialSessionState<ph id="ph4">&lt;/codeEntityReference&gt;</ph>, how to create a runspace that uses the initial session state, and how to run the command by using a <ph id="ph5">&lt;codeEntityReference&gt;</ph>T:System.Management.Automation.PowerShell<ph id="ph6">&lt;/codeEntityReference&gt;</ph> object.<ph id="ph7">&lt;/para&gt;
                &lt;/definition&gt;
                &lt;definedTerm&gt;</ph>Runspace11<ph id="ph8">&lt;/definedTerm&gt;
                &lt;definition&gt;
                  &lt;para&gt;</ph>Shows how to use the <ph id="ph9">&lt;codeEntityReference&gt;</ph>T:System.Management.Automation.ProxyCommand<ph id="ph10">&lt;/codeEntityReference&gt;</ph> class to create a proxy command that calls an existing cmdlet, but restricts the set of available parameters.</source>
          <target state="translated">Los eventos se usan para controlar la salida del script.<ph id="ph1">&lt;/para&gt;
                &lt;/definition&gt;
                &lt;definedTerm&gt;</ph>Runspace10<ph id="ph2">&lt;/definedTerm&gt;
                &lt;definition&gt;
                  &lt;para&gt;</ph>Muestra cómo crear un estado de sesión inicial predeterminado, cómo agregar un cmdlet a <ph id="ph3">&lt;codeEntityReference&gt;</ph>T:System.Management.Automation.Runspaces.InitialSessionState<ph id="ph4">&lt;/codeEntityReference&gt;</ph>, cómo crear un espacio de ejecución que use el estado de sesión inicial y cómo ejecutar el comando con un objeto <ph id="ph5">&lt;codeEntityReference&gt;</ph>T:System.Management.Automation.PowerShell<ph id="ph6">&lt;/codeEntityReference&gt;</ph>.<ph id="ph7">&lt;/para&gt;
                &lt;/definition&gt;
                &lt;definedTerm&gt;</ph>Runspace11<ph id="ph8">&lt;/definedTerm&gt;
                &lt;definition&gt;
                  &lt;para&gt;</ph>Muestra cómo usar la clase <ph id="ph9">&lt;codeEntityReference&gt;</ph>T:System.Management.Automation.ProxyCommand<ph id="ph10">&lt;/codeEntityReference&gt;</ph> para crear un comando de proxy que llama a un cmdlet existente, pero restringe el conjunto de parámetros disponibles.</target>         
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>The proxy command is then added to an initial session state that is used to create a constrained runspace.</source>
          <target state="translated">El comando de proxy se agrega entonces a un estado de sesión inicial que se usa para crear un espacio de ejecución restringido.</target>         
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>This means that the user can access the functionality of the cmdlet only through the proxy command.<ph id="ph1">&lt;/para&gt;
                &lt;/definition&gt;
                &lt;definedTerm&gt;</ph>PowerShell01<ph id="ph2">&lt;/definedTerm&gt;
                &lt;definition&gt;
                  &lt;para&gt;</ph>Shows how to create a constrained runspace using an <ph id="ph3">&lt;codeEntityReference&gt;</ph>T:System.Management.Automation.Runspaces.InitialSessionState<ph id="ph4">&lt;/codeEntityReference&gt;</ph> object.<ph id="ph5">&lt;/para&gt;
                &lt;/definition&gt;
                &lt;definedTerm&gt;</ph>PowerShell02<ph id="ph6">&lt;/definedTerm&gt;
                &lt;definition&gt;
                  &lt;para&gt;</ph>Shows how to use a runspace pool to run multiple commands concurrently.</source>
          <target state="translated">Esto significa que el usuario puede acceder a la funcionalidad del cmdlet solo mediante el comando de proxy.<ph id="ph1">&lt;/para&gt;
                &lt;/definition&gt;
                &lt;definedTerm&gt;</ph>PowerShell01<ph id="ph2">&lt;/definedTerm&gt;
                &lt;definition&gt;
                  &lt;para&gt;</ph>Muestra cómo crear un espacio de ejecución restringido mediante un objeto <ph id="ph3">&lt;codeEntityReference&gt;</ph>T:System.Management.Automation.Runspaces.InitialSessionState<ph id="ph4">&lt;/codeEntityReference&gt;</ph>.<ph id="ph5">&lt;/para&gt;
                &lt;/definition&gt;
                &lt;definedTerm&gt;</ph>PowerShell02<ph id="ph6">&lt;/definedTerm&gt;
                &lt;definition&gt;
                  &lt;para&gt;</ph>Muestra cómo usar un grupo de espacio de ejecución para ejecutar varios comandos simultáneamente.</target>         
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Host samples<ph id="ph1">&lt;/title&gt;
            &lt;content&gt;
              &lt;definitionTable&gt;
                &lt;definedTerm&gt;</ph>Host01<ph id="ph2">&lt;/definedTerm&gt;
                &lt;definition&gt;
                  &lt;para&gt;</ph>Shows how to implement a host application that uses a custom host.</source>
          <target state="translated">Ejemplos de host<ph id="ph1">&lt;/title&gt;
            &lt;content&gt;
              &lt;definitionTable&gt;
                &lt;definedTerm&gt;</ph>Host01<ph id="ph2">&lt;/definedTerm&gt;
                &lt;definition&gt;
                  &lt;para&gt;</ph>Muestra cómo implementar una aplicación host que usa un host personalizado.</target>         
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>In this sample a runspace is created that uses the custom host, and then the <ph id="ph1">&lt;codeEntityReference&gt;</ph>T:System.Management.Automation.PowerShell<ph id="ph2">&lt;/codeEntityReference&gt;</ph> API is used to run a script that calls “exit.”</source>
          <target state="translated">En este ejemplo se crea un espacio de ejecución que usa el host personalizado y, después, se usa la API <ph id="ph1">&lt;codeEntityReference&gt;</ph>T:System.Management.Automation.PowerShell<ph id="ph2">&lt;/codeEntityReference&gt;</ph> para ejecutar un script que llame al código "exit".</target>         
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>The host application then looks at the output of the script and prints out the results.<ph id="ph1">&lt;/para&gt;
                &lt;/definition&gt;
                &lt;definedTerm&gt;</ph>Host02<ph id="ph2">&lt;/definedTerm&gt;
                &lt;definition&gt;
                  &lt;para&gt;</ph>Shows how to write a host application that uses the <ph id="ph3">&lt;token&gt;</ph>mshshort<ph id="ph4">&lt;/token&gt;</ph> runtime along with a custom host implementation.</source>
          <target state="translated">La aplicación host examina después el resultado de la secuencia de comandos e imprime los resultados.<ph id="ph1">&lt;/para&gt;
                &lt;/definition&gt;
                &lt;definedTerm&gt;</ph>Host02<ph id="ph2">&lt;/definedTerm&gt;
                &lt;definition&gt;
                  &lt;para&gt;</ph>Muestra cómo escribir una aplicación host que usa el tiempo de ejecución <ph id="ph3">&lt;token&gt;</ph>mshshort<ph id="ph4">&lt;/token&gt;</ph> junto con una implementación de host personalizado.</target>         
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>The host application sets the host culture to German, runs the <ph id="ph1">&lt;externalLink&gt;&lt;linkText&gt;</ph>Get-Process<ph id="ph2">&lt;/linkText&gt;&lt;linkUri&gt;</ph>http://go.microsoft.com/fwlink/?LinkId=113324<ph id="ph3">&lt;/linkUri&gt;&lt;/externalLink&gt;</ph> cmdlet and displays the results as you would see them by using pwrsh.exe, and then prints out the current data and time in German.<ph id="ph4">&lt;/para&gt;
                &lt;/definition&gt;
                &lt;definedTerm&gt;</ph>Host03<ph id="ph5">&lt;/definedTerm&gt;
                &lt;definition&gt;
                  &lt;para&gt;</ph>Shows how to build an interactive console-based host application that reads commands from the command line, executes the commands, and then displays the results to the console.<ph id="ph6">&lt;/para&gt;
                &lt;/definition&gt;
                &lt;definedTerm&gt;</ph>Host04<ph id="ph7">&lt;/definedTerm&gt;
                &lt;definition&gt;
                  &lt;para&gt;</ph>Shows how to build an interactive console-based host application that reads commands from the command line, executes the commands, and then displays the results to the console.</source>
          <target state="translated">La aplicación host establece la referencia cultural del host como alemán, ejecuta el cmdlet <ph id="ph1">&lt;externalLink&gt;&lt;linkText&gt;</ph>Get-Process<ph id="ph2">&lt;/linkText&gt;&lt;linkUri&gt;</ph>http://go.microsoft.com/fwlink/?LinkId=113324<ph id="ph3">&lt;/linkUri&gt;&lt;/externalLink&gt;</ph>, muestra los resultados tal como los vería con pwrsh.exe e imprime los datos y la hora actuales en alemán.<ph id="ph4">&lt;/para&gt;
                &lt;/definition&gt;
                &lt;definedTerm&gt;</ph>Host03<ph id="ph5">&lt;/definedTerm&gt;
                &lt;definition&gt;
                  &lt;para&gt;</ph>Muestra cómo crear una aplicación host basada en consola interactiva que lee los comandos de la línea de comandos, los ejecuta y muestra sus resultados en la consola.<ph id="ph6">&lt;/para&gt;
                &lt;/definition&gt;
                &lt;definedTerm&gt;</ph>Host04<ph id="ph7">&lt;/definedTerm&gt;
                &lt;definition&gt;
                  &lt;para&gt;</ph>Muestra cómo crear una aplicación host basada en consola interactiva que lee los comandos de la línea de comandos, los ejecuta y muestra sus resultados en la consola.</target>         
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>This host application also supports displaying prompts that allow the user to specify multiple choices.<ph id="ph1">&lt;/para&gt;
                &lt;/definition&gt;
                &lt;definedTerm&gt;</ph>Host05<ph id="ph2">&lt;/definedTerm&gt;
                &lt;definition&gt;
                  &lt;para&gt;</ph>Shows how to build an interactive console-based host application that reads commands from the command line, executes the commands, and then displays the results to the console.</source>
          <target state="translated">Esta aplicación host también permite mostrar avisos para que el usuario pueda especificar varias opciones.<ph id="ph1">&lt;/para&gt;
                &lt;/definition&gt;
                &lt;definedTerm&gt;</ph>Host05<ph id="ph2">&lt;/definedTerm&gt;
                &lt;definition&gt;
                  &lt;para&gt;</ph>Muestra cómo crear una aplicación host basada en consola interactiva que lee los comandos de la línea de comandos, los ejecuta y muestra sus resultados en la consola.</target>         
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>This host application also supports calls to remote computers by using the <ph id="ph1">&lt;externalLink&gt;&lt;linkText&gt;</ph>Enter-PsSession<ph id="ph2">&lt;/linkText&gt;&lt;linkUri&gt;</ph>http://go.microsoft.com/fwlink/?LinkId=135210<ph id="ph3">&lt;/linkUri&gt;&lt;/externalLink&gt;</ph> and <ph id="ph4">&lt;externalLink&gt;&lt;linkText&gt;</ph>Exit-PsSession<ph id="ph5">&lt;/linkText&gt;&lt;linkUri&gt;</ph>http://go.microsoft.com/fwlink/?LinkId=135212<ph id="ph6">&lt;/linkUri&gt;&lt;/externalLink&gt;</ph> cmdlets.<ph id="ph7">&lt;/para&gt;
                &lt;/definition&gt;
                &lt;definedTerm&gt;</ph>Host06<ph id="ph8">&lt;/definedTerm&gt;
                &lt;definition&gt;
                  &lt;para&gt;</ph>Shows how to build an interactive console-based host application that reads commands from the command line, executes the commands, and then displays the results to the console.</source>
          <target state="translated">Esta aplicación host también admite llamadas a equipos remotos mediante los cmdlets <ph id="ph1">&lt;externalLink&gt;&lt;linkText&gt;</ph>Enter-PsSession<ph id="ph2">&lt;/linkText&gt;&lt;linkUri&gt;</ph>http://go.microsoft.com/fwlink/?LinkId=135210<ph id="ph3">&lt;/linkUri&gt;&lt;/externalLink&gt;</ph> y <ph id="ph4">&lt;externalLink&gt;&lt;linkText&gt;</ph>Exit-PsSession<ph id="ph5">&lt;/linkText&gt;&lt;linkUri&gt;</ph>http://go.microsoft.com/fwlink/?LinkId=135212<ph id="ph6">&lt;/linkUri&gt;&lt;/externalLink&gt;</ph>.<ph id="ph7">&lt;/para&gt;
                &lt;/definition&gt;
                &lt;definedTerm&gt;</ph>Host06<ph id="ph8">&lt;/definedTerm&gt;
                &lt;definition&gt;
                  &lt;para&gt;</ph>Muestra cómo crear una aplicación host basada en consola interactiva que lee los comandos de la línea de comandos, los ejecuta y muestra sus resultados en la consola.</target>         
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>In addition, this sample uses the Tokenizer APIs to specify the color of the text that is entered by the user.</source>
          <target state="translated">Además, este ejemplo utiliza las API de Tokenizer para especificar el color del texto que el usuario ha escrito.</target>         
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Provider samples<ph id="ph1">&lt;/title&gt;
            &lt;content&gt;
              &lt;definitionTable&gt;
                &lt;definedTerm&gt;</ph>AccessDBProviderSample01<ph id="ph2">&lt;/definedTerm&gt;
                &lt;definition&gt;
                  &lt;para&gt;</ph>Shows how to declare a provider class that derives directly from the <ph id="ph3">&lt;codeEntityReference&gt;</ph>T:System.Management.Automation.Provider.CmdletProvider<ph id="ph4">&lt;/codeEntityReference&gt;</ph> class.</source>
          <target state="translated">Ejemplos de proveedor<ph id="ph1">&lt;/title&gt;
            &lt;content&gt;
              &lt;definitionTable&gt;
                &lt;definedTerm&gt;</ph>AccessDBProviderSample01<ph id="ph2">&lt;/definedTerm&gt;
                &lt;definition&gt;
                  &lt;para&gt;</ph>Muestra cómo declarar una clase de proveedor que se deriva directamente de la clase <ph id="ph3">&lt;codeEntityReference&gt;</ph>T:System.Management.Automation.Provider.CmdletProvider<ph id="ph4">&lt;/codeEntityReference&gt;</ph>.</target>         
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>It is included here only for completeness.<ph id="ph1">&lt;/para&gt;
                &lt;/definition&gt;
                &lt;definedTerm&gt;</ph>AccessDBProviderSample02<ph id="ph2">&lt;/definedTerm&gt;
                &lt;definition&gt;
                  &lt;para&gt;</ph>Shows how to overwrite the <ph id="ph3">&lt;codeEntityReference&gt;</ph>M:System.Management.Automation.Provider.DriveCmdletProvider.NewDrive(System.Management.Automation.PSDriveInfo)<ph id="ph4">&lt;/codeEntityReference&gt;</ph> and <ph id="ph5">&lt;codeEntityReference&gt;</ph>M:System.Management.Automation.Provider.DriveCmdletProvider.RemoveDrive(System.Management.Automation.PSDriveInfo)<ph id="ph6">&lt;/codeEntityReference&gt;</ph> methods to support calls to the New-PSDrive and Remove-PSDrive cmdlets.</source>
          <target state="translated">Se incluye aquí solo por cuestiones de integridad.<ph id="ph1">&lt;/para&gt;
                &lt;/definition&gt;
                &lt;definedTerm&gt;</ph>AccessDBProviderSample02<ph id="ph2">&lt;/definedTerm&gt;
                &lt;definition&gt;
                  &lt;para&gt;</ph>Muestra cómo sobrescribir los métodos <ph id="ph3">&lt;codeEntityReference&gt;</ph>M:System.Management.Automation.Provider.DriveCmdletProvider.NewDrive(System.Management.Automation.PSDriveInfo)<ph id="ph4">&lt;/codeEntityReference&gt;</ph> y <ph id="ph5">&lt;codeEntityReference&gt;</ph>M:System.Management.Automation.Provider.DriveCmdletProvider.RemoveDrive(System.Management.Automation.PSDriveInfo)<ph id="ph6">&lt;/codeEntityReference&gt;</ph> para admitir llamadas a los cmdlets New-PSDrive y Remove-PSDrive.</target>         
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>The provider class in this sample derives from the <ph id="ph1">&lt;codeEntityReference&gt;</ph>T:System.Management.Automation.Provider.DriveCmdletProvider<ph id="ph2">&lt;/codeEntityReference&gt;</ph> class.<ph id="ph3">&lt;/para&gt;
                &lt;/definition&gt;
                &lt;definedTerm&gt;</ph>AccessDBProviderSample03<ph id="ph4">&lt;/definedTerm&gt;
                &lt;definition&gt;
                  &lt;para&gt;</ph>Shows how to overwrite the <ph id="ph5">&lt;codeEntityReference&gt;</ph>M:System.Management.Automation.Provider.ItemCmdletProvider.GetItem(System.String)<ph id="ph6">&lt;/codeEntityReference&gt;</ph> and <ph id="ph7">&lt;codeEntityReference&gt;</ph>M:System.Management.Automation.Provider.ItemCmdletProvider.SetItem(System.String,System.Object)<ph id="ph8">&lt;/codeEntityReference&gt;</ph> methods to support calls to the Get-Item and Set-Item cmdlets.</source>
          <target state="translated">La clase de proveedor de este ejemplo se deriva de la clase <ph id="ph1">&lt;codeEntityReference&gt;</ph>T:System.Management.Automation.Provider.DriveCmdletProvider<ph id="ph2">&lt;/codeEntityReference&gt;</ph>.<ph id="ph3">&lt;/para&gt;
                &lt;/definition&gt;
                &lt;definedTerm&gt;</ph>AccessDBProviderSample03<ph id="ph4">&lt;/definedTerm&gt;
                &lt;definition&gt;
                  &lt;para&gt;</ph>Muestra cómo sobrescribir los métodos <ph id="ph5">&lt;codeEntityReference&gt;</ph>M:System.Management.Automation.Provider.ItemCmdletProvider.GetItem(System.String)<ph id="ph6">&lt;/codeEntityReference&gt;</ph> y <ph id="ph7">&lt;codeEntityReference&gt;</ph>M:System.Management.Automation.Provider.ItemCmdletProvider.SetItem(System.String,System.Object)<ph id="ph8">&lt;/codeEntityReference&gt;</ph> para admitir llamadas a los cmdlets Get-Item y Set-Item.</target>         
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>The provider class in this sample derives from the <ph id="ph1">&lt;codeEntityReference&gt;</ph>T:System.Management.Automation.Provider.ItemCmdletProvider<ph id="ph2">&lt;/codeEntityReference&gt;</ph> class.<ph id="ph3">&lt;/para&gt;
                &lt;/definition&gt;
                &lt;definedTerm&gt;</ph>AccessDBProviderSample04<ph id="ph4">&lt;/definedTerm&gt;
                &lt;definition&gt;
                  &lt;para&gt;</ph>Shows how to overwrite container methods to support calls to the Copy-Item, Get-ChildItem, New-Item, and Remove-Item cmdlets.</source>
          <target state="translated">La clase de proveedor en este ejemplo se deriva de la clase <ph id="ph1">&lt;codeEntityReference&gt;</ph>T:System.Management.Automation.Provider.ItemCmdletProvider<ph id="ph2">&lt;/codeEntityReference&gt;</ph>.<ph id="ph3">&lt;/para&gt;
                &lt;/definition&gt;
                &lt;definedTerm&gt;</ph>AccessDBProviderSample04<ph id="ph4">&lt;/definedTerm&gt;
                &lt;definition&gt;
                  &lt;para&gt;</ph>Muestra cómo sobrescribir los métodos de contenedor para admitir llamadas a los cmdlets Copy-Item, Get-ChildItem, New-Item y Remove-Item.</target>         
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>These methods should be implemented when the data store contains items that are containers.</source>
          <target state="translated">Estos métodos deberían implementarse cuando el almacén de datos contengan elementos que son contenedores.</target>         
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>A container is a group of child items under a common parent item.</source>
          <target state="translated">Un contenedor es un grupo de elementos secundarios con un elemento primario común.</target>         
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>The provider class in this sample derives from the <ph id="ph1">&lt;codeEntityReference&gt;</ph>T:System.Management.Automation.Provider.ItemCmdletProvider<ph id="ph2">&lt;/codeEntityReference&gt;</ph> class.<ph id="ph3">&lt;/para&gt;
                &lt;/definition&gt;
                &lt;definedTerm&gt;</ph>AccessDBProviderSample05<ph id="ph4">&lt;/definedTerm&gt;
                &lt;definition&gt;
                  &lt;para&gt;</ph>Shows how to overwrite container methods to support calls to the Move-Item and Join-Path cmdlets.</source>
          <target state="translated">La clase de proveedor de este ejemplo se deriva de la clase <ph id="ph1">&lt;codeEntityReference&gt;</ph>T:System.Management.Automation.Provider.ItemCmdletProvider<ph id="ph2">&lt;/codeEntityReference&gt;</ph>.<ph id="ph3">&lt;/para&gt;
                &lt;/definition&gt;
                &lt;definedTerm&gt;</ph>AccessDBProviderSample05<ph id="ph4">&lt;/definedTerm&gt;
                &lt;definition&gt;
                  &lt;para&gt;</ph>Muestra cómo sobrescribir los métodos de contenedor para admitir llamadas a los cmdlets Move-Item y Join-Path.</target>         
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>These methods should be implemented when the user needs to move items within a container and if the data store contains nested containers.</source>
          <target state="translated">Estos métodos deberían implementarse cuando el usuario necesite mover elementos dentro de un contenedor y si el almacén de datos tiene contenedores anidados.</target>         
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>The provider class in this sample derives from the <ph id="ph1">&lt;codeEntityReference&gt;</ph>T:System.Management.Automation.Provider.NavigationCmdletProvider<ph id="ph2">&lt;/codeEntityReference&gt;</ph> class.<ph id="ph3">&lt;/para&gt;
                &lt;/definition&gt;
                &lt;definedTerm&gt;</ph>AccessDBProviderSample06<ph id="ph4">&lt;/definedTerm&gt;
                &lt;definition&gt;
                  &lt;para&gt;</ph>Shows how to overwrite content methods to support calls to the Clear-Content, Get-Content, and Set-Content cmdlets.</source>
          <target state="translated">La clase de proveedor de este ejemplo se deriva de la clase <ph id="ph1">&lt;codeEntityReference&gt;</ph>T:System.Management.Automation.Provider.NavigationCmdletProvider<ph id="ph2">&lt;/codeEntityReference&gt;</ph>.<ph id="ph3">&lt;/para&gt;
                &lt;/definition&gt;
                &lt;definedTerm&gt;</ph>AccessDBProviderSample06<ph id="ph4">&lt;/definedTerm&gt;
                &lt;definition&gt;
                  &lt;para&gt;</ph>Muestra cómo sobrescribir métodos de contenido para admitir llamadas a los cmdlets Clear-Content, Get-Content y Set-Content.</target>         
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>These methods should be implemented when the user needs to manage the content of the items in the data store.</source>
          <target state="translated">Estos métodos deberían implementarse cuando el usuario necesite administrar el contenido de los elementos en el almacén de datos.</target>         
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>The provider class in this sample derives from the <ph id="ph1">&lt;codeEntityReference&gt;</ph>T:System.Management.Automation.Provider.NavigationCmdletProvider<ph id="ph2">&lt;/codeEntityReference&gt;</ph> class, and it implements the <ph id="ph3">&lt;codeEntityReference&gt;</ph>T:System.Management.Automation.Provider.IContentCmdletProvider<ph id="ph4">&lt;/codeEntityReference&gt;</ph> interface.</source>
          <target state="translated">La clase de proveedor de este ejemplo se deriva de la clase <ph id="ph1">&lt;codeEntityReference&gt;</ph>T:System.Management.Automation.Provider.NavigationCmdletProvider<ph id="ph2">&lt;/codeEntityReference&gt;</ph>; también se implementa la interfaz <ph id="ph3">&lt;codeEntityReference&gt;</ph>T:System.Management.Automation.Provider.IContentCmdletProvider<ph id="ph4">&lt;/codeEntityReference&gt;</ph>.</target>         
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>