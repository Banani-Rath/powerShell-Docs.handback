<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="es-es">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-1c394fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">3dcdd0358714b2fdd0fb1501397e34c15ea12e48</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">reference\5.0\Microsoft.PowerShell.Utility\ConvertFrom-StringData.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions" />
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">098b94c03018e0d4aad6a3fa4be256b3f3655d19</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f8304cfb5a18936f4ce8efa6c38ba30d169c47e3</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>powershell, cmdlet</source>
          <target state="translated">cmdlet de PowerShell</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>ConvertFrom-StringData</source>
          <target state="translated">ConvertFrom-StringData</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>ConvertFrom-StringData</source>
          <target state="translated">ConvertFrom-StringData</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>SYNOPSIS</source>
          <target state="translated">SINOPSIS</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Converts a string containing one or more key and value pairs to a hash table.</source>
          <target state="translated">Convierte una cadena que contiene uno o más par clave-valor en una tabla hash.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>SYNTAX</source>
          <target state="translated">SINTAXIS</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>DESCRIPTION</source>
          <target state="translated">DESCRIPCIÓN</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>ConvertFrom-StringData<ept id="p1">**</ept> cmdlet converts a string that contains one or more key and value pairs into a hash table.</source>
          <target state="translated">El <bpt id="p1">**</bpt>ConvertFrom-StringData<ept id="p1">**</ept> cmdlet convierte una cadena que contiene uno o más pares de clave y valor en una tabla hash.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Because each key/value pair must be on a separate line, here-strings are often used as the input format.</source>
          <target state="translated">Dado que cada par clave-valor debe estar en una línea independiente, a menudo se usan cadenas de tipo "here-string" como formato de entrada.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>ConvertFrom-StringData<ept id="p1">**</ept> cmdlet is considered to be a safe cmdlet that can be used in the DATA section of a script or function.</source>
          <target state="translated">El <bpt id="p1">**</bpt>ConvertFrom-StringData<ept id="p1">**</ept> cmdlet se considera un cmdlet seguro que puede utilizarse en la sección de DATOS de un script o una función.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>When used in a DATA section, the contents of the string must conform to the rules for a DATA section.</source>
          <target state="translated">Cuando se usa en una sección DATA, el contenido de la cadena debe cumplir las reglas de una sección DATA.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>For more information, see about_Data_Sections.</source>
          <target state="translated">Para más información, vea about_Data_Sections.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>ConvertFrom-StringData<ept id="p1">**</ept> supports escape character sequences that are allowed by conventional machine translation tools.</source>
          <target state="translated"><bpt id="p1">**</bpt>ConvertFrom-StringData<ept id="p1">**</ept> admite secuencias de caracteres que se permiten las herramientas de traducción automática convencionales de escape.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>That is, the cmdlet can interpret backslashes (<ph id="ph1">\\</ph>) as escape characters in the string data by using the Regex.Unescape Methodhttp://msdn.microsoft.com/library/vstudio/system.text.regularexpressions.regex.unescape(v=vs.100).aspx, instead of the Windows PowerShell backtick character (<ph id="ph2">\`</ph>) that would normally signal the end of a line in a script.</source>
          <target state="translated">Es decir, el cmdlet puede interpretar las barras diagonales inversas (<ph id="ph1">\\</ph>) como caracteres de escape en los datos de cadena utilizando la Methodhttp://msdn.microsoft.com/library/vstudio/system.text.regularexpressions.regex.unescape(v=vs.100).aspx, instead of the Windows PowerShell backtick character (<ph id="ph2">\`</ph>) Regex.Unescape que normalmente indicaría el final de una línea en una secuencia de comandos.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Inside the here-string, the backtick character does not work.</source>
          <target state="translated">Dentro de la cadena de tipo "here-string", el carácter de tilde aguda no funciona.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>You can also preserve a literal backslash in your results by escaping it with a preceding backslash, like this: <ph id="ph1">\\\\</ph>.</source>
          <target state="translated">También puede preservar una barra diagonal inversa literal en los resultados de la secuencia de escape con una barra diagonal inversa, así: <ph id="ph1">\\\\</ph>.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Unescaped backslash characters, such as those that are commonly used in file paths, can render as illegal escape sequences in your results.</source>
          <target state="translated">Los caracteres de barra diagonal inversa sin escape, como los que suelen usarse en las rutas de acceso de archivos, pueden mostrarse como secuencias de escape no válidas en los resultados.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>EXAMPLES</source>
          <target state="translated">EJEMPLOS</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Example 1: Convert a single-quoted here-string to a hash table</source>
          <target state="translated">Ejemplo 1: Convertir una cadena de aquí entre comillas simples en una tabla hash</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>These commands convert a single-quoted here-string of user messages into a hash table.</source>
          <target state="translated">Estos comandos convierten una cadena de tipo "here-string" entre comillas simples de mensajes de usuario en una tabla hash.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>In a single-quoted string, values are not substituted for variables and expressions are not evaluated.</source>
          <target state="translated">En una cadena entre comillas simples, los valores no se sustituyen por variables y las expresiones no se evalúan.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>The first command creates a here-string and saves it in the $Here variable.</source>
          <target state="translated">El primer comando crea una cadena de aquí y lo guarda en la variable $Here.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>The second command uses the <bpt id="p1">**</bpt>ConvertFrom-StringData<ept id="p1">**</ept> cmdlet to convert the here-string in the $Here variable to a hash table.</source>
          <target state="translated">El segundo comando usa el <bpt id="p1">**</bpt>ConvertFrom-StringData<ept id="p1">**</ept> para convertir la cadena de aquí en la variable $Here en una tabla hash.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Example 2: Convert a double-quoted here-string to a hash table</source>
          <target state="translated">Ejemplo 2: Convertir una cadena de aquí entre comillas dobles en una tabla hash</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>These commands demonstrate that <bpt id="p1">**</bpt>ConvertFrom-StringData<ept id="p1">**</ept> actually converts a here-string to a hash table.</source>
          <target state="translated">Estos comandos muestran que <bpt id="p1">**</bpt>ConvertFrom-StringData<ept id="p1">**</ept> realmente convierte una cadena de aquí en una tabla hash.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>The first command creates a double-quoted here-string that includes one key/value pair and saves it in the $P variable.</source>
          <target state="translated">El primer comando crea una aquí-cadena de comillas dobles que incluye un par de clave/valor y lo guarda en la variable $P.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>The second command uses a pipeline operator (|) to send the $P variable to the Get-Member cmdlet.</source>
          <target state="translated">El segundo comando usa un operador de canalización (|) para enviar la variable $p al cmdlet Get-Member.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>The result shows that $P is a string (System.String).</source>
          <target state="translated">El resultado muestra que $P es una cadena (System.String).</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>The third command uses the <bpt id="p1">**</bpt>ConvertFrom-StringData<ept id="p1">**</ept> cmdlet to convert the here-string in $P to a hash table.</source>
          <target state="translated">El tercer comando usa el <bpt id="p1">**</bpt>ConvertFrom-StringData<ept id="p1">**</ept> para convertir la cadena de aquí en $p en una tabla hash.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>The command stores the result in the $Hash variable.</source>
          <target state="translated">El comando almacena el resultado en la variable $Hash.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>The final command uses a pipeline operator (|) to send the $Hash variable to the <bpt id="p1">**</bpt>Get-Member<ept id="p1">**</ept> cmdlet.</source>
          <target state="translated">El comando final usa un operador de canalización (|) para enviar la variable $Hash para el <bpt id="p1">**</bpt>Get-Member<ept id="p1">**</ept> cmdlet.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>The result shows that the content of the $Hash variable is a hash table (System.Collections.Hashtable).</source>
          <target state="translated">El resultado muestra que el contenido de la variable $Hash es una tabla hash (System.Collections.Hashtable).</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Example 3: Convert a here-string to a hash table</source>
          <target state="translated">Ejemplo 3: Convertir una cadena de aquí en una tabla hash</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>This command converts a single-quoted here-string that contains multiple key/value pairs into a hash table.</source>
          <target state="translated">Este comando convierte una cadena de tipo "here-string" entre comillas simples que contiene varios pares clave-valor en una tabla hash.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>In this command, the value of the <bpt id="p1">*</bpt>StringData<ept id="p1">*</ept> parameter is a here-string, instead of a variable that contains a here-string.</source>
          <target state="translated">En este comando, el valor de la <bpt id="p1">*</bpt>StringData<ept id="p1">*</ept> parámetro es una cadena de aquí, en lugar de una variable que contiene una cadena aquí.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Either format is valid.</source>
          <target state="translated">Cualquier formato es válido.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>The here-string includes a comment about one of the strings.</source>
          <target state="translated">La cadena de tipo "here-string" incluye un comentario sobre una de las cadenas.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Comments are valid in strings, provided that the comment is on a different line than a key/value pair.</source>
          <target state="translated">Los comentarios son válidos en cadenas, siempre que el comentario esté en una línea en la que no haya un par clave-valor.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Example 4: Convert a string to a hash table</source>
          <target state="translated">Ejemplo 4: Convertir una cadena en una tabla hash</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>This example converts a regular double-quoted string (not a here-string) into a hash table and saves it in the $A variable.</source>
          <target state="translated">Este ejemplo convierte una cadena entre comillas dobles normal (no here-string) en una tabla hash y lo guarda en la variable $A.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>To satisfy the condition that each key/value pair must be on a separate line, it uses the Windows PowerShell newline character (<ph id="ph1">\`</ph>n) to separate the pairs.</source>
          <target state="translated">Para satisfacer la condición de que cada par de clave/valor debe estar en una línea independiente, utiliza el carácter de nueva línea de Windows PowerShell (<ph id="ph1">\`</ph>n) para separar los pares.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>The result is a hash table of the input.</source>
          <target state="translated">El resultado es una tabla hash de la entrada.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>The remaining commands display the output.</source>
          <target state="translated">Los comandos restantes muestran el resultado.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Example 5: Use ConvertFrom-StringData in the DATA section of a script</source>
          <target state="translated">Ejemplo 5: Use ConvertFrom-StringData en la sección de DATOS de una secuencia de comandos</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>This example shows a <bpt id="p1">**</bpt>ConvertFrom-StringData<ept id="p1">**</ept> command used in the DATA section of a script.</source>
          <target state="translated">Este ejemplo muestra un <bpt id="p1">**</bpt>ConvertFrom-StringData<ept id="p1">**</ept> comando que se usa en la sección de DATOS de una secuencia de comandos.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>The statements below the DATA section display the text to the user.</source>
          <target state="translated">Las instrucciones de la sección DATA muestran el texto al usuario.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Because the text includes variable names, it must be enclosed in a single-quoted string so that the variables are interpreted literally and not expanded.</source>
          <target state="translated">Dado que el texto incluye nombres de variables, debe incluirse en una cadena entre comillas simples para que las variables se interpreten literalmente y no se expandan.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Variables are not permitted in the DATA section.</source>
          <target state="translated">No se permiten variables en la sección DATA.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Example 6: Use the pipeline operator to pass a string</source>
          <target state="translated">Ejemplo 6: Utilizar el operador de canalización para pasar una cadena</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>This example shows that you can use a pipeline operator (|) to send a string to <bpt id="p1">**</bpt>ConvertFrom-StringData<ept id="p1">**</ept>.</source>
          <target state="translated">Este ejemplo muestra que puede utilizar un operador de canalización (|) para enviar una cadena a <bpt id="p1">**</bpt>ConvertFrom-StringData<ept id="p1">**</ept>.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>The first command saves a here-string in the $Here variable.</source>
          <target state="translated">El primer comando guarda una cadena de aquí en la variable $Here.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>The second command uses a pipeline operator (|) to send the $Here variable to <bpt id="p1">**</bpt>ConvertFrom-StringData<ept id="p1">**</ept>.</source>
          <target state="translated">El segundo comando usa un operador de canalización (|) para enviar la variable $Here a <bpt id="p1">**</bpt>ConvertFrom-StringData<ept id="p1">**</ept>.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>The command saves the result in the $Hash variable.</source>
          <target state="translated">El comando guarda el resultado en la variable $Hash.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>The final command displays the contents of the $Hash variable.</source>
          <target state="translated">El comando final muestra el contenido de la variable $Hash.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Example 7: Use escape characters to add new lines and return characters</source>
          <target state="translated">Ejemplo 7: Caracteres de escape de uso agregar nuevas líneas y devolver caracteres</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>This example shows the use of escape characters to create new lines and return characters in <bpt id="p1">**</bpt>ConvertFrom-StringData<ept id="p1">**</ept>.</source>
          <target state="translated">Este ejemplo muestra el uso de caracteres de escape para crear nuevas líneas y devolver los caracteres en <bpt id="p1">**</bpt>ConvertFrom-StringData<ept id="p1">**</ept>.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>In this example, the escape sequence <bpt id="p1">**</bpt>\n<ept id="p1">**</ept> is used to create new lines within a block of text (the value, in the resulting hash table) that is associated with a name or item (the name, in the resulting hash table).</source>
          <target state="translated">En este ejemplo, la secuencia de escape <bpt id="p1">**</bpt>\n<ept id="p1">**</ept> se usa para crear nuevas líneas dentro de un bloque de texto (el valor, en la tabla hash resultante) que está asociado con un nombre o un elemento (el nombre, en la tabla hash resultante).</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Example 8: Use backslash escape character to correctly render a file path</source>
          <target state="translated">Ejemplo 8: Utilizar caracteres de escape de barra diagonal inversa para representar correctamente una ruta de acceso de archivo</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>This example shows how to use of the backslash escape character in the string data to allow a file path to render correctly in the resulting <bpt id="p1">**</bpt>ConvertFrom-StringData<ept id="p1">**</ept> hash table.</source>
          <target state="translated">Este ejemplo muestra cómo utilizar el carácter de escape de barra diagonal inversa en la cadena de datos para permitir que una ruta de acceso representar correctamente en resultante <bpt id="p1">**</bpt>ConvertFrom-StringData<ept id="p1">**</ept> tabla hash.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>The double backslash ensures that the literal backslash characters render correctly in the hash table output.</source>
          <target state="translated">La barra diagonal inversa doble garantiza que los caracteres de barra diagonal inversa literal se representen correctamente en los resultados de la tabla hash.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>PARAMETERS</source>
          <target state="translated">PARÁMETROS</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>-StringData</source>
          <target state="translated">-StringData</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>Specifies the string to be converted.</source>
          <target state="translated">Especifica la cadena que se va a convertir.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>You can use this parameter or pipe a string to <bpt id="p1">**</bpt>ConvertFrom-StringData<ept id="p1">**</ept>.</source>
          <target state="translated">Puede utilizar este parámetro o canalizar una cadena a <bpt id="p1">**</bpt>ConvertFrom-StringData<ept id="p1">**</ept>.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>The parameter name is optional.</source>
          <target state="translated">El nombre de parámetro es opcional.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>The value of this parameter must be a string that is enclosed in single quotation marks, a string that is enclosed in double quotation marks, or a here-string that contains one or more key/value pairs.</source>
          <target state="translated">El valor de este parámetro debe ser una cadena entre comillas simples, una cadena que está entre comillas dobles o here-string que contiene uno o más pares de clave/valor.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>Each key/value pair must be on a separate line, or each pair must be separated by newline characters (<ph id="ph1">\`</ph>n).</source>
          <target state="translated">Cada par clave/valor debe estar en una línea independiente, o cada par debe estar separado por caracteres de nueva línea (<ph id="ph1">\`</ph>n).</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>You can include comments in the string, but the comments cannot be on the same line as a key/value pair.</source>
          <target state="translated">Puede incluir comentarios en la cadena, pero los comentarios no pueden estar en la misma línea que un par clave-valor.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>The comments are not included in the hash table.</source>
          <target state="translated">Los comentarios no se incluyen en la tabla hash.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>A here-string is a string consisting of one or more lines within which quotation marks are interpreted literally.</source>
          <target state="translated">Una cadena de tipo "here-string" es una cadena que consta de una o varias líneas en las que las comillas se interpretan literalmente.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>For more information, see about_Quoting_Rules.</source>
          <target state="translated">Para más información, vea about_Quoting_Rules.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>CommonParameters</source>
          <target state="translated">CommonParameters</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutVariable, -OutBuffer, -PipelineVariable, -Verbose, -WarningAction, and -WarningVariable.</source>
          <target state="translated">Este cmdlet admite los parámetros comunes:-Debug, - ErrorAction, - ErrorVariable, - InformationAction, - InformationVariable, - OutVariable,-OutBuffer, - PipelineVariable, - Verbose, - WarningAction y - WarningVariable.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>For more information, see about_CommonParameters (http://go.microsoft.com/fwlink/?LinkID=113216).</source>
          <target state="translated">Para obtener más información, consulte about_CommonParameters (http://go.microsoft.com/fwlink/?LinkID=113216).</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>INPUTS</source>
          <target state="translated">ENTRADAS</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>System.String</source>
          <target state="translated">System.String</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>You can pipe a string containing a key/value pair to <bpt id="p1">**</bpt>ConvertFrom-StringData<ept id="p1">**</ept>.</source>
          <target state="translated">Puede canalizar una cadena que contiene un par clave-valor a <bpt id="p1">**</bpt>ConvertFrom-StringData<ept id="p1">**</ept>.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>OUTPUTS</source>
          <target state="translated">SALIDAS</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>System.Collections.Hashtable</source>
          <target state="translated">System.Collections.Hashtable</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>This cmdlet returns a hash table that it creates from the key/value pairs.</source>
          <target state="translated">Este cmdlet devuelve una tabla hash que crea a partir de los pares clave/valor.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>NOTES</source>
          <target state="translated">NOTAS</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>A here-string is a string consisting of one or more lines within which quotation marks are interpreted literally.</source>
          <target state="translated">Una cadena de tipo "here-string" es una cadena que consta de una o varias líneas en las que las comillas se interpretan literalmente.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>This cmdlet can be useful in scripts that display user messages in multiple spoken languages.</source>
          <target state="translated">Este cmdlet puede ser útil en scripts que muestren mensajes de usuario en varios idiomas.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>You can use the dictionary-style hash tables to isolate text strings from code, such as in resource files, and to format the text strings for use in translation tools.</source>
          <target state="translated">Puede usar las tablas hash de estilo diccionario para aislar las cadenas de texto del código, como en los archivos de recursos, y para dar formato a las cadenas de texto para usarlas en herramientas de traducción.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>RELATED LINKS</source>
          <target state="translated">VÍNCULOS RELACIONADOS</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>about_Data_Sections</source>
          <target state="translated">about_Data_Sections</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>about_Quoting_Rules</source>
          <target state="translated">about_Quoting_Rules</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>about_Script_Internationalization</source>
          <target state="translated">about_Script_Internationalization</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>