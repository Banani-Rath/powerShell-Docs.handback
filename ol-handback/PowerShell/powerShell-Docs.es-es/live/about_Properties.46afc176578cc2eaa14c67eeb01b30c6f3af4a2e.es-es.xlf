<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="es-es">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-1c394fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">be3268191a93408923f9e3ab45dedc2a01052128</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">reference\3.0\Microsoft.PowerShell.Core\About\about_Properties.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions" />
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">80b0ac597e17ff9ee7432747318e2d584ec23475</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">34b537130310bfa03e816d350ae66d77ffe5d356</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>about_Properties</source>
          <target state="translated">about_Properties</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>powershell, cmdlet</source>
          <target state="translated">cmdlet de PowerShell</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>About Properties</source>
          <target state="translated">Acerca de las propiedades</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>about_Properties</source>
          <target state="translated">about_Properties</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>about_Properties</source>
          <target state="translated">about_Properties</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>SHORT DESCRIPTION</source>
          <target state="translated">DESCRIPCIÓN BREVE</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Describes how to use object properties in  Windows PowerShell�.</source>
          <target state="translated">Describe cómo utilizar las propiedades de objeto en Windows PowerShell.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>LONG DESCRIPTION</source>
          <target state="translated">DESCRIPCIÓN LARGA</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Windows PowerShell uses structured collections of information called objects to represent the items in data stores or the state of the computer.</source>
          <target state="translated">Windows PowerShell usa colecciones estructuradas de información denominados objetos para representar los elementos de los almacenes de datos o el estado del equipo.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Typically, you work with object that are part of the Microsoft .NET Framework, but you can also create custom objects in  Windows PowerShell.</source>
          <target state="translated">Normalmente, se trabaja con objetos que forman parte de Microsoft .NET Framework, pero también puede crear objetos personalizados en Windows PowerShell.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>The association between an item and its object is very close.</source>
          <target state="translated">La asociación entre un elemento y su objeto está muy cerca.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>When you change an object, you usually change the item that it represents.</source>
          <target state="translated">Cuando cambia un objeto, normalmente se cambia el elemento que representa.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>For example, when you get a file in  Windows PowerShell, you do not get the actual file.</source>
          <target state="translated">Por ejemplo, al obtener un archivo en Windows PowerShell, no obtendrá el archivo real.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Instead, you get a FileInfo object that represents the file.</source>
          <target state="translated">En su lugar, obtenga un objeto FileInfo que representa el archivo.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>When you change the FileInfo object, the file changes too.</source>
          <target state="translated">Cuando se cambia el objeto FileInfo, también cambia el archivo.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Most objects have properties.</source>
          <target state="translated">La mayoría de los objetos tienen propiedades.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Properties are the data that is associated with an object.</source>
          <target state="translated">Propiedades son los datos que está asociados a un objeto.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Different types of object have different properties.</source>
          <target state="translated">Diferentes tipos de objeto tienen propiedades diferentes.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>For example, a FileInfo object, which represents a file, has an IsReadOnly property that contains $True if the file the read-only attribute and $False if it does not.</source>
          <target state="translated">Por ejemplo, un objeto FileInfo que representa un archivo, tiene una propiedad IsReadOnly que contiene $True si el atributo de archivo de sólo lectura y $False si no es así.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>A DirectoryInfo object, which represents a file system directory, has a Parent property that contains the path to the parent directory.</source>
          <target state="translated">Un objeto DirectoryInfo, que representa un directorio del sistema de archivos, tiene una propiedad primaria que contiene la ruta de acceso al directorio primario.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>OBJECT PROPERTIES</source>
          <target state="translated">PROPIEDADES DE OBJETO</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>To get the properties of an object, use the Get-Member cmdlet.</source>
          <target state="translated">Para obtener las propiedades de un objeto, use el cmdlet Get-Member.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>For example, to get the properties of a FileInfo object, use the Get-ChildItem cmdlet to get the FileInfo object that represents a file.</source>
          <target state="translated">Por ejemplo, para obtener las propiedades de un objeto FileInfo, use el cmdlet Get-ChildItem para obtener el objeto FileInfo que representa un archivo.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Then, use a pipeline operator (&amp;#124;) to send the FileInfo object to Get-Member.</source>
          <target state="translated">A continuación, usar un operador de canalización (&amp;#124;) para enviar el objeto FileInfo a Get-Member.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>The following command gets the PowerShell.exe file and sends it to Get-Member.</source>
          <target state="translated">El siguiente comando obtiene el archivo PowerShell.exe y lo envía a Get-Member.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>The $Pshome automatic variable contains the path of the  Windows PowerShell installation directory.</source>
          <target state="translated">La variable automática $Pshome contiene la ruta de acceso del directorio de instalación de Windows PowerShell.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>The output of the command lists the members of the FileInfo object.</source>
          <target state="translated">La salida del comando muestra a los miembros del objeto FileInfo.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Members include both properties and methods.</source>
          <target state="translated">Los miembros incluyen los métodos y propiedades.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>When you work in  Windows PowerShell, you have access to all the members of the objects.</source>
          <target state="translated">Cuando se trabaja en Windows PowerShell, tendrá acceso a todos los miembros de los objetos.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>To get only the properties of an object and not the methods, use the MemberType parameter of the Get-Member cmdlet with a value of "property", as shown in the following example.</source>
          <target state="translated">Para obtener sólo las propiedades de un objeto y no los métodos, utilice el parámetro MemberType del cmdlet Get-Member con un valor de "propiedad", tal como se muestra en el ejemplo siguiente.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>After you find the properties, you can use them in your  Windows PowerShell commands.</source>
          <target state="translated">Después de buscar las propiedades, se puede usar en los comandos de Windows PowerShell.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>PROPERTY VALUES</source>
          <target state="translated">VALORES DE PROPIEDAD</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Although every object of a specific type has the same properties, the values of those properties describe the particular object.</source>
          <target state="translated">Aunque todos los objetos de un tipo específico tiene las mismas propiedades, los valores de estas propiedades describen el objeto determinado.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>For example, every FileInfo object has a CreationTime property, but the value of that property differs for each file.</source>
          <target state="translated">Por ejemplo, cada objeto FileInfo tiene una propiedad CreationTime, pero el valor de la propiedad es diferente para cada archivo.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>The most common way to get the values of the properties of an object is to use the dot method.</source>
          <target state="translated">La manera más común para obtener los valores de las propiedades de un objeto es utilizar el método de punto.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Type a reference to the object, such as a variable that contains the object, or a command that gets the object.</source>
          <target state="translated">Escriba una referencia a objeto, como una variable que contiene el objeto o un comando que obtiene el objeto.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Then, type a dot (.) followed by the property name.</source>
          <target state="translated">A continuación, escriba un punto (.) seguido por el nombre de propiedad.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>For example, the following command displays the value of the CreationTime property of the PowerShell.exe file.</source>
          <target state="translated">Por ejemplo, el siguiente comando muestra el valor de la propiedad CreationTime del archivo PowerShell.exe.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>The Get-ChildItem command returns a FileInfo object that represents the PowerShell.exe file.</source>
          <target state="translated">El comando Get-ChildItem devuelve un objeto FileInfo que representa el archivo PowerShell.exe.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>The command is enclosed in parentheses to make sure that it is executed before any properties are accessed.</source>
          <target state="translated">El comando se encuentra entre paréntesis para asegurarse de que se ejecuta antes de que se tiene acceso a las propiedades.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>The Get-ChildItem command is followed by a dot and the name of the CreationTime property, as follows:</source>
          <target state="translated">El comando Get-ChildItem seguido de un punto y el nombre de la propiedad CreationTime, como sigue:</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>You can also save an object in a variable and then get its properties by using the dot method, as shown in the following example:</source>
          <target state="translated">Puede guardar un objeto en una variable y, a continuación, obtener sus propiedades utilizando el método de punto, tal como se muestra en el ejemplo siguiente:</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>You can also use the Select-Object and Format-List cmdlets to display the property values of an object.</source>
          <target state="translated">También puede usar los cmdlets de Select-Object y Format-List para mostrar los valores de propiedad de un objeto.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Select-Object and Format-List each have a Property parameter.</source>
          <target state="translated">Select-Object y Format-List tienen un parámetro de la propiedad.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>You can use the Property parameter to specify one or more properties and their values.</source>
          <target state="translated">Puede utilizar el parámetro Property para especificar una o más propiedades y sus valores.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Or, you can use the wildcard character (<ph id="ph1">\*</ph>) to represent all the properties.</source>
          <target state="translated">O bien, puede utilizar el carácter comodín (<ph id="ph1">\*</ph>) para representar todas las propiedades.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>For example, the following command displays the values of all the properties of the PowerShell.exe file.</source>
          <target state="translated">Por ejemplo, el comando siguiente muestra los valores de todas las propiedades del archivo PowerShell.exe.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>STATIC PROPERTIES</source>
          <target state="translated">PROPIEDADES ESTÁTICAS</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>You can use the static properties of .NET classes in  Windows PowerShell.</source>
          <target state="translated">Puede utilizar las propiedades estáticas de clases de .NET en Windows PowerShell.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Static properties are properties of class, unlike standard properties, which are properties of an object.</source>
          <target state="translated">Propiedades estáticas son propiedades de clase, a diferencia de las propiedades estándares, que son propiedades de un objeto.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>To get the static properties of an class, use the Static parameter of the Get-Member cmdlet.</source>
          <target state="translated">Para obtener las propiedades estáticas de una clase, use el parámetro estático del cmdlet Get-Member.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>For example, the following command gets the static properties of the System.DateTime class.</source>
          <target state="translated">Por ejemplo, el comando siguiente obtiene las propiedades estáticas de la clase System.DateTime.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>To get the value of a static property, use the following syntax.</source>
          <target state="translated">Para obtener el valor de una propiedad estática, use la siguiente sintaxis.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>For example, the following command gets the value of the UtcNow static property of the System.DateTime class.</source>
          <target state="translated">Por ejemplo, el siguiente comando obtiene el valor de la propiedad estática UtcNow de la clase System.DateTime.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>PROPERTIES OF SCALAR OBJECTS AND COLLECTIONS</source>
          <target state="translated">PROPIEDADES ESCALARES OBJETOS Y COLECCIONES</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>The properties of one ("scalar") object of a particular type are often different from the properties of a collection of objects of the same type.</source>
          <target state="translated">Las propiedades de un objeto ("escalar") de un tipo determinado a menudo son diferentes de las propiedades de una colección de objetos del mismo tipo.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>For example, every service has as DisplayName property, but a collection of services does not have a DisplayName property.</source>
          <target state="translated">Por ejemplo, cada servicio tiene como propiedad DisplayName, pero una colección de servicios no tiene una propiedad DisplayName.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Similarly, all collections have a Count property that tells how many objects are in the collection, but individual objects do not have a Count property.</source>
          <target state="translated">Del mismo modo, todas las colecciones tienen una propiedad Count que indica el número de objetos en la colección, pero los objetos individuales no tienen una propiedad de recuento.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>Beginning in  Windows PowerShell 3.0,  Windows PowerShell tries to prevent scripting errors that result from the differing properties of scalar objects and collections.</source>
          <target state="translated">A partir de Windows PowerShell 3.0, Windows PowerShell intenta evitar errores de scripting que se derivan de las propiedades de escalares objetos y colecciones diferentes.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>If you submit a collection, but request a property that exists only on single ("scalar") objects,  Windows PowerShell returns the value of that property for every object in the collection.</source>
          <target state="translated">Si envía una colección, pero solicitar una propiedad que existe solo en objetos ("escalares"), Windows PowerShell devuelve el valor de propiedad para todos los objetos de la colección.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>If you request the Count or Length property of zero objects or of one object,  Windows PowerShell returns the correct value.</source>
          <target state="translated">Si se solicita la propiedad de recuento o longitud de cero objetos o de un objeto, Windows PowerShell devuelve el valor correcto.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>If the property exists on the individual objects and on the collection,  Windows PowerShell does not alter the result.</source>
          <target state="translated">Si la propiedad existe en los objetos individuales y en la colección, Windows PowerShell no altera el resultado.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>This feature also works on methods of scalar objects and collections.</source>
          <target state="translated">Esta característica también funciona en los métodos de escalares objetos y colecciones.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>For more information, see about_Methods.</source>
          <target state="translated">Para obtener más información, consulte about_Methods.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>EXAMPLES</source>
          <target state="translated">EJEMPLOS</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>For example, each service has a DisplayName property.</source>
          <target state="translated">Por ejemplo, cada servicio tiene una propiedad DisplayName.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>The following command gets the value of the DisplayName property of the Audiosrv service.</source>
          <target state="translated">El siguiente comando obtiene el valor de la propiedad DisplayName del servicio Audiosrv.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>However, a collection or array of services does not have a DisplayName.</source>
          <target state="translated">Sin embargo, una colección o matriz de servicios no tiene un DisplayName.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>The following command tries to get the DisplayName property of all services in  Windows PowerShell 2.0.</source>
          <target state="translated">El comando siguiente intenta obtener la propiedad DisplayName de todos los servicios en Windows PowerShell 2.0.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>Beginning in  Windows PowerShell 3.0, the same command returns the value of the DisplayName property of every service that Get-Service returns.</source>
          <target state="translated">A partir de Windows PowerShell 3.0, el mismo comando devuelve el valor de la propiedad DisplayName de cada servicio que devuelve Get-Service.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>Conversely, a collection of two or more services has a Count property, which contains the number of objects in the collection.</source>
          <target state="translated">Por el contrario, una colección de dos o más servicios tiene una propiedad de recuento, que contiene el número de objetos de la colección.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>Individual services do not have a Count or Length property, as shown in this command in  Windows PowerShell 2.0.</source>
          <target state="translated">Servicios individuales no tienen una propiedad de recuento o longitud, como se muestra en este comando en Windows PowerShell 2.0.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>Beginning in  Windows PowerShell 3.0, the command returns the correct Count value.</source>
          <target state="translated">A partir de Windows PowerShell 3.0, el comando devuelve el valor de número correcto.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>SEE ALSO</source>
          <target state="translated">VEA TAMBIÉN</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>about_Methods</source>
          <target state="translated">about_Methods</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>about_Objects</source>
          <target state="translated">about_Objects</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>Get-Member</source>
          <target state="translated">Get-Member</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>Select-Object</source>
          <target state="translated">Select-Object</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>Format-List</source>
          <target state="translated">Format-List</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>