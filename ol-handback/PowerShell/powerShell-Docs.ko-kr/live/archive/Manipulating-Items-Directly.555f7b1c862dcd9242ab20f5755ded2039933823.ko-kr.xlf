<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ko-kr">
    <header>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions" />
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">scripting\getting-started\cookbooks\Manipulating-Items-Directly.md</xliffext:olfilepath>
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">b7e752a1615da4540106ec32754f873c5d7aa5d9</xliffext:olfilehash>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-39517ae" tool-company="Microsoft" />
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Manipulating Items Directly</source>
          <target state="translated">직접 항목 조작</target>         
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Manipulating Items Directly</source>
          <target state="translated">직접 항목 조작</target>         
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>The elements that you see in Windows PowerShell drives, such as the files and folders in the file system drives, and the registry keys in the Windows PowerShell registry drives, are called <bpt id="p1">*</bpt>items<ept id="p1">*</ept> in Windows PowerShell.</source>
          <target state="translated">Windows PowerShell 드라이브에 표시되는 요소(예: 파일 시스템 드라이브의 파일 및 폴더, Windows PowerShell 레지스트리 드라이브의 레지스트리 키)를 Windows PowerShell에서는 <bpt id="p1">*</bpt>항목<ept id="p1">*</ept>이라고 합니다.</target>         
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>The cmdlets for working with them item have the noun <bpt id="p1">**</bpt>Item<ept id="p1">**</ept> in their names.</source>
          <target state="translated">이러한 항목 작업을 위한 cmdlet은 이름에 명사 <bpt id="p1">**</bpt>Item<ept id="p1">**</ept>이 포함되어 있습니다.</target>         
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>The output of the <bpt id="p1">**</bpt>Get\-Command \-Noun Item<ept id="p1">**</ept> command shows that there are nine Windows PowerShell item cmdlets.</source>
          <target state="translated"><bpt id="p1">**</bpt>Get\-Command \-Noun Item<ept id="p1">**</ept> 명령의 출력에는 9개의 Windows PowerShell 항목 cmdlet이 표시됩니다.</target>         
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Creating New Items (New\-Item)</source>
          <target state="translated">새 항목 만들기(New\-Item)</target>         
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>To create a new item in the file system, use the <bpt id="p1">**</bpt>New\-Item<ept id="p1">**</ept> cmdlet.</source>
          <target state="translated">파일 시스템에서 새 항목을 만들려면 <bpt id="p1">**</bpt>New\-Item<ept id="p1">**</ept> cmdlet을 사용합니다.</target>         
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Include the <bpt id="p1">**</bpt>Path<ept id="p1">**</ept> parameter with path to the item, and the <bpt id="p2">**</bpt>ItemType<ept id="p2">**</ept> parameter with a value of "file" or "directory".</source>
          <target state="translated">항목 경로에 <bpt id="p1">**</bpt>Path<ept id="p1">**</ept> 매개 변수를 포함하고, 값이 "file" 또는 "directory"인 <bpt id="p2">**</bpt>ItemType<ept id="p2">**</ept> 매개 변수를 포함합니다.</target>         
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>For example, to create a new directory named "New.Directory"in the C:\\Temp directory,  type:</source>
          <target state="translated">예를 들어 C:\\Temp 디렉터리에서 "New.Directory"라는 새 디렉터리를 만들려면 다음과 같이 입력합니다.</target>         
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>To create a file, change the value of the <bpt id="p1">**</bpt>ItemType<ept id="p1">**</ept> parameter to "file".</source>
          <target state="translated">파일을 만들려면 <bpt id="p1">**</bpt>ItemType<ept id="p1">**</ept> 매개 변수의 값을 "file"로 변경합니다.</target>         
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>For example, to create a file named "file1.txt" in the New.Directory directory, type:</source>
          <target state="translated">예를 들어 New.Directory 디렉터리에서 "file1.txt" 파일을 만들려면 다음과 같이 입력합니다.</target>         
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>You can use the same technique to create a new registry key.</source>
          <target state="translated">동일한 기술을 사용하여 새 레지스트리 키를 만들 수 있습니다.</target>         
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>In fact, a registry key is easier to create because the only item type in the Windows registry is a key.</source>
          <target state="translated">Windows 레지스트리에 있는 항목 유형만 키이므로 레지스트리 키는 쉽게 만들 수 있습니다.</target>         
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>(Registry entries are item <bpt id="p1">*</bpt>properties<ept id="p1">*</ept>.) For example, to create a key named "\_Test" in the CurrentVersion subkey, type:</source>
          <target state="translated">레지스트리 항목은 <bpt id="p1">*</bpt>properties<ept id="p1">*</ept> 항목입니다. 예를 들어 CurrentVersion 하위 키에서 "\_Test" 키를 만들려면 다음과 같이 입력합니다.</target>         
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>When typing a registry path, be sure to include the colon (<bpt id="p1">**</bpt>:<ept id="p1">**</ept>) in the Windows PowerShell drive names, HKLM: and HKCU:.</source>
          <target state="translated">레지스트리 경로를 입력할 때 Windows PowerShell 드라이브 이름에 콜론(<bpt id="p1">**</bpt>:<ept id="p1">**</ept>)을 포함해야 합니다(예: HKLM: 및 HKCU:).</target>         
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Without the colon, Windows PowerShell does not recognize the drive name in the path.</source>
          <target state="translated">콜론이 없을 경우 Windows PowerShell에서는 경로의 드라이브 이름을 인식하지 못합니다.</target>         
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Why Registry Values are not Items</source>
          <target state="translated">레지스트리 값이 항목이 아닌 이유</target>         
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>When you use the <bpt id="p1">**</bpt>Get\-ChildItem<ept id="p1">**</ept> cmdlet to find the items in a registry key, you will never see actual registry entries or their values.</source>
          <target state="translated"><bpt id="p1">**</bpt>Get\-ChildItem<ept id="p1">**</ept> cmdlet을 사용하여 레지스트리 키에서 항목을 찾을 경우 실제 레지스트리 항목 또는 값이 표시되지 않습니다.</target>         
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>For example, the registry key <bpt id="p1">**</bpt>HKEY\_LOCAL\_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\Run<ept id="p1">**</ept> usually contains several registry entries that represent applications that run when the system starts.</source>
          <target state="translated">예를 들어 <bpt id="p1">**</bpt>HKEY\_LOCAL\_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\Run<ept id="p1">**</ept> 레지스트리 키에는 일반적으로 시스템을 시작할 때 실행되는 응용 프로그램을 나타내는 여러 레지스트리 항목이 포함되어 있습니다.</target>         
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>However, when you use <bpt id="p1">**</bpt>Get\-ChildItem<ept id="p1">**</ept> to look for child items in the key, all you will see is the <bpt id="p2">**</bpt>OptionalComponents<ept id="p2">**</ept> subkey of the key:</source>
          <target state="translated">하지만 <bpt id="p1">**</bpt>Get\-ChildItem<ept id="p1">**</ept>을 사용하여 키의 하위 항목을 찾을 경우 키의 <bpt id="p2">**</bpt>OptionalComponents<ept id="p2">**</ept> 하위 키만 표시됩니다.</target>         
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Although it would be convenient to treat registry entries as items, you cannot specify a path to a registry entry in a way that ensures that it is unique.</source>
          <target state="translated">레지스트리 항목을 항목으로 처리하면 편리하지만 레지스트리 항목의 경로를 고유하게 지정할 수 없습니다.</target>         
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>The path notation does not distinguish between the registry subkey named <bpt id="p1">**</bpt>Run<ept id="p1">**</ept> and the <bpt id="p2">**</bpt>(Default)<ept id="p2">**</ept> registry entry in the <bpt id="p3">**</bpt>Run<ept id="p3">**</ept> subkey.</source>
          <target state="translated"><bpt id="p1">**</bpt>Run<ept id="p1">**</ept> 레지스트리 하위 키와 <bpt id="p3">**</bpt>Run<ept id="p3">**</ept> 하위 키의 <bpt id="p2">**</bpt>(Default)<ept id="p2">**</ept> 레지스트리 항목 간에 경로 표기법이 구분되지 않습니다.</target>         
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Furthermore, because registry entry names can contain the backslash character (<bpt id="p1">**</bpt><ph id="ph1">\\</ph><ept id="p1">**</ept>), if regsitry entries were items, then you could not use the path notation to distinguish a registry entry named <bpt id="p2">**</bpt>Windows\\CurrentVersion\\Run<ept id="p2">**</ept> from the subkey that is located in that path.</source>
          <target state="translated">또한 레지스트리 항목 이름에 백슬래시(<bpt id="p1">**</bpt><ph id="ph1">\\</ph><ept id="p1">**</ept>) 문자를 사용할 수 있으므로, 레지스트리 항목이 항목인 경우 경로 표기법을 사용하여 <bpt id="p2">**</bpt>Windows\\CurrentVersion\\Run<ept id="p2">**</ept> 레지스트리 항목을 해당 경로에 있는 하위 키와 구분할 수 없습니다.</target>         
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Renaming Existing Items (Rename\-Item)</source>
          <target state="translated">기존 항목 이름 바꾸기(Rename\-Item)</target>         
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>To change the name of a file or folder, use the <bpt id="p1">**</bpt>Rename\-Item<ept id="p1">**</ept> cmdlet.</source>
          <target state="translated">파일 또는 폴더의 이름을 변경하려면 <bpt id="p1">**</bpt>Rename\-Item<ept id="p1">**</ept> cmdlet을 사용합니다.</target>         
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>The following command changes the name of the <bpt id="p1">**</bpt>file1.txt<ept id="p1">**</ept> file to <bpt id="p2">**</bpt>fileOne.txt<ept id="p2">**</ept>.</source>
          <target state="translated">다음 명령은 <bpt id="p1">**</bpt>file1.txt<ept id="p1">**</ept> 파일의 이름을 <bpt id="p2">**</bpt>fileOne.txt<ept id="p2">**</ept>로 변경합니다.</target>         
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>Rename\-Item<ept id="p1">**</ept> cmdlet can change the name of a file or a folder, but it cannot move an item.</source>
          <target state="translated"><bpt id="p1">**</bpt>Rename\-Item<ept id="p1">**</ept> cmdlet은 파일 또는 폴더의 이름을 변경할 수 있지만 항목을 이동할 수 없습니다.</target>         
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>The following command fails because it attempts to move the file from the New.Directory directory to the Temp directory.</source>
          <target state="translated">다음 명령은 파일을 New.Directory 디렉터리에서 Temp 디렉터리로 이동하므로 실패합니다.</target>         
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Moving Items (Move\-Item)</source>
          <target state="translated">항목 이동(Move\-Item)</target>         
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>To move a file or folder, use the <bpt id="p1">**</bpt>Move\-Item<ept id="p1">**</ept> cmdlet.</source>
          <target state="translated">파일 또는 폴더를 이동하려면 <bpt id="p1">**</bpt>Move\-Item<ept id="p1">**</ept> cmdlet을 사용합니다.</target>         
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>For example, the following command moves the New.Directory directory from the C:\\temp directory to the root of the C: drive.</source>
          <target state="translated">예를 들어 다음 명령은 New.Directory 디렉터리를 C:\\temp 디렉터리에서 C: 드라이브의 루트로 이동합니다.</target>         
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>To verify that the item was moved, include the <bpt id="p1">**</bpt>PassThru<ept id="p1">**</ept> parameter of the <bpt id="p2">**</bpt>Move\-Item<ept id="p2">**</ept> cmdlet.</source>
          <target state="translated">항목이 이동되었는지 확인하려면 <bpt id="p2">**</bpt>Move\-Item<ept id="p2">**</ept> cmdlet의 <bpt id="p1">**</bpt>PassThru<ept id="p1">**</ept> 매개 변수를 포함합니다.</target>         
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Without <bpt id="p1">**</bpt>Passthru<ept id="p1">**</ept>, the <bpt id="p2">**</bpt>Move\-Item<ept id="p2">**</ept> cmdlet does not display any results.</source>
          <target state="translated"><bpt id="p1">**</bpt>Passthru<ept id="p1">**</ept>가 없을 경우 <bpt id="p2">**</bpt>Move\-Item<ept id="p2">**</ept> cmdlet은 결과를 표시하지 않습니다.</target>         
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Copying Items (Copy\-Item)</source>
          <target state="translated">항목 복사(Copy\-Item)</target>         
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>If you are familiar with the copy operations in other shells, you might find the behavior of the <bpt id="p1">**</bpt>Copy\-Item<ept id="p1">**</ept> cmdlet in Windows PowerShell to be unusual.</source>
          <target state="translated">다른 셸에서의 복사 작업에 대해 잘 알고 있는 경우 Windows PowerShell의 <bpt id="p1">**</bpt>Copy\-Item<ept id="p1">**</ept> cmdlet 동작이 특이함을 알 수 있습니다.</target>         
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>When you copy an item from one location to another, Copy\-Item does not copy its contents by default.</source>
          <target state="translated">항목을 한 위치에서 다른 위치로 이동할 경우 Copy\-Item은 기본적으로 해당 내용을 복사합니다.</target>         
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>For example, if you copy the <bpt id="p1">**</bpt>New.Directory<ept id="p1">**</ept> directory from the C: drive to the C:\\temp directory, the command succeeds, but the files in the New.Directory directory are not copied.</source>
          <target state="translated">예를 들어 <bpt id="p1">**</bpt>New.Directory<ept id="p1">**</ept> 디렉터리를 C: 드라이브에서 C:\\temp 디렉터리로 복사할 경우 명령은 성공하지만 New.Directory 디렉터리의 파일이 복사되지 않습니다.</target>         
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>If you display the contents of <bpt id="p1">**</bpt>C:\\temp\\New.Directory<ept id="p1">**</ept>, you will find that it contains no files:</source>
          <target state="translated"><bpt id="p1">**</bpt>C:\\temp\\New.Directory<ept id="p1">**</ept>의 내용을 표시하면 파일이 포함되어 있지 않습니다.</target>         
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Why doesn't the <bpt id="p1">**</bpt>Copy\-Item<ept id="p1">**</ept> cmdlet copy the contents to the new location?</source>
          <target state="translated"><bpt id="p1">**</bpt>Copy\-Item<ept id="p1">**</ept> cmdlet이 새 위치에 내용을 복사하지 않는 이유는 무엇인가요?</target>         
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>Copy\-Item<ept id="p1">**</ept> cmdlet was designed to be generic; it is not just for copying files and folders.</source>
          <target state="translated"><bpt id="p1">**</bpt>Copy\-Item<ept id="p1">**</ept> cmdlet은 제네릭으로 설계되었으므로, 파일 및 폴더를 복사하는 데 사용되지 않습니다.</target>         
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Also, even when copying files and folders, you might want to copy only the container and not the items within it.</source>
          <target state="translated">또한 파일 및 폴더를 복사할 때 포함된 항목은 제외하고 컨테이너만 복사할 수 있습니다.</target>         
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>To copy all of the contents of a folder, include the <bpt id="p1">**</bpt>Recurse<ept id="p1">**</ept> parameter of the <bpt id="p2">**</bpt>Copy\-Item<ept id="p2">**</ept> cmdlet in the command.</source>
          <target state="translated">폴더의 모든 내용을 복사하려면 명령에 <bpt id="p2">**</bpt>Copy\-Item<ept id="p2">**</ept> cmdlet의 <bpt id="p1">**</bpt>Recurse<ept id="p1">**</ept> 매개 변수를 포함합니다.</target>         
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>If you have already copied the directory without its contents, add the <bpt id="p1">**</bpt>Force<ept id="p1">**</ept> parameter, which allows you to overwrite the empty folder.</source>
          <target state="translated">내용을 포함하지 않고 디렉터리를 이미 복사한 경우 <bpt id="p1">**</bpt>Force<ept id="p1">**</ept> 매개 변수를 추가하여 빈 폴더를 덮어쓸 수 있습니다.</target>         
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Deleting Items (Remove\-Item)</source>
          <target state="translated">항목 삭제(Remove\-Item)</target>         
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>To delete files and folders, use the <bpt id="p1">**</bpt>Remove\-Item<ept id="p1">**</ept> cmdlet.</source>
          <target state="translated">파일 및 폴더를 삭제하려면 <bpt id="p1">**</bpt>Remove\-Item<ept id="p1">**</ept> cmdlet을 사용합니다.</target>         
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Windows PowerShell cmdlets, such as <bpt id="p1">**</bpt>Remove\-Item<ept id="p1">**</ept>, that can make significant, irreversible changes will often prompt for confirmation when you enter its commands.</source>
          <target state="translated">되돌릴 수 없는 중요한 변경을 수행하는 Windows PowerShell cmdlet(예: <bpt id="p1">**</bpt>Remove\-Item<ept id="p1">**</ept>)은 명령을 입력할 때 종종 확인 메시지를 표시합니다.</target>         
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>For example, if you try to remove the <bpt id="p1">**</bpt>New.Directory<ept id="p1">**</ept> folder, you will be prompted to confirm the command, because the folder contains files:</source>
          <target state="translated">예를 들어 <bpt id="p1">**</bpt>New.Directory<ept id="p1">**</ept> 폴더를 제거하려는 경우 폴더에 파일이 포함되어 있으므로 명령을 확인하는 메시지가 표시됩니다.</target>         
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Because <bpt id="p1">**</bpt>Yes<ept id="p1">**</ept> is the default response, to delete the folder and its files, press the <bpt id="p2">**</bpt>Enter<ept id="p2">**</ept> key.</source>
          <target state="translated"><bpt id="p1">**</bpt>예<ept id="p1">**</ept>가 기본 응답이므로 폴더와 해당 파일을 삭제하려면 <bpt id="p2">**</bpt>Enter<ept id="p2">**</ept> 키를 누릅니다.</target>         
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>To remove the folder without confirming, use the <bpt id="p1">**</bpt>\-Recurse<ept id="p1">**</ept> parameter.</source>
          <target state="translated">확인하지 않고 폴더를 제거하려면 <bpt id="p1">**</bpt>\-Recurse<ept id="p1">**</ept> 매개 변수를 사용합니다.</target>         
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Executing Items (Invoke\-Item)</source>
          <target state="translated">항목 실행(Invoke\-Item)</target>         
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Windows PowerShell uses the <bpt id="p1">**</bpt>Invoke\-Item<ept id="p1">**</ept> cmdlet to perform a default action for a file or folder.</source>
          <target state="translated">Windows PowerShell에서는 <bpt id="p1">**</bpt>Invoke\-Item<ept id="p1">**</ept> cmdlet을 사용하여 파일 또는 폴더에 대한 기본 작업을 수행합니다.</target>         
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>This default action is determined by the default application handler in the registry; the effect is the same as if you double\-click the item in File Explorer.</source>
          <target state="translated">이 기본 작업은 레지스트리에 있는 기본 응용 프로그램 처리기에 의해 결정되며, 파일 탐색기에서 항목을 두 번 클릭하는 경우와 효과는 동일합니다.</target>         
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>For example, suppose you run the following command:</source>
          <target state="translated">예를 들어 다음 명령을 실행한다고 가정합니다.</target>         
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>An Explorer window that is located in C:\\Windows appears, just as if you had double\-clicked the C:\\Windows folder.</source>
          <target state="translated">C:\\Windows 폴더를 두 번 클릭한 것처럼 C:\\Windows에 있는 탐색기 창이 나타납니다.</target>         
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>If you invoke the <bpt id="p1">**</bpt>Boot.ini<ept id="p1">**</ept> file on a system prior to Windows Vista:</source>
          <target state="translated">Windows Vista 이전 시스템에서 <bpt id="p1">**</bpt>Boot.ini<ept id="p1">**</ept> 파일을 호출할 경우:</target>         
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>If the .ini file type is associated with Notepad, the boot.ini file opens in Notepad.</source>
          <target state="translated">.ini 파일 형식이 메모장과 연결되어 있는 경우 boot.ini 파일이 메모장에서 열립니다.</target>         
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>