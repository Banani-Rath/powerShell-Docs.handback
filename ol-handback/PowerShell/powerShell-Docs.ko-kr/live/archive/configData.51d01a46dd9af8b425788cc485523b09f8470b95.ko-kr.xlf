<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ko-kr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-db30baf" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">8a3ae5fdf5d70de999ca6b992efb14533408c305</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">dsc\configData.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions" />
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Separating Configuration and Environment Data</source>
          <target state="translated">구성 및 환경 데이터 분리</target>         
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Separating Configuration and Environment Data</source>
          <target state="translated">구성 및 환경 데이터 분리</target>         
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Applies To: Windows PowerShell 4.0, Windows PowerShell 5.0</source>
          <target state="translated">적용 대상: Windows PowerShell 4.0, Windows PowerShell 5.0</target>         
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>In Windows PowerShell Desired State Configuration (DSC), it is possible to separate configuration data from the logic of your configuration.</source>
          <target state="translated">Windows PowerShell DSC(필요한 상태 구성)에서는 구성 데이터를 구성의 논리에서 분리할 수 있습니다.</target>         
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Another way to look at this is to consider the structural configuration (for example, a configuration might require that IIS be installed) as separate from the environmental configuration (that is, whether the situation is a test environment vs. a production one—the node names would be different, but the configuration applied to them would be the same).</source>
          <target state="translated">또한 구조적 구성(예를 들어 구성에 따라 IIS를 설치해야 할 수 있음)을 환경 구성에서 별도로 고려하는 것이 좋습니다(즉, 상황이 테스트 환경인지 프로덕션 환경인지 여부에 따라 노드 이름은 달라지겠지만 노드 이름에 적용되는 구성은 동일함).</target>         
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>This has the following advantages:</source>
          <target state="translated">이 방법의 이점은 다음과 같습니다.</target>         
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>It allows you to reuse your configuration data for different resources, nodes, and configurations.</source>
          <target state="translated">다양한 리소스, 노드 및 구성에 구성 데이터를 다시 사용할 수 있습니다.</target>         
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Configuration logic is more reusable if it does not contain hard-coded data.</source>
          <target state="translated">구성 논리는 하드 코드된 데이터를 포함하지 않을 경우 재사용률이 더 높습니다.</target>         
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>This is similar to good scripting guidelines for functions.</source>
          <target state="translated">이것은 함수에 대한 좋은 스크립팅 지침과 비슷합니다.</target>         
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>If some of the data needs to change, you can make the changes in one location, thereby saving time and reducing errors.</source>
          <target state="translated">일부 데이터를 변경해야 할 경우 한 곳에서 변경 작업을 수행할 수 있으므로 시간을 단축하고 오류를 줄일 수 있습니다.</target>         
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Basic concepts and examples</source>
          <target state="translated">기본 개념 및 예제</target>         
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>To specify the environmental part of the configuration, DSC uses the <bpt id="p1">**</bpt>ConfigurationData<ept id="p1">**</ept> parameter, which is a hash table (or it can take a .psd1 file which contains the hash table).</source>
          <target state="translated">구성의 환경 부분을 지정하기 위해, DSC에서는 해시 테이블인 <bpt id="p1">**</bpt>ConfigurationData<ept id="p1">**</ept> 매개 변수 사용합니다(또는 해시 테이블을 포함하는 .psd1 파일을 사용할 수 있음).</target>         
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>This hash table must have at least one key <bpt id="p1">**</bpt>AllNodes<ept id="p1">**</ept>, which has a structured value.</source>
          <target state="translated">이 해시 테이블에는 구조화된 값이 있는 하나 이상의 키 <bpt id="p1">**</bpt>AllNodes<ept id="p1">**</ept>가 있어야 합니다.</target>         
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>For example:</source>
          <target state="translated">예:</target>         
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Note the AllNodes key, whose value is an array.</source>
          <target state="translated">AllNodes 키에 주목하세요. 이 키의 값은 배열입니다.</target>         
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Each element of this array is also a hash table, which requires NodeName as a key:</source>
          <target state="translated">이 배열의 각 요소는 키로서 NodeName을 필요로 하는 해시 테이블이기도 합니다.</target>         
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Each hash table entry in AllNodes corresponds to configuration data to a node in the configuration.</source>
          <target state="translated">AllNodes의 각 해시 테이블 항목은 구성에서 노드에 대한 구성 데이터에 해당합니다.</target>         
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>In addition to the required NodeName key, you can add other keys to the hash table as well, for example:</source>
          <target state="translated">필수 NodeName 키 외에 다음과 같이 다른 키를 해시 테이블에 추가할 수도 있습니다.</target>         
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>DSC offers three special variables to use in the configuration script:</source>
          <target state="translated">DSC에서는 구성 스크립트에서 사용할 특별한 세 개의 변수를 제공합니다.</target>         
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>$AllNodes<ept id="p1">**</ept>: Refers to all of the nodes.</source>
          <target state="translated"><bpt id="p1">**</bpt>$AllNodes<ept id="p1">**</ept>: 모든 노드를 참조합니다.</target>         
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>You can use filtering with <bpt id="p1">**</bpt>.Where()<ept id="p1">**</ept> and <bpt id="p2">**</bpt>.ForEach()<ept id="p2">**</ept>, so instead of hard-coding node names to select particular nodes for action, you could write something like this to select VM-1 and VM-3 in the above example:</source>
          <target state="translated"><bpt id="p1">**</bpt>.Where()<ept id="p1">**</ept> 및 <bpt id="p2">**</bpt>.ForEach()<ept id="p2">**</ept>를 사용할 수 있으므로 노드 이름을 하드 코드하여 작동시킬 특정 노드를 선택하는 대신 다음과 같은 것을 작성하여 위의 예에 있는 VM-1 및 VM-3을 선택할 수도 있습니다.</target>         
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>$Node<ept id="p1">**</ept>: Once the set of nodes is filtered, you can use $Node to refer to the particular entry.</source>
          <target state="translated"><bpt id="p1">**</bpt>$Node<ept id="p1">**</ept>: 노드 집합이 필터링되면 $Node를 사용하여 특정 항목을 참조할 수 있습니다.</target>         
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>For example:</source>
          <target state="translated">예:</target>         
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>To apply a property to all nodes, you can set NodeName = “*”.</source>
          <target state="translated">속성을 모든 노드에 적용하려면 NodeName = "*"를 설정하면 됩니다.</target>         
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>For example, to give every node the LogPath property, you could do this:</source>
          <target state="translated">예를 들어 모든 노드에 LogPath 속성을 지정하기 위해 다음을 수행할 수 있습니다.</target>         
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>$ConfigurationData<ept id="p1">**</ept>: You can use this variable inside a configuration to access the configuration data hash table passed as a parameter.</source>
          <target state="translated"><bpt id="p1">**</bpt>$ConfigurationData<ept id="p1">**</ept>: 구성 내부에 이 변수를 사용하여 매개 변수로서 전달된 구성 데이터 해시 테이블에 액세스할 수 있습니다.</target>         
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>For example:</source>
          <target state="translated">예:</target>         
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>You can find a full example included in the <bpt id="p1">[</bpt>xWebAdministration module<ept id="p1">](https://powershellgallery.com/packages/xWebAdministration)</ept>.</source>
          <target state="translated"><bpt id="p1">[</bpt>xWebAdministration 모듈<ept id="p1">](https://powershellgallery.com/packages/xWebAdministration)</ept>에 포함된 전체 예제를 찾을 수 있습니다.</target>         
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>