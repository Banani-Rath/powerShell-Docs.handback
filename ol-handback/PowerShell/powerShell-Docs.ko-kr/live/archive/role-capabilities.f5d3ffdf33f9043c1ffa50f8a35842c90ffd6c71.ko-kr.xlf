<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ko-kr">
    <header>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions" />
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">jea\role-capabilities.md</xliffext:olfilepath>
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">5b6dcb205d2c3cbb1a98c6465cb1002b9ed61459</xliffext:olfilehash>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-48076a9" tool-company="Microsoft" />
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>role capabilities</source>
          <target state="translated">역할 기능</target>         
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Role Capabilities</source>
          <target state="translated">역할 기능</target>         
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Overview</source>
          <target state="translated">개요</target>         
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>In the above section, you learned that the "RoleDefinitions" field defined which groups had access to which Role Capabilities.</source>
          <target state="translated">위의 섹션에서 "RoleDefinitions" 필드는 어떤 그룹이 어떤 역할 기능에 액세스할 수 있는지를 정의한다는 것을 배웠습니다.</target>         
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>You may have wondered, "What are Role Capabilities?"</source>
          <target state="translated">이때 "역할 기능은 무엇일까?"라는 의문이 들었을 수 있습니다.</target>         
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>This section will answer that question.</source>
          <target state="translated">이 섹션에는 이 의문에 대한 답을 제공합니다.</target>         
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Introducing PowerShell Role Capabilities</source>
          <target state="translated">PowerShell 역할 기능 소개</target>         
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>PowerShell Role Capabilities define "what" a user can do at a JEA endpoint.</source>
          <target state="translated">PowerShell 역할 기능은 사용자가 JEA 끝점에서 수행할 수 있는 "작업"을 정의합니다.</target>         
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>They detail a whitelist of things like visible commands, visible applications, and more.</source>
          <target state="translated">역할 기능은 표시되는 명령, 표시되는 응용 프로그램 등의 허용 목록을 열거합니다.</target>         
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Role Capabilities are defined by files with a ".psrc" extension.</source>
          <target state="translated">역할 기능은 확장명이 ".psrc"인 파일로 정의됩니다.</target>         
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Role Capability Contents</source>
          <target state="translated">역할 기능 내용</target>         
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>We will start by examining and modifying the demo Role Capability file you used before.</source>
          <target state="translated">이전에 사용한 데모 역할 기능 파일을 검사하고 수정하여 작업을 시작하겠습니다.</target>         
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Imagine you have deployed your Session Configuration across your environment, but you have gotten feedback that you need to change the capabilities exposed to users.</source>
          <target state="translated">사용자 환경 전체에 세션 구성을 배포했지만 사용자에게 노출된 기능을 변경해야 한다는 피드백을 받았다고 가정해 보겠습니다.</target>         
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Operators need the ability to restart machines, and they also want to be able to get information about network settings.</source>
          <target state="translated">운영자는 컴퓨터를 다시 시작하는 기능을 필요로 하며 네트워크 설정에 대한 정보도 얻을 수 있기를 원합니다.</target>         
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>In addition, the security team has told you that allowing users to run "Restart-Service" without any restrictions is not acceptable.</source>
          <target state="translated">또한 제한 없이 "Restart-Service"를 실행하도록 사용자에게 허용하는 것은 받아들일 수 없다는 통보를 보안 팀에서 받았습니다.</target>         
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>You need to restrict the services that operators can restart.</source>
          <target state="translated">따라서 운영자가 다시 시작할 수 있는 서비스를 제한해야 합니다.</target>         
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>To make these changes, start by running PowerShell ISE as an Administrator and open the following file:</source>
          <target state="translated">이렇게 변경하려면 관리자로 PowerShell ISE를 실행하여 시작하고 다음 파일을 엽니다.</target>         
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Now find and update the following lines in the file:</source>
          <target state="translated">이제 파일에서 다음 줄을 찾아 업데이트합니다.</target>         
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>This contains a few interesting examples:</source>
          <target state="translated">여기에는 다음과 같은 몇 가지 흥미로운 예가 포함되어 있습니다.</target>         
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>You have restricted Restart-Service such that operators will only be able to use Restart-Service with the -Name parameter, and they will only be allowed to provide "Spooler" as an argument to that parameter.</source>
          <target state="translated">운영자가 -Name 매개 변수와 함께만 Restart-Service를 사용할 수 있도록 Restart-Service를 제한했으며 운영자는 이 매개 변수에 인수로 "Spooler"만 제공하도록 허용됩니다.</target>         
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>If you wanted to, you could also restrict the arguments using a regular expression using "ValidatePattern" instead of "ValidateSet".</source>
          <target state="translated">원하는 경우 "ValidateSet" 대신 "ValidatePattern"을 사용하는 정규식을 이용하여 인수를 제한할 수도 있습니다.</target>         
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>You have exposed all commands with the "Get" verb from the NetTCPIP module.</source>
          <target state="translated">NetTCPIP 모듈에서 "Get" 동사가 포함된 모든 명령을 노출했습니다.</target>         
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Because "Get" commands typically don't change system state, this is a relatively safe action.</source>
          <target state="translated">일반적으로 "Get" 명령은 시스템 상태를 변경하지 않으므로 이는 비교적 안전한 조치입니다.</target>         
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>That being said, it is strongly encouraged to closely examinine every command you expose through JEA.</source>
          <target state="translated">하지만 JEA를 통해 노출하는 모든 명령을 면밀하게 검사하는 것이 좋습니다.</target>         
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>You have expose an executable (ipconfig) using VisibleExternalCommands.</source>
          <target state="translated">VisibleExternalCommands를 사용하여 실행 파일(ipconfig)을 노출했습니다.</target>         
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>You can also expose full PowerShell scripts with this field.</source>
          <target state="translated">이 필드를 사용하여 전체 PowerShell 스크립트를 노출할 수도 있습니다.</target>         
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>It is important to always provide the full path to external commands to ensure a similarly named (and potentially malicous) program placed in the user's path does not get executed instead.</source>
          <target state="translated">사용자의 경로에 배치된 유사한 이름의(잠재적으로 악성인) 프로그램이 대신 실행되지 않도록 하기 위해 항상 외부 명령의 전체 경로를 제공해야 합니다.</target>         
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Save the file, then connect to the demo endpoint again to confirm the changes worked.</source>
          <target state="translated">파일을 저장한 다음 데모 끝점에 다시 연결하여 변경 사항이 적용되었는지 확인합니다.</target>         
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Because you only modified the Role Capability file, you do not need to re-register the Session Configuration.</source>
          <target state="translated">역할 기능 파일만 수정했기 때문에 세션 구성을 다시 등록할 필요가 없습니다.</target>         
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>PowerShell will automatically find your updated Role Capability when a user connects.</source>
          <target state="translated">PowerShell에서는 사용자가 연결할 때 업데이트된 역할 기능을 자동으로 찾습니다.</target>         
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Since Role Capabilities are loaded when the session starts, existing sessions are not affected by updates to Role Capability files.</source>
          <target state="translated">세션이 시작될 때 역할 기능이 로드되므로 기존 세션은 역할 기능 파일의 업데이트로 영향을 받지 않습니다.</target>         
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Now, confirm that you can restart the computer by running Restart-Computer with the -WhatIf parameter (unless you actually want to restart the computer).</source>
          <target state="translated">이제 -WhatIf 매개 변수와 함께 Restart-Computer를 실행하여 컴퓨터를 다시 시작할 수 있는지 확인합니다(실제로 컴퓨터를 다시 시작하고 싶지 않은 경우).</target>         
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Confirm that you can run "ipconfig"</source>
          <target state="translated">"ipconfig"를 실행할 수 있는지 확인합니다.</target>         
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>And finally, confirm that Restart-Service only works for the Spooler service.</source>
          <target state="translated">마지막으로, Restart-Service가 Spooler 서비스에만 작동하는지 확인합니다.</target>         
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Exit the session when you are finished.</source>
          <target state="translated">완료하면 세션을 종료합니다.</target>         
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Role Capability Creation</source>
          <target state="translated">역할 기능 만들기</target>         
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>In the next section, you will create a JEA endpoint for AD help desk users.</source>
          <target state="translated">다음 섹션에서는 AD 지원 센터 사용자에 대한 JEA 끝점을 만듭니다.</target>         
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>To prepare, we will create a blank Role Capability file to fill in for that section.</source>
          <target state="translated">준비하기 위해 다음 섹션에서 입력할 비어 있는 역할 기능 파일을 만듭니다.</target>         
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Role Capabilities must be created inside a "RoleCapabilities" folder inside a valid PowerShell module in order to be resolved when a session starts.</source>
          <target state="translated">역할 기능은 세션이 시작될 때 확인되기 위해 유효한 PowerShell 모듈에 있는 "RoleCapabilities" 폴더 내에 만들어야 합니다.</target>         
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>PowerShell Modules are essentially packages of PowerShell functionality.</source>
          <target state="translated">PowerShell 모듈은 기본적으로 PowerShell 기능의 패키지이며,</target>         
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>They can contain PowerShell functions, cmdlets, DSC Resources, Role Capabilities, and more.</source>
          <target state="translated">PowerShell 함수, cmdlet, DSC 리소스, 역할 기능 등을 포함할 수 있습니다.</target>         
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>You can find information about modules by running <ph id="ph1">`Get-Help about_Modules`</ph> in a PowerShell console.</source>
          <target state="translated">PowerShell 콘솔에서 <ph id="ph1">`Get-Help about_Modules`</ph>를 실행하여 모듈에 대한 정보를 찾을 수 있습니다.</target>         
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>To create a new PowerShell module with a blank Role Capability file, run the following commands:</source>
          <target state="translated">비어 있는 역할 기능 파일로 새 PowerShell 모듈을 만들려면 다음 명령을 실행합니다.</target>         
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Congratulations, you have created a blank Role Capability File.</source>
          <target state="translated">축하합니다. 비어 있는 역할 기능 파일을 만들었습니다.</target>         
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>It will be used in the next section.</source>
          <target state="translated">이 파일은 다음 섹션에서 사용됩니다.</target>         
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Key Concepts</source>
          <target state="translated">주요 개념</target>         
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Role Capability (.psrc)<ept id="p1">**</ept>: A file that define "what" a user can do at a JEA endpoint.</source>
          <target state="translated"><bpt id="p1">**</bpt>역할 기능(.psrc)<ept id="p1">**</ept>: 사용자가 JEA 끝점에서 수행할 수 있는 "작업"을 정의하는 파일입니다.</target>         
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>It details a whitelist of things like visible commands, visible console applications, and more.</source>
          <target state="translated">이 파일은 표시되는 명령, 표시되는 콘솔 응용 프로그램 등의 허용 목록을 열거합니다.</target>         
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>In order for PowerShell to detect Role Capabilities, you must put them in a "RoleCapabilities" folder in a valid PowerShell module.</source>
          <target state="translated">PowerShell에서 역할 기능을 검색하도록 하려면 유효한 PowerShell 모듈의 "RoleCapabilities" 폴더에 역할 기능을 배치해야 합니다.</target>         
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>PowerShell Module<ept id="p1">**</ept>: A package of PowerShell functionality.</source>
          <target state="translated"><bpt id="p1">**</bpt>PowerShell 모듈<ept id="p1">**</ept>: PowerShell 기능의 패키지이며,</target>         
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>It can contain PowerShell functions, cmdlets, DSC Resources, Role Capabilities, and more.</source>
          <target state="translated">PowerShell 함수, cmdlet, DSC 리소스, 역할 기능 등을 포함할 수 있습니다.</target>         
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>In order to be automatically loaded, PowerShell modules must be located under a path in <ph id="ph1">`$env:PSModulePath`</ph>.</source>
          <target state="translated">PowerShell 모듈이 자동으로 로드되려면 <ph id="ph1">`$env:PSModulePath`</ph>의 경로 아래에 있어야 합니다.</target>         
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>