<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ko-kr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-db30baf" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">061fb3a39191f7aaf3f5e51b12f56cac84031f49</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">wmf\jea_endpoint.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions" />
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Creating and Connecting to a JEA Endpoint</source>
          <target state="translated">JEA 끝점 만들기 및 연결</target>         
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>To create a JEA endpoint, you need to create and register a specially-configured PowerShell Session Configuration file, which can be generated with the <bpt id="p1">**</bpt>New-PSSessionConfigurationFile<ept id="p1">**</ept> cmdlet.</source>
          <target state="translated">JEA 끝점을 만들려면 특별히 구성된 PowerShell 세션 구성 파일을 만들어야 합니다. 이 파일은 <bpt id="p1">**</bpt>New-PSSessionConfigurationFile<ept id="p1">**</ept> cmdlet을 사용하여 생성할 수 있습니다.</target>         
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>This will create a session configuration file that looks like this:</source>
          <target state="translated">그러면 다음과 같은 세션 구성 파일이 만들어집니다.</target>         
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>When creating a JEA endpoint, the following parameters of the command (and corresponding keys in the file) must be set:</source>
          <target state="translated">JEA 끝점을 만들려면 다음과 같은 명령의 매개 변수(및 파일의 해당 키)를 설정해야 합니다.</target>         
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>SessionType to RestrictedRemoteServer</source>
          <target state="translated">SessionType을 RestrictedRemoteServer로 설정</target>         
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>RunAsVirtualAccount to <bpt id="p1">**</bpt>$true<ept id="p1">**</ept></source>
          <target state="translated">RunAsVirtualAccount를 <bpt id="p1">**</bpt>$true<ept id="p1">**</ept>로 설정</target>         
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>TranscriptPath to the directory where “over the shoulder” transcripts will be saved after each session</source>
          <target state="translated">TranscriptPath를 각 세션 후 “자격 증명 입력” 기록이 저장될 디렉터리로 설정</target>         
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>RoleDefinitions to a hashtable that defines which groups have access to which “Role Capabilities.”</source>
          <target state="translated">RoleDefinitions를 어떤 그룹이 어떤 “역할 기능”에 액세스할 수 있는지를 정의하는 해시 테이블로 설정.</target>         
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>This field defines <bpt id="p1">**</bpt>who<ept id="p1">**</ept> can do <bpt id="p2">**</bpt>what<ept id="p2">**</ept> on this endpoint.</source>
          <target state="translated">이 필드는 이 끝점에서 <bpt id="p1">**</bpt>누가<ept id="p1">**</ept> <bpt id="p2">**</bpt>무엇<ept id="p2">**</ept>을 수행할 수 있는지를 정의합니다.</target>         
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Role Capabilities are special files that will be explained shortly.</source>
          <target state="translated">역할 기능은 특수 파일로 간단하게 설명합니다.</target>         
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>The RoleDefinitions field defines which groups had access to which Role Capabilities.</source>
          <target state="translated">RoleDefinitions 필드는 어떤 그룹이 어떤 역할 기능에 액세스할 수 있는지를 정의합니다.</target>         
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>A Role Capability is a file that defines a set of capabilities that will be exposed to connecting users.</source>
          <target state="translated">역할 기능은 연결하는 사용자에게 노출될 기능 집합을 정의하는 파일입니다.</target>         
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>You can create Role Capabilities with the <bpt id="p1">**</bpt>New-PSRoleCapabilityFile<ept id="p1">**</ept> command.</source>
          <target state="translated">역할 기능은 <bpt id="p1">**</bpt>New-PSRoleCapabilityFile<ept id="p1">**</ept> 명령을 사용하여 만들 수 있습니다.</target>         
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>This will generate a template role capability that looks like this:</source>
          <target state="translated">그러면 다음과 같은 템플릿 역할 기능이 생성됩니다.</target>         
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>To be used by a JEA session configuration, Role Capabilities must be saved as a valid PowerShell module in a directory named “RoleCapabilities”.</source>
          <target state="translated">JEA 세션 구성에서 사용하려면 역할 기능을 유효한 PowerShell 모듈로 "RoleCapabilities"라는 디렉터리에 저장해야 합니다.</target>         
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>A module may have multiple role capability files, if desired.</source>
          <target state="translated">원하는 경우 모듈에 역할 기능 파일이 여러 개 있을 수 있습니다.</target>         
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>To start configuring which cmdlets, functions, aliases, and scripts a user may access when connecting to a JEA session, add your own rules to the Role Capability file following the commented out templates.</source>
          <target state="translated">JEA 세션에 연결할 때 사용자가 액세스할 수 있는 cmdlet, 함수, 별칭 및 스크립트를 구성하려면 고유한 규칙을 주석 처리된 템플릿 다음에 역할 기능 파일에 추가합니다.</target>         
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>For a deeper look into how you can configure Role Capabilities, check out the full <bpt id="p1">[</bpt>experience guide<ept id="p1">](http://aka.ms/JEA)</ept>.</source>
          <target state="translated">역할 기능을 구성하는 방법을 자세히 살펴보려면 전체 <bpt id="p1">[</bpt>experience guide(환경 가이드)<ept id="p1">](http://aka.ms/JEA)</ept>를 확인하세요.</target>         
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Finally, once you have finished customizing your session configuration and related Role Capabilities, register this session configuration and create the endpoint by running <bpt id="p1">**</bpt>Register-PSSessionConfiguration<ept id="p1">**</ept>.</source>
          <target state="translated">마지막으로 세션 구성 및 관련 역할 기능 사용자 지정을 마쳤으면 <bpt id="p1">**</bpt>Register-PSSessionConfiguration<ept id="p1">**</ept>을 실행하여 이 세션 구성을 등록하고 끝점을 만듭니다.</target>         
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Connect to a JEA Endpoint</source>
          <target state="translated">JEA 끝점에 연결</target>         
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Connecting to a JEA Endpoint works the same way connecting to any other PowerShell endpoint works.</source>
          <target state="translated">JEA 끝점에 연결은 다른 모든 PowerShell 끝점에 연결하는 것과 동일한 방식으로 작동합니다.</target>         
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>You simply have to give your JEA endpoint name as the “ConfigurationName” parameter for <bpt id="p1">**</bpt>New-PSSession<ept id="p1">**</ept>, <bpt id="p2">**</bpt>Invoke-Command<ept id="p2">**</ept>, or <bpt id="p3">**</bpt>Enter-PSSession<ept id="p3">**</ept>.</source>
          <target state="translated"><bpt id="p1">**</bpt>New-PSSession<ept id="p1">**</ept>, <bpt id="p2">**</bpt>Invoke-Command<ept id="p2">**</ept> 또는 <bpt id="p3">**</bpt>Enter-PSSession<ept id="p3">**</ept>에 대한 “ConfigurationName” 매개 변수처럼 JEA 끝점에 이름만 지정하면 됩니다.</target>         
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Once you have connected to the JEA session, you will be limited to running the commands whitelisted in the Role Capabilities that you have access to.</source>
          <target state="translated">JEA 세션에 연결한 후에는 액세스하는 역할 기능의 허용 목록에 있는 명령 실행으로 제한됩니다.</target>         
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>If you try to run any command not allowed for your role, you will encounter an error.</source>
          <target state="translated">역할에 허용되지 않은 명령을 실행하려고 하면 오류가 발생합니다.</target>         
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>