<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" source-language="en-US" target-language="ko-kr">
    <body>
      <group id="main" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>DSC for Linux nxEnvironment Resource</source>
          <target state="translated">Linux nxEnvironment 리소스용 DSC</target>         
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>nxEnvironment<ept id="p1">**</ept> resource in PowerShell Desired State Configuration (DSC) provides a mechanism to to manage system environment variables on a Linux node.</source>
          <target state="translated">PowerShell DSC(필요한 상태 구성)의 <bpt id="p1">**</bpt>nxEnvironment<ept id="p1">**</ept> 리소스에서는 Linux 노드 상의 시스템 환경 변수를 관리하는 메커니즘을 제공합니다.</target>         
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Syntax</source>
          <target state="translated">구문</target>         
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Properties</source>
          <target state="translated">속성</target>         
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Property</source>
          <target state="translated">속성</target>         
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Description</source>
          <target state="translated">설명</target>         
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Name</source>
          <target state="translated">이름</target>         
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Indicates the name of the environment variable for which you want to ensure a specific state.</source>
          <target state="translated">특정 상태를 확인하려는 환경 변수의 이름을 나타냅니다.</target>         
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Value</source>
          <target state="translated">Value</target>         
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The value to assign to the environment variable.</source>
          <target state="translated">환경 변수에 할당할 값입니다.</target>         
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Ensure</source>
          <target state="translated">Ensure</target>         
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Determines whether to check if the variable exists.</source>
          <target state="translated">해당 변수가 존재하는지를 확인할지 여부를 결정합니다.</target>         
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Set this property to "Present" to ensure the variable exists.</source>
          <target state="translated">변수가 존재하도록 하려면 이 속성을 "Present"으로 설정합니다.</target>         
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Set it to "Absent" to ensure the variable does not exist.</source>
          <target state="translated">변수가 존재하지 않도록 하려면 이 속성을 "Absent"으로 설정합니다.</target>         
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>The default value is "Present".</source>
          <target state="translated">기본값은 "Present"입니다.</target>         
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Path</source>
          <target state="translated">경로</target>         
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Defines the environment variable that is being configured.</source>
          <target state="translated">구성 중인 환경 변수를 정의합니다.</target>         
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Set this property to <bpt id="p2">**</bpt>$true<ept id="p2">**</ept> if the variable is the <bpt id="p3">**</bpt>Path<ept id="p3">**</ept> variable; otherwise, set it to <bpt id="p4">**</bpt>$false<ept id="p4">**</ept>.</source>
          <target state="translated">변수가 <bpt id="p3">**</bpt>Path<ept id="p3">**</ept> 변수이면 이 속성을 <bpt id="p2">**</bpt>$true<ept id="p2">**</ept>로 설정하고, 그렇지 않으면 <bpt id="p4">**</bpt>$false<ept id="p4">**</ept>로 설정합니다.</target>         
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>The default is <bpt id="p5">**</bpt>$false<ept id="p5">**</ept>.</source>
          <target state="translated">기본값은 <bpt id="p5">**</bpt>$false<ept id="p5">**</ept>입니다.</target>         
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>If the variable being configured is the <bpt id="p6">**</bpt>Path<ept id="p6">**</ept> variable, the value provided through the <bpt id="p7">**</bpt>Value<ept id="p7">**</ept> property will be appended to the existing value.</source>
          <target state="translated">구성되고 있는 변수가 <bpt id="p6">**</bpt>Path<ept id="p6">**</ept> 변수라면, <bpt id="p7">**</bpt>Value<ept id="p7">**</ept> 속성을 통해 제공된 값은 기존 값에 추가됩니다.</target>         
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>DependsOn</source>
          <target state="translated">DependsOn</target>         
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Indicates that the configuration of another resource must run before this resource is configured.</source>
          <target state="translated">이 리소스를 구성하려면 먼저 다른 리소스의 구성을 실행해야 함을 나타냅니다.</target>         
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>For example, if the <bpt id="p8">**</bpt>ID<ept id="p8">**</ept> of the resource configuration script block that you want to run first is <bpt id="p9">**</bpt>ResourceName<ept id="p9">**</ept> and its type is <bpt id="p10">**</bpt>ResourceType<ept id="p10">**</ept>, the syntax for using this property is <ph id="ph1">`DependsOn = "[ResourceType]ResourceName"`</ph>.</source>
          <target state="translated">예를 들어, 먼저 실행하려는 리소스 구성 스크립트 블록의 <bpt id="p8">**</bpt>ID<ept id="p8">**</ept>가 <bpt id="p9">**</bpt>ResourceName<ept id="p9">**</ept>이고 해당 형식이 <bpt id="p10">**</bpt>ResourceType<ept id="p10">**</ept>일 경우, 이 속성을 사용하기 위한 구문은 <ph id="ph1">`DependsOn = "[ResourceType]ResourceName"`</ph>입니다.</target>         
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Additional Information</source>
          <target state="translated">추가 정보</target>         
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>If <bpt id="p11">**</bpt>Path<ept id="p11">**</ept> is absent or set to <bpt id="p12">**</bpt>$false<ept id="p12">**</ept>, environment variables are managed in <ph id="ph2">`/etc/environment`</ph>.</source>
          <target state="translated"><bpt id="p11">**</bpt>Path<ept id="p11">**</ept>가 없거나 <bpt id="p12">**</bpt>$false<ept id="p12">**</ept>로 설정되어 있으면, 환경 변수는 <ph id="ph2">`/etc/environment`</ph>에서 관리됩니다.</target>         
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Your programs or scripts may require configuration to source the <ph id="ph3">`/etc/environment`</ph> file to access the managed environment variables.</source>
          <target state="translated">프로그램 또는 스크립트가 구성을 통해 관리되는 환경 변수에 액세스하도록 <ph id="ph3">`/etc/environment`</ph> 파일을 소싱해야 할 수도 있습니다.</target>         
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>If <bpt id="p13">**</bpt>Path<ept id="p13">**</ept> is set to <bpt id="p14">**</bpt>$true<ept id="p14">**</ept>, the environment variable is managed in the file <ph id="ph4">`/etc/profile.d/DSCenvironment.sh`</ph>.</source>
          <target state="translated"><bpt id="p13">**</bpt>Path<ept id="p13">**</ept>가 <bpt id="p14">**</bpt>$true<ept id="p14">**</ept>로 설정된 경우, 환경 변수는 <ph id="ph4">`/etc/profile.d/DSCenvironment.sh`</ph> 파일에서 관리됩니다.</target>         
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>This file will be created if it does not exist.</source>
          <target state="translated">이 파일은 존재하지 않는 경우 만들어집니다.</target>         
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>If <bpt id="p15">**</bpt>Ensure<ept id="p15">**</ept> is set to "Absent" and <bpt id="p16">**</bpt>Path<ept id="p16">**</ept> is set to <bpt id="p17">**</bpt>$true<ept id="p17">**</ept>, an existing environment variable will only be removed from <ph id="ph5">`/etc/profile.d/DSCenvironment.sh`</ph> and not from other files.</source>
          <target state="translated"><bpt id="p15">**</bpt>Ensure<ept id="p15">**</ept>가 "Absent"으로 설정되어 있고, <bpt id="p16">**</bpt>Path<ept id="p16">**</ept>가 <bpt id="p17">**</bpt>$true<ept id="p17">**</ept>로 설정되어 있는 경우, 기존 환경 변수는 다른 파일에서는 제거되지 않고 <ph id="ph5">`/etc/profile.d/DSCenvironment.sh`</ph>에서만 제거됩니다.</target>         
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Example</source>
          <target state="translated">예제</target>         
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>The following example shows how to use the <bpt id="p18">**</bpt>nxEnvironment<ept id="p18">**</ept> resource to ensure that <bpt id="p19">**</bpt>TestEnvironmentVariable<ept id="p19">**</ept> is present and has the value "Test-Value".</source>
          <target state="translated">다음 예제에서는 <bpt id="p18">**</bpt>nxEnvironment<ept id="p18">**</ept> 리소스를 사용하여 <bpt id="p19">**</bpt>TestEnvironmentVariable<ept id="p19">**</ept>이 존재하고 "Test-Value" 값을 갖도록 하는 방법을 보여 줍니다.</target>         
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>If <bpt id="p20">**</bpt>TestEnvironmentVariable<ept id="p20">**</ept> is not present, it will be created.</source>
          <target state="translated"><bpt id="p20">**</bpt>TestEnvironmentVariable<ept id="p20">**</ept>이 존재하지 않을 경우, 자동으로 만들어집니다.</target>         
        </trans-unit>
      </group>
    </body>
  </file>
  <header xmlns="">
    <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ef0812e4b382b5efb6e6f42d8671fab3ab663a4b</xliffext:olfilehash>
  </header>
</xliff>