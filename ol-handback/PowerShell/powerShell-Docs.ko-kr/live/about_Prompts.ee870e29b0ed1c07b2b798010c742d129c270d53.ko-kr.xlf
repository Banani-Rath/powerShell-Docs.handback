<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ko-kr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-1c394fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">21c2962d6727bff41704e7570caf07e7beb6bdcf</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">reference\4.0\Microsoft.PowerShell.Core\About\about_Prompts.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions" />
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">99bb07d58924863efa7fb92bac5ebbd87d2ba4b3</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">274a8c66b2801bc0536b6ae166d4bc680a79492a</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>about_Prompts</source>
          <target state="translated">about_Prompts</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>powershell, cmdlet</source>
          <target state="translated">powershell cmdlet</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>About Prompts</source>
          <target state="translated">표시 되는 메시지에 대 한</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>about_Prompts</source>
          <target state="translated">about_Prompts</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>about_Prompts</source>
          <target state="translated">about_Prompts</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>SHORT DESCRIPTION</source>
          <target state="translated">간단한 설명</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Describes the Prompt function and demonstrates how to create a custom Prompt function.</source>
          <target state="translated">프롬프트 함수를 설명 하 고 사용자 지정 프롬프트 함수를 만드는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>LONG DESCRIPTION</source>
          <target state="translated">자세한 설명</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>The  Windows PowerShell� command prompt indicates that  Windows PowerShell is ready to run a command:</source>
          <target state="translated">Windows PowerShell 명령 프롬프트는 Windows PowerShell 명령을 실행 하려면 준비 되었음을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The  Windows PowerShell prompt is determined by the built-in Prompt function.</source>
          <target state="translated">Windows PowerShell 프롬프트는 기본 제공 프롬프트 함수에 의해 결정 됩니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>You can customize the prompt by creating your own Prompt function and saving it in your  Windows PowerShell profile.</source>
          <target state="translated">사용자가 직접 프롬프트 함수를 만들고 Windows PowerShell 프로필에 저장 하 여 프롬프트를 사용자 지정할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>ABOUT THE PROMPT FUNCTION</source>
          <target state="translated">프롬프트 함수에 대 한</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>The Prompt function determines the appearance of the  Windows PowerShell prompt.</source>
          <target state="translated">프롬프트 함수에는 Windows PowerShell 프롬프트의 모양을 결정 합니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Windows PowerShell comes with a built-in Prompt function, but you can override it by defining your own Prompt function.</source>
          <target state="translated">Windows PowerShell 기본 제공 프롬프트 함수를 제공 하지만 사용자가 직접 프롬프트 함수를 정의 하 여 재정의할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>The Prompt function has the following syntax:</source>
          <target state="translated">프롬프트 함수에 다음 구문이 있습니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>The Prompt function must return an object.</source>
          <target state="translated">프롬프트 함수 개체를 반환 해야 합니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>As a best practice, return a string or an object that is formatted as a string.</source>
          <target state="translated">모범 사례로, 문자열 또는 문자열로 서식이 지정 된 개체를 반환 합니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>The maximum recommended length is 80 characters.</source>
          <target state="translated">권장 되는 최대 길이 80 자입니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>For example, the following prompt function returns a "Hello, World" string followed by a caret (&gt;).</source>
          <target state="translated">예를 들어, 다음 프롬프트 함수는 캐럿 (&gt;) 다음에 오는 "Hello, World" 문자열을 반환 합니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>GETTING THE PROMPT FUNCTION</source>
          <target state="translated">프롬프트 함수 가져오기</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>To get the Prompt function, use the Get-Command cmdlet or use the Get-Item cmdlet in the Function drive.</source>
          <target state="translated">프롬프트 함수를 가져오려면 Get-command cmdlet을 사용 하거나 함수 드라이브에서 Get-item cmdlet을 사용 합니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Functions are commands.</source>
          <target state="translated">함수는 명령입니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>So, you can use the Get-Command cmdlet to get functions, including the Prompt function.</source>
          <target state="translated">따라서 프롬프트 함수를 비롯 한 함수를 가져오려는 Get-command cmdlet을 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>For example:</source>
          <target state="translated">예:</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>To get the script that sets the value of the prompt, use the dot method to get the ScriptBlock property of the Prompt function.</source>
          <target state="translated">프롬프트의 값을 설정 하는 스크립트를 가져오려면 프롬프트 함수의 ScriptBlock 속성을 가져오는 점 메서드를 사용 합니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>For example:</source>
          <target state="translated">예:</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Like all functions, the Prompt function is stored in the Function: drive.</source>
          <target state="translated">모든 함수와 마찬가지로 프롬프트 함수는 함수에 저장 됩니다: 드라이브입니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>To display the script that creates the current Prompt function, type:</source>
          <target state="translated">현재 프롬프트 함수를 만드는 스크립트를 표시 하려면 다음을 입력 합니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>THE DEFAULT PROMPT</source>
          <target state="translated">기본 프롬프트</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>The default prompt appears only when the Prompt function generates an error or does not return an object.</source>
          <target state="translated">기본 프롬프트는 프롬프트 함수가 오류를 생성 하거나 개체를 반환 하지 않는 경우에 나타납니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>The default  Windows PowerShell prompt is:</source>
          <target state="translated">기본 Windows PowerShell 프롬프트는:</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>For example, the following command sets the Prompt function to $null, which is invalid.</source>
          <target state="translated">예를 들어 다음 명령은 유효 하지 않은 $null에 프롬프트 함수를 설정 합니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>As a result, the default prompt appears.</source>
          <target state="translated">결과적으로, 기본 프롬프트 표시 됩니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Because  Windows PowerShell comes with a built-in prompt, you usually do not see the default prompt.</source>
          <target state="translated">Windows PowerShell 기본 제공 프롬프트를 제공 하기 때문에 일반적으로 표시 되지 않으면 기본 프롬프트입니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>BUILT-IN PROMPT</source>
          <target state="translated">기본 제공 프롬프트</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Windows PowerShell includes a built-in prompt function.</source>
          <target state="translated">Windows PowerShell 기본 제공 프롬프트 함수를 포함합니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>In  Windows PowerShell 3.0, the built-in prompt function is:</source>
          <target state="translated">Windows PowerShell 3.0의 기본 제공 프롬프트 함수는입니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>This simplified prompt starts with "PS" followed by the current location, and one "&gt;" for each nested prompt level.</source>
          <target state="translated">이 간소화 된 프롬프트 다음 현재 위치와 하나 "PS"로 시작 "&gt;" 각에 대 한 프롬프트 수준을 중첩 합니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>In  Windows PowerShell 2.0, the built-in prompt function is:</source>
          <target state="translated">Windows PowerShell 2.0에서 기본 제공 프롬프트 함수가입니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>The function uses the Test-Path cmdlet to determine whether the $PSDebugContext automatic variable is populated.</source>
          <target state="translated">Test-path cmdlet를 사용 하 여 $PSDebugContext 자동 변수의 채워지는지 여부를 결정 하는 함수입니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>If $PSDebugContext is populated, you are in debugging mode, and "[DBG]" is added to the prompt, as follows:</source>
          <target state="translated">$PSDebugContext 채워진 경우 디버깅 모드에 있는 및 "[DBG]"는 프롬프트에 다음과 같이 추가 됩니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>If $PSDebugContext is not populated, the function adds "PS" to the prompt.</source>
          <target state="translated">$PSDebugContext 채워져 있지 않으면 함수 프롬프트에 "PS"를 추가 합니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>And, the function uses the Get-Location cmdlet to get the current file system directory location.</source>
          <target state="translated">및 함수 Get-location cmdlet를 사용 하 여 현재 파일 시스템 디렉터리 위치를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Then, it adds a right angle bracket (&gt;).</source>
          <target state="translated">그런 다음 오른쪽 꺾쇠 괄호 (&gt;)를 추가합니다.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>If you are in a nested prompt, the function adds two angle brackets (&gt;&gt;) to the prompt.</source>
          <target state="translated">중첩된 프롬프트가 있는 경우 함수는 2 개의 꺾쇠 괄호를 추가 하는 (&gt;&gt;) 프롬프트입니다.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>(You are in a nested prompt if the value of the $NestedPromptLevel automatic variable is greater than 1.)</source>
          <target state="translated">(위치는 중첩된 프롬프트가 $NestedPromptLevel 자동 변수의 값이 1 보다 큰 경우입니다.)</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>For example, when you are debugging in a nested prompt, the prompt resembles the following prompt:</source>
          <target state="translated">예를 들어 중첩 된 프롬프트에서 디버깅 하는 경우 다음과 같은 프롬프트가 프롬프트와 유사 합니다.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>CHANGES TO THE PROMPT</source>
          <target state="translated">프롬프트에 대 한 변경 내용</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>The Enter-PSSession cmdlet prepends the name of the remote computer to the current Prompt function.</source>
          <target state="translated">Enter-pssession cmdlet은 현재 프롬프트 함수를 원격 컴퓨터의 이름 앞에 추가 합니다.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>When you use the Enter-PSSession cmdlet to start a session with a remote computer, the command prompt changes to include the name of the remote computer.</source>
          <target state="translated">Enter-pssession cmdlet을 사용 하 여 원격 컴퓨터와 세션을 시작 하는 경우 명령 프롬프트에서 원격 컴퓨터의 이름을 포함 하도록 변경 합니다.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>For example:</source>
          <target state="translated">예:</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Other  Windows PowerShell host applications and alternate shells might have their own custom command prompts.</source>
          <target state="translated">다른 Windows PowerShell 호스트 응용 프로그램 및 대체 셸 자체 사용자 지정 명령 프롬프트에 있을 수 있습니다.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>For more information about the $PSDebugContext and $NestedPromptLevel automatic variables, see about_Automatic_Variables.</source>
          <target state="translated">$PSDebugContext 및 $NestedPromptLevel 자동 변수에 대 한 자세한 내용은 about_Automatic_Variables를 참조 합니다.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>HOW TO CUSTOMIZE THE PROMPT</source>
          <target state="translated">프롬프트를 사용자 지정 하는 방법</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>To customize the prompt, write a new Prompt function.</source>
          <target state="translated">프롬프트를 사용자 지정 하려면 새 프롬프트 함수를 작성 합니다.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>The function is not protected, so you can overwrite it.</source>
          <target state="translated">함수 덮어쓸 수 있으므로 보호 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>To write a prompt function, type the following:</source>
          <target state="translated">프롬프트 함수를 작성 하려면 다음을 입력 합니다.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Then, between the braces, enter the commands or the string that creates your prompt.</source>
          <target state="translated">그런 다음 중괄호 사이 명령 또는 만드는, 프롬프트 문자열을 입력 합니다.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>For example, the following prompt includes your computer name:</source>
          <target state="translated">예를 들어, 다음 프롬프트에 사용자의 컴퓨터 이름이 포함 됩니다.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>On the Server01 computer, the prompt resembles the following prompt:</source>
          <target state="translated">Server01 컴퓨터에서 프롬프트에 다음 프롬프트와 유사합니다.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>The following prompt function includes the current date and time:</source>
          <target state="translated">다음 프롬프트 함수는 현재 날짜 및 시간에 포함 됩니다.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>The prompt resembles the following prompt:</source>
          <target state="translated">프롬프트에 다음 프롬프트와 유사합니다.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>You can also change the default Prompt function:</source>
          <target state="translated">기본 프롬프트 함수를 변경할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>For example, the following modified Prompt function adds "[ADMIN]:" to the built-in  Windows PowerShell prompt when  Windows PowerShell is opened by using the "Run as administrator" option:</source>
          <target state="translated">예를 들어, 다음 수정 함수를 추가 하는 프롬프트 "[ADMIN]:"을 "관리자 권한으로 실행" 옵션을 사용 하 여 Windows PowerShell 열릴 때 기본 제공 Windows PowerShell 프롬프트에:</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>When you start  Windows PowerShell by using the "Run as administrator" option, a prompt that resembles the following prompt appears:</source>
          <target state="translated">"관리자 권한으로 실행" 옵션을 사용 하 여 Windows PowerShell을 시작 하면 다음과 같은 메시지가 유사한 프롬프트가 나타납니다.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>The following Prompt function displays the history ID of the next command.</source>
          <target state="translated">다음 프롬프트 함수는 다음 명령의 기록 ID를 표시합니다.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>To view the command history, use the Get-History cmdlet.</source>
          <target state="translated">명령 기록을 보려면 기록 가져오기 cmdlet을 사용 합니다.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>The following prompt uses the Write-Host and Get-Random cmdlets to create a prompt that changes color randomly.</source>
          <target state="translated">다음과 같은 메시지가 Write-host 및 Get-random cmdlet를 사용 하 여 색을 임의로 변경 하는 프롬프트를 만듭니다.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>Because Write-Host writes to the current host application but does not return an object, this function includes a Return statement.</source>
          <target state="translated">Write-host 현재 호스트 응용 프로그램에 기록 하지만 개체를 반환 하지 않는, 하기 때문에이 함수는 Return 문을 포함 합니다.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>Without it,  Windows PowerShell uses the default prompt, "PS&gt;".</source>
          <target state="translated">매개 변수가 없으면 Windows PowerShell 사용 하 여 기본 프롬프트 "PS &gt;"입니다.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>SAVING THE PROMPT FUNCTION</source>
          <target state="translated">프롬프트 함수를 저장합니다.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>Like any function, the Prompt function exists only in the current session.</source>
          <target state="translated">다른 함수 처럼 프롬프트 함수는 현재 세션에만 존재합니다.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>To save the Prompt function for future sessions, add it to your  Windows PowerShell profiles.</source>
          <target state="translated">이후 세션에 대 한 프롬프트 함수를 저장 하려면 Windows PowerShell 프로필에 추가 합니다.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>For more information about profiles, see about_Profiles.</source>
          <target state="translated">프로필에 대한 자세한 내용은 about_Profiles를 참조하세요.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>SEE ALSO</source>
          <target state="translated">참고 항목</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>Get-Location</source>
          <target state="translated">Get-location</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>Enter-PSSession</source>
          <target state="translated">Enter-PSSession</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>Get-History</source>
          <target state="translated">Get-History</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>Get-Random</source>
          <target state="translated">Get-Random</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>Write-Host</source>
          <target state="translated">Write-Host</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>about_Profiles</source>
          <target state="translated">about_Profiles</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>about_Functions</source>
          <target state="translated">about_Functions</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>about_Scopes</source>
          <target state="translated">about_Scopes</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>about_Debuggers</source>
          <target state="translated">about_Debuggers</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>about_Automatic_Variables</source>
          <target state="translated">about_Automatic_Variables</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>