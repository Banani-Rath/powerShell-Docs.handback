<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ko-kr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-db30baf" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">991a324945289b2eff0b706d093b2d345352fb15</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">dsc\authoringResourceMofCS.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions" />
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Authoring a DSC resource in C`</source>
          <target state="translated">C`에서 DSC 리소스 작성</target>         
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Authoring a DSC resource in C</source>
          <target state="translated">C#에서 DSC 리소스 작성</target>         
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Applies To: Windows PowerShell 4.0, Windows PowerShell 5.0</source>
          <target state="translated">적용 대상: Windows PowerShell 4.0, Windows PowerShell 5.0</target>         
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Typically, a Windows PowerShell Desired State Configuration (DSC) custom resource is implemented in a PowerShell script.</source>
          <target state="translated">일반적으로, Windows PowerShell DSC(필요한 상태 구성) 사용자 지정 리소스는 PowerShell 스크립트로 구현됩니다.</target>         
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>However, you can also implement the functionality of a DSC custom resource by writing cmdlets in C#.</source>
          <target state="translated">그러나 C#으로 cmdlet을 작성하여 DSC 사용자 지정 리소스의 기능을 구현할 수도 있습니다.</target>         
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>For an introduction on writing cmdlets in C#, see <bpt id="p1">[</bpt>Writing a Windows PowerShell Cmdlet<ept id="p1">](https://technet.microsoft.com/en-us/library/dd878294.aspx)</ept>.</source>
          <target state="translated">C#에서 cmdlet을 작성하는 방법을 알려면 <bpt id="p1">[</bpt>Writing a Windows PowerShell Cmdlet(Windows PowerShell Cmdlet 작성)<ept id="p1">](https://technet.microsoft.com/en-us/library/dd878294.aspx)</ept>을 참조합니다.</target>         
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Aside from implementing the resource in C# as cmdlets, the process of creating the MOF schema, creating the folder structure, importing and using your custom DSC resource are the same as described in <bpt id="p1">[</bpt>Writing a custom DSC resource with MOF<ept id="p1">](authoringResourceMOF.md)</ept>.</source>
          <target state="translated">C#에서 리소스를 cmdlet으로 구현하는 것 외에 MOF 스키마 만들기, 폴더 구조 만들기, 사용자 지정 DSC 리소스 가져오기 및 사용 프로세스는 <bpt id="p1">[</bpt>MOF를 사용하여 사용자 지정 DSC 리소스 작성<ept id="p1">](authoringResourceMOF.md)</ept>에 설명된 것과 동일합니다.</target>         
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Writing a cmdlet-based resource</source>
          <target state="translated">cmdlet 기반 리소스 작성</target>         
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>For this example, we will implement a simple resource that manages a text file and its contents.</source>
          <target state="translated">이 예의 경우, 텍스트 파일과 그 내용을 관리하는 간단한 리소스를 구현하게 됩니다.</target>         
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Writing the MOF schema</source>
          <target state="translated">MOF 스키마 작성</target>         
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>The following is the MOF resource definition.</source>
          <target state="translated">다음은 MOF 리소스 정의입니다.</target>         
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Setting up the Visual Studio project</source>
          <target state="translated">Visual Studio 프로젝트 설정</target>         
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Setting up a cmdlet project</source>
          <target state="translated">cmdlet 프로젝트 설정</target>         
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Open Visual Studio.</source>
          <target state="translated">Visual Studio를 엽니다.</target>         
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Create a C# project and provide the name.</source>
          <target state="translated">C# 프로젝트를 만들고 이름을 입력합니다.</target>         
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Select <bpt id="p1">**</bpt>Class Library<ept id="p1">**</ept> from the available project templates.</source>
          <target state="translated">사용 가능한 프로젝트 템플릿에서 <bpt id="p1">**</bpt>클래스 라이브러리<ept id="p1">**</ept>를 선택합니다.</target>         
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Click <bpt id="p1">**</bpt>Ok<ept id="p1">**</ept>.</source>
          <target state="translated"><bpt id="p1">**</bpt>확인<ept id="p1">**</ept>을 클릭합니다.</target>         
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Add an assembly reference to System.Automation.Management.dll to your project.</source>
          <target state="translated">System.Automation.Management.dll에 대한 어셈블리 참조를 프로젝트에 추가합니다.</target>         
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Change the assembly name to match the resource name.</source>
          <target state="translated">어셈블리 이름을 리소스 이름과 일치하도록 변경합니다.</target>         
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>In this case, the assembly should be named <bpt id="p1">**</bpt>MSFT_XDemoFile<ept id="p1">**</ept>.</source>
          <target state="translated">이 경우 어셈블리의 이름은 <bpt id="p1">**</bpt>MSFT_XDemoFile<ept id="p1">**</ept>로 지정해야 합니다.</target>         
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Writing the cmdlet code</source>
          <target state="translated">cmdlet 코드 작성</target>         
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>The following C# code implements the <bpt id="p1">**</bpt>Get-TargetResource<ept id="p1">**</ept>, <bpt id="p2">**</bpt>Set-TargetResource<ept id="p2">**</ept>, and <bpt id="p3">**</bpt>Test-TargetResource<ept id="p3">**</ept> cmdlets.</source>
          <target state="translated">다음 C# 코드는 <bpt id="p1">**</bpt>Get-TargetResource<ept id="p1">**</ept>, <bpt id="p2">**</bpt>Set-TargetResource<ept id="p2">**</ept> 및 <bpt id="p3">**</bpt>Test-TargetResource<ept id="p3">**</ept> cmdlet을 구현합니다.</target>         
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Deploying the resource</source>
          <target state="translated">리소스 배포</target>         
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>The compiled dll file should be saved in a file structure similar to a script-based resource.</source>
          <target state="translated">컴파일된 dll 파일은 스크립트 기반 리소스와 비슷한 파일 구조에 저장됩니다.</target>         
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>The following is the folder structure for this resource.</source>
          <target state="translated">다음은 이 리소스에 대한 폴더 구조입니다.</target>         
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>See Also</source>
          <target state="translated">참고 항목</target>         
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Concepts</source>
          <target state="translated">개념</target>         
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Writing a custom DSC resource with MOF</source>
          <target state="translated">MOF를 사용하여 사용자 지정 DSC 리소스 작성</target>         
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Other Resources</source>
          <target state="translated">관련 자료</target>         
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Writing a Windows PowerShell Cmdlet</source>
          <target state="translated">Writing a Windows PowerShell Cmdlet(Windows PowerShell Cmdlet 작성)</target>         
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>