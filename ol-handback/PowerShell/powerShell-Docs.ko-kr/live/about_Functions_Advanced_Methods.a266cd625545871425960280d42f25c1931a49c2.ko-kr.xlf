<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ko-kr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-1c394fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">32bf1aef1b22d0413f61efec691f0d36334226a5</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">reference\4.0\Microsoft.PowerShell.Core\About\about_Functions_Advanced_Methods.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions" />
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">49ea43b8b67c4cd7906a28786d3f14f5a8930ee6</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">294970e4933f8adf1d5433b9aa6f18fa4909d80f</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>about_Functions_Advanced_Methods</source>
          <target state="translated">about_Functions_Advanced_Methods</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>powershell, cmdlet</source>
          <target state="translated">powershell cmdlet</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>About Functions Advanced Methods</source>
          <target state="translated">함수에 대 한 고급 방법</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>about_Functions_Advanced_Methods</source>
          <target state="translated">about_Functions_Advanced_Methods</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>TOPIC</source>
          <target state="translated">항목</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>about_Functions_Advanced_Methods</source>
          <target state="translated">about_Functions_Advanced_Methods</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>SHORT DESCRIPTION</source>
          <target state="translated">간단한 설명</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Describes how functions that specify the CmdletBinding attribute can use the methods and properties that are available to compiled cmdlets.</source>
          <target state="translated">CmdletBinding 특성에 사용할 수 있는 속성과 메서드를 사용할 수 있는 지정 하는 함수에서 cmdlet을 컴파일 하는 방법을 설명 합니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>LONG DESCRIPTION</source>
          <target state="translated">자세한 설명</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Functions that specify the CmdletBinding attribute can access a number of methods and properties through the $pscmdlet variable.</source>
          <target state="translated">CmdletBinding 특성을 지정 하는 함수는 $pscmdlet 변수를 통해 다양 한 메서드 및 속성을 액세스할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>These methods include the following methods:</source>
          <target state="translated">이러한 메서드를 다음 방법을 다음과 같습니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Input-processing methods that compiled cmdlets use to do their work.</source>
          <target state="translated">Cmdlet을 컴파일된 입력 처리 메서드는 작업 수행에 사용 합니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>The ShouldProcess and ShouldContinue methods that are used to get user feedback before an action is performed.</source>
          <target state="translated">ShouldProcess ShouldContinue 하는 메서드와 동작을 수행 하기 전에 사용자에 게 피드백을 얻는 데 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>The ThrowTerminatingError method for generating error records.</source>
          <target state="translated">오류 레코드를 생성 하기 위한 ThrowTerminatingError 메서드입니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Several Write methods that return different types of output.</source>
          <target state="translated">클래스는 다른 유형의 출력을 반환 합니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>All the methods and properties of the PSCmdlet class are available to advanced functions.</source>
          <target state="translated">모든 메서드와 PSCmdlet 클래스의 속성에는 고급 기능 제공 됩니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>For more information about these methods and properties, see System.Management.Automation.PSCmdlet in the MSDN (Microsoft Developer Network) library at http://go.microsoft.com/fwlink/?LinkId=142139.</source>
          <target state="translated">이러한 메서드 및 속성에 대 한 자세한 내용은 System.Management.Automation.PSCmdlet http://go.microsoft.com/fwlink/?LinkId=142139 MSDN (Microsoft Developer Network) 라이브러리에 참조 합니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Input Processing Methods</source>
          <target state="translated">입력 처리 메서드</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>The methods described in this section are referred to as the input processing methods.</source>
          <target state="translated">이 섹션에 설명 된 방법은 입력 처리 메서드를 이라고 합니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>For functions, these three methods are represented by the Begin, Process, and End blocks of the function.</source>
          <target state="translated">함수의 경우이 세 가지 메서드는 시작, 프로세스 및 최종 블록은 함수에 의해 표현 됩니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Each function must include one or more of these blocks.</source>
          <target state="translated">각 함수는 이러한 블록 중 하나 이상을 포함 해야 합니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>The Windows PowerShell runtime uses the code within these blocks when it is running a function.</source>
          <target state="translated">Windows PowerShell 런타임 함수를 실행 중인 경우 이러한 블록 내의 코드를 사용 합니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>(These blocks are also available to functions that do not use the CmdletBinding attribute.)</source>
          <target state="translated">(이러한 블록 CmdletBinding 특성을 사용 하지 않는 함수에 사용할 수 있습니다.)</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Begin This block is used to provide optional one-time preprocessing for the function.</source>
          <target state="translated">Begin이이 블록은 함수에 대해 선택적인 일회성 전처리를 제공 하는 데 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>The Windows PowerShell runtime uses the code in this block one time for each instance of the function in the pipeline.</source>
          <target state="translated">Windows PowerShell 런타임에 코드를 사용이 블록의 함수에 파이프라인의 각 인스턴스에 대해 한 번입니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Process This block is used to provide record-by-record processing for the function.</source>
          <target state="translated">이 블록 프로세스는 함수에 대 한 레코드 별로 처리를 제공 하는 데 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>This block might be used any number of times, or not at all, depending on the input to the function.</source>
          <target state="translated">이 블록 수 또는 전혀 함수에 대 한 입력에 따라 원하는 만큼 사용할 합니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>For example, if the function is the first command in the pipeline, the Process block will be used one time.</source>
          <target state="translated">예를 들어, 함수가 파이프라인의 첫 번째 명령은 경우 Process 블록은 한 번입니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>If the function is not the first command in the pipeline, the Process block is used one time for every input that the function receives from the pipeline.</source>
          <target state="translated">함수가 파이프라인의 첫 번째 명령은 경우 함수는 파이프라인에서 수신 하는 모든 입력에 대해 한 번씩 Process 블록에 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>If there is no pipeline input, the Process block is not used.</source>
          <target state="translated">입력이 없으면 파이프라인, Process 블록 사용 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>This block must be defined if a function parameter is set to accept pipeline input.</source>
          <target state="translated">함수 매개 변수는 파이프라인 입력을 허용 하도록 설정 된 경우에이 블록을 정의 되어야 합니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>If this block is not defined and the parameter accepts input from the pipeline, the function will miss the values that are passed to the function through the pipeline.</source>
          <target state="translated">이 블록이 정의 되지 않은 매개 변수는 파이프라인의 입력을 허용 하는 경우 함수는 파이프라인을 통해 함수에 전달 되는 값을 누락 됩니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Also, when the function supports confirmation requests (when the SupportsShouldProcess parameter of the Parameter attribute is set to $True), the call to the ShouldProcess method must be made from within the Process block.</source>
          <target state="translated">또한 함수 확인 요청 (SupportsShouldProcess 매개 변수, 매개 변수 속성의 $True로 설정 됨) 하는 경우를 지 원하는 경우 ShouldProcess 메서드 호출을 만들어야에서 Process 블록 내에서 합니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>End This block is used to provide optional one-time post-processing for the function.</source>
          <target state="translated">끝이이 블록은 함수에 대해 선택적인 일회성 사후 처리를 제공 하는 데 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>The following example shows the outline of a function that contains a Begin block for one-time preprocessing, a Process block for multiple record processing, and an End block for one-time post-processing.</source>
          <target state="translated">다음 예제에서는 일회성 전처리 Begin 블록, 처리, 여러 개의 레코드에 대 한 프로세스 블록 및 일회성 사후 처리에 대 한 최종 블록을 포함 하는 함수의 개요를 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Function Test-ScriptCmdlet { [CmdletBinding(SupportsShouldProcess=$True)] Param ($Parameter1) Begin{} Process{} End{} }</source>
          <target state="translated">테스트 ScriptCmdlet 함수 {[CmdletBinding(SupportsShouldProcess=$True)] 매개 변수 (매개 변수 $1) Begin {} 프로세스 {End {}}</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Confirmation Methods</source>
          <target state="translated">확인 방법</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>ShouldProcess This method is called to request confirmation from the user before the function performs an action that would change the system.</source>
          <target state="translated">ShouldProcess이이 메서드는 함수는 시스템을 변경 하는 작업을 수행 하기 전에 사용자에서 확인을 요청 하기 위해 호출 됩니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>The function can continue based on the Boolean value returned by the method.</source>
          <target state="translated">함수는 메서드에 의해 반환 되는 부울 값에 따라 계속 수 있습니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>This method can be called only from within the Process{} block of the function.</source>
          <target state="translated">이 메서드는 함수의 프로세스 {} /catch{} 블록 내 에서만 호출할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>And, the CmdletBinding attribute must declare that the function supports ShouldProcess (as shown in the previous example).</source>
          <target state="translated">및 함수 (앞의 예제에 표시)으로 ShouldProcess를 지원 CmdletBinding 특성 선언 해야 합니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>For more information about this method, see System.Management.Automation.Cmdlet.ShouldProcess in the MSDN library at http://go.microsoft.com/fwlink/?LinkId=142142.</source>
          <target state="translated">이 메서드에 대 한 자세한 내용은 MSDN library http://go.microsoft.com/fwlink/?LinkId=142142에서 System.Management.Automation.Cmdlet.ShouldProcess를 참조 하십시오.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>For more information about how to request confirmation, see "Requesting Confirmation" in the MSDN library at http://go.microsoft.com/fwlink/?LinkID=136658.</source>
          <target state="translated">확인을 요청 하는 방법에 대 한 자세한 내용은 http://go.microsoft.com/fwlink/?LinkID=136658 MSDN library에서 "확인 요청"을 참조 하십시오.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>ShouldContinue This method is called to request a second confirmation message.</source>
          <target state="translated">두 번째 확인 메시지를 요청 하려면 ShouldContinue이이 메서드가 호출 됩니다.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>It should be called when the ShouldProcess method returns $true.</source>
          <target state="translated">ShouldProcess 메서드 $true 반환 될 때 호출 되어야 합니다.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>For more information about this method, see System.Management.Automation.Cmdlet.ShouldContinue in the MSDN library at http://go.microsoft.com/fwlink/?LinkId=142143.</source>
          <target state="translated">이 메서드에 대 한 자세한 내용은 MSDN library http://go.microsoft.com/fwlink/?LinkId=142143에서 System.Management.Automation.Cmdlet.ShouldContinue를 참조 하십시오.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Error Methods</source>
          <target state="translated">오류 메서드</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Functions can call two different methods when errors occur.</source>
          <target state="translated">오류가 발생 하는 경우 함수는 두 가지 방법이 호출할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>When a nonterminating error occurs, the function should call the WriteError method, which is described in the "Write Methods" section.</source>
          <target state="translated">종료 되지 않는 오류가 발생 하는 경우 함수 "를 작성 하는 방법" 섹션에 설명 WriteError 메서드를 호출 해야 합니다.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>When a terminating error occurs and the function cannot continue, it should call the ThrowTerminatingError method.</source>
          <target state="translated">종료 오류가 발생 하는 경우 함수를 계속할 수 없습니다 ThrowTerminatingError 메서드를 호출 해야 합니다.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>You can also use the Throw statement for terminating errors and the Write-Error cmdlet for nonterminating errors.</source>
          <target state="translated">종료 되지 않는 오류에 대 한 종료 오류를 Throw 문 및 쓰기 오류 cmdlet을 사용할 수도 있습니다.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>For more information, see System.Management.Automation.Cmdlet.</source>
          <target state="translated">자세한 내용은 System.Management.Automation.Cmdlet를 참조 하십시오.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>ThrowTerminatingError in the MSDN libray at http://go.microsoft.com/fwlink/?LinkId=142144.</source>
          <target state="translated">Msdn 라이브러리에서 http://go.microsoft.com/fwlink/?LinkId=142144 ThrowTerminatingError 합니다.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Write Methods</source>
          <target state="translated">Write 메서드</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>A function can call the following methods to return different types of output.</source>
          <target state="translated">함수 다양 한 유형의 출력을 반환 하는 다음 메서드가 호출할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>Notice that not all the output goes to the next command in the pipeline.</source>
          <target state="translated">모든 출력 파이프라인의 다음 명령으로 이동 하는 표시입니다.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>You can also use the various Write cmdlets, such as Write-Error.</source>
          <target state="translated">또한 쓰기 오류와 같은 다양 한 쓰기 cmdlet을 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>WriteCommandDetail For information about the WriteCommandDetails method, see System.Management.Automation.Cmdlet.WriteCommandDetail in the MSDN library at http://go.microsoft.com/fwlink/?LinkId=142155.</source>
          <target state="translated">WriteCommandDetail 대 한 자세한 내용은 WriteCommandDetails 메서드에 대 한 System.Management.Automation.Cmdlet.WriteCommandDetail http://go.microsoft.com/fwlink/?LinkId=142155 MSDN library에서를 참조 하십시오.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>WriteDebug To provide information that can be used to troubleshoot a function, make the function call the WriteDebug method.</source>
          <target state="translated">WriteDebug를 WriteDebug 메서드를 호출 하는 함수, 함수를 해결 하는 데 사용할 수 있는 정보를 제공 합니다.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>This displays debug messages to the user.</source>
          <target state="translated">이 사용자에 게 디버그 메시지를 표시합니다.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>For more information, see System.Management.Automation.Cmdlet.WriteDebug in the MSDN library at http://go.microsoft.com/fwlink/?LinkId=142156.</source>
          <target state="translated">자세한 내용은 System.Management.Automation.Cmdlet.WriteDebug http://go.microsoft.com/fwlink/?LinkId=142156 MSDN library에서를 참조 하십시오.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>WriteError Functions should call this method when nonterminating errors occur and the function is designed to continue processing records.</source>
          <target state="translated">WriteError 함수는 종료 되지 않는 오류가 발생 하 고 함수 처리 레코드를 계속 하도록 하는 경우이 메서드를 호출 해야 합니다.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>For more information, see System.Management.Automation.Cmdlet.WriteError in the MSDN library at http://go.microsoft.com/fwlink/?LinkId=142157.</source>
          <target state="translated">자세한 내용은 System.Management.Automation.Cmdlet.WriteError http://go.microsoft.com/fwlink/?LinkId=142157 MSDN library에서를 참조 하십시오.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>Note: If a terminating error occurs, the function should call the ThrowTerminatingError method.</source>
          <target state="translated">참고: 종료 오류가 발생 하는 경우 함수 ThrowTerminatingError 메서드를 호출 해야 합니다.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>WriteObject This method allows the function to send an object to the next command in the pipeline.</source>
          <target state="translated">WriteObject이이 메서드는 함수를 개체를 파이프라인의 다음 명령으로 보낼 수 있습니다.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>In most cases, this is the method to use when the function returns data.</source>
          <target state="translated">대부분의 경우에서이 함수에서 반환 데이터를 사용 하 여 방법.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>For more information, see System.Management.Automation.PSCmdlet.WriteObject in the MSDN library at http://go.microsoft.com/fwlink/?LinkId=142158.</source>
          <target state="translated">자세한 내용은 System.Management.Automation.PSCmdlet.WriteObject http://go.microsoft.com/fwlink/?LinkId=142158 MSDN library에서를 참조 하십시오.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>WriteProgress For functions whose actions take a long time to complete, this method allows the function to call the WriteProgress method so that progress information is displayed.</source>
          <target state="translated">에 대 한 WriteProgress 함수 동작을 완료 하는 데 오래 걸릴,이 메서드를 통해 진행률 정보가 표시 되도록 WriteProgress 메서드를 호출할 함수입니다.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>For example, you can display the percent completed.</source>
          <target state="translated">예를 들어 비율을 표시할 수 있습니다 완료 합니다.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>For more information, see System.Management.Automation.PSCmdlet.WriteProgress in the MSDN library at http://go.microsoft.com/fwlink/?LinkId=142160.</source>
          <target state="translated">자세한 내용은 System.Management.Automation.PSCmdlet.WriteProgress http://go.microsoft.com/fwlink/?LinkId=142160 MSDN library에서를 참조 하십시오.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>WriteVerbose To provide detailed information about what the function is doing, make the function call the WriteVerbose method to display verbose messages to the user.</source>
          <target state="translated">WriteVerbose를 함수가 수행 하는 방법에 대 한 자세한 정보를 제공, 사용자에 게 자세한 정보 메시지를 표시 하려면 WriteVerbose 메서드를 호출 하는 함수입니다.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>By default, verbose messages are not displayed.</source>
          <target state="translated">기본적으로 자세한 정보 메시지가 표시 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>For more information, see System.Management.Automation.PSCmdlet.WriteVerbose in the MSDN library at http://go.microsoft.com/fwlink/?LinkId=142162.</source>
          <target state="translated">자세한 내용은 System.Management.Automation.PSCmdlet.WriteVerbose http://go.microsoft.com/fwlink/?LinkId=142162 MSDN library에서를 참조 하십시오.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>WriteWarning To provide information about conditions that may cause unexpected results, make the function call the WriteWarning method to display warning messages to the user.</source>
          <target state="translated">WriteWarning에 예기치 않은 결과가 발생할 수 있습니다는 함수 사용자에 게 경고 메시지를 표시 하기 위해 WriteWarning 메서드를 호출 하는 조건에 대 한 정보를 제공 합니다.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>By default, warning messages are displayed.</source>
          <target state="translated">기본적으로 경고 메시지가 표시 됩니다.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>For more information, see System.Management.Automation.PSCmdlet.WriteWarning in the MSDN library at http://go.microsoft.com/fwlink/?LinkId=142164.</source>
          <target state="translated">자세한 내용은 System.Management.Automation.PSCmdlet.WriteWarning http://go.microsoft.com/fwlink/?LinkId=142164 MSDN library에서를 참조 하십시오.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>Note: You can also display warning messages by configuring the WarningPreference variable or by using the Verbose and Debug command-line options.</source>
          <target state="translated">참고: WarningPreference 변수를 구성 하거나 자세한 정보 표시 및 디버그 명령줄 옵션을 사용 하 여 경고 메시지를 표시할 수도 있습니다.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>Other Methods and Properties</source>
          <target state="translated">다른 메서드 및 속성</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>For information about the other methods and properties that can be accessed through the $PSCmdlet variable, see System.Management.Automation.PSCmdlet in the MSDN library at http://go.microsoft.com/fwlink/?LinkId=142139.</source>
          <target state="translated">다른 메서드와 $PSCmdlet 변수를 통해 액세스할 수 있는 속성에 대 한 내용은 System.Management.Automation.PSCmdlet http://go.microsoft.com/fwlink/?LinkId=142139 MSDN library에서를 참조 하십시오.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>For example, the ParameterSetName property allows you to see the parameter set that is being used.</source>
          <target state="translated">예를 들어, 속성을 사용 하면 매개 변수 집합을 볼 수 있습니다 ParameterSetName 사용 중입니다.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>Parameter sets allow you to create a function that performs different tasks based on the parameters that are specified when the function is run.</source>
          <target state="translated">매개 변수 집합을 허용 하는 함수를 실행할 때 지정 된 매개 변수에 따라 다양 한 작업을 수행 하는 함수를 만들 수 있습니다.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>SEE ALSO</source>
          <target state="translated">참고 항목</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>about_Functions about_Functions_Advanced about_Functions_Advanced_Parameters about_Functions_CmdletBindingAttribute about_Functions_OutputTypeAttribute</source>
          <target state="translated">about_Functions about_Functions_Advanced about_Functions_Advanced_Parameters about_Functions_CmdletBindingAttribute about_Functions_OutputTypeAttribute</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>