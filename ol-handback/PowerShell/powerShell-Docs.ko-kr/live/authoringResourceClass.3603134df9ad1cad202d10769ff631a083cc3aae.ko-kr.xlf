<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" source-language="en-US" target-language="ko-kr">
    <body>
      <group id="main" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Writing a custom DSC resource with PowerShell classes</source>
          <target state="translated">PowerShell 클래스를 사용하여 사용자 지정 DSC 리소스 작성</target>         
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Applies To: Windows Windows PowerShell 5.0</source>
          <target state="translated">적용 대상: Windows Windows PowerShell 5.0</target>         
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>With the introduction of PowerShell classes in Windows PowerShell 5.0, you can now define a DSC resource by creating a class.</source>
          <target state="translated">Windows PowerShell 5.0의 PowerShell 클래스 도입으로 이제 클래스를 만들어 DSC 리소스를 정의할 수 있습니다.</target>         
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>The class defines both the schema and the implementation of the resource, so there is no need to create a separate MOF file.</source>
          <target state="translated">클래스는 리소스의 스키마와 구현을 모두 정의하며, 따라서 별도의 MOF 파일을 만들 필요가 없습니다.</target>         
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>The folder structure for a class-based resource is also simpler, because a <bpt id="p1">**</bpt>DSCResources<ept id="p1">**</ept> folder is not necessary.</source>
          <target state="translated"><bpt id="p1">**</bpt>DSCResources<ept id="p1">**</ept> 폴더가 필요하지 않으므로 클래스 기반 리소스의 폴더 구조도 더 간단합니다.</target>         
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>In a class-based DSC resource, the schema is defined as properties of the class which can be modified with attributes to specify the property type..</source>
          <target state="translated">클래스 기반 DSC 리소스에서 스키마는 속성 유형을 지정하는 특성으로 수정할 수 있는 클래스의 속성으로 정의됩니다.</target>         
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>The resource is implemented by <bpt id="p2">**</bpt>Get()<ept id="p2">**</ept>, <bpt id="p3">**</bpt>Set()<ept id="p3">**</ept>, and <bpt id="p4">**</bpt>Test()<ept id="p4">**</ept> methods (equivalent to the <bpt id="p5">**</bpt>Get-TargetResource<ept id="p5">**</ept>, <bpt id="p6">**</bpt>Set-TargetResource<ept id="p6">**</ept>, and <bpt id="p7">**</bpt>Test-TargetResource<ept id="p7">**</ept> functions in a script resource.</source>
          <target state="translated">리소스는 스크립트 리소스에 있는 <bpt id="p2">**</bpt>Get()<ept id="p2">**</ept>, <bpt id="p3">**</bpt>Set()<ept id="p3">**</ept> 및 <bpt id="p4">**</bpt>Test()<ept id="p4">**</ept> 메서드(<bpt id="p5">**</bpt>Get-TargetResource<ept id="p5">**</ept>, <bpt id="p6">**</bpt>Set-TargetResource<ept id="p6">**</ept> 및 <bpt id="p7">**</bpt>Test-TargetResource<ept id="p7">**</ept>) 함수에 의해 구현됩니다.</target>         
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>In this topic, we will create a simple resource named <bpt id="p8">**</bpt>FileResource<ept id="p8">**</ept> that manages a file in a specified path.</source>
          <target state="translated">이 항목에서는 지정된 경로에 있는 파일을 관리하는 <bpt id="p8">**</bpt>FileResource<ept id="p8">**</ept>라는 간단한 리소스를 만듭니다.</target>         
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>For more information about DSC resources, see <bpt id="p9">[</bpt>Build Custom Windows PowerShell Desired State Configuration Resources<ept id="p9">](authoringResource.md)</ept></source>
          <target state="translated">DSC 리소스에 대한 자세한 내용은 <bpt id="p9">[</bpt>Build Custom Windows PowerShell Desired State Configuration Resources(사용자 지정 Windows PowerShell 필요한 상태 구성 리소스 빌드)<ept id="p9">](authoringResource.md)</ept>를 참조하세요.</target>         
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Folder structure for a class resource</source>
          <target state="translated">클래스 리소스에 대한 폴더 구조</target>         
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>To implement a DSC custom resource with a PowerShell class, create the following folder structure.</source>
          <target state="translated">PowerShell 클래스를 사용하여 DSC 사용자 지정 리소스를 구현하려면 다음 폴더 구조를 만듭니다.</target>         
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>The class is defined in <bpt id="p10">**</bpt>MyDscResource.psm1<ept id="p10">**</ept> and the module manifest is defined in <bpt id="p11">**</bpt>MyDscResource.psd1<ept id="p11">**</ept>.</source>
          <target state="translated">클래스는 <bpt id="p10">**</bpt>MyDscResource.psm1<ept id="p10">**</ept>에 정의되어 있으며, 모듈 매니페스트는 <bpt id="p11">**</bpt>MyDscResource.psd1<ept id="p11">**</ept>에 정의되어 있습니다.</target>         
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Nested modules</source>
          <target state="translated">중첩 모듈</target>         
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Alternatively, you can split resources across several <ph id="ph1">`.psm1`</ph> files and include them as nested modules.</source>
          <target state="translated">또는, 리소스를 몇 개의 <ph id="ph1">`.psm1`</ph> 파일에 분할하고 중첩 모듈로 포함할 수 있습니다.</target>         
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>It's reasonable, when you have a lot of resources and putting them all in one file would make it hard to manage.</source>
          <target state="translated">리소스가 많은데 모두 하나의 파일에 넣어서 관리하기 어려울 때 적합합니다.</target>         
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>You can put one class in each file, or several of them.</source>
          <target state="translated">각 파일에 하나씩, 또는 몇 개씩 넣을 수 있습니다.</target>         
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>It can be useful to group resources by a sub-area inside one nested module.</source>
          <target state="translated">하나의 중첩 모듈 내에 있는 하위 영역으로 리소스를 그룹화하는 데 유용할 수 있습니다.</target>         
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>From the user point of view, there is no difference in usage.</source>
          <target state="translated">사용자의 관점에서는 사용하는 데 차이가 없습니다.</target>         
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>All resource will show up in <ph id="ph2">`MyDscResource`</ph> module.</source>
          <target state="translated">모든 리소스는 <ph id="ph2">`MyDscResource`</ph> 모듈에 표시됩니다.</target>         
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Think about these nested modules as implementation details and use it for your convinience.</source>
          <target state="translated">구현 정보로서 이러한 중첩 모듈에 대해 생각하고 편리하게 사용하세요.</target>         
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Create the class</source>
          <target state="translated">클래스 만들기</target>         
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>You use the class keyword to create a PowerShell class.</source>
          <target state="translated">클래스 키워드를 사용하여 PowerShell 클래스를 만듭니다.</target>         
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>To specify that a class is a DSC resource, use the <bpt id="p12">**</bpt>DscResource()<ept id="p12">**</ept> attribute.</source>
          <target state="translated">클래스가 DSC 리소스임을 지정하려면 <bpt id="p12">**</bpt>DscResource()<ept id="p12">**</ept> 특성을 사용합니다.</target>         
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>The name of the class is the name of the DSC resource.</source>
          <target state="translated">클래스의 이름은 DSC 리소스의 이름입니다.</target>         
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Declare properties</source>
          <target state="translated">속성 선언</target>         
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>The DSC resource schema is defined as properties of the class.</source>
          <target state="translated">DSC 리소스 스키마는 클래스의 속성으로 정의됩니다.</target>         
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>We declare three properties as follows.</source>
          <target state="translated">세 가지 속성을 다음과 같이 선언합니다.</target>         
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Notice that the properties are modified by attributes.</source>
          <target state="translated">속성은 특성으로 수정되고 있습니다.</target>         
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>The meaning of the attributes is as follows:</source>
          <target state="translated">특성의 의미는 다음과 같습니다.</target>         
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source><bpt id="p13">**</bpt>DscProperty(Key)<ept id="p13">**</ept>: The property is required.</source>
          <target state="translated"><bpt id="p13">**</bpt>DscProperty(Key)<ept id="p13">**</ept>: 필수 속성입니다.</target>         
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>The property is a key.</source>
          <target state="translated">속성이 키입니다.</target>         
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>The values of all properties marked as keys must combine to uniquely identify a resource instance within a configuration.</source>
          <target state="translated">키로 표시된 모든 속성의 값은 구성 내 리소스 인스턴스를 고유하게 식별하도록 결합해야 합니다.</target>         
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source><bpt id="p14">**</bpt>DscProperty(Mandatory)<ept id="p14">**</ept>: The property is required.</source>
          <target state="translated"><bpt id="p14">**</bpt>DscProperty(Mandatory)<ept id="p14">**</ept>: 필수 속성입니다.</target>         
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source><bpt id="p15">**</bpt>DscProperty(NotConfigurable)<ept id="p15">**</ept>: The property is read-only.</source>
          <target state="translated"><bpt id="p15">**</bpt>DscProperty(NotConfigurable)<ept id="p15">**</ept>: 읽기 전용 속성입니다.</target>         
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Properties marked with this attribute cannot be set by a configuration, but are populated by the <bpt id="p16">**</bpt>Get()<ept id="p16">**</ept> method when present.</source>
          <target state="translated">이 특성으로 표시된 속성은 구성으로 설정할 수 없지만 존재할 경우 <bpt id="p16">**</bpt>Get()<ept id="p16">**</ept> 메서드로 채워집니다.</target>         
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source><bpt id="p17">**</bpt>DscProperty()<ept id="p17">**</ept>: The property is configurable, but it is not required.</source>
          <target state="translated"><bpt id="p17">**</bpt>DscProperty()<ept id="p17">**</ept>: 이 속성은 구성이 가능하지만 필수는 아닙니다.</target>         
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>The <bpt id="p18">**</bpt>$Path<ept id="p18">**</ept> and <bpt id="p19">**</bpt>$SourcePath<ept id="p19">**</ept> properties are both strings.</source>
          <target state="translated"><bpt id="p18">**</bpt>$Path<ept id="p18">**</ept> 및 <bpt id="p19">**</bpt>$SourcePath<ept id="p19">**</ept> 속성은 모두 문자열입니다.</target>         
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>The <bpt id="p20">**</bpt>$CreationTime<ept id="p20">**</ept> is a <bpt id="p21">[</bpt>DateTime<ept id="p21">](https://technet.microsoft.com/en-us/library/system.datetime.aspx)</ept> property.</source>
          <target state="translated"><bpt id="p20">**</bpt>$CreationTime<ept id="p20">**</ept>은 <bpt id="p21">[</bpt>DateTime<ept id="p21">](https://technet.microsoft.com/en-us/library/system.datetime.aspx)</ept> 속성입니다.</target>         
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>The <bpt id="p22">**</bpt>$Ensure<ept id="p22">**</ept> property is an enumeration type, defined as follows.</source>
          <target state="translated"><bpt id="p22">**</bpt>$Ensure<ept id="p22">**</ept> 속성은 다음과 같이 정의하는 열거형 형식입니다.</target>         
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Implementing the methods</source>
          <target state="translated">메서드 구현</target>         
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>The <bpt id="p23">**</bpt>Get()<ept id="p23">**</ept>, <bpt id="p24">**</bpt>Set()<ept id="p24">**</ept>, and <bpt id="p25">**</bpt>Test()<ept id="p25">**</ept> methods are analogous to the <bpt id="p26">**</bpt>Get-TargetResource<ept id="p26">**</ept>, <bpt id="p27">**</bpt>Set-TargetResource<ept id="p27">**</ept>, and <bpt id="p28">**</bpt>Test-TargetResource<ept id="p28">**</ept> functions in a script resource.</source>
          <target state="translated">The <bpt id="p23">**</bpt>Get()<ept id="p23">**</ept>, <bpt id="p24">**</bpt>Set()<ept id="p24">**</ept> 및 <bpt id="p25">**</bpt>Test()<ept id="p25">**</ept> 메서드는 스크립트 리소스의 <bpt id="p26">**</bpt>Get-TargetResource<ept id="p26">**</ept>, <bpt id="p27">**</bpt>Set-TargetResource<ept id="p27">**</ept> 및 <bpt id="p28">**</bpt>Test-TargetResource<ept id="p28">**</ept> 함수와 유사합니다.</target>         
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>This code also includes the CopyFile() function, a helper function that copies the file from <bpt id="p29">**</bpt>$SourcePath<ept id="p29">**</ept> to <bpt id="p30">**</bpt>$Path<ept id="p30">**</ept>.</source>
          <target state="translated">이 코드에는 <bpt id="p29">**</bpt>$SourcePath<ept id="p29">**</ept>의 파일을 <bpt id="p30">**</bpt>$Path<ept id="p30">**</ept>에 복사하는 도우미 함수인 CopyFile() 함수도 포함되어 있습니다.</target>         
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>The complete file</source>
          <target state="translated">전체 파일</target>         
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>The complete class file follows.</source>
          <target state="translated">전체 클래스 파일은 다음과 같습니다.</target>         
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Create a manifest</source>
          <target state="translated">매니페스트 만들기</target>         
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>To make a class-based resource available to the DSC engine, you must include a <bpt id="p31">**</bpt>DscResourcesToExport<ept id="p31">**</ept> statement in the manifest file that instructs the module to export resources.</source>
          <target state="translated">DSC 엔진에 사용할 수 있는 클래스 기반 리소스를 만들려면 매니페스트 파일에 리소스를 내보내도록 모듈에게 지시하는 <bpt id="p31">**</bpt>DscResourcesToExport<ept id="p31">**</ept> 문을 포함해야 합니다.</target>         
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>If you are using <bpt id="p32">**</bpt>Nested modules<ept id="p32">**</ept> to split resources into few files, you should put the list of nested modules in <ph id="ph3">`NestedModules`</ph> key</source>
          <target state="translated"><bpt id="p32">**</bpt>중첩 모듈<ept id="p32">**</ept> 사용하여 리소스를 몇 개의 파일로 분할하는 중이라면, <ph id="ph3">`NestedModules`</ph> 키에 중첩 모듈 목록을 넣어야 합니다.</target>         
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Test the resource</source>
          <target state="translated">리소스 테스트</target>         
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>After saving the class and manifest files in the folder structure as described earlier, you can create a configuration that uses the new resource.</source>
          <target state="translated">앞에서 설명한 대로 폴더 구조에 클래스 및 매니페스트 파일을 저장한 후에는 새 리소스를 사용하는 구성을 만들 수 있습니다.</target>         
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>For information about how to run a DSC configuration, see <bpt id="p33">[</bpt>Enacting configurations<ept id="p33">](enactingConfigurations.md)</ept>.</source>
          <target state="translated">DSC 구성을 실행하는 방법에 대한 정보는 <bpt id="p33">[</bpt>구성 시행<ept id="p33">](enactingConfigurations.md)</ept>을 참조합니다.</target>         
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>The following configuration will check to see whether the file at <ph id="ph4">`c:\test\test.txt`</ph> exists, and, if not, copies the file from <ph id="ph5">`c:\test.txt`</ph> (you should create <ph id="ph6">`c:\test.txt`</ph> before you run the configuration).</source>
          <target state="translated">다음 구성은 <ph id="ph4">`c:\test\test.txt`</ph>의 파일이 있는지 여부를 확인하게 되며, 없을 경우 <ph id="ph5">`c:\test.txt`</ph>의 파일을 복사합니다(구성을 실행하기 전에 <ph id="ph6">`c:\test.txt`</ph>를 만들어야 함).</target>         
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>See Also</source>
          <target state="translated">참고 항목</target>         
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Concepts</source>
          <target state="translated">개념</target>         
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Build Custom Windows PowerShell Desired State Configuration Resources</source>
          <target state="translated">사용자 지정 Windows PowerShell 필요한 상태 구성 리소스 빌드</target>         
        </trans-unit>
      </group>
    </body>
  </file>
  <header xmlns="">
    <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">09fdf376a7001ef6e43d4c4a6b8d14516b616fc5</xliffext:olfilehash>
  </header>
</xliff>