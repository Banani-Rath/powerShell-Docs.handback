<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ko-kr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-1c394fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ad512db70ca3e1220559bcf85d29525eda65df48</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">reference\3.0\Microsoft.PowerShell.Diagnostics\Get-WinEvent.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions" />
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">8d6fb05237bf214cba26d8c83b28f6f2a0995cb8</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">039cbc27de41f8052e5e9a531213cb07e0b66e13</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>powershell, cmdlet</source>
          <target state="translated">powershell cmdlet</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Get-WinEvent</source>
          <target state="translated">Get-WinEvent</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Get-WinEvent</source>
          <target state="translated">Get-WinEvent</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>SYNOPSIS</source>
          <target state="translated">요약</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Gets events from event logs and event tracing log files on local and remote computers.</source>
          <target state="translated">로컬 및 원격 컴퓨터의 이벤트 로그 및 이벤트 추적 로그 파일에서 이벤트를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>SYNTAX</source>
          <target state="translated">구문</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>GetLogSet (Default)</source>
          <target state="translated">GetLogSet (기본값)</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>ListLogSet</source>
          <target state="translated">ListLogSet</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>ListProviderSet</source>
          <target state="translated">ListProviderSet</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>GetProviderSet</source>
          <target state="translated">GetProviderSet</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>FileSet</source>
          <target state="translated">FileSet</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>XmlQuerySet</source>
          <target state="translated">XmlQuerySet</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>HashQuerySet</source>
          <target state="translated">HashQuerySet</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>DESCRIPTION</source>
          <target state="translated">설명</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>Get-WinEvent<ept id="p1">**</ept> cmdlet gets events from event logs, including classic logs, such as the System and Application logs, and the event logs that are generated by the Windows Event Log technology introduced in Windows Vista.</source>
          <target state="translated"> <bpt id="p1">**</bpt>Get-winevent<ept id="p1">**</ept> cmdlet 시스템 및 응용 프로그램 로그와 같은 클래스 로그를 포함 하 여 이벤트 로그 및 Windows Vista에 도입 된 Windows 이벤트 로그 기술로 생성 되는 이벤트 로그에서 이벤트를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>It also gets events in log files generated by Event Tracing for Windows (ETW).</source>
          <target state="translated">이 cmdlet은 ETW(Windows용 이벤트 추적)로 생성된 로그 파일의 이벤트도 가져옵니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Without parameters, a <bpt id="p1">**</bpt>Get-WinEvent<ept id="p1">**</ept> command gets all the events from all the event logs on the computer.</source>
          <target state="translated">매개 변수 없이 <bpt id="p1">**</bpt>Get-winevent<ept id="p1">**</ept> 명령은 컴퓨터에서 모든 이벤트 로그에서 모든 이벤트를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>To interrupt the command, press CTRL + C.</source>
          <target state="translated">명령을 중단하려면 Ctrl+C를 누릅니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Get-WinEvent<ept id="p1">**</ept> also lists event logs and event log providers.</source>
          <target state="translated"><bpt id="p1">**</bpt>Get-winevent<ept id="p1">**</ept> 도 이벤트 로그 및 이벤트 로그 공급자를 나열 합니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>You can get events from selected logs or from logs generated by selected event providers.</source>
          <target state="translated">선택한 로그나 선택한 이벤트 공급자를 통해 생성된 로그에서 이벤트를 가져올 수 있습니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>And, you can combine events from multiple sources in a single command.</source>
          <target state="translated">하나의 명령에 여러 원본의 이벤트를 결합할 수도 있습니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Get-WinEvent<ept id="p1">**</ept> allows you to filter events by using XPath queries, structured XML queries, and simplified hash-table queries.</source>
          <target state="translated"><bpt id="p1">**</bpt>Get-winevent<ept id="p1">**</ept> XML 쿼리 및 간단한 해시 테이블 쿼리의 구조 XPath 쿼리를 사용 하 여 이벤트를 필터링 할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>EXAMPLES</source>
          <target state="translated">예제</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>-------------------------- EXAMPLE 1 --------------------------</source>
          <target state="translated">-------------------------- 예제 1 --------------------------</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>This command gets all the logs on the local computer.</source>
          <target state="translated">이 명령은 로컬 컴퓨터의 모든 로그를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Logs are listed in the order that <bpt id="p1">**</bpt>Get-WinEvent<ept id="p1">**</ept> gets them.</source>
          <target state="translated">로그는 순서로 나열 됩니다는 <bpt id="p1">**</bpt>Get-winevent<ept id="p1">**</ept> 을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Classic logs are usually retrieved first, followed by the new Windows Eventing logs.</source>
          <target state="translated">일반적으로 기본 로그가 먼저 검색된 다음 새 Windows 이벤트 로그가 검색됩니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Because there are typically more than a hundred event logs, this parameter requires a log name or name pattern.</source>
          <target state="translated">이벤트 로그 수는 일반적으로 100개가 넘으므로 이 매개 변수에는 로그 이름 또는 이름 패턴이 필요합니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>To get all the logs, use *.</source>
          <target state="translated">모든 로그를 가져오려면 *를 사용합니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>-------------------------- EXAMPLE 2 --------------------------</source>
          <target state="translated">-------------------------- EXAMPLE 2 --------------------------</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>These commands get an object that represents the classic System log on the local computer.</source>
          <target state="translated">이 명령은 로컬 컴퓨터의 기본 시스템 로그를 나타내는 개체를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>The object includes useful information about the log, including its size, event log provider, file path, and whether it is enabled.</source>
          <target state="translated">이 개체에는 크기, 이벤트 로그 공급자, 파일 경로 및 사용 여부를 비롯한 로그에 대한 유용한 정보가 포함됩니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>-------------------------- EXAMPLE 3 --------------------------</source>
          <target state="translated">-------------------------- EXAMPLE 3 --------------------------</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>This command gets only event logs on the Server01 computer that contain events.</source>
          <target state="translated">이 명령은 이벤트가 있는 Server01 컴퓨터의 이벤트 로그만 가져옵니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Many logs might be empty.</source>
          <target state="translated">많은 로그가 비어 있을 수 있습니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>The command uses the <bpt id="p1">**</bpt>RecordCount<ept id="p1">**</ept> property of the <bpt id="p2">**</bpt>EventLogConfiguration<ept id="p2">**</ept> object that <bpt id="p3">**</bpt>Get-WinEvent<ept id="p3">**</ept> returns when you use the <bpt id="p4">**</bpt>ListLog<ept id="p4">**</ept> parameter.</source>
          <target state="translated">명령을 사용 하 여는 <bpt id="p1">**</bpt>RecordCount<ept id="p1">**</ept> 의 속성은 <bpt id="p2">**</bpt>EventLogConfiguration<ept id="p2">**</ept> 개체를 <bpt id="p3">**</bpt>Get-winevent<ept id="p3">**</ept> 사용 하는 경우 반환는 <bpt id="p4">**</bpt>ListLog<ept id="p4">**</ept> 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>-------------------------- EXAMPLE 4 --------------------------</source>
          <target state="translated">-------------------------- EXAMPLE 4 --------------------------</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>The commands in this example get objects that represent the Windows PowerShell event logs on the Server01, Server02, and Server03 computers.</source>
          <target state="translated">이 예의 명령은 Server01, Server02 및 Server03 컴퓨터의 Windows PowerShell 이벤트 로그를 나타내는 개체를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>This command uses the <bpt id="p1">**</bpt>Foreach<ept id="p1">**</ept> keyword because the <bpt id="p2">**</bpt>ComputerName<ept id="p2">**</ept> parameter takes only one value.</source>
          <target state="translated">이 명령을 사용 하는 <bpt id="p1">**</bpt>Foreach<ept id="p1">**</ept> 키워드 때문에 <bpt id="p2">**</bpt>ComputerName<ept id="p2">**</ept> 매개 변수 값을 하나만 사용 합니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>The first command saves the names of the computers in the $s variable.</source>
          <target state="translated">첫 번째 명령은 컴퓨터의 이름을 $s 변수에 저장합니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>The second command uses a <bpt id="p1">**</bpt>Foreach<ept id="p1">**</ept> statement.</source>
          <target state="translated">두 번째 명령은 <bpt id="p1">**</bpt>Foreach<ept id="p1">**</ept> 문입니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>For each of the computers in the $s variable, it performs the command in the script block (within the braces).</source>
          <target state="translated">이 명령은 $s 변수에 있는 각 컴퓨터에 대해 스크립트 블록(중괄호 안)에 있는 명령을 수행합니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>First, the command prints the name of the computer.</source>
          <target state="translated">이 명령은 먼저 컴퓨터의 이름을 출력한 다음</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Then, it runs a <bpt id="p1">**</bpt>Get-WinEvent<ept id="p1">**</ept> command to get an object that represents the Windows PowerShell log.</source>
          <target state="translated">그런 다음 실행 되는 <bpt id="p1">**</bpt>Get-winevent<ept id="p1">**</ept> 명령을 Windows PowerShell 로그를 나타내는 개체를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>-------------------------- EXAMPLE 5 --------------------------</source>
          <target state="translated">-------------------------- EXAMPLE 5 --------------------------</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>This command gets the event log providers on the local computer and the logs to which they write, if any.</source>
          <target state="translated">이 명령은 로컬 컴퓨터의 이벤트 로그 공급자와 이러한 공급자가 기록하는 로그(있을 경우)를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>-------------------------- EXAMPLE 6 --------------------------</source>
          <target state="translated">-------------------------- EXAMPLE 6 --------------------------</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>This command gets all of the providers that write to the Application log on the local computer.</source>
          <target state="translated">이 명령은 로컬 컴퓨터의 응용 프로그램 로그에 기록하는 모든 공급자를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>-------------------------- EXAMPLE 7 --------------------------</source>
          <target state="translated">-------------------------- EXAMPLE 7 --------------------------</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>This command gets the event log providers whose names include the word "policy."</source>
          <target state="translated">이 명령은 이름에 "policy"라는 단어가 포함된 이벤트 로그 공급자를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>-------------------------- EXAMPLE 8 --------------------------</source>
          <target state="translated">-------------------------- EXAMPLE 8 --------------------------</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>This command lists the event IDs that the Microsoft-Windows-GroupPolicy event provider generates along with the event description.</source>
          <target state="translated">이 명령은 Microsoft-Windows-GroupPolicy 이벤트 공급자가 생성하는 이벤트 ID를 해당 이벤트 설명과 함께 나열합니다.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>It uses the <bpt id="p1">**</bpt>Events<ept id="p1">**</ept> property of the object that <bpt id="p2">**</bpt>Get-WinEvent<ept id="p2">**</ept> returns when you use the <bpt id="p3">**</bpt>ListProvider<ept id="p3">**</ept> parameter, and it uses the <bpt id="p4">**</bpt>ID<ept id="p4">**</ept> and <bpt id="p5">**</bpt>Description<ept id="p5">**</ept> properties of the object in the <bpt id="p6">**</bpt>Events<ept id="p6">**</ept> property.</source>
          <target state="translated">사용 하 여는 <bpt id="p1">**</bpt>이벤트<ept id="p1">**</ept> 개체의 속성입니다 <bpt id="p2">**</bpt>Get-winevent<ept id="p2">**</ept> 사용 하는 경우 반환는 <bpt id="p3">**</bpt>ListProvider<ept id="p3">**</ept> 매개 변수를 사용 하 여는 <bpt id="p4">**</bpt>ID<ept id="p4">**</ept> 및 <bpt id="p5">**</bpt>설명<ept id="p5">**</ept> 에서 개체의 속성은 <bpt id="p6">**</bpt>이벤트<ept id="p6">**</ept> 속성.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>-------------------------- EXAMPLE 9 --------------------------</source>
          <target state="translated">-------------------------- EXAMPLE 9 --------------------------</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>This example shows how to use the properties of the event objects that <bpt id="p1">**</bpt>Get-WinEvent<ept id="p1">**</ept> returns to learn about the events in an event log.</source>
          <target state="translated">이 예제에서는 이벤트의 속성을 사용 하는 방법을 개체 <bpt id="p1">**</bpt>Get-winevent<ept id="p1">**</ept> 이벤트 로그의 이벤트에 대해 자세히 알아보려면 반환 합니다.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>-------------------------- EXAMPLE 10 --------------------------</source>
          <target state="translated">-------------------------- EXAMPLE 10 --------------------------</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>This command gets the error events whose names include "disk" from all of the event logs on the computer and from the Microsoft-Windows-Kernel-WHEA event log.</source>
          <target state="translated">이 명령은 컴퓨터의 모든 이벤트 로그와 Microsoft-Windows-Kernel-WHEA 이벤트 로그에서 이름에 "disk"가 포함된 오류 이벤트를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>-------------------------- EXAMPLE 11 --------------------------</source>
          <target state="translated">-------------------------- EXAMPLE 11 --------------------------</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>This command gets events from a copy of the Windows PowerShell event log file in a test directory.</source>
          <target state="translated">이 명령은 테스트 디렉터리에 있는 Windows PowerShell 이벤트 로그 파일의 복사본에서 이벤트를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>The path is enclosed in quotation marks because the log name includes a space.</source>
          <target state="translated">로그 이름은 공백을 포함하므로 경로가 따옴표로 묶입니다.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>-------------------------- EXAMPLE 12 --------------------------</source>
          <target state="translated">-------------------------- EXAMPLE 12 --------------------------</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>These commands get the first 100 events from an Event Tracing for Windows (ETW) event trace log file.</source>
          <target state="translated">이 명령은 ETW(Windows용 이벤트 추적) 이벤트 추적 로그 파일에서 처음 100개의 이벤트를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>-------------------------- EXAMPLE 13 --------------------------</source>
          <target state="translated">-------------------------- EXAMPLE 13 --------------------------</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>This example shows how to get the events from an event trace log file (.etl) and from a copy of the Windows PowerShell log file (.evtx) that was saved to a test directory.</source>
          <target state="translated">이 예제에서는 테스트 디렉터리에 저장된 Windows PowerShell 로그 파일(.evtx) 복사본과 이벤트 추적 로그 파일(.etl)에서 이벤트를 가져오는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>You can combine multiple file types in a single command.</source>
          <target state="translated">단일 명령으로 여러 파일 유형을 결합할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>Because the files contain the same type of .NET Framework object (an EventLogRecord object), you can use the same properties to filter them.</source>
          <target state="translated">해당 파일에는 동일한 유형의 .NET Framework 개체(EventLogRecord 개체)가 포함되어 있으므로 동일한 속성을 사용하여 필터링 작업을 수행할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>The command requires the <bpt id="p1">**</bpt>Oldest<ept id="p1">**</ept> parameter because it is reading from an .etl file, but the <bpt id="p2">**</bpt>Oldest<ept id="p2">**</ept> parameter applies to both of the files.</source>
          <target state="translated">이 명령을 실행 하려면는 <bpt id="p1">**</bpt>Oldest<ept id="p1">**</ept> 매개 변수는.etl 파일에서 읽거나 때문에 하지만 <bpt id="p2">**</bpt>Oldest<ept id="p2">**</ept> 매개 변수 파일을 모두에 적용 됩니다.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>-------------------------- EXAMPLE 14 --------------------------</source>
          <target state="translated">-------------------------- EXAMPLE 14 --------------------------</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>This example shows different filtering methods for selecting events from an event log.</source>
          <target state="translated">이 예제에서는 이벤트 로그에서 이벤트를 선택하기 위한 다양한 필터링 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>All of these commands get events that occurred in the last 24 hours from the Windows PowerShell event log.</source>
          <target state="translated">이 명령은 Windows PowerShell 이벤트 로그에서 지난 24시간 동안 발생한 이벤트를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>The filter methods are more efficient than using the Where-Object cmdlet because the filters are applied while the objects are being retrieved, rather than retrieving all the objects and then filtering them.</source>
          <target state="translated">모든 개체가 검색된 다음 개체가 필터링되는 것이 아니라 개체가 검색되는 동안 필터가 적용되므로 Where-Object cmdlet을 사용하는 것보다 필터링 방법을 사용하는 것이 더 효율적입니다.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>Because dates are difficult to formulate in the XML and XPath formats, to create the XML content for the date, the Filter Current Log feature of Event Viewer is used.</source>
          <target state="translated">날짜는 XML 및 XPath 형식으로 작성하기 어려우므로 날짜에 대한 XML 콘텐츠를 만들기 위해 이벤트 뷰어의 현재 로그 필터링 기능이 사용됩니다.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>For more information about this feature, see Event Viewer Help.</source>
          <target state="translated">이 기능에 대한 자세한 내용은 이벤트 뷰어 도움말을 참조하세요.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>-------------------------- EXAMPLE 15 --------------------------</source>
          <target state="translated">-------------------------- EXAMPLE 15 --------------------------</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>This example uses a filter hash table to get events from the performance log.</source>
          <target state="translated">이 예제에서는 필터 해시 테이블을 사용하여 성능 로그에서 이벤트를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>The first command uses the Get-Date cmdlet and the <bpt id="p1">**</bpt>AddDays<ept id="p1">**</ept> method to get a date that is two days before the current date.</source>
          <target state="translated">첫 번째 명령은 Get-date cmdlet을 사용 하 고 <bpt id="p1">**</bpt>AddDays<ept id="p1">**</ept> 메서드는 현재 날짜 보다 이전 2 일이 되는 날짜를 합니다.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>It saves the date in the $date variable.</source>
          <target state="translated">$date 변수에 저장합니다.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>The second command uses the <bpt id="p1">**</bpt>Get-WinEvent<ept id="p1">**</ept> cmdlet with the <bpt id="p2">**</bpt>FilterHashTable<ept id="p2">**</ept> parameter.</source>
          <target state="translated">두 번째 명령은 <bpt id="p1">**</bpt>Get-winevent<ept id="p1">**</ept> 사용 하 여 cmdlet는 <bpt id="p2">**</bpt>FilterHashTable<ept id="p2">**</ept> 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>The keys in the hash table define a filter that selects events from the performance log that occurred within the last two days and that have event ID 100.</source>
          <target state="translated">해시 테이블의 키는 성능 로그에서 지난 이틀 동안 발생했으며 이벤트 ID가 100인 이벤트를 선택하는 필터를 정의합니다.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>LogName<ept id="p1">**</ept> key specifies the event log, the <bpt id="p2">**</bpt>StartTime<ept id="p2">**</ept> key specifies the date, and the ID key specifies the event ID.</source>
          <target state="translated"> <bpt id="p1">**</bpt>LogName<ept id="p1">**</ept> 키는 이벤트 로그에 지정 된 <bpt id="p2">**</bpt>StartTime<ept id="p2">**</ept> 키는 날짜를 지정 하 고 고 ID 키는 이벤트 ID를 지정 합니다.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>-------------------------- EXAMPLE 16 --------------------------</source>
          <target state="translated">-------------------------- EXAMPLE 16 --------------------------</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>This example uses a filter hash table to find Internet Explorer application errors that occurred within the last week.</source>
          <target state="translated">이 예제에서는 필터 해시 테이블을 사용하여 지난주에 발생한 Internet Explorer 응용 프로그램 오류를 찾습니다.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>The first command gets the date that is seven days before the current date and stores it in the $StartTime variable.</source>
          <target state="translated">첫 번째 명령은 현재 날짜의 7일 전 날짜를 가져와 $starttime 변수에 저장합니다.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>The second command uses the <bpt id="p1">**</bpt>Get-WinEvent<ept id="p1">**</ept> cmdlet with the <bpt id="p2">**</bpt>FilterHashTable<ept id="p2">**</ept> parameter.</source>
          <target state="translated">두 번째 명령은 <bpt id="p1">**</bpt>Get-winevent<ept id="p1">**</ept> 사용 하 여 cmdlet는 <bpt id="p2">**</bpt>FilterHashTable<ept id="p2">**</ept> 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>The keys in the hash table define a filter that selects events from the Application log that were written by the Application Error provider and include the phrase "iexplore.exe".</source>
          <target state="translated">해시 테이블의 키는 응용 프로그램 로그에서 응용 프로그램 오류 공급자에 의해 기록되었으며 "iexplore.exe"라는 구를 포함한 이벤트를 선택하는 필터를 정의합니다.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>LogName<ept id="p1">**</ept> key specifies the event log.</source>
          <target state="translated"> <bpt id="p1">**</bpt>LogName<ept id="p1">**</ept> 키 이벤트 로그를 지정 합니다.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>ProviderName<ept id="p1">**</ept> key specifies the event provider, the <bpt id="p2">**</bpt>StartTime<ept id="p2">**</ept> key specifies the starting date of the events, and the <bpt id="p3">**</bpt>Data<ept id="p3">**</ept> key specifies the text in the event message.</source>
          <target state="translated"> <bpt id="p1">**</bpt>ProviderName<ept id="p1">**</ept> 이벤트 공급자를 지정 하는 키의 <bpt id="p2">**</bpt>StartTime<ept id="p2">**</ept> 이벤트의 시작 날짜를 지정 하는 키 및 <bpt id="p3">**</bpt>데이터<ept id="p3">**</ept> 키는 이벤트 메시지의 텍스트를 지정 합니다.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>PARAMETERS</source>
          <target state="translated">매개 변수</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>-ComputerName</source>
          <target state="translated">-ComputerName</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>Gets events from the event logs on the specified computer.</source>
          <target state="translated">지정된 컴퓨터의 이벤트 로그에서 이벤트를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>Type the NetBIOS name, an Internet Protocol (IP) address, or the fully qualified domain name of the computer.</source>
          <target state="translated">컴퓨터의 NetBIOS 이름, IP(인터넷 프로토콜) 주소 또는 정규화된 도메인 이름을 입력하세요.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>The default value is the local computer.</source>
          <target state="translated">기본값은 로컬 컴퓨터입니다.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>This parameter accepts only one computer name at a time.</source>
          <target state="translated">이 매개 변수는 한 번에 하나의 컴퓨터 이름만 받습니다.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>To find event logs or events on multiple computers, use a <bpt id="p1">**</bpt>ForEach<ept id="p1">**</ept> statement.</source>
          <target state="translated">여러 컴퓨터에서 이벤트 로그 또는 이벤트를 찾으려면는 <bpt id="p1">**</bpt>ForEach<ept id="p1">**</ept> 문입니다.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>For more information about this parameter, see the examples.</source>
          <target state="translated">이 매개 변수에 대한 자세한 내용은 예제를 참조하세요.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>To get events and event logs from remote computers, the firewall port for the event log service must be configured to allow remote access.</source>
          <target state="translated">원격 컴퓨터에서 이벤트 및 이벤트 로그를 가져오려면 원격 액세스를 허용하도록 이벤트 로그 서비스에 대한 방화벽 포트를 구성해야 합니다.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>This cmdlet does not rely on Windows PowerShell remoting.</source>
          <target state="translated">이 cmdlet은 Windows PowerShell 원격을 사용하지 않습니다.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>You can use the <bpt id="p1">**</bpt>ComputerName<ept id="p1">**</ept> parameter even if your computer is not configured to run remote commands.</source>
          <target state="translated">사용할 수는 <bpt id="p1">**</bpt>ComputerName<ept id="p1">**</ept> 원격 명령을 실행 하도록 컴퓨터를 구성 하지 않은 경우에 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>-Credential</source>
          <target state="translated">-Credential</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>Specifies a user account that has permission to perform this action.</source>
          <target state="translated">이 작업을 수행할 권한이 있는 사용자 계정을 지정합니다.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>The default value is the current user.</source>
          <target state="translated">기본값은 현재 사용자입니다.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>Type a user name, such as User01 or Domain01\User01.</source>
          <target state="translated">User01 또는 Domain01\User01과 같은 사용자 이름을</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>Or, enter a <bpt id="p1">**</bpt>PSCredential<ept id="p1">**</ept> object, such as one generated by the Get-Credential cmdlet.</source>
          <target state="translated">또는 입력 한 <bpt id="p1">**</bpt>PSCredential<ept id="p1">**</ept> Get-credential cmdlet에서 생성 된 것과 같은 개체입니다.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>If you type a user name, you will be prompted for a password.</source>
          <target state="translated">사용자 이름을 입력하면 암호를 입력하라는 메시지가 표시됩니다.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>If you type only the parameter name, you will be prompted for both a user name and a password.</source>
          <target state="translated">매개 변수 이름만 입력하면 사용자 이름 및 암호를 둘 다 묻는 메시지가 표시됩니다.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>-FilterHashtable</source>
          <target state="translated">-FilterHashtable</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>Uses a query in hash table format to select events from one or more event logs.</source>
          <target state="translated">해시 테이블 형식의 쿼리를 사용하여 하나 이상의 이벤트 로그에서 이벤트를 선택합니다.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>The query contains a hash table with one or more key-value pairs.</source>
          <target state="translated">하나 이상의 키-값 쌍이 있는 해시 테이블이 쿼리에 포함됩니다.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>Hash table queries have the following rules:</source>
          <target state="translated">해시 테이블 쿼리의 규칙은 다음과 같습니다.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>Keys and values are case-insensitive.</source>
          <target state="translated">키와 값은 대 소문자를 구분 합니다.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>Wildcard characters are valid only in the values associated with the LogName and ProviderName keys.</source>
          <target state="translated">와일드 카드 문자는 LogName 및 ProviderName 키와 연결 된 값에만 유효 합니다.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>Each key can be listed only once in each hash-table.</source>
          <target state="translated">각 키는 각 해시 테이블에서 한 번만 나열할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>The Path value takes paths to .etl, .evt, and .evtx log files.</source>
          <target state="translated">경로 값은.etl,.evt 및.evtx 로그 파일에 경로 사용 합니다.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>The LogName, Path, and ProviderName keys can be used in the same query.</source>
          <target state="translated">LogName, Path 및 ProviderName 키를 같은 쿼리에서 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>The UserID key can take a valid security identifier (SID) or a domain account name that can be used to construct a valid System.Security.Principal.NTAccount object.</source>
          <target state="translated">UserID 키는 유효한 System.Security.Principal.NTAccount 개체를 생성 하는 데 사용할 수 있는 도메인 계정 이름 또는 올바른 보안 식별자 (SID) 걸릴 수 있습니다.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>The Data value takes event data in an unnamed field.</source>
          <target state="translated">데이터 값은 이름 없는 필드에서 이벤트 데이터를 사용 합니다.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>This is for events in classic event logs.</source>
          <target state="translated">기본 이벤트 로그의 이벤트용입니다.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>The * key represents a named event data field.</source>
          <target state="translated">* 키는 명명 된 이벤트 데이터 필드를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>When Get-WinEvent cannot interpret a key-value pair, it interprets the key as a case-sensitive name for the event data in the event.</source>
          <target state="translated">Get-WinEvent는 키-값 쌍을 해석할 수 없는 경우 이벤트의 이벤트 데이터에 대한 대/소문자를 구분하는 이름으로 키를 해석합니다.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>The valid key-value pairs are as follows:</source>
          <target state="translated">유효한 키-값 쌍은 다음과 같습니다.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>LogName=<ph id="ph1">\&lt;</ph>String</source>
          <target state="translated">LogName =<ph id="ph1">\&lt;</ph>문자열</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>ProviderName=<ph id="ph1">\&lt;</ph>String</source>
          <target state="translated">ProviderName =<ph id="ph1">\&lt;</ph>문자열</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>Path=<ph id="ph1">\&lt;</ph>String</source>
          <target state="translated">경로 =<ph id="ph1">\&lt;</ph>문자열</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>Keywords=<ph id="ph1">\&lt;</ph>Long</source>
          <target state="translated">키워드 =<ph id="ph1">\&lt;</ph>긴</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>ID=<ph id="ph1">\&lt;</ph>Int32</source>
          <target state="translated">ID =<ph id="ph1">\&lt;</ph>Int32</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>Level=<ph id="ph1">\&lt;</ph>Int32</source>
          <target state="translated">Level =<ph id="ph1">\&lt;</ph>Int32</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>StartTime=<ph id="ph1">\&lt;</ph>DateTime</source>
          <target state="translated">StartTime =<ph id="ph1">\&lt;</ph>날짜/시간</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>EndTime=<ph id="ph1">\&lt;</ph>DataTime</source>
          <target state="translated">EndTime =<ph id="ph1">\&lt;</ph>날짜/시간</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>UserID=<ph id="ph1">\&lt;</ph>SID</source>
          <target state="translated">UserID =<ph id="ph1">\&lt;</ph>SID</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>Data=<ph id="ph1">\&lt;</ph>String</source>
          <target state="translated">데이터 =<ph id="ph1">\&lt;</ph>문자열</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>String</source>
          <target state="translated">문자열</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>-FilterXPath</source>
          <target state="translated">-FilterXPath</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>Uses an XPath query to select events from one or more logs.</source>
          <target state="translated">XPath 쿼리를 사용하여 하나 이상의 로그에서 이벤트를 선택합니다.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>For more information about the XPath language, see "XPath Reference" in the MSDN library at http://go.microsoft.com/fwlink/?LinkId=242509http://go.microsoft.com/fwlink/?LinkId=242509 and "Selection Filters" in "Event Selection" in the MSDN library at http://go.microsoft.com/fwlink/?LinkId=242510http://go.microsoft.com/fwlink/?LinkId=242510.</source>
          <target state="translated">XPath 언어에 대 한 자세한 내용은 MSDN library http://go.microsoft.com/fwlink/?LinkId=242509http://go.microsoft.com/fwlink/?LinkId=242509에서 "XPath 참조" 및 http://go.microsoft.com/fwlink/?LinkId=242510http MSDN library에서 "이벤트 선택"에서 "선택 필터"를 참조 하십시오.: / / go.microsoft.com/fwlink/?LinkId=242510 합니다.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>-FilterXml</source>
          <target state="translated">-FilterXml</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>Uses a structured XML query to select events from one or more event logs.</source>
          <target state="translated">구조화된 XML 쿼리를 사용하여 하나 이상의 이벤트 로그에서 이벤트를 선택합니다.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>To generate a valid XML query, use the <bpt id="p1">**</bpt>Create Custom View<ept id="p1">**</ept> and <bpt id="p2">**</bpt>Filter Current Log<ept id="p2">**</ept> features in Event Viewer.</source>
          <target state="translated">유효한 XML 쿼리를 생성 하려면 사용는 <bpt id="p1">**</bpt>Create Custom View<ept id="p1">**</ept> 및 <bpt id="p2">**</bpt>현재 로그 필터링<ept id="p2">**</ept> 이벤트 뷰어의 기능입니다.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>Use the items in the dialog box to create a query, and then click the XML tab to view the query in XML format.</source>
          <target state="translated">대화 상자의 항목을 사용하여 쿼리를 만든 다음 XML 탭을 클릭하여 XML 형식으로 쿼리를 봅니다.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>You can copy the XML from the XML tab into the value of the <bpt id="p1">**</bpt>FilterXml<ept id="p1">**</ept> parameter.</source>
          <target state="translated">값으로 XML 탭에서 XML을 복사할 수는 <bpt id="p1">**</bpt>FilterXml<ept id="p1">**</ept> 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>For more information about the Event Viewer features, see Event Viewer Help.</source>
          <target state="translated">이벤트 뷰어 기능에 대한 자세한 내용은 이벤트 뷰어 도움말을 참조하세요.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>Typically, you use an XML query to create a complex query that contains several XPath statements.</source>
          <target state="translated">일반적으로 XML 쿼리를 사용하여 여러 XPath 문을 포함하는 복잡한 쿼리를 만듭니다.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source>The XML format also allows you to use a "Suppress" XML element that excludes events from the query.</source>
          <target state="translated">또한 XML 형식을 사용하면 쿼리에서 이벤트를 제외하는 "Suppress" XML 요소를 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source>For more information about the XML schema for event log queries, see the following topics in the MSDN (Microsoft Developer Network) library.</source>
          <target state="translated">이벤트 로그 쿼리의 XML 스키마에 대한 자세한 내용은 MSDN(Microsoft Developer Network) 라이브러리의 다음 항목을 참조하세요.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source>"Query Schema": http://go.microsoft.com/fwlink/?LinkId=143685</source>
          <target state="translated">"쿼리 스키마": http://go.microsoft.com/fwlink/?LinkId=143685</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source>"XML Event Queries" in "Event Selection": http://go.microsoft.com/fwlink/?LinkID=143608</source>
          <target state="translated">"이벤트 선택"에서 "XML 이벤트 쿼리": http://go.microsoft.com/fwlink/?LinkID=143608</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source>-Force</source>
          <target state="translated">-Force</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source>Gets debug and analytic logs, in addition to other event logs.</source>
          <target state="translated">다른 이벤트 로그와 함께 디버그 및 분석 로그를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>Force<ept id="p1">**</ept> parameter is required to get a debug or analytic log when the value of the name parameter includes wildcard characters.</source>
          <target state="translated"> <bpt id="p1">**</bpt>Force<ept id="p1">**</ept> name 매개 변수 값에 와일드 카드 문자가 포함 하는 경우 디버그 또는 분석 로그를 가져올 수 매개 변수가 필요 합니다.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source>By default, Get-WinEvent excludes these logs unless you specify the full name of a debug or analytic log.</source>
          <target state="translated">기본적으로 Get-WinEvent에서는 디버그 또는 분석 로그의 전체 이름이 지정되지 않는 한 이러한 로그를 제외합니다.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source>-ListLog</source>
          <target state="translated">-ListLog</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source>Gets the specified event logs.</source>
          <target state="translated">지정된 이벤트 로그를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve">
          <source>Enter the event log names in a comma-separated list.</source>
          <target state="translated">이벤트 로그 이름을 쉼표로 구분된 목록으로 입력합니다.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve">
          <source>Wildcards are permitted.</source>
          <target state="translated">와일드카드가 지원됩니다.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve">
          <source>To get all the logs, enter a value of *.</source>
          <target state="translated">모든 로그를 가져오려면 * 값을 입력합니다.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve">
          <source>-ListProvider</source>
          <target state="translated">-ListProvider</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve">
          <source>Gets the specified event log providers.</source>
          <target state="translated">지정된 이벤트 로그 공급자를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve">
          <source>An event log provider is a program or service that writes events to the event log.</source>
          <target state="translated">이벤트 로그 공급자는 이벤트 로그에 이벤트를 기록하는 프로그램 또는 서비스이며</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve">
          <source>Enter the provider names in a comma-separated list.</source>
          <target state="translated">공급자 이름을 쉼표로 구분된 목록으로 입력합니다.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve">
          <source>Wildcards are permitted.</source>
          <target state="translated">와일드카드가 지원됩니다.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve">
          <source>To get the providers of all the event logs on the computer, enter a value of *.</source>
          <target state="translated">컴퓨터에 있는 모든 이벤트 로그의 공급자를 가져오려면 * 값을 입력합니다.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve">
          <source>-LogName</source>
          <target state="translated">-LogName</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve">
          <source>Gets events from the specified event logs.</source>
          <target state="translated">지정된 이벤트 로그에서 이벤트를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve">
          <source>Enter the event log names in a comma-separated list.</source>
          <target state="translated">이벤트 로그 이름을 쉼표로 구분된 목록으로 입력합니다.</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve">
          <source>Wildcards are permitted.</source>
          <target state="translated">와일드카드가 지원됩니다.</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve">
          <source>You can also pipe log names to Get-WinEvent.</source>
          <target state="translated">또한 로그 이름을 Get-WinEvent로 파이프할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve">
          <source>-MaxEvents</source>
          <target state="translated">-MaxEvents</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve">
          <source>Specifies the maximum number of events that Get-WinEvent returns.</source>
          <target state="translated">Get-WinEvent가 반환하는 최대 이벤트 수를 지정합니다.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve">
          <source>Enter an integer.</source>
          <target state="translated">정수를 입력하세요.</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve">
          <source>The default is to return all the events in the logs or files.</source>
          <target state="translated">기본값은 로그 또는 파일의 모든 이벤트를 반환하는 것입니다.</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve">
          <source>-Oldest</source>
          <target state="translated">-오래 된</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve">
          <source>Returns the events in oldest-first order.</source>
          <target state="translated">오래된 것 먼저 순서로 이벤트를 반환합니다.</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve">
          <source>By default, events are returned in newest-first order.</source>
          <target state="translated">기본적으로 이벤트는 최신 것 먼저 순서로 반환됩니다.</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve">
          <source>This parameter is required to get events from .etl and .evt files and from debug and analytic logs.</source>
          <target state="translated">이 매개 변수는 .etl 및 .evt 파일, 그리고 디버그 및 분석 로그에서 이벤트를 가져올 때 필요합니다.</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve">
          <source>In these files, events are recorded in oldest-first order, and the events can be returned only in oldest-first order.</source>
          <target state="translated">이 파일에서 이벤트는 오래된 것 먼저 순서로 기록되며 오래된 것 먼저 순서로만 반환될 수 있습니다.</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve">
          <source>-Path</source>
          <target state="translated">-Path</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve">
          <source>Gets events from the specified event log files.</source>
          <target state="translated">지정된 이벤트 로그 파일에서 이벤트를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve">
          <source>Enter the paths to the log files in a comma-separated list, or use wildcard characters to create file path patterns.</source>
          <target state="translated">로그 파일의 경로를 쉼표로 구분된 목록으로 입력하거나 와일드카드 문자를 사용하여 파일 경로 패턴을 만듭니다.</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Get-WinEvent<ept id="p1">**</ept> supports files with the .evt, .evtx, and .etl file name extensions.</source>
          <target state="translated"><bpt id="p1">**</bpt>Get-winevent<ept id="p1">**</ept> .evt,.evtx 및.etl 파일 이름 확장명을 사용 하 여 파일을 지원 합니다.</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve">
          <source>You can include events from different files and file types in the same command.</source>
          <target state="translated">다양한 파일 및 파일 형식의 이벤트를 동일한 명령에 포함할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve">
          <source>-ProviderName</source>
          <target state="translated">-공급자 이름</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve">
          <source>Gets events written by the specified event log providers.</source>
          <target state="translated">지정된 이벤트 로그 공급자에 의해 기록된 이벤트를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve">
          <source>Enter the provider names in a comma-separated list, or use wildcard characters to create provider name patterns.</source>
          <target state="translated">공급자 이름을 쉼표로 구분된 목록으로 입력하거나 와일드카드 문자를 사용하여 공급자 이름 패턴을 만듭니다.</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve">
          <source>An event log provider is a program or service that writes events to the event log.</source>
          <target state="translated">이벤트 로그 공급자는 이벤트 로그에 이벤트를 기록하는 프로그램 또는 서비스이며</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve">
          <source>It is not a Windows PowerShell provider.</source>
          <target state="translated">Windows PowerShell 공급자가 아닙니다.</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve">
          <source>CommonParameters</source>
          <target state="translated">CommonParameters</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve">
          <source>This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutVariable, -OutBuffer, -PipelineVariable, -Verbose, -WarningAction, and -WarningVariable.</source>
          <target state="translated">이 cmdlet은 공통 매개 변수:-디버그,-ErrorAction,-ErrorVariable,-InformationAction,-InformationVariable,-OutVariable,-OutBuffer,-PipelineVariable,-Verbose,-WarningAction 및-warningvariable을 지원 합니다.</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve">
          <source>For more information, see about_CommonParameters (http://go.microsoft.com/fwlink/?LinkID=113216).</source>
          <target state="translated">자세한 내용은 about_CommonParameters (http://go.microsoft.com/fwlink/?LinkID=113216)를 참조 합니다.</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve">
          <source>INPUTS</source>
          <target state="translated">입력</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve">
          <source>System.String, System.Xml.XmlDocument, System.Collections.Hashtable.</source>
          <target state="translated">System.Collections.Hashtable System.Xml.XmlDocument, System.String입니다.</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve">
          <source>You can pipe a <bpt id="p1">**</bpt>LogName<ept id="p1">**</ept> (string), a <bpt id="p2">**</bpt>FilterXML<ept id="p2">**</ept> query, or a <bpt id="p3">**</bpt>FilterHashTable<ept id="p3">**</ept> query to <bpt id="p4">**</bpt>Get-WinEvent<ept id="p4">**</ept>.</source>
          <target state="translated">사용자는 <bpt id="p1">**</bpt>LogName<ept id="p1">**</ept> (string)는 <bpt id="p2">**</bpt>FilterXML<ept id="p2">**</ept> 쿼리를 또는 <bpt id="p3">**</bpt>FilterHashTable<ept id="p3">**</ept> 쿼리를 실행 <bpt id="p4">**</bpt>Get-winevent<ept id="p4">**</ept>.</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve">
          <source>OUTPUTS</source>
          <target state="translated">출력</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve">
          <source>System.Diagnostics.Eventing.Reader.EventLogConfiguration, System.Diagnostics.Eventing.Reader.EventLogRecord, System.Diagnostics.Eventing.Reader.ProviderMetadata</source>
          <target state="translated">System.Diagnostics.Eventing.Reader.EventLogConfiguration, System.Diagnostics.Eventing.Reader.EventLogRecord, System.Diagnostics.Eventing.Reader.ProviderMetadata</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve">
          <source>With the <bpt id="p1">**</bpt>ListLog<ept id="p1">**</ept> parameter, <bpt id="p2">**</bpt>Get-WinEvent<ept id="p2">**</ept> returns <bpt id="p3">**</bpt>System.Diagnostics.Eventing.Reader.EventLogConfiguration<ept id="p3">**</ept> objects.</source>
          <target state="translated">와 <bpt id="p1">**</bpt>ListLog<ept id="p1">**</ept> 매개 변수를 <bpt id="p2">**</bpt>Get-winevent<ept id="p2">**</ept> 반환 <bpt id="p3">**</bpt>System.Diagnostics.Eventing.Reader.EventLogConfiguration<ept id="p3">**</ept> 개체입니다.</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve">
          <source>With the <bpt id="p1">**</bpt>ListProvider<ept id="p1">**</ept> parameter, <bpt id="p2">**</bpt>Get-WinEvent<ept id="p2">**</ept> returns <bpt id="p3">**</bpt>System.Diagnostics.Eventing.Reader.ProviderMetadata<ept id="p3">**</ept> objects.</source>
          <target state="translated">와 <bpt id="p1">**</bpt>ListProvider<ept id="p1">**</ept> 매개 변수를 <bpt id="p2">**</bpt>Get-winevent<ept id="p2">**</ept> 반환 <bpt id="p3">**</bpt>System.Diagnostics.Eventing.Reader.ProviderMetadata<ept id="p3">**</ept> 개체입니다.</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve">
          <source>With all other parameters, <bpt id="p1">**</bpt>Get-WinEvent<ept id="p1">**</ept> returns <bpt id="p2">**</bpt>System.Diagnostics.Eventing.Reader.EventLogRecord<ept id="p2">**</ept> objects.</source>
          <target state="translated">다른 모든 매개 변수 <bpt id="p1">**</bpt>Get-winevent<ept id="p1">**</ept> 반환 <bpt id="p2">**</bpt>System.Diagnostics.Eventing.Reader.EventLogRecord<ept id="p2">**</ept> 개체입니다.</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve">
          <source>NOTES</source>
          <target state="translated">참고 사항</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Get-WinEvent<ept id="p1">**</ept> runs on Windows Vista, Windows Server 2008 R2, and later versions of Windows.</source>
          <target state="translated"><bpt id="p1">**</bpt>Get-winevent<ept id="p1">**</ept> Windows Vista, Windows Server 2008 R2 및 이후 버전의 Windows에서 실행 합니다.</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve">
          <source>Get-WinEvent is designed to replace the Get-EventLog cmdlet on computers running Windows Vista and later versions of Windows.</source>
          <target state="translated">Get-winevent는 Windows Vista 및 이후 버전의 Windows 실행 하는 컴퓨터에서 Get-eventlog cmdlet을 대체 하도록 설계 되었습니다.</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Get-EventLog<ept id="p1">**</ept> gets events only in classic event logs.</source>
          <target state="translated"><bpt id="p1">**</bpt>Get-eventlog<ept id="p1">**</ept> 클래식 이벤트 로그에만 이벤트를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Get-EventLog<ept id="p1">**</ept> is retained in Windows PowerShell for backward compatibility.</source>
          <target state="translated"><bpt id="p1">**</bpt>Get-eventlog<ept id="p1">**</ept> 이전 버전과 호환성을 위해 Windows PowerShell에 유지 됩니다.</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>Get-WinEvent<ept id="p1">**</ept> and  Get-EventLog cmdlets are not supported in Windows Preinstallation Environment (Windows PE).</source>
          <target state="translated"> <bpt id="p1">**</bpt>Get-winevent<ept id="p1">**</ept> Get-eventlog cmdlet Windows 사전 설치 환경 (Windows PE)에서 지원 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve">
          <source>RELATED LINKS</source>
          <target state="translated">관련된 링크</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve">
          <source>Get-Counter</source>
          <target state="translated">Get-counter</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve">
          <source>Get-EventLog</source>
          <target state="translated">Get-EventLog</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve">
          <source>about_EventLogs</source>
          <target state="translated">about_Eventlogs</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>