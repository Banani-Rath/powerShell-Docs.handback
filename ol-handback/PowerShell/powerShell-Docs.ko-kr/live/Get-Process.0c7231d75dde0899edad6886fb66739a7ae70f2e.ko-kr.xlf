<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ko-kr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-1c394fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">e062f84a81ba24b207eb5f878f9ac02b6bcf3e71</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">reference\3.0\Microsoft.PowerShell.Management\Get-Process.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions" />
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f0df42081370ebef2e5820a38facb9d0eed00877</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">a2a27332ac6e30355d5295e7fc5e6726330dcbcb</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>powershell, cmdlet</source>
          <target state="translated">powershell cmdlet</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Get-Process</source>
          <target state="translated">Get-Process</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Get-Process</source>
          <target state="translated">Get-Process</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>SYNOPSIS</source>
          <target state="translated">요약</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Gets the processes that are running on the local computer or a remote computer.</source>
          <target state="translated">로컬 컴퓨터 또는 원격 컴퓨터에서 실행 중인 프로세스를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>SYNTAX</source>
          <target state="translated">구문</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Name (Default)</source>
          <target state="translated">이름 (기본값)</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Id</source>
          <target state="translated">Id</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>InputObject</source>
          <target state="translated">InputObject</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>DESCRIPTION</source>
          <target state="translated">설명</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>The Get-Process cmdlet gets the processes on a local or remote computer.</source>
          <target state="translated">Get-Process cmdlet은 로컬 또는 원격 컴퓨터의 프로세스를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Without parameters, Get-Process gets all of the processes on the local computer.</source>
          <target state="translated">매개 변수가 없을 경우 Get-Process는 로컬 컴퓨터의 모든 프로세스를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>You can also specify a particular process by process name or process ID (PID) or pass a process object through the pipeline to Get-Process.</source>
          <target state="translated">프로세스 이름 또는 PID(프로세스 ID)로 특정 프로세스를 지정하거나 파이프라인을 통해 프로세스 개체를 Get-Process로 전달할 수도 있습니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>By default, Get-Process returns a process object that has detailed information about the process and supports methods that let you start and stop the process.</source>
          <target state="translated">기본적으로 Get-Process는 프로세스에 대한 자세한 정보가 있고 프로세스를 시작 및 중지할 수 있는 메서드를 지원하는 프로세스 개체를 반환합니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>You can also use the parameters of Get-Process to get file version information for the program that runs in the process and to get the modules that the process loaded.</source>
          <target state="translated">Get-Process의 매개 변수를 사용하여 프로세스에서 실행되는 프로그램에 대한 파일 버전 정보를 가져오고 프로세스에서 로드된 모듈을 가져올 수도 있습니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>EXAMPLES</source>
          <target state="translated">예제</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>-------------------------- EXAMPLE 1 --------------------------</source>
          <target state="translated">-------------------------- 예제 1 --------------------------</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>This command gets a list of all of the running processes running on the local computer.</source>
          <target state="translated">이 명령은 로컬 컴퓨터에서 실행 중인 모든 프로세스 목록을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>For a definition of each column, see the "Additional Notes" section of the Help topic for Get-Help.</source>
          <target state="translated">각 열에 대한 정의는 Get-Help 도움말 항목의 "추가 참고" 섹션을 참조하세요.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>-------------------------- EXAMPLE 2 --------------------------</source>
          <target state="translated">-------------------------- EXAMPLE 2 --------------------------</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>This command gets all available data about the Winword and Explorer processes on the computer.</source>
          <target state="translated">이 명령은 컴퓨터의 Winword 및 Explorer 프로세스에 대해 사용 가능한 모든 데이터를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>It uses the Name parameter to specify the processes, but it omits the optional parameter name.</source>
          <target state="translated">Name 매개 변수를 사용하여 프로세스를 지정하지만 선택적 매개 변수 이름은 생략합니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>The pipeline operator (|) passes the data to the Format-List cmdlet, which displays all available properties (*) of the Winword and Explorer process objects.</source>
          <target state="translated">파이프라인 연산자(|)가 데이터를 Format-List cmdlet으로 전달하면 이 cmdlet이 Winword 및 Explorer 프로세스 개체의 사용 가능한 모든 속성(*)을 표시합니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>You can also identify the processes by their process IDs.</source>
          <target state="translated">프로세스 ID로 프로세스를 식별할 수도 있습니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>For example, "get-process -id 664, 2060".</source>
          <target state="translated">예를 들어 "get-process -id 664, 2060"과 같습니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>-------------------------- EXAMPLE 3 --------------------------</source>
          <target state="translated">-------------------------- EXAMPLE 3 --------------------------</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>This command gets all processes that have a working set greater than 20 MB.</source>
          <target state="translated">이 명령은 작업 집합이 20MB보다 큰 프로세스를 모두 가져옵니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>It uses the Get-Process cmdlet to get all running processes.</source>
          <target state="translated">Get-Process cmdlet을 사용하여 실행 중인 모든 프로세스를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>The pipeline operator (|) passes the process objects to the Where-Object cmdlet, which selects only the object with a value greater than 20,000,000 bytes for the WorkingSet property.</source>
          <target state="translated">파이프라인 연산자(|)가 프로세스 개체를 Where-Object cmdlet으로 전달하면 이 cmdlet에서 WorkingSet 속성 값이 20,000,000바이트보다 큰 개체만 선택합니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>WorkingSet is one of many properties of process objects.</source>
          <target state="translated">WorkingSet는 프로세스 개체의 많은 속성 중 하나입니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>To see all of the properties, type "Get-Process | Get-Member".</source>
          <target state="translated">모든 속성을 보려면 "Get-Process | Get-Member"를 입력합니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>By default, the values of all amount properties are in bytes, even though the default display lists them in kilobytes and megabytes.</source>
          <target state="translated">모든 수량 속성 값은 기본 표시에 킬로바이트 및 메가바이트 단위로 나열되더라도 기본적으로 바이트 단위입니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>-------------------------- EXAMPLE 4 --------------------------</source>
          <target state="translated">-------------------------- EXAMPLE 4 --------------------------</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>These  commands list the processes on the computer in groups based on their priority class.</source>
          <target state="translated">이 명령은 우선 순위 클래스에 따라 컴퓨터의 프로세스를 그룹으로 나열합니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>The first command gets all the processes on the computer and then stores them in the $a variable.</source>
          <target state="translated">첫 번째 명령은 컴퓨터의 모든 프로세스를 가져온 다음 $a 변수에 저장합니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>The second command uses the InputObject parameter to pass the process objects that are stored in the $a variable to the Get-Process cmdlet.</source>
          <target state="translated">두 번째 명령은 InputObject 매개 변수를 사용하여 $a 변수에 저장된 프로세스 개체를 Get-Process cmdlet으로 전달합니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>The pipeline operator passes the objects to the Format-Table cmdlet, which formats the processes by using the Priority view.</source>
          <target state="translated">파이프라인 연산자가 개체를 Format-Table cmdlet으로 전달하면 이 cmdlet이 우선 순위 보기를 사용하여 프로세스 형식을 지정합니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>The Priority view, and other views, are defined in the PS1XML format files in the Windows PowerShell home directory ($pshome).</source>
          <target state="translated">우선 순위 보기 및 다른 보기는 Windows PowerShell 홈 디렉터리($pshome)의 PS1XML 형식 파일에 정의되어 있습니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>-------------------------- EXAMPLE 5 --------------------------</source>
          <target state="translated">-------------------------- EXAMPLE 5 --------------------------</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>This example provides a Format-Table (alias = ft) command that adds the MachineName property to the standard Get-Process output display.</source>
          <target state="translated">이 예제에서는 표준 Get-Process 출력 표시에 MachineName 속성을 추가하는 Format-Table(별칭 = ft) 명령을 제공합니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>-------------------------- EXAMPLE 6 --------------------------</source>
          <target state="translated">-------------------------- EXAMPLE 6 --------------------------</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>This command uses the FileVersionInfo parameter to get the version information for the PowerShell.exe file that is the main module for the PowerShell process.</source>
          <target state="translated">이 명령은 FileVersionInfo 매개 변수를 사용하여 PowerShell 프로세스의 주 모듈인 PowerShell.exe 파일에 대한 버전 정보를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>To run this command with processes that you do not own on Windows Vista and later versions of Windows, you must open Windows PowerShell with the "Run as administrator" option.</source>
          <target state="translated">Windows Vista 이상에서 소유하지 않은 프로세스에 대해 이 명령을 실행하려면 "관리자 권한으로 실행" 옵션을 사용하여 Windows PowerShell을 열어야 합니다.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>-------------------------- EXAMPLE 7 --------------------------</source>
          <target state="translated">-------------------------- EXAMPLE 7 --------------------------</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>This command uses the Module parameter to get the modules that have been loaded by the process.</source>
          <target state="translated">이 명령은 Module 매개 변수를 사용하여 프로세스에서 로드된 모듈을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>This command gets the modules for the processes that have names that begin with "sql".</source>
          <target state="translated">이름이 "sql"로 시작하는 프로세스에 대한 모듈을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>To run this command on Windows Vista (and later versions of Windows) with processes that you do not own, you must start Windows PowerShell with the "Run as administrator" option.</source>
          <target state="translated">Windows Vista 이상에서 소유하지 않은 프로세스에 대해 이 명령을 실행하려면 "관리자 권한으로 실행" 옵션을 사용하여 Windows PowerShell을 시작해야 합니다.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>-------------------------- EXAMPLE 8 --------------------------</source>
          <target state="translated">-------------------------- EXAMPLE 8 --------------------------</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>This command shows how to find the owner of a process.</source>
          <target state="translated">이 명령은 프로세스의 소유자를 찾는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Because the System.Diagnostics.Process object that Get-Process returns does not have a property or method that returns the process owner, the command uses</source>
          <target state="translated">Get-Process가 반환하는 System.Diagnostics.Process 개체에는 프로세스 소유자를 반환하는 속성이나 메서드가 없으므로 명령에서</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>the Get-WmiObject cmdlet to get a Win32_Process object that represents the same process.</source>
          <target state="translated">Get-WmiObject cmdlet을 사용하여 동일한 프로세스를 나타내는 Win32_Process 개체를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>The first command uses Get-WmiObject to get the PowerShell process.</source>
          <target state="translated">첫 번째 명령은 Get-WmiObject를 사용하여 PowerShell 프로세스를 가져온 다음</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>It saves it in the $p variable.</source>
          <target state="translated">$p 변수에 저장합니다.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>The second command uses the GetOwner method to get the owner of the process in $p.</source>
          <target state="translated">두 번째 명령은 GetOwner 메서드를 사용 하 여 $p에 프로세스의 소유자를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>The command reveals that the owner is Domain01\user01.</source>
          <target state="translated">이 명령은 해당 소유자가 Domain01\user01 알 수 있습니다.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>-------------------------- EXAMPLE 9 --------------------------</source>
          <target state="translated">-------------------------- EXAMPLE 9 --------------------------</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>These commands show how to use the $pid automatic variable to identify the process that is hosting the current Windows PowerShell session.</source>
          <target state="translated">이 명령은 $pid 자동 변수를 사용하여 현재 Windows PowerShell 세션을 호스트 중인 프로세스를 식별하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>You can use this method to distinguish the host process from other Windows PowerShell processes that you might want to stop or close.</source>
          <target state="translated">이 방법을 사용하면 중지하거나 닫으려는 다른 Windows PowerShell 프로세스와 호스트 프로세스를 쉽게 구별할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>The first command gets all of the Windows PowerShell processes in the current session.</source>
          <target state="translated">첫 번째 명령은 현재 세션의 모든 Windows PowerShell 프로세스를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>The second command gets the Windows PowerShell process that is hosting the current session.</source>
          <target state="translated">두 번째 명령은 현재 세션을 호스트 중인 Windows PowerShell 프로세스를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>-------------------------- EXAMPLE 10 --------------------------</source>
          <target state="translated">-------------------------- EXAMPLE 10 --------------------------</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>This command gets all the processes that have a main window title, and it displays them in a table with the process ID and the process name.</source>
          <target state="translated">이 명령은 주 창 제목이 있는 모든 프로세스를 가져온 다음 프로세스 ID 및 프로세스 이름과 함께 테이블에 표시합니다.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>The mainWindowTitle property is just one of many useful properties of the System.Diagnostics.Process object that Get-Process returns.</source>
          <target state="translated">mainWindowTitle 속성은 Get-Process가 반환하는 System.Diagnostics.Process 개체의 여러 유용한 속성 중 하나에 불과합니다.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>To view all of the properties, pipe the results of a Get-Process command to the T:Microsoft.PowerShell.Commands.Get-Member cmdlet (get-process | get-member).</source>
          <target state="translated">모든 속성을 보려면 Get-Process 명령의 결과를 T:Microsoft.PowerShell.Commands.Get-Member cmdlet으로 파이프합니다(get-process | get-member).</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>PARAMETERS</source>
          <target state="translated">매개 변수</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>-ComputerName</source>
          <target state="translated">-ComputerName</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>Gets the processes running on the specified computers.</source>
          <target state="translated">지정한 컴퓨터에서 실행 중인 프로세스를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>The default is the local computer.</source>
          <target state="translated">기본값은 로컬 컴퓨터입니다.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>Type the NetBIOS name, an IP address, or a fully qualified domain name of one or more computers.</source>
          <target state="translated">하나 이상 컴퓨터의 NetBIOS 이름, IP 주소 또는 정규화된 도메인 이름을 입력하세요.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>To specify the local computer, type the computer name, a dot (.), or "localhost".</source>
          <target state="translated">로컬 컴퓨터를 지정하려면 컴퓨터 이름, 점(.) 또는 "localhost"를 입력합니다.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>This parameter does not rely on Windows PowerShell remoting.</source>
          <target state="translated">이 매개 변수는 Windows PowerShell 원격 기능을 사용하지 않습니다.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>You can use the ComputerName parameter of Get-Process even if your computer is not configured to run remote commands.</source>
          <target state="translated">원격 명령을 실행하도록 컴퓨터를 구성하지 않은 경우에도 Get-Process의 ComputerName 매개 변수를 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>-FileVersionInfo</source>
          <target state="translated">-FileVersionInfo</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>Gets the file version information for the program that runs in the process.</source>
          <target state="translated">프로세스에서 실행되는 프로그램에 대한 파일 버전 정보를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>On Windows Vista and later versions of Windows, you must open Windows PowerShell with the "Run as administrator" option to use this parameter on processes that you do not own.</source>
          <target state="translated">Windows Vista 이상에서 소유하지 않은 프로세스에 대해 이 매개 변수를 사용하려면 "관리자 권한으로 실행" 옵션을 사용하여 Windows PowerShell을 열어야 합니다.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>You cannot use the <bpt id="p1">**</bpt>FileVersionInfo<ept id="p1">**</ept> and <bpt id="p2">**</bpt>ComputerName<ept id="p2">**</ept> parameters of the <bpt id="p3">**</bpt>Get-Process<ept id="p3">**</ept> cmdlet in the same command.</source>
          <target state="translated">사용할 수 없습니다는 <bpt id="p1">**</bpt>FileVersionInfo<ept id="p1">**</ept> 및 <bpt id="p2">**</bpt>ComputerName<ept id="p2">**</ept> 의 매개 변수는 <bpt id="p3">**</bpt>Get-process<ept id="p3">**</ept> 동일한 명령에는 cmdlet입니다.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>To get file version information for a process on a remote computer, use the <bpt id="p1">**</bpt>Invoke-Command<ept id="p1">**</ept> cmdlet.</source>
          <target state="translated">원격 컴퓨터에서 프로세스에 대 한 파일 버전 정보를 가져오려면는 <bpt id="p1">**</bpt>Invoke-command<ept id="p1">**</ept> cmdlet입니다.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>Using this parameter is equivalent to getting the MainModule.FileVersionInfo property of each process object.</source>
          <target state="translated">이 매개 변수 사용은 각 프로세스 개체의 MainModule.FileVersionInfo 속성을 가져오는 것과 같습니다.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>When you use this parameter, Get-Process returns a FileVersionInfo object (System.Diagnostics.FileVersionInfo), not a process object.</source>
          <target state="translated">이 매개 변수를 사용할 경우 Get-Process는 프로세스 개체가 아닌 FileVersionInfo 개체(System.Diagnostics.FileVersionInfo)를 반환합니다.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>So, you cannot pipe the output of the command to a cmdlet that expects a process object, such as Stop-Process.</source>
          <target state="translated">따라서 Stop-Process와 같이 프로세스 개체가 필요한 cmdlet으로 명령의 출력을 파이프할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>-Id</source>
          <target state="translated">-Id</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>Specifies one or more processes by process ID (PID).</source>
          <target state="translated">PID(프로세스 ID)로 프로세스를 하나 이상 지정합니다.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>To specify multiple IDs, use commas to separate the IDs.</source>
          <target state="translated">여러 ID를 지정하려면 쉼표를 사용하여 ID를 구분합니다.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>To find the PID of a process, type "get-process".</source>
          <target state="translated">프로세스의 PID를 찾으려면 "get-process"를 입력합니다.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>-InputObject</source>
          <target state="translated">-InputObject</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>Specifies one or more process objects.</source>
          <target state="translated">프로세스 개체를 하나 이상 지정합니다.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>Enter a variable that contains the objects, or type a command or expression that gets the objects.</source>
          <target state="translated">개체를 포함하는 변수를 입력하거나 개체를 가져오는 명령 또는 식을 입력하세요.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>-Module</source>
          <target state="translated">모듈</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>Gets the modules that have been loaded by the processes.</source>
          <target state="translated">프로세스에서 로드된 모듈을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>On Windows Vista and later versions of Windows, you must open Windows PowerShell with the "Run as administrator" option to use this parameter on processes that you do not own.</source>
          <target state="translated">Windows Vista 이상에서 소유하지 않은 프로세스에 대해 이 매개 변수를 사용하려면 "관리자 권한으로 실행" 옵션을 사용하여 Windows PowerShell을 열어야 합니다.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>You cannot use the <bpt id="p1">**</bpt>Module<ept id="p1">**</ept> and <bpt id="p2">**</bpt>ComputerName<ept id="p2">**</ept> parameters of the <bpt id="p3">**</bpt>Get-Process<ept id="p3">**</ept> cmdlet in the same command.</source>
          <target state="translated">사용할 수 없습니다는 <bpt id="p1">**</bpt>모듈<ept id="p1">**</ept> 및 <bpt id="p2">**</bpt>ComputerName<ept id="p2">**</ept> 의 매개 변수는 <bpt id="p3">**</bpt>Get-process<ept id="p3">**</ept> 동일한 명령에는 cmdlet입니다.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>To get the modules that have been loaded by a process on a remote computer, use the <bpt id="p1">**</bpt>Invoke-Command<ept id="p1">**</ept> cmdlet.</source>
          <target state="translated">원격 컴퓨터의 프로세스에서 로드 된 모듈을 가져오려면는 <bpt id="p1">**</bpt>Invoke-command<ept id="p1">**</ept> cmdlet입니다.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>This parameter is equivalent to getting the Modules property of each process object.</source>
          <target state="translated">이 매개 변수는 각 프로세스 개체의 Modules 속성을 가져오는 것과 같습니다.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>When you use this parameter, Get-Process returns a ProcessModule object (System.Diagnostics.ProcessModule), not a process object.</source>
          <target state="translated">이 매개 변수를 사용할 경우 Get-Process는 프로세스 개체가 아닌 ProcessModule 개체(System.Diagnostics.ProcessModule)를 반환합니다.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>So, you cannot pipe the output of the command to a cmdlet that expects a process object, such as Stop-Process.</source>
          <target state="translated">따라서 Stop-Process와 같이 프로세스 개체가 필요한 cmdlet으로 명령의 출력을 파이프할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>When you use both the Module and FileVersionInfo parameters in the same command, Get-Process returns a FileVersionInfo object with information about the file version of all modules.</source>
          <target state="translated">동일한 명령에 Module 및 FileVersionInfo 매개 변수를 함께 사용할 경우 Get-Process는 모든 모듈의 파일 버전에 대한 정보가 포함된 FileVersionInfo 개체를 반환합니다.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>-Name</source>
          <target state="translated">-Name</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>Specifies one or more processes by process name.</source>
          <target state="translated">프로세스 이름으로 프로세스를 하나 이상 지정합니다.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>You can type multiple process names (separated by commas) and use wildcard characters.</source>
          <target state="translated">쉼표로 구분하여 여러 프로세스 이름을 입력하고 와일드카드 문자를 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>The parameter name ("Name") is optional.</source>
          <target state="translated">매개 변수 이름("Name")은 선택 사항입니다.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>CommonParameters</source>
          <target state="translated">CommonParameters</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutVariable, -OutBuffer, -PipelineVariable, -Verbose, -WarningAction, and -WarningVariable.</source>
          <target state="translated">이 cmdlet은 공통 매개 변수:-디버그,-ErrorAction,-ErrorVariable,-InformationAction,-InformationVariable,-OutVariable,-OutBuffer,-PipelineVariable,-Verbose,-WarningAction 및-warningvariable을 지원 합니다.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>For more information, see about_CommonParameters (http://go.microsoft.com/fwlink/?LinkID=113216).</source>
          <target state="translated">자세한 내용은 about_CommonParameters (http://go.microsoft.com/fwlink/?LinkID=113216)를 참조 합니다.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>INPUTS</source>
          <target state="translated">입력</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>System.Diagnostics.Process</source>
          <target state="translated">System.Diagnostics.Process</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>You can pipe a process object to Get-Process.</source>
          <target state="translated">프로세스 개체를 Get-Process로 파이프할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>OUTPUTS</source>
          <target state="translated">출력</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>System.Diagnostics.Process, System.Diagnotics.FileVersionInfo, System.Diagnostics.ProcessModule</source>
          <target state="translated">System.Diagnostics.Process, System.Diagnotics.FileVersionInfo, System.Diagnostics.ProcessModule</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>By default, Get-Process returns a System.Diagnostics.Process object.</source>
          <target state="translated">기본적으로 Get-Process는 System.Diagnostics.Process 개체를 반환합니다.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>If you use the FileVersionInfo parameter, it returns a System.Diagnotics.FileVersionInfo object.</source>
          <target state="translated">FileVersionInfo 매개 변수를 사용할 경우 System.Diagnotics.FileVersionInfo 개체를 반환합니다.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>If you use the Module parameter (without the FileVersionInfo parameter), it returns a System.Diagnostics.ProcessModule object.</source>
          <target state="translated">FileVersionInfo 매개 변수 없이 Module 매개 변수를 사용할 경우 System.Diagnostics.ProcessModule 개체를 반환합니다.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>NOTES</source>
          <target state="translated">참고 사항</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>You can also refer to Get-Process by its built-in aliases, "ps" and "gps".</source>
          <target state="translated">기본 제공 별칭인 "ps" 및 "gps"로 Get-Process를 참조할 수도 있습니다.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>For more information, see about_Aliases.</source>
          <target state="translated">자세한 내용은 about_Aliases를 참조하세요.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>On computers that are running a 64-bit version of Windows, the 64-bit version of Windows PowerShell gets only 64-bit process modules and the 32-bit version of Windows PowerShell gets only 32-bit process modules.</source>
          <target state="translated">64비트 버전의 Windows를 실행하는 컴퓨터에서 64비트 버전의 Windows PowerShell은 64비트 프로세스 모듈만 가져오고 32비트 버전의 Windows PowerShell은 32비트 프로세스 모듈만 가져옵니다.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>You can use the properties and methods of the WMI Win32_Process object in Windows PowerShell.</source>
          <target state="translated">Windows PowerShell에서 WMI Win32_Process 개체의 속성과 메서드를 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>For information, see T:Microsoft.PowerShell.Commands.Get-WmiObject and the Windows Management Instrumentation (WMI) SDK.</source>
          <target state="translated">자세한 내용은 T:Microsoft.PowerShell.Commands.Get-WmiObject 및 WMI(Windows Management Instrumentation) SDK를 참조하세요.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>The default display of a process is a table that includes the following columns.</source>
          <target state="translated">프로세스의 기본 표시는 다음 열을 포함하는 테이블입니다.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>For a description of all of the properties of process objects, see "Process Properties" in MSDN at http://go.microsoft.com/fwlink/?LinkId=204482http://go.microsoft.com/fwlink/?LinkId=204482</source>
          <target state="translated">모든 프로세스 개체의 속성에 대 한 설명을, http://go.microsoft.com/fwlink/?LinkId=204482http://go.microsoft.com/fwlink/?LinkId=204482에서 MSDN의 "프로세스 속성" 참조</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>Handles: The number of handles that the process has opened.</source>
          <target state="translated">다음과 같은 식을 처리 프로세스에서 연 핸들 수입니다.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>NPM(K): The amount of non-paged memory that the process is using, in kilobytes.</source>
          <target state="translated">NPM(K): (킬로바이트)에서 프로세스에서 사용 중인 비페이징 메모리의 양입니다.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>PM(K): The amount of pageable memory that the process is using, in kilobytes.</source>
          <target state="translated">PM(K): (킬로바이트)에서 프로세스에서 사용 중인 페이징 가능한 메모리의 양입니다.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>WS(K): The size of the working set of the process, in kilobytes.</source>
          <target state="translated">WS(K): (킬로바이트)에서 프로세스의 작업 집합의 크기입니다.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>The working set consists of the pages of memory that were recently referenced by the process.</source>
          <target state="translated">작업 집합은 프로세스에서 최근에 참조한 메모리 페이지로 구성됩니다.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>VM(M): The amount of virtual memory that the process is using, in megabytes.</source>
          <target state="translated">VM(M): 프로세스를 사용 하는 메가바이트 단위로 가상 메모리의 양입니다.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>Virtual memory includes storage in the paging files on disk.</source>
          <target state="translated">가상 메모리에는 디스크 페이징 파일의 저장소가 포함됩니다.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>CPU(s): The amount of processor time that the process has used on all processors, in seconds.</source>
          <target state="translated">CPU(s): 초 단위로 프로세스가 모든 프로세서에서 사용한 프로세서 시간의 양입니다.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>ID: The process ID (PID) of the process.</source>
          <target state="translated">ID: 프로세스의 프로세스 ID (PID).</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>ProcessName: The name of the process.</source>
          <target state="translated">ProcessName: 프로세스의 이름입니다.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>For explanations of the concepts related to processes, see the Glossary in Help and Support Center and the Help for Task Manager.</source>
          <target state="translated">프로세스와 관련된 개념에 대한 설명은 도움말 및 지원 센터의 용어집 및 작업 관리자에 대한 도움말을 참조하세요.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>You can also use the built-in alternate views of the processes available with Format-Table, such as "StartTime" and "Priority", and you can design your own views.</source>
          <target state="translated">Format-Table과 함께 사용할 수 있는 프로세스의 기본 제공 대체 보기(예: "StartTime" 및 "Priority")를 사용하고 고유한 보기를 디자인할 수도 있습니다.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>For more information, see T:Microsoft.PowerShell.Commands.Format-Table.</source>
          <target state="translated">자세한 내용은 T:Microsoft.PowerShell.Commands.Format-Table을 참조하세요.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>RELATED LINKS</source>
          <target state="translated">관련된 링크</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>Debug-Process</source>
          <target state="translated">Debug-Process</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>Get-Process</source>
          <target state="translated">Get-Process</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>Start-Process</source>
          <target state="translated">Start-Process</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>Stop-Process</source>
          <target state="translated">프로세스 중지</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>Wait-Process</source>
          <target state="translated">Wait-Process</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>