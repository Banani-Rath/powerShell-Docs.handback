<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="md" source-language="en-US" target-language="ko-kr">
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Script Tracing and Logging</source>
          <target state="translated">스크립트 추적 및 로깅</target>         
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>While Windows PowerShell already has the <bpt id="p1">**</bpt>LogPipelineExecutionDetails<ept id="p1">**</ept> Group Policy setting to log the invocation of cmdlets, PowerShell’s scripting language has plenty of features that you might want to log and/or audit.</source>
          <target state="translated">Windows PowerShell에는 cmdlet의 호출을 로깅하는 <bpt id="p1">**</bpt>LogPipelineExecutionDetails<ept id="p1">**</ept> 그룹 정책 설정이 이미 있지만 PowerShell의 스크립트 언어는 로깅하거나 감사할 수 있는 많은 기능을 제공합니다.</target>         
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>The new Detailed Script Tracing feature lets you enable detailed tracking and analysis of Windows PowerShell scripting use on a system.</source>
          <target state="translated">새로운 세부 스크립트 추적 기능을 사용하면 시스템에서 Windows PowerShell 스크립트 사용을 자세히 추적하고 분석할 수 있습니다.</target>         
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>After you enable detailed script tracing, Windows PowerShell logs all script blocks to the ETW event log, <bpt id="p1">**</bpt>Microsoft-Windows-PowerShell/Operational<ept id="p1">**</ept>.</source>
          <target state="translated">세부 스크립트 추적을 사용하도록 설정하면 Windows PowerShell에서 모든 스크립트 블록을 ETW 이벤트 로그 <bpt id="p1">**</bpt>Microsoft-Windows-PowerShell/Operational<ept id="p1">**</ept>에 로깅합니다.</target>         
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>If a script block creates another script block (for example, a script that calls the Invoke-Expression cmdlet on a string), that resulting script block is logged as well.</source>
          <target state="translated">스크립트 블록에서 다른 스크립트 블록(예: 문자열에서 Invoke-Expression cmdlet을 호출하는 스크립트)을 만드는 경우 결과 스크립트 블록도 로깅됩니다.</target>         
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Logging of these events can be enabled through the <bpt id="p1">**</bpt>Turn on PowerShell Script Block Logging<ept id="p1">**</ept> Group Policy setting (in Administrative Templates -&gt; Windows Components -&gt; Windows PowerShell).</source>
          <target state="translated">이러한 이벤트의 로깅은 <bpt id="p1">**</bpt>PowerShell 스크립트 블록 로깅 켜기<ept id="p1">**</ept> 그룹 정책 설정(관리 템플릿 -&gt; Windows 구성 요소 -&gt; Windows PowerShell)을 통해 사용할 수 있습니다.</target>         
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>The events are:</source>
          <target state="translated">이벤트는 다음과 같습니다.</target>         
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Channel</source>
          <target state="translated">채널</target>         
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Operational</source>
          <target state="translated">작동</target>         
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Level</source>
          <target state="translated">수준</target>         
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Verbose</source>
          <target state="translated">Verbose</target>         
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Opcode</source>
          <target state="translated">Opcode</target>         
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Create</source>
          <target state="translated">만들기</target>         
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Task</source>
          <target state="translated">작업</target>         
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>CommandStart</source>
          <target state="translated">CommandStart</target>         
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Keyword</source>
          <target state="translated">키워드</target>         
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Runspace</source>
          <target state="translated">Runspace</target>         
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>EventId</source>
          <target state="translated">EventId</target>         
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Engine_ScriptBlockCompiled (0x1008 = 4104)</source>
          <target state="translated">Engine_ScriptBlockCompiled(0x1008 = 4104)</target>         
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Message</source>
          <target state="translated">메시지</target>         
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Creating Scriptblock text (%1 of %2):</source>
          <target state="translated">Scriptblock 텍스트를 만드는 중(%1/%2):</target>         
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>%3</source>
          <target state="translated">%3</target>         
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>ScriptBlock ID: %4</source>
          <target state="translated">ScriptBlock ID: %4</target>         
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>The text embedded in the message is the extent of the script block compiled.</source>
          <target state="translated">메시지에 포함된 텍스트는 컴파일된 스크립트 블록의 범위입니다.</target>         
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>The ID is a GUID that is retained for the life of the script block.</source>
          <target state="translated">ID는 스크립트 블록의 사용 기간 동안 유지되는 GUID입니다.</target>         
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>When you enable verbose logging, the feature writes begin and end markers:</source>
          <target state="translated">자세한 정보 로깅을 사용하도록 설정하면 기능에서 시작 및 끝 표식을 기록합니다.</target>         
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Channel</source>
          <target state="translated">채널</target>         
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Operational</source>
          <target state="translated">작동</target>         
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Level</source>
          <target state="translated">수준</target>         
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Verbose</source>
          <target state="translated">Verbose</target>         
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Opcode</source>
          <target state="translated">Opcode</target>         
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Open (/ Close)</source>
          <target state="translated">열기(/ 닫기)</target>         
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Task</source>
          <target state="translated">작업</target>         
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>CommandStart (/ CommandStop)</source>
          <target state="translated">CommandStart(/ CommandStop)</target>         
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Keyword</source>
          <target state="translated">키워드</target>         
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Runspace</source>
          <target state="translated">Runspace</target>         
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>EventId</source>
          <target state="translated">EventId</target>         
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>ScriptBlock\_Invoke\_Start\_Detail (0x1009 = 4105) /</source>
          <target state="translated">ScriptBlock\_Invoke\_Start\_Detail(0x1009 = 4105) /</target>         
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>ScriptBlock\_Invoke\_Complete\_Detail (0x100A = 4106)</source>
          <target state="translated">ScriptBlock\_Invoke\_Complete\_Detail(0x100A = 4106)</target>         
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Message</source>
          <target state="translated">메시지</target>         
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Started (/ Completed) invocation of ScriptBlock ID: %1</source>
          <target state="translated">ScriptBlock ID 호출을 시작했습니다(/ 완료했습니다). %1</target>         
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Runspace ID: %2</source>
          <target state="translated">Runspace ID: %2</target>         
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>The ID is the GUID representing the script block (that can be correlated with event ID 0x1008), and the Runspace ID represents the runspace in which this script block was run.</source>
          <target state="translated">ID는 이벤트 ID 0x1008과 상호 관련될 수 있는 스크립트 블록을 나타내는 GUID이고 Runspace ID는 이 스크립트 블록이 실행된 runspace를 나타냅니다.</target>         
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Percent signs in the invocation message represent structured ETW properties.</source>
          <target state="translated">호출 메시지의 백분율 기호는 구조화된 ETW 속성을 나타냅니다.</target>         
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>While they are replaced with the actual values in the message text, a more robust way to access them is to retrieve the message with the Get-WinEvent cmdlet, and then use the <bpt id="p1">**</bpt>Properties<ept id="p1">**</ept> array of the message.</source>
          <target state="translated">이러한 속성은 메시지 테스트에서 실제 값으로 대체되지만 액세스할 수 있는 보다 강력한 방법은 Get-WinEvent cmdlet을 사용하여 메시지를 검색한 다음 메시지의 <bpt id="p1">**</bpt>속성<ept id="p1">**</ept> 배열을 사용하는 것입니다.</target>         
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Here's an example of how this functionality can help unwrap a malicious attempt to encrypt and obfuscate a script:</source>
          <target state="translated">다음은 이 기능을 사용하여 스크립트를 암호화하여 난독 처리하려는 악의적인 시도를 해결하는 방법의 예입니다.</target>         
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Running this generates the following log entries:</source>
          <target state="translated">이 명령을 실행하면 다음과 같은 로그 항목이 생성됩니다.</target>         
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>If the script block length exceeds what ETW is capable of holding in a single event, Windows PowerShell breaks the script into multiple parts.</source>
          <target state="translated">스크립트 블록 길이가 ETW에서 단일 이벤트에 유지할 수 있는 길이를 초과하면 Windows PowerShell에서 스크립트를 여러 부분으로 나눕니다.</target>         
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Here is sample code to recombine a script from its log messages:</source>
          <target state="translated">다음은 로그 메시지에서 스크립트를 다시 결합하는 샘플 코드입니다.</target>         
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>As with all logging systems that have a limited retention buffer (i.e. ETW logs), one attack against this infrastructure is to flood the log with spurious events to hide earlier evidence.</source>
          <target state="translated">보존 버퍼가 제한된 모든 로깅 시스템(예: ETW 로그)과 마찬가지로 이 인프라를 공격하는 한 가지 방법은 가상 이벤트로 로그를 넘쳐나게 하여 이전 증거를 숨기는 것입니다.</target>         
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>To protect yourself from this attack, ensure that you have some form of event log collection set up (i.e., Windows Event Forwarding, <bpt id="p1">[</bpt>Spotting the Adversary with Windows Event Log Monitoring<ept id="p1">](http://www.nsa.gov/ia/_files/app/Spotting_the_Adversary_with_Windows_Event_Log_Monitoring.pdf)</ept>) to move event logs off of the computer as soon as possible.</source>
          <target state="translated">이러한 공격으로부터 보호하려면 특정 형식의 이벤트 로그 컬렉션을 설정(예: Windows 이벤트 전달, <bpt id="p1">[</bpt>Spotting the Adversary with Windows Event Log Monitoring(Windows 이벤트 로그 모니터링으로 악의적 사용자 포착)<ept id="p1">](http://www.nsa.gov/ia/_files/app/Spotting_the_Adversary_with_Windows_Event_Log_Monitoring.pdf)</ept>)하여 최대한 빨리 컴퓨터에서 이벤트 로그를 이동해야 합니다.</target>         
        </trans-unit>
      </group>
    </body>
  </file>
  <header xmlns="">
    <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">654c0d5e83b9832524298b5c96eae094f371330f</xliffext:olfilehash>
  </header>
</xliff>