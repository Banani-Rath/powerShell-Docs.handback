<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ko-kr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-1c394fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">53a4bed95418e1ca96a83be44848c160b6a2e556</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">reference\3.0\Microsoft.PowerShell.Core\Providers\Variable-Provider.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions" />
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">5176e6823e3e907835b07cbf27f9de872ebcbb14</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">2eab9379cf9017b4154fb09d1149164d72b5f5ec</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Variable Provider</source>
          <target state="translated">변수 공급자</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Variable Provider</source>
          <target state="translated">변수 공급자</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>PROVIDER NAME</source>
          <target state="translated">공급자 이름</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Variable</source>
          <target state="translated">변수</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>DRIVES</source>
          <target state="translated">드라이브</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Variable:</source>
          <target state="translated">변수:</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>SHORT DESCRIPTION</source>
          <target state="translated">간단한 설명</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Provides access to the Windows PowerShell variables and to their values.</source>
          <target state="translated">Windows PowerShell 변수 및 해당 값에 대한 액세스를 제공합니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>DETAILED DESCRIPTION</source>
          <target state="translated">자세한 설명</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The Windows PowerShell Variable provider lets you get, add, change, clear, and delete Windows PowerShell variables in the current console.</source>
          <target state="translated">Windows PowerShell 변수 공급자를 통해 현재 콘솔에서 Windows PowerShell 변수를 가져오고 추가, 변경 및 삭제할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>The Windows PowerShell Variable provider supports the variables that Windows PowerShell creates, including the automatic variables, the preference variables, and the variables that you create.</source>
          <target state="translated">Windows PowerShell 변수 공급자는 자동 변수, 기본 설정 변수 및 사용자가 만드는 변수를 포함하여 Windows PowerShell이 만드는 변수를 지원합니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>The Variable provider is a flat namespace that contains only the variable objects.</source>
          <target state="translated">변수 공급자는 변수 개체만 포함된 단일 구조 네임스페이스입니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>The variables have no child items.</source>
          <target state="translated">변수에는 하위 항목이 없습니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Most of the variables are instances of the System.Management.Automation.PSVariable class.</source>
          <target state="translated">대부분의 변수는 System.Management.Automation.PSVariable 클래스의 인스턴스입니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>However, there are some variations.</source>
          <target state="translated">그러나 몇 가지 변형이 있습니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>For example, the "?" variable is a member of the QuestionMarkVariable class, and the "MaximumVariableCount" variable is a member of the SessionStateCapacityVariable class.</source>
          <target state="translated">예를 들어 "?" 변수는 QuestionMarkVariable 클래스의 멤버이고 "MaximumVariableCount" 변수는 SessionStateCapacityVariable 클래스의 멤버입니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>The Variable provider exposes its data store in the Variable: drive.</source>
          <target state="translated">변수 공급자는 Variable: 드라이브에 해당 데이터 저장소를 표시합니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>To work with variables, you can change your location to the Variable: drive <ph id="ph1">\(</ph>"set<ph id="ph2">\-</ph>location variable:"<ph id="ph3">\)</ph>, or you can work from any other Windows PowerShell drive.</source>
          <target state="translated">변수를 사용 하려면 변수를 사용자의 위치를 변경할 수 있습니다: 드라이브 <ph id="ph1">\(</ph>"설정<ph id="ph2">\-</ph>위치 변수:"<ph id="ph3">\)</ph>, 또는 다른 Windows PowerShell 드라이브에서 작업할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>To reference a variable from another location, use the drive name <ph id="ph1">\(</ph>Variable:<ph id="ph2">\)</ph> in the path.</source>
          <target state="translated">다른 위치에서 변수를 참조 하려면 드라이브 이름을 사용 하 여 <ph id="ph1">\(</ph>변수:<ph id="ph2">\)</ph> 경로에 있습니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Windows PowerShell includes a set of cmdlets designed especially to view and to change variables:</source>
          <target state="translated">Windows PowerShell에는 변수를 보거나 변경할 수 있도록 특별히 디자인된 다음과 같은 cmdlet 집합이 포함되어 있습니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Get<ph id="ph1">\-</ph>Variable</source>
          <target state="translated">가져오기<ph id="ph1">\-</ph>변수</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>New<ph id="ph1">\-</ph>Variable</source>
          <target state="translated">새<ph id="ph1">\-</ph>변수</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Set<ph id="ph1">\-</ph>Variable</source>
          <target state="translated">설정<ph id="ph1">\-</ph>변수</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Remove<ph id="ph1">\-</ph>Variable</source>
          <target state="translated">제거<ph id="ph1">\-</ph>변수</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Clear<ph id="ph1">\-</ph>Variable</source>
          <target state="translated">지우기<ph id="ph1">\-</ph>변수</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>When you use these cmdlets, you do not need to specify the Variable: drive in the name.</source>
          <target state="translated">이러한 cmdlet을 사용하면 이름에 Variable: 드라이브를 지정할 필요가 없습니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>The Variable provider supports all of the cmdlets whose names contain the Item noun <ph id="ph1">\(</ph>the Item cmdlets<ph id="ph2">\)</ph>, except for <bpt id="p1">[</bpt>Invoke<ph id="ph3">\-</ph>Item &amp;#91;m2&amp;#93;<ept id="p1">](assetId:///38a9887b-ce1a-4bde-be4e-98012efae204)</ept>.</source>
          <target state="translated">변수 공급자가 지 원하는 모든 이름에 Item 명사가 포함 cmdlet <ph id="ph1">\(</ph>Item cmdlet<ph id="ph2">\)</ph>, 를 제외 하 고 <bpt id="p1">[</bpt>Invoke<ph id="ph3">\-</ph>항목 &amp;#91; m2 &amp;#93;<ept id="p1">](assetId:///38a9887b-ce1a-4bde-be4e-98012efae204)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>The Variable provider supports the <bpt id="p1">[</bpt>Get<ph id="ph1">\-</ph>Content &amp;#91;m2&amp;#93;<ept id="p1">](assetId:///86d8b4af-af2c-4a27-9519-2c9fd420be3d)</ept> and <bpt id="p2">[</bpt>Set<ph id="ph2">\-</ph>Content &amp;#91;m2&amp;#93;<ept id="p2">](assetId:///6fff9b86-86df-4440-b7b7-8124b22088fc)</ept> cmdlets.</source>
          <target state="translated">변수 공급자에서 지 원하는 <bpt id="p1">[</bpt>가져오기<ph id="ph1">\-</ph>콘텐츠 &amp;#91; m2 &amp;#93;<ept id="p1">](assetId:///86d8b4af-af2c-4a27-9519-2c9fd420be3d)</ept> 및 <bpt id="p2">[</bpt>설정<ph id="ph2">\-</ph>콘텐츠 &amp;#91; m2 &amp;#93;<ept id="p2">](assetId:///6fff9b86-86df-4440-b7b7-8124b22088fc)</ept> cmdlet입니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>However, it does not support the cmdlets whose names contain the ItemProperty noun <ph id="ph1">\(</ph>the ItemProperty cmdlets<ph id="ph2">\)</ph>, and it does not support the Filter parameter in any cmdlet.</source>
          <target state="translated">그러나 이름 ItemProperty 명사가 포함 된 cmdlet를 지원 하지 않는 <ph id="ph1">\(</ph>ItemProperty cmdlet<ph id="ph2">\)</ph>, 모든 cmdlet에서 Filter 매개 변수를 지원 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>You can also use the Windows PowerShell expression parser to create, view, and change the values of variables without using the cmdlets.</source>
          <target state="translated">또한 cmdlet을 사용하는 대신 Windows PowerShell 식 파서를 사용하여 변수 값을 만들거나 보고 변경할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>When working with variables directly, use a dollar sign <ph id="ph1">\($\)</ph> to identify the name as a variable and the assignment operator <ph id="ph2">\(\=\)</ph> to establish and change its value.</source>
          <target state="translated">달러 기호를 사용 하 여 변수를 직접 작업할 때는 <ph id="ph1">\($\)</ph> 대입 연산자 및 변수 이름을 식별할 수 <ph id="ph2">\(\=\)</ph> 설정 하 고 해당 값을 변경 합니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>For example, "$p <ph id="ph1">\=</ph> <bpt id="p1">[</bpt>Get<ph id="ph2">\-</ph>Process &amp;#91;m2&amp;#93;<ept id="p1">](assetId:///27a05dbd-4b69-48a3-8d55-b295f6225f15)</ept>" creates the "p" variable and stores the results of a "<bpt id="p2">[</bpt>Get<ph id="ph3">\-</ph>Process &amp;#91;m2&amp;#93;<ept id="p2">](assetId:///27a05dbd-4b69-48a3-8d55-b295f6225f15)</ept>" command in it.</source>
          <target state="translated">예를 들어 "$p <ph id="ph1">\=</ph> <bpt id="p1">[</bpt>가져오기<ph id="ph2">\-</ph>프로세스 &amp;#91; m2 &amp;#93;<ept id="p1">](assetId:///27a05dbd-4b69-48a3-8d55-b295f6225f15)</ept>" "p" 변수를 만들고 결과 저장는 "<bpt id="p2">[</bpt>가져오기<ph id="ph3">\-</ph>프로세스 &amp;#91; m2 &amp;#93;<ept id="p2">](assetId:///27a05dbd-4b69-48a3-8d55-b295f6225f15)</ept>"에 명령 합니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>All changes to the variables affect the current session only.</source>
          <target state="translated">변수에 대한 모든 변경 내용은 현재 세션에만 영향을 줍니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>To save the changes, add the changes to the Windows PowerShell profile, or use <bpt id="p1">[</bpt>Export<ph id="ph1">\-</ph>Console &amp;#91;m2&amp;#93;<ept id="p1">](assetId:///0858eece-ddcb-4525-89d1-4732c5f54c48)</ept> to save the current console.</source>
          <target state="translated">변경 내용을 저장 하려면 Windows PowerShell 프로필에 변경 내용을 추가 하거나 사용 <bpt id="p1">[</bpt>내보내기<ph id="ph1">\-</ph>콘솔 &amp;#91; m2 &amp;#93;<ept id="p1">](assetId:///0858eece-ddcb-4525-89d1-4732c5f54c48)</ept> 현재 콘솔을 저장 합니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>CAPABILITIES</source>
          <target state="translated">기능</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>ShouldProcess</source>
          <target state="translated">ShouldProcess</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>EXAMPLES</source>
          <target state="translated">예제</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Getting to the Variable: Drive</source>
          <target state="translated">Variable: 드라이브</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>EXAMPLE 1</source>
          <target state="translated">예제 1</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>This command changes the current location to the Variable: drive.</source>
          <target state="translated">이 명령은 현재 위치를 Variable: 드라이브로 변경합니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>You can use this command from any drive in Windows PowerShell.</source>
          <target state="translated">Windows PowerShell의 모든 드라이브에서 이 명령을 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>To return to a file system drive, type the drive name.</source>
          <target state="translated">파일 시스템 드라이브로 돌아가려면 드라이브 이름을 입력합니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>For example, type "set<ph id="ph1">\-</ph>location c:".</source>
          <target state="translated">예를 들어, 입력 "설정<ph id="ph1">\-</ph>위치 c:".</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Displaying the Value of Variables</source>
          <target state="translated">변수의 값 표시</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>EXAMPLE 1</source>
          <target state="translated">예제 1</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>This command gets the list of all the variables and their values in the current session.</source>
          <target state="translated">이 명령은 현재 세션의 모든 변수 및 변수 값 목록을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>You can use this command from any Windows PowerShell drive.</source>
          <target state="translated">모든 Windows PowerShell 드라이브에서 이 명령을 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>EXAMPLE 2</source>
          <target state="translated">예제 2</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>This command gets the variables with names that begin with "max".</source>
          <target state="translated">이 명령은 이름이 "max"로 시작하는 변수를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>You can use this command from any Windows PowerShell drive.</source>
          <target state="translated">모든 Windows PowerShell 드라이브에서 이 명령을 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>If you are in the Variable: drive, you can omit the drive name from the path.</source>
          <target state="translated">현재 위치가 Variable: 드라이브인 경우 경로에서 드라이브 이름을 생략할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>EXAMPLE 3</source>
          <target state="translated">예제 3</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>This command gets the value of the WhatIfPreference variable by typing it at the command line.</source>
          <target state="translated">이 명령은 명령줄에 직접 입력하는 방식으로 WhatIfPreference 변수 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>The name of the variable is preceded by a dollar sign <ph id="ph1">\($\)</ph> to indicate that it is a variable.</source>
          <target state="translated">변수 이름 앞에 달러 기호는 <ph id="ph1">\($\)</ph> 변수 임을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>The Variable: drive name is not specified.</source>
          <target state="translated">Variable: 드라이브 이름은 지정되지 않았습니다.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>EXAMPLE 4</source>
          <target state="translated">예제 4</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>This command uses the LiteralPath parameter of Get<ph id="ph1">\-</ph>ChildItem to get the value of the "?" variable from within the Variable: drive.</source>
          <target state="translated">이 명령은 Get의 LiteralPath 매개 변수를 사용 하 여<ph id="ph1">\-</ph>ChildItem의 값을 가져오는 "?" 변수에서 variable: 드라이브.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Get<ph id="ph1">\-</ph>ChildItem does not attempt to resolve any wildcards in the values of the LiteralPath parameter.</source>
          <target state="translated">가져오기<ph id="ph1">\-</ph>ChildItem LiteralPath 매개 변수 값에서 와일드 카드를 해결 하려고 시도 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>To display the value of a variable with a special character name without a cmdlet, type a dollar sign <ph id="ph1">\($\)</ph> and the variable name.</source>
          <target state="translated">Cmdlet 없이 특수 문자 이름 가진 변수 값을 표시 하려면 달러 기호를 입력 <ph id="ph1">\($\)</ph> 및 변수 이름입니다.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>For example, to display the value of the "?" variable, type "$?".</source>
          <target state="translated">예를 들어 "?" 변수의 값을 표시하려면 "$?"를 입력합니다.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>EXAMPLE 5</source>
          <target state="translated">예 5</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>This command gets the variables that have the values of "ReadOnly" or "Constant" for their Options property.</source>
          <target state="translated">이 명령은 Options 속성 값이 "ReadOnly" 또는 "Constant"인 변수를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>Creating a New Variable</source>
          <target state="translated">새 변수 만들기</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>EXAMPLE 1</source>
          <target state="translated">예제 1</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>This command creates the "services" variable and stores the results of a Get<ph id="ph1">\-</ph>Service command in it.</source>
          <target state="translated">이 명령은 "services" 변수를 만들고 Get의 결과 저장<ph id="ph1">\-</ph>서비스에 명령 합니다.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>Because the current location is in the Variable: drive, the value of the Path parameter is a dot <ph id="ph1">\(</ph>.<ph id="ph2">\)</ph>, which represents the current location.</source>
          <target state="translated">변수에서 현재 위치가 포함 되어 있으므로: 드라이브 경로 매개 변수 값은 점 <ph id="ph1">\(</ph>.<ph id="ph2">\)</ph>, 을 현재 위치를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>The parentheses around the Get<ph id="ph1">\-</ph>Service command ensure that the command is executed before the variable is created.</source>
          <target state="translated">Get 주위의 괄호는<ph id="ph1">\-</ph>변수 만들어지기 전에 명령이 실행 되는 서비스 명령 확인 합니다.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>Without the parentheses, the value of the new variable is a "Get<ph id="ph1">\-</ph>Service" string.</source>
          <target state="translated">괄호가 없으면 새 변수 값이는 "Get<ph id="ph1">\-</ph>서비스" 문자열입니다.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>If you are not in the variable: drive, include the Variable: drive name in the path.</source>
          <target state="translated">현재 위치가 variable: 드라이브가 아닌 경우에는 경로에 Variable: 드라이브 이름을 포함해야 합니다.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>EXAMPLE 2</source>
          <target state="translated">예제 2</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>This command creates a "services" variable and stores the result of a Get<ph id="ph1">\-</ph>Service command in it.</source>
          <target state="translated">이 명령은 "services" 변수를 만들고 Get의 결과가 저장<ph id="ph1">\-</ph>서비스에 명령 합니다.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>The command uses a dollar sign <ph id="ph1">\($\)</ph> to indicate a variable and the assignment operator <ph id="ph2">\(\=\)</ph> to assign the result of the Get<ph id="ph3">\-</ph>Service command to the newly created variable.</source>
          <target state="translated">달러 기호를 사용 하 여 <ph id="ph1">\($\)</ph> 변수를 나타내고 대입 연산자를 <ph id="ph2">\(\=\)</ph> 가져오기의 결과 할당 하려면<ph id="ph3">\-</ph>서비스를 새로 만든된 변수에 명령을 합니다.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>To create a variable without a value, omit the assignment operator.</source>
          <target state="translated">값 없는 변수를 만들려면 대입 연산자를 생략합니다.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>Displaying the Properties and Methods of Variables</source>
          <target state="translated">변수의 속성 및 메서드 표시</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>EXAMPLE 1</source>
          <target state="translated">예제 1</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>This command uses the Get<ph id="ph1">\-</ph>Item cmdlet to get all variables.</source>
          <target state="translated">이 명령은 Get을 사용 하 여<ph id="ph1">\-</ph>cmdlet에 모든 변수를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>The pipeline operator <ph id="ph1">\(</ph>&amp;#124;<ph id="ph2">\)</ph> sends the results to the Get<ph id="ph3">\-</ph>Member cmdlet, which displays the methods and properties of the object.</source>
          <target state="translated">파이프라인 연산자 <ph id="ph1">\(</ph>&amp;#124;<ph id="ph2">\)</ph> 결과를 보냅니다.<ph id="ph3">\-</ph>메서드 및 개체의 속성을 표시 하는 멤버 cmdlet입니다.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>When you pipe a collection of objects <ph id="ph1">\(</ph>such as the collection of variables in the Variable: drive<ph id="ph2">\)</ph> to Get<ph id="ph3">\-</ph>Member, Get<ph id="ph4">\-</ph>Member evaluates each object in the collection separately and returns information about each of the object types that it finds.</source>
          <target state="translated">개체의 컬렉션을 파이프 하면 <ph id="ph1">\(</ph>변수에 변수 컬렉션과 같은: 드라이브<ph id="ph2">\)</ph> Get에<ph id="ph3">\-</ph>멤버 가져오기<ph id="ph4">\-</ph>멤버는 컬렉션의 각 개체를 개별적으로 평가 하 고 각 발견 하는 개체 형식에 대 한 정보를 반환 합니다.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>To get information about the collection of objects in the Variable: drive, use the InputObject parameter of Get<ph id="ph1">\-</ph>Member.</source>
          <target state="translated">변수에 개체의 컬렉션에 대 한 정보를 얻으려면: 드라이브를 Get의 InputObject 매개 변수를 사용 하 여<ph id="ph1">\-</ph>멤버입니다.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>For example, "get<ph id="ph1">\-</ph>member <ph id="ph2">\-</ph>inputobject <ph id="ph3">\(</ph>get<ph id="ph4">\-</ph>item variable:<ph id="ph5">\*\)</ph>".</source>
          <target state="translated">예를 들어, "get<ph id="ph1">\-</ph>멤버 <ph id="ph2">\-</ph>inputobject <ph id="ph3">\(</ph>가져오기<ph id="ph4">\-</ph>항목 변수의:<ph id="ph5">\*\)</ph>"입니다.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>When you use InputObject, Get<ph id="ph1">\-</ph>Member evaluates the collection, not the objects in the collection.</source>
          <target state="translated">InputObject를 사용 하는 경우 Get<ph id="ph1">\-</ph>멤버 컬렉션의 개체가 아니라 컬렉션을 평가 합니다.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>EXAMPLE 2</source>
          <target state="translated">예제 2</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>This command lists the values of the properties of the "home" variable.</source>
          <target state="translated">이 명령은 "home" 변수의 속성 값을 나열합니다.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>It uses the Get<ph id="ph1">\-</ph>Item cmdlet to get an object that represents the "home" variable.</source>
          <target state="translated">Get을 사용 하 여<ph id="ph1">\-</ph>cmdlet "home" 변수를 나타내는 개체를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>The pipeline operator <ph id="ph1">\(</ph>&amp;#124;<ph id="ph2">\)</ph> sends the results to the Format<ph id="ph3">\-</ph>List command.</source>
          <target state="translated">파이프라인 연산자 <ph id="ph1">\(</ph>&amp;#124;<ph id="ph2">\)</ph> 형식으로 결과 보냅니다.<ph id="ph3">\-</ph>명령을 나열 합니다.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>The Format<ph id="ph1">\-</ph>List command uses the Property parameter with a wildcard character <ph id="ph2">\(\*\)</ph> to format and to display the values of all of the properties of the "home" variable.</source>
          <target state="translated">형식<ph id="ph1">\-</ph>목록 명령은 Property 매개 변수를 사용 하 여 와일드 카드 문자로 <ph id="ph2">\(\*\)</ph> 서식을 지정 하 고 모든 "home" 변수의 속성의 값을 표시할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>Changing the Properties of a Variable</source>
          <target state="translated">변수의 속성 변경</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>EXAMPLE 1</source>
          <target state="translated">예제 1</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>This command uses the Rename<ph id="ph1">\-</ph>Item cmdlet to change the name of the "a" variable to "processes".</source>
          <target state="translated">이 명령은 이름 바꾸기를 사용 하 여<ph id="ph1">\-</ph>cmdlet "a" 변수의 이름을 "processes"로 변경 합니다.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>EXAMPLE 2</source>
          <target state="translated">예제 2</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>This command uses the Set<ph id="ph1">\-</ph>Item cmdlet to change the value of the ErrorActionPreference variable to "Stop".</source>
          <target state="translated">이 명령은 집합을 사용 하 여<ph id="ph1">\-</ph>cmdlet을 "Stop" ErrorActionPreference 변수의 값을 변경할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>EXAMPLE 3</source>
          <target state="translated">예제 3</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>This command changes the value of the ErrorActionPreference variable to "Stop".</source>
          <target state="translated">이 명령은 ErrorActionPreference 변수의 값을 "Stop"으로 변경합니다.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>It uses a dollar sign <ph id="ph1">\($\)</ph> to indicate a variable and the assignment operator <ph id="ph2">\(\=\)</ph> to assign the value.</source>
          <target state="translated">달러 기호를 사용 하 여 <ph id="ph1">\($\)</ph> 변수를 나타내고 대입 연산자를 <ph id="ph2">\(\=\)</ph> 값을 할당 합니다.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>Copying a Variable</source>
          <target state="translated">변수 복사</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>EXAMPLE 1</source>
          <target state="translated">예제 1</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>This command uses the Copy<ph id="ph1">\-</ph>Item cmdlet to copy the "processes" variable to "old<ph id="ph2">\_</ph>processes".</source>
          <target state="translated">이 명령은 복사본을 사용 하 여<ph id="ph1">\-</ph>cmdlet "processes" 변수를 복사 하려면 "이전<ph id="ph2">\_</ph>프로세스"입니다.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>This creates a new variable named "old<ph id="ph1">\_</ph>processes" that has the same value as the "processes" variable.</source>
          <target state="translated">라는 새 변수를 만들고이 "이전<ph id="ph1">\_</ph>프로세스" "processes" 변수와 동일한 값이 포함 됩니다.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>If the command is issued from within the Variable: drive, you can omit the drive name from the value of the Path parameter.</source>
          <target state="translated">명령이 Variable: 드라이브에서 실행된 경우에는 Path 매개 변수 값에서 드라이브 이름을 생략할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>EXAMPLE 2</source>
          <target state="translated">예제 2</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>This command copies the "processes" variable to "old<ph id="ph1">\_</ph>processes" without using a cmdlet.</source>
          <target state="translated">이 명령은 "processes" 변수를 복사 "기존<ph id="ph1">\_</ph>프로세스" cmdlet을 사용 하지 않고 있습니다.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>It uses the dollar sign <ph id="ph1">\($\)</ph> to indicate variables and the assignment operator to assign the value of $processes to old<ph id="ph2">\_</ph>processes.</source>
          <target state="translated">달러 기호를 사용 하 여 <ph id="ph1">\($\)</ph> 변수를 나타내고 대입 연산자를 이전에 $processes의 값을 할당 하려면<ph id="ph2">\_</ph>프로세스입니다.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>Deleting a Variable</source>
          <target state="translated">변수 삭제</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>EXAMPLE 1</source>
          <target state="translated">예제 1</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>This command deletes the "serv" variable from the current session.</source>
          <target state="translated">이 명령은 현재 세션에서 "serv" 변수를 삭제합니다.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>You can use this command in any Windows PowerShell drive.</source>
          <target state="translated">모든 Windows PowerShell 드라이브에서 이 명령을 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>EXAMPLE 2</source>
          <target state="translated">예제 2</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>This command deletes all variables from the current session except for the variables whose Options property has a value of Constant.</source>
          <target state="translated">이 명령은 Options 속성 값이 Constant인 변수를 제외하고 현재 세션에서 모든 변수를 삭제합니다.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>Without the Force parameter, the command does not delete variables whose Options property has a value of ReadOnly.</source>
          <target state="translated">Force 매개 변수가 없는 경우 Options 속성 값이 ReadOnly인 변수는 삭제되지 않습니다.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>Setting the Value of a Variable to NULL</source>
          <target state="translated">변수 값을 NULL로 설정</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>EXAMPLE 1</source>
          <target state="translated">예제 1</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>This command uses the Clear<ph id="ph1">\-</ph>Item cmdlet to change the value of the "processes" variable to NULL.</source>
          <target state="translated">이 명령은 사용 되지 않은 상태로<ph id="ph1">\-</ph>cmdlet "processes" 변수의 값을 NULL로 변경할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>EXAMPLE 2</source>
          <target state="translated">예제 2</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>This command clears the value of the "processes" variable by assigning a null value to it.</source>
          <target state="translated">이 명령은 "processes" 변수에 NULL 값을 할당하여 이 변수의 값을 지웁니다.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>It uses the $null automatic variable to represent the NULL value.</source>
          <target state="translated">구체적으로 이 명령은 $null 자동 변수를 사용하여 NULL 값을 표시합니다.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>See Also</source>
          <target state="translated">참고 항목</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>about<ph id="ph1">\_</ph>Variables</source>
          <target state="translated">에 대 한<ph id="ph1">\_</ph>변수</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>about<ph id="ph1">\_</ph>Automatic<ph id="ph2">\_</ph>Variables &amp;#91;m2&amp;#93;</source>
          <target state="translated">에 대 한<ph id="ph1">\_</ph>자동<ph id="ph2">\_</ph>변수 &amp;#91; m2 &amp;#93;</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>about<ph id="ph1">\_</ph>Providers</source>
          <target state="translated">에 대 한<ph id="ph1">\_</ph>공급자</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>