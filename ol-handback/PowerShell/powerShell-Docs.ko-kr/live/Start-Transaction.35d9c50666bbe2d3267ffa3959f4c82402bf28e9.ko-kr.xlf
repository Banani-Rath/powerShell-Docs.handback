<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ko-kr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-1c394fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">6eba542085a3dcf901e4bae09d47a344c9784466</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">reference\4.0\Microsoft.PowerShell.Management\Start-Transaction.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions" />
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ea2fae362b591d50466a66f57ac8c8ae5be43e0d</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">4db2f8b773319d686dc2ea5d762121317e1a882a</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>powershell, cmdlet</source>
          <target state="translated">powershell cmdlet</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Start-Transaction</source>
          <target state="translated">Start-Transaction</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Start-Transaction</source>
          <target state="translated">Start-Transaction</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>SYNOPSIS</source>
          <target state="translated">요약</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Starts a transaction.</source>
          <target state="translated">트랜잭션을 시작합니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>SYNTAX</source>
          <target state="translated">구문</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>DESCRIPTION</source>
          <target state="translated">설명</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>The Start-Transaction cmdlet starts a transaction, which is a series of commands that are managed as a unit.</source>
          <target state="translated">Start-Transaction cmdlet은 하나의 단위로 관리되는 일련의 명령인 트랜잭션을 시작합니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>A transaction can be completed ("committed"), or it can be completely undone ("rolled back") so that any data changed by the transaction is restored to its original state.</source>
          <target state="translated">트랜잭션은 완료("커밋") 또는 완전히 취소("롤백")할 수 있으므로 트랜잭션으로 변경된 모든 데이터는 원래의 상태로 복원할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Because the commands in a transaction are managed as a unit, either all commands are committed or all commands are rolled back.</source>
          <target state="translated">트랜잭션의 명령은 하나의 단위로 관리되므로 모든 명령이 커밋되거나 롤백됩니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>By default, transactions are rolled back automatically if any command in the transaction generates an error, but you can use the RollbackPreference parameter to change this behavior.</source>
          <target state="translated">기본적으로 트랜잭션의 명령이 오류를 생성하면 트랜잭션이 자동으로 롤백되지만 RollbackPreference 매개 변수를 사용하여 이 동작을 변경할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>The cmdlets used in a transaction must be designed to support transactions.</source>
          <target state="translated">트랜잭션에 사용된 cmdlet은 트랜잭션을 지원해야 합니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Cmdlets that support transactions have a UseTransaction parameter.</source>
          <target state="translated">트랜잭션을 지원하는 cmdlet은 UseTransaction 매개 변수를 갖습니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>To perform transactions in a provider, the provider must support transactions.</source>
          <target state="translated">공급자에서 트랜잭션을 수행하려면 공급자가 트랜잭션을 지원해야 합니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>The Windows PowerShell Registry provider in Windows Vista and later versions of Windows supports transactions.</source>
          <target state="translated">Windows Vista 이상 버전의 Windows PowerShell 레지스트리는 트랜잭션을 지원합니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>You can also use the Microsoft.PowerShell.Commands.Management.TransactedString class to include expressions in transactions on any version of Windows that supports Windows PowerShell.</source>
          <target state="translated">또한 Microsoft.PowerShell.Commands.Management.TransactedString 클래스를 사용하여 Windows PowerShell을 지원하는 모든 Windows 버전의 트랜잭션에 식을 포함할 수도 있습니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Other Windows PowerShell providers can also support transactions.</source>
          <target state="translated">다른 Windows PowerShell 공급자도 트랜잭션을 지원할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Only one transaction can be active at a time.</source>
          <target state="translated">한 번에 하나의 트랜잭션만 활성화할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>If you start a new, independent transaction while a transaction is in progress (neither completed nor undone), the new transaction becomes the active transaction, and you must commit or roll back the new transaction before making any changes to the original transaction.</source>
          <target state="translated">트랜잭션을 완료하거나 취소하지 않고 새로운 독립 트랜잭션을 시작하면 새 트랜잭션이 활성 트랜잭션이 되며 원본 트랜잭션을 변경하기 전에 새 트랜잭션을 커밋하거나 롤백해야 합니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>The Start-Transaction cmdlet is one of a set of cmdlets that support the transactions feature in Windows PowerShell.</source>
          <target state="translated">Start-Transaction cmdlet은 Windows PowerShell의 트랜잭션 기능을 지원하는 cmdlet 집합 중 하나입니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>For more information, see about_Transactions.</source>
          <target state="translated">자세한 내용은 about_Transactions를 참조하세요.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>EXAMPLES</source>
          <target state="translated">예제</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>-------------------------- EXAMPLE 1 --------------------------</source>
          <target state="translated">-------------------------- 예제 1 --------------------------</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>These commands start and then roll back a transaction.</source>
          <target state="translated">이들 명령은 트랜잭션을 시작한 후 롤백합니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Because the transaction is rolled back, no changes are made to the registry.</source>
          <target state="translated">트랜잭션이 롤백되므로 레지스트리가 변경되지 않습니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>-------------------------- EXAMPLE 2 --------------------------</source>
          <target state="translated">-------------------------- EXAMPLE 2 --------------------------</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>These commands start and then complete a transaction.</source>
          <target state="translated">이들 명령은 전체 트랜잭션을 시작한 후 완료합니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>No changes are made to the registry until the Complete-Transaction command is used.</source>
          <target state="translated">Complete-Transaction 명령을 사용할 때까지 레지스트리가 변경되지 않습니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>-------------------------- EXAMPLE 3 --------------------------</source>
          <target state="translated">-------------------------- EXAMPLE 3 --------------------------</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>This example demonstrates the effect of changing the RollbackPreference parameter value.</source>
          <target state="translated">이 예제에서는 RollbackPreference 매개 변수 값을 변경하는 효과를 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>In the first set of commands, the Start-Transaction command does not use the RollbackPreference parameter.</source>
          <target state="translated">첫 번째 명령 집합에서 Start-Transaction 명령은 RollbackPreference 매개 변수를 사용하지 않습니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>As a result, the default value ("Error") is used.</source>
          <target state="translated">그 결과 기본값 "Error"가 사용됩니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>When an error occurs in a transaction command (the specified path does not exist), the transaction is automatically rolled back.</source>
          <target state="translated">트랜잭션 명령에서 오류가 발생하면 즉 지정한 경로가 존재하지 않으면 트랜잭션이 자동으로 롤백됩니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>In the second set of commands, the Start-Transaction command uses the RollbackPreference parameter with a value of "Never".</source>
          <target state="translated">두 번째 명령 집합에서 Start-Transaction 명령은 값이 "Never"인 RollbackPreference 매개 변수를 사용합니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>As a result, when an error occurs in a transaction command, the transaction is still active and can be completed successfully.</source>
          <target state="translated">그 결과 트랜잭션 명령에 오류가 발생해도 트랜잭션이 여전히 활성 상태가 되므로 성공적으로 완료할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Because most transactions must be performed without error, the default value of the RollbackPreference parameter is typically preferred.</source>
          <target state="translated">대부분의 트랜잭션은 오류 없이 수행해야 하므로 일반적으로 RollbackPreference 매개 변수의 기본값을 사용하는 것이 좋습니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>-------------------------- EXAMPLE 4 --------------------------</source>
          <target state="translated">-------------------------- EXAMPLE 4 --------------------------</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>This example shows the effect of using the Start-Transaction command while a transaction is in progress.</source>
          <target state="translated">이 예제에서는 트랜잭션 진행 중 Start-Transaction 명령을 사용하는 효과를 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>The effect is much like joining the transaction in progress.</source>
          <target state="translated">효과는 진행 중인 트랜잭션에 가입하는 것과 매우 유사합니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Although this is a simplified command, this scenario commonly occurs when the transaction involves running a script that includes a complete transaction.</source>
          <target state="translated">간단한 명령이지만 이 시나리오는 트랜잭션이 전체 트랜잭션을 포함하는 스크립트 실행과 관련된 경우 흔히 발생합니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>The first Start-Transaction command starts the transaction.</source>
          <target state="translated">첫 번째 Start-Transaction 명령은 트랜잭션을 시작합니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>The first New-Item command is part of the transaction.</source>
          <target state="translated">첫 번째 New-Item 명령도 트랜잭션의 일부입니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>The second Start-Transaction command adds a new subscriber to the transaction.</source>
          <target state="translated">두 번째 Start-Transaction 명령은 트랜잭션에 새 가입자를 추가합니다.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>The Get-Transaction command now returns a transaction with a subscriber count of 2.</source>
          <target state="translated">이제 Get-Transaction 명령은 구독자 수가 2인 트랜잭션을 반환합니다.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>The second New-Item command is part of the same transaction.</source>
          <target state="translated">두 번째 New-Item 명령은 동일한 트랜잭션의 일부입니다.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>No changes are made to the registry until the entire transaction is completed.</source>
          <target state="translated">전체 트랜잭션이 완료될 때까지 레지스트리가 변경되지 않습니다.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>To complete the transaction, you must enter two Complete-Transaction commands, one for each subscriber.</source>
          <target state="translated">트랜잭션을 완료하려면 각 가입자당 Complete-Transaction 명령을 두 번 입력해야 합니다.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>If you were to roll back the transaction at any point, the entire transaction would be rolled back for both subscribers.</source>
          <target state="translated">어느 시점에서 트랜잭션을 롤백하려면 두 가입자에 대해 전체 트랜잭션을 롤백해야 합니다.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>-------------------------- EXAMPLE 5 --------------------------</source>
          <target state="translated">-------------------------- EXAMPLE 5 --------------------------</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>This example shows the effect of using the Independent parameter of Start-Transaction to start a transaction while another transaction is in progress.</source>
          <target state="translated">이 예제에서는 다른 트랜잭션 진행 중 Start-Transaction의 독립 매개 변수를 사용하여 트랜잭션을 시작하는 효과를 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>In this case, the new transaction is rolled back without affecting the original transaction.</source>
          <target state="translated">이 경우 원본 트랜잭션에 영향을 주지 않고 새 트랜잭션이 롤백됩니다.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Although the transactions are logically independent, because only one transaction can be active at a time, you must roll back or commit the newest transaction before resuming work on the original transaction.</source>
          <target state="translated">트랜잭션은 논리적으로 독립적이지만 한 번의 한 개의 트랜잭션만 활성 상태일 수 있으므로 원본 트랜잭션 작업을 다시 시작하기 전에 최신의 트랜잭션을 롤백하거나 커밋해야 합니다.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>The first set of commands starts a transaction.</source>
          <target state="translated">첫 번째 명령은 트랜잭션을 시작합니다.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>The New-Item command is part of the first transaction.</source>
          <target state="translated">New-Item 명령은 첫 번째 트랜잭션의 일부입니다.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>In the second set of commands, the Start-Transaction command uses the Independent parameter.</source>
          <target state="translated">두 번째 명령에서 Start-Transaction 명령은 Independent 매개 변수를 사용합니다.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>The Get-Transaction command that follows shows the transaction object for the active transaction (the newest one).</source>
          <target state="translated">다음의 Get-Transaction 명령은 활성(최신) 트랜잭션의 트랜잭션 개체를 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>The subscriber count is equal to 1, showing that the transactions are unrelated.</source>
          <target state="translated">가입자 수가 1이므로 트랜잭션이 관련되지 않았음을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>When the active transaction is rolled back by using an Undo-Transaction command, the original transaction becomes active again.</source>
          <target state="translated">Undo-Transaction 명령을 사용하여 활성 트랜잭션을 롤백하면 원본 트랜잭션이 다시 활성화됩니다.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>The New-ItemProperty command, which is part of the original transaction, completes without error, and the original transaction can be completed by using the Complete-Transaction command.</source>
          <target state="translated">원본 트랜잭션의 일부인 New-ItemProperty 명령은 오류 없이 완료되며, Complete-Transaction 명령을 사용하여 원본 트랜잭션을 완료할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>As a result, the registry is changed.</source>
          <target state="translated">그 결과 레지스트리가 변경됩니다.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>-------------------------- EXAMPLE 6 --------------------------</source>
          <target state="translated">-------------------------- EXAMPLE 6 --------------------------</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>This example demonstrates that commands that are submitted while a transaction is in progress can be included in the transaction or not included.</source>
          <target state="translated">이 예제에서는 트랜잭션 진행 중 전송된 명령이 트랜잭션에 포함되는지 여부를 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>Only commands that use the UseTransaction parameter are part of the transaction.</source>
          <target state="translated">UseTransaction 매개 변수를 사용하는 명령만 트랜잭션의 일부입니다.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>The first and third New-Item commands use the UseTransaction parameter.</source>
          <target state="translated">첫 번째 및 세 번째 New-Item 명령은 UseTransaction 매개 변수를 사용하므로</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>These commands are part of the transaction.</source>
          <target state="translated">트랜잭션의 일부입니다.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>Because the second New-Item command does not use the UseTransaction parameter, it is not part of the transaction.</source>
          <target state="translated">두 번째 New-Item 명령은 UseTransaction 매개 변수를 사용하지 않으므로 트랜잭션의 일부가 아닙니다.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>The first "dir" command shows the effect.</source>
          <target state="translated">첫 번째 "dir" 명령은 해당 효과를 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>The second New-Item command is completed immediately, but the first and third New-Item commands are not effective until the transaction is committed.</source>
          <target state="translated">두 번째 New-Item 명령은 즉시 완료되지만 첫 번째 및 세 번째 New-Item 명령은 트랜잭션이 커밋될 때까지 적용되지 않습니다.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>The Complete-Transaction command commits the transaction.</source>
          <target state="translated">Complete-Transaction 명령은 트랜잭션을 커밋합니다.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>As a result, the second "dir" command shows that all of the new items are added to the registry.</source>
          <target state="translated">그 결과 두 번째 "dir" 명령은 모든 새 항목이 레지스트리에 추가되는 것을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>-------------------------- EXAMPLE 7 --------------------------</source>
          <target state="translated">-------------------------- EXAMPLE 7 --------------------------</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>This command uses the Timeout parameter of Start-Transaction to start a transaction that must be completed within two minutes.</source>
          <target state="translated">이 명령은 Start-Transaction의 Timeout 매개 변수를 사용하여 2분 내에 완료해야 하는 트랜잭션을 시작합니다.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>If the transaction is not complete when the timeout expires, it is rolled back automatically.</source>
          <target state="translated">제한 시간 내에 트랜잭션이 완료되지 않으면 자동으로 롤백됩니다.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>When the timeout expires, you are not notified, but the Status property of the transaction object is set to RolledBack and commands that use the UseTransaction parameter fail.</source>
          <target state="translated">제한 시간이 만료되어도 메시지는 나타나지 않지만 트랜잭션 개체의 Status 속성이 RolledBack으로 설정되고 UseTransaction 매개 변수를 사용하는 명령이 실패합니다.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>PARAMETERS</source>
          <target state="translated">매개 변수</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>-Independent</source>
          <target state="translated">독립적인</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>Starts a transaction that is independent of any transactions in progress.</source>
          <target state="translated">진행 중인 트랜잭션에 독립적인 트랜잭션을 시작합니다.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>By default, if you use Start-Transaction while another transaction is in progress, a new subscriber is added to the transaction in progress.</source>
          <target state="translated">기본적으로 다른 트랜잭션이 진행 중일 때 Start-Transaction을 사용하면 진행 중인 트랜잭션에 새 가입자가 추가됩니다.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>This parameter has an effect only when a transaction is already in progress in the session.</source>
          <target state="translated">이 매개 변수는 세션에서 트랜잭션이 이미 진행 중인 경우에만 적용됩니다.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>By default, if you use Start-Transaction while a transaction is in progress, the existing transaction object is reused and the subscriber count is incremented.</source>
          <target state="translated">기본적으로 트랜잭션이 진행 중일 때 Start-Transaction을 사용하면 기존 트랜잭션 개체가 다시 사용되고 가입자 수가 증가합니다.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>The effect is much like joining the original transaction.</source>
          <target state="translated">결과는 원본 트랜잭션 가입과 매우 유사합니다.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>An Undo-Transaction command rolls back the entire the transaction.</source>
          <target state="translated">Undo-Transaction 명령은 전체 트랜잭션을 롤백합니다.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>To complete the transaction, you must enter a Complete-Transaction command for each subscriber.</source>
          <target state="translated">트랜잭션을 완료하려면 각 가입자에 대해 Complete-Transaction 명령을 입력해야 합니다.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>Because most transactions that are in progress at the same time are related, the default is sufficient for most uses.</source>
          <target state="translated">동시에 진행 중인 트랜잭션은 거의 관련되어 있으므로 대부분의 경우 기본값을 사용하면 됩니다.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>If you use the Independent parameter, a new transaction is created that can be completed or undone without affecting the original transaction.</source>
          <target state="translated">Independent 매개 변수를 사용하는 경우 원본 트랜잭션에 영향을 주지 않고 완료하거나 취소할 수 있는 새 트랜잭션이 만들어집니다.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>However, because only one transaction can be active at a time, you must complete or roll back the new transaction before resuming work on the original transaction.</source>
          <target state="translated">그러나 한 번의 한 개의 트랜잭션만 활성 상태일 수 있으므로 새 트랜잭션을 완료하거나 롤백해야만 원본 트랜잭션을 다시 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>-RollbackPreference</source>
          <target state="translated">-RollbackPreference</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>Specifies the conditions under which a transaction is automatically rolled back.</source>
          <target state="translated">트랜잭션이 자동으로 롤백되는 조건을 지정합니다.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>The default value is "Error".</source>
          <target state="translated">기본값은 "Error"입니다.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>Valid values are:</source>
          <target state="translated">유효한 값은</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>Error:  The transaction is rolled back automatically if a terminating or non-terminating error occurs.</source>
          <target state="translated">오류: 트랜잭션이 롤백됩니다 종료 또는 종료 되지 않는 오류가 발생 하는 경우 자동으로 백업 합니다.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>"Error" is the default.</source>
          <target state="translated">기본값은 "Error"입니다.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>Terminating error: The transaction is rolled back automatically if a terminating error occurs.</source>
          <target state="translated">종료 오류: 트랜잭션이 종료 오류가 발생 하는 경우 자동으로 백업 합니다.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>Never: The transaction is never rolled back automatically.</source>
          <target state="translated">안 함: 트랜잭션이 되지 자동으로 롤백됩니다.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>-Timeout</source>
          <target state="translated">시간 제한</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>Specifies the maximum time, in minutes, that the transaction is active.</source>
          <target state="translated">트랜잭션이 활성 상태일 수 있는 최대 시간(분)을 지정합니다.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>When the time-out expires, the transaction is automatically rolled back.</source>
          <target state="translated">제한 시간이 만료되면 트랜잭션이 자동으로 롤백됩니다.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>By default, there is no time-out for transactions that are started at the command line.</source>
          <target state="translated">기본적으로 명령줄에서 시작된 트랜잭션에 대한 제한 시간은 없습니다.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>When transactions are started by a script, the default time-out is 30 minutes.</source>
          <target state="translated">트랜잭션을 스크립트로 시작하면 기본 제한 시간은 30분입니다.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>-Confirm</source>
          <target state="translated">-Confirm</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>Prompts you for confirmation before running the cmdlet.Prompts you for confirmation before running the cmdlet.</source>
          <target state="translated">이 cmdlet을 실행 하기 전에 확인 하면 메시지를 표시 합니다. 이 cmdlet을 실행 하기 전에 확인 하면 메시지를 표시 합니다.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>-WhatIf</source>
          <target state="translated">-WhatIf</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>Shows what would happen if the cmdlet runs.</source>
          <target state="translated">cmdlet이 실행될 경우 결과 동작을 표시합니다.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>The cmdlet is not run.Shows what would happen if the cmdlet runs.</source>
          <target state="translated">Cmdlet은 실행 되지 않습니다. Cmdlet이 실행 되 면 어떻게 되는지를 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>The cmdlet is not run.</source>
          <target state="translated">cmdlet이 실행되지 않습니다.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>CommonParameters</source>
          <target state="translated">CommonParameters</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutVariable, -OutBuffer, -PipelineVariable, -Verbose, -WarningAction, and -WarningVariable.</source>
          <target state="translated">이 cmdlet은 공통 매개 변수:-디버그,-ErrorAction,-ErrorVariable,-InformationAction,-InformationVariable,-OutVariable,-OutBuffer,-PipelineVariable,-Verbose,-WarningAction 및-warningvariable을 지원 합니다.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>For more information, see about_CommonParameters (http://go.microsoft.com/fwlink/?LinkID=113216).</source>
          <target state="translated">자세한 내용은 about_CommonParameters (http://go.microsoft.com/fwlink/?LinkID=113216)를 참조 합니다.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>INPUTS</source>
          <target state="translated">입력</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>None</source>
          <target state="translated">없음</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>You cannot pipe input to this cmdlet.</source>
          <target state="translated">이 cmdlet에 입력을 파이프할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>OUTPUTS</source>
          <target state="translated">출력</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>None</source>
          <target state="translated">없음</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>This cmdlet does not generate any output.</source>
          <target state="translated">이 cmdlet은 어떠한 출력도 생성하지 않습니다.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>NOTES</source>
          <target state="translated">참고 사항</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>RELATED LINKS</source>
          <target state="translated">관련된 링크</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>Complete-Transaction</source>
          <target state="translated">Complete-Transaction</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>Get-Transaction</source>
          <target state="translated">Get-Transaction</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>Undo-Transaction</source>
          <target state="translated">Undo-Transaction</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>Use-Transaction</source>
          <target state="translated">Use-Transaction</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>about_Transactions</source>
          <target state="translated">about_Transactions</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>