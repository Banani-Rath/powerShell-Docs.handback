<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ko-kr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-1c394fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d28a2260df4056a39f99d42991f40aaaf1cb0c84</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">reference\4.0\Microsoft.PowerShell.Utility\Get-TypeData.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions" />
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">9b063e685c9dd93f1a078a91c7e10f86b3549ea1</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">025015b0fd63591b3fbbfb4582b4df3bde7e7ce1</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>powershell, cmdlet</source>
          <target state="translated">powershell cmdlet</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Get-TypeData</source>
          <target state="translated">Get-TypeData</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Get-TypeData</source>
          <target state="translated">Get-TypeData</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>SYNOPSIS</source>
          <target state="translated">요약</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Gets the extended type data in the current session.</source>
          <target state="translated">현재 세션에 있는 확장 유형 데이터를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>SYNTAX</source>
          <target state="translated">구문</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>DESCRIPTION</source>
          <target state="translated">설명</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>Get-TypeData<ept id="p1">**</ept> cmdlet gets the extended type data in the current session.</source>
          <target state="translated"> <bpt id="p1">**</bpt>Get-typedata<ept id="p1">**</ept> cmdlet은 현재 세션에서 확장된 유형 데이터를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>This includes type data that was added to the session by Types.ps1xml file and dynamic type data that was added by using the parameter of the Update-TypeData cmdlet.</source>
          <target state="translated">Update-typedata cmdlet의 매개 변수를 사용 하 여 추가 된 유형 데이터 및 Types.ps1xml 파일에서 세션에 추가 된 형식 데이터가 포함 됩니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>You can use the extended type data that <bpt id="p1">**</bpt>Get-TypeData<ept id="p1">**</ept> returns to examine the type data in the session and send it to the <bpt id="p2">**</bpt>Update-TypeData<ept id="p2">**</ept> and <bpt id="p3">**</bpt>Remove-TypeData<ept id="p3">**</ept> cmdlets.</source>
          <target state="translated">확장된 유형 데이터를 사용할 수 있는 <bpt id="p1">**</bpt>Get-typedata<ept id="p1">**</ept> 세션에 유형 데이터를 검사 한 후에 반환은 <bpt id="p2">**</bpt>Update-typedata<ept id="p2">**</ept> 및 <bpt id="p3">**</bpt>Remove-typedata<ept id="p3">**</ept> cmdlet.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Extended type data adds properties and methods to objects in Windows PowerShell.</source>
          <target state="translated">확장 유형 데이터는 Windows PowerShell의 개체에 속성과 메서드를 추가합니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>You can use the added properties and methods in the same ways that you would use the properties and methods that are defined in the object type.</source>
          <target state="translated">개체 유형에 정의된 속성 및 메서드와 동일한 방식으로 추가된 속성과 메서드를 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>However, when writing scripts, be aware that the added properties and methods might not be present in every Windows PowerShell session.</source>
          <target state="translated">그러나 스크립트를 작성할 때 추가된 속성과 메서드가 일부 Windows PowerShell 세션에는 없을 수 있음을 명심하세요.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>For more information about Types.ps1xml files, see about_Types.ps1xml (http://go.microsoft.com/fwlink/?LinkID=113274).</source>
          <target state="translated">Types.ps1xml 파일에 대 한 자세한 내용은 about_Types.ps1xml (http://go.microsoft.com/fwlink/?LinkID=113274)을 참조 하세요.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>For more information about dynamic type data that the <bpt id="p1">**</bpt>Update-TypeData<ept id="p1">**</ept> cmdlet adds, see Update-TypeData.</source>
          <target state="translated">동적 형식 데이터에 대 한 자세한 내용은 하는 <bpt id="p1">**</bpt>Update-typedata<ept id="p1">**</ept> Update-typedata 참조 cmdlet에서 추가 합니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>This cmdlet is introduced in Windows PowerShell 3.0.</source>
          <target state="translated">이 cmdlet은 Windows PowerShell 3.0에서 도입되었습니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>EXAMPLES</source>
          <target state="translated">예제</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Example 1</source>
          <target state="translated">예제 1</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>This command gets all extended type data in the current session.</source>
          <target state="translated">이 명령은 현재 세션에 있는 모든 확장 유형 데이터를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Example 2</source>
          <target state="translated">예 2</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>This command gets all types in the current session that have names that contain "Eventing".</source>
          <target state="translated">이 명령은 현재 세션에서 이름에 "Eventing"이 포함된 모든 유형을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>1:</source>
          <target state="translated">1:</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>This command gets the script block that creates the value of the <bpt id="p1">**</bpt>EventID<ept id="p1">**</ept> property of <bpt id="p2">**</bpt>EventLogEntry<ept id="p2">**</ept> objects.</source>
          <target state="translated">이 명령은 값을 만드는 스크립트 블록은 <bpt id="p1">**</bpt>EventID<ept id="p1">**</ept> 속성의 <bpt id="p2">**</bpt>EventLogEntry<ept id="p2">**</ept> 개체.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Example 3</source>
          <target state="translated">예제 3</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>This command gets the script block that defines the <bpt id="p1">**</bpt>DateTime<ept id="p1">**</ept> property of <bpt id="p2">**</bpt>System.DateTime<ept id="p2">**</ept> objects in Windows PowerShell.</source>
          <target state="translated">이 명령은 스크립트 블록을 정의 하는 <bpt id="p1">**</bpt>DateTime<ept id="p1">**</ept> 속성 <bpt id="p2">**</bpt>System.DateTime<ept id="p2">**</ept> Windows PowerShell의에서 개체입니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>The command uses the <bpt id="p1">**</bpt>Get-TypeData<ept id="p1">**</ept> cmdlet to get the extended type data for the <bpt id="p2">**</bpt>System.DataTime<ept id="p2">**</ept> type.</source>
          <target state="translated">명령을 사용 하는 <bpt id="p1">**</bpt>Get-typedata<ept id="p1">**</ept> cmdlet에 대 한 확장된 유형 데이터를 가져올 수는 <bpt id="p2">**</bpt>System.DataTime<ept id="p2">**</ept> 형식입니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>The command gets the <bpt id="p1">**</bpt>Members<ept id="p1">**</ept> property of the <bpt id="p2">**</bpt>TypeData<ept id="p2">**</ept> object.</source>
          <target state="translated">명령은 가져옵니다는 <bpt id="p1">**</bpt>멤버<ept id="p1">**</ept> 속성은 <bpt id="p2">**</bpt>TypeData<ept id="p2">**</ept> 개체입니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>Members<ept id="p1">**</ept> property contains  a hash table of properties and methods that are defined by extended type data.</source>
          <target state="translated"> <bpt id="p1">**</bpt>멤버<ept id="p1">**</ept> 속성의 속성 및 확장된 유형 데이터에서 정의 된 메서드는 해시 테이블을 포함 합니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Each key in the Members hash table is a property or method name and each value is the definition of the property or method value.</source>
          <target state="translated">Members 해시 테이블의 각 키는 속성 또는 메서드 이름이고 각 값은 속성 또는 메서드 값의 정의입니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>The command gets the <bpt id="p1">**</bpt>DateTime<ept id="p1">**</ept> key in Members and its <bpt id="p2">**</bpt>GetScriptBlock<ept id="p2">**</ept> property value.</source>
          <target state="translated">명령은 가져옵니다는 <bpt id="p1">**</bpt>DateTime<ept id="p1">**</ept> 멤버의 키와 해당 <bpt id="p2">**</bpt>GetScriptBlock<ept id="p2">**</ept> 속성 값입니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>The output shows the script block that creates the value of the <bpt id="p1">**</bpt>DateTime<ept id="p1">**</ept> property of every <bpt id="p2">**</bpt>System.DateTime<ept id="p2">**</ept> object in Windows PowerShell.</source>
          <target state="translated">출력 값을 만드는 스크립트 블록에 표시는 <bpt id="p1">**</bpt>DateTime<ept id="p1">**</ept> 속성의 모든 <bpt id="p2">**</bpt>System.DateTime<ept id="p2">**</ept> Windows PowerShell의 개체입니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Example 4</source>
          <target state="translated">예제 4</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>This command finds the Types.ps1xml file that added extended type data for the <bpt id="p1">**</bpt>EventLogEntry<ept id="p1">**</ept> type to the session.</source>
          <target state="translated">이 명령은 Types.ps1xml 파일에 대 한 확장된 유형 데이터를 추가 하는 찾습니다는 <bpt id="p1">**</bpt>EventLogEntry<ept id="p1">**</ept> 세션에 대 한 유형입니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>This command uses the <bpt id="p1">**</bpt>Get-ChildItem<ept id="p1">**</ept> cmdlet (alias = "dir") to perform a recursive search for Types.ps1xml files in the Windows PowerShell installation directory ($pshome) and its subdirectories.</source>
          <target state="translated">이 명령을 사용 하는 <bpt id="p1">**</bpt>Get-childitem<ept id="p1">**</ept> cmdlet (별칭 = "dir") Windows PowerShell 설치 디렉터리 ($pshome) 및 하위 디렉터리에서 Types.ps1xml 파일에 대 한 재귀 검색을 수행 하 합니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>The command sends the Types.ps1xml files to the Select-String cmdlet, which does a full-text search for the "<bpt id="p1">**</bpt>EventLogEntry<ept id="p1">**</ept>" type name in the files and returns the matches.</source>
          <target state="translated">명령은 Select-string cmdlet가 전체 텍스트 검색으로 Types.ps1xml 파일을 보냅니다는 "<bpt id="p1">**</bpt>EventLogEntry<ept id="p1">**</ept>"의 형식 이름에서 파일 및 일치 하는 항목을 반환 합니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>PARAMETERS</source>
          <target state="translated">매개 변수</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>-TypeName</source>
          <target state="translated">-TypeName</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Gets type data only for the types with the specified names.</source>
          <target state="translated">지정한 이름을 가진 유형에 대한 유형 데이터만 가져옵니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>By default, <bpt id="p1">**</bpt>Get-TypeData<ept id="p1">**</ept> gets all types in the session.</source>
          <target state="translated">기본적으로 <bpt id="p1">**</bpt>Get-typedata<ept id="p1">**</ept> 세션에서 모든 형식을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Enter type names or a name patterns.</source>
          <target state="translated">유형 이름 또는 이름 패턴을 입력합니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Full names (or name patterns with wildcard characters) are required, even for types in the System namespace.</source>
          <target state="translated">System 네임스페이스에 있는 유형도 전체 이름(또는 와일드카드 문자가 포함된 이름 패턴)이 필요합니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Wildcards are supported and the parameter name (-TypeName) is optional.</source>
          <target state="translated">와일드카드가 지원되며 매개 변수 이름(-TypeName)은 선택 사항입니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>You can also pipe type names to <bpt id="p1">**</bpt>Get-TypeData<ept id="p1">**</ept>.</source>
          <target state="translated">형식 이름을 파이프 수도 <bpt id="p1">**</bpt>Get-typedata<ept id="p1">**</ept>합니다.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>CommonParameters</source>
          <target state="translated">CommonParameters</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutVariable, -OutBuffer, -PipelineVariable, -Verbose, -WarningAction, and -WarningVariable.</source>
          <target state="translated">이 cmdlet은 공통 매개 변수:-디버그,-ErrorAction,-ErrorVariable,-InformationAction,-InformationVariable,-OutVariable,-OutBuffer,-PipelineVariable,-Verbose,-WarningAction 및-warningvariable을 지원 합니다.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>For more information, see about_CommonParameters (http://go.microsoft.com/fwlink/?LinkID=113216).</source>
          <target state="translated">자세한 내용은 about_CommonParameters (http://go.microsoft.com/fwlink/?LinkID=113216)를 참조 합니다.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>INPUTS</source>
          <target state="translated">입력</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>System.String</source>
          <target state="translated">System.String</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>You can pipe type names to <bpt id="p1">**</bpt>Get-TypeData<ept id="p1">**</ept>.</source>
          <target state="translated">형식 이름을 파이프할 수 <bpt id="p1">**</bpt>Get-typedata<ept id="p1">**</ept>합니다.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>OUTPUTS</source>
          <target state="translated">출력</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>System.Management.Automation.Runspaces.TypeData</source>
          <target state="translated">System.Management.Automation.Runspaces.TypeData</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>NOTES</source>
          <target state="translated">참고 사항</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Get-TypeData<ept id="p1">**</ept> gets only the extended type data in the current session.</source>
          <target state="translated"><bpt id="p1">**</bpt>Get-typedata<ept id="p1">**</ept> 현재 세션에서 확장된 유형 데이터만 가져옵니다.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>It does not get extended type data that is on the computer, but has not been added to the current session, such as extended types that are defined in modules that have not been imported into the current session.</source>
          <target state="translated">컴퓨터에 있지만 현재 세션에 추가되지 않은 확장 유형 데이터(에: 현재 세션으로 가져오지 않은 모듈에서 정의된 확장 유형)는 가져오지 않습니다.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>RELATED LINKS</source>
          <target state="translated">관련된 링크</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>about_Types.ps1xml</source>
          <target state="translated">about_Types.ps1xml</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Remove-TypeData</source>
          <target state="translated">Remove-TypeData</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Update-TypeData</source>
          <target state="translated">Update-TypeData</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>