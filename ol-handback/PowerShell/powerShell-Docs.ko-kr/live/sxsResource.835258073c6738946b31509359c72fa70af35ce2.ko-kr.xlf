<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ko-kr">
    <header>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">a770b81f2fa2457b15e7711b74d0df87637b05e0</xliffext:olfilehash>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-9794c66" tool-company="Microsoft" />
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Using resources with multiple versions</source>
          <target state="translated">여러 버전의 리소스 사용</target>         
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Applies To: Windows PowerShell 5.0</source>
          <target state="translated">적용 대상: Windows PowerShell 5.0</target>         
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>In PowerShell 5.0, DSC resources can have multiple versions, and versions can be installed on a computer side-by-side.</source>
          <target state="translated">PowerShell 5.0에서 DSC 리소스는 여러 버전이 있을 수 있으며, 이러한 버전들을 컴퓨터에 병렬로 설치할 수 있습니다.</target>         
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>This is implemented by having multiple versions of a resource module</source>
          <target state="translated">이는 동일한 모듈 폴더에 포함된 여러 버전의</target>         
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>that are contained in the same module folder.</source>
          <target state="translated">리소스 모듈에 의해 구현됩니다.</target>         
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Installing multiple resource versions side-by-side</source>
          <target state="translated">여러 리소스 버전을 병렬로 설치</target>         
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>You can use the <bpt id="p1">**</bpt>MinimumVersion<ept id="p1">**</ept>, <bpt id="p2">**</bpt>MaximumVersion<ept id="p2">**</ept>, and <bpt id="p3">**</bpt>RequiredVersion<ept id="p3">**</ept> parameters of the <bpt id="p4">[</bpt>Install-Module<ept id="p4">](https://technet.microsoft.com/en-us/library/dn807162.aspx)</ept> cmdlet to specify</source>
          <target state="translated"><bpt id="p4">[</bpt>Install-Module<ept id="p4">](https://technet.microsoft.com/en-us/library/dn807162.aspx)</ept> cmdlet의 <bpt id="p1">**</bpt>MinimumVersion<ept id="p1">**</ept>, <bpt id="p2">**</bpt>MaximumVersion<ept id="p2">**</ept> 및 <bpt id="p3">**</bpt>RequiredVersion<ept id="p3">**</ept>를 사용하여 설치할</target>         
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>which version of a module to install.</source>
          <target state="translated">모듈 버전을 지정할 수 있습니다.</target>         
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Calling <bpt id="p1">**</bpt>Install-Module<ept id="p1">**</ept> without specifying a version installs the most recent version.</source>
          <target state="translated">버전을 지정하지 않고 <bpt id="p1">**</bpt>Install-Module<ept id="p1">**</ept>을 호출하면 가장 최근 버전이 설치됩니다.</target>         
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>For example, there are multiple versions of the <bpt id="p1">**</bpt>xFailOverCluster<ept id="p1">**</ept> module, each of which contains an <bpt id="p2">**</bpt>xCluster<ept id="p2">**</ept> resouce.</source>
          <target state="translated">예를 들어 <bpt id="p1">**</bpt>xFailOverCluster<ept id="p1">**</ept> 모듈의 여러 버전이 있고, 각 버전에는 <bpt id="p2">**</bpt>xCluster<ept id="p2">**</ept> 리소스가 포함되어 있습니다.</target>         
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>The result of calling <bpt id="p1">**</bpt>Install-Module<ept id="p1">**</ept> without specifying the</source>
          <target state="translated">버전 번호를 지정하지 않고 <bpt id="p1">**</bpt>Install-Module<ept id="p1">**</ept>을 호출한</target>         
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>version number is as follows:</source>
          <target state="translated">결과는 다음과 같습니다.</target>         
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Now, if you call <bpt id="p1">**</bpt>Install-Module<ept id="p1">**</ept> again, but specify a <bpt id="p2">**</bpt>RequiredVersion<ept id="p2">**</ept> of 1.1.0.0, it results in the following:</source>
          <target state="translated"><bpt id="p1">**</bpt>Install-Module<ept id="p1">**</ept>을 다시 호출하고 <bpt id="p2">**</bpt>RequiredVersion<ept id="p2">**</ept> 1.1.0.0을 지정하면 그 결과는 다음과 같습니다.</target>         
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Specifying a resource version in a configuration</source>
          <target state="translated">구성에서 리소스 버전 지정</target>         
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>If you have multiple resources installed on a computer, you must specify the version of that resource when you use it in a configuration.</source>
          <target state="translated">컴퓨터에 여러 리소스가 설치되어 있으면, 해당 리소스의 버전을 지정한 후 구성에서 사용해야 합니다.</target>         
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>You do this by specifying the <bpt id="p1">**</bpt>ModuleVersion<ept id="p1">**</ept></source>
          <target state="translated">이 작업은 <bpt id="p1">**</bpt>Import-DscResource<ept id="p1">**</ept> 키워드의</target>         
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>parameter of the <bpt id="p1">**</bpt>Import-DscResource<ept id="p1">**</ept> keyword.</source>
          <target state="translated"> <bpt id="p1">**</bpt>ModuleVersion<ept id="p1">**</ept> 매개 변수를 지정해 수행할 수 있습니다.</target>         
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>If you fail to specify the version of a resource module of a resource of which you have more than one version installed, the configuration</source>
          <target state="translated">하나가 넘는 버전이 설치된 리소스의 리소스 모듈 버전을 지정하지 않으면 구성에서</target>         
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>generates an error.</source>
          <target state="translated">오류가 발생 합니다.</target>         
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>The following configuration shows how to specify the version of the resource to call:</source>
          <target state="translated">다음 구성에서는 호출할 리소스의 버전을 지정하는 방법을 보여 줍니다.</target>         
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Note: The ModuleVersion parameter of Import-DscResource is not available in PowerShell 4.0.</source>
          <target state="translated">참고: Import-DscResource의 ModuleVersion 매개 변수는 PowerShell 4.0에서 사용할 수 없습니다.</target>         
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>In PowerShell 4.0, you can specify a module version by passing a module specification</source>
          <target state="translated">PowerShell 4.0에서는 모듈 사양 개체를 Import-DscResource의 ModuleName 매개 변수로</target>         
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>object to the ModuleName parameter of Import-DscResource.</source>
          <target state="translated">전달하여 모듈 버전을 지정할 수 있습니다.</target>         
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>A module specification object is a hashtable that contains ModuleName and RequiredVersion  keys.</source>
          <target state="translated">모듈 사양 개체는 모듈 이름 및 RequiredVersion 키가 포함된 해시 테이블입니다.</target>         
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>For example:</source>
          <target state="translated">예:</target>         
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>This will also work in PowerShell 5.0, but it is recommended that you use the <bpt id="p1">**</bpt>ModuleVersion<ept id="p1">**</ept> parameter.</source>
          <target state="translated">이 작업은 PowerShell 5.0에서도 동작하지만, 이 경우 <bpt id="p1">**</bpt>ModuleVersion<ept id="p1">**</ept> 매개 변수를 사용하는 것이 좋습니다.</target>         
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>See also</source>
          <target state="translated">참고 항목</target>         
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>DSC Configurations</source>
          <target state="translated">DSC 구성</target>         
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>DSC Resources</source>
          <target state="translated">DSC 리소스</target>         
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>