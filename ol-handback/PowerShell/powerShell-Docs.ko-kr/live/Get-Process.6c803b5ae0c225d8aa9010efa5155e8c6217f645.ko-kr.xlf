<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ko-kr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-1c394fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">757a691c88b181d39313c140178c2f86ae4ab321</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">reference\5.0\Microsoft.PowerShell.Management\Get-Process.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions" />
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">218ed0082ad00491b24b0c56716c2f75782fb947</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">a1ce43bc59277b98d2a56a03b76235cae5fc722e</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>powershell, cmdlet</source>
          <target state="translated">powershell cmdlet</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Get-Process</source>
          <target state="translated">Get-Process</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Get-Process</source>
          <target state="translated">Get-Process</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>SYNOPSIS</source>
          <target state="translated">요약</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Gets the processes that are running on the local computer or a remote computer.</source>
          <target state="translated">로컬 컴퓨터 또는 원격 컴퓨터에서 실행 중인 프로세스를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>SYNTAX</source>
          <target state="translated">구문</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Name (Default)</source>
          <target state="translated">이름 (기본값)</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>NameWithUserName</source>
          <target state="translated">NameWithUserName</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>IdWithUserName</source>
          <target state="translated">IdWithUserName</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Id</source>
          <target state="translated">Id</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>InputObjectWithUserName</source>
          <target state="translated">InputObjectWithUserName</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>InputObject</source>
          <target state="translated">InputObject</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>DESCRIPTION</source>
          <target state="translated">설명</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>Get-Process<ept id="p1">**</ept> cmdlet gets the processes on a local or remote computer.</source>
          <target state="translated"> <bpt id="p1">**</bpt>Get-process<ept id="p1">**</ept> cmdlet은 로컬 또는 원격 컴퓨터의 프로세스를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Without parameters, this cmdlet gets all of the processes on the local computer.</source>
          <target state="translated">매개 변수가 없을 경우이 cmdlet의 모든 프로세스를 가져옵니다 로컬 컴퓨터.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>You can also specify a particular process by process name or process ID (PID) or pass a process object through the pipeline to this cmdlet.</source>
          <target state="translated">특정 프로세스에서 프로세스 이름 또는 PID (프로세스 ID)를 지정 하거나이 cmdlet에 파이프라인을 통해 프로세스 개체를 전달할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>By default, this cmdlet returns a process object that has detailed information about the process and supports methods that let you start and stop the process.</source>
          <target state="translated">기본적으로이 cmdlet에 대 한 자세한 정보는 프로세스를 시작 하 고 프로세스를 중지할 수 있는 메서드를 지원 하 고 프로세스 개체를 반환 합니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>You can also use the parameters of the <bpt id="p1">**</bpt>Get-Process<ept id="p1">**</ept> cmdlet to get file version information for the program that runs in the process and to get the modules that the process loaded.</source>
          <target state="translated">매개 변수를 사용할 수도 있습니다는 <bpt id="p1">**</bpt>Get-process<ept id="p1">**</ept> cmdlet 프로세스에서 실행 되는 프로그램에 대 한 파일 버전 정보를 가져오고 프로세스에서 로드 된 모듈을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>EXAMPLES</source>
          <target state="translated">예제</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Example 1: Get a list of all active processes on the local computer</source>
          <target state="translated">예제 1: 로컬 컴퓨터에서 모든 활성 프로세스의 목록을 가져오려면</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>This command gets a list of all active processes running on the local computer.</source>
          <target state="translated">이 명령은 로컬 컴퓨터에서 실행 중인 모든 활성 프로세스의 목록을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>For a definition of each column, see the "Additional Notes" section of the Help topic for Get-Help.</source>
          <target state="translated">각 열에 대한 정의는 Get-Help 도움말 항목의 "추가 참고" 섹션을 참조하세요.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Example 2: Get all available data about one or more processes</source>
          <target state="translated">예 2: 하나 이상의 프로세스에 대 한 사용 가능한 모든 데이터를 가져오기</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>This command gets all available data about the Winword and Explorer processes on the computer.</source>
          <target state="translated">이 명령은 컴퓨터의 Winword 및 Explorer 프로세스에 대해 사용 가능한 모든 데이터를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>It uses the <bpt id="p1">*</bpt>Name<ept id="p1">*</ept> parameter to specify the processes, but it omits the optional parameter name.</source>
          <target state="translated">사용 하 여는 <bpt id="p1">*</bpt>이름<ept id="p1">*</ept> 매개 변수를 지정 하지만 프로세스, 선택적 매개 변수 이름은 생략 합니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>The pipeline operator (|) passes the data to the Format-List cmdlet, which displays all available properties (*) of the Winword and Explorer process objects.</source>
          <target state="translated">파이프라인 연산자(|)가 데이터를 Format-List cmdlet으로 전달하면 이 cmdlet이 Winword 및 Explorer 프로세스 개체의 사용 가능한 모든 속성(*)을 표시합니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>You can also identify the processes by their process IDs.</source>
          <target state="translated">프로세스 ID로 프로세스를 식별할 수도 있습니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>For instance, <ph id="ph1">`Get-Process -Id 664, 2060`</ph>.</source>
          <target state="translated">예를 들어, <ph id="ph1">`Get-Process -Id 664, 2060`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Example 3: Get all processes with a working set greater than a specified size</source>
          <target state="translated">예제 3: 지정된 된 크기 보다 크게 설정 중인 모든 프로세스를 가져옵니다</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>This command gets all processes that have a working set greater than 20 MB.</source>
          <target state="translated">이 명령은 작업 집합이 20MB보다 큰 프로세스를 모두 가져옵니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>It uses the <bpt id="p1">**</bpt>Get-Process<ept id="p1">**</ept>  cmdlet to get all running processes.</source>
          <target state="translated">사용 하 여는 <bpt id="p1">**</bpt>Get-process<ept id="p1">**</ept>  cmdlet을 실행 중인 모든 프로세스를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>The pipeline operator (|) passes the process objects to the Where-Object cmdlet, which selects only the object with a value greater than 20,000,000 bytes for the <bpt id="p1">**</bpt>WorkingSet<ept id="p1">**</ept> property.</source>
          <target state="translated">프로세스 개체에 대 한 20,000,000 바이트 보다 큰 값을 가진 개체만 선택 하는 Where-object cmdlet으로를 전달 하는 파이프라인 연산자 (|)는 <bpt id="p1">**</bpt>WorkingSet<ept id="p1">**</ept> 속성입니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>WorkingSet<ept id="p1">**</ept> is one of many properties of process objects.</source>
          <target state="translated"><bpt id="p1">**</bpt>WorkingSet<ept id="p1">**</ept> 프로세스 개체의 여러 속성 중 하나입니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>To see all of the properties, type <ph id="ph1">`Get-Process | Get-Member`</ph>.</source>
          <target state="translated">입력의 모든 속성을 보려면 <ph id="ph1">`Get-Process | Get-Member`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>By default, the values of all amount properties are in bytes, even though the default display lists them in kilobytes and megabytes.</source>
          <target state="translated">모든 수량 속성 값은 기본 표시에 킬로바이트 및 메가바이트 단위로 나열되더라도 기본적으로 바이트 단위입니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Example 4: List processes on the computer in groups based on priority</source>
          <target state="translated">예 4: 우선 순위에 따라 그룹의 컴퓨터에서 프로세스를 나열 합니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>These commands list the processes on the computer in groups based on their priority class.</source>
          <target state="translated">이러한 명령은 우선 순위 클래스를 기반으로 그룹의 컴퓨터에 있는 프로세스를 나열 합니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>The first command gets all the processes on the computer and then stores them in the $A variable.</source>
          <target state="translated">첫 번째 명령은 컴퓨터에 모든 프로세스를 가져오고 $A 변수에 저장 합니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>The second command uses the <bpt id="p1">*</bpt>InputObject<ept id="p1">*</ept> parameter to pass the process objects that are stored in the $A variable to the <bpt id="p2">**</bpt>Get-Process<ept id="p2">**</ept> cmdlet.</source>
          <target state="translated">두 번째 명령은 <bpt id="p1">*</bpt>InputObject<ept id="p1">*</ept> $A 변수에 저장 된 프로세스 개체를 전달할 매개 변수는 <bpt id="p2">**</bpt>Get-process<ept id="p2">**</ept> cmdlet입니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>The pipeline operator passes the objects to the <bpt id="p1">**</bpt>Format-Table<ept id="p1">**</ept> cmdlet, which formats the processes by using the Priority view.</source>
          <target state="translated">파이프라인 연산자는 개체를 전달 합니다.는 <bpt id="p1">**</bpt>Format-table<ept id="p1">**</ept> cmdlet이 우선 순위 보기를 사용 하 여 프로세스를 형식입니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>The Priority view, and other views, are defined in the PS1XML format files in the Windows PowerShell home directory ($pshome).</source>
          <target state="translated">우선 순위 보기 및 다른 보기는 Windows PowerShell 홈 디렉터리($pshome)의 PS1XML 형식 파일에 정의되어 있습니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Example 5: Add a property to the standard Get-Process output display</source>
          <target state="translated">예제 5: 표준 속성을 추가 하 Get-process 출력 표시</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>This example provides a <bpt id="p1">**</bpt>Format-Table<ept id="p1">**</ept> (alias = ft) command that adds the <bpt id="p2">**</bpt>MachineName<ept id="p2">**</ept> property to the standard <bpt id="p3">**</bpt>Get-Process<ept id="p3">**</ept> output display.</source>
          <target state="translated">이 예제에서는 제공는 <bpt id="p1">**</bpt>Format-table<ept id="p1">**</ept> (별칭 = ft) 명령을 추가 하는 <bpt id="p2">**</bpt>MachineName<ept id="p2">**</ept> 속성을 표준 <bpt id="p3">**</bpt>Get-process<ept id="p3">**</ept> 출력 표시 합니다.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Example 6: Get version information for a process</source>
          <target state="translated">예제 6: 프로세스에 대 한 버전 정보 가져오기</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>This command uses the <bpt id="p1">*</bpt>FileVersionInfo<ept id="p1">*</ept> parameter to get the version information for the PowerShell.exe file that is the main module for the PowerShell process.</source>
          <target state="translated">이 명령을 사용 하는 <bpt id="p1">*</bpt>FileVersionInfo<ept id="p1">*</ept> PowerShell.exe에 대 한 버전 정보를 가져오려면 매개 변수는 파일 PowerShell 프로세스에 대 한 기본 모듈입니다.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>To run this command with processes that you do not own on Windows Vista and later versions of Windows, you must open Windows PowerShell with the Run as administrator option.</source>
          <target state="translated">이 명령은 소유 하지 않은 프로세스와 Windows Vista 및 이후 버전의 Windows 실행 하려면 열어야 Windows PowerShell 실행 as administrator 옵션.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Example 7: Get modules loaded with the specified process</source>
          <target state="translated">예 7: 지정한 프로세스와 로드 된 모듈을 가져오기</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>This command uses the <bpt id="p1">*</bpt>Module<ept id="p1">*</ept> parameter to get the modules that have been loaded by the process.</source>
          <target state="translated">이 명령을 사용 하는 <bpt id="p1">*</bpt>모듈<ept id="p1">*</ept> 매개 변수는 프로세스에 의해 로드 된 모듈을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>This command gets the modules for the processes that have names that begin with SQL.</source>
          <target state="translated">이 명령은 이름이 SQL로 시작 하는 프로세스에 대 한 모듈을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>To run this command on Windows Vista and later versions of Windows with processes that you do not own, you must start Windows PowerShell with the Run as administrator option.</source>
          <target state="translated">Windows Vista 및 이후 버전의 Windows 소유 하지 않은 프로세스에서이 명령을 실행 하려면 as administrator 옵션 Windows PowerShell 실행을 시작 해야 있습니다.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Example 8: Find the owner of a process</source>
          <target state="translated">예 8: 프로세스의 소유자를 확인 합니다.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>This command shows how to find the owner of a process.</source>
          <target state="translated">이 명령은 프로세스의 소유자를 찾는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Because the <bpt id="p1">**</bpt>System.Diagnostics.Process<ept id="p1">**</ept> object that <bpt id="p2">**</bpt>Get-Process<ept id="p2">**</ept> returns does not have a property or method that returns the process owner, the command uses the Get-WmiObject cmdlet to get a Win32_Process object that represents the same process.</source>
          <target state="translated">때문에 <bpt id="p1">**</bpt>System.Diagnostics.Process<ept id="p1">**</ept> 개체를 <bpt id="p2">**</bpt>Get-process<ept id="p2">**</ept> 프로세스 소유자를 반환 하는 메서드나 속성 반환 없는, 명령은 Get-wmiobject cmdlet를 사용 하 여 동일한 프로세스를 나타내는 Win32_Process 개체를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>The first command uses <bpt id="p1">**</bpt>Get-WmiObject<ept id="p1">**</ept> to get the PowerShell process.</source>
          <target state="translated">첫 번째 명령은 <bpt id="p1">**</bpt>Get-wmiobject<ept id="p1">**</ept> PowerShell 프로세스를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>It saves it in the $P variable.</source>
          <target state="translated">$P 변수에 저장 합니다.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>The second command uses the <bpt id="p1">**</bpt>GetOwner<ept id="p1">**</ept> method to get the owner of the process in $P.</source>
          <target state="translated">두 번째 명령은 <bpt id="p1">**</bpt>GetOwner<ept id="p1">**</ept> 메서드를 $P.에서 프로세스의 소유자를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>The command reveals that the owner is Domain01\user01.</source>
          <target state="translated">이 명령은 해당 소유자가 Domain01\user01 알 수 있습니다.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Example 9: Use an automatic variable to identify the process hosting the current session</source>
          <target state="translated">예 9: 자동 변수를 사용 하 여 현재 세션을 호스트 하는 프로세스를 식별 하려면</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>These commands show how to use the $pid automatic variable to identify the process that is hosting the current Windows PowerShell session.</source>
          <target state="translated">이 명령은 $pid 자동 변수를 사용하여 현재 Windows PowerShell 세션을 호스트 중인 프로세스를 식별하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>You can use this method to distinguish the host process from other Windows PowerShell processes that you might want to stop or close.</source>
          <target state="translated">이 방법을 사용하면 중지하거나 닫으려는 다른 Windows PowerShell 프로세스와 호스트 프로세스를 쉽게 구별할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>The first command gets all of the Windows PowerShell processes in the current session.</source>
          <target state="translated">첫 번째 명령은 현재 세션의 모든 Windows PowerShell 프로세스를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>The second command gets the Windows PowerShell process that is hosting the current session.</source>
          <target state="translated">두 번째 명령은 현재 세션을 호스트 중인 Windows PowerShell 프로세스를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>Example 10: Get all processes that have a main window title and display them in a table</source>
          <target state="translated">10 예: 주 창 제목이 있고 테이블에 표시 하는 모든 프로세스를 가져오기</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>This command gets all the processes that have a main window title, and it displays them in a table with the process ID and the process name.</source>
          <target state="translated">이 명령은 주 창 제목이 있는 모든 프로세스를 가져온 다음 프로세스 ID 및 프로세스 이름과 함께 테이블에 표시합니다.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>mainWindowTitle<ept id="p1">**</ept> property is just one of many useful properties of the <bpt id="p2">**</bpt>Process<ept id="p2">**</ept> object that <bpt id="p3">**</bpt>Get-Process<ept id="p3">**</ept> returns.</source>
          <target state="translated"> <bpt id="p1">**</bpt>mainWindowTitle<ept id="p1">**</ept> 속성은의 여러 유용한 속성 중 하나는 <bpt id="p2">**</bpt>프로세스<ept id="p2">**</ept> 개체를 <bpt id="p3">**</bpt>Get-process<ept id="p3">**</ept> 를 반환 합니다.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>To view all of the properties, pipe the results of a <bpt id="p1">**</bpt>Get-Process<ept id="p1">**</ept> command to the Get-Member cmdlet (get-process | get-member).</source>
          <target state="translated">모든 속성을 보려면 사용 하는 파이프의 결과 <bpt id="p1">**</bpt>Get-process<ept id="p1">**</ept> 명령을 Get-member cmdlet에 (get 프로세스 | get 멤버).</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>PARAMETERS</source>
          <target state="translated">매개 변수</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>-ComputerName</source>
          <target state="translated">-ComputerName</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>Specifies the computers for which this cmdlet gets active processes.</source>
          <target state="translated">이 cmdlet는에 대 한 활성 프로세스를 가져옵니다 컴퓨터를 지정 합니다.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>The default is the local computer.</source>
          <target state="translated">기본값은 로컬 컴퓨터입니다.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>Type the NetBIOS name, an IP address, or a fully qualified domain name (FQDN) of one or more computers.</source>
          <target state="translated">NetBIOS 이름, IP 주소 또는 하나 이상의 컴퓨터의 정규화 된 도메인 이름 (FQDN)을 입력 합니다.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>To specify the local computer, type the computer name, a dot (.), or localhost.</source>
          <target state="translated">로컬 컴퓨터를 지정 하려면 컴퓨터 이름, 점 (.) 또는 localhost를 입력 합니다.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>This parameter does not rely on Windows PowerShell remoting.</source>
          <target state="translated">이 매개 변수는 Windows PowerShell 원격 기능을 사용하지 않습니다.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>You can use the <bpt id="p1">*</bpt>ComputerName<ept id="p1">*</ept> parameter of this cmdlet even if your computer is not configured to run remote commands.</source>
          <target state="translated">사용할 수는 <bpt id="p1">*</bpt>ComputerName<ept id="p1">*</ept> 원격 명령을 실행 하도록 컴퓨터를 구성 하지 않은 경우에이 cmdlet의 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>-FileVersionInfo</source>
          <target state="translated">-FileVersionInfo</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>Indicates that this cmdlet gets the file version information for the program that runs in the process.</source>
          <target state="translated">이 cmdlet을 가져옴을 프로세스에서 실행 되는 프로그램에 대 한 파일 버전 정보를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>On Windows Vista and later versions of Windows, you must open Windows PowerShell with the Run as administrator option to use this parameter on processes that you do not own.</source>
          <target state="translated">Windows Vista 및 이후 버전의 Windows에서 Windows PowerShell으로 열어야 실행 소유 하지 않은 프로세스에이 매개 변수를 사용 하 여 관리자가 옵션으로 합니다.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>You cannot use the <bpt id="p1">*</bpt>FileVersionInfo<ept id="p1">*</ept> and <bpt id="p2">*</bpt>ComputerName<ept id="p2">*</ept> parameters of the <bpt id="p3">**</bpt>Get-Process<ept id="p3">**</ept> cmdlet in the same command.</source>
          <target state="translated">사용할 수 없습니다는 <bpt id="p1">*</bpt>FileVersionInfo<ept id="p1">*</ept> 및 <bpt id="p2">*</bpt>ComputerName<ept id="p2">*</ept> 의 매개 변수는 <bpt id="p3">**</bpt>Get-process<ept id="p3">**</ept> 동일한 명령에는 cmdlet입니다.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>To get file version information for a process on a remote computer, use the Invoke-Command cmdlet.</source>
          <target state="translated">원격 컴퓨터에서 프로세스에 대 한 파일 버전 정보 Invoke-command cmdlet을 사용 합니다.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>Using this parameter is equivalent to getting the <bpt id="p1">**</bpt>MainModule.FileVersionInfo<ept id="p1">**</ept> property of each process object.</source>
          <target state="translated">이 매개 변수를 사용 하는 데 같습니다는 <bpt id="p1">**</bpt>MainModule.FileVersionInfo<ept id="p1">**</ept> 각 프로세스 개체의 속성입니다.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>When you use this parameter, <bpt id="p1">**</bpt>Get-Process<ept id="p1">**</ept> returns a <bpt id="p2">**</bpt>FileVersionInfo<ept id="p2">**</ept> object (System.Diagnostics.FileVersionInfo), not a process object.</source>
          <target state="translated">이 매개 변수를 사용 하는 경우 <bpt id="p1">**</bpt>Get-process<ept id="p1">**</ept> 반환는 <bpt id="p2">**</bpt>FileVersionInfo<ept id="p2">**</ept> 프로세스 개체가 아닌 개체 (System.Diagnostics.FileVersionInfo).</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>So, you cannot pipe the output of the command to a cmdlet that expects a process object, such as Stop-Process.</source>
          <target state="translated">따라서 Stop-Process와 같이 프로세스 개체가 필요한 cmdlet으로 명령의 출력을 파이프할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>-Id</source>
          <target state="translated">-Id</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>Specifies one or more processes by process ID (PID).</source>
          <target state="translated">PID(프로세스 ID)로 프로세스를 하나 이상 지정합니다.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>To specify multiple IDs, use commas to separate the IDs.</source>
          <target state="translated">여러 ID를 지정하려면 쉼표를 사용하여 ID를 구분합니다.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>To find the PID of a process, type <ph id="ph1">`Get-Process`</ph>.</source>
          <target state="translated">프로세스의 PID를 찾으려면 입력 <ph id="ph1">`Get-Process`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>-IncludeUserName</source>
          <target state="translated">-IncludeUserName</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>Indicates that the UserName value of the <bpt id="p1">**</bpt>Process<ept id="p1">**</ept> object is returned with results of the command.</source>
          <target state="translated">나타내는의 UserName 값은 <bpt id="p1">**</bpt>프로세스<ept id="p1">**</ept> 명령의 결과 함께 개체가 반환 됩니다.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>-InputObject</source>
          <target state="translated">-InputObject</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>Specifies one or more process objects.</source>
          <target state="translated">프로세스 개체를 하나 이상 지정합니다.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>Enter a variable that contains the objects, or type a command or expression that gets the objects.</source>
          <target state="translated">개체를 포함하는 변수를 입력하거나 개체를 가져오는 명령 또는 식을 입력하세요.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>-Module</source>
          <target state="translated">모듈</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>Indicates that this cmdlet gets the modules that have been loaded by the processes.</source>
          <target state="translated">이 cmdlet은 프로세스에 의해 로드 된 모듈을 가져옴을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>On Windows Vista and later versions of Windows, you must open Windows PowerShell with the Run as administrator option to use this parameter on processes that you do not own.</source>
          <target state="translated">Windows Vista 및 이후 버전의 Windows에서 Windows PowerShell으로 열어야 실행 소유 하지 않은 프로세스에이 매개 변수를 사용 하 여 관리자가 옵션으로 합니다.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>You cannot use the <bpt id="p1">*</bpt>Module<ept id="p1">*</ept> and <bpt id="p2">*</bpt>ComputerName<ept id="p2">*</ept> parameters of the <bpt id="p3">**</bpt>Get-Process<ept id="p3">**</ept> cmdlet in the same command.</source>
          <target state="translated">사용할 수 없습니다는 <bpt id="p1">*</bpt>모듈<ept id="p1">*</ept> 및 <bpt id="p2">*</bpt>ComputerName<ept id="p2">*</ept> 의 매개 변수는 <bpt id="p3">**</bpt>Get-process<ept id="p3">**</ept> 동일한 명령에는 cmdlet입니다.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>To get the modules that have been loaded by a process on a remote computer, use the <bpt id="p1">**</bpt>Invoke-Command<ept id="p1">**</ept> cmdlet.</source>
          <target state="translated">원격 컴퓨터의 프로세스에서 로드 된 모듈을 가져오려면는 <bpt id="p1">**</bpt>Invoke-command<ept id="p1">**</ept> cmdlet입니다.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>This parameter is equivalent to getting the Modules property of each process object.</source>
          <target state="translated">이 매개 변수는 각 프로세스 개체의 Modules 속성을 가져오는 것과 같습니다.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>When you use this parameter, this cmdlet returns a <bpt id="p1">**</bpt>ProcessModule<ept id="p1">**</ept> object (System.Diagnostics.ProcessModule), not a process object.</source>
          <target state="translated">이 cmdlet를 반환 하는이 매개 변수를 사용 하면 한 <bpt id="p1">**</bpt>ProcessModule<ept id="p1">**</ept> 프로세스 개체가 아닌 개체 (System.Diagnostics.ProcessModule).</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>So, you cannot pipe the output of the command to a cmdlet that expects a process object, such as Stop-Process.</source>
          <target state="translated">따라서 Stop-Process와 같이 프로세스 개체가 필요한 cmdlet으로 명령의 출력을 파이프할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>When you use both the <bpt id="p1">*</bpt>Module<ept id="p1">*</ept> and <bpt id="p2">*</bpt>FileVersionInfo<ept id="p2">*</ept> parameters in the same command, this cmdlet returns a <bpt id="p3">**</bpt>FileVersionInfo<ept id="p3">**</ept> object with information about the file version of all modules.</source>
          <target state="translated">둘 다 사용 하는 경우는 <bpt id="p1">*</bpt>모듈<ept id="p1">*</ept> 및 <bpt id="p2">*</bpt>FileVersionInfo<ept id="p2">*</ept> 동일한 명령에 매개 변수를이 cmdlet은 반환는 <bpt id="p3">**</bpt>FileVersionInfo<ept id="p3">**</ept> 모든 모듈의 파일 버전에 대 한 정보가 포함 된 개체입니다.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>-Name</source>
          <target state="translated">-Name</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>Specifies one or more processes by process name.</source>
          <target state="translated">프로세스 이름으로 프로세스를 하나 이상 지정합니다.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>You can type multiple process names (separated by commas) and use wildcard characters.</source>
          <target state="translated">쉼표로 구분하여 여러 프로세스 이름을 입력하고 와일드카드 문자를 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>The parameter name ("Name") is optional.</source>
          <target state="translated">매개 변수 이름("Name")은 선택 사항입니다.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>CommonParameters</source>
          <target state="translated">CommonParameters</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutVariable, -OutBuffer, -PipelineVariable, -Verbose, -WarningAction, and -WarningVariable.</source>
          <target state="translated">이 cmdlet은 공통 매개 변수:-디버그,-ErrorAction,-ErrorVariable,-InformationAction,-InformationVariable,-OutVariable,-OutBuffer,-PipelineVariable,-Verbose,-WarningAction 및-warningvariable을 지원 합니다.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>For more information, see about_CommonParameters (http://go.microsoft.com/fwlink/?LinkID=113216).</source>
          <target state="translated">자세한 내용은 about_CommonParameters (http://go.microsoft.com/fwlink/?LinkID=113216)를 참조 합니다.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>INPUTS</source>
          <target state="translated">입력</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>System.Diagnostics.Process</source>
          <target state="translated">System.Diagnostics.Process</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>You can pipe a process object to this cmdlet.</source>
          <target state="translated">이 cmdlet에는 프로세스 개체를 파이프할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>OUTPUTS</source>
          <target state="translated">출력</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>System.Diagnostics.Process, System.Diagnotics.FileVersionInfo, System.Diagnostics.ProcessModule</source>
          <target state="translated">System.Diagnostics.Process, System.Diagnotics.FileVersionInfo, System.Diagnostics.ProcessModule</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>By default, this cmdlet returns a <bpt id="p1">**</bpt>System.Diagnostics.Process<ept id="p1">**</ept> object.</source>
          <target state="translated">기본적으로이 cmdlet은 반환 된 <bpt id="p1">**</bpt>System.Diagnostics.Process<ept id="p1">**</ept> 개체입니다.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>If you use the <bpt id="p1">*</bpt>FileVersionInfo<ept id="p1">*</ept> parameter, it returns a <bpt id="p2">**</bpt>System.Diagnotics.FileVersionInfo<ept id="p2">**</ept> object.</source>
          <target state="translated">사용 하는 경우는 <bpt id="p1">*</bpt>FileVersionInfo<ept id="p1">*</ept> 반환 매개 변수는 <bpt id="p2">**</bpt>System.Diagnotics.FileVersionInfo<ept id="p2">**</ept> 개체입니다.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>If you use the <bpt id="p1">*</bpt>Module<ept id="p1">*</ept> parameter, without the <bpt id="p2">*</bpt>FileVersionInfo<ept id="p2">*</ept> parameter, it returns a <bpt id="p3">**</bpt>System.Diagnostics.ProcessModule<ept id="p3">**</ept> object.</source>
          <target state="translated">사용 하는 경우는 <bpt id="p1">*</bpt>모듈<ept id="p1">*</ept> 매개 변수를 없이 <bpt id="p2">*</bpt>FileVersionInfo<ept id="p2">*</ept> 반환 매개 변수는 <bpt id="p3">**</bpt>System.Diagnostics.ProcessModule<ept id="p3">**</ept> 개체입니다.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>NOTES</source>
          <target state="translated">참고 사항</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>You can also refer to this cmdlet by its built-in aliases, ps and gps.</source>
          <target state="translated">기본 제공 별칭, ps 및 gps이이 cmdlet을 참조할 수도 있습니다.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>For more information, see about_Aliases.</source>
          <target state="translated">자세한 내용은 about_Aliases를 참조하세요.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>On computers that are running a 64-bit version of Windows, the 64-bit version of Windows PowerShell gets only 64-bit process modules and the 32-bit version of Windows PowerShell gets only 32-bit process modules.</source>
          <target state="translated">64비트 버전의 Windows를 실행하는 컴퓨터에서 64비트 버전의 Windows PowerShell은 64비트 프로세스 모듈만 가져오고 32비트 버전의 Windows PowerShell은 32비트 프로세스 모듈만 가져옵니다.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>You can use the properties and methods of the Windows Management Instrumentation (WMI) Win32_Process object in Windows PowerShell.</source>
          <target state="translated">Windows PowerShell에서 Windows WMI (Management Instrumentation) Win32_Process 개체의 메서드와 속성을 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>For information, see Get-WmiObject and the WMI SDK.</source>
          <target state="translated">내용은 Get-wmiobject 및 WMI SDK를 참조 하십시오.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>The default display of a process is a table that includes the following columns.</source>
          <target state="translated">프로세스의 기본 표시는 다음 열을 포함하는 테이블입니다.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>For a description of all of the properties of process objects, see Process Propertieshttp://go.microsoft.com/fwlink/?LinkId=204482 at http://go.microsoft.com/fwlink/?LinkId=204482.</source>
          <target state="translated">모든 프로세스 개체의 속성의 설명에 대 한 프로세스 Propertieshttp://go.microsoft.com/fwlink/?LinkId=204482 http://go.microsoft.com/fwlink/?LinkId=204482에서 참조 하십시오.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>Handles: The number of handles that the process has opened.</source>
          <target state="translated">다음과 같은 식을 처리 프로세스에서 연 핸들 수입니다.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>NPM(K): The amount of non-paged memory that the process is using, in kilobytes.</source>
          <target state="translated">NPM(K): (킬로바이트)에서 프로세스에서 사용 중인 비페이징 메모리의 양입니다.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>PM(K): The amount of pageable memory that the process is using, in kilobytes.</source>
          <target state="translated">PM(K): (킬로바이트)에서 프로세스에서 사용 중인 페이징 가능한 메모리의 양입니다.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>WS(K): The size of the working set of the process, in kilobytes.</source>
          <target state="translated">WS(K): (킬로바이트)에서 프로세스의 작업 집합의 크기입니다.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>The working set consists of the pages of memory that were recently referenced by the process.</source>
          <target state="translated">작업 집합은 프로세스에서 최근에 참조한 메모리 페이지로 구성됩니다.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>VM(M): The amount of virtual memory that the process is using, in megabytes.</source>
          <target state="translated">VM(M): 프로세스를 사용 하는 메가바이트 단위로 가상 메모리의 양입니다.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>Virtual memory includes storage in the paging files on disk.</source>
          <target state="translated">가상 메모리에는 디스크 페이징 파일의 저장소가 포함됩니다.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>CPU(s): The amount of processor time that the process has used on all processors, in seconds.</source>
          <target state="translated">CPU(s): 초 단위로 프로세스가 모든 프로세서에서 사용한 프로세서 시간의 양입니다.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>ID: The process ID (PID) of the process.</source>
          <target state="translated">ID: 프로세스의 프로세스 ID (PID).</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>ProcessName: The name of the process.</source>
          <target state="translated">ProcessName: 프로세스의 이름입니다.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>For explanations of the concepts related to processes, see the Glossary in Help and Support Center and the Help for Task Manager.</source>
          <target state="translated">프로세스와 관련된 개념에 대한 설명은 도움말 및 지원 센터의 용어집 및 작업 관리자에 대한 도움말을 참조하세요.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>You can also use the built-in alternate views of the processes available with Format-Table, such as StartTime and Priority, and you can design your own views.</source>
          <target state="translated">StartTime 및 우선 순위를 같은 형식의 테이블을 사용할 수 있는 프로세스의 기본 제공 대체 보기를 사용할 수도 있습니다 하 고 고유한 보기를 디자인할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>RELATED LINKS</source>
          <target state="translated">관련된 링크</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>Debug-Process</source>
          <target state="translated">Debug-Process</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>Get-Process</source>
          <target state="translated">Get-Process</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>Start-Process</source>
          <target state="translated">Start-Process</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>Stop-Process</source>
          <target state="translated">프로세스 중지</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>Wait-Process</source>
          <target state="translated">Wait-Process</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>