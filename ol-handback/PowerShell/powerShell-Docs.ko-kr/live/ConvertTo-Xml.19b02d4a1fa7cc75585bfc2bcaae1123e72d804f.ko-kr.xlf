<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ko-kr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-1c394fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fc2059613e270ebb0875a9160f49126f0c49d160</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">reference\5.0\Microsoft.PowerShell.Utility\ConvertTo-Xml.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions" />
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">3190f3ae74ea6ca4d259bc4bee6360d432065b16</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">5eeee813e0f1b33b310f370d9c5adfd6b7ed0ebb</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>powershell, cmdlet</source>
          <target state="translated">powershell cmdlet</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>ConvertTo-Xml</source>
          <target state="translated">ConvertTo-Xml</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>ConvertTo-Xml</source>
          <target state="translated">ConvertTo-Xml</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>SYNOPSIS</source>
          <target state="translated">요약</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Creates an XML-based representation of an object.</source>
          <target state="translated">개체의 XML 기반 표시를 만듭니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>SYNTAX</source>
          <target state="translated">구문</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>DESCRIPTION</source>
          <target state="translated">설명</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>ConvertTo-Xml<ept id="p1">**</ept> cmdlet creates an XML-based representation of one or more Microsoft .NET Framework objects.</source>
          <target state="translated"> <bpt id="p1">**</bpt>Convertto-xml<ept id="p1">**</ept> cmdlet에는 하나 이상의 Microsoft.NET Framework 개체의 XML 기반 표현을 만듭니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>To use this cmdlet, pipe one or more objects to the cmdlet, or use the <bpt id="p1">*</bpt>InputObject<ept id="p1">*</ept> parameter to specify the object.</source>
          <target state="translated">이 cmdlet을 사용 하려면 하나 이상의 개체를 cmdlet으로 파이프 하거나 사용 하 여는 <bpt id="p1">*</bpt>InputObject<ept id="p1">*</ept> 매개 변수 개체를 지정 합니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>When you pipe multiple objects to <bpt id="p1">**</bpt>ConvertTo-XML<ept id="p1">**</ept> or use the <bpt id="p2">*</bpt>InputObject<ept id="p2">*</ept> parameter to submit multiple objects, <bpt id="p3">**</bpt>ConvertTo-XML<ept id="p3">**</ept> returns a single XML document that includes representations of all of the objects.</source>
          <target state="translated">여러 개체를 파이프 하면 <bpt id="p1">**</bpt>CONVERTTO-XML<ept id="p1">**</ept> 하거나 사용 하 여는 <bpt id="p2">*</bpt>InputObject<ept id="p2">*</ept> 매개 변수를 여러 개체를 제출할 <bpt id="p3">**</bpt>CONVERTTO-XML<ept id="p3">**</ept> 의 모든 개체의 표시를 포함 하는 단일 XML 문서를 반환 합니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>This cmdlet is similar to Export-Clixml except that <bpt id="p1">**</bpt>Export-Clixml<ept id="p1">**</ept> stores the resulting XML in a file<bpt id="p2">**</bpt>. ConvertTo-XML<ept id="p2">**</ept> returns the XML, so you can continue to process it in Windows PowerShell.</source>
          <target state="translated">이 cmdlet은 않는다는 점을 제외 하면 Export-clixml과 유사 <bpt id="p1">**</bpt>Export-clixml<ept id="p1">**</ept> 결과 XML 파일에 저장<bpt id="p2">**</bpt>합니다. CONVERTTO-XML<ept id="p2">**</ept> Windows PowerShell의 처리를 계속할 수 있도록 XML을 반환 합니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>EXAMPLES</source>
          <target state="translated">예제</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Example 1: Convert a date to XML</source>
          <target state="translated">예제 1: 날짜를 XML로 변환</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>This command converts the current date (a <bpt id="p1">**</bpt>DateTime<ept id="p1">**</ept> object) to XML.</source>
          <target state="translated">이 명령은 현재 날짜를 변환 (한 <bpt id="p1">**</bpt>DateTime<ept id="p1">**</ept> 개체)를 XML입니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Example 2: Convert processes to XML</source>
          <target state="translated">예제 2: 프로세스를 XML로 변환</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>This command converts the process objects that represent all of the processes on the computer into an XML document.</source>
          <target state="translated">이 명령은 컴퓨터의 모든 프로세스를 나타내는 프로세스 개체를 XML 문서로 변환합니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>The objects are expanded to a depth of three levels.</source>
          <target state="translated">개체는 수준 3까지 확장됩니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>PARAMETERS</source>
          <target state="translated">매개 변수</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>-As</source>
          <target state="translated">으로 다른 이름</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Determines the output format.</source>
          <target state="translated">출력 형식을 결정합니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>The acceptable values for this parameter are:</source>
          <target state="translated">이 매개 변수에 허용되는 값은 다음과 같습니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>String.</source>
          <target state="translated">문자열입니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Returns a single string.</source>
          <target state="translated">단일 문자열을 반환합니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Stream.</source>
          <target state="translated">스트림입니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Returns an array of strings.</source>
          <target state="translated">문자열의 배열을 반환합니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Document.</source>
          <target state="translated">문서입니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Returns an <bpt id="p1">**</bpt>XmlDocument<ept id="p1">**</ept> object.</source>
          <target state="translated">반환 된 <bpt id="p1">**</bpt>XmlDocument<ept id="p1">**</ept> 개체입니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>The default value is Document.</source>
          <target state="translated">기본값은 문서입니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>-Depth</source>
          <target state="translated">방어</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Specifies how many levels of contained objects are included in the XML representation.</source>
          <target state="translated">XML 표시에 포함되는 포함 개체 수준을 지정합니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>The default value is 1.</source>
          <target state="translated">기본값은 1입니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>For instance, if the object's properties also contain objects, to save an XML representation of the properties of the contained objects, you must specify a depth of 2.</source>
          <target state="translated">예를 들어, 해당 개체의 속성에는 또한 개체를 포함 된 개체의 속성의 XML 표현을 저장을 포함 하는 경우 2의 깊이 지정 해야 합니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>The default value can be overridden for the object type in the Types.ps1xml files.</source>
          <target state="translated">Types.ps1xml 파일에서 개체 유형에 대한 기본값을 재정의할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>For more information, see about_Types.ps1xml.</source>
          <target state="translated">자세한 내용은 about_Types.ps1xml을 참조하세요.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>-InputObject</source>
          <target state="translated">-InputObject</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Specifies the object to be converted.</source>
          <target state="translated">변환할 개체를 지정합니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Enter a variable that contains the objects, or type a command or expression that gets the objects.</source>
          <target state="translated">개체를 포함하는 변수를 입력하거나 개체를 가져오는 명령 또는 식을 입력하세요.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>You can also pipe objects to <bpt id="p1">**</bpt>ConvertTo-XML<ept id="p1">**</ept>.</source>
          <target state="translated">개체를 파이프할 수도 있습니다 <bpt id="p1">**</bpt>CONVERTTO-XML<ept id="p1">**</ept>합니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>-NoTypeInformation</source>
          <target state="translated">-않으려면 NoTypeInformation</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Omits the Type attribute from the object nodes.</source>
          <target state="translated">개체 노드에서 Type 특성을 생략합니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>CommonParameters</source>
          <target state="translated">CommonParameters</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutVariable, -OutBuffer, -PipelineVariable, -Verbose, -WarningAction, and -WarningVariable.</source>
          <target state="translated">이 cmdlet은 공통 매개 변수:-디버그,-ErrorAction,-ErrorVariable,-InformationAction,-InformationVariable,-OutVariable,-OutBuffer,-PipelineVariable,-Verbose,-WarningAction 및-warningvariable을 지원 합니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>For more information, see about_CommonParameters (http://go.microsoft.com/fwlink/?LinkID=113216).</source>
          <target state="translated">자세한 내용은 about_CommonParameters (http://go.microsoft.com/fwlink/?LinkID=113216)를 참조 합니다.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>INPUTS</source>
          <target state="translated">입력</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>System.Management.Automation.PSObject</source>
          <target state="translated">System.Management.Automation.PSObject</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>You can pipe any object to <bpt id="p1">**</bpt>ConvertTo-XML<ept id="p1">**</ept>.</source>
          <target state="translated">모든 개체를 파이프할 수 있습니다 <bpt id="p1">**</bpt>CONVERTTO-XML<ept id="p1">**</ept>합니다.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>OUTPUTS</source>
          <target state="translated">출력</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>System.String or System.Xml.XmlDocument</source>
          <target state="translated">System.String 또는 System.Xml.XmlDocument</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>The value of the <bpt id="p1">*</bpt>As<ept id="p1">*</ept> parameter determines the type of object that <bpt id="p2">**</bpt>ConvertTo-XML<ept id="p2">**</ept> returns.</source>
          <target state="translated">값은 <bpt id="p1">*</bpt>으로<ept id="p1">*</ept> 매개 변수 개체의 유형을 결정 하는 <bpt id="p2">**</bpt>CONVERTTO-XML<ept id="p2">**</ept> 반환 합니다.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>NOTES</source>
          <target state="translated">참고 사항</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>RELATED LINKS</source>
          <target state="translated">관련된 링크</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>ConvertTo-Csv</source>
          <target state="translated">ConvertTo-Csv</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>ConvertTo-Html</source>
          <target state="translated">ConvertTo-Html</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Export-Clixml</source>
          <target state="translated">Export-clixml</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Get-Date</source>
          <target state="translated">Get-date</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>Get-Process</source>
          <target state="translated">Get-Process</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Import-Clixml</source>
          <target state="translated">Import-clixml</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>