<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ko-kr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-1c394fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">793634ef3400ca70924e12981f68ca31ca3f36cd</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">reference\5.0\Microsoft.PowerShell.Security\Set-AuthenticodeSignature.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions" />
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">0a1c607481d9ec8bc2e345c363ccaf202fdf4be9</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">b625cf88a6fcd2b8c7da9d2e27b0b525c7d6283a</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>powershell, cmdlet</source>
          <target state="translated">powershell cmdlet</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Set-AuthenticodeSignature</source>
          <target state="translated">Set-AuthenticodeSignature</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Set-AuthenticodeSignature</source>
          <target state="translated">Set-AuthenticodeSignature</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>SYNOPSIS</source>
          <target state="translated">요약</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Adds an Authenticode signature to a Windows PowerShell script or other file.</source>
          <target state="translated">Authenticode 서명을 Windows PowerShell 스크립트 또는 다른 파일에 추가합니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>SYNTAX</source>
          <target state="translated">구문</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>ByPath (Default)</source>
          <target state="translated">ByPath (기본값)</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>ByLiteralPath</source>
          <target state="translated">ByLiteralPath</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>DESCRIPTION</source>
          <target state="translated">설명</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>Set-AuthenticodeSignature<ept id="p1">**</ept> cmdlet adds an Authenticode signature to any file that supports Subject Interface Package (SIP).</source>
          <target state="translated"> <bpt id="p1">**</bpt>Set-authenticodesignature<ept id="p1">**</ept> cmdlet 주체 패키지 SIP (인터페이스)를 지 원하는 모든 파일에 Authenticode 서명을 추가 합니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>In a Windows PowerShell script file, the signature takes the form of a block of text that indicates the end of the instructions that are executed in the script.</source>
          <target state="translated">Windows PowerShell 스크립트 파일에서 서명은 스크립트에서 실행되는 명령의 끝을 나타내는 텍스트 블록 형식을 사용합니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>If there is a signature in the file when this cmdlet runs, that signature is removed.</source>
          <target state="translated">이 cmdlet이 실행될 때 파일에 서명이 있는 경우 해당 서명은 제거됩니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>EXAMPLES</source>
          <target state="translated">예제</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Example 1: Get a code-signing certificate and sign a script</source>
          <target state="translated">예제 1: 코드 서명 인증서를 가져오고 스크립트에 서명</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>These commands get a code-signing certificate from the Windows PowerShell certificate provider and use it to sign a Windows PowerShell script.</source>
          <target state="translated">이러한 명령을 Windows PowerShell 인증서 공급자에서 코드 서명 인증서를 가져오고 사용 하 여 Windows PowerShell 스크립트에 서명 합니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>The first command uses the Get-ChildItem cmdlet and the Windows PowerShell certificate provider to get the certificates in the Cert:\CurrentUser\My subdirectory of the certificate store.</source>
          <target state="translated">첫 번째 명령은 Get-ChildItem cmdlet 및 Windows PowerShell 인증서 공급자를 사용하여 Cert:\CurrentUser\My 인증서 저장소 하위 디렉터리의 인증서를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>(The Cert: drive is the drive exposed by the certificate provider.) The <bpt id="p1">*</bpt>CodeSigningCert<ept id="p1">*</ept> parameter, which is supported only by the certificate provider, limits the certificates retrieved to those with code-signing authority.</source>
          <target state="translated">Cert: 드라이브는 인증서 공급자에서 제공하는 드라이브입니다.  <bpt id="p1">*</bpt>CodeSigningCert<ept id="p1">*</ept> 매개 변수는 인증서 공급자를 통해서만 지원 되며, 코드 서명 기관이 있는 사용자에 게 검색 한 인증서를 제한 합니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>The command stores the result in the $Cert variable.</source>
          <target state="translated">이 명령은 $Cert 변수에 결과 저장합니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>The second command uses the <bpt id="p1">**</bpt>Set-AuthenticodeSignature<ept id="p1">**</ept> cmdlet to sign the PSTestInternet2.ps1 script.</source>
          <target state="translated">두 번째 명령은 <bpt id="p1">**</bpt>Set-authenticodesignature<ept id="p1">**</ept> PSTestInternet2.ps1 스크립트에 서명 하는 cmdlet입니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>It uses the <bpt id="p1">*</bpt>FilePath<ept id="p1">*</ept> parameter to specify the name of the script and the <bpt id="p2">*</bpt>Certificate<ept id="p2">*</ept> parameter to specify that the certificate is stored in the $Cert variable.</source>
          <target state="translated">사용 하 여는 <bpt id="p1">*</bpt>FilePath<ept id="p1">*</ept> 스크립트의 이름을 지정 하려면 매개 변수 및 <bpt id="p2">*</bpt>인증서<ept id="p2">*</ept> 매개 변수를 $Cert 변수에 저장 되는 인증서를 지정 합니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Example 2: Get a code-signing certificate and sign a script</source>
          <target state="translated">예제 2: 코드 서명 인증서를 가져오고 스크립트에 서명</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>These commands use the Get-PfxCertificate cmdlet to find a code signing certificate.</source>
          <target state="translated">이 명령은 Get-PfxCertificate cmdlet을 사용하여 코드 서명 인증서를 찾습니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Then, they use it to sign a Windows PowerShell script.</source>
          <target state="translated">그런 다음 이 인증서를 사용하여 Windows PowerShell 스크립트에 서명합니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>The first command uses the <bpt id="p1">**</bpt>Get-PfxCertificate<ept id="p1">**</ept> cmdlet to find the C:\Test\MySign.pfx certificate and store it in the $Cert variable.</source>
          <target state="translated">첫 번째 명령은 <bpt id="p1">**</bpt>Get-pfxcertificate<ept id="p1">**</ept> cmdlet를 C:\Test\MySign.pfx 인증서를 찾아서 $Cert 변수에 저장 합니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>The second command uses <bpt id="p1">**</bpt>Set-AuthenticodeSignature<ept id="p1">**</ept> to sign the script.</source>
          <target state="translated">두 번째 명령은 <bpt id="p1">**</bpt>Set-authenticodesignature<ept id="p1">**</ept> 에 스크립트를 서명 합니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">*</bpt>FilePath<ept id="p1">*</ept> parameter of <bpt id="p2">**</bpt>Set-AuthenticodeSignature<ept id="p2">**</ept> specifies the path to the script file being signed and the <bpt id="p3">*</bpt>Certificate<ept id="p3">*</ept> parameter passes the $Cert variable containing the certificate to <bpt id="p4">**</bpt>Set-AuthenticodeSignature<ept id="p4">**</ept>.</source>
          <target state="translated"> <bpt id="p1">*</bpt>FilePath<ept id="p1">*</ept> 의 매개 변수 <bpt id="p2">**</bpt>Set-authenticodesignature<ept id="p2">**</ept> 서명할 스크립트 파일에 경로 지정 및 <bpt id="p3">*</bpt>인증서<ept id="p3">*</ept> 인증서가 있는 $Cert 변수를 전달 하는 매개 변수 <bpt id="p4">**</bpt>Set-authenticodesignature<ept id="p4">**</ept>합니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>If the certificate file is password protected, Windows PowerShell prompts you for the password.</source>
          <target state="translated">인증서 파일이 암호로 보호되는 경우 Windows PowerShell은 암호를 묻는 메시지를 표시합니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Example 3: Add a digital signature with the root authority</source>
          <target state="translated">예제 3: 루트 기관으로 디지털 서명 추가</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>This command adds a digital signature that includes the root authority in the trust chain, and it is signed by a third-party timestamp server.</source>
          <target state="translated">이 명령은 신뢰 체인에 루트 기관을 포함하는 디지털 서명을 추가하며 타사 타임스탬프 서버에서 서명됩니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>The command uses the <bpt id="p1">*</bpt>FilePath<ept id="p1">*</ept> parameter to specify the script being signed and the <bpt id="p2">*</bpt>Certificate<ept id="p2">*</ept> parameter to specify the certificate that is saved in the $Cert variable.</source>
          <target state="translated">명령을 사용 하 여는 <bpt id="p1">*</bpt>FilePath<ept id="p1">*</ept> 서명할 스크립트를 지정 하려면 매개 변수 및 <bpt id="p2">*</bpt>인증서<ept id="p2">*</ept> 매개 변수를 $Cert 변수에 저장 되는 인증서를 지정 합니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>It uses the <bpt id="p1">*</bpt>IncludeChain<ept id="p1">*</ept> parameter to include all of the signatures in the trust chain (including the root authority).</source>
          <target state="translated">사용 하 여는 <bpt id="p1">*</bpt>명령은 IncludeChain<ept id="p1">*</ept> (루트 인증 기관) 신뢰 체인의 모든 서명이 포함 하도록 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>It also uses the <bpt id="p1">*</bpt>TimeStampServer<ept id="p1">*</ept> parameter to add a timestamp to the signature.</source>
          <target state="translated">또한 사용 하 여는 <bpt id="p1">*</bpt>이 명령은 TimeStampServer<ept id="p1">*</ept> 매개 변수를 서명에 타임 스탬프를 추가 합니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>This prevents the script from failing when the certificate expires.</source>
          <target state="translated">그러면 인증서가 만료되어도 스크립트에 오류가 발생하지 않습니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>PARAMETERS</source>
          <target state="translated">매개 변수</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>-Certificate</source>
          <target state="translated">-인증서</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Specifies the certificate that will be used to sign the script or file.</source>
          <target state="translated">스크립트 또는 파일을 서명하는 데 사용할 인증서를 지정합니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Enter a variable that stores an object representing the certificate or an expression that gets the certificate.</source>
          <target state="translated">인증서를 나타내는 개체 또는 인증서를 가져오는 식을 저장할 변수를 입력합니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>To find a certificate, use Get-PfxCertificate or use the Get-ChildItem cmdlet in the Certificate (Cert:) drive.</source>
          <target state="translated">인증서를 찾으려면 Get-PfxCertificate 또는 인증서(Cert:) 드라이브의 Get-ChildItem cmdlet을 사용합니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>If the certificate is not valid or does not have code-signing authority, the command fails.</source>
          <target state="translated">인증서가 유효하지 않거나 코드 서명 기관이 없으면 명령이 실행되지 않습니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>-Confirm</source>
          <target state="translated">-Confirm</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Prompts you for confirmation before running the cmdlet.Prompts you for confirmation before running the cmdlet.</source>
          <target state="translated">이 cmdlet을 실행 하기 전에 확인 하면 메시지를 표시 합니다. 이 cmdlet을 실행 하기 전에 확인 하면 메시지를 표시 합니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>-FilePath</source>
          <target state="translated">-파일 경로</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Specifies the path to a file that is being signed.</source>
          <target state="translated">서명할 파일 경로를 지정합니다.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>-Force</source>
          <target state="translated">-Force</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Allows the cmdlet to append a signature to a read-only file.</source>
          <target state="translated">cmdlet이 읽기 전용 파일에 서명을 추가할 수 있도록 합니다.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Even using the <bpt id="p1">*</bpt>Force<ept id="p1">*</ept> parameter, the cmdlet cannot override security restrictions.</source>
          <target state="translated">사용 하 여는 <bpt id="p1">*</bpt>Force<ept id="p1">*</ept> 매개 변수를 cmdlet에 보안 제한을 재정의할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>-HashAlgorithm</source>
          <target state="translated">-HashAlgorithm</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Specifies the hashing algorithm that Windows uses to compute the digital signature for the file.</source>
          <target state="translated">Windows에서 파일의 디지털 서명을 계산하는 데 사용하는 해싱 알고리즘을 지정합니다.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>For Windows PowerShell 3.0, the default is SHA-256, which is the Windows default hashing algorithm.</source>
          <target state="translated">Windows PowerShell 3.0에 대 한 기본값은 Windows 기본 해싱 알고리즘은는 s h A-256입니다.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>For Windows PowerShell 2.0, the default is SHA-1.</source>
          <target state="translated">Windows PowerShell 2.0에 대 한 기본값은 s h A-1입니다.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Files that are signed with a different hashing algorithm might not be recognized on other systems.</source>
          <target state="translated">다른 해싱 알고리즘으로 서명된 파일은 다른 시스템에서 인식되지 않을 수도 있습니다.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>-IncludeChain</source>
          <target state="translated">-이 명령은 IncludeChain</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Determines which certificates in the certificate trust chain are included in the digital signature.</source>
          <target state="translated">인증서 신뢰 체인의 인증서가 디지털 서명에 포함되어 있는지 확인합니다.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>NotRoot is the default.</source>
          <target state="translated">NotRoot 기본값입니다.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>The acceptable values for this parameter are:</source>
          <target state="translated">이 매개 변수에 허용되는 값은 다음과 같습니다.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>Signer.</source>
          <target state="translated">서명자입니다.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Includes only the signer's certificate.</source>
          <target state="translated">서명자의 인증서만 포함합니다.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>NotRoot.</source>
          <target state="translated">NotRoot 합니다.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>Includes all of the certificates in the certificate chain, except for the root authority.</source>
          <target state="translated">루트 인증 기관을 제외하고 인증서 체인의 모든 인증서를 포함합니다.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>All.</source>
          <target state="translated">모든.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>Includes all the certificates in the certificate chain.</source>
          <target state="translated">인증서 체인의 모든 인증서를 포함합니다.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>-LiteralPath</source>
          <target state="translated">-LiteralPath</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>Specifies the path to a file that is being signed.</source>
          <target state="translated">서명할 파일 경로를 지정합니다.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>Unlike <bpt id="p1">*</bpt>FilePath<ept id="p1">*</ept>, the value of the <bpt id="p2">*</bpt>LiteralPath<ept id="p2">*</ept> parameter is used exactly as it is typed.</source>
          <target state="translated">와 달리 <bpt id="p1">*</bpt>FilePath<ept id="p1">*</ept>, 의 값은 <bpt id="p2">*</bpt>LiteralPath<ept id="p2">*</ept> 매개 변수는 입력 된 대로 정확 하 게 사용 합니다.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>No characters are interpreted as wildcards.</source>
          <target state="translated">어떠한 문자도 와일드카드로 해석되지 않습니다.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>If the path includes escape characters, enclose it in single quotation marks.</source>
          <target state="translated">이스케이프 문자가 포함된 경로는 작은따옴표로 묶으세요.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>Single quotation marks tell Windows PowerShell not to interpret any characters as escape sequences.</source>
          <target state="translated">작은따옴표는 Windows PowerShell이 어떤 문자도 이스케이프 시퀀스로 해석하지 않도록 지시합니다.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>-TimestampServer</source>
          <target state="translated">이 명령은 TimestampServer-</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>Uses the specified time stamp server to add a time stamp to the signature.</source>
          <target state="translated">지정된 타임스탬프 서버를 사용하여 서명에 타임스탬프를 추가합니다.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>Type the URL of the time stamp server as a string.</source>
          <target state="translated">타임스탬프 서버의 URL을 문자열로 입력합니다.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>The time stamp represents the exact time that the certificate was added to the file.</source>
          <target state="translated">타임스탬프는 인증서를 파일에 추가한 정확한 시간을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>A time stamp prevents the script from failing if the certificate expires because users and programs can verify that the certificate was valid at the time of signing.</source>
          <target state="translated">타임스탬프를 사용하면 사용자 및 프로그램에서 서명 당시 인증서가 유효했는지를 확인할 수 있으므로 인증서가 만료되어도 스크립트 오류를 방지할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>-WhatIf</source>
          <target state="translated">-WhatIf</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>Shows what would happen if the cmdlet runs.</source>
          <target state="translated">cmdlet이 실행될 경우 결과 동작을 표시합니다.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>The cmdlet is not run.Shows what would happen if the cmdlet runs.</source>
          <target state="translated">Cmdlet은 실행 되지 않습니다. Cmdlet이 실행 되 면 어떻게 되는지를 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>The cmdlet is not run.</source>
          <target state="translated">cmdlet이 실행되지 않습니다.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>CommonParameters</source>
          <target state="translated">CommonParameters</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutVariable, -OutBuffer, -PipelineVariable, -Verbose, -WarningAction, and -WarningVariable.</source>
          <target state="translated">이 cmdlet은 공통 매개 변수:-디버그,-ErrorAction,-ErrorVariable,-InformationAction,-InformationVariable,-OutVariable,-OutBuffer,-PipelineVariable,-Verbose,-WarningAction 및-warningvariable을 지원 합니다.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>For more information, see about_CommonParameters (http://go.microsoft.com/fwlink/?LinkID=113216).</source>
          <target state="translated">자세한 내용은 about_CommonParameters (http://go.microsoft.com/fwlink/?LinkID=113216)를 참조 합니다.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>INPUTS</source>
          <target state="translated">입력</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>System.String</source>
          <target state="translated">System.String</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>You can pipe a string that contains the file path to <bpt id="p1">**</bpt>Set-AuthenticodeSignature<ept id="p1">**</ept>.</source>
          <target state="translated">파일 경로를 포함 하는 문자열을 파이프할 수 <bpt id="p1">**</bpt>Set-authenticodesignature<ept id="p1">**</ept>합니다.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>OUTPUTS</source>
          <target state="translated">출력</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>System.Management.Automation.Signature</source>
          <target state="translated">System.Management.Automation.Signature</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>NOTES</source>
          <target state="translated">참고 사항</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>RELATED LINKS</source>
          <target state="translated">관련된 링크</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>Get-AuthenticodeSignature</source>
          <target state="translated">Get-AuthenticodeSignature</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>Get-ExecutionPolicy</source>
          <target state="translated">Get-ExecutionPolicy</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>Get-PfxCertificate</source>
          <target state="translated">Get-PfxCertificate</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>Set-ExecutionPolicy</source>
          <target state="translated">Set-ExecutionPolicy</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>about_Execution_Policies</source>
          <target state="translated">about_Execution_Policies</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>about_Signing</source>
          <target state="translated">about_Signing</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>