<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ko-kr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-1c394fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">a448e05f2226d9482b98c657f9208d11e38c8449</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">reference\3.0\Microsoft.PowerShell.Core\About\about_Remote_Variables.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions" />
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">761990977908e6816d3c4abf3b1244b307630482</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">8ad9b6eb18384ec92717366d69648e4c1b283fd2</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>about_Remote_Variables</source>
          <target state="translated">about_Remote_Variables</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>powershell, cmdlet</source>
          <target state="translated">powershell cmdlet</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>About Remote Variables</source>
          <target state="translated">원격 변수 정보</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>about_Remote_Variables</source>
          <target state="translated">about_Remote_Variables</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>TOPIC</source>
          <target state="translated">항목</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>about_Remote_Variables</source>
          <target state="translated">about_Remote_Variables</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>SHORT DESCRIPTION</source>
          <target state="translated">간단한 설명</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Explains how to use local and remote variables in remote commands.</source>
          <target state="translated">원격 명령에서 로컬 및 원격 변수를 사용하는 방법을 설명합니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>LONG DESCRIPTION</source>
          <target state="translated">자세한 설명</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>You can use variables in commands that you run on remote computers.</source>
          <target state="translated">원격 컴퓨터에서 실행 되는 명령에서 변수를 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Simply assign a value to the variable and then use the variable in place of the value.</source>
          <target state="translated">변수에 값을 할당 하기만 하 고 값 대신 변수를 사용 합니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>By default, the variables in remote commands are assumed to be defined in the session in which the command runs.</source>
          <target state="translated">기본적으로 원격 명령에서 변수는 명령이 실행 되는 세션에서 정의 되어야으로 간주 됩니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>You can also use variables that are defined in the local session, but you must identify them as local variables in the command.</source>
          <target state="translated">로컬 세션에서 정의 된 변수를 사용할 수도 있습니다 하지만 명령에 지역 변수로 식별 해야 합니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>USING REMOTE VARIABLES</source>
          <target state="translated">원격 변수를 사용 하 여</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Windows PowerShell assumes that the variables used in remote commands  are defined in the session in which the command runs.</source>
          <target state="translated">Windows PowerShell 명령이 실행 되는 세션에서 원격 명령에서 사용 되는 변수 정의 되어 있는지를 가정 합니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>In the following example, the $ps variable is defined in the temporary  session in which the Get-WinEvent command runs.</source>
          <target state="translated">다음 예제에서는 $ps 변수는 Get-winevent 명령이 실행 되는 임시 세션에서 정의 됩니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>PS C:&gt;Invoke-Command -ComputerName S1 -ScriptBlock {$ps = "Windows PowerShell"; Get-WinEvent -LogName $ps}</source>
          <target state="translated">PS c: &gt; Invoke-command-ComputerName S1-ScriptBlock {$ps = "Windows PowerShell"; Get-winevent-LogName $ps}</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Similarly, when the command runs in a persistent session (PSSession), the remote variable must be defined in the same PSSession.</source>
          <target state="translated">마찬가지로, 영구 세션 (PSSession)에서 명령이 실행 될 때 원격 변수가 동일한 PSSession에서 정의 되어야 합니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>PS C:&gt;$s = New-PSSession -ComputerName S1</source>
          <target state="translated">PS c: &gt; $s = New-pssession-ComputerName S1</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>PS C:&gt;Invoke-Command -ComputerName S1 -ScriptBlock {$ps = "Windows PowerShell"}</source>
          <target state="translated">PS c: &gt; Invoke-command-ComputerName S1-ScriptBlock {$ps = "Windows PowerShell"}</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>PS C:&gt;Invoke-Command -Sessions $s -ScriptBlock {Get-WinEvent -LogName $ps}</source>
          <target state="translated">PS c: &gt; Invoke-command-세션 $s-ScriptBlock {Get-winevent-LogName $ps}</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>USING LOCAL VARIABLES</source>
          <target state="translated">지역 변수를 사용 하 여</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>You can also use local variables in remote commands, but you must indicate that the variable is defined in the local session.</source>
          <target state="translated">원격 명령에서 로컬 변수를 사용할 수도 있지만 로컬 세션에 변수가 정의 되어 있는지를 지정 해야 합니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Beginning in Windows PowerShell 3.0, you can use the Using scope modifier to identify a local variable in a remote command.</source>
          <target state="translated">Windows PowerShell 3.0 부터는 원격 명령에서 로컬 변수를 식별 하는 Using 범위 한정자를 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>The syntax of Using is as follows:</source>
          <target state="translated">사용 하 여 구문은 다음과 같습니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>The syntax is: $Using:</source>
          <target state="translated">구문은: $Using:</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>In the following example, the $ps variable is created in the local session, but is used in the session in which the command runs.</source>
          <target state="translated">다음 예에서 $ps 변수는 로컬 세션에서 만들어지지만 명령이 실행 되는 세션에 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>The Using scope modifier identifies $ps as a local variable.</source>
          <target state="translated">Using 범위 한정자에 지역 변수로 $ps를 식별합니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>PS C:&gt;$ps = "Windows PowerShell" PS C:&gt;Invoke-Command -ComputerName S1 -ScriptBlock {Get-WinEvent -LogName $Using:ps}</source>
          <target state="translated">PS c: &gt; $ps = "Windows PowerShell" PS c: &gt; Invoke-command-ComputerName S1-ScriptBlock {Get-winevent-LogName $Using: ps}</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>You can also use the Using scope modifier in PSSessions.</source>
          <target state="translated">Pssession에서 Using 범위 한정자를 사용할 수도 있습니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>PS C:&gt;$s = New-PSSession -ComputerName S1</source>
          <target state="translated">PS c: &gt; $s = New-pssession-ComputerName S1</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>PS C:&gt;$ps = "Windows PowerShell"</source>
          <target state="translated">PS c: &gt; $ps = "Windows PowerShell"</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>PS C:&gt;Invoke-Command -Sessions $s -ScriptBlock {Get-WinEvent -LogName $Using:ps}</source>
          <target state="translated">PS c: &gt; Invoke-command-세션 $s-ScriptBlock {Get-winevent-LogName $Using: ps}</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>USING LOCAL VARIABLES IN WINDOWS POWERSHELL 2.0</source>
          <target state="translated">지역 변수를 사용 하 여 WINDOWS POWERSHELL 2.0에서</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>You can use local variables in a remote command by defining parameters for the remote command and using the ArgumentList parameter of the Invoke-Command cmdlet to specify the local variable as the parameter value.</source>
          <target state="translated">원격 명령에 대 한 매개 변수를 정의 하 고 Invoke-command cmdlet의 ArgumentList 매개 변수를 사용 하 여 매개 변수 값으로는 로컬 변수를 지정 하 여 원격 명령에서 로컬 변수를 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>This command format is valid on Windows PowerShell 2.0 and later versions of Windows PowerShell.</source>
          <target state="translated">이 명령 형식은 Windows PowerShell 2.0 및 이후 버전의 Windows PowerShell에 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>-- Use the param keyword to define parameters for the remote command.</source>
          <target state="translated">-원격 명령에 대 한 매개 변수를 정의할 param 키워드를 사용 합니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>The parameter names are placeholders that do not need to match the name of the local variable.</source>
          <target state="translated">매개 변수 이름은 지역 변수의 이름과 일치 하지 않아도 되는 자리 표시자.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>-- Use the parameters defined by the param keyword in the command.</source>
          <target state="translated">-Param 키워드 명령에 의해 정의 된 매개 변수를 사용 합니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>-- Use the ArgumentList parameter of the Invoke-Command cmdlet to specify the local variable as the parameter value.</source>
          <target state="translated">-매개 변수 값으로는 로컬 변수를 지정 하는 Invoke-command cmdlet의 ArgumentList 매개 변수를 사용 합니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>For example, the following commands define the $ps variable in the local session and then use it in a remote command.</source>
          <target state="translated">예를 들어 다음 명령은 로컬 세션에서 $ps 변수를 정의 하 고 원격 명령에서 사용 하 여 합니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>The command uses $log as the parameter name and the local variable, $ps, as its value.</source>
          <target state="translated">해당 값으로 $ps 지역 변수 및 매개 변수 이름으로 명령에서 $log 합니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>C:\PS&gt;$ps = "Windows PowerShell"</source>
          <target state="translated">C:\PS &gt; $ps = "Windows PowerShell"</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>C:\PS&gt;Invoke-Command -ComputerName S1 -ScriptBlock {param($log) Get-WinEvent -logname $log} -ArgumentList $ps</source>
          <target state="translated">C:\PS &gt; Invoke-command-ComputerName S1-ScriptBlock {param($log) Get-winevent-logname $log}-ArgumentList $ps</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>KEYWORDS</source>
          <target state="translated">키워드</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>about_Using</source>
          <target state="translated">about_Using</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>SEE ALSO</source>
          <target state="translated">참고 항목</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>about_Remote about_PSSessions about_Scopes Enter-PSSession Invoke-Command New-PSSession</source>
          <target state="translated">about_Remote about_PSSessions about_Scopes Enter-pssession Invoke-command New-pssession</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>