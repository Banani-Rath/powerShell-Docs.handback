<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ko-kr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-1c394fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">652ddd2eebf056fa983b4bfe64ef2085f5a9649f</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">reference\4.0\Microsoft.PowerShell.Core\About\about_Scripts.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions" />
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1b6c807e43c60bc5e015267aa4448f43187d8080</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">2bedc30b0d0f5ea6e05f9d5e2540591c9006c90e</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>about_Scripts</source>
          <target state="translated">about_Scripts</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>powershell, cmdlet</source>
          <target state="translated">powershell cmdlet</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>About Scripts</source>
          <target state="translated">스크립트에 대 한</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>about_Scripts</source>
          <target state="translated">about_Scripts</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>about_Scripts</source>
          <target state="translated">about_Scripts</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>SHORT DESCRIPTION</source>
          <target state="translated">간단한 설명</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Describes how to run and write scripts in  Windows PowerShell�.</source>
          <target state="translated">실행 하 고 Windows PowerShell에서 스크립트를 작성 하는 방법에 설명 합니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>LONG DESCRIPTION</source>
          <target state="translated">자세한 설명</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>A script is a plain text file that contains one or more  Windows PowerShell commands.</source>
          <target state="translated">스크립트는 하나 이상의 Windows PowerShell 명령을 포함 하는 일반 텍스트 파일.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Windows PowerShell scripts have a .ps1 file name extension.</source>
          <target state="translated">Windows PowerShell 스크립트가.ps1 파일 이름 확장명을 보유 합니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Running a script is a lot like running cmdlet.</source>
          <target state="translated">스크립트 실행은 cmdlet을 실행 합니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>You type the path and file name of the script and use parameters to submit data and set options.</source>
          <target state="translated">스크립트의 경로 파일 이름을 입력 하 고 매개 변수를 사용 하 여 데이터를 전송 하도록 옵션을 설정 합니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>You can run scripts on your computer or in a remote session on a different computer.</source>
          <target state="translated">다른 컴퓨터에서 컴퓨터 또는 원격 세션에서 스크립트를 실행할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Writing a script saves a command for later use and makes it easy to share with others.</source>
          <target state="translated">스크립트를 작성 나중에 사용에 대 한 명령을 저장 하 고 쉽게 다른 사용자와 공유.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Most importantly, it lets you run the commands simply by typing the script path and the file name.</source>
          <target state="translated">가장 중요 하 게 스크립트 경로 파일 이름을 입력 하 여 명령을 실행할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Scripts can be as simple as a single command in a file or as extensive as a complex program.</source>
          <target state="translated">스크립트 파일에서 단일 명령으로 간단 하거나 복잡 한 프로그램으로 광범위 하 게 수 있습니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Scripts have additional features, such as the <ph id="ph1">\#</ph>Requires special comment, the use of parameters, support for data sections, and digital signing for security.</source>
          <target state="translated">스크립트 등의 추가 기능이 포함 되어는 <ph id="ph1">\#</ph>특수 주석, 매개 변수, 지원 데이터 섹션 및 보안에 대 한 디지털 서명을 사용 해야 합니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>You can also write Help topics for scripts and for any functions in the script.</source>
          <target state="translated">또한 스크립트에서 모든 함수 및 스크립트에 대 한 도움말 항목을 작성할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>HOW TO RUN A SCRIPT</source>
          <target state="translated">스크립트를 실행 하는 방법</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Before you can run a script, you need to change the default  Windows PowerShell execution policy.</source>
          <target state="translated">스크립트를 실행 하려면 먼저 기본 Windows PowerShell 실행 정책을 변경 해야 합니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>The default execution policy, "Restricted", prevents all scripts from running, including scripts that you write on the local computer.</source>
          <target state="translated">기본 실행 정책을 "Restricted" 실행, 로컬 컴퓨터에서 작성 하는 스크립트를 포함 하 여 모든 스크립트를 방지 합니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>For more information, see about_Execution_Policies.</source>
          <target state="translated">자세한 내용은 about_Execution_Policies를 참조하세요.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>The execution policy is saved in the registry, so you need to change it only once on each computer.</source>
          <target state="translated">각 컴퓨터에서 한 번만 변경 해야 하므로 실행 정책은 레지스트리에 저장 됩니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>To change the execution policy, use the following procedure.</source>
          <target state="translated">실행 정책을 변경 하려면 다음 절차를 수행 합니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Start Windows PowerShell with the "Run  as administrator" option.</source>
          <target state="translated">"관리자 권한으로 실행" 옵션으로 Windows PowerShell을 시작 합니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>At the command prompt, type:</source>
          <target state="translated">명령 프롬프트에서 다음과 같이 입력합니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Set-ExecutionPolicy AllSigned</source>
          <target state="translated">Set-executionpolicy AllSigned</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>-or-</source>
          <target state="translated">-또는-</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Set-ExecutionPolicy RemoteSigned</source>
          <target state="translated">Set-executionpolicy RemoteSigned</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>The change is effective immediately</source>
          <target state="translated">변경 내용은 즉시 적용</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>To run a script, type the full name and the full path to the script file.</source>
          <target state="translated">스크립트를 실행 하려면 전체 이름 및 스크립트 파일의 전체 경로 입력 합니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>For example, to run the Get-ServiceLog.ps1 script in the C:\Scripts directory, type:</source>
          <target state="translated">예를 들어 C:\Scripts 디렉터리에 Get ServiceLog.ps1 스크립트를 실행 하려면 다음을 입력 합니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>To run a script in the current directory, type the path to the current directory, or use a dot to represent the current directory, followed by a path backslash (.<ph id="ph1">\)</ph>.</source>
          <target state="translated">현재 디렉터리의 경로를 입력 하거나 현재 디렉터리를 나타내는 점을 사용 하 여 현재 디렉터리에 스크립트를 실행 하려면 뒤에 백슬래시가 오는 경로 (.<ph id="ph1">\)</ph>합니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>For example, to run the ServicesLog.ps1 script in the local directory, type:</source>
          <target state="translated">예를 들어 로컬 디렉터리에 ServicesLog.ps1 스크립트를 실행 하려면 다음을 입력 합니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>If the script has parameters, type the parameters and parameter values after the script file name.</source>
          <target state="translated">스크립트 매개 변수가 있으면 매개 변수 값과 매개 변수를 스크립트 파일 이름 뒤에 입력 합니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>For example, the following command uses the ServiceName parameter of the Get-ServiceLog script to request a log of WinRM service activity.</source>
          <target state="translated">예를 들어 다음 명령은 Get ServiceLog 스크립트의 ServiceName 매개 변수를 사용 하 여 WinRM 서비스 작업 로그를 요청 합니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>As a security feature,  Windows PowerShell does not run scripts when you double-click the script icon in File Explorer or when you type the script name without a full path, even when the script is in the current directory.</source>
          <target state="translated">보안 기능으로 Windows PowerShell 스크립트가 실행 되지 않습니다 파일 탐색기 또는 스크립트는 현재 디렉터리에 있는 경우에 전체 경로 없이 스크립트 이름을 입력 하면 스크립트 아이콘을 두 번 클릭 합니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>For more information about running commands and scripts in Windows PowerShell, see about_Command_Precedence.</source>
          <target state="translated">Windows PowerShell에서 명령 및 스크립트를 실행 하는 방법에 대 한 자세한 내용은 about_Command_Precedence를 참조 하십시오.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>RUN WITH POWERSHELL</source>
          <target state="translated">POWERSHELL을 사용 하 여 실행</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Beginning in  Windows PowerShell 3.0, you can run scripts from File Explorer (or Windows Explorer, in earlier versions of Windows).</source>
          <target state="translated">Windows PowerShell 3.0부터, 파일 탐색기 (또는 이전 버전의 Windows에서 Windows 탐색기)에서 스크립트를 실행할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>To use the "Run with PowerShell" feature:</source>
          <target state="translated">PowerShell에서 실행 "기능을 사용 합니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>The "Run with PowerShell" feature is designed to run scripts that do not have required parameters and do not return output to the command prompt.</source>
          <target state="translated">PowerShell에서 실행 "기능은 필수 매개 변수가 없는 하 고 명령 프롬프트로 출력을 반환 하지 않는 스크립트를 실행 하도록 설계 되었습니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>For more information, see about_Run_With_PowerShell</source>
          <target state="translated">자세한 내용은 about_Run_With_PowerShell을 참조 하십시오.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>RUNNING SCRIPTS ON OTHER COMPUTERS</source>
          <target state="translated">다른 컴퓨터에서 스크립트 실행</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>To run a script on one or more remote computers, use the FilePath parameter of the Invoke-Command cmdlet.</source>
          <target state="translated">하나 이상의 원격 컴퓨터에서 스크립트를 실행 하려면 Invoke-command cmdlet의 FilePath 매개 변수를 사용 합니다.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Enter the path and file name of the script as the value of the FilePath parameter.</source>
          <target state="translated">FilePath 매개 변수의 값으로 스크립트의 경로 파일 이름을 입력 합니다.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>The script must reside on the local computer or in a directory that the local computer can access.</source>
          <target state="translated">스크립트는 로컬 컴퓨터나 로컬 컴퓨터에서 액세스할 수 있는 디렉터리에 있어야 합니다.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>The following command runs the Get-ServiceLog.ps1 script on the Server01 and Server02 remote computers.</source>
          <target state="translated">다음 명령은 Server01 및 Server02 원격 컴퓨터에서 Get ServiceLog.ps1 스크립트를 실행 합니다.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>GET HELP FOR SCRIPTS</source>
          <target state="translated">스크립트에 대 한 도움말 보기</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>The Get-Help cmdlet gets the help topics for scripts as well as for cmdlets and other types of commands.</source>
          <target state="translated">Get-help cmdlet cmdlet 및 다른 유형의 명령 스크립트에 대 한 도움말 항목을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>To get the help topic for a script, type "Get-Help" followed by the path and file name of the script.</source>
          <target state="translated">스크립트에 대 한 도움말 항목을 가져오려면 "Get-help" 다음 스크립트의 경로 파일 이름을 입력 합니다.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>If the script path is in your Path environment variable, you can omit the path.</source>
          <target state="translated">스크립트 경로가 Path 환경 변수에 경로 생략할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>For example, to get help for the ServicesLog.ps1 script, type:</source>
          <target state="translated">예를 들어 ServicesLog.ps1 스크립트에 대 한 도움말을 보려면 다음을 입력 합니다.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>HOW TO WRITE A SCRIPT</source>
          <target state="translated">스크립트를 작성 하는 방법</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>A script can contain any valid  Windows PowerShell commands, including single commands, commands that use the pipeline, functions, and control structures such as If statements and For loops.</source>
          <target state="translated">스크립트에는 단일 명령을, 파이프라인, 함수 및 등의 제어 구조를 사용 하는 명령을 포함 한 모든 유효한 Windows PowerShell 명령을 포함 될 수 있습니다 문을 루프입니다.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>To write a script, start a text editor (such as Notepad) or a script editor (such as the  Windows PowerShell Integrated Scripting Environment [ISE]).</source>
          <target state="translated">스크립트를 작성 하려면 메모장과 같은 텍스트 편집기 또는 스크립트 편집기 (예: Windows PowerShell 통합 스크립팅 환경 [ISE])를 시작 합니다.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Type the commands and save them in a file with a valid file name and the .ps1 file name extension.</source>
          <target state="translated">명령을 입력 하 고 올바른 파일 이름 및.ps1 파일 이름 확장명을 가진 파일에 저장 합니다.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>The following example is a simple script that gets the services that are running on the current system and saves them to a log file.</source>
          <target state="translated">다음 예제에서는 간단한 가져오는 스크립트를 현재 시스템에서 실행 되는 서비스는 로그 파일에 저장 합니다.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>The log file name is created from the current date.</source>
          <target state="translated">현재 날짜에서 로그 파일 이름이 생성 됩니다.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>To create this script, open a text editor or a script editor, type these commands, and then save them in a file named ServiceLog.ps1.</source>
          <target state="translated">이 스크립트를 만들려면 스크립트 편집기나 텍스트 편집기를 열고이 명령을 입력 한 ServiceLog.ps1 라는 파일에 저장 합니다.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>PARAMETERS IN SCRIPTS</source>
          <target state="translated">매개 변수 스크립트에서</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>To define parameters in a script, use a Param statement.</source>
          <target state="translated">스크립트의 매개 변수를 정의 하려면 Param 문을 사용 합니다.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>The Param statement must be the first statement in a script, except for comments and any <ph id="ph1">\#</ph>Requires statements.</source>
          <target state="translated">Param 문을 주석 및 제외 하 고 스크립트의 첫 번째 문 이어야 합니다. <ph id="ph1">\#</ph>문이 필요 합니다.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>Script parameters work like function parameters.</source>
          <target state="translated">스크립트 매개 변수는 함수 매개 변수 처럼 작동합니다.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>The parameter values are available to all of the commands in the script.</source>
          <target state="translated">매개 변수 값의 모든 스크립트에 명령을 제공 됩니다.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>All of the features of function parameters, including the Parameter attribute and its named arguments, are also valid in scripts.</source>
          <target state="translated">함수 매개 변수, 매개 변수 특성 및 해당 명명 된 인수를 포함 하 여의 기능 모두도 스크립트에 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>When running the script, script users type the parameters after the script name.</source>
          <target state="translated">스크립트를 실행할 때 스크립트 사용자 스크립트 이름을 후 매개 변수를 입력 합니다.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>The following example shows a Test-Remote.ps1 script that has a ComputerName parameter.</source>
          <target state="translated">다음 예제에서는 ComputerName 매개 변수를 가진 Remote.ps1 테스트 스크립트를 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>Both of the script functions can access the ComputerName parameter value.</source>
          <target state="translated">스크립트 함수는 모두 ComputerName 매개 변수 값은 액세스할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>To run this script, type the parameter name after the script name.</source>
          <target state="translated">이 스크립트를 실행 하려면 매개 변수 이름을 스크립트 이름 뒤에 입력 합니다.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>For example:</source>
          <target state="translated">예:</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>For more information about the Param statement and the function parameters, see about_Functions and about_Functions_Advanced_Parameters.</source>
          <target state="translated">Param 문 및 함수 매개 변수에 대 한 자세한 내용은 about_Functions 및 about_Functions_Advanced_Parameters를 참조 하십시오.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>WRITING HELP FOR SCRIPTS</source>
          <target state="translated">스크립트에 대 한 쓰기 도움말</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>You can write a help topic for a script by using either of the two following methods:</source>
          <target state="translated">다음 두 가지 방법 중 하나를 사용 하 여 스크립트에 대 한 도움말 항목을 작성할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>--  Comment-Based Help for Scripts</source>
          <target state="translated">-스크립트에 대 한 설명 기반 도움말</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>Create a Help topic by using special keywords in the comments.</source>
          <target state="translated">설명에 특수 한 키워드를 사용 하 여 도움말 항목을 만듭니다.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>To create comment-based Help for a script, the comments must be placed at the beginning or end of the script file.</source>
          <target state="translated">스크립트에 대 한 설명 기반 도움말을 만들려면 주석은 시작 또는 스크립트 파일의 끝에 배치 되어야 합니다.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>For more information about comment-based Help, see about_Comment_Based_Help.</source>
          <target state="translated">설명 기반 도움말에 대 한 자세한 내용은 about_Comment_Based_Help를 참조 하십시오.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>--  XML-Based Help  for Scripts</source>
          <target state="translated">-스크립트에 대 한 도움말 XML 기반</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>Create an XML-based Help topic, such as the type that is typically created for cmdlets.</source>
          <target state="translated">XML 기반 도움말 항목, 일반적으로 cmdlet에 대해 만들어지는 형식 등을 만듭니다.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>XML-based Help is required if you are translating Help topics into multiple languages.</source>
          <target state="translated">도움말 항목을 여러 언어로 번역 하는 XML 기반 도움말 필요 합니다.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>To associate the script with the XML-based Help topic, use the .ExternalHelp Help comment keyword.</source>
          <target state="translated">스크립트는 XML 기반 도움말 항목을 연결 하려면 사용 하 여는 합니다. ExternalHelp 도움말 주석 키워드입니다.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>For more information about the ExternalHelp keyword, see about_Comment_Based_Help.</source>
          <target state="translated">ExternalHelp 키워드에 대 한 자세한 내용은 about_Comment_Based_Help를 참조 하십시오.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>For more information about XML-based help, see "How to Write Cmdlet Help" in the MSDN (Microsoft Developer Network) library at http:<ph id="ph1">\/\/</ph>go.microsoft.com<ph id="ph2">\/</ph>fwlink<ph id="ph3">\/</ph>?LinkID<ph id="ph4">\=</ph>123415.</source>
          <target state="translated">XML 기반 도움말에 대 한 자세한 내용은 "어떻게 Cmdlet 도움말 작성" http MSDN (Microsoft Developer Network) 라이브러리에 참조:<ph id="ph1">\/\/</ph>이 포트는 go.microsoft.com<ph id="ph2">\/</ph>fwlink<ph id="ph3">\/</ph>? LinkID<ph id="ph4">\=</ph>123415 합니다.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>SCRIPT SCOPE AND DOT SOURCING</source>
          <target state="translated">스크립트 범위 및 도트 소싱</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>Each script runs in its own scope.</source>
          <target state="translated">각 스크립트 자체 범위에서 실행 됩니다.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>The functions, variables, aliases, and drives that are created in the script exist only in the script scope.</source>
          <target state="translated">함수, 변수, 별칭 및 스크립트에서 만든 드라이브를 스크립트 범위에만 존재 합니다.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>You cannot access these items or their values in the scope in which the script runs.</source>
          <target state="translated">이러한 항목이 나 그 값은 스크립트가 실행 되는 범위에 액세스할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>To run a script in a different scope, you can specify a scope, such as Global or Local, or you can dot source the script.</source>
          <target state="translated">다른 범위에는 스크립트를 실행 하려면 로컬 또는 전역 같은 범위를 지정할 수 또는 스크립트 소스를 점 수 있습니다.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>The dot sourcing feature lets you run a script in the current scope instead of in the script scope.</source>
          <target state="translated">도트 소싱 기능 대신 스크립트 범위에 현재 범위에는 스크립트를 실행할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>When you run a script that is dot sourced, the commands in the script run as though you had typed them at the command prompt.</source>
          <target state="translated">도트 소싱 있는 스크립트를 실행 하면 명령 프롬프트에서 입력 한 것 처럼 스크립트의 명령을 실행 합니다.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>The functions, variables, aliases, and drives that the script creates are created in the scope in which you are working.</source>
          <target state="translated">함수, 변수, 별칭 및 드라이브를 만드는 스크립트는 작업 중인 범위 내에 생성 됩니다.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>After the script runs, you can use the created items and access their values in your session.</source>
          <target state="translated">스크립트가 실행 된 후 생성된 된 항목을 사용할 수 있으며 세션에서 해당 값에 액세스할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>To dot source a script, type a dot (.) and a space before the script path.</source>
          <target state="translated">스크립트 소스를 점, 점 (.) 및 스크립트 경로 앞에 공백을 입력 합니다.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>For example:</source>
          <target state="translated">예:</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>After the UtilityFunctions script runs, the functions and variables that the script creates are added to the current scope.</source>
          <target state="translated">UtilityFunctions 스크립트를 실행 한 후 함수 및 변수를 만드는 스크립트는 현재 범위에 추가 됩니다.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>For example, the UtilityFunctions.ps1 script creates the New-Profile function and the $ProfileName variable.</source>
          <target state="translated">예를 들어 UtilityFunctions.ps1 스크립트는 새 프로필 함수 및 $ProfileName 변수를 만듭니다.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>If you run the UtilityFunctions.ps1 script in its own script scope, the New-Profile function and the $ProfileName variable exist only while the script is running.</source>
          <target state="translated">자체 스크립트 범위에서 UtilityFunctions.ps1 스크립트를 실행 하는 경우 새 프로필 함수 및 $ProfileName 변수 스크립트가 실행 되는 동안에 존재 합니다.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>When the script exits, the function and variable are removed, as shown in the following example.</source>
          <target state="translated">스크립트 종료 될 때 함수 및 변수 제거 됩니다, 다음 예제와 같이 합니다.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>When you dot source the script and run it, the script creates the New-Profile function and the $ProfileName variable in your session in your scope.</source>
          <target state="translated">점 있습니다 스크립트 소스를 실행 하는 경우 스크립트 새로 프로필 함수와 변수를 만듭니다는 $ProfileName 세션에서 사용자의 범위에 있습니다.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>After the script runs, you can use the New-Profile function in your session, as shown in the following example.</source>
          <target state="translated">스크립트가 실행 된 후에 다음 예제와 같이 사용자 세션에서 새 프로필 함수를 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>For more information about scope, see about_Scopes.</source>
          <target state="translated">범위에 대 한 자세한 내용은 about_Scopes를 참조 하십시오.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>SCRIPTS IN MODULES</source>
          <target state="translated">모듈의 스크립트</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>A module is a set of related Windows PowerShell resources that can be distributed as a unit.</source>
          <target state="translated">모듈은 하나의 단위로 배포할 수 있는 관련된 Windows PowerShell 리소스 집합입니다.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>You can use modules to organize your scripts, functions, and other resources.</source>
          <target state="translated">스크립트, 함수 및 기타 리소스를 구성 하려면 모듈을 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>You can also use modules to distribute your code to others, and to get code from trusted sources.</source>
          <target state="translated">다른 사람에 게 코드를 배포 하 고 신뢰할 수 있는 원본에서 코드를 가져올 수에 모듈을 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>You can include scripts in your modules, or you can create a script module, which is a module that consists entirely or primarily of a script and supporting resources.</source>
          <target state="translated">사용자 모듈에서 스크립트를 포함할 수 또는 전적으로 또는 기본적으로 구성 되는 모듈 하는 스크립트 모듈을 만들 수는 스크립트 및 지원 리소스.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>A script module is just a script with a .psm1 file name extension.</source>
          <target state="translated">스크립트 모듈은 방금.psm1 파일 이름 확장명이 스크립트.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>For more information about modules, see about_Modules.</source>
          <target state="translated">모듈에 대한 자세한 내용은 about_Modules를 참조하세요.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>OTHER SCRIPT FEATURES</source>
          <target state="translated">다른 스크립트 기능</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>Windows PowerShell has many useful features that you can use in scripts.</source>
          <target state="translated">Windows PowerShell 스크립트에서 사용할 수 있는 유용한 기능이 있습니다.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>Requires</source>
          <target state="translated">필요</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>You can use a <ph id="ph1">\#</ph>Requires statement to prevent a script from running without specified modules or snap-ins and a specified version of  Windows PowerShell.</source>
          <target state="translated">사용할 수는 <ph id="ph1">\#</ph>문을 사용 하는 스크립트 지정한 모듈 또는 스냅인과 지정된 된 버전의 Windows PowerShell 없이 실행 되지 않도록 합니다.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>For more information, see about_Requires.</source>
          <target state="translated">자세한 내용은 about_Requires를 참조 하십시오.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>$PSCommandPath</source>
          <target state="translated">$PSCommandPath</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>Contains the full path and name of the script that is being run.</source>
          <target state="translated">실행 되는 스크립트의 이름과 전체 경로 포함 합니다.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>This parameter is valid in all scripts.</source>
          <target state="translated">이 매개 변수는 모든 스크립트에서 유효 합니다.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>This automatic variable is introduced in  Windows PowerShell 3.0.</source>
          <target state="translated">이 자동 변수는 Windows PowerShell 3.0에서 도입 되었습니다.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>$PSScriptRoot</source>
          <target state="translated">$PSScriptRoot</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>Contains the directory from which a script is being run.</source>
          <target state="translated">스크립트를 실행 하는 디렉터리를 포함 합니다.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>In  Windows PowerShell 2.0, this variable is valid only in script modules (.psm1).</source>
          <target state="translated">Windows PowerShell 2.0에서이 변수는 스크립트 모듈 (.psm1)에 유효 합니다.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>Beginning in  Windows PowerShell 3.0, it is valid in all scripts.</source>
          <target state="translated">Windows PowerShell 3.0부터는 모든 스크립트 에서입니다.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>$MyInvocation</source>
          <target state="translated">$MyInvocation</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>The $MyInvocation automatic variable contains information about the current script, including information about how it was started or "invoked."</source>
          <target state="translated">$MyInvocation 자동 변수의 시작 또는 "호출" 된 방식에 대 한 정보를 포함 하 여 현재 스크립트에 대 한 정보를 포함 합니다.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>You can use this variable and its properties to get information about the script while it is  running.</source>
          <target state="translated">실행 되는 동안 스크립트에 대 한 정보를 얻으려면이 변수 및 해당 속성을 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>For example, the $MyInvocation.MyCommand.Path variable contains the path and file name of the script.</source>
          <target state="translated">예를 들어 $MyInvocation.MyCommand.Path 변수 스크립트의 경로 파일 이름을 포함합니다.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>$MyInvocation.Line contains the command that started the script, including all parameters and values.</source>
          <target state="translated">$MyInvocation.Line 모든 매개 변수 및 값을 포함 하 여 스크립트를 시작 하는 명령이 포함 되어 있습니다.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>Beginning in  Windows PowerShell 3.0, $MyInvocation has two new properties that provide information about the script that called or invoked the current script.</source>
          <target state="translated">Windows PowerShell 3.0 부터는 $MyInvocation에 호출 하거나 현재 스크립트를 호출 하는 스크립트에 대 한 정보를 제공 하는 두 개의 새 속성이 있습니다.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>The values of these properties are populated only when the invoker or caller is a script.</source>
          <target state="translated">이러한 속성의 값은 호출자 또는 호출자에 게 되는 스크립트 하는 경우에 채워집니다.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>-- PSCommandPath contains the full path and name of the script that called or invoked the current script.</source>
          <target state="translated">-PSCommandPath 호출 하거나 현재 스크립트를 호출 하는 스크립트의 이름과 전체 경로 포함 합니다.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>-- PSScriptRoot contains the directory of the script that called or invoked the current script.</source>
          <target state="translated">-PSScriptRoot 호출 하거나 현재 스크립트를 호출 하는 스크립트의 디렉터리를 포함 합니다.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>Unlike the $PSCommandPath and $PSScriptRoot automatic variables, which contain information about the current script, the PSCommandPath and PSScriptRoot properties of the $MyInvocation variable contain information about the script that called or invoke the current script.</source>
          <target state="translated">$PSCommandPath 및 $PSScriptRoot 자동 변수, 현재 스크립트에 대 한 정보를 포함 하는 달리 $MyInvocation 변수의 PSCommandPath 및 PSScriptRoot 속성 호출 되거나 현재 스크립트를 호출 하는 스크립트에 대 한 정보를 포함 합니다.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>Data sections</source>
          <target state="translated">데이터 섹션</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>You can use the Data keyword to separate data from logic in scripts.</source>
          <target state="translated">스크립트에서 논리에서 데이터를 분리 하는 데이터 키워드를 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>Data sections can also make localization easier.</source>
          <target state="translated">데이터 섹션도 용이할 수 지역화 있습니다.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>For more information, see about_Data_Sections and about_Script_Localization.</source>
          <target state="translated">자세한 내용은 about_data_sections를 참조 하세요 및 about_Script_Localization를 참조 하십시오.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>Script Signing</source>
          <target state="translated">스크립트 서명</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>You can add a digital signature to a script.</source>
          <target state="translated">스크립트에 디지털 서명을 추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>Depending on the execution policy, you can use digital signatures to restrict the running of scripts that could include unsafe commands.</source>
          <target state="translated">실행 정책에 따라 안전 하지 않은 명령이 포함 될 수 있는 스크립트의 실행을 제한 하는 디지털 서명을 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>For more information, see about_Execution_Policies and about_Signing.</source>
          <target state="translated">자세한 내용은 about_Execution_Policies 및 about_Signing을 참조 하십시오.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>SEE ALSO</source>
          <target state="translated">참고 항목</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source>about_Command_Precedence</source>
          <target state="translated">about_Command_Precedence</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source>about_Comment_Based_Help</source>
          <target state="translated">about_Comment_Based_Help</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source>about_Execution_Policies</source>
          <target state="translated">about_Execution_Policies</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source>about_Functions</source>
          <target state="translated">about_Functions</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source>about_Modules</source>
          <target state="translated">about_Modules</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source>about_Profiles</source>
          <target state="translated">about_Profiles</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve">
          <source>about_Requires</source>
          <target state="translated">about_Requires</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source>about_Run_With_PowerShell</source>
          <target state="translated">about_Run_With_PowerShell</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source>about_Scopes</source>
          <target state="translated">about_Scopes</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source>about_Script_Blocks</source>
          <target state="translated">about_Script_Blocks</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve">
          <source>about_Signing</source>
          <target state="translated">about_Signing</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve">
          <source>Invoke-Command</source>
          <target state="translated">Invoke-Command</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>