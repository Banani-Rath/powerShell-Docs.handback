<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ko-kr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-22243b3" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">8892e5e08a763fbc66d782bbc9252d1f3a7dcfcf</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">jea\on-blacklisting.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions" />
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>on blacklisting</source>
          <target state="translated">블랙리스트에 올리기</target>         
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>On Blacklisting</source>
          <target state="translated">블랙리스트에 올리기</target>         
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>After playing around with JEA, you may be wondering if it is possible to blacklist commands.</source>
          <target state="translated">JEA를 사용하여 작업해 본 후 명령을 블랙리스트에 올리는 것이 가능한지 궁금할 수 있습니다.</target>         
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>This is an understandable request, but it is not currently planned for JEA for the following reasons:</source>
          <target state="translated">이는 이해할 수 있는 요청이지만 블랙리스트에 올리는 기능은 다음과 같은 이유로 JEA에 대해 현재 계획되어 있지 않습니다.</target>         
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>We designed JEA to limit operators to only the actions they need to do.</source>
          <target state="translated">수행해야 하는 작업으로만 운영자를 제한하도록 JEA를 설계했습니다.</target>         
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>A blacklist is the opposite.</source>
          <target state="translated">블랙 리스트는 이와 반대입니다.</target>         
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>PowerShell command authors did not design PowerShell commands with the JEA in mind.</source>
          <target state="translated">PowerShell 명령 작성자는 JEA를 염두에 두고 PowerShell 명령을 설계하지 않았습니다.</target>         
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>On a fresh install of Windows Server 2016, there are about 1520 commands immediately available.</source>
          <target state="translated">Windows Server 2016을 새로 설치한 경우 약 1520개의 명령을 즉시 사용할 수 있습니다.</target>         
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>The threat models for these commands did not include the possibility that a user would be running commands as a more privileged account.</source>
          <target state="translated">이러한 명령에 대한 위협 모델에는 사용자가 권한이 더 많은 계정으로 명령을 실행할 것이라는 가능성이 포함되어 있지 않습니다.</target>         
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>For example, certain commands allow for code injection by design (e.g. Add-Type and Invoke-Command in the core PowerShell module).</source>
          <target state="translated">예를 들어 특정 명령은 설계상 코드 주입을 고려합니다(예: 핵심 PowerShell 모듈의 Add-Type 및 Invoke-Command).</target>         
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>JEA can warn you when you expose the specific commands we know about, but we have not re-assessed every other command in Windows based on the new threat model.</source>
          <target state="translated">JEA는 Microsoft에서 알고 있는 특정 명령을 노출할 때 경고할 수 있지만, Microsoft에서는 새로운 위협 모델을 기초로 Windows의 다른 모든 명령을 다시 평가하지는 않았습니다.</target>         
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>You must understand the capabilities of the commands you exposing through JEA.</source>
          <target state="translated">JEA를 통해 노출하는 명령의 기능을 이해해야 합니다.</target>         
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Furthermore, even if JEA blocked all commands with code-injection vulnerabilities, there is no guarantee that a malicious user would not be able to carry out a blacklisted action with another related command.</source>
          <target state="translated">또한 JEA가 코드 주입에 취약한 모든 명령을 차단한다고 해도 악의적인 사용자가 블랙 리스트에 있는 작업을 다른 관련 명령으로 수행할 수 없다는 보장은 없습니다.</target>         
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Unless you understand all of the commands that you are exposing, it is impossible for you to guarantee that a certain action is not possible.</source>
          <target state="translated">노출할 명령을 모두 이해하지 않는 한 특정 작업이 가능하지 않다고 보장하는 것은 불가능합니다.</target>         
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>The burden is on you to understand what commands you are exposing, whether they are using a whitelist or a blacklist.</source>
          <target state="translated">허용 목록을 사용하든 블랙 리스트를 사용하든 간에 노출할 명령을 이해하는 것은 사용자의 책임입니다.</target>         
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>The number of commands a blacklist would expose is unmanageable, so JEA is implemented using whitelists instead.</source>
          <target state="translated">블랙 리스트로 노출할 명령 수는 관리할 수 없으므로 JEA는 대신 허용 목록을 사용하여 구현되었습니다.</target>         
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>