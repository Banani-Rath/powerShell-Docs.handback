<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ko-kr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-1c394fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">7d8dd680734aa1cf10cdff4ad19a89a36796fedd</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">reference\5.0\Microsoft.PowerShell.Core\About\about_Path_Syntax.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions" />
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">562deed4a0473a49ea305f7f3ee727ede5ad1dd8</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">3d987ca4e7f17d3a43ed11baec97112491b09645</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>about_Path_Syntax</source>
          <target state="translated">about_Path_Syntax</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>powershell, cmdlet</source>
          <target state="translated">powershell cmdlet</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>About Path Syntax</source>
          <target state="translated">경로 구문에 대 한</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>about_Path_Syntax</source>
          <target state="translated">about_Path_Syntax</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>about_Path_Syntax</source>
          <target state="translated">about_Path_Syntax</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>SHORT DESCRIPTION</source>
          <target state="translated">간단한 설명</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Describes the full and relative path name formats in  Windows PowerShell�.</source>
          <target state="translated">Windows PowerShell에서 전체 및 상대 경로 이름 형식에 설명 합니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>LONG DESCRIPTION</source>
          <target state="translated">자세한 설명</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>All items in a data store accessible through a  Windows PowerShell provider can be uniquely identified by their path names.</source>
          <target state="translated">경로 이름으로 Windows PowerShell 공급자를 통해 액세스할 수 있는 데이터 저장소에 있는 모든 항목을 고유 하 게 식별할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>A path name is a combination of the item name, the container and subcontainers in which the item is located, and the  Windows PowerShell drive through which the containers are accessed.</source>
          <target state="translated">경로 이름에는 항목 이름, 컨테이너 및 해당 항목의 위치를 가리키는, 컨테이너 및 컨테이너 액세스는 Windows PowerShell 드라이브의 조합입니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>In  Windows PowerShell, path names are divided into one of two types: fully qualified and relative.</source>
          <target state="translated">Windows PowerShell 경로 이름 두 가지 형식 중 하나로 구분 됩니다: 완전히 정규화 된이 고 상대적입니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>A fully qualified path name consists of all elements that make up a path.</source>
          <target state="translated">경로 구성 하는 모든 요소의 정규화 된 경로 이름 구성 됩니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>The following syntax shows the elements in a fully qualified path name:</source>
          <target state="translated">다음 구문에 정규화 된 경로 이름으로 요소를 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;provider&gt;</ph> placeholder refers to the  Windows PowerShell provider through which you access the data store.</source>
          <target state="translated"> <ph id="ph1">&lt;provider&gt;</ph> 개체 틀은 데이터 저장소에 액세스 하는 Windows PowerShell 공급자를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>For example, the FileSystem provider allows you to access the files and directories on your computer.</source>
          <target state="translated">예를 들어 파일 시스템 공급자를 사용 하는 파일 및 컴퓨터의 디렉터리에 액세스할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>This element of the syntax is optional and is never needed because the drive names are unique across all providers.</source>
          <target state="translated">구문에이 요소는 선택적 이며는 모든 공급자에서 드라이브 이름을 고유 때문에 필요 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;drive&gt;</ph> placeholder refers to the  Windows PowerShell drive that is supported by a particular  Windows PowerShell provider.</source>
          <target state="translated"> <ph id="ph1">&lt;drive&gt;</ph> 개체 틀은 특정 Windows PowerShell 공급자가 지원 되는 Windows PowerShell 드라이브를 가리킵니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>In the case of the FileSystem provider, the  Windows PowerShell drives map to the Windows drives that are configured on your system.</source>
          <target state="translated">파일 시스템 공급자의 경우 Windows PowerShell 드라이브를 시스템에 구성 되어 있는 Windows 드라이브 맵.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>For example, if your system includes an A: drive and a C: drive, the FileSystem provider creates the same drives in  Windows PowerShell.</source>
          <target state="translated">예를 들어 시스템 a: 드라이브 및 c: 드라이브를 포함 하는 경우 파일 시스템 공급자 Windows PowerShell의 동일한 드라이브를 만듭니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>After you have specified the drive, you must specify any containers and subcontainers that contain the item.</source>
          <target state="translated">드라이브를 지정한 후 모든 컨테이너 및 하위 항목을 포함 하는 컨테이너를 지정 해야 합니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>The containers must be specified in the hierarchical order in which they exist in the data store.</source>
          <target state="translated">컨테이너는 데이터 저장소에 있는 계층적 순서로 지정 되어야 합니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>In other words, you must start with the parent container, then the child container in that parent container, and so on.</source>
          <target state="translated">즉, 해당 부모 컨테이너에서 자식 컨테이너가 부모 컨테이너를 시작 하 고 등 해야 합니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>In addition, each container must be preceded by a backslash.</source>
          <target state="translated">또한 각 컨테이너는 백슬래시 앞 해야 합니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>(Note that  Windows PowerShell allows you to use forward slashes for compatibility with other PowerShells.)</source>
          <target state="translated">(참고 Windows PowerShell 다른 PowerShells 호환 슬래시를 사용할 수 있습니다.)</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>After the container and subcontainers have been specified, you must provide the item name, preceded by a backslash.</source>
          <target state="translated">컨테이너 및 컨테이너를 지정한 후 다음 항목 이름 앞에 백슬래시를 제공 해야 합니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>For example, the fully qualified path name for the Shell.dll file in the C:\Windows\System32 directory is as follows:</source>
          <target state="translated">예를 들어 C:\Windows\System32 디렉터리에 있는 Shell.dll 파일에 대 한 정규화 된 경로 이름은 다음과 같습니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>In this case, the drive through which the containers are accessed is the C: drive, the top-level container is Windows, the subcontainer is System32 (located within the Windows container), and the item is Shell.dll.</source>
          <target state="translated">이 경우에 컨테이너 액세스는 드라이브는 c: 드라이브, 최상위 컨테이너는 Windows은 하위 컨테이너 (Windows 컨테이너 내에 있는) System32 항목과 항목은 Shell.dll 합니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>In some situations, you do not need to specify a fully qualified path name and can instead use a relative path name.</source>
          <target state="translated">상황에 따라 필요가 없습니다 정규화 된 경로 지정 하려면 이름을 지정 하 고 상대 경로 이름 대신 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>A relative path name is based on the current working location.</source>
          <target state="translated">상대 경로 이름은 현재 작업 위치를 기반으로 합니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Windows PowerShell allows you to identify an item based on its location relative to the current working location.</source>
          <target state="translated">Windows PowerShell을 사용 하면 현재 작업 위치를 기준으로 해당 위치에 따라 항목을 식별할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>You can specify relative path names by using special characters.</source>
          <target state="translated">특수 문자를 사용 하 여 상대 경로 이름을 지정할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>The following table describes each of these characters and provides examples of relative path names and fully qualified path names.</source>
          <target state="translated">다음 표에서 이러한 문자를 각각 설명 하 고 상대 경로 이름 및 정규화 된 경로 이름 예를 제공 합니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>The examples in the table are based on the current working directory being set to C:\Windows.</source>
          <target state="translated">테이블의 예제에서는 C:\Windows로 설정 되 고 현재 작업 디렉터리를 기반으로 합니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>When using a path name in a command, you enter that name in the same way whether you use a fully qualified path name or a relative one.</source>
          <target state="translated">명령에서 경로 이름을 사용 하는 경우 해당에 이름을 입력 동일한 방식으로 정규화 된 경로 이름 또는 상대 합니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>For example, suppose that your current working directory is C:\Windows.</source>
          <target state="translated">예를 들어, 현재 작업 디렉터리는 C:\Windows입니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>The following Get-ChildItem command retrieves all items in the C:\Techdocs directory:</source>
          <target state="translated">다음 Get-childitem 명령은 C:\Techdocs 디렉터리의 모든 항목을 검색 합니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>The backslash indicates that the drive root of the current working location should be used.</source>
          <target state="translated">백슬래시는 현재 작업 위치의 드라이브 루트를 사용 해야 함을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Because the working directory is C:\Windows, the drive root is the C: drive.</source>
          <target state="translated">작업 디렉터리가 C:\Windows 드라이브 루트에는 c: 드라이브입니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Because the techdocs directory is located off the root, you need to specify only the backslash.</source>
          <target state="translated">Techdocs 디렉터리 루트에서 떨어져 있는 이기 때문에 백슬래시를 지정 해야 합니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>You can achieve the same results by using the following command:</source>
          <target state="translated">다음 명령을 사용 하 여 동일한 결과 얻을 수 있습니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Regardless of whether you use a fully qualified path name or a relative path name, a path name is important not only because it locates an item but also because it uniquely identifies the item even if that item shares the same name as another item in a different container.</source>
          <target state="translated">사용 여부는 정규화 된 경로 이름 또는 상대 경로 이름에 관계 없이 경로 이름이 아니며 중요 찾을 항목 뿐만 아니라 해당 항목에는 다른 컨테이너에 다른 항목으로 동일한 이름을 공유 하는 경우에 항목을 고유 하 게 식별 하므로 때문에</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>For instance, suppose that you have two files that are each named Results.txt.</source>
          <target state="translated">예를 들어, 각 명명 된 Results.txt 있는 두 개의 파일이 있다고 가정 합니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>The first file is in a directory named C:\Techdocs\Jan, and the second file is in a directory named C:\Techdocs\Feb. The path name for the first file (C:\Techdocs\Jan\Results.txt) and the path name for the second file (C:\Techdocs\Feb\Results.txt) allow you to clearly distinguish between the two files.</source>
          <target state="translated">첫 번째 파일 C:\Techdocs\Jan, 라는 이름의 디렉터리 이며 두 번째 파일 C:\Techdocs\Feb 라는 디렉터리에 있습니다. 첫 번째 파일 (C:\Techdocs\Jan\Results.txt)에 대 한 경로 이름 및 두 번째 파일 (C:\Techdocs\Feb\Results.txt)에 대 한 경로 이름을 통해 두 파일 간에 분명히 구분할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>SEE ALSO</source>
          <target state="translated">참고 항목</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>about_Locations</source>
          <target state="translated">about_Locations</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>