<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ko-kr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-1c394fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">a2e6e1288cd0c94ac8e50dc96aed481eab4e7aeb</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">reference\4.0\Microsoft.PowerShell.Utility\Add-Member.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions" />
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fd89b40605ee2eaa9840675616be37b8cd9af46c</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">c0afa898a7f3df6ef98ff2b113bffffe731461fa</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Add-Member</source>
          <target state="translated">Add-Member</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>powershell, cmdlet</source>
          <target state="translated">powershell cmdlet</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Add-Member</source>
          <target state="translated">Add-Member</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>SYNOPSIS</source>
          <target state="translated">요약</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Adds custom properties and methods to an instance of a Windows PowerShell object.</source>
          <target state="translated">사용자 지정 속성 및 메서드를 Windows PowerShell 개체의 인스턴스에 추가합니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>SYNTAX</source>
          <target state="translated">구문</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>UNNAMED_PARAMETER_SET_1</source>
          <target state="translated">UNNAMED_PARAMETER_SET_1</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>UNNAMED_PARAMETER_SET_2</source>
          <target state="translated">UNNAMED_PARAMETER_SET_2</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>UNNAMED_PARAMETER_SET_3</source>
          <target state="translated">UNNAMED_PARAMETER_SET_3</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>UNNAMED_PARAMETER_SET_4</source>
          <target state="translated">UNNAMED_PARAMETER_SET_4</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>DESCRIPTION</source>
          <target state="translated">설명</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>Add-Member<ept id="p1">**</ept> cmdlet lets you add members (properties and methods) to an instance of a Windows PowerShell object.</source>
          <target state="translated"> <bpt id="p1">**</bpt>Add-member<ept id="p1">**</ept> cmdlet Windows PowerShell 개체의 인스턴스로 멤버 (속성 및 메서드)를 추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>For example, you can add a NoteProperty member that contains a description of the object or a ScriptMethod member that runs a script to change the object.</source>
          <target state="translated">예를 들어 개체에 대한 설명을 포함하는 NoteProperty 멤버 또는 스크립트를 실행하여 개체를 변경하는 ScriptMethod 멤버를 추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>To use <bpt id="p1">**</bpt>Add-Member<ept id="p1">**</ept>, pipe the object to <bpt id="p2">**</bpt>Add-Member<ept id="p2">**</ept>, or use the <bpt id="p3">**</bpt>InputObject<ept id="p3">**</ept> parameter to specify the object.</source>
          <target state="translated">사용 하 여 <bpt id="p1">**</bpt>Add-member<ept id="p1">**</ept>, 개체를 파이프할 <bpt id="p2">**</bpt>Add-member<ept id="p2">**</ept>, 사용 또는 <bpt id="p3">**</bpt>InputObject<ept id="p3">**</ept> 매개 변수 개체를 지정 합니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Use the <bpt id="p1">**</bpt>MemberType<ept id="p1">**</ept> parameter to specify the type of member that you want to add, use the <bpt id="p2">**</bpt>Name<ept id="p2">**</ept> parameter to assign a name to the new member, and use the <bpt id="p3">**</bpt>Value<ept id="p3">**</ept> parameter to set the value of the member.</source>
          <target state="translated">사용 하 여는 <bpt id="p1">**</bpt>MemberType<ept id="p1">**</ept> 매개 변수를 사용 하 여 추가 하려는 멤버의 형식을 지정 하는 <bpt id="p2">**</bpt>이름<ept id="p2">**</ept> 매개 변수를 사용 하 고 새 구성원에 이름을 할당는 <bpt id="p3">**</bpt>값<ept id="p3">**</ept> 매개 변수를 멤버의 값을 설정 합니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>The properties and methods that you add are added only to the particular instance of the object that you specify.</source>
          <target state="translated">추가한 속성 및 메서드는 지정한 개체의 특정 인스턴스에만 추가됩니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Add-Member<ept id="p1">**</ept> does not change the object type.</source>
          <target state="translated"><bpt id="p1">**</bpt>멤버 추가<ept id="p1">**</ept> 개체 유형 변경 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>To create a new object type, use the Add-Type cmdlet.</source>
          <target state="translated">새 개체 유형을 만들고 Add-type cmdlet을 사용 합니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>You can also use the Export-Clixml cmdlet to save the instance of the object, including the additional members, in a file.</source>
          <target state="translated">또한 파일에서 추가 멤버를 포함 하는 개체의 인스턴스를 저장 하 Export-clixml cmdlet을 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Then you can use the Import-Clixml cmdlet to re-create the instance of the object from the information that is stored in the exported file.</source>
          <target state="translated">그런 다음 내보낸된 파일에 저장 된 정보 로부터 개체의 인스턴스를 다시 만들려고 Import-clixml cmdlet을 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Beginning in Windows PowerShell 3.0, <bpt id="p1">**</bpt>Add-Member<ept id="p1">**</ept> has new features that make it easier to add note properties to objects.</source>
          <target state="translated">Windows PowerShell 3.0 부터는 <bpt id="p1">**</bpt>Add-member<ept id="p1">**</ept> 보다 쉽게 개체 메모 속성을 추가할 수 있도록 새로운 기능이 추가 되었습니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>You can use the <bpt id="p1">**</bpt>NotePropertyName<ept id="p1">**</ept> and <bpt id="p2">**</bpt>NotePropertyValue<ept id="p2">**</ept> parameters to define a note property or use the <bpt id="p3">**</bpt>NotePropertyMembers<ept id="p3">**</ept> parameter, which takes a hash table of note property names and values.</source>
          <target state="translated">사용할 수는 <bpt id="p1">**</bpt>NotePropertyName<ept id="p1">**</ept> 및 <bpt id="p2">**</bpt>NotePropertyValue<ept id="p2">**</ept> 메모 속성을 정의 하거나 사용 하는 매개 변수는 <bpt id="p3">**</bpt>NotePropertyMembers<ept id="p3">**</ept> 매개 변수를 메모 속성 이름 및 값의 해시 테이블을 사용 합니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Also, beginning in Windows PowerShell 3.0, the <bpt id="p1">**</bpt>PassThru<ept id="p1">**</ept> parameter, which generates an output object, is needed less frequently.</source>
          <target state="translated">또한 Windows PowerShell 3.0 부터는 <bpt id="p1">**</bpt>PassThru<ept id="p1">**</ept> 매개 변수 출력 개체를 생성 하는 필요성이 줄어듭니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Add-Member<ept id="p1">**</ept> now adds the new members directly to the input object of more types.</source>
          <target state="translated"><bpt id="p1">**</bpt>멤버 추가<ept id="p1">**</ept> 이제 더 많은 형식의 입력된 개체에 직접 새 멤버를 추가 합니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>For more information, see the <bpt id="p1">**</bpt>PassThru<ept id="p1">**</ept> parameter description.</source>
          <target state="translated">자세한 내용은 참조는 <bpt id="p1">**</bpt>PassThru<ept id="p1">**</ept> 매개 변수 설명 합니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>EXAMPLES</source>
          <target state="translated">예제</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>-------------------------- EXAMPLE 1 --------------------------</source>
          <target state="translated">-------------------------- 예제 1 --------------------------</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>These commands add the Status note property with a value of "Done" to the FileInfo object that represents the Test.txt file.</source>
          <target state="translated">이러한 명령은 "Done" 값을 갖는 Status 메모 속성을 Test.txt 파일을 나타내는 FileInfo 개체에 추가합니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>The first command uses the Get-ChildItem cmdlet (alias = "dir) to get the Test.txt file.</source>
          <target state="translated">첫 번째 명령은 Get-childitem cmdlet을 사용 하 여 (별칭 = "dir)을 Test.txt 파일을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>It saves it in the $a variable.</source>
          <target state="translated">$a 변수에 그것을 저장합니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>The second and third commands add the note property to the object in $a.</source>
          <target state="translated">두 번째 및 세 번째 명령은 $에서 개체에 메모 속성을 추가 합니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>The third command omits the optional parameter names, so the parameter values must be in the correct Name-Value order.</source>
          <target state="translated">세 번째 명령은 하므로 매개 변수 값은 올바른 이름-값 순서에 있어야 합니다. 선택적 매개 변수 이름을 생략 합니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>These commands are equivalent and can be used interchangeably.</source>
          <target state="translated">이러한 명령은 동일하므로 서로 바꿔 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>The fourth command uses dot notation to get the value of the Status property of the object in $a.</source>
          <target state="translated">네 번째 명령은 점 표기법을 사용 하 여 $에서 개체의 Status 속성의 가치를 얻을 수는 있습니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>As the output shows, the value is "Done".</source>
          <target state="translated">출력에서 볼 수 있듯이 값은 "Done"입니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>-------------------------- EXAMPLE 2 --------------------------</source>
          <target state="translated">-------------------------- EXAMPLE 2 --------------------------</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>These commands add the FileLength alias property to the object that represents the Test.txt file.</source>
          <target state="translated">이러한 명령은 Test.txt 파일을 나타내는 개체에 FileLength 별칭 속성을 추가합니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>The new property is an alias for the Length property.</source>
          <target state="translated">새 속성은 Length 속성에 대한 별칭입니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>The first command use the Get-ChildItem cmdlet (alias = "dir") to get the Test.txt file.</source>
          <target state="translated">첫 번째 명령은 Get-childitem cmdlet을 사용 하 여 (별칭 = "dir")을 Test.txt 파일을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>The second command adds the FileLength alias property.</source>
          <target state="translated">두 번째 명령은 FileLength 별칭 속성을 추가합니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>The third command uses dot notation to get the value of the new FileLength property.</source>
          <target state="translated">세 번째 명령은 점 표기법을 사용하여 새 FileLength 속성의 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>-------------------------- EXAMPLE 3 --------------------------</source>
          <target state="translated">-------------------------- EXAMPLE 3 --------------------------</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>These commands add the <bpt id="p1">**</bpt>StringUse<ept id="p1">**</ept> note property to a string.</source>
          <target state="translated">이러한 명령은 추가 <bpt id="p1">**</bpt>StringUse<ept id="p1">**</ept> 속성 문자열을 기록해 둡니다.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Because Add-Member cannot add types to String input objects, the command uses the  <bpt id="p1">**</bpt>PassThru<ept id="p1">**</ept> parameter to generate an output object.</source>
          <target state="translated">명령을 사용 하 여 멤버 추가 String 입력된 개체에는 형식에 추가할 수 없는 때문에  <bpt id="p1">**</bpt>PassThru<ept id="p1">**</ept> 매개 변수 출력 개체를 생성 합니다.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>The last command in the example displays the new property.</source>
          <target state="translated">예제의 마지막 명령은 새 속성을 표시합니다.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>The command uses the <bpt id="p1">**</bpt>NotePropertyMembers<ept id="p1">**</ept> parameter, but omits the parameter name, which is optional.</source>
          <target state="translated">명령을 사용 하는 <bpt id="p1">**</bpt>NotePropertyMembers<ept id="p1">**</ept> 하지만 생략 하는 선택 사항이 며 매개 변수 이름, 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>The value of the <bpt id="p1">**</bpt>NotePropertyMembers<ept id="p1">**</ept> parameter is a hash table.</source>
          <target state="translated">값은 <bpt id="p1">**</bpt>NotePropertyMembers<ept id="p1">**</ept> 매개 변수는 해시 테이블입니다.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>The key is the note property name, StringUse, and the value is the note property value, Display.</source>
          <target state="translated">키는 메모 속성 이름인 StringUse이고 값은 메모 속성 값인 Display입니다.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>-------------------------- EXAMPLE 4 --------------------------</source>
          <target state="translated">-------------------------- EXAMPLE 4 --------------------------</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>These commands add the PadBoth script method to a string object.</source>
          <target state="translated">이러한 명령은 문자열 개체에 PadBoth 스크립트 메서드를 추가합니다.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>The first command creates a string and saves it in the $a variable.</source>
          <target state="translated">첫 번째 명령은 문자열을 만들어 $a 변수에 저장합니다.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>The second command adds the Padboth script method to the object in the $a variable.</source>
          <target state="translated">두 번째 명령은 $a 변수의 개체에 Padboth 스크립트 메서드를 추가합니다.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>The Value parameter defines the new script method.</source>
          <target state="translated">Value 매개 변수는 새 스크립트 메서드를 정의합니다.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>It uses the PadRight and PadLeft methods of a string to add one space the left and one space to the right of the string.</source>
          <target state="translated">문자열의 PadRight 및 PadLeft 메서드를 사용하여 문자열의 왼쪽과 오른쪽에 각각 공백을 하나씩 추가합니다.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>Value<ept id="p1">**</ept> parameter also uses the $this automatic variable, which represents the current object.</source>
          <target state="translated"> <bpt id="p1">**</bpt>값<ept id="p1">**</ept> 매개 변수 또한 사용 하 여 $this 자동 변수를 현재 개체를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>The $this variable is valid only in script blocks that define new properties and methods.</source>
          <target state="translated">$this 변수는 새 속성 및 메서드를 정의하는 스크립트 블록에서만 유효합니다.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>The command includes the <bpt id="p1">**</bpt>PassThru<ept id="p1">**</ept> parameter which directs <bpt id="p2">**</bpt>Add-Member<ept id="p2">**</ept> to return an instance of the object that includes the new script property.</source>
          <target state="translated">명령에 포함 되어는 <bpt id="p1">**</bpt>PassThru<ept id="p1">**</ept> 지시 하는 매개 변수 <bpt id="p2">**</bpt>Add-member<ept id="p2">**</ept> 새 스크립트 속성을 포함 하는 개체의 인스턴스를 반환 합니다.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>By default, <bpt id="p1">**</bpt>Add-Member<ept id="p1">**</ept> adds members to PSObjects and does not generate any output.</source>
          <target state="translated">기본적으로 <bpt id="p1">**</bpt>Add-member<ept id="p1">**</ept> PSObjects에 멤버를 추가 하 고 출력을 생성 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>The third command uses dot notation to call the new PadBoth script method on the object in the $a variable.</source>
          <target state="translated">세 번째 명령은 점 표기법을 사용하여 $a 변수의 개체에서 새 PadBoth 스크립트 메서드를 호출합니다.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>-------------------------- EXAMPLE 5 --------------------------</source>
          <target state="translated">-------------------------- EXAMPLE 5 --------------------------</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>These commands add the "When" alias property to an event in the System event log.</source>
          <target state="translated">이러한 명령은 System 이벤트 로그의 이벤트에 "When" 별칭 속성을 추가합니다.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>The event is an EventLogEntry object that is returned by the Get-EventLog cmdlet.</source>
          <target state="translated">이벤트는 Get-eventlog cmdlet에서 반환 되는 EventLogEntry 개체입니다.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>The "When" alias property is an alias for the TimeWritten property of the object.</source>
          <target state="translated">"When" 별칭 속성은 개체의 TimeWritten 속성에 대한 별칭입니다.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>SecondValue<ept id="p1">**</ept> parameter is used to specify that the property value should be converted to type System.String when accessed by using the <bpt id="p2">**</bpt>AliasProperty<ept id="p2">**</ept>.</source>
          <target state="translated"> <bpt id="p1">**</bpt>SecondValue<ept id="p1">**</ept> 매개 변수는 사용 하는 속성 값을 사용 하 여 액세스할 때 System.String 형식으로 변환 되어야 함을 지정 하는 <bpt id="p2">**</bpt>AliasProperty<ept id="p2">**</ept>합니다.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>The TimeWritten property is a DateTime object.</source>
          <target state="translated">TimeWritten 속성은 DateTime 개체입니다.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>The first command uses the Get-EventLog cmdlet to get the newest event in the System event log.</source>
          <target state="translated">첫 번째 명령은 Get-eventlog cmdlet를 사용 하 여 시스템 이벤트 로그의 최신 이벤트를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>It stores the event in the $Event variable.</source>
          <target state="translated">이 이벤트를 $Event 변수에 저장합니다.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>To demonstrate that the TimeWritten property is a DateTime type, the second command uses dot notation to get the TimeWritten property of that event and pipes it to the Get-Member cmdlet.</source>
          <target state="translated">TimeWritten 속성이 DateTime 형식임을 보여 주기 위해 두 번째 명령은 점 표기법을 사용 하 여 해당 이벤트의 TimeWritten 속성을 가져오는 및 Get-member cmdlet으로 파이프 합니다.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>The third command uses the <bpt id="p1">**</bpt>Add-Member<ept id="p1">**</ept> cmdlet to add the When alias property to the object instance in the $Event variable.</source>
          <target state="translated">세 번째 명령은 <bpt id="p1">**</bpt>Add-member<ept id="p1">**</ept> When를 추가 하려면 cmdlet $Event 변수의 개체 인스턴스에 별칭 속성입니다.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>Name<ept id="p1">**</ept> parameter assigns the name, "When," and the <bpt id="p2">**</bpt>Value<ept id="p2">**</ept> parameter specifies that When is an alias for the <bpt id="p3">**</bpt>TimeWritten<ept id="p3">**</ept> property.</source>
          <target state="translated"> <bpt id="p1">**</bpt>이름<ept id="p1">**</ept> 매개 변수 이름을 할당 "when" 고 <bpt id="p2">**</bpt>값<ept id="p2">**</ept> 매개 변수를 지정 하는 경우 별칭으로 사용 되는 <bpt id="p3">**</bpt>TimeWritten<ept id="p3">**</ept> 속성입니다.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>SecondValue<ept id="p1">**</ept> parameter indicates that the value that the When method returns should be cast to a System.String type.</source>
          <target state="translated"> <bpt id="p1">**</bpt>SecondValue<ept id="p1">**</ept> 나타내는 매개 변수 값 하는 When 메서드가 반환 System.String 형식으로 캐스팅 해야 합니다.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>The fourth command uses dot notation to call the new When method.</source>
          <target state="translated">네 번째 명령은 점 표기법을 사용하여 새 When 메서드를 호출합니다.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>The command pipes the method value to the <bpt id="p1">**</bpt>Get-Member<ept id="p1">**</ept> cmdlet to confirm that it has returned a string.</source>
          <target state="translated">명령은 메서드 값을 파이프는 <bpt id="p1">**</bpt>Get-member<ept id="p1">**</ept> cmdlet는 문자열을 반환 했는지 확인 합니다.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>-------------------------- EXAMPLE 6 --------------------------</source>
          <target state="translated">-------------------------- EXAMPLE 6 --------------------------</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>This function copies all of the properties of one object to another object.</source>
          <target state="translated">이 함수는 한 개체의 모든 속성을 다른 개체에 복사합니다.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>The first command in the function declares the function name and lists its parameters.</source>
          <target state="translated">이 함수의 첫 번째 명령은 함수 이름을 선언하고 해당 매개 변수를 나열합니다.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>The Foreach loop uses the Get-Member cmdlet to get each of the properties of the From object.</source>
          <target state="translated">Foreach 루프 Get-member cmdlet를 사용 하 여 From 개체의 속성을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>The commands within the ForEach loop are performed in series on each of the properties.</source>
          <target state="translated">ForEach 루프 내의 명령은 각 속성에서 순차적으로 수행됩니다.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>Add-Member<ept id="p1">**</ept> command adds the property of the From object to the To object as a NoteProperty.</source>
          <target state="translated"> <bpt id="p1">**</bpt>Add-member<ept id="p1">**</ept> 명령은 From 개체의 속성을 NoteProperty로 To 개체에 추가 합니다.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>It uses the <bpt id="p1">**</bpt>Force<ept id="p1">**</ept> parameter add members with the same member name.</source>
          <target state="translated">사용 하 여는 <bpt id="p1">**</bpt>Force<ept id="p1">**</ept> 매개 변수는 동일한 멤버 이름 가진 멤버를 추가 합니다.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>The last command in the function gives the new property the same name as the original property.</source>
          <target state="translated">이 함수의 마지막 명령은 원래 속성과 동일한 이름을 새 속성에 제공합니다.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>Example 7</source>
          <target state="translated">예제 7</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>This example creates the Asset custom object.</source>
          <target state="translated">이 예제에서는 Asset 사용자 지정 개체를 만듭니다.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>The first command uses the New-Object cmdlet to create a PSObject.</source>
          <target state="translated">첫 번째 명령은 New-object cmdlet를 사용 하 여 PSObject를 만듭니다.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>The command saves the PSObject in the $Asset variable.</source>
          <target state="translated">이 명령은 PSObject를 $Asset 변수에 저장합니다.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>The second command uses the <ph id="ph1">\[</ph>ordered<ph id="ph2">\]</ph> type accelerator to create an ordered dictionary of names and values.</source>
          <target state="translated">두 번째 명령은 <ph id="ph1">\[</ph>정렬<ph id="ph2">\]</ph> 형식 가속기를 이름 및 값의 정렬된 된 사전을 만드는 합니다.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>The command saves the result in the $d variable.</source>
          <target state="translated">이 명령은 결과를 $d 변수에 저장합니다.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>The third command uses the <bpt id="p1">**</bpt>NotePropertyMembers<ept id="p1">**</ept> parameter of the Add-Member cmdlet to add the dictionary in the $d variable to the PSObject.</source>
          <target state="translated">세 번째 명령은 <bpt id="p1">**</bpt>NotePropertyMembers<ept id="p1">**</ept> $d 변수 사전을 PSObject에 추가 하려면 Add-member cmdlet의 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>It uses the <bpt id="p1">**</bpt>TypeName<ept id="p1">**</ept> property to assign a new name, Asset, to the PSObject.</source>
          <target state="translated">사용 하 여는 <bpt id="p1">**</bpt>TypeName<ept id="p1">**</ept> 속성을 새 이름 Asset을 PSObject에 할당 합니다.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>The fourth command sends the new Asset object in the $Asset variable to the Get-Member cmdlet.</source>
          <target state="translated">네 번째 명령은 $Asset 변수의 새 Asset 개체를 Get-Member cmdlet에 보냅니다.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>The output shows that the object has a type name of "Asset" and the note properties that we defined in the ordered dictionary.</source>
          <target state="translated">출력은 개체에 형식 이름 "Asset"과 순서가 지정된 사전에 정의한 메모 속성이 있음을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>PARAMETERS</source>
          <target state="translated">매개 변수</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>-Force</source>
          <target state="translated">-Force</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>Adds a new member even the object has a custom member with the same name.</source>
          <target state="translated">개체에 이름이 같은 사용자 지정 멤버가 있는 경우에도 새 멤버를 추가합니다.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>You cannot use <bpt id="p1">**</bpt>the<ept id="p1">**</ept> Force parameter to replace a standard member of a type.</source>
          <target state="translated">사용할 수 없습니다 <bpt id="p1">**</bpt>는<ept id="p1">**</ept> Force 매개 변수 형식의 표준 멤버를 대체 합니다.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>-InputObject</source>
          <target state="translated">-InputObject</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>Specifies the object to which the new member is added.</source>
          <target state="translated">새 멤버를 추가할 개체를 지정합니다.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>Enter a variable that contains the objects, or type a command or expression that gets the objects.</source>
          <target state="translated">개체를 포함하는 변수를 입력하거나 개체를 가져오는 명령 또는 식을 입력하세요.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>-MemberType</source>
          <target state="translated">-MemberType</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>Specifies the type of the member to add.</source>
          <target state="translated">추가할 멤버의 형식을 지정 합니다.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>This parameter is mandatory.</source>
          <target state="translated">이 매개 변수는 필수입니다.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>The valid values for this parameter are: "NoteProperty,AliasProperty,ScriptProperty,CodeProperty,ScriptMethod,CodeMethod" <bpt id="p1">**</bpt>AliasProperty<ept id="p1">**</ept>, <bpt id="p2">**</bpt>CodeMethod<ept id="p2">**</ept>, <bpt id="p3">**</bpt>CodeProperty<ept id="p3">**</ept>, <bpt id="p4">**</bpt>Noteproperty<ept id="p4">**</ept>, <bpt id="p5">**</bpt>ScriptMethod<ept id="p5">**</ept>, and <bpt id="p6">**</bpt>ScriptProperty<ept id="p6">**</ept>.</source>
          <target state="translated">이 매개 변수에 대 한 유효한 값은: "NoteProperty, AliasProperty, ScriptProperty, CodeProperty, ScriptMethod, CodeMethod" <bpt id="p1">**</bpt>AliasProperty<ept id="p1">**</ept>, <bpt id="p2">**</bpt>CodeMethod<ept id="p2">**</ept>, <bpt id="p3">**</bpt>CodeProperty<ept id="p3">**</ept>, <bpt id="p4">**</bpt>Noteproperty<ept id="p4">**</ept>, <bpt id="p5">**</bpt>ScriptMethod<ept id="p5">**</ept>, 및 <bpt id="p6">**</bpt>ScriptProperty<ept id="p6">**</ept>합니다.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>For information about these values, see "PSMemberTypes Enumeration" in MSDN at http://msdn.microsoft.com/library/windows/desktop/system.management.automation.psmembertypes(v=vs.85).aspxhttp://msdn.microsoft.com/library/windows/desktop/system.management.automation.psmembertypes(v=vs.85).aspx.</source>
          <target state="translated">이러한 값에 대 한 내용은 MSDN의 "PSMemberTypes 열거형" http://msdn.microsoft.com/library/windows/desktop/system.management.automation.psmembertypes (v = vs.85).aspxhttp://msdn.microsoft.com/library/windows/desktop/system.management.automation.psmembertypes(v=vs.85).aspx.에서 참조</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>Not all objects have every type of member.</source>
          <target state="translated">모든 개체가 모든 멤버 유형을 포함하는 것은 아닙니다.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>If you specify a member type that the object does not have, Windows PowerShell returns an error.</source>
          <target state="translated">개체에 없는 멤버 형식을 지정하면 Windows PowerShell에서 오류를 반환합니다.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>-Name</source>
          <target state="translated">-Name</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>Specifies the name of the member to be added.</source>
          <target state="translated">추가할 멤버의 이름을 지정합니다.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>-PassThru</source>
          <target state="translated">-PassThru</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>Returns the newly extended object.</source>
          <target state="translated">새로 확장된 개체를 반환합니다.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>By default, this cmdlet does not generate any output.</source>
          <target state="translated">기본적으로 이 cmdlet은 출력을 생성하지 않습니다.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>For most objects, <bpt id="p1">**</bpt>Add-Member<ept id="p1">**</ept> adds the new members to the input object.</source>
          <target state="translated">대부분의 개체에 대 한 <bpt id="p1">**</bpt>Add-member<ept id="p1">**</ept> 입력된 개체에 새 멤버를 추가 합니다.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>However, when the input object is a string, Add-Member cannot add the member to the input object.</source>
          <target state="translated">그러나 입력 개체가 문자열이면 Add-Member가 입력 개체에 멤버를 추가할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>For these objects, use the <bpt id="p1">**</bpt>PassThru<ept id="p1">**</ept> parameter to create an output object.</source>
          <target state="translated">이러한 개체에 대 한 사용은 <bpt id="p1">**</bpt>PassThru<ept id="p1">**</ept> 매개 변수는 출력 개체를 만듭니다.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>In Windows PowerShell 2.0, <bpt id="p1">**</bpt>Add-Member<ept id="p1">**</ept> added members only to the PSObject wrapper of objects, not to the object.</source>
          <target state="translated">Windows PowerShell 2.0에서 <bpt id="p1">**</bpt>Add-member<ept id="p1">**</ept> 개체가 아닌 개체의 PSObject 래퍼에만 멤버를 추가 합니다.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>Use the <bpt id="p1">**</bpt>PassThru<ept id="p1">**</ept> parameter to create an output object for any object that has a PSObject wrapper.</source>
          <target state="translated">사용 된 <bpt id="p1">**</bpt>PassThru<ept id="p1">**</ept> PSObject 래퍼가 있는 모든 개체에 대 한 출력 개체를 만드는 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>-SecondValue</source>
          <target state="translated">-SecondValue</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>Specifies optional additional information about <bpt id="p1">**</bpt>AliasProperty<ept id="p1">**</ept>, <bpt id="p2">**</bpt>ScriptProperty<ept id="p2">**</ept>, <bpt id="p3">**</bpt>CodeProperty<ept id="p3">**</ept>, or <bpt id="p4">**</bpt>CodeMethod<ept id="p4">**</ept> members.</source>
          <target state="translated">에 대 한 선택적 추가 정보를 지정 <bpt id="p1">**</bpt>AliasProperty<ept id="p1">**</ept>, <bpt id="p2">**</bpt>ScriptProperty<ept id="p2">**</ept>, <bpt id="p3">**</bpt>CodeProperty<ept id="p3">**</ept>, 또는 <bpt id="p4">**</bpt>CodeMethod<ept id="p4">**</ept> 멤버입니다.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>If used when adding an AliasProperty, this parameter must be a data type.</source>
          <target state="translated">AliasProperty를 추가할 때 사용할 경우 이 매개 변수는 데이터 형식이어야 합니다.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>A conversion (cast) to the specified data type is added to the value of the AliasProperty.</source>
          <target state="translated">지정된 데이터 형식으로 변환(캐스트)은 AliasProperty의 값에 추가됩니다.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>For example, if you add an AliasProperty that provides an alternate name for a string property, you can also specify a SecondValue parameter of System.Int32 to indicate that the value of that string property should be converted to an integer when accessed by using the corresponding AliasProperty.</source>
          <target state="translated">예를 들어 문자열 속성에 대체 이름을 제공하는 AliasProperty를 추가하는 경우 해당 AliasProperty를 사용하여 액세스할 때 System.Int32의 SecondValue 매개 변수를 지정하여 해당 문자열 속성의 값이 정수로 변환되어야 함을 나타낼 수도 있습니다.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>You can use the SecondValue parameter to specify an additional ScriptBlock when adding a ScriptProperty member.</source>
          <target state="translated">ScriptProperty 멤버를 추가할 때 SecondValue 매개 변수를 사용하여 추가 ScriptBlock을 지정할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>In that case, the first ScriptBlock, specified in the Value parameter, is used to get the value of a variable.</source>
          <target state="translated">이 경우 Value 매개 변수에 지정된 첫 번째 ScriptBlock은 변수의 값을 가져오는 데 사용됩니다.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>The second ScriptBlock, specified in the SecondValue parameter, is used to set the value of a variable.</source>
          <target state="translated">SecondValue 매개 변수에 지정된 두 번째 ScriptBlock은 변수의 값을 설정하는 데 사용됩니다.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>-Value</source>
          <target state="translated">-값</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>Specifies the initial value of the added member.</source>
          <target state="translated">추가된 멤버의 초기값을 지정합니다.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>If you add an <bpt id="p1">**</bpt>AliasProperty<ept id="p1">**</ept>, <bpt id="p2">**</bpt>CodeProperty<ept id="p2">**</ept>, <bpt id="p3">**</bpt>ScriptProperty<ept id="p3">**</ept> or <bpt id="p4">**</bpt>CodeMethod<ept id="p4">**</ept> member, you can supply optional, additional information by using the SecondValue parameter.</source>
          <target state="translated">추가 하는 경우는 <bpt id="p1">**</bpt>AliasProperty<ept id="p1">**</ept>, <bpt id="p2">**</bpt>CodeProperty<ept id="p2">**</ept>, <bpt id="p3">**</bpt>ScriptProperty<ept id="p3">**</ept> 또는 <bpt id="p4">**</bpt>CodeMethod<ept id="p4">**</ept> 멤버 SecondValue 매개 변수를 사용 하 여 선택적 추가 정보를 제공할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>-NotePropertyMembers</source>
          <target state="translated">-NotePropertyMembers</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>Specifies a hash table or ordered dictionary of note property names and values.</source>
          <target state="translated">메모 속성 이름 및 값의 해시 테이블 또는 순서가 지정된 사전을 지정합니다.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>Type a hash table or dictionary in which the keys are note property names and the values are note property values.</source>
          <target state="translated">키는 메모 속성 이름이고 값은 메모 속성 값인 해시 테이블이나 사전을 입력합니다.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>For more information about hash tables and ordered dictionaries in Windows PowerShell, see about_Hash_Tables (http://go.microsoft.com/fwlink/?LinkID=135175).</source>
          <target state="translated">해시 테이블 및 Windows PowerShell에서 순서가 지정 된 사전에 대 한 자세한 내용은 about_Hash_Tables (http://go.microsoft.com/fwlink/?LinkID=135175)를 참조 하십시오.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>This parameter is introduced in Windows PowerShell 3.0.</source>
          <target state="translated">이 매개 변수는 Windows PowerShell 3.0에서 도입되었습니다.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>-NotePropertyName</source>
          <target state="translated">-NotePropertyName</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>Adds a note property with the specified name.</source>
          <target state="translated">지정된 이름으로 메모 속성을 추가합니다.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>Use this parameter with the <bpt id="p1">**</bpt>NotePropertyValue<ept id="p1">**</ept> parameter.</source>
          <target state="translated">이 매개 변수를 사용 하는 <bpt id="p1">**</bpt>NotePropertyValue<ept id="p1">**</ept> 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>The parameter name (-NotePropertyName) is optional.</source>
          <target state="translated">매개 변수 이름(-NotePropertyName)은 선택 사항입니다.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>This parameter is introduced in Windows PowerShell 3.0.</source>
          <target state="translated">이 매개 변수는 Windows PowerShell 3.0에서 도입되었습니다.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>-NotePropertyValue</source>
          <target state="translated">-NotePropertyValue</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>Adds a note property with the specified value.</source>
          <target state="translated">지정된 값으로 메모 속성을 추가합니다.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>Use this parameter with the <bpt id="p1">**</bpt>NotePropertyName<ept id="p1">**</ept> parameter.</source>
          <target state="translated">이 매개 변수를 사용 하는 <bpt id="p1">**</bpt>NotePropertyName<ept id="p1">**</ept> 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>The parameter name (-NotePropertyValue) is optional.</source>
          <target state="translated">매개 변수 이름(-NotePropertyValue)은 선택 사항입니다.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>This parameter is introduced in Windows PowerShell 3.0.</source>
          <target state="translated">이 매개 변수는 Windows PowerShell 3.0에서 도입되었습니다.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source>-TypeName</source>
          <target state="translated">-TypeName</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source>Specifies a name for the type.</source>
          <target state="translated">형식의 이름을 지정합니다.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source>When the type is a class in the System namespace or a type that has a type accelerator, you can enter the short name of the type.</source>
          <target state="translated">형식이 System 네임스페이스의 클래스 또는 형식 액셀러레이터가 있는 형식이면 형식의 짧은 이름을 입력할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source>Otherwise, the full type name is required.</source>
          <target state="translated">그러지 않으면 전체 유형 이름이 필요합니다.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source>This parameter is effective only when the input object is a PSObject.</source>
          <target state="translated">이 매개 변수는 입력 개체가 PSObject인 경우에만 적용됩니다.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source>This parameter is introduced in Windows PowerShell 3.0.</source>
          <target state="translated">이 매개 변수는 Windows PowerShell 3.0에서 도입되었습니다.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve">
          <source>INPUTS</source>
          <target state="translated">입력</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source>System.Management.Automation.PSObject</source>
          <target state="translated">System.Management.Automation.PSObject</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source>You can pipe any object type to Add-Member.</source>
          <target state="translated">Add-Member에 모든 개체 형식을 파이프할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source>OUTPUTS</source>
          <target state="translated">출력</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve">
          <source>None or System.Object</source>
          <target state="translated">없음 또는 System.Object</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve">
          <source>When you use the PassThru parameter, Add-Member returns the newly-extended object.</source>
          <target state="translated">PassThru 매개 변수를 사용하는 경우 Add-Member는 새로 확장된 개체를 반환합니다.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve">
          <source>Otherwise, this cmdlet does not generate any output.</source>
          <target state="translated">그러지 않으면 이 cmdlet에서 출력이 생성되지 않습니다.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve">
          <source>NOTES</source>
          <target state="translated">참고 사항</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve">
          <source>You can add members only to PSObject objects.</source>
          <target state="translated">PSObject 개체에만 멤버를 추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve">
          <source>To determine whether an object is a PSObject object, use the "is" operator.</source>
          <target state="translated">개체가 PSObject 개체인지 여부를 확인하려면 "is" 연산자를 사용합니다.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve">
          <source>For example, to test an object stored in the $obj variable, type "$obj -is <ph id="ph1">\[</ph>PSObject<ph id="ph2">\]</ph>".</source>
          <target state="translated">예를 들어 $obj 변수에 저장 된 개체를 테스트 하려면 입력 "$obj-은 <ph id="ph1">\[</ph>PSObject<ph id="ph2">\]</ph>"입니다.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve">
          <source>The names of the MemberType, Name, Value, and SecondValue parameters are optional.</source>
          <target state="translated">MemberType, Name, Value 및 SecondValue 매개 변수의 이름은 선택 사항입니다.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve">
          <source>If you omit the parameter names, the unnamed parameter values must appear in this order: MemberType, Name, Value, SecondValue.</source>
          <target state="translated">명명 되지 않은 매개 변수 값이이 순서 대로 표시 매개 변수 이름을 생략 하면: MemberType, 이름, 값, SecondValue 합니다.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve">
          <source>If you include the parameter names, the parameters can appear in any order.</source>
          <target state="translated">매개 변수 이름을 포함할 경우 원하는 순서대로 매개 변수를 표시할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve">
          <source>You can use the $this automatic variable in script blocks that define the values of new properties and methods.</source>
          <target state="translated">스크립트 블록의 $this 자동 변수를 사용할 수 있습니다. 이 변수는 새 속성 및 메서드의 값을 정의합니다.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve">
          <source>The $this variable refers to the instance of the object to which the properties and methods are being added.</source>
          <target state="translated">$this 변수는 속성 및 메서드가 추가되는 개체의 인스턴스를 참조합니다.</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve">
          <source>For more information about the $this variable, see about_Automatic_Variables (http://go.microsoft.com/fwlink/?LinkID=113212).</source>
          <target state="translated">$This 변수에 대 한 자세한 내용은 about_Automatic_Variables (http://go.microsoft.com/fwlink/?LinkID=113212)를 참조 합니다.</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve">
          <source>RELATED LINKS</source>
          <target state="translated">관련된 링크</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve">
          <source>Export-Clixml</source>
          <target state="translated">Export-clixml</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve">
          <source>Get-Member</source>
          <target state="translated">Get-Member</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve">
          <source>Import-Clixml</source>
          <target state="translated">Import-clixml</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve">
          <source>New-Object</source>
          <target state="translated">새 개체</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve">
          <source>about_Automatic_Variables</source>
          <target state="translated">about_Automatic_Variables</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>