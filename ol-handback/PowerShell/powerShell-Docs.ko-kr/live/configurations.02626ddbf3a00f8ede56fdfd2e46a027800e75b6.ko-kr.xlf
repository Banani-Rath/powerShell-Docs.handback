<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ko-kr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-4fb33c9" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d84bb35ada3588367436e6f5e3c6696b90c3661b</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">dsc\configurations.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions" />
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">4d4638ef1ef118d7c0533dd694ad945a9d1d47d4</xliffext:olskeletonhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>DSC Configurations</source>
          <target state="translated">DSC 구성</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>powershell,DSC</source>
          <target state="translated">powershell,DSC</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>DSC Configurations</source>
          <target state="translated">DSC 구성</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Applies To: Windows PowerShell 4.0, Windows PowerShell 5.0</source>
          <target state="translated">적용 대상: Windows PowerShell 4.0, Windows PowerShell 5.0</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>DSC configurations are PowerShell scripts that define a special type of function.</source>
          <target state="translated">DSC 구성은 특별한 형식의 함수를 정의하는 PowerShell 스크립트입니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>To define a configuration, you use the PowerShell keyword <bpt id="p1">__</bpt>Configuration<ept id="p1">__</ept>.</source>
          <target state="translated">구성을 정의하려면 PowerShell 키워드 <bpt id="p1">__</bpt>Configuration<ept id="p1">__</ept>을 사용합니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Save the script as a .ps1 file.</source>
          <target state="translated">스크립트를 .ps1 파일로 저장하세요.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Configuration syntax</source>
          <target state="translated">구성 구문</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>A configuration script consists of the following parts:</source>
          <target state="translated">구성 스크립트는 다음의 부분들로 구성됩니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>Configuration<ept id="p1">**</ept> block.</source>
          <target state="translated"><bpt id="p1">**</bpt>Configuration<ept id="p1">**</ept> 블록.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>This is the outermost script block.</source>
          <target state="translated">가장 바깥쪽 스크립트 블록입니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>You define it by using the <bpt id="p1">**</bpt>Configuration<ept id="p1">**</ept> keyword and providing a name.</source>
          <target state="translated"><bpt id="p1">**</bpt>Configuration<ept id="p1">**</ept> 키워드를 사용하고 이름을 제공하여 정의합니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>In this case, the name of the configuration is "MyDscConfiguration".</source>
          <target state="translated">이 경우 구성의 이름은 "MyDscConfiguration"입니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>One or more <bpt id="p1">**</bpt>Node<ept id="p1">**</ept> blocks.</source>
          <target state="translated">하나 이상의 <bpt id="p1">**</bpt>Node<ept id="p1">**</ept> 블록.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>These define the nodes (computers or VMs) that you are configuring.</source>
          <target state="translated">이 블록에서는 구성 중인 노드(컴퓨터 또는 VM)를 정의합니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>In the above configuration, there is one <bpt id="p1">**</bpt>Node<ept id="p1">**</ept> block that targets a computer named "TEST-PC1".</source>
          <target state="translated">위의 구성에는 "TEST-PC1"이라는 컴퓨터를 대상으로 하는 하나의 <bpt id="p1">**</bpt>Node<ept id="p1">**</ept> 블록이 있습니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>One or more resource blocks.</source>
          <target state="translated">하나 이상의 리소스 블록.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>This is where the configuration sets the properties for the resources that it is configuring.</source>
          <target state="translated">이 블록은 구성으로 구성 중인 리소스에 대한 속성을 설정하는 위치입니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>In this case, there are two resource blocks, each of which call the "WindowsFeature" resource.</source>
          <target state="translated">이 경우 두 개의 리소스 블록이 있으며, 각각 "WindowsFeature" 리소스를 호출합니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Within a <bpt id="p1">**</bpt>Configuration<ept id="p1">**</ept> block, you can do anything that you normally could in a PowerShell function.</source>
          <target state="translated"><bpt id="p1">**</bpt>Configuration<ept id="p1">**</ept> 블록 내에서는 PoweShell 함수에서 일반적으로 수행할 수도 있는 모든 작업을 수행할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>For example, in the previous example, if you didn't want to hard code the name of the target computer in the configuration, you could add a parameter for the node name:</source>
          <target state="translated">예를 들어 앞의 예에서는, 구성에서 대상 컴퓨터의 이름을 하드 코드하지 않으려는 경우 노드 이름에 대한 매개 변수를 추가할 수도 있습니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>In this example, you specify the name of the node by passing it as the $ComputerName parameter when you <bpt id="p1">[</bpt>compile the configuraton<ept id="p1">](# Compiling the configuration)</ept>.</source>
          <target state="translated">이 예제에서는 <bpt id="p1">[</bpt>구성을 컴파일<ept id="p1">](# Compiling the configuration)</ept>할 때 $ComputerName 매개 변수로 전달하여 노드의 이름을 지정합니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>The name defaults to "localhost".</source>
          <target state="translated">이름의 기본값은 "localhost"입니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Compiling the configuration</source>
          <target state="translated">구성 컴파일</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Before you can enact a configuration, you have to compile it into a MOF document.</source>
          <target state="translated">구성을 시행할 수 있으려면 먼저 MOF 문서로 컴파일해야 합니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>You do this by calling the configuration like you would a PowerShell function.</source>
          <target state="translated">PowerShell 함수에 대해 하는 것처럼 구성을 호출하여 이렇게 수행합니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source><bpt id="p1">__</bpt>Note:<ept id="p1">__</ept> To call a configuration, the function must be in global scope (as with any other PowerShell function).</source>
          <target state="translated"><bpt id="p1">__</bpt>참고:<ept id="p1">__</ept> 구성을 호출하려면 (다른 PowerShell 함수에서 처럼) 함수가 전역 범위에 있어야 합니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>You can make this happen either by "dot-sourcing" the script, or by running the configuration script by using F5 or clicking on the <bpt id="p1">__</bpt>Run Script<ept id="p1">__</ept> button in the ISE.</source>
          <target state="translated">스크립트를 "도트 소싱"하거나, F5 키를 사용하거나 ISE에서 <bpt id="p1">__</bpt>스크립트 실행<ept id="p1">__</ept> 단추를 클릭하여 구성 스크립트를 실행하면 이렇게 할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>To dot-source the script, run the command <ph id="ph1">`. .\myConfig.ps1`</ph> where <ph id="ph2">`myConfig.ps1`</ph> is the name of the script file that contains your configuration.</source>
          <target state="translated">스크립트를 도트 소싱하려면 명령을 <ph id="ph1">`. .\myConfig.ps1`</ph>을 실행합니다. 여기서 <ph id="ph2">`myConfig.ps1`</ph>은 구성을 포함하는 스크립트 파일의 이름입니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>When you call the configuration, it:</source>
          <target state="translated">구성을 호출하면 다음을 수행합니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Resolves all variables</source>
          <target state="translated">모든 변수를 확인합니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Creates a folder in the current directory with the same name as the configuration.</source>
          <target state="translated">현재 디렉터리에 구성과 같은 이름으로 폴더를 생성합니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Creates a file named <bpt id="p1">_</bpt>NodeName<ept id="p1">_</ept>.mof in the new directory, where <bpt id="p2">_</bpt>NodeName<ept id="p2">_</ept> is the name of the target node of the configuration.</source>
          <target state="translated">새 디렉터리에 <bpt id="p1">_</bpt>NodeName<ept id="p1">_</ept>.mof라는 파일을 생성합니다. <bpt id="p2">_</bpt>NodeName<ept id="p2">_</ept>은 구성의 대상 노드 이름입니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>If there are more than one nodes, a MOF file will be created for each node.</source>
          <target state="translated">노드가 두 개 이상 있을 경우에는 각 노드에 대해 MOF 파일이 생성됩니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source><bpt id="p1">__</bpt>Note<ept id="p1">__</ept>: The MOF file contains all of the configuration information for the target node.</source>
          <target state="translated"><bpt id="p1">__</bpt>참고<ept id="p1">__</ept>: MOF 파일은 대상 노드에 대한 모든 구성 정보를 포함합니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Because of this, it’s important to keep it secure.</source>
          <target state="translated">이 때문에 안전하게 유지해야 합니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Securing the MOF file<ept id="p1">](secureMOF.md)</ept>.</source>
          <target state="translated">자세한 내용은 <bpt id="p1">[</bpt>MOF 파일 보안<ept id="p1">](secureMOF.md)</ept>을 참조하세요.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Compiling the first configuration above results in the following folder structure:</source>
          <target state="translated">위의 첫 번째 구성을 컴파일하면 다음 폴더 구조가 생성됩니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>If the configuration takes a parameter, as in the second example, that has to be provided at compile time.</source>
          <target state="translated">구성에서 매개 변수를 사용하는 경우, 두 번째 예제에서처럼 컴파일 시 제공해야 합니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Here's how that would look:</source>
          <target state="translated">다음과 같은 모습이 됩니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Using DependsOn</source>
          <target state="translated">DependsOn 사용</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>A useful DSC keyword is <bpt id="p1">__</bpt>DependsOn<ept id="p1">__</ept>.</source>
          <target state="translated">유용한 DSC 키워드는 <bpt id="p1">__</bpt>DependsOn<ept id="p1">__</ept>입니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Typically (though not necessarily always), DSC applies the resources in the order that they appear within the configuration.</source>
          <target state="translated">일반적으로(늘 반드시 그렇지는 않지만), DSC는 구성 내에서 나타나는 순서로 리소스를 적용합니다.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>However, <bpt id="p1">__</bpt>DependsOn<ept id="p1">__</ept> specifies which resources depend on other resources, and the LCM ensures that they are applied in the correct order, regardless of the order in which resource instances are defined.</source>
          <target state="translated">그러나 <bpt id="p1">__</bpt>DependsOn<ept id="p1">__</ept>은 다른 리소스에 종속되는 리소스를 지정하며, LCM은 이러한 리소스가 리소스 인스턴스가 정의된 순서에 관계없이 올바른 순서로 적용되도록 합니다.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>For example, a configuration might specify that an instance of the <bpt id="p1">__</bpt>User<ept id="p1">__</ept> resource depends on the existence of a <bpt id="p2">__</bpt>Group<ept id="p2">__</ept> instance:</source>
          <target state="translated">예를 들어, 구성은 <bpt id="p1">__</bpt>User<ept id="p1">__</ept> 리소스의 인스턴스가 <bpt id="p2">__</bpt>Group<ept id="p2">__</ept> 인스턴스의 존재 여부에 따라 달라진다고 지정할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Using New Resources in Your Configuration</source>
          <target state="translated">구성에서 새 리소스 사용</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>If you ran the previous examples, you might have noticed that you were warned that you were using a resource without explicitly importing it.</source>
          <target state="translated">앞의 예제를 실행했다면 명시적으로 가져오지 않고 리소스를 사용하고 있다는 경고가 표시된 것을 보았을 수 있습니다.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Today, DSC ships with 12 resources as part of the PSDesiredStateConfiguration module.</source>
          <target state="translated">오늘, DSC는 PSDesiredStateConfiguration 모듈의 일부로서 12개의 리소스와 함께 제공됩니다.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Other resources in external modules must be placed in <ph id="ph1">`$env:PSModulePath`</ph> in order to be recognized by the LCM.</source>
          <target state="translated">외부 모듈의 다른 리소스는 LCM에서 인식할 수 있도록 <ph id="ph1">`$env:PSModulePath`</ph>에 배치해야 합니다.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>A new cmdlet, <bpt id="p1">[</bpt>Get-DscResource<ept id="p1">](https://technet.microsoft.com/en-us/library/dn521625.aspx)</ept>, can be used to determine what resources are installed on the system and available for use by the LCM.</source>
          <target state="translated">새 cmdlet인 <bpt id="p1">[</bpt>Get-DscResource<ept id="p1">](https://technet.microsoft.com/en-us/library/dn521625.aspx)</ept>는 시스템에 설치되어 있고 LCM에서 사용할 수 있는 리소스를 파악하는 데 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Once these modules have been placed in <ph id="ph1">`$env:PSModulePath`</ph> and are properly recognized by <bpt id="p1">[</bpt>Get-DscResource<ept id="p1">](https://technet.microsoft.com/en-us/library/dn521625.aspx)</ept>, they still need to be loaded within your configuration.</source>
          <target state="translated">이러한 모듈은 <ph id="ph1">`$env:PSModulePath`</ph>에 배치되어 <bpt id="p1">[</bpt>Get-DscResource<ept id="p1">](https://technet.microsoft.com/en-us/library/dn521625.aspx)</ept>에 의해 제대로 인식된 후에도 여전히 구성 내에서 로드되어야 합니다.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source><bpt id="p1">__</bpt>Import-DscResource<ept id="p1">__</ept> is a dynamic keyword that can only be recognized within a <bpt id="p2">__</bpt>Configuration<ept id="p2">__</ept> block (i.e. it is not a cmdlet).</source>
          <target state="translated"><bpt id="p1">__</bpt>Import-DscResource<ept id="p1">__</ept>는 <bpt id="p2">__</bpt>구성<ept id="p2">__</ept> 블록 내에서만 인식될 수 있는 동적 키워드입니다(즉, cmdlet이 아님).</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source><bpt id="p1">__</bpt>Import-DscResource<ept id="p1">__</ept> supports two parameters:</source>
          <target state="translated"><bpt id="p1">__</bpt>Import-DscResource<ept id="p1">__</ept>에서는 두 개의 매개 변수를 지원합니다.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source><bpt id="p1">__</bpt>ModuleName<ept id="p1">__</ept> is the recommended way of using <bpt id="p2">__</bpt>Import-DscResource<ept id="p2">__</ept>.</source>
          <target state="translated"><bpt id="p1">__</bpt>ModuleName<ept id="p1">__</ept>은 <bpt id="p2">__</bpt>Import-DscResource<ept id="p2">__</ept>를 사용하는 권장 방법입니다.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>It accepts the name of the module that contains the resources to be imported (as well as a string array of module names).</source>
          <target state="translated">가져올 리소스를 포함하는 모듈의 이름을 받습니다(모듈 이름으로 이루어진 문자열 배열도 받음).</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source><bpt id="p1">__</bpt>Name<ept id="p1">__</ept> is the name of the resource to import.</source>
          <target state="translated"><bpt id="p1">__</bpt>Name<ept id="p1">__</ept>은 가져올 리소스의 이름입니다.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>This is not the friendly name returned as "Name" by <bpt id="p1">[</bpt>Get-DscResource<ept id="p1">](https://technet.microsoft.com/en-us/library/dn521625.aspx)</ept>, but the class name used when defining the resource schema (returned as <bpt id="p2">__</bpt>ResourceType<ept id="p2">__</ept> by <bpt id="p3">[</bpt>Get-DscResource<ept id="p3">](https://technet.microsoft.com/en-us/library/dn521625.aspx)</ept>).</source>
          <target state="translated">이 이름은 <bpt id="p1">[</bpt>Get-DscResource<ept id="p1">](https://technet.microsoft.com/en-us/library/dn521625.aspx)</ept>에 의해 "Name"으로 반환한 친숙한 이름이 아니라, 리소스 스키마를 정의할 때 사용된 클래스 이름입니다(<bpt id="p3">[</bpt>Get-DscResource<ept id="p3">](https://technet.microsoft.com/en-us/library/dn521625.aspx)</ept>에 의해 <bpt id="p2">__</bpt>ResourceType<ept id="p2">__</ept>으로 반환됨).</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>See Also</source>
          <target state="translated">참고 항목</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>Windows PowerShell Desired State Configuration Overview</source>
          <target state="translated">Windows PowerShell 필요한 상태 구성 개요</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>DSC Resources</source>
          <target state="translated">DSC 리소스</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>Configuring The Local Configuration Manager</source>
          <target state="translated">로컬 구성 관리자 구성</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>