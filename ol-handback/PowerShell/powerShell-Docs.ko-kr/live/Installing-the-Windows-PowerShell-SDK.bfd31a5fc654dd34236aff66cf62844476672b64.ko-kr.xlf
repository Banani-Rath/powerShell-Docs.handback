<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ko-kr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-56a7a5e" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">7af27dc9bd8e93d1df5258b0d8df8af12726f568</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">scripting\setup\Installing-the-Windows-PowerShell-SDK.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions" />
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">c6317f046472dc7e6767aff08a9f47be7605cfd5</xliffext:olskeletonhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Installing the Windows PowerShell SDK</source>
          <target state="translated">Windows PowerShell SDK 설치</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>powershell,cmdlet</source>
          <target state="translated">powershell,cmdlet</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Installing the Windows PowerShell SDK</source>
          <target state="translated">Windows PowerShell SDK 설치</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>The following topic describes how to install the PowerShell SDK on different versions of Windows.</source>
          <target state="translated">다음 항목에서는 여러 버전의 Windows에 PowerShell SDK를 설치하는 방법을 설명합니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Installing Windows PowerShell 3.0 SDK for Windows 8 and Windows Server 2012</source>
          <target state="translated">Windows 8 및 Windows Server 2012용 Windows PowerShell 3.0 SDK 설치</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Windows PowerShell 3.0 is automatically installed with Windows 8 and Windows Server 2012.</source>
          <target state="translated">Windows PowerShell 3.0은 Windows 8 및 Windows Server 2012와 함께 자동으로 설치됩니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>In addition, you can download and install the reference assemblies for Windows PowerShell 3.0 as part of the Windows 8 SDK.</source>
          <target state="translated">또한 Windows 8 SDK의 일부로써 Windows PowerShell 3.0의 참조 어셈블리를 다운로드하고 설치할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>These assemblies allow you to write cmdlets, providers, and host programs for Windows PowerShell 3.0.</source>
          <target state="translated">이러한 어셈블리를 사용하여 Windows PowerShell 3.0에 대한 cmdlet, 공급자 및 호스트 프로그램을 작성할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>When you install the Windows SDK for Windows 8, the Windows PowerShell assemblies are automatically installed in the reference assembly folder, in \Program Files (x86)\Reference Assemblies\Microsoft\WindowsPowerShell\3.0.</source>
          <target state="translated">Windows 8용 Windows SDK를 설치하면 Windows PowerShell 어셈블리가 참조 어셈블리 폴더(\Program Files (x86)\Reference Assemblies\Microsoft\WindowsPowerShell\3.0)에 자동으로 설치됩니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>For more information, see the <bpt id="p1">[</bpt>Windows 8 SDK download site<ept id="p1">](http://msdn.microsoft.com/windows/hardware/hh852363.aspx)</ept>.</source>
          <target state="translated">자세한 내용은 <bpt id="p1">[</bpt>Windows 8 SDK 다운로드 사이트<ept id="p1">](http://msdn.microsoft.com/windows/hardware/hh852363.aspx)</ept>를 참조하세요.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Windows PowerShell code samples are also available on the Development Center.</source>
          <target state="translated">Windows PowerShell 코드 샘플은 개발자 센터에서도 제공됩니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>For more information, see the Desktop code sample page on the <bpt id="p1">[</bpt>Dev center site<ept id="p1">](http://code.msdn.microsoft.com/windowsdesktop/)</ept>.</source>
          <target state="translated">자세한 내용은 <bpt id="p1">[</bpt>개발자 센터 사이트<ept id="p1">](http://code.msdn.microsoft.com/windowsdesktop/)</ept>에서 데스크톱 코드 샘플 페이지를 참조하세요.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>In addition, Windows PowerShell 3.0 is backwards-compatible with the Windows PowerShell 2.0 SDK, which includes a number of code samples.</source>
          <target state="translated">또한 Windows PowerShell 3.0은 다수의 코드 샘플이 포함된 이전 버전인 Windows PowerShell 2.0 SDK와 호환됩니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>For more information on how to download the Windows PowerShell 2.0 SDK, see below.</source>
          <target state="translated">Windows PowerShell 2.0 SDK를 다운로드하는 방법에 대한 자세한 내용은 다음을 참조하세요.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>(Note that while the 2.0 code samples are compatible with Windows 8 and Windows PowerShell 3.0, you cannot install Windows PowerShell 2.0 on a Windows 8 platform.)</source>
          <target state="translated">(2.0 코드 샘플은 Windows 8 및 Windows PowerShell 3.0과 호환되지만 Windows 8 플랫폼에 Windows PowerShell 2.0을 설치할 수 없습니다.)</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Installing Windows PowerShell 3.0 SDK for Windows 7 and Windows Server 2008 R2</source>
          <target state="translated">Windows 7 및 Windows Server 2008 R2용 Windows PowerShell 3.0 SDK 설치</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Windows 7 and Windows Server 2008 R2 automatically have PowerShell 2.0 installed.</source>
          <target state="translated">Windows 7 및 Windows Server 2008 R2는 PowerShell 2.0을 자동으로 설치합니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>In addition, you can install PowerShell 3.0 on these systems.</source>
          <target state="translated">또한 이러한 시스템에 PowerShell 3.0을 설치할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>(For more information, see <bpt id="p1">[</bpt>Installing Windows PowerShell<ept id="p1">](Installing-Windows-PowerShell.md)</ept>.).</source>
          <target state="translated">자세한 내용은 <bpt id="p1">[</bpt>Windows PowerShell 설치<ept id="p1">](Installing-Windows-PowerShell.md)</ept>를 참조하세요.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>As described above, you can also install the Windows 8 SDK on Windows 7 and Windows Server 2008 R2.</source>
          <target state="translated">위에서 설명한 대로, Windows 7 및 Windows Server 2008 R2에서도 Windows 8 SDK를 설치할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Installing Windows PowerShell 2.0 SDK for Windows 7, Vista, XP, Server 2003, and Server 2008</source>
          <target state="translated">Windows 7, Vista, XP, Server 2003 및 Server 2008용 Windows PowerShell 2.0 SDK 설치</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>The Windows PowerShell 2.0 SDK provides the reference assemblies needed to write cmdlets, providers, and hosting applications, and it provides C# sample code that can be used as the starting point when you begin writing code.</source>
          <target state="translated">Windows PowerShell 2.0 SDK는 cmdlet, 공급자 및 호스팅 응용 프로그램을 작성하는 데 필요한 참조 어셈블리를 제공하고 코드 작성을 시작할 때 시작 지점으로 사용할 수 있는 C# 샘플 코드를 제공합니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>To install this SDK, see <bpt id="p1">[</bpt>Windows PowerShell 2.0 SDK<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=184611)</ept>.</source>
          <target state="translated">이 SDK를 설치하려면 <bpt id="p1">[</bpt>Windows PowerShell 2.0 SDK<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=184611)</ept>를 참조하세요.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Reference assemblies</source>
          <target state="translated">참조 어셈블리</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Reference assemblies are installed in the following location by default: <ph id="ph1">`c:\Program Files\Reference Assemblies\Microsoft\WindowsPowerShell\V1.0`</ph>.</source>
          <target state="translated">참조 어셈블리는 기본적으로 다음 위치에 설치됩니다. <ph id="ph1">`c:\Program Files\Reference Assemblies\Microsoft\WindowsPowerShell\V1.0`</ph></target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Note<ept id="p1">**</ept>: Code that is compiled against the Windows PowerShell 2.0 assemblies cannot be loaded into Windows PowerShell 1.0 installations.</source>
          <target state="translated"><bpt id="p1">**</bpt>참고<ept id="p1">**</ept>: Windows PowerShell 2.0 어셈블리에 대해 컴파일된 코드는 Windows PowerShell 1.0 설치에 로드할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>However, code that is compiled against the Windows PowerShell 1.0 assemblies can be loaded into Windows PowerShell 2.0 installations.</source>
          <target state="translated">그러나 Windows PowerShell 1.0 어셈블리에 대해 컴파일되는 코드는 Windows PowerShell 2.0 설치에 로드할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Samples</source>
          <target state="translated">샘플</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Code samples are installed in the following location by default: <ph id="ph1">`C:\Program Files\Microsoft SDKs\Windows\v7.0\Samples\sysmgmt\WindowsPowerShell\`</ph>.</source>
          <target state="translated">코드 샘플은 기본적으로 다음 위치에 설치됩니다. <ph id="ph1">`C:\Program Files\Microsoft SDKs\Windows\v7.0\Samples\sysmgmt\WindowsPowerShell\`</ph></target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>The following sections provide a brief description of what each sample does.</source>
          <target state="translated">다음 섹션에서는 각 샘플의 용도에 대해 간략하게 설명합니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Cmdlet samples</source>
          <target state="translated">Cmdlet 샘플</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>GetProcessSample01</source>
          <target state="translated">GetProcessSample01</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Shows how to write a simple cmdlet that gets all the processes on the local computer.</source>
          <target state="translated">로컬 컴퓨터에 있는 모든 프로세스를 가져오는 간단한 cmdlet을 작성하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>GetProcessSample02</source>
          <target state="translated">GetProcessSample02</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Shows how to add parameters to the cmdlet.</source>
          <target state="translated">cmdlet에 매개 변수를 추가하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>The cmdlet takes one or more process names and returns the matching processes.</source>
          <target state="translated">cmdlet은 하나 이상의 프로세스 이름을 사용하고 일치하는 프로세스를 반환합니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>GetProcessSample03</source>
          <target state="translated">GetProcessSample03</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Shows how to add parameters that accept input from the pipeline.</source>
          <target state="translated">파이프라인의 입력을 허용하는 매개 변수를 추가하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>GetProcessSample04</source>
          <target state="translated">GetProcessSample04</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Shows how to handle nonterminating errors.</source>
          <target state="translated">종료되지 않는 오류를 처리하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>GetProcessSample05</source>
          <target state="translated">GetProcessSample05</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Shows how to display a list of specified processes.</source>
          <target state="translated">지정한 프로세스 목록을 표시하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>SelectObject</source>
          <target state="translated">SelectObject</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Shows how to write a filter to select only certain objects.</source>
          <target state="translated">특정 개체만 선택하는 필터를 작성하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>SelectString</source>
          <target state="translated">SelectString</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Shows how to search files for specified patterns.</source>
          <target state="translated">파일에서 지정한 패턴을 검색하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>StopProcessSample01</source>
          <target state="translated">StopProcessSample01</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Shows how to implement a <bpt id="p1">*</bpt>PassThru<ept id="p1">*</ept> parameter, and how to request user feedback by calls to the <bpt id="p2">[</bpt>ShouldProcess<ept id="p2">](https://technet.microsoft.com/library/system.management.automation.cmdlet.shouldprocess.aspx)</ept> and <bpt id="p3">[</bpt>ShouldContinue<ept id="p3">](https://technet.microsoft.com/library/system.management.automation.cmdlet.shouldcontinue.aspx)</ept> methods.</source>
          <target state="translated"><bpt id="p1">*</bpt>PassThru<ept id="p1">*</ept> 매개 변수를 구현하는 방법과 <bpt id="p2">[</bpt>ShouldProcess<ept id="p2">](https://technet.microsoft.com/library/system.management.automation.cmdlet.shouldprocess.aspx)</ept> 및 <bpt id="p3">[</bpt>ShouldContinue<ept id="p3">](https://technet.microsoft.com/library/system.management.automation.cmdlet.shouldcontinue.aspx)</ept> 메서드를 호출하여 사용자 피드백을 요청하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Users specify the <bpt id="p1">*</bpt>PassThru<ept id="p1">*</ept> parameter when they want to force the cmdlet to return an object,</source>
          <target state="translated">사용자는 cmdlet에서 강제로 개체를 반환하려는 경우 <bpt id="p1">*</bpt>PassThru<ept id="p1">*</ept> 매개 변수를 지정합니다.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>StopProcessSample02</source>
          <target state="translated">StopProcessSample02</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Shows how to stop a specific process.</source>
          <target state="translated">특정 프로세스를 중지하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>StopProcessSample03</source>
          <target state="translated">StopProcessSample03</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Shows how to declare aliases for parameters and how to support wildcards.</source>
          <target state="translated">매개 변수의 별칭을 선언하는 방법과 와일드카드를 지원하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>StopProcessSample04</source>
          <target state="translated">StopProcessSample04</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Shows how to declare parameter sets, the object that the cmdlet takes as input, and how to specify the default parameter set to use.</source>
          <target state="translated">매개 변수 집합을 선언하는 방법, cmdlet이 입력으로 사용하는 개체 및 사용할 기본 매개 변수 집합을 지정하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>Remoting samples</source>
          <target state="translated">원격 샘플</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>RemoteRunspace01</source>
          <target state="translated">RemoteRunspace01</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Shows how to create a remote runspace that is used to establish a remote connection.</source>
          <target state="translated">원격 연결을 설정하는 데 사용되는 원격 runspace를 만드는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>RemoteRunspacePool01</source>
          <target state="translated">RemoteRunspacePool01</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>Shows how to construct a remote runspace pool and how to run multiple commands concurrently by using this pool.</source>
          <target state="translated">원격 runspace 풀을 생성하는 방법과 이 풀을 사용하여 여러 명령을 동시에 실행하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>Serialization01</source>
          <target state="translated">Serialization01</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>Shows how to look at an existing .NET class and make sure that information from selected public properties of this class is preserved across serialization/deserialization.</source>
          <target state="translated">기존 .NET 클래스를 살펴보고 이 클래스의 선택한 공용 속성 정보가 직렬화/역직렬화에서 유지되는지 확인하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>Serialization02</source>
          <target state="translated">Serialization02</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>Shows how to look at an existing .NET class and make sure that information from instance of this class is preserved across serialization/deserialization when the information is not available in public properties of the class.</source>
          <target state="translated">기존 .NET 클래스를 살펴보고 이 클래스 인스턴스의 정보가 클래스의 공용 속성에 제공되지 않는 경우 직렬화/역직렬화에서 유지되는지 확인하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>Serialization03</source>
          <target state="translated">Serialization03</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>Shows how to look at an existing .NET class and make sure that instances of this class and of derived classes are deserialized (rehydrated) into live .NET objects.</source>
          <target state="translated">기존 .NET 클래스를 살펴보고 이 클래스 및 파생 클래스의 인스턴스가 라이브 .NET 개체로 역직렬화(리하이드레이션)되는지 확인하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>Event samples</source>
          <target state="translated">이벤트 샘플</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>Event01</source>
          <target state="translated">Event01</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>Shows how to create a cmdlet for event registration by deriving from ObjectEventRegistrationBase.</source>
          <target state="translated">ObjectEventRegistrationBase에서 파생하여 이벤트 등록용 cmdlet을 만드는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>Event02</source>
          <target state="translated">Event02</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>Shows how to shows how to receive notifications of Windows PowerShell events that are generated on remote computers.</source>
          <target state="translated">원격 컴퓨터에서 생성된 Windows PowerShell 이벤트 알림을 수신하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>It uses the PSEventReceived event exposed through the <bpt id="p1">[</bpt>Runspace<ept id="p1">](https://technet.microsoft.com/library/system.management.automation.runspaces.runspace.aspx)</ept> class.</source>
          <target state="translated"><bpt id="p1">[</bpt>Runspace<ept id="p1">](https://technet.microsoft.com/library/system.management.automation.runspaces.runspace.aspx)</ept> 클래스를 통해 노출되는 PSEventReceived 이벤트를 사용합니다.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>Hosting application samples</source>
          <target state="translated">호스팅 응용 프로그램 샘플</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>Runspace01</source>
          <target state="translated">Runspace01</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>Shows how to use the <bpt id="p1">[</bpt>PowerShell<ept id="p1">](https://technet.microsoft.com/library/system.management.automation.powershell.aspx)</ept> class to run the <bpt id="p2">[</bpt>Get-Process<ept id="p2">](http://go.microsoft.com/fwlink/?LinkId=113324)</ept> cmdlet synchronously.</source>
          <target state="translated"><bpt id="p1">[</bpt>PowerShell<ept id="p1">](https://technet.microsoft.com/library/system.management.automation.powershell.aspx)</ept> 클래스를 사용하여 <bpt id="p2">[</bpt>Get-Process<ept id="p2">](http://go.microsoft.com/fwlink/?LinkId=113324)</ept> cmdlet을 동기적으로 실행하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">[</bpt>Get-Process<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=113324)</ept> cmdlet returns <bpt id="p2">[</bpt>Process<ept id="p2">](https://technet.microsoft.com/library/system.diagnostics.process.aspx)</ept> objects for each process running on the local computer.</source>
          <target state="translated"><bpt id="p1">[</bpt>Get-Process<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=113324)</ept> cmdlet은 로컬 컴퓨터에서 실행 중인 각 프로세스에 대해 <bpt id="p2">[</bpt>Process<ept id="p2">](https://technet.microsoft.com/library/system.diagnostics.process.aspx)</ept> 개체를 반환합니다.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>Runspace02</source>
          <target state="translated">Runspace02</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>Shows how to use the <bpt id="p1">[</bpt>PowerShell<ept id="p1">](https://technet.microsoft.com/library/system.management.automation.powershell.aspx)</ept> class to run the <bpt id="p2">[</bpt>Get-Process<ept id="p2">](http://go.microsoft.com/fwlink/?LinkId=113324)</ept> and <bpt id="p3">[</bpt>Sort-Object<ept id="p3">](http://go.microsoft.com/fwlink/?LinkID=113403)</ept> cmdlets synchronously.</source>
          <target state="translated"><bpt id="p1">[</bpt>PowerShell<ept id="p1">](https://technet.microsoft.com/library/system.management.automation.powershell.aspx)</ept> 클래스를 사용하여 <bpt id="p2">[</bpt>Get-Process<ept id="p2">](http://go.microsoft.com/fwlink/?LinkId=113324)</ept> 및 <bpt id="p3">[</bpt>Sort-Object<ept id="p3">](http://go.microsoft.com/fwlink/?LinkID=113403)</ept>cmdlet을 동기적으로 실행하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">[</bpt>Get-Process<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=113324)</ept> cmdlet returns <bpt id="p2">[</bpt>Process<ept id="p2">](https://technet.microsoft.com/library/system.diagnostics.process.aspx)</ept> objects for each process running on the local computer, and the Sort-Object sorts the objects based on their <bpt id="p3">[</bpt>Id<ept id="p3">](https://technet.microsoft.com/library/system.diagnostics.process.id.aspx)</ept> property.</source>
          <target state="translated"><bpt id="p1">[</bpt>Get-process<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=113324)</ept> cmdlet은 로컬 컴퓨터에서 실행 중인 각 프로세스에 대해 <bpt id="p2">[</bpt>Process<ept id="p2">](https://technet.microsoft.com/library/system.diagnostics.process.aspx)</ept> 개체를 반환하고, Sort-Object는 해당 <bpt id="p3">[</bpt>Id<ept id="p3">](https://technet.microsoft.com/library/system.diagnostics.process.id.aspx)</ept> 속성을 기준으로 개체를 정렬합니다.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>The results of these commands is displayed by using a <bpt id="p1">[</bpt>DataGridView<ept id="p1">](https://technet.microsoft.com/library/system.windows.forms.datagridview.aspx)</ept> control.</source>
          <target state="translated">이러한 명령의 결과는 <bpt id="p1">[</bpt>DataGridView<ept id="p1">](https://technet.microsoft.com/library/system.windows.forms.datagridview.aspx)</ept> 컨트롤을 사용하여 표시됩니다.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>Runspace03</source>
          <target state="translated">Runspace03</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>Shows how to use the <bpt id="p1">[</bpt>PowerShell<ept id="p1">](https://technet.microsoft.com/library/system.management.automation.powershell.aspx)</ept> class to run a script synchronously, and how to handle non-terminating errors.</source>
          <target state="translated"><bpt id="p1">[</bpt>PowerShell<ept id="p1">](https://technet.microsoft.com/library/system.management.automation.powershell.aspx)</ept> 클래스를 사용하여 동기적으로 스크립트를 실행하는 방법과 종료되지 않는 오류를 처리하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>The script receives a list of process names and then retrieves those processes.</source>
          <target state="translated">스크립트는 프로세스 이름 목록을 받은 다음 해당 프로세스를 검색합니다.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>The results of the script, including any non-terminating errors that were generated when running the script, are displayed in a console window.</source>
          <target state="translated">스크립트를 실행할 때 생성된 종료되지 않는 오류를 포함하여 스크립트의 결과가 콘솔 창에 표시됩니다.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>Runspace04</source>
          <target state="translated">Runspace04</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>Shows how to use the <bpt id="p1">[</bpt>PowerShell<ept id="p1">](https://technet.microsoft.com/library/system.management.automation.powershell.aspx)</ept> class to run commands, and how to catch terminating errors that are thrown when running the commands.</source>
          <target state="translated"><bpt id="p1">[</bpt>PowerShell<ept id="p1">](https://technet.microsoft.com/library/system.management.automation.powershell.aspx)</ept> 클래스를 사용하여 명령을 실행하는 방법과 명령을 실행할 때 발생한 종료 오류를 catch하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>Two commands are run, and the last command is passed a parameter argument that is not valid.</source>
          <target state="translated">두 개의 명령이 실행되는데, 마지막 명령은 유효하지 않은 매개 변수 인수를 전달받습니다.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>As a result, no objects are returned and a terminating error is thrown.</source>
          <target state="translated">따라서 개체가 반환되지 않고 종료 오류가 발생합니다.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>Runspace05</source>
          <target state="translated">Runspace05</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>Shows how to add a snap-in to an <bpt id="p1">[</bpt>InitialSessionState<ept id="p1">](https://technet.microsoft.com/library/system.management.automation.runspaces.initialsessionstate.aspx)</ept> object so that the cmdlet of the snap-in is available when the runspace is opened.</source>
          <target state="translated">runspace를 열 때 스냅인의 cmdlet을 사용할 수 있도록 <bpt id="p1">[</bpt>InitialSessionState<ept id="p1">](https://technet.microsoft.com/library/system.management.automation.runspaces.initialsessionstate.aspx)</ept> 개체에 스냅인을 추가하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>The snap-in provides a Get-Proc cmdlet (defined by the <bpt id="p1">[</bpt>GetProcessSample01 Sample<ept id="p1">](https://technet.microsoft.com/library/ff602028.aspx)</ept>) that is run synchronously by using a <bpt id="p2">[</bpt>PowerShell<ept id="p2">](https://technet.microsoft.com/library/system.management.automation.powershell.aspx)</ept> object.</source>
          <target state="translated">이 스냅인은 <bpt id="p2">[</bpt>PowerShell<ept id="p2">](https://technet.microsoft.com/library/system.management.automation.powershell.aspx)</ept> 개체를 사용하여 동기적으로 실행되는 Get-Proc cmdlet(<bpt id="p1">[</bpt>GetProcessSample01 샘플<ept id="p1">](https://technet.microsoft.com/library/ff602028.aspx)</ept>에서 정의)을 제공합니다.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>Runspace06</source>
          <target state="translated">Runspace06</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>Shows how to add a module to an <bpt id="p1">[</bpt>InitialSessionState<ept id="p1">](https://technet.microsoft.com/library/system.management.automation.runspaces.initialsessionstate.aspx)</ept> object so that the module is loaded when the runspace is opened.</source>
          <target state="translated">runspace를 열 때 모듈이 로드되도록 <bpt id="p1">[</bpt>InitialSessionState<ept id="p1">](https://technet.microsoft.com/library/system.management.automation.runspaces.initialsessionstate.aspx)</ept> 개체에 모듈을 추가하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>The module provides a Get-Proc cmdlet (defined by the <bpt id="p1">[</bpt>GetProcessSample02 Sample<ept id="p1">](https://technet.microsoft.com/library/ff602027.aspx)</ept>) that is run synchronously by using a <bpt id="p2">[</bpt>PowerShell<ept id="p2">](https://technet.microsoft.com/library/system.management.automation.powershell.aspx)</ept> object.</source>
          <target state="translated">이 모듈은 <bpt id="p2">[</bpt>PowerShell<ept id="p2">](https://technet.microsoft.com/library/system.management.automation.powershell.aspx)</ept> 개체를 사용하여 동기적으로 실행되는 Get-Proc cmdlet(<bpt id="p1">[</bpt>GetProcessSample02 샘플<ept id="p1">](https://technet.microsoft.com/library/ff602027.aspx)</ept>에서 정의)을 제공합니다.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>Runspace07</source>
          <target state="translated">Runspace07</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>Shows how to create a runspace, and then use that runspace to run two cmdlets synchronously by using a <bpt id="p1">[</bpt>PowerShell<ept id="p1">](https://technet.microsoft.com/library/system.management.automation.powershell.aspx)</ept> object.</source>
          <target state="translated">runspace를 만들고 해당 runspace를 사용하여 <bpt id="p1">[</bpt>PowerShell<ept id="p1">](https://technet.microsoft.com/library/system.management.automation.powershell.aspx)</ept> 개체를 통해 두 개의 cmdlet을 동기적으로 실행하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>Runspace08</source>
          <target state="translated">Runspace08</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>Shows how to add commands and arguments to the pipeline of a <bpt id="p1">[</bpt>PowerShell<ept id="p1">](https://technet.microsoft.com/library/system.management.automation.powershell.aspx)</ept> object and how to run the commands synchronously.</source>
          <target state="translated"><bpt id="p1">[</bpt>PowerShell<ept id="p1">](https://technet.microsoft.com/library/system.management.automation.powershell.aspx)</ept> 개체의 파이프라인에 명령 및 인수를 추가하는 방법과 동기적으로 명령을 실행하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>Runspace09</source>
          <target state="translated">Runspace09</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>Shows how to add a script to the pipeline of a <bpt id="p1">[</bpt>PowerShell<ept id="p1">](https://technet.microsoft.com/library/system.management.automation.powershell.aspx)</ept> object and how to run the script asynchronously.</source>
          <target state="translated"><bpt id="p1">[</bpt>PowerShell<ept id="p1">](https://technet.microsoft.com/library/system.management.automation.powershell.aspx)</ept> 개체의 파이프라인에 스크립트를 추가하는 방법과 동기적으로 스크립트를 실행하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>Events are used to handle the output of the script.</source>
          <target state="translated">이벤트는 스크립트의 출력을 처리하는 데 사용됩니다.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>Runspace10</source>
          <target state="translated">Runspace10</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>Shows how to create a default initial session state, how to add a cmdlet to the <bpt id="p1">[</bpt>InitialSessionState<ept id="p1">](https://technet.microsoft.com/library/system.management.automation.runspaces.initialsessionstate.aspx)</ept>, how to create a runspace that uses the initial session state, and how to run the command by using a <bpt id="p2">[</bpt>PowerShell<ept id="p2">](https://technet.microsoft.com/library/system.management.automation.powershell.aspx)</ept> object.</source>
          <target state="translated">기본 초기 세션 상태를 만드는 방법, <bpt id="p1">[</bpt>InitialSessionState<ept id="p1">](https://technet.microsoft.com/library/system.management.automation.runspaces.initialsessionstate.aspx)</ept>에 cmdlet을 추가하는 방법, 초기 세션 상태를 사용하는 runspace를 만드는 방법 및 <bpt id="p2">[</bpt>PowerShell<ept id="p2">](https://technet.microsoft.com/library/system.management.automation.powershell.aspx)</ept> 개체를 사용하여 명령을 실행하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>Runspace11</source>
          <target state="translated">Runspace11</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>Shows how to use the <bpt id="p1">[</bpt>ProxyCommand<ept id="p1">](https://technet.microsoft.com/library/system.management.automation.proxycommand.aspx)</ept> class to create a proxy command that calls an existing cmdlet, but restricts the set of available parameters.</source>
          <target state="translated"><bpt id="p1">[</bpt>ProxyCommand<ept id="p1">](https://technet.microsoft.com/library/system.management.automation.proxycommand.aspx)</ept> 클래스를 사용하여 기존 cmdlet을 호출하지만 사용 가능한 매개 변수 집합을 제한하는 프록시 명령을 만드는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>The proxy command is then added to an initial session state that is used to create a constrained runspace.</source>
          <target state="translated">프록시 명령은 제한된 runspace를 만드는 데 사용되는 초기 세션 상태에 추가됩니다.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>This means that the user can access the functionality of the cmdlet only through the proxy command.</source>
          <target state="translated">따라서 사용자가 프록시 명령을 통해서만 cmdlet의 기능에 액세스할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>PowerShell01</source>
          <target state="translated">PowerShell01</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>Shows how to create a constrained runspace using an <bpt id="p1">[</bpt>InitialSessionState<ept id="p1">](https://technet.microsoft.com/library/system.management.automation.runspaces.initialsessionstate.aspx)</ept> object.</source>
          <target state="translated"><bpt id="p1">[</bpt>InitialSessionState<ept id="p1">](https://technet.microsoft.com/library/system.management.automation.runspaces.initialsessionstate.aspx)</ept> 개체를 사용하여 제한된 runspace를 만드는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>PowerShell02</source>
          <target state="translated">PowerShell02</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>Shows how to use a runspace pool to run multiple commands concurrently.</source>
          <target state="translated">runspace 풀을 사용하여 여러 명령을 동시에 실행하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>Host samples</source>
          <target state="translated">호스트 샘플</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>Host01</source>
          <target state="translated">Host01</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>Shows how to implement a host application that uses a custom host.</source>
          <target state="translated">사용자 지정 호스트를 사용하는 호스트 응용 프로그램을 구현하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>In this sample a runspace is created that uses the custom host, and then the <bpt id="p1">[</bpt>PowerShell<ept id="p1">](https://technet.microsoft.com/library/system.management.automation.powershell.aspx)</ept> API is used to run a script that calls "exit".</source>
          <target state="translated">이 샘플에서는 사용자 지정 호스트를 사용하는 runspace를 만든 다음 <bpt id="p1">[</bpt>PowerShell<ept id="p1">](https://technet.microsoft.com/library/system.management.automation.powershell.aspx)</ept> API를 사용하여 "종료"를 호출하는 스크립트를 실행합니다.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>The host application then looks at the output of the script and prints out the results.</source>
          <target state="translated">호스트 응용 프로그램은 스크립트의 출력을 살펴보고 결과를 출력합니다.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>Host02</source>
          <target state="translated">Host02</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>Shows how to write a host application that uses the Windows PowerShell runtime along with a custom host implementation.</source>
          <target state="translated">사용자 지정 호스트 구현과 함께 Windows PowerShell 런타임을 사용하는 호스트 응용 프로그램을 작성하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>The host application sets the host culture to German, runs the <bpt id="p1">[</bpt>Get-Process<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=113324)</ept> cmdlet and displays the results as you would see them by using pwrsh.exe, and then prints out the current data and time in German.</source>
          <target state="translated">호스트 응용 프로그램은 호스트 문화권을 독일어로 설정하고, <bpt id="p1">[</bpt>Get-Process<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=113324)</ept> cmdlet을 실행한 다음 pwrsh.exe를 사용하여 보이는 대로 결과를 표시하고 현재 날짜와 시간을 독일어로 출력합니다.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>Host03</source>
          <target state="translated">Host03</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>Shows how to build an interactive console-based host application that reads commands from the command line, executes the commands, and then displays the results to the console.</source>
          <target state="translated">명령줄에서 명령을 읽고 명령을 실행한 후 콘솔에 결과를 표시하는 대화형 콘솔 기반 호스트 응용 프로그램을 구축하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>Host04</source>
          <target state="translated">Host04</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>Shows how to build an interactive console-based host application that reads commands from the command line, executes the commands, and then displays the results to the console.</source>
          <target state="translated">명령줄에서 명령을 읽고 명령을 실행한 후 콘솔에 결과를 표시하는 대화형 콘솔 기반 호스트 응용 프로그램을 구축하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>This host application also supports displaying prompts that allow the user to specify multiple choices.</source>
          <target state="translated">이 호스트 응용 프로그램은 사용자가 여러 선택 항목을 지정할 수 있는 프롬프트 표시도 지원합니다.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>Host05</source>
          <target state="translated">Host05</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>Shows how to build an interactive console-based host application that reads commands from the command line, executes the commands, and then displays the results to the console.</source>
          <target state="translated">명령줄에서 명령을 읽고 명령을 실행한 후 콘솔에 결과를 표시하는 대화형 콘솔 기반 호스트 응용 프로그램을 구축하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>This host application also supports calls to remote computers by using the <bpt id="p1">[</bpt>Enter-PsSession<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=135210)</ept> and <bpt id="p2">[</bpt>Exit-PsSession<ept id="p2">](http://go.microsoft.com/fwlink/?LinkId=135212)</ept> cmdlets.</source>
          <target state="translated">이 호스트 응용 프로그램은 <bpt id="p1">[</bpt>Enter-PsSession<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=135210)</ept> 및 <bpt id="p2">[</bpt>Exit-PsSession<ept id="p2">](http://go.microsoft.com/fwlink/?LinkId=135212)</ept> cmdlet을 사용한 원격 컴퓨터 호출도 지원합니다.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>Host06</source>
          <target state="translated">Host06</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>Shows how to build an interactive console-based host application that reads commands from the command line, executes the commands, and then displays the results to the console.</source>
          <target state="translated">명령줄에서 명령을 읽고 명령을 실행한 후 콘솔에 결과를 표시하는 대화형 콘솔 기반 호스트 응용 프로그램을 구축하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>In addition, this sample uses the Tokenizer APIs to specify the color of the text that is entered by the user.</source>
          <target state="translated">또한 이 샘플에서는 토크나이저 API를 사용하여 사용자가 입력하는 텍스트의 색을 지정합니다.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>Provider samples</source>
          <target state="translated">공급자 샘플</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>AccessDBProviderSample01</source>
          <target state="translated">AccessDBProviderSample01</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>Shows how to declare a provider class that derives directly from the <bpt id="p1">[</bpt>CmdletProvider<ept id="p1">](https://technet.microsoft.com/library/system.management.automation.provider.cmdletprovider.aspx)</ept> class.</source>
          <target state="translated"><bpt id="p1">[</bpt>CmdletProvider<ept id="p1">](https://technet.microsoft.com/library/system.management.automation.provider.cmdletprovider.aspx)</ept> 클래스에서 직접 파생되는 공급자 클래스를 선언하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>It is included here only for completeness.</source>
          <target state="translated">여기서는 참조용으로만 설명합니다.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>AccessDBProviderSample02</source>
          <target state="translated">AccessDBProviderSample02</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>Shows how to overwrite the <bpt id="p1">[</bpt>NewDrive<ept id="p1">](https://technet.microsoft.com/library/system.management.automation.provider.drivecmdletprovider.newdrive.aspx)</ept> and <bpt id="p2">[</bpt>RemoveDrive<ept id="p2">](https://technet.microsoft.com/library/system.management.automation.provider.drivecmdletprovider.removedrive.aspx)</ept> methods to support calls to the New-PSDrive and Remove-PSDrive cmdlets.</source>
          <target state="translated">New-PSDrive 및 Remove-PSDrive cmdlet 호출을 지원하기 위해 <bpt id="p1">[</bpt>NewDrive<ept id="p1">](https://technet.microsoft.com/library/system.management.automation.provider.drivecmdletprovider.newdrive.aspx)</ept> 및 <bpt id="p2">[</bpt>RemoveDrive<ept id="p2">](https://technet.microsoft.com/library/system.management.automation.provider.drivecmdletprovider.removedrive.aspx)</ept> 메서드를 덮어쓰는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>The provider class in this sample derives from the <bpt id="p1">[</bpt>DriveCmdletProvider<ept id="p1">](https://technet.microsoft.com/library/system.management.automation.provider.drivecmdletprovider.aspx)</ept> class.</source>
          <target state="translated">이 샘플의 공급자 클래스는 <bpt id="p1">[</bpt>DriveCmdletProvider<ept id="p1">](https://technet.microsoft.com/library/system.management.automation.provider.drivecmdletprovider.aspx)</ept> 클래스에서 파생됩니다.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>AccessDBProviderSample03</source>
          <target state="translated">AccessDBProviderSample03</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>Shows how to overwrite the <bpt id="p1">[</bpt>GetItem<ept id="p1">](https://technet.microsoft.com/library/system.management.automation.provider.itemcmdletprovider.getitem.aspx)</ept> and <bpt id="p2">[</bpt>SetItem<ept id="p2">](https://technet.microsoft.com/library/system.management.automation.provider.itemcmdletprovider.setitem.aspx)</ept> methods to support calls to the Get-Item and Set-Item cmdlets.</source>
          <target state="translated">Get-Item 및 Set-Item cmdlet 호출을 지원하기 위해 <bpt id="p1">[</bpt>GetItem<ept id="p1">](https://technet.microsoft.com/library/system.management.automation.provider.itemcmdletprovider.getitem.aspx)</ept> 및 <bpt id="p2">[</bpt>SetItem<ept id="p2">](https://technet.microsoft.com/library/system.management.automation.provider.itemcmdletprovider.setitem.aspx)</ept> 메서드를 덮어쓰는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>The provider class in this sample derives from the <bpt id="p1">[</bpt>ItemCmdletProvider<ept id="p1">](https://technet.microsoft.com/library/system.management.automation.provider.itemcmdletprovider.aspx)</ept> class.</source>
          <target state="translated">이 샘플의 공급자 클래스는 <bpt id="p1">[</bpt>ItemCmdletProvider<ept id="p1">](https://technet.microsoft.com/library/system.management.automation.provider.itemcmdletprovider.aspx)</ept> 클래스에서 파생됩니다.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>AccessDBProviderSample04</source>
          <target state="translated">AccessDBProviderSample04</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source>Shows how to overwrite container methods to support calls to the Copy-Item, Get-ChildItem, New-Item, and Remove-Item cmdlets.</source>
          <target state="translated">Copy-Item, Get-ChildItem, New-Item 및 Remove-Item cmdlet 호출을 지원하기 위해 컨테이너 메서드를 덮어쓰는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source>These methods should be implemented when the data store contains items that are containers.</source>
          <target state="translated">이러한 메서드는 데이터 저장소에 컨테이너 항목이 포함될 때 구현해야 합니다.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source>A container is a group of child items under a common parent item.</source>
          <target state="translated">컨테이너는 공통 부모 항목 아래에 있는 자식 항목 그룹입니다.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source>The provider class in this sample derives from the <bpt id="p1">[</bpt>ItemCmdletProvider<ept id="p1">](https://technet.microsoft.com/library/system.management.automation.provider.itemcmdletprovider.aspx)</ept> class.</source>
          <target state="translated">이 샘플의 공급자 클래스는 <bpt id="p1">[</bpt>ItemCmdletProvider<ept id="p1">](https://technet.microsoft.com/library/system.management.automation.provider.itemcmdletprovider.aspx)</ept> 클래스에서 파생됩니다.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source>AccessDBProviderSample05</source>
          <target state="translated">AccessDBProviderSample05</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source>Shows how to overwrite container methods to support calls to the Move-Item and Join-Path cmdlets.</source>
          <target state="translated">Move-Item 및 Join-Path cmdlet 호출을 지원하기 위해 컨테이너 메서드를 덮어쓰는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve">
          <source>These methods should be implemented when the user needs to move items within a container and if the data store contains nested containers.</source>
          <target state="translated">이러한 메서드는 사용자가 컨테이너 내의 항목을 이동해야 하고 데이터 저장소에 중첩된 컨테이너가 포함되는 경우에 구현해야 합니다.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source>The provider class in this sample derives from the <bpt id="p1">[</bpt>NavigationCmdletProvider<ept id="p1">](https://technet.microsoft.com/library/system.management.automation.provider.navigationcmdletprovider.aspx)</ept> class.</source>
          <target state="translated">이 샘플의 공급자 클래스는 <bpt id="p1">[</bpt>NavigationCmdletProvider<ept id="p1">](https://technet.microsoft.com/library/system.management.automation.provider.navigationcmdletprovider.aspx)</ept> 클래스에서 파생됩니다.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source>AccessDBProviderSample06</source>
          <target state="translated">AccessDBProviderSample06</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source>Shows how to overwrite content methods to support calls to the Clear-Content, Get-Content, and Set-Content cmdlets.</source>
          <target state="translated">Clear-Content, Get-Content 및 Set-Content cmdlet 호출을 지원하기 위해 콘텐츠 메서드를 덮어쓰는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve">
          <source>These methods should be implemented when the user needs to manage the content of the items in the data store.</source>
          <target state="translated">이러한 메서드는 사용자가 데이터 저장소에 있는 항목의 콘텐츠를 관리해야 하는 경우에 구현해야 합니다.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve">
          <source>The provider class in this sample derives from the <bpt id="p1">[</bpt>NavigationCmdletProvider<ept id="p1">](https://technet.microsoft.com/library/system.management.automation.provider.navigationcmdletprovider.aspx)</ept> class, and it implements the <bpt id="p2">[</bpt>IContentCmdletProvider<ept id="p2">](https://technet.microsoft.com/library/system.management.automation.provider.icontentcmdletprovider.aspx)</ept> interface.</source>
          <target state="translated">이 샘플의 공급자 클래스는 <bpt id="p1">[</bpt>NavigationCmdletProvider<ept id="p1">](https://technet.microsoft.com/library/system.management.automation.provider.navigationcmdletprovider.aspx)</ept> 클래스에서 파생되며, <bpt id="p2">[</bpt>IContentCmdletProvider<ept id="p2">](https://technet.microsoft.com/library/system.management.automation.provider.icontentcmdletprovider.aspx)</ept> 인터페이스를 구현합니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>