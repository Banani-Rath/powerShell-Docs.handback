<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ko-kr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-1c394fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">b634e0f671ca85b3df6c08d0c6b91d6c06366f49</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">reference\4.0\Microsoft.PowerShell.Core\About\about_Script_Internationalization.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions" />
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">a7db6084d646838fd050a4fba22e3466e78a8823</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">3abff8d19d38d47a7ebc6ab8d1847ef423d956e1</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>about_Script_Internationalization</source>
          <target state="translated">about_Script_Internationalization</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>powershell, cmdlet</source>
          <target state="translated">powershell cmdlet</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>About Script Internationalization</source>
          <target state="translated">스크립트 국제화를 활용 하는 방법에 대 한</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>about_Script_Internationalization</source>
          <target state="translated">about_Script_Internationalization</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>TOPIC</source>
          <target state="translated">항목</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>about_Script_Internationalization</source>
          <target state="translated">about_Script_Internationalization</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>SHORT DESCRIPTION</source>
          <target state="translated">간단한 설명</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Describes the script internationalization features of Windows PowerShell 2.0 that make it easy for scripts to display messages and instructions to users in their user interface (UI) language.</source>
          <target state="translated">사용자 인터페이스 (UI) 언어에는 사용자에 게 메시지와 지침을 표시 하는 스크립트를 쉽게 수 있는 Windows PowerShell 2.0의 스크립트 국제화 기능에 설명 합니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>LONG DESCRIPTION</source>
          <target state="translated">자세한 설명</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The Windows PowerShell script internationalization features allow you to better serve users throughout the world by displaying Help and user messages for scripts and functions in the user's UI language.</source>
          <target state="translated">Windows PowerShell 스크립트 국제화 기능에는 전 세계에 걸쳐 사용자의 UI 언어에 스크립트 및 함수에 대 한 도움말 및 사용자 메시지를 표시 하 여 사용자를 더 잘 제공할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>The script internationalization features query the UI culture of the operating system during execution, import the appropriate translated text strings, and display them to the user.</source>
          <target state="translated">스크립트 국제화 기능을 실행 하는 동안 운영 체제의 UI 문화권을 쿼리 하 고 적절 한 번역 된 텍스트 문자열을 가져올 사용자에 게 표시 합니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>The Data section lets you store text strings separate from code so they are easily identified and extracted.</source>
          <target state="translated">데이터 섹션 식별 되 고 압축을 푼 쉽게 코드와에서 별도로 텍스트 문자열을 저장할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>A new cmdlet, ConvertFrom-StringData, converts text strings into dictionary-like hash tables to facilitate translation.</source>
          <target state="translated">새 cmdlet 인 Convertfrom-stringdata, 번역을 용이 하 게 하려면 사전과 비슷한 해시 테이블에 텍스트 문자열을 변환 합니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>The Windows PowerShell 2.0 features used in script internationalization are not supported by Windows PowerShell 1.0.</source>
          <target state="translated">스크립트 국제화에 사용 되는 Windows PowerShell 2.0 기능 Windows PowerShell 1.0에서 지원 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Scripts that include these features will not run in Windows PowerShell 1.0 without modification.</source>
          <target state="translated">이러한 기능을 포함 하는 수정 하지 않고 Windows PowerShell 1.0에서 실행 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>To support international Help text, Windows PowerShell 2.0 includes the following features:</source>
          <target state="translated">국제 도움말 텍스트를 지원 하려면 Windows PowerShell 2.0에는 다음과 같은 기능이 포함 됩니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>-- A Data section that separates text strings from code instructions.</source>
          <target state="translated">-는 데이터에는 코드 명령에서 텍스트 문자열을 구분 하는 섹션입니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>For more information about the Data section, see about_Data_Sections.</source>
          <target state="translated">데이터 섹션에 대 한 자세한 내용은 참조 about_data_sections를 참조 하세요.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>-- New automatic variables, $PSCulture and $PSUICulture.</source>
          <target state="translated">-새 자동 변수, $PSCulture 및 $PSUICulture 합니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>$PSCulture stores the name of the UI language used on the system for elements such as the date, time, and currency.</source>
          <target state="translated">$PSCulture 날짜, 시간 및 통화와 같은 요소에 대 한 시스템에 사용 되는 UI 언어의 이름을 저장 합니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>The $PSUICulture variable stores the name of the UI language used on the system for user interface elements such as menus and text strings.</source>
          <target state="translated">$PSUICulture 변수 메뉴, 텍스트 문자열 같은 사용자 인터페이스 요소에 대 한 시스템에 사용 되는 UI 언어의 이름을 저장 합니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>-- A cmdlet, ConvertFrom-StringData, that converts text strings into dictionary-like hash tables to facilitate translation.</source>
          <target state="translated">--Cmdlet 번역을 용이 하 게 하려면 사전과 비슷한 해시 테이블에 텍스트 문자열을 변환 하는 Convertfrom-stringdata 합니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>For more information, see ConvertFrom-StringData.</source>
          <target state="translated">자세한 내용은 Convertfrom-stringdata를 참조 하십시오.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>-- A new file type, .psd1, that stores translated text strings.</source>
          <target state="translated">--새 파일 형식을 저장 하는.psd1 텍스트 문자열을 변환 합니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>The .psd1 files are stored in language-specific subdirectories of the script directory.</source>
          <target state="translated">.Psd1 파일이 스크립트 디렉터리의 언어별 하위 디렉터리에 저장 됩니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>-- A cmdlet, Import-LocalizedData, that imports translated text strings for a specified language into a script at runtime.</source>
          <target state="translated">--Cmdlet을 가져오는 Import-localizeddata 지정된 된 언어에 대 한 텍스트 문자열 런타임 시 스크립트 변환 됩니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>This cmdlet recognizes and imports strings in any Windows-supported language.</source>
          <target state="translated">이 cmdlet는 인식 하 고 모든 Windows 지원 언어의 문자열을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>For more information see Import-LocalizedData.</source>
          <target state="translated">자세한 내용은 Import-localizeddata를 참조 하십시오.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>THE DATA SECTION: Storing Default Strings</source>
          <target state="translated">기본 문자열을 저장 하는 데이터 섹션:</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Use a Data section in the script to store the text strings in the default language.</source>
          <target state="translated">스크립트의 Data 섹션을 사용 하 여 기본 언어로 텍스트 문자열을 저장 합니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Arrange the strings in key/value pairs in a here-string.</source>
          <target state="translated">Here-string에 키/값 쌍의 문자열을 정렬 합니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Each key/value pair must be on a separate line.</source>
          <target state="translated">각 키/값 쌍은 별도 줄에 있어야 합니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>If you include comments, the comments must be on separate lines.</source>
          <target state="translated">주석을 포함 하는 경우 별도 줄에 주석을 이어야 합니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>The ConvertFrom-StringData cmdlet converts the key/value pairs in the here-string into a dictionary-like hash table that is stored in the value of the Data section variable.</source>
          <target state="translated">Convertfrom-stringdata cmdlet에는 데이터 섹션 변수의 값에 저장 되어 있는 사전과 비슷한 해시 테이블로 here-string에 있는 키/값 쌍으로 변환 합니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>In the following example, the Data section of the World.ps1 script includes the English-United States (en-US) set of prompt messages for a script.</source>
          <target state="translated">다음 예제에서는 World.ps1 스크립트의 Data 섹션의 스크립트에 대 한 프롬프트 메시지 미국식 (EN-US) 집합이 포함 됩니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>The ConvertFrom-StringData cmdlet converts the strings into a hash table and stores them in the $msgtable variable.</source>
          <target state="translated">Convertfrom-stringdata cmdlet는 문자열을 해시 테이블로 변환 $msgtable 변수에 저장 합니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>$msgTable = Data { culture="en-US" ConvertFrom-StringData @' helloWorld = Hello, World.</source>
          <target state="translated">$msgTable 데이터 = {문화권 "EN-US" Convertfrom-stringdata = @' helloWorld Hello, World =.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>errorMsg1 = You cannot leave the user name field blank.</source>
          <target state="translated">errorMsg1 = 수 없는 사용자 이름 필드를 비워 두면 됩니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>promptMsg = Please enter your user name.</source>
          <target state="translated">promptMsg 하십시오 = 사용자 이름을 입력 합니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>'@</source>
          <target state="translated">'@</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>}</source>
          <target state="translated">}</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>For more information about here-strings, see about_Quoting_Rules.</source>
          <target state="translated">Here-strings에 대 한 자세한 내용은 about_Quoting_Rules를 참조 하세요.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>PSD1 FILES: Storing Translated Strings</source>
          <target state="translated">PSD1 파일: 번역 된 문자열 저장</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Save the script messages for each UI language in separate text files with the same name as the script and the .psd1 file name extension.</source>
          <target state="translated">스크립트 및.psd1 파일 이름 확장명으로 이름이 같은 별도 텍스트 파일에 각 UI 언어에 대 한 스크립트 메시지를 저장 합니다.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Store the files in subdirectories of the script directory with names of cultures in the following format:</source>
          <target state="translated">형식은 문화권의 이름으로 스크립트 디렉터리의 하위 디렉터리에 파일을 저장 합니다.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>–</source>
          <target state="translated">–</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Examples: de-DE, ar-SA, and zh-Hans</source>
          <target state="translated">예를 들어 DE-DE, AR-SA, 및 Zh-hans</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>For example, if the World.ps1 script is stored in the C:\Scripts directory, you would create a file directory structure that resembles the following:</source>
          <target state="translated">예를 들어 World.ps1 스크립트 C:\Scripts 디렉터리에 저장 되 면 다음과 유사한 파일 디렉터리 구조를 만들 것 있습니다.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>C:\Scripts C:\Scripts\World.ps1 C:\Scripts\de-DE\World.psd1 C:\Scripts\ar-SA\World.psd1 C:\Scripts\zh-CN\World.psd1</source>
          <target state="translated">C:\Scripts C:\Scripts\World.ps1 C:\Scripts\de-DE\World.psd1 C:\Scripts\ar-SA\World.psd1 C:\Scripts\zh-CN\World.psd1</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>...</source>
          <target state="translated">...</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>The World.psd1 file in the de-DE subdirectory of the script directory might include the following statement:</source>
          <target state="translated">스크립트 디렉터리의 DE-DE 하위 디렉터리에 World.psd1 파일에 다음 문을 포함 될 수 있습니다.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>ConvertFrom-StringData @' helloWorld = Hello, World (in German).</source>
          <target state="translated">Convertfrom-stringdata @' helloWorld = Hello, World (독일어)에 있습니다.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>errorMsg1 = You cannot leave the user name field blank (in German).</source>
          <target state="translated">errorMsg1 = 수 없는 사용자 이름 필드를 비워 두면 (독일어)에 있습니다.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>promptMsg = Please enter your user name (in German).</source>
          <target state="translated">promptMsg = 하세요 (독일어)에 사용자 이름을 입력 합니다.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>'@</source>
          <target state="translated">'@</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>Similarly, the World.psd1 file in the ar-SA subdirectory of the script directory might includes the following statement:</source>
          <target state="translated">마찬가지로, World.psd1 파일 스크립트 디렉터리의 AR-SA 하위 디렉터리에 다음 문을 포함 될 수 있습니다.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>ConvertFrom-StringData @' helloWorld = Hello, World (in Arabic).</source>
          <target state="translated">Convertfrom-stringdata @' helloWorld = Hello, World (아랍어)에 있습니다.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>errorMsg1 = You cannot leave the user name field blank (in Arabic).</source>
          <target state="translated">errorMsg1 = 수 없는 사용자 이름 필드를 비워 두면 (아랍어)에 있습니다.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>promptMsg = Please enter your user name (in Arabic).</source>
          <target state="translated">promptMsg = 하세요 (아랍어)에 사용자 이름을 입력 합니다.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>'@</source>
          <target state="translated">'@</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>IMPORT-LOCALIZEDDATA: Dynamic Retrieval of Translated Strings</source>
          <target state="translated">번역 된 문자열의 IMPORT-LOCALIZEDDATA: 동적 검색</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>To retrieve the strings in the UI language of the current user, use the Import-LocalizedData cmdlet.</source>
          <target state="translated">현재 사용자의 UI 언어의 문자열을 검색 하려면 Import-localizeddata cmdlet을 사용 합니다.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>Import-LocalizedData finds the value of the $PSUICulture automatic variable and imports the content of the &lt;script-name&gt;.psd1 files in the subdirectory that matches the $PSUICulture value.</source>
          <target state="translated">Import-localizeddata 탐색 $PSUICulture 값과 일치 하는 하위 디렉터리에는 $PSUICulture 자동 변수의 값 가져오기 &lt; 스크립트 이름 &gt; p s d 1의 콘텐츠 파일을 찾습니다.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>Then, it saves the imported content in the variable specified by the value of the BindingVariable parameter.</source>
          <target state="translated">그런 다음 가져온된 콘텐츠는 BindingVariable 매개 변수 값으로 지정 된 변수에 저장 합니다.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>import-localizeddata -bindingVariable msgTable</source>
          <target state="translated">가져오기 localizeddata-bindingVariable msgTable</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>For example, if the Import-LocalizedData command appears in the C:\Scripts\World.ps1 script and the value of $PSUICulture is "ar-SA", Import-LocalizedData finds the following file:</source>
          <target state="translated">예를 들어 Import-localizeddata 명령이 C:\Scripts\World.ps1 스크립트에 표시 되는 경우 $PSUICulture의 값은 "AR-SA" Import-localizeddata 다음 파일을 찾습니다.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>C:\Scripts\ar-SA\World.psd1</source>
          <target state="translated">C:\Scripts\ar-SA\World.psd1</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>Then, it imports the Arabic text strings from the file into the $msgTable variable, replacing any default strings that might be defined in the Data section of the World.ps1 script.</source>
          <target state="translated">그런 다음 그 아랍어 텍스트 문자열을 파일에서 변수로 가져옵니다 $msgTable, World.ps1 스크립트의 Data 섹션에 정의 될 수 있는 모든 기본 문자열을 대체 합니다.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>As a result, when the script uses the $msgTable variable to display user messages, the messages are displayed in Arabic.</source>
          <target state="translated">결과적으로, $msgTable 변수를 사용 하 여 사용자 메시지를 표시 하는 스크립트, 아랍어에서는 메시지가 표시 됩니다.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>For example, the following script displays the "Please enter your user name" message in Arabic:</source>
          <target state="translated">예를 들어 다음 스크립트는 아랍어에서 "사용자 이름을 입력 하십시오." 메시지가 표시 됩니다.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>if (!($username)) { $msgTable.promptMsg }</source>
          <target state="translated">경우 (! ( $username)) {$msgTable.promptMsg}</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>If Import-LocalizedData cannot find a .psd1 file that matches the value of $PSUIculture, the value of $msgTable is not replaced, and the call to $msgTable.promptMsg displays the fallback en-US strings.</source>
          <target state="translated">Import-localizeddata.psd1 파일을 찾을 수 없는 경우 $PSUIculture의 값과 일치 하는, $msgTable의 값이 바뀌지 않으면 및 대체 (fallback) EN-US 문자열을 표시 하는 $msgTable.promptMsg에 대 한 호출 합니다.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>ExAMPLE</source>
          <target state="translated">예제</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>This example shows how the script internationalization features are used in a script to display a day of the week to users in the language that is set on the computer.</source>
          <target state="translated">이 예제에서는 스크립트에서 컴퓨터에 설정 된 언어에서는 사용자에 게는 요일을 표시 하는 스크립트 국제화 기능을 사용 하는 방법</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>The following is a complete listing of the Sample1.ps1 script file.</source>
          <target state="translated">다음은 Sample1.ps1 스크립트 파일의 전체 목록입니다.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>The script begins with a Data section named Day ($Day) that contains a ConvertFrom-StringData command.</source>
          <target state="translated">스크립트는 Convertfrom-stringdata 명령을 포함 하는 일 ($Day) 라는 데이터 섹션으로 시작 합니다.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>The expression submitted to ConvertFrom-StringData is a here-string that contains the day names in the default UI culture, en-US, in key/value pairs.</source>
          <target state="translated">Convertfrom-stringdata로 제출 된 식은 EN-US 키/값 쌍의 기본 UI 문화권의 요일 이름이 포함 된 here-string입니다.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>The ConvertFrom-StringData cmdlet converts the key/value pairs in the here-string into a hash table and then saves it in the value of the $Day variable.</source>
          <target state="translated">Convertfrom-stringdata cmdlet here-string에 있는 키/값 쌍을 해시 테이블로 변환 하 고 $Day 변수의 값에 저장 합니다.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>The Import-LocalizedData command imports the contents of the .psd1 file in the directory that matches the value of the $PSUICulture automatic variable and then saves it in the $Day variable, replacing the values of $Day that are defined in the Data section.</source>
          <target state="translated">Import-localizeddata 명령은 $PSUICulture 자동 변수의 값과 일치 하 고 다음 $Day의 데이터 섹션에 정의 된 값 대체 $Day 변수에 저장 된 디렉터리에 있는.psd1 파일의 콘텐츠를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>The remaining commands load the strings into an array and display them.</source>
          <target state="translated">나머지 명령은 문자열 배열로 로드 하 고 표시 합니다.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>$Day = DATA {</source>
          <target state="translated">$Day 데이터 {=</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>