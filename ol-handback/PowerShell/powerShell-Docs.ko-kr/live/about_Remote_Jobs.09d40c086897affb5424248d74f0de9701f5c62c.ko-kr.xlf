<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ko-kr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-1c394fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">9ca6b3e19f764e6c75021b62c50eadbc34b3db58</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">reference\4.0\Microsoft.PowerShell.Core\About\about_Remote_Jobs.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions" />
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">c10206933b643cb559acbcaaf7c58683b5e38f20</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">7563fe12734532131e734a495fb2b86d35f4b41c</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>about_Remote_Jobs</source>
          <target state="translated">about_Remote_Jobs</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>powershell, cmdlet</source>
          <target state="translated">powershell cmdlet</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>About Remote Jobs</source>
          <target state="translated">원격 작업에 대 한</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>about_Remote_Jobs</source>
          <target state="translated">about_Remote_Jobs</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>about_Remote_Jobs</source>
          <target state="translated">about_Remote_Jobs</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>SHORT DESCRIPTION</source>
          <target state="translated">간단한 설명</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Describes how to run background jobs on remote computers.</source>
          <target state="translated">원격 컴퓨터에서 백그라운드 작업을 실행 하는 방법에 설명 합니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>DETAILED DESCRIPTION</source>
          <target state="translated">자세한 설명</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>A background job is a command that runs asynchronously without interacting with the current session.</source>
          <target state="translated">백그라운드 작업은 현재 세션과 상호 작용 없이 비동기적으로 실행 되는 명령입니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The command prompt returns immediately, and you can continue to use the session while the job runs.</source>
          <target state="translated">명령 프롬프트가 즉시 반환 하 고 계속 작업이 실행 되는 동안 세션을 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>By default, background jobs run on the local computer.</source>
          <target state="translated">기본적으로 백그라운드 작업은 로컬 컴퓨터에서 실행 합니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>However, you can use several different procedures to run background jobs on remote computers.</source>
          <target state="translated">그러나 원격 컴퓨터에서 백그라운드 작업을 실행할 여러 프로시저를 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>This topic explains how to run a background job on a remote computer.</source>
          <target state="translated">이 항목에서는 원격 컴퓨터에서 백그라운드 작업을 실행 하는 방법을 설명 합니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>For information about how to run background jobs on a local computer, see about_Jobs.</source>
          <target state="translated">로컬 컴퓨터에서 백그라운드 작업을 실행 하는 방법에 대 한 내용은 about_Jobs를 참조 하십시오.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>For more information about background jobs, see about_Job_Details.</source>
          <target state="translated">백그라운드 작업에 대 한 자세한 내용은 about_Job_Details를 참조 하십시오.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>REMOTE BACKGROUND JOBS</source>
          <target state="translated">원격 백그라운드 작업</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>You can run background jobs on remote computers by using three different methods.</source>
          <target state="translated">세 가지 방법을 사용 하 여 원격 컴퓨터에서 백그라운드 작업을 실행할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>-- Start an interactive session with a remote computer, and start a job in the interactive session.</source>
          <target state="translated">-원격 컴퓨터와 대화형 세션을 시작 하 고 대화형 세션에서 작업을 시작 합니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>The procedures are the same as running a local job, although all actions are performed on the remote computer.</source>
          <target state="translated">절차는 원격 컴퓨터에서 모든 작업을 수행 하지만 로컬 작업을 실행 중으로 동일 합니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>-- Run a background job on a remote computer that returns its results to the local computer.</source>
          <target state="translated">-로컬 컴퓨터에 해당 결과 반환 하는 원격 컴퓨터에서 백그라운드 작업을 실행 합니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Use this method when you want to collect the results of background jobs and maintain them in a central location on the local computer.</source>
          <target state="translated">백그라운드 작업의 결과 수집 하 고 로컬 컴퓨터에 중앙 위치에 유지 관리 하려는 경우이 메서드를 사용 합니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>-- Run a background job on a remote computer that maintains its results on the remote computer.</source>
          <target state="translated">-원격 컴퓨터에서 해당 결과 유지 관리 하는 원격 컴퓨터에서 백그라운드 작업을 실행 합니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Use this method when the job data is more securely maintained on the originating computer.</source>
          <target state="translated">작업 데이터는 원래 컴퓨터에서 유지 관리 보다 안전 하 게 하는 경우이 메서드를 사용 합니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>START A BACKGROUND JOB IN AN INTERACTIVE SESSION</source>
          <target state="translated">대화형 세션에서 백그라운드 작업 시작</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>You can start an interactive session with a remote computer and then start a background job during the interactive session.</source>
          <target state="translated">원격 컴퓨터와 대화형 세션을 시작 하 고 대화형 세션 중 백그라운드 작업을 시작 합니다 수 있습니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>For more information about interactive sessions, see about_Remote, and see Enter-PSSession.</source>
          <target state="translated">대화형 세션에 대 한 자세한 내용은 about_Remote, 참조 및 Enter-pssession을 참조 하십시오.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>The procedure for starting a background job in an interactive session is almost identical to the procedure for starting a background job on the local computer.</source>
          <target state="translated">대화형 세션에서 백그라운드 작업을 시작 하는 절차는 로컬 컴퓨터에서 백그라운드 작업을 시작 하는 절차는 거의 동일 합니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>However, all of the operations occur on the remote computer, not the local computer.</source>
          <target state="translated">그러나 모든 작업을 발생 원격 컴퓨터에서 로컬 컴퓨터가 아니라.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>STEP 1: ENTER-PSSESSION</source>
          <target state="translated">1 단계: ENTER-PSSESSION</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Use the Enter-PSSession cmdlet to start an interactive session with a remote computer.</source>
          <target state="translated">Enter-pssession cmdlet를 사용 하 여 원격 컴퓨터와 대화형 세션을 시작 합니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>You can use the ComputerName parameter of Enter-PSSession to establish a temporary connection for the interactive session.</source>
          <target state="translated">대화형 세션에 대 한 임시 연결을 설정 하려면 Enter-pssession의 ComputerName 매개 변수를 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Or, you can use the Session parameter to run the interactive session in a  Windows PowerShell� session (PSSession).</source>
          <target state="translated">또는 Windows PowerShell 세션 (PSSession)에서 대화형 세션을 실행 하는 세션 매개 변수를 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>The following command starts an interactive session on the Server01 computer.</source>
          <target state="translated">다음 명령은 Server01 컴퓨터에서 대화형 세션을 시작 합니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>The command prompt changes to show that you are now connected to the Server01 computer.</source>
          <target state="translated">명령 프롬프트 변경 이제 Server01 컴퓨터에 연결 된 표시 됩니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>STEP 2: START-JOB</source>
          <target state="translated">2 단계: START-JOB</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>To start a background job in the session, use the Start-Job cmdlet.</source>
          <target state="translated">세션에서 백그라운드 작업을 시작 하려면 Start-job cmdlet을 사용 합니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>The following command runs a background job that gets the events in the  Windows PowerShell event log on the Server01 computer.</source>
          <target state="translated">다음 명령은 Server01 컴퓨터에서 Windows PowerShell 이벤트 로그에 이벤트를 가져오는 백그라운드 작업을 실행 합니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>The Start-Job cmdlet returns an object that represents the job.</source>
          <target state="translated">Start-job cmdlet 작업을 나타내는 개체를 반환 합니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>This command saves the job object in the $job variable.</source>
          <target state="translated">이 명령은 $job 변수에 작업 개체를 저장 합니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>While the job runs, you can use the interactive session to run other commands, including other background jobs.</source>
          <target state="translated">작업이 실행 되는 동안 다른 백그라운드 작업을 포함 하 여 다른 명령을 실행 하는 대화형 세션을 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>However, you must keep the interactive session open until the job is completed.</source>
          <target state="translated">그러나 유지 해야 대화형 세션 열기 작업이 완료 될 때까지.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>If you end the session, the job is interrupted, and the results are lost.</source>
          <target state="translated">세션을 종료 하는 경우에 작업이 중단 되 고 결과가 손실 됩니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>STEP 3: GET-JOB</source>
          <target state="translated">3 단계: GET-JOB</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>To find out if the job is complete, display the value of the $job variable, or use the Get-Job cmdlet to get the job.</source>
          <target state="translated">작업이 완료 되는 경우를 찾으려면 $job 변수의 값을 표시 하거나 Get-job cmdlet을 사용 하 여 작업을 합니다.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>The following command uses the Get-Job cmdlet to display the job.</source>
          <target state="translated">다음 명령은 Get-job cmdlet를 사용 하 여 작업을 표시 합니다.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>The Get-Job output shows that job is running on the "localhost" computer because the job was started on and is running on the same computer (in this case, Server01).</source>
          <target state="translated">Get 작업 출력 작업에서 시작 된 (이 경우 Server01)에서 동일한 컴퓨터에서 실행 되 고 때문에 "localhost" 컴퓨터에서 해당 작업이 실행 중인 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>STEP 4: RECEIVE-JOB</source>
          <target state="translated">4 단계: 수신 작업</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>To get the results of the job, use the Receive-Job cmdlet.</source>
          <target state="translated">작업의 결과 가져오려면 Receive-job cmdlet을 사용 합니다.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>You can display the results in the interactive session or save them to a file on the remote computer.</source>
          <target state="translated">대화형 세션에 결과 표시 하거나 원격 컴퓨터에서 파일에 저장할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>The following command gets the results of the job in the $job variable.</source>
          <target state="translated">다음 명령은 $job 변수에 작업의 결과를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>The command uses the redirection operator (&gt;) to save the results of the job in the PsLog.txt file on the Server01 computer.</source>
          <target state="translated">이 명령은 Server01 컴퓨터에서 PsLog.txt 파일에서 작업의 결과 저장 하려면 리디렉션 연산자 (&gt;)를 사용 합니다.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>STEP 5: EXIT-PSSESSION</source>
          <target state="translated">5 단계: EXIT-PSSESSION</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>To end the interactive session, use the Exit-PSSession cmdlet.</source>
          <target state="translated">대화형 세션을 종료 하려면 Exit-pssession cmdlet을 사용 합니다.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>The command prompt changes to show that you are back in the original session on the local computer.</source>
          <target state="translated">로컬 컴퓨터에서 원래 세션에 다시 있는지를 표시 하는 명령 프롬프트 바뀝니다.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>STEP 6: INVOKE-COMMAND: GET-CONTENT</source>
          <target state="translated">6 단계: INVOKE-COMMAND: GET-CONTENT</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>To view the contents of the PsLog.txt file on the Server01 computer at any time, start another interactive session, or run a remote command.</source>
          <target state="translated">언제 든 지 Server01 컴퓨터에서 PsLog.txt 파일의 내용을 보려고 다른 대화형 세션을 시작 하거나 원격 명령을 실행 합니다.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>This type of command is best run in a PSSession (a persistent connection) in case you want to use several commands to investigate and manage the data in the PsLog.txt file.</source>
          <target state="translated">이러한 종류의 명령은 여러 명령을 사용 하 여 조사 하 고 PsLog.txt 파일에서 데이터를 관리 하려는 경우에 가장 잘 PSSession (영구 연결)에서 실행 됩니다.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>For more information about PSSessions, see about_PSSessions.</source>
          <target state="translated">Pssession에 대 한 자세한 내용은 about_PSSessions를 참조 하십시오.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>The following commands use the New-PSSession cmdlet to create a PSSession that is connected to the Server01 computer, and they use the Invoke-Command cmdlet to run a Get-Content command in the PSSession to view the contents of the file.</source>
          <target state="translated">다음 명령은 Server01 컴퓨터에 연결 된 PSSession을 만들려면 New-pssession cmdlet을 사용 하 고 파일의 내용을 보려고 PSSession에서 Get-content 명령을 실행 하려면 Invoke-command cmdlet을 사용 합니다.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>START A REMOTE JOB THAT RETURNS THE RESULTS TO THE LOCAL COMPUTER <ph id="ph1">\(</ph>ASJOB</source>
          <target state="translated">로컬 컴퓨터에 결과 반환 하는 원격 작업 시작 <ph id="ph1">\(</ph>ASJOB</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>To start a background job on a remote computer that returns the command results to the local computer, use the AsJob parameter of a cmdlet such as the Invoke-Command cmdlet.</source>
          <target state="translated">로컬 컴퓨터에 명령 결과 반환 하는 원격 컴퓨터에서 백그라운드 작업을 시작 하려면 Invoke-command cmdlet과 같은 cmdlet의 AsJob 매개 변수를 사용 합니다.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>When you use the AsJob parameter, the job object is actually created on the local computer even though the job runs on the remote computer.</source>
          <target state="translated">AsJob 매개 변수를 사용 하면 작업 개체가 실제로 만들어지기 로컬 컴퓨터에서 작업이 원격 컴퓨터에서 실행 하는 경우에 합니다.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>When the job is completed, the results are returned to the local computer.</source>
          <target state="translated">작업이 완료 되 면 로컬 컴퓨터에는 결과가 반환 됩니다.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>You can use the cmdlets that contain the Job noun (the Job cmdlets) to manage any job created by any cmdlet.</source>
          <target state="translated">모든 cmdlet으로 만든 모든 작업을 관리 하려면 Job 명사 (Job cmdlets)가 포함 된 cmdlet을 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>Many of the cmdlets that have AsJob parameters do not use Windows PowerShell remoting, so you can use them even on computers that are not configured for remoting and that do not meet the requirements for remoting.</source>
          <target state="translated">다양 한 AsJob 매개 변수 있는 cmdlet을 사용 하지 마십시오 Windows PowerShell 원격 원격 연결을 위해 구성 되지 않은 및 원격 서비스에 대 한 요구 사항을 충족 하지 않는 컴퓨터 에서도 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>STEP 1: INVOKE-COMMAND -ASJOB</source>
          <target state="translated">1 단계: INVOKE-COMMAND-ASJOB</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>The following command uses the AsJob parameter of Invoke-Command to start a background job on the Server01 computer.</source>
          <target state="translated">다음 명령은 Invoke-command의 AsJob 매개 변수를 사용 하 여 Server01 컴퓨터에서 백그라운드 작업을 시작 합니다.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>The job runs a Get-Eventlog command that gets the events in the System log.</source>
          <target state="translated">이 작업은 시스템 로그에서 이벤트를 가져오는 Get-Eventlog 명령을 실행합니다.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>You can use the JobName parameter to assign a display name to the job.</source>
          <target state="translated">작업에 표시 이름을 지정 하려면 JobName 매개 변수를 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>The results of the command resemble the following sample output.</source>
          <target state="translated">명령의 결과 다음 예제 출력와 유사합니다.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>When the AsJob parameter is used, Invoke-Command returns the same type of job object that Start-Job returns.</source>
          <target state="translated">AsJob 매개 변수를 사용 하는 경우 Invoke-command 동일한 종류의 시작 작업을 반환 하는 작업 개체를 반환 합니다.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>You can save the job object in a variable, or you can use a Get-Job command to get the job.</source>
          <target state="translated">변수에 작업 개체를 저장할 수 또는 Get-job 명령을 사용 하 여 작업을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>Note that the value of the Location property shows that the job ran on the Server01 computer.</source>
          <target state="translated">Location 속성의 값 Server01 컴퓨터에서 실행 된 작업을 보여 주는 참고 합니다.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>STEP 2: GET-JOB</source>
          <target state="translated">2 단계: GET-JOB</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>To manage a job started by using the AsJob parameter of the Invoke-Command cmdlet, use the Job cmdlets.</source>
          <target state="translated">이 명령은 Invoke-command cmdlet의 AsJob 매개 변수를 사용 하 여 시작 하는 작업을 관리 하려면 Job cmdlet을 사용 합니다.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>Because the job object that represents the remote job is on the local computer, you do not need to run remote commands to manage the job.</source>
          <target state="translated">원격 작업을 나타내는 작업 개체는 로컬 컴퓨터에는 이기 때문에 작업을 관리할 원격 명령을 실행할 필요가 없습니다.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>To determine whether the job is complete, use a Get-Job command.</source>
          <target state="translated">작업이 완료 되는 여부를 확인 하려면 Get 작업 명령을 사용 합니다.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>The following command gets all of the jobs that were started in the current session.</source>
          <target state="translated">다음 명령은 현재 세션에서 시작 된 작업의 모든 가져옵니다.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>Because the remote job was started in the current session, a local Get-Job command gets the job.</source>
          <target state="translated">현재 세션에서 시작 된 원격 작업 때문에 로컬 Get-job 명령 작업을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>The State property of the job object shows that the command was completed successfully.</source>
          <target state="translated">작업 개체의 State 속성 명령이 성공적으로 완료 되었음을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>STEP 3: RECEIVE-JOB</source>
          <target state="translated">3 단계: 수신 작업</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>To get the results of the job, use the Receive-Job cmdlet.</source>
          <target state="translated">작업의 결과 가져오려면 Receive-job cmdlet을 사용 합니다.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>Because the job results are automatically returned to the computer where the job object resides, you can get the results with a local Receive-Job command.</source>
          <target state="translated">작업 결과 자동으로 반환 되는 컴퓨터에 작업 개체가 상주 하기 때문에 로컬 Receive-job 명령 사용 하 여 결과 가져올 수 있습니다.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>The following command uses the Receive-Job cmdlet to get the results of the job.</source>
          <target state="translated">다음 명령은 Receive-job cmdlet를 사용 하 여 작업의 결과를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>It uses the session ID to identify the job.</source>
          <target state="translated">세션 ID를 사용 하 여 작업을 식별 합니다.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>This command saves the job results in the $results variable.</source>
          <target state="translated">이 명령은 $results 변수의 작업 결과 저장합니다.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>You can also redirect the results to a file.</source>
          <target state="translated">또한 결과 파일로 리디렉션할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>START A REMOTE JOB THAT KEEPS THE RESULTS ON THE REMOTE COMPUTER</source>
          <target state="translated">원격 컴퓨터에는 결과 유지 하는 원격 작업 시작</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>To start a background job on a remote computer that keeps the command results on the remote computer, use the Invoke-Command cmdlet to run a Start-Job command on a remote computer.</source>
          <target state="translated">원격 컴퓨터의 명령 결과 보관 하는 원격 컴퓨터에서 백그라운드 작업을 시작 하려면 원격 컴퓨터에서 Start-job 명령을 실행 하려면 Invoke-command cmdlet을 사용 합니다.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>You can use this method to run background jobs on multiple computers.</source>
          <target state="translated">여러 컴퓨터에서 백그라운드 작업을 실행 하려면이 메서드를 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>When you run a Start-Job command remotely, the job object is created on the remote computer, and the job results are maintained on the remote computer.</source>
          <target state="translated">Start-job 명령을 원격으로 실행 하면 작업 개체가 원격 컴퓨터에 만들어질 하 고 작업 결과 원격 컴퓨터에서 유지 됩니다.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>From the perspective of the job, all operations are local.</source>
          <target state="translated">작업의 관점에서 모든 작업이 로컬 됩니다.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>You are just running commands remotely to manage a local job on the remote computer.</source>
          <target state="translated">방금 원격 컴퓨터에서 로컬 작업을 관리 하기 위한 원격으로 명령을 실행 하는 합니다.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>STEP 1: INVOKE-COMMAND START-JOB</source>
          <target state="translated">1 단계: INVOKE-COMMAND START-JOB</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>Use the Invoke-Command cmdlet to run a Start-Job command on a remote computer.</source>
          <target state="translated">원격 컴퓨터에서 Start-job 명령을 실행 하려면 Invoke-command cmdlet을 사용 합니다.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>This command requires a PSSession (a persistent connection).</source>
          <target state="translated">이 명령은 PSSession (영구 연결) 필요합니다.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>If you use the ComputerName parameter of Invoke-Command to establish a temporary connection, the Invoke-Command command is considered to be complete when the job object is returned.</source>
          <target state="translated">Invoke-command의 ComputerName 매개 변수를 사용 하 여 임시 연결을 설정 하는 경우 Invoke-command 명령은 작업 개체를 반환 하는 경우 완료 되기를 간주 됩니다.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>As a result, the temporary connection is closed, and the job is canceled.</source>
          <target state="translated">결과적으로, 임시 연결이 닫히면 하 고 작업이 취소 됩니다.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>The following command uses the New-PSSession cmdlet to create a PSSession that is connected to the Server01 computer.</source>
          <target state="translated">다음 명령은 Server01 컴퓨터에 연결 된 PSSession을 만들려면 New-pssession cmdlet을 사용 합니다.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>The command saves the PSSession in the $s variable</source>
          <target state="translated">이 명령은 PSSession을 $s 변수에 저장합니다.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>The next command uses the Invoke-Command cmdlet to run a Start-Job command in the PSSession.</source>
          <target state="translated">다음 명령은 Invoke-command cmdlet를 사용 하 여 PSSession에서 Start-job 명령을 실행 합니다.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>The Start-Job command and the Get-Eventlog command are enclosed in braces.</source>
          <target state="translated">Start-job 명령과 Get-eventlog 명령을 중괄호로 묶습니다.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>The results resemble the following sample output.</source>
          <target state="translated">결과 다음 예제 출력와 유사합니다.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>When you run a Start-Job command remotely, Invoke-Command returns the same type of job object that Start-Job returns.</source>
          <target state="translated">Start-job 명령을 원격으로 실행할 때 Invoke-command 동일한 종류의 시작 작업을 반환 하는 작업 개체를 반환 합니다.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>You can save the job object in a variable, or you can use a Get-Job command to get the job.</source>
          <target state="translated">변수에 작업 개체를 저장할 수 또는 Get-job 명령을 사용 하 여 작업을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>Note that the value of the Location property shows that the job ran on the local computer, known as "LocalHost", even though the job ran on the Server01 computer.</source>
          <target state="translated">Location 속성의 값을 Server01 컴퓨터에서 작업을 실행 하는 경우에 "LocalHost"로 알려진 로컬 컴퓨터에서 실행 된 작업을 보여 주는 참고 합니다.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>Because the job object is created on the Server01 computer and the job runs on the same computer, it is considered to be a local background job.</source>
          <target state="translated">Server01 컴퓨터에서 작업 개체를 만든 이므로 작업이 동일한 컴퓨터에서 실행 될 로컬 백그라운드 작업으로 간주 됩니다.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>STEP 2: INVOKE-COMMAND GET-JOB</source>
          <target state="translated">2 단계: INVOKE-COMMAND GET-JOB</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>To manage a remote background job, use the Job cmdlets.</source>
          <target state="translated">원격 백그라운드 작업을 관리 하려면 Job cmdlet을 사용 합니다.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>Because the job object is on the remote computer, you need to run remote commands to get, stop, wait for, or retrieve the job results.</source>
          <target state="translated">작업 개체가 원격 컴퓨터에는 이기 때문에 작업 결과 검색 또는를 얻고, 중지, 대기 원격 명령을 실행 해야 합니다.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>To see if the job is complete, use an Invoke-Command command to run a Get-Job command in the PSSession that is connected to the Server01 computer.</source>
          <target state="translated">작업이 완료 되는 경우를 확인 하려면 Invoke-command 명령을 사용 하 여 Server01 컴퓨터에 연결 된 PSSession에서 Get-job 명령을 실행 합니다.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>The command returns a job object.</source>
          <target state="translated">작업 개체를 반환합니다.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>The State property of the job object shows that the command was completed successfully.</source>
          <target state="translated">작업 개체의 State 속성 명령이 성공적으로 완료 되었음을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>STEP 3: INVOKE-COMMAND RECEIVE-JOB</source>
          <target state="translated">3 단계: INVOKE-COMMAND 수신 작업</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>To get the results of the job, use the Invoke-Command cmdlet to run a Receive-Job command in the PSSession that is connected to the Server01 computer.</source>
          <target state="translated">작업의 결과 얻으려면 Invoke-command cmdlet를 사용 하 여 Server01 컴퓨터에 연결 된 PSSession에서 Receive-job 명령을 실행 합니다.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>The following command uses the Receive-Job cmdlet to get the results of the job.</source>
          <target state="translated">다음 명령은 Receive-job cmdlet를 사용 하 여 작업의 결과를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>It uses the session ID to identify the job.</source>
          <target state="translated">세션 ID를 사용 하 여 작업을 식별 합니다.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>This command saves the job results in the $results variable.</source>
          <target state="translated">이 명령은 $results 변수의 작업 결과 저장합니다.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>It uses the Keep parameter of Receive-Job to keep the result in the job cache on the remote computer.</source>
          <target state="translated">원격 컴퓨터에서 작업 캐시에 결과 유지 하려면 수신 작업의 유지 매개 변수를 사용 합니다.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>You can also redirect the results to a file on the local or remote computer.</source>
          <target state="translated">로컬 또는 원격 컴퓨터에서 파일에 결과 리디렉션할 수도 있습니다.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>The following command uses a redirection operator to save the results in a file on the Server01 computer.</source>
          <target state="translated">다음 명령은 리디렉션 연산자를 사용 하 여 Server01 컴퓨터에서 파일에 결과 저장할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>SEE ALSO</source>
          <target state="translated">참고 항목</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>about_Jobs</source>
          <target state="translated">about_Jobs</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>about_Job_Details</source>
          <target state="translated">about_Job_Details</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>about_Remote</source>
          <target state="translated">about_Remote</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>about_Remote_Variables</source>
          <target state="translated">about_Remote_Variables</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>Invoke-Command</source>
          <target state="translated">Invoke-Command</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>Start-Job</source>
          <target state="translated">시작 작업</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>Get-Job</source>
          <target state="translated">Get 작업</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>Wait-Job</source>
          <target state="translated">대기 작업</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>Stop-Job</source>
          <target state="translated">중지 작업</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>Remove-Job</source>
          <target state="translated">제거 작업</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>New-PSSession</source>
          <target state="translated">New-PSSession</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>Enter-PSSession</source>
          <target state="translated">Enter-PSSession</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>Exit-PSSession</source>
          <target state="translated">Exit-PSSession</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>