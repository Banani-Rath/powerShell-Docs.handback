<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ko-kr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-1c394fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">c8449be85a590c7b49d1a1f5bf749936f5790663</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">reference\5.0\Microsoft.PowerShell.Utility\Convert-String.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions" />
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">3faa4041e218333cd0107795a2a9b9a986038334</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">4288eaa5ba450b98da08dfc8db52c14297283eb8</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>powershell, cmdlet</source>
          <target state="translated">powershell cmdlet</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Convert-String</source>
          <target state="translated">Convert-String</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Convert-String</source>
          <target state="translated">Convert-String</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>SYNOPSIS</source>
          <target state="translated">요약</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Formats a string to match examples.</source>
          <target state="translated">예제와 일치 하는 문자열의 형식을 지정 합니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>SYNTAX</source>
          <target state="translated">구문</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>DESCRIPTION</source>
          <target state="translated">설명</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>Convert-String<ept id="p1">**</ept> cmdlet formats a string to match the format of examples.</source>
          <target state="translated"> <bpt id="p1">**</bpt>Convert 문자열<ept id="p1">**</ept> cmdlet 형식을 예의 형식과 일치 하는 문자열입니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>EXAMPLES</source>
          <target state="translated">예제</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Example 1: Convert format of a string</source>
          <target state="translated">예제 1: 문자열의 형식 변환</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>The first command creates an array named <bpt id="p1">**</bpt>$Names<ept id="p1">**</ept> that contains first and last names.</source>
          <target state="translated">첫 번째 명령은 라는 배열 <bpt id="p1">**</bpt>$Names<ept id="p1">**</ept> 첫 번째 및 마지막 이름을 포함 하 합니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>The second command formats the names in <bpt id="p1">**</bpt>$Names<ept id="p1">**</ept> according to the example.</source>
          <target state="translated">두 번째 명령은 형식에 있는 이름을 <bpt id="p1">**</bpt>$Names<ept id="p1">**</ept> 예제에 따라 합니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>It puts the surname first in the output, followed by an initial.</source>
          <target state="translated">넣습니다 성을 먼저 출력에서 초기 옵니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Example 2: Format process information</source>
          <target state="translated">예제 2: 형식 프로세스 정보</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>The first command gets processes named svchost by using the Get-Process cmdlet.</source>
          <target state="translated">첫 번째 명령은 Get-process cmdlet을 사용 하 여 svchost 라는 프로세스를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>The command passes them to the Select-Object cmdlet, which selects the process name and process ID.</source>
          <target state="translated">명령을 선택 하는 프로세스 이름과 프로세스 id를 표시 하는 Select-object cmdlet으로 전달</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>The command converts the output to comma separated values without type information by using the ConvertTo-Csv cmdlet.</source>
          <target state="translated">이 명령은 Convertto-csv cmdlet을 사용 하 여 형식 정보 없이 쉼표로 구분 된 값을 출력으로 변환 합니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>The command stores the results in the <bpt id="p1">**</bpt>$Processes<ept id="p1">**</ept> variable.</source>
          <target state="translated">명령에서 결과 저장 된 <bpt id="p1">**</bpt>$Processes<ept id="p1">**</ept> 변수입니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>$Processes<ept id="p1">**</ept> now contains SVCHOST and PID.</source>
          <target state="translated"><bpt id="p1">**</bpt>$Processes<ept id="p1">**</ept> 이제 SVCHOST 및 PID를 포함 합니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>The second command specifies an example that changes the order of the items and abbreviates svchost.</source>
          <target state="translated">두 번째 명령은 항목의 순서를 변경 하 고 svchost를 줄여서 표시 하는 예제를 지정 합니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>The command coverts each string in <bpt id="p1">**</bpt>$Processes<ept id="p1">**</ept>.</source>
          <target state="translated">명령을 예로 변환 각 문자열에서 <bpt id="p1">**</bpt>$Processes<ept id="p1">**</ept>합니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>PARAMETERS</source>
          <target state="translated">매개 변수</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>-Example</source>
          <target state="translated">-예제</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Specifies a list of examples of the target format.</source>
          <target state="translated">대상 형식에 관한 예의 목록을 지정합니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Specify pairs separated by the equal (=) sign, with the source pattern on the left and the target pattern on the right, as in the following example:</source>
          <target state="translated">등호 (=) 기호 왼쪽에 소스 패턴 및 다음 예제와 같이 오른쪽에 대상 패턴으로 구분 되는 쌍을 지정 합니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Alternatively, specify a list of hash tables that contain <bpt id="p1">**</bpt>Before<ept id="p1">**</ept> and <bpt id="p2">**</bpt>After<ept id="p2">**</ept> properties.</source>
          <target state="translated">또는 포함 하는 해시 테이블의 목록을 지정할 <bpt id="p1">**</bpt>전에<ept id="p1">**</ept> 및 <bpt id="p2">**</bpt>후<ept id="p2">**</ept> 속성입니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>-InputObject</source>
          <target state="translated">-InputObject</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Specifies a string to format.</source>
          <target state="translated">형식을 지정 하는 문자열을 지정 합니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>CommonParameters</source>
          <target state="translated">CommonParameters</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutVariable, -OutBuffer, -PipelineVariable, -Verbose, -WarningAction, and -WarningVariable.</source>
          <target state="translated">이 cmdlet은 공통 매개 변수:-디버그,-ErrorAction,-ErrorVariable,-InformationAction,-InformationVariable,-OutVariable,-OutBuffer,-PipelineVariable,-Verbose,-WarningAction 및-warningvariable을 지원 합니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>For more information, see about_CommonParameters (http://go.microsoft.com/fwlink/?LinkID=113216).</source>
          <target state="translated">자세한 내용은 about_CommonParameters (http://go.microsoft.com/fwlink/?LinkID=113216)를 참조 합니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>INPUTS</source>
          <target state="translated">입력</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>String</source>
          <target state="translated">문자열</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>You can pipe strings to this cmdlet.</source>
          <target state="translated">이 cmdlet에 대 한 문자열을 파이프할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>OUTPUTS</source>
          <target state="translated">출력</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>String</source>
          <target state="translated">문자열</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>This cmdlet returns a string.</source>
          <target state="translated">이 cmdlet는 문자열을 반환합니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>NOTES</source>
          <target state="translated">참고 사항</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>RELATED LINKS</source>
          <target state="translated">관련된 링크</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>ConvertFrom-String</source>
          <target state="translated">ConvertFrom 문자열</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>ConvertTo-Csv</source>
          <target state="translated">ConvertTo-Csv</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Get-Process</source>
          <target state="translated">Get-Process</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Out-String</source>
          <target state="translated">Out-String</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Select-Object</source>
          <target state="translated">Select-Object</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>