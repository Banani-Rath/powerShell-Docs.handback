<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ko-kr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-1c394fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">208f566c5b1ab7b3ac1e7aaa71e4933b85e4808d</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">reference\5.0\Microsoft.PowerShell.Utility\Group-Object.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions" />
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ad3ce6572cde1feb8dc6a18198263aac25a59430</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">42db0386139a20e99a6ea881354d95d890d0d956</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>powershell, cmdlet</source>
          <target state="translated">powershell cmdlet</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Group-Object</source>
          <target state="translated">Group-Object</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Group-Object</source>
          <target state="translated">Group-Object</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>SYNOPSIS</source>
          <target state="translated">요약</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Groups objects that contain the same value for specified properties.</source>
          <target state="translated">지정한 속성에 대해 같은 값이 있는 개체를 그룹화합니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>SYNTAX</source>
          <target state="translated">구문</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>DESCRIPTION</source>
          <target state="translated">설명</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>Group-Object<ept id="p1">**</ept> cmdlet displays objects in groups based on the value of a specified property.</source>
          <target state="translated"> <bpt id="p1">**</bpt>Group-object<ept id="p1">**</ept> cmdlet는 지정된 된 속성의 값을 기반으로 하는 그룹의 개체를 표시 합니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Group-Object<ept id="p1">**</ept> returns a table with one row for each property value and a column that displays the number of items with that value.</source>
          <target state="translated"><bpt id="p1">**</bpt>그룹 개체<ept id="p1">**</ept> 테이블의 각 속성 값을 해당 값을 가진 항목의 수를 표시 하는 열에 대해 한 행을 반환 합니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>If you specify more than one property, <bpt id="p1">**</bpt>Group-Object<ept id="p1">**</ept> first groups them by the values of the first property, and then, within each property group, it groups by the value of the next property.</source>
          <target state="translated">둘 이상의 속성을 지정 하면 <bpt id="p1">**</bpt>그룹 개체<ept id="p1">**</ept> 먼저 첫 번째 속성의 값으로 그룹화 하 고 그런 다음 각 속성 그룹 내에서 다음 속성의 값입니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>EXAMPLES</source>
          <target state="translated">예제</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Example 1: Group files by size</source>
          <target state="translated">예제 1: 크기에 따라 파일 그룹화</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>This command gets the files in the current location that have a .doc extension and groups them by size.</source>
          <target state="translated">이 명령은 현재 위치에서 확장명이 .doc인 파일을 가져와 크기별로 그룹화합니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Example 2: Group files by extension</source>
          <target state="translated">확장 프로그램에서 파일을 그룹화 하는 예 2:</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>This command gets the files in the current location, sorts them by file name extension, and then groups them by file name extension.</source>
          <target state="translated">이 명령은 현재 위치에서 파일을 가져와 파일 이름 확장명별로 정렬한 다음 파일 이름 확장명별로 그룹화합니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Note that the files are sorted before they are grouped.</source>
          <target state="translated">파일은 먼저 정렬된 후에 그룹화됩니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Example 3: Group integers by remainder</source>
          <target state="translated">나머지 그룹 형식 정수 예제 3:</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>This example shows how to use script blocks as the value of the <bpt id="p1">*</bpt>Property<ept id="p1">*</ept> parameter.</source>
          <target state="translated">값으로 스크립트 블록을 사용 하는 방법을 보여 주는이 예제는 <bpt id="p1">*</bpt>속성<ept id="p1">*</ept> 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>This command displays the integers from 1 to 35, grouped by the remainder left when they are divided by 2 or 3.</source>
          <target state="translated">이 명령은 2 또는 3으로 나누는 경우의 나머지에 따라 그룹화한 1부터 35까지의 정수를 표시합니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Example 4: Group event log events by ID</source>
          <target state="translated">예 4: 이벤트 로그 이벤트 ID 별로 그룹화</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>These commands display the 1,000 most recent entries in the System event log, grouped by Event ID.</source>
          <target state="translated">이 명령은 시스템 이벤트 로그에서 이벤트 ID별로 그룹화한 최근 1,000개의 항목을 표시합니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>The first command uses the Get-EventLog cmdlet to retrieve the events and the assignment operator (=) to save them in the $Events variable.</source>
          <target state="translated">첫 번째 명령은 Get-eventlog cmdlet를 사용 하 여 이벤트 및 $Events 변수에 저장 하는 할당 연산자 (=)를 검색 합니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>The second command uses a pipeline operator (|) to send the events in the $Events variable to the <bpt id="p1">**</bpt>Group-Object<ept id="p1">**</ept> cmdlet.</source>
          <target state="translated">두 번째 명령은를 사용 하 여 파이프라인 연산자 (|)는 이벤트 $Events 변수를 전송 하는 <bpt id="p1">**</bpt>Group-object<ept id="p1">**</ept> cmdlet입니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>The command uses the <bpt id="p1">*</bpt>Property<ept id="p1">*</ept> parameter to specify that the events should be grouped according to the value of their EventID property.</source>
          <target state="translated">이 명령은 <bpt id="p1">*</bpt>속성<ept id="p1">*</ept> 매개 변수를 해당 EventID 속성 값에 따라 이벤트 모으는 것임을 지정 합니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>In the output, the Count column represents the number of entries in each group, the Name column represents the EventID values that define a group, and the Group column represents the objects in each group.</source>
          <target state="translated">출력에서 Count 열은 각 그룹의 항목 수를 나타내고, Name 열은 각각 그룹을 정의하는 EventID 값을 나타내며, Group 열은 각 그룹의 개체를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Example 5: Group processes by priority class</source>
          <target state="translated">예제 5: 우선 순위 클래스 프로세스 그룹화</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>This example demonstrates the effect of the <bpt id="p1">*</bpt>NoElement<ept id="p1">*</ept> parameter.</source>
          <target state="translated">효과 보여 주는이 예제는 <bpt id="p1">*</bpt>NoElement<ept id="p1">*</ept> 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>These commands group the processes on the computer by priority class.</source>
          <target state="translated">이 명령은 우선 순위 클래스를 기준으로 컴퓨터의 프로세스를 그룹화합니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>The first command uses the Get-Process cmdlet to get the processes on the computer.</source>
          <target state="translated">첫 번째 명령은 Get-Process cmdlet을 사용하여 컴퓨터의 프로세스를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>It uses a pipeline operator (|) to send the results to <bpt id="p1">**</bpt>Group-Object<ept id="p1">**</ept>, which groups the objects by the value of the PriorityClass property of the process.</source>
          <target state="translated">결과를 보낼 파이프라인 연산자 (|)를 사용 하 여를 <bpt id="p1">**</bpt>그룹 개체<ept id="p1">**</ept>, 프로세스의 PriorityClass 속성의 값을 기준으로 개체가 그룹화입니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>The second command is identical to the first, except that it uses the <bpt id="p1">*</bpt>NoElement<ept id="p1">*</ept> parameter to eliminate the members of the group from the output.</source>
          <target state="translated">사용 하 여 두 번째 명령은 첫 번째 동일는 <bpt id="p1">*</bpt>NoElement<ept id="p1">*</ept> 매개 변수를 출력에서 그룹 멤버를 제거 합니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>The result is a table with only the count and property value name.</source>
          <target state="translated">그러면 개수와 속성 값 이름만 포함된 테이블이 생성됩니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>The results are shown in the following sample output.</source>
          <target state="translated">결과는 다음과 같은 샘플 출력에 표시됩니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Example 6: Group events by time</source>
          <target state="translated">예제 6: 시간별 이벤트 그룹화</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>This command demonstrates how to provide the value of the <bpt id="p1">*</bpt>Property<ept id="p1">*</ept> parameter as a script block.</source>
          <target state="translated">이 명령은 값을 제공 하는 방법을 보여 줍니다는 <bpt id="p1">*</bpt>속성<ept id="p1">*</ept> 스크립트 블록으로 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>This command displays the most recent 1,000 entries from the System event log, grouped according to the time between when they were generated and when they were written to the log.</source>
          <target state="translated">이 명령은 생성 된 시간과 로그에 기록 된 시간의 차이 따라 그룹화 하는 시스템 이벤트 로그에서 최근 1, 000 항목을 표시 합니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>The command uses the Get-EventLog cmdlet to get the event log entries.</source>
          <target state="translated">Get-EventLog cmdlet을 사용하여 이벤트 로그 항목을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>It uses a pipeline operator (|) to send the entries to the <bpt id="p1">**</bpt>Group-Object<ept id="p1">**</ept> cmdlet.</source>
          <target state="translated">항목을 보내도록 파이프라인 연산자 (|)를 사용 하 여 하는 <bpt id="p1">**</bpt>Group-object<ept id="p1">**</ept> cmdlet.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>The value of the <bpt id="p1">*</bpt>Property<ept id="p1">*</ept> parameter is specified as a script block (an expression in braces).</source>
          <target state="translated">값은 <bpt id="p1">*</bpt>속성<ept id="p1">*</ept> 스크립트 블록 (괄호로 묶인 식)으로 매개 변수를 지정 합니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>The result of evaluating the script block is the time between when the log entry was generated and when it was written to the log.</source>
          <target state="translated">스크립트 블록의 평가 결과는 로그 항목이 생성된 시간과 로그에 기록된 시간의 차이입니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>That value is used to group the 1,000 most recent events.</source>
          <target state="translated">이 값은 최근 1000개의 이벤트를 그룹화하는 데 사용됩니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Example 7: Group items by file name extension</source>
          <target state="translated">파일 이름 확장명으로 항목을 그룹화 하는 예 7:</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>This command groups the items in the current directory by file name extension.</source>
          <target state="translated">이 명령은 파일 이름 확장명을 기준으로 현재 디렉터리의 항목을 그룹화하며</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>It uses the <bpt id="p1">*</bpt>NoElement<ept id="p1">*</ept> parameter to omit the members of the group.</source>
          <target state="translated">사용 하 여는 <bpt id="p1">*</bpt>NoElement<ept id="p1">*</ept> 매개 변수는 그룹의 멤버를 생략 합니다.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>The results are shown in the following sample output.</source>
          <target state="translated">결과는 다음과 같은 샘플 출력에 표시됩니다.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Example 8: Group objects by value</source>
          <target state="translated">값으로 개체를 그룹화 하는 예 8:</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>This example shows how to find the unique and non-unique (repeated) property values in a collection.</source>
          <target state="translated">이 예제에서는 컬렉션에서 고유한 속성 값과 고유하지 않은(반복되는) 속성 값을 찾는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>The first command gets the unique elements of an array by piping the array to the Get-Unique cmdlet.</source>
          <target state="translated">첫 번째 명령은 배열을 Get-Unique cmdlet으로 파이프하여 배열의 고유한 요소를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>The second command gets the non-unique elements of an array.</source>
          <target state="translated">두 번째 명령은 배열의 고유하지 않은 요소를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>It pipes the array to the <bpt id="p1">**</bpt>Group-Object<ept id="p1">**</ept> cmdlet, which groups the objects by value.</source>
          <target state="translated">에 배열을 파이프는 <bpt id="p1">**</bpt>Group-object<ept id="p1">**</ept> cmdlet 값으로 개체를 그룹화 합니다.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>The resulting groups are piped to the Where-Object cmdlet, which selects objects with groups with more than one member.</source>
          <target state="translated">그 결과로 생성되는 그룹은 Where-Object cmdlet으로 파이프되며, 이 cmdlet은 여러 멤버가 있는 그룹이 포함된 개체를 선택합니다.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>The third command shows a practical use for this technique.</source>
          <target state="translated">세 번째 명령은 이 기술을 실제로 사용하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>It uses the same method to find processes on the computer that have the same process name.</source>
          <target state="translated">이 명령은 동일한 방법으로 컴퓨터에서 프로세스 이름이 같은 프로세스를 찾습니다.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>The results are shown in the following sample output.</source>
          <target state="translated">결과는 다음과 같은 샘플 출력에 표시됩니다.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Example 9: Group objects in a hash table</source>
          <target state="translated">예 9: 해시 테이블에서 개체를 그룹화 합니다.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>This example uses the <bpt id="p1">*</bpt>AsHashTable<ept id="p1">*</ept> and <bpt id="p2">*</bpt>AsString<ept id="p2">*</ept> parameters to return the groups in a hash table, that is, as a collection of key-value pairs.</source>
          <target state="translated">사용 하 여이 예제는 <bpt id="p1">*</bpt>AsHashTable<ept id="p1">*</ept> 및 <bpt id="p2">*</bpt>AsString<ept id="p2">*</ept> 매개 변수를 키-값 쌍의 컬렉션으로 해시 테이블에 있는 그룹을 반환 합니다.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>In the resulting hash table, each property value is a key, and the group elements are the values.</source>
          <target state="translated">그 결과로 생성되는 해시 테이블에서 각 속성 값은 키이고 그룹 요소는 값입니다.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Because each key is a property of the hash table object, you can use dot notation to display the values.</source>
          <target state="translated">각 키는 해시 테이블 개체의 속성이므로 점 표기법으로 값을 표시할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>The first command gets the Get and Set cmdlets in the session, groups them by verb, returns the groups as a hash table, and saves the hash table in the $A variable.</source>
          <target state="translated">첫 번째 명령은 세션의 Get 및 Set cmdlet을 가져옵니다, 그리고 동사 별로 그룹화, 그룹을 해시 테이블로 반환 및 $A 변수에 해시 테이블을 저장 합니다.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>The second command displays the hash table in $A.</source>
          <target state="translated">두 번째 명령은 $A. 해시 테이블을 표시</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>There are two key-value pairs, one for the Get cmdlets and one for the Set cmdlets.</source>
          <target state="translated">Get cmdlet 및 Set cmdlet에 대 한 키-값 쌍을 두 개 있습니다.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>The third command uses dot notation to display the values of the Get key in $A.</source>
          <target state="translated">세 번째 명령은 점 표기법을 사용 하 여 $A. Get 키의 값을 표시 하려면</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>The values are CmdletInfo object.</source>
          <target state="translated">값은 CmdletInfo 개체입니다.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">*</bpt>AsString<ept id="p1">*</ept> parameter does not convert the objects in the groups to strings.</source>
          <target state="translated"> <bpt id="p1">*</bpt>AsString<ept id="p1">*</ept> 매개 변수는 그룹의 개체를 문자열로 변환 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>PARAMETERS</source>
          <target state="translated">매개 변수</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>-AsHashTable</source>
          <target state="translated">-AsHashTable</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>Indicates that this cmdlet returns the group as a hash table.</source>
          <target state="translated">이 cmdlet의 그룹을 해시 테이블로 반환 하는지 나타냅니다.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>The keys of the hash table are the property values by which the objects are grouped.</source>
          <target state="translated">해시 테이블의 키는 개체를 그룹화하는 기준인 속성 값입니다.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>The values of the hash table are the objects that have that property value.</source>
          <target state="translated">해시 테이블의 값은 속성 값을 포함하는 개체입니다.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>By itself, the <bpt id="p1">*</bpt>AsHashTable<ept id="p1">*</ept> parameter returns each hash table in which each key is an instance of the grouped object.</source>
          <target state="translated">자체적으로 <bpt id="p1">*</bpt>AsHashTable<ept id="p1">*</ept> 매개 변수는 각 키의 그룹화 된 개체의 인스턴스인 각 해시 테이블을 반환 합니다.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>When used with the <bpt id="p1">*</bpt>AsString<ept id="p1">*</ept> parameter, the keys in the hash table are strings.</source>
          <target state="translated">와 함께 사용할 경우는 <bpt id="p1">*</bpt>AsString<ept id="p1">*</ept> 해시 테이블의 키는 매개 변수는 문자열입니다.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>-AsString</source>
          <target state="translated">-AsString</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>Indicates that this cmdlet converts the hash table keys to strings.</source>
          <target state="translated">이 cmdlet은 해시 테이블 키를 문자열로 변환 함을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>By default, the hash table keys are instances of the grouped object.</source>
          <target state="translated">기본적으로 해시 테이블 키는 그룹화된 개체의 인스턴스입니다.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>This parameter is valid only when used with the <bpt id="p1">*</bpt>AsHashTable<ept id="p1">*</ept> parameter.</source>
          <target state="translated">이 매개 변수는 함께 사용 하는 경우에 유효는 <bpt id="p1">*</bpt>AsHashTable<ept id="p1">*</ept> 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>-CaseSensitive</source>
          <target state="translated">-CaseSensitive</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>Indicates that this cmdlet makes the grouping case-sensitive.</source>
          <target state="translated">이 cmdlet를 사용 하면 그룹화 대/소문자 구분을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>Without this parameter, the property values of objects in a group might have different cases.</source>
          <target state="translated">이 매개 변수를 사용하지 않으면 그룹에 포함된 개체 속성 값의 대/소문자가 달라질 수 있습니다.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>-Culture</source>
          <target state="translated">Culture</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>Specifies the culture to use when comparing strings.</source>
          <target state="translated">문자열을 비교할 때 사용할 문화권을 지정합니다.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>-InputObject</source>
          <target state="translated">-InputObject</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>Specifies the objects to group.</source>
          <target state="translated">그룹화할 개체를 지정합니다.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>Enter a variable that contains the objects, or type a command or expression that gets the objects.</source>
          <target state="translated">개체를 포함하는 변수를 입력하거나 개체를 가져오는 명령 또는 식을 입력하세요.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>When you use the <bpt id="p1">*</bpt>InputObject<ept id="p1">*</ept> parameter to submit a collection of objects to <bpt id="p2">**</bpt>Group-Object<ept id="p2">**</ept>, <bpt id="p3">**</bpt>Group-Object<ept id="p3">**</ept> receives one object that represents the collection.</source>
          <target state="translated">사용 하는 경우는 <bpt id="p1">*</bpt>InputObject<ept id="p1">*</ept> 매개 변수 개체의 컬렉션을 제출 하려면 <bpt id="p2">**</bpt>그룹 개체<ept id="p2">**</ept>, <bpt id="p3">**</bpt>그룹 개체<ept id="p3">**</ept> 컬렉션을 나타내는 개체 하나를 받게 됩니다.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>As a result, it creates a single group with that object as its member.</source>
          <target state="translated">따라서 해당 개체가 포함된 단일 그룹을 멤버로 만듭니다.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>To group the objects in a collection, pipe the objects to <bpt id="p1">**</bpt>Group-Object<ept id="p1">**</ept>.</source>
          <target state="translated">컬렉션의 개체를 그룹화 하는 개체를 파이프 <bpt id="p1">**</bpt>Group-object<ept id="p1">**</ept>합니다.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>-NoElement</source>
          <target state="translated">-NoElement</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>Indicates that this cmdlet omits the members of a group from the results.</source>
          <target state="translated">이 cmdlet의 결과에서 그룹의 멤버를 생략 나타냅니다.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>-Property</source>
          <target state="translated">-속성</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>Specifies the properties for grouping.</source>
          <target state="translated">그룹화할 속성을 지정합니다.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>The objects are arranged into groups based on the value of the specified property.</source>
          <target state="translated">개체는 지정된 속성의 값을 기반으로 하여 그룹으로 정렬됩니다.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>The value of the <bpt id="p1">*</bpt>Property<ept id="p1">*</ept> parameter can be a new calculated property.</source>
          <target state="translated">값은 <bpt id="p1">*</bpt>속성<ept id="p1">*</ept> 매개 변수는 새로 계산 된 속성 일 수 있습니다.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>To create a calculated, property, create a hash table with an Expression key that specifies a string or script block value.</source>
          <target state="translated">계산된 속성을 만들려면 문자열 또는 스크립트 블록 값을 지정하는 Expression 키가 있는 해시 테이블을 만드세요.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>CommonParameters</source>
          <target state="translated">CommonParameters</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutVariable, -OutBuffer, -PipelineVariable, -Verbose, -WarningAction, and -WarningVariable.</source>
          <target state="translated">이 cmdlet은 공통 매개 변수:-디버그,-ErrorAction,-ErrorVariable,-InformationAction,-InformationVariable,-OutVariable,-OutBuffer,-PipelineVariable,-Verbose,-WarningAction 및-warningvariable을 지원 합니다.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>For more information, see about_CommonParameters (http://go.microsoft.com/fwlink/?LinkID=113216).</source>
          <target state="translated">자세한 내용은 about_CommonParameters (http://go.microsoft.com/fwlink/?LinkID=113216)를 참조 합니다.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>INPUTS</source>
          <target state="translated">입력</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>System.Management.Automation.PSObject</source>
          <target state="translated">System.Management.Automation.PSObject</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>You can pipe any object to <bpt id="p1">**</bpt>Group-Object<ept id="p1">**</ept>.</source>
          <target state="translated">모든 개체를 파이프할 수 있습니다 <bpt id="p1">**</bpt>Group-object<ept id="p1">**</ept>합니다.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>OUTPUTS</source>
          <target state="translated">출력</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>Microsoft.PowerShell.Commands.GroupInfo or System.Collections.Hashtable</source>
          <target state="translated">System.Collections.Hashtable 또는 Microsoft.PowerShell.Commands.GroupInfo</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>When you use the <bpt id="p1">*</bpt>AsHashTable<ept id="p1">*</ept> parameter, <bpt id="p2">**</bpt>Group-Object<ept id="p2">**</ept> returns a hash table.</source>
          <target state="translated">사용 하는 경우는 <bpt id="p1">*</bpt>AsHashTable<ept id="p1">*</ept> 매개 변수를 <bpt id="p2">**</bpt>Group-object<ept id="p2">**</ept> 해시 테이블을 반환 합니다.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>Otherwise, it returns a <bpt id="p1">**</bpt>GroupInfo<ept id="p1">**</ept> object.</source>
          <target state="translated">그렇지 않으면 반환 된 <bpt id="p1">**</bpt>GroupInfo<ept id="p1">**</ept> 개체입니다.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>NOTES</source>
          <target state="translated">참고 사항</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>You can also use the <bpt id="p1">*</bpt>GroupBy<ept id="p1">*</ept> parameter of the formatting cmdlets (such as Format-Table <ph id="ph1">\[</ph>m2<ph id="ph2">\]</ph> and Format-List <ph id="ph3">\[</ph>m2<ph id="ph4">\]</ph>) to group objects.</source>
          <target state="translated">사용할 수도 있습니다는 <bpt id="p1">*</bpt>GroupBy<ept id="p1">*</ept> 형식 지정 cmdlet의 매개 변수 (Format-table 같은 <ph id="ph1">\[</ph>m2<ph id="ph2">\]</ph> 및 Format-list <ph id="ph3">\[</ph>m2<ph id="ph4">\]</ph>) 개체를 그룹화 합니다.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>Unlike <bpt id="p1">**</bpt>Group-Object<ept id="p1">**</ept>, which creates a single table with a row for each property value, the <bpt id="p2">*</bpt>GroupBy<ept id="p2">*</ept> parameters create a table for each property value with a row for each item that has the property value.</source>
          <target state="translated">와 달리 <bpt id="p1">**</bpt>Group-object<ept id="p1">**</ept>, 각 속성 값에 대 한 행을 단일 테이블 만드는 <bpt id="p2">*</bpt>GroupBy<ept id="p2">*</ept> 매개 변수 속성 값이 있는 각 항목에 대 한 행이 있는 각 속성 값에 대 한 테이블을 만듭니다.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Group-Object<ept id="p1">**</ept> does not require that the objects being grouped be of the same Microsoft .NET Framework type.</source>
          <target state="translated"><bpt id="p1">**</bpt>그룹 개체<ept id="p1">**</ept> 같은 Microsoft.NET Framework 형식의 그룹화 되는 개체 수는 필요 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>When grouping objects of different .NET Framework types, <bpt id="p1">**</bpt>Group-Object<ept id="p1">**</ept> uses the following rules:</source>
          <target state="translated">다른.NET Framework 유형의 개체를 그룹화 할 때 <bpt id="p1">**</bpt>Group-object<ept id="p1">**</ept> 다음 규칙을 사용 합니다.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>Same Property Names and Types.</source>
          <target state="translated">동일한 속성 이름 및 형식입니다.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>If the objects have a property with the specified name, and the property values have the same .NET Framework type, the property values are grouped by using the same rules that would be used for objects of the same type.</source>
          <target state="translated">개체에 지정한 이름을 가진 속성이 있고 속성 값이 동일한 .NET Framework 유형인 경우 속성 값은 동일한 유형의 개체에 사용되는 것과 동일한 규칙에 따라 그룹화됩니다.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>Same Property Names, Different Types.</source>
          <target state="translated">동일한 속성 이름, 다양 한 종류입니다.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>If the objects have a property with the specified name, but the property values have a different .NET Framework type in different objects, <bpt id="p1">**</bpt>Group-Object<ept id="p1">**</ept> uses the .NET Framework type of the first occurrence of the property as the .NET Framework type for that property group.</source>
          <target state="translated">개체가 지정 된 이름 가진 속성이 있지만 속성 값은 다른 개체에 다른.NET Framework 형식을 가질 경우 <bpt id="p1">**</bpt>Group-object<ept id="p1">**</ept> 해당 속성 그룹에 대 한 속성의 첫 번째 항목의.NET Framework 형식은.NET Framework 형식으로 사용 합니다.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>When an object has a property with a different type, the property value is converted to the type for that group.</source>
          <target state="translated">개체에 유형이 다른 속성이 있으면 속성 값은 해당 그룹의 유형으로 변환됩니다.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>If the type conversion fails, the object is not included in the group.</source>
          <target state="translated">유형 변환에 실패하면 개체가 그룹에 포함되지 않습니다.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>Missing Properties.</source>
          <target state="translated">속성이 없습니다.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>Objects that do not have a specified property are considered ungroupable.</source>
          <target state="translated">지정한 속성이 없는 개체는 그룹화할 수 없는 개체로 간주됩니다.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>Ungroupable objects appear in the final <bpt id="p1">**</bpt>GroupInfo<ept id="p1">**</ept> object output in a group named AutomationNull.Value.</source>
          <target state="translated">마지막에 나타나는 그룹화 할 수 없는 개체 <bpt id="p1">**</bpt>GroupInfo<ept id="p1">**</ept> AutomationNull.Value 라는 그룹에는 출력 개체입니다.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>RELATED LINKS</source>
          <target state="translated">관련된 링크</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>Compare-Object</source>
          <target state="translated">Compare-Object</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>ForEach-Object</source>
          <target state="translated">ForEach-Object</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>Where-Object</source>
          <target state="translated">Where-Object</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>Measure-Object</source>
          <target state="translated">Measure-Object</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>New-Object</source>
          <target state="translated">새 개체</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>Select-Object</source>
          <target state="translated">Select-Object</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>Sort-Object</source>
          <target state="translated">Sort-Object</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>Tee-Object</source>
          <target state="translated">Tee-object는 개체</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>