<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ko-kr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-1c394fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">afb9ca4c3a4f2360830ae0869c38f400758a499d</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">reference\3.0\Microsoft.PowerShell.Utility\ConvertTo-Html.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions" />
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">8ff487857c8f3a689fb8452bae3bd57675286b05</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f40df53bbd133ac36778cfb3bf2d1004e8f1baf2</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>powershell, cmdlet</source>
          <target state="translated">powershell cmdlet</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>ConvertTo-Html</source>
          <target state="translated">ConvertTo-Html</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>ConvertTo-Html</source>
          <target state="translated">ConvertTo-Html</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>SYNOPSIS</source>
          <target state="translated">요약</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Converts Microsoft .NET Framework objects into HTML that can be displayed in a Web browser.</source>
          <target state="translated">Microsoft .NET Framework 개체를 웹 브라우저에 표시할 수 있는 HTML로 변환합니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>SYNTAX</source>
          <target state="translated">구문</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Page (Default)</source>
          <target state="translated">페이지 (기본값)</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Fragment</source>
          <target state="translated">조각</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>DESCRIPTION</source>
          <target state="translated">설명</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The ConvertTo-Html cmdlet converts .NET Framework objects into HTML that can be displayed in a Web browser.</source>
          <target state="translated">ConvertTo-Html cmdlet은 .NET Framework 개체를 웹 브라우저에 표시할 수 있는 HTML로 변환합니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>You can use this cmdlet to display the output of a command in a Web page.</source>
          <target state="translated">이 cmdlet을 사용하여 명령 출력을 웹 페이지에 표시할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>You can use the parameters of ConvertTo-Html to select object properties, to specify a table or list format, to specify the HTML page title, to add text before and after the object, and to return only the table or list fragment, instead of a strict DTD page.</source>
          <target state="translated">ConvertTo-Html의 매개 변수를 사용하여 개체 속성을 선택하고, 테이블 또는 목록 형식을 지정하고, HTML 페이지 제목을 지정하고, 개체 앞뒤에 텍스트를 추가하고, Strict DTD 페이지 대신 테이블 또는 목록 조각만 반환할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>When you submit multiple objects to ConvertTo-Html, Windows PowerShell creates the table (or list) based on the properties of the first object that you submit.</source>
          <target state="translated">여러 개체를 ConvertTo-Html로 제출할 경우 Windows PowerShell은 제출한 첫 번째 개체의 속성을 기준으로 테이블(또는 목록)을 만듭니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>If the remaining objects do not have one of the specified properties, the property value of that object is an empty cell.</source>
          <target state="translated">나머지 개체에 지정한 속성이 하나도 없을 경우 해당 개체의 속성 값은 빈 셀이 됩니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>If the remaining objects have additional properties, those property values are not included in the file.</source>
          <target state="translated">나머지 개체에 추가 속성이 있을 경우 이러한 속성 값은 파일에 포함되지 않습니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>EXAMPLES</source>
          <target state="translated">예제</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>-------------------------- EXAMPLE 1 --------------------------</source>
          <target state="translated">-------------------------- 예제 1 --------------------------</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>This command creates an HTML page that displays the properties of the current date.</source>
          <target state="translated">이 명령은 현재 날짜의 속성을 표시하는 HTML 페이지를 만듭니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>It uses the InputObject parameter to submit the results of a Get-Date command to the ConvertTo-Html cmdlet.</source>
          <target state="translated">InputObject 매개 변수를 사용하여 Get-Date 명령의 결과를 ConvertTo-Html cmdlet으로 제출합니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>-------------------------- EXAMPLE 2 --------------------------</source>
          <target state="translated">-------------------------- EXAMPLE 2 --------------------------</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>This command creates an HTML page that lists the Windows PowerShell aliases in the current console.</source>
          <target state="translated">이 명령은 현재 콘솔의 Windows PowerShell 별칭을 나열하는 HTML 페이지를 만듭니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>The command uses the Get-Alias cmdlet to get the aliases.</source>
          <target state="translated">Get-Alias cmdlet을 사용하여 별칭을 가져온 다음</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>It uses the pipeline operator (|) to send the aliases to the ConvertTo-Html cmdlet, which creates the HTML page.</source>
          <target state="translated">파이프라인 연산자(|)를 사용하여 별칭을 ConvertTo-Html cmdlet으로 보내면 이 cmdlet이 HTML 페이지를 만듭니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>-------------------------- EXAMPLE 3 --------------------------</source>
          <target state="translated">-------------------------- EXAMPLE 3 --------------------------</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>This command creates an HTML page called pslog.htm that displays the events in the Windows PowerShell event log on the local computer.</source>
          <target state="translated">이 명령은 로컬 컴퓨터의 Windows PowerShell 이벤트 로그에 있는 이벤트를 표시하는 pslog.htm이라는 HTML 페이지를 만듭니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>It uses the Get-EventLog cmdlet to get the events in the Windows PowerShell log and then uses the pipeline operator (|) to send the events to the ConvertTo-Html cmdlet.</source>
          <target state="translated">Get-EventLog cmdlet을 사용하여 Windows PowerShell 로그의 이벤트를 가져온 다음 파이프라인 연산자(|)를 사용하여 이벤트를 ConvertTo-Html cmdlet으로 보냅니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>The command also uses the redirection operator (<ph id="ph1">\&gt;</ph>) to send the HTML code to the pslog.htm file.</source>
          <target state="translated">또한이 명령은 리디렉션 연산자 (<ph id="ph1">\&gt;</ph>)의 HTML 코드를 pslog.htm 파일로 보내도록 합니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>-------------------------- EXAMPLE 4 --------------------------</source>
          <target state="translated">-------------------------- EXAMPLE 4 --------------------------</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>These commands create and open an HTML page that lists the name, path, and company of the processes on the local computer.</source>
          <target state="translated">이 명령은 로컬 컴퓨터에 있는 프로세스의 이름, 경로 및 회사를 나열하는 HTML 페이지를 만들어서 엽니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>The first command uses the Get-Process cmdlet to get objects that represent the processes running on the computer.</source>
          <target state="translated">첫 번째 명령은 Get-Process cmdlet을 사용하여 컴퓨터에서 실행 중인 프로세스를 나타내는 개체를 가져온 다음</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>The command uses the pipeline operator (|) to send the process objects to the ConvertTo-Html cmdlet.</source>
          <target state="translated">파이프라인 연산자(|)를 사용하여 프로세스 개체를 ConvertTo-Html cmdlet으로 보냅니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>The command uses the Property parameter to select three properties of the process objects to be included in the table.</source>
          <target state="translated">이 명령은 Property 매개 변수를 사용하여 테이블에 포함할 프로세스 개체의 세 가지 속성을 선택하고</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>The command uses the Title parameter to specify a title for the HTML page.</source>
          <target state="translated">Title 매개 변수를 사용하여 HTML 페이지의 제목을 지정합니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>The command also uses the redirection operator (<ph id="ph1">\&gt;</ph>) to send the resulting HTML to a file named Proc.htm.</source>
          <target state="translated">또한이 명령은 리디렉션 연산자 (<ph id="ph1">\&gt;</ph>) 결과 HTML을 Proc.htm 이라는 파일에 보내도록 합니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>The second command uses the Invoke-Item cmdlet (alias = ii) to open the Proc.htm in the default browser.</source>
          <target state="translated">두 번째 명령은 Invoke-Item cmdlet(별칭 = ii)을 사용하여 기본 브라우저에서 Proc.htm을 엽니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>The two commands are separated by a semicolon (;).</source>
          <target state="translated">두 명령은 세미콜론(;)으로 구분됩니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>-------------------------- EXAMPLE 5 --------------------------</source>
          <target state="translated">-------------------------- EXAMPLE 5 --------------------------</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>This command creates an HTML page of the service objects that the Get-Service cmdlet returns.</source>
          <target state="translated">이 명령은 Get-Service cmdlet이 반환하는 서비스 개체의 HTML 페이지를 만듭니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>The command uses the CssUri parameter to specify a cascading style sheet for the HTML page.</source>
          <target state="translated">CssUri 매개 변수를 사용하여 HTML 페이지의 CSS 스타일시트를 지정합니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>The CssUri parameter adds an additional "<ph id="ph1">\&lt;</ph>link rel="stylesheet" type="text/css" tag to the resulting HTML.</source>
          <target state="translated">CssUri 매개 변수 추가"<ph id="ph1">\&lt;</ph>k rel ="stylesheet"type =" 텍스트/css "태그는 결과 HTML 합니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>The HREF attribute in the tag contains the name of the style sheet.</source>
          <target state="translated">태그의 HREF 특성에는 스타일시트의 이름이 포함됩니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>-------------------------- EXAMPLE 6 --------------------------</source>
          <target state="translated">-------------------------- EXAMPLE 6 --------------------------</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>This command creates an HTML page of the service objects that the Get-Service cmdlet returns.</source>
          <target state="translated">이 명령은 Get-Service cmdlet이 반환하는 서비스 개체의 HTML 페이지를 만듭니다.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>The command uses the As parameter to specify a list format.</source>
          <target state="translated">As 매개 변수를 사용하여 목록 형식을 지정합니다.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>The redirection operator (<ph id="ph1">\&gt;</ph>) sends the resulting HTML to the Services.htm file.</source>
          <target state="translated">리디렉션 연산자 (<ph id="ph1">\&gt;</ph>)는 결과 HTML을 Services.htm 파일로 보냅니다.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>-------------------------- EXAMPLE 7 --------------------------</source>
          <target state="translated">-------------------------- EXAMPLE 7 --------------------------</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>This command uses ConvertTo-Html to generate an HTML table of the current date.</source>
          <target state="translated">이 명령은 ConvertTo-Html을 사용하여 현재 날짜의 HTML 테이블을 생성합니다.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>The command uses the Get-Date cmdlet to get the current date.</source>
          <target state="translated">Get-Date cmdlet을 사용하여 현재 날짜를 가져온 다음</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>It uses a pipeline operator (|) to send the results to the ConvertTo-Html cmdlet (aliased as "cth").</source>
          <target state="translated">파이프라인 연산자(|)를 사용하여 결과를 ConvertTo-Html cmdlet(별칭 "cth")으로 보냅니다.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>The ConvertTo-Html command includes the Fragment parameter, which limits the output to an HTML table.</source>
          <target state="translated">ConvertTo-Html 명령은 출력을 HTML 테이블로 제한하는 Fragment 매개 변수를 포함합니다.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>As a result, the other elements of an HTML page, such as the <ph id="ph1">\&lt;</ph>HEAD<ph id="ph2">\&gt;</ph> and <ph id="ph3">\&lt;</ph>BODY<ph id="ph4">\&gt;</ph> tags, are omitted.</source>
          <target state="translated">와 같은 다른 요소는 html 페이지 결과적으로 <ph id="ph1">\&lt;</ph>헤드<ph id="ph2">\&gt;</ph> 및 <ph id="ph3">\&lt;</ph>본문<ph id="ph4">\&gt;</ph> 태그 생략 됩니다.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>-------------------------- EXAMPLE 8 --------------------------</source>
          <target state="translated">-------------------------- EXAMPLE 8 --------------------------</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>This command uses the Get-EventLog cmdlet to get events from the "Windows PowerShell" event log.</source>
          <target state="translated">이 명령은 Get-EventLog cmdlet을 사용하여 "Windows PowerShell" 이벤트 로그에서 이벤트를 가져온 다음</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>It uses a pipeline operator (|) to send the events to the ConvertTo-Html cmdlet, which converts the events to HTML format.</source>
          <target state="translated">파이프라인 연산자(|)를 사용하여 이벤트를 ConvertTo-Html cmdlet으로 보냅니다. 이 cmdlet이 이벤트를 HTML 형식으로 변환합니다.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>The ConvertTo-Html command uses the Property parameter to select only the ID, Level, and Task properties of the event.</source>
          <target state="translated">ConvertTo-Html 명령은 Property 매개 변수를 사용하여 이벤트의 ID, Level 및 Task 속성만 선택합니다.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>-------------------------- EXAMPLE 9 --------------------------</source>
          <target state="translated">-------------------------- EXAMPLE 9 --------------------------</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>This command creates and opens a Web page that displays the services on the computer that begin with "A".</source>
          <target state="translated">이 명령은 "A"로 시작하는 컴퓨터의 서비스를 표시하는 웹 페이지를 만들어서 엽니다.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>It uses the Title, Body, PreContent, and PostContent parameters of ConvertTo-Html to customize the output.</source>
          <target state="translated">ConvertTo-Html의 Title, Body, PreContent 및 PostContent 매개 변수를 사용하여 출력을 사용자 지정합니다.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>The first part of the command uses the Get-Service cmdlet to get the services on the computer that begin with "A".</source>
          <target state="translated">명령의 첫 번째 부분에서 Get-Service cmdlet을 사용하여 "A"로 시작하는 컴퓨터의 서비스를 가져온 다음</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>The command uses a pipeline operator (|) to send the results to the ConvertTo-Html cmdlet.</source>
          <target state="translated">파이프라인 연산자(|)를 사용하여 결과를 ConvertTo-Html cmdlet으로 보냅니다.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>The command uses a redirection operator (<ph id="ph1">\&gt;</ph>) to send the output to the Services.htm file.</source>
          <target state="translated">또한 리디렉션 연산자를 사용 하 여 (<ph id="ph1">\&gt;</ph>) 출력을 Services.htm 파일로 보냅니다.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>A semicolon (;) ends the first command and starts a second command, which uses the Invoke-Item cmdlet (alias = "ii") to open the Services.htm file in the default browser.</source>
          <target state="translated">세미콜론(;)으로 첫 번째 명령이 끝나고 두 번째 명령이 시작됩니다. 두 번째 명령은 Invoke-Item cmdlet(별칭 = "ii")을 사용하여 기본 브라우저에서 Services.htm 파일을 엽니다.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>PARAMETERS</source>
          <target state="translated">매개 변수</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>-As</source>
          <target state="translated">으로 다른 이름</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>Determines whether the object is formatted as a table or a list.</source>
          <target state="translated">개체를 테이블 형식으로 지정할지, 아니면 목록 형식으로 지정할지 결정합니다.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>Valid values are TABLE and LIST.</source>
          <target state="translated">유효한 값은 TABLE과 LIST입니다.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>The default value is TABLE.</source>
          <target state="translated">기본값은 TABLE입니다.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>The TABLE value generates an HTML table that resembles the Windows PowerShell table format.</source>
          <target state="translated">TABLE 값은 Windows PowerShell 테이블 형식과 유사한 HTML 테이블을 생성합니다.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>The header row displays the property names.</source>
          <target state="translated">머리글 행은 속성 이름을 표시합니다.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>Each table row represents an object and displays the object's values for each property.</source>
          <target state="translated">각 테이블 행은 개체를 나타내고 개체의 각 속성 값을 표시합니다.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>The LIST value generates a two-column HTML table for each object that resembles the Windows PowerShell list format.</source>
          <target state="translated">LIST 값은 각 개체에 대해 Windows PowerShell 목록 형식과 유사한 2열 HTML 테이블을 생성합니다.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>The first column displays the property name; the second column displays the property value.</source>
          <target state="translated">첫 번째 열은 속성 이름을 표시하고 두 번째 열은 속성 값을 표시합니다.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>-Body</source>
          <target state="translated">본문</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>Specifies the text to add after the opening <ph id="ph1">\&lt;</ph>BODY<ph id="ph2">\&gt;</ph> tag.</source>
          <target state="translated">여는 뒤에 추가 하려면 텍스트를 지정 <ph id="ph1">\&lt;</ph>본문<ph id="ph2">\&gt;</ph> 태그입니다.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>By default, there is no text in that position.</source>
          <target state="translated">기본적으로 해당 위치에는 텍스트가 없습니다.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>-CssUri</source>
          <target state="translated">-CssUri</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>Specifies the Uniform Resource Identifier (URI) of the cascading style sheet (CSS) that is applied to the HTML file.</source>
          <target state="translated">HTML 파일에 적용되는 CSS 스타일시트의 URI(Uniform Resource Identifier)를 지정합니다.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>The URI is included in a style sheet link in the output.</source>
          <target state="translated">이 URI는 출력의 스타일시트 링크에 포함됩니다.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>-Fragment</source>
          <target state="translated">조각</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>Generates only an HTML table.</source>
          <target state="translated">HTML 테이블만 생성합니다.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>The HTML, HEAD, TITLE, and BODY tags are omitted.</source>
          <target state="translated">HTML, HEAD, TITLE 및 BODY 태그는 생략됩니다.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>-Head</source>
          <target state="translated">-H e a d</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>Specifies the content of the <ph id="ph1">\&lt;</ph>HEAD<ph id="ph2">\&gt;</ph> tag.</source>
          <target state="translated">내용을 지정 된 <ph id="ph1">\&lt;</ph>헤드<ph id="ph2">\&gt;</ph> 태그입니다.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>The default is "<ph id="ph1">\&lt;</ph>title<ph id="ph2">\&gt;</ph>HTML TABLE<ph id="ph3">\&lt;</ph>/title<ph id="ph4">\&gt;</ph>".</source>
          <target state="translated">기본값은 "<ph id="ph1">\&lt;</ph>제목<ph id="ph2">\&gt;</ph>HTML 표<ph id="ph3">\&lt;</ph>/t<ph id="ph4">\&gt;</ph>"입니다.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>If you use the Head parameter, the Title parameter is ignored.</source>
          <target state="translated">Head 매개 변수를 사용할 경우 Title 매개 변수가 무시됩니다.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>-InputObject</source>
          <target state="translated">-InputObject</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>Specifies the objects to be represented in HTML.</source>
          <target state="translated">HTML로 표시할 개체를 지정합니다.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>Enter a variable that contains the objects or type a command or expression that gets the objects.</source>
          <target state="translated">개체를 포함하는 변수를 입력하거나 개체를 가져오는 명령 또는 식을 입력하세요.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>If you use this parameter to submit multiple objects, such as all of the services on a computer, ConvertTo-Html creates a table that displays the properties of a collection or of an array of objects (System.Object<ph id="ph1">\[\]</ph>).</source>
          <target state="translated">이 매개 변수를 사용 하 여 모든 컴퓨터에 서비스와 같은 여러 개체를 제출할 경우 Convertto-html 개체의 배열 또는 컬렉션의 속성을 표시 하는 테이블을 만듭니다 (System.Object<ph id="ph1">\[\]</ph>).</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>To create a table of the individual objects, use the pipeline operator to pipe the objects to ConvertTo-Html.</source>
          <target state="translated">개별 개체의 테이블을 만들려면 파이프라인 연산자를 사용하여 개체를 ConvertTo-Html로 파이프합니다.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>-PostContent</source>
          <target state="translated">-PostContent</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>Specifies text to add after the closing <ph id="ph1">\&lt;</ph>/TABLE<ph id="ph2">\&gt;</ph> tag.</source>
          <target state="translated">닫은 후 추가할 텍스트를 지정 <ph id="ph1">\&lt;</ph>/테이블<ph id="ph2">\&gt;</ph> 태그입니다.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>By default, there is no text in that position.</source>
          <target state="translated">기본적으로 해당 위치에는 텍스트가 없습니다.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>-PreContent</source>
          <target state="translated">-PreContent</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>Specifies text to add before the opening <ph id="ph1">\&lt;</ph>TABLE<ph id="ph2">\&gt;</ph> tag.</source>
          <target state="translated">여는 하기 전에 추가 하는 텍스트를 지정 <ph id="ph1">\&lt;</ph>테이블<ph id="ph2">\&gt;</ph> 태그입니다.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>By default, there is no text in that position.</source>
          <target state="translated">기본적으로 해당 위치에는 텍스트가 없습니다.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>-Property</source>
          <target state="translated">-속성</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>Includes the specified properties of the objects in the HTML.</source>
          <target state="translated">지정한 개체 속성을 HTML에 포함합니다.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>The value of the Property parameter can be a new calculated property.</source>
          <target state="translated">Property 매개 변수 값은 새로 계산된 속성일 수 있습니다.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>To create a calculated property, use a hash table.</source>
          <target state="translated">계산된 속성을 만들려면 해시 테이블을 사용하세요.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>Valid keys are:</source>
          <target state="translated">유효한 키는 다음과 같습니다.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>Label <ph id="ph1">\&lt;</ph>string<ph id="ph2">\&gt;</ph> (unlike with Select-Object or Format-Table, the Name key is not supported)</source>
          <target state="translated">레이블 <ph id="ph1">\&lt;</ph>문자열<ph id="ph2">\&gt;</ph> (달리 Select-object 또는 표 서식 이름 키 지원 되지 않음)</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>Expression <ph id="ph1">\&lt;</ph>string<ph id="ph2">\&gt;</ph> or <ph id="ph3">\&lt;</ph>script block</source>
          <target state="translated">식 <ph id="ph1">\&lt;</ph>문자열<ph id="ph2">\&gt;</ph> 또는 <ph id="ph3">\&lt;</ph>스크립트 블록</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>-Title</source>
          <target state="translated">-제목</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>Specifies a title for the HTML file, that is, the text that appears between the <ph id="ph1">\&lt;</ph>TITLE<ph id="ph2">\&gt;</ph> tags.</source>
          <target state="translated">즉, 텍스트 사이 나타나는 HTML 파일에 대 한 제목 텍스트는 <ph id="ph1">\&lt;</ph>제목<ph id="ph2">\&gt;</ph> 태그입니다.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>CommonParameters</source>
          <target state="translated">CommonParameters</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutVariable, -OutBuffer, -PipelineVariable, -Verbose, -WarningAction, and -WarningVariable.</source>
          <target state="translated">이 cmdlet은 공통 매개 변수:-디버그,-ErrorAction,-ErrorVariable,-InformationAction,-InformationVariable,-OutVariable,-OutBuffer,-PipelineVariable,-Verbose,-WarningAction 및-warningvariable을 지원 합니다.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>For more information, see about_CommonParameters (http://go.microsoft.com/fwlink/?LinkID=113216).</source>
          <target state="translated">자세한 내용은 about_CommonParameters (http://go.microsoft.com/fwlink/?LinkID=113216)를 참조 합니다.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>INPUTS</source>
          <target state="translated">입력</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>System.Management.Automation.PSObject</source>
          <target state="translated">System.Management.Automation.PSObject</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>You can pipe any .NET object to ConvertTo-Html.</source>
          <target state="translated">모든 .NET 개체를 ConvertTo-Html로 파이프할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>OUTPUTS</source>
          <target state="translated">출력</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>System.String</source>
          <target state="translated">System.String</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>ConvertTo-Html returns series of strings that comprise valid HTML.</source>
          <target state="translated">ConvertTo-Html은 유효한 HTML을 구성하는 연속 문자열을 반환합니다.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>NOTES</source>
          <target state="translated">참고 사항</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>To use this cmdlet, pipe one or more objects to the cmdlet or use the InputObject parameter to specify the object.</source>
          <target state="translated">이 cmdlet을 사용하려면 하나 이상의 개체를 cmdlet으로 파이프하거나 InputObject 매개 변수를 사용하여 개체를 지정합니다.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>When the input consists of multiple objects, the output of these two methods is quite different.</source>
          <target state="translated">입력이 여러 개체로 구성된 경우에는 이 두 방법의 출력이 전혀 다릅니다.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>When you pipe multiple objects to a cmdlet, Windows PowerShell sends the objects to the cmdlet one at a time.</source>
          <target state="translated">여러 개체를 cmdlet으로 파이프 하면 Windows PowerShell 개체 한 번에 하나씩 cmdlet 보냅니다.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>As a result, ConvertTo-Html creates a table that displays the individual objects.</source>
          <target state="translated">따라서 ConvertTo-Html은 개별 개체를 표시하는 테이블을 만듭니다.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>For example, if you pipe the processes on a computer to ConvertTo-Html, the resulting table displays all of the processes.</source>
          <target state="translated">예를 들어 컴퓨터의 프로세스를 ConvertTo-Html로 파이프할 경우 결과 테이블에 모든 프로세스가 표시됩니다.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>When you use the InputObject parameter to submit multiple objects, ConvertTo-Html receives these objects as a collection or as an array.</source>
          <target state="translated">InputObject 매개 변수를 사용 하 여 여러 개체를 제출할 경우 Convertto-html 배열 또는 컬렉션으로 이러한 개체를 수신 합니다.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>As a result, it creates a table that displays the array and its properties, not the items in the array.</source>
          <target state="translated">따라서 배열의 항목이 아니라 배열과 해당 속성을 표시하는 테이블을 만듭니다.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>For example, if you use InputObject to submit the processes on a computer to ConvertTo-Html, the resulting table displays an object array (System.Object<ph id="ph1">\[\]</ph>) and its properties.</source>
          <target state="translated">예를 들어 InputObject를 사용 하는 프로세스를 Convertto-html로 컴퓨터에 제출 하는 경우 결과 테이블에는 표시 개체 배열 (System.Object<ph id="ph1">\[\]</ph>) 및 해당 속성입니다.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>To comply with the XHTML Strict DTD,the DOCTYPE tag is modified accordingly:</source>
          <target state="translated">XHTML Strict DTD를 준수하기 위해 DOCTYPE 태그가 적절하게 수정됩니다.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>(<ph id="ph1">\&lt;</ph>!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"       "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd"<ph id="ph2">\&gt;</ph>)</source>
          <target state="translated">(<ph id="ph1">\&lt;</ph>! DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict / / EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd"<ph id="ph2">\&gt;</ph>)</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>RELATED LINKS</source>
          <target state="translated">관련된 링크</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>ConvertTo-Csv</source>
          <target state="translated">ConvertTo-Csv</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>ConvertTo-Xml</source>
          <target state="translated">ConvertTo-Xml</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>