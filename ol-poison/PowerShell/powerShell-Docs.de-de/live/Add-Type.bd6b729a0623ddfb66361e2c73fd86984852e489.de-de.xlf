<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="de-de">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-1c394fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">2de72cb574efeb03059df78fcd8925ced2ca69f5</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">reference\4.0\Microsoft.PowerShell.Utility\Add-Type.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions" />
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">dce17d2a233d329641458c4d6fd0f58ebebb25db</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">19a9847c5552b076d1bbec6a9620b9f687c78dc1</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>powershell, cmdlet</source>
          <target state="translated">PowerShell-Cmdlets</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Add-Type</source>
          <target state="translated">Typ hinzufügen</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Add-Type</source>
          <target state="translated">Typ hinzufügen</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>SYNOPSIS</source>
          <target state="translated">ZUSAMMENFASSUNG</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Adds a Microsoft .NET Framework type (a class) to a Windows PowerShell session.</source>
          <target state="translated">Fügt einer Windows PowerShell-Sitzung einen Microsoft .NET Framework-Typ (eine Klasse) hinzu.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>SYNTAX</source>
          <target state="translated">SYNTAX</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>FromSource (Default)</source>
          <target state="translated">FromSource (Standard)</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>FromMember</source>
          <target state="translated">FromMember</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>FromPath</source>
          <target state="translated">FromPath</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>FromLiteralPath</source>
          <target state="translated">FromLiteralPath</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>FromAssemblyName</source>
          <target state="translated">FromAssemblyName</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>DESCRIPTION</source>
          <target state="translated">BESCHREIBUNG</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>Add-Type<ept id="p1">**</ept> cmdlet lets you define a .NET Framework class in your Windows PowerShell session.</source>
          <target state="translated">Die <bpt id="p1">**</bpt>Add-Type<ept id="p1">**</ept> -Cmdlet können Sie die .NET Framework-Klasse in Windows PowerShell-Sitzung zu definieren.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>You can then instantiate objects (by using the New-Object cmdlet) and use the objects, just as you would use any .NET Framework object.</source>
          <target state="translated">Sie können dann Instanziieren von Objekten (mithilfe von mit dem Cmdlet "New-Object") und die Objekte, wie Sie .NET Framework-Objekt.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>If you add an <bpt id="p1">**</bpt>Add-Type<ept id="p1">**</ept> command to your Windows PowerShell profile, the class is available in all Windows PowerShell sessions.</source>
          <target state="translated">Wenn Sie beim Hinzufügen einer <bpt id="p1">**</bpt>Add-Type<ept id="p1">**</ept> -Befehl, um das Windows PowerShell-Profil, die Klasse ist in allen Windows PowerShell-Sitzungen verfügbar.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>You can specify the type by specifying an existing assembly or source code files, or you can specify the source code inline or saved in a variable.</source>
          <target state="translated">Sie können den Typ angeben, indem Sie eine vorhandene Assembly oder Quellcodedateien angeben, oder Sie können den Quellcode inline oder in einer Variablen gespeichert angeben.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>You can even specify only a method and <bpt id="p1">**</bpt>Add-Type<ept id="p1">**</ept> will define and generate the class.</source>
          <target state="translated">Sie können auch nur eine Methode angeben und <bpt id="p1">**</bpt>Add-Type<ept id="p1">**</ept> definieren und die Klasse zu generieren.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>You can use this feature to make Platform Invoke (P/Invoke) calls to unmanaged functions in Windows PowerShell.</source>
          <target state="translated">Mit diesem Feature können Sie Plattformaufrufe (P/Invoke) von nicht verwalteten Funktionen in Windows PowerShell ausführen.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>If you specify source code, <bpt id="p1">**</bpt>Add-Type<ept id="p1">**</ept> compiles the specified source code and generates an in-memory assembly that contains the new .NET Framework types.</source>
          <target state="translated">Wenn Sie Quellcode angeben <bpt id="p1">**</bpt>Add-Type<ept id="p1">**</ept> kompiliert den angegebenen Quellcode und generiert eine speicherinterne Assembly, die die neuen .NET Framework-Typen enthält.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>You can use the parameters of <bpt id="p1">**</bpt>Add-Type<ept id="p1">**</ept> to specify an alternate language and compiler (CSharp is the default), compiler options, assembly dependencies, the class namespace, the names of the type, and the resulting assembly.</source>
          <target state="translated">Können Sie die Parameter der <bpt id="p1">**</bpt>Add-Type<ept id="p1">**</ept> an eine andere Sprache und Compiler (CSharp ist die Standardeinstellung), Compileroptionen, Assemblyabhängigkeiten, den Namespace der Klasse, die Namen des Typs und die resultierende Assembly.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>EXAMPLES</source>
          <target state="translated">BEISPIELE</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>-------------------------- EXAMPLE 1 --------------------------</source>
          <target state="translated">-------------------------- BEISPIEL 1 --------------------------</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>These commands add the BasicTest class to the session by specifying source code that is stored in a variable.</source>
          <target state="translated">Mit diesen Befehlen wird der Sitzung durch Angabe von Quellcode, der in einer Variablen gespeichert ist, die BasicTest-Klasse hinzugefügt.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>The type has a static method called Add and a non-static method called Multiply.</source>
          <target state="translated">Der Typ verfügt über die statische Methode „Add“ und die nicht statische Methode „Multiply“.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>The first command stores the source code for the class in the $source variable.</source>
          <target state="translated">Mit dem ersten Befehl wird der Quellcode für die Klasse in der $source-Variablen gespeichert.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>The second command uses the <bpt id="p1">**</bpt>Add-Type<ept id="p1">**</ept> cmdlet to add the class to the session.</source>
          <target state="translated">Der zweite Befehl verwendet die <bpt id="p1">**</bpt>Add-Type<ept id="p1">**</ept> -Cmdlet zum Hinzufügen der Klasse für die Sitzung.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Because it is using inline source code, the command uses the <bpt id="p1">**</bpt>TypeDefinition<ept id="p1">**</ept> parameter to specify the code in the $source variable.</source>
          <target state="translated">Da inlinequellcode verwendet wird, wird der Befehl verwendet den <bpt id="p1">**</bpt>TypeDefinition<ept id="p1">**</ept> Parameter, um den Code in der Variablen $source anzugeben.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>The remaining commands use the new class.</source>
          <target state="translated">Die restlichen Befehle verwenden die neue Klasse.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>The third command calls the Add static method of the BasicTest class.</source>
          <target state="translated">Der dritte Befehl ruft die statische Methode „Add“ der BasicTest-Klasse auf.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>It uses the double-colon characters (::) to specify a static member of the class.</source>
          <target state="translated">Er verwendet den zweifachen Doppelpunkt (::), um statische Member der Klasse anzugeben.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>The fourth command uses the <bpt id="p1">**</bpt>New-Object<ept id="p1">**</ept> cmdlet to instantiate an instance of the BasicTest class.</source>
          <target state="translated">Der vierte Befehl verwendet die <bpt id="p1">**</bpt>New-Object<ept id="p1">**</ept> -Cmdlet zum Instanziieren einer Instanz der BasicTest-Klasse.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>It saves the new object in the $basicTestObject variable.</source>
          <target state="translated">Das neue Objekt wird in der $basicTestObject-Variablen gespeichert.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>The fifth command uses the Multiply method of $basicTestObject.</source>
          <target state="translated">Der fünfte Befehl verwendet die Multiply-Methode von $basicTestObject.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>-------------------------- EXAMPLE 2 --------------------------</source>
          <target state="translated">-------------------------- EXAMPLE 2 --------------------------</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>These commands use the Get-Member cmdlet to examine the objects that the <bpt id="p1">**</bpt>Add-Type<ept id="p1">**</ept> and New-Object cmdlets created in the previous example.</source>
          <target state="translated">Diese Befehle verwenden das Get-Member-Cmdlet die Objekte untersucht, die die <bpt id="p1">**</bpt>Add-Type<ept id="p1">**</ept> und New-Object-Cmdlets, die im vorherigen Beispiel erstellt.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>The first command uses the <bpt id="p1">**</bpt>Get-Member<ept id="p1">**</ept> cmdlet to get the type and members of the BasicTest class that <bpt id="p2">**</bpt>Add-Type<ept id="p2">**</ept> added to the session.</source>
          <target state="translated">Der erste Befehl verwendet die <bpt id="p1">**</bpt>Get-Member<ept id="p1">**</ept> -Cmdlet zum Abrufen von Typen und Membern der BasicTest-Klasse, <bpt id="p2">**</bpt>Add-Type<ept id="p2">**</ept> der Sitzung hinzugefügt.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>Get-Member<ept id="p1">**</ept> command reveals that it is a <bpt id="p2">**</bpt>System.RuntimeType<ept id="p2">**</ept> object, which is derived from the System.Object class.</source>
          <target state="translated">Die <bpt id="p1">**</bpt>Get-Member<ept id="p1">**</ept> Befehl ergibt, dass es eine <bpt id="p2">**</bpt>System.RuntimeType<ept id="p2">**</ept> -Objekt, das von System.Object-Klasse abgeleitet ist.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>The second command uses the <bpt id="p1">**</bpt>Static<ept id="p1">**</ept> parameter of the <bpt id="p2">**</bpt>Get-Member<ept id="p2">**</ept> cmdlet to get the static properties and methods of the BasicTest class.</source>
          <target state="translated">Der zweite Befehl verwendet die <bpt id="p1">**</bpt>statische<ept id="p1">**</ept> Parameter von der <bpt id="p2">**</bpt>Get-Member<ept id="p2">**</ept> -Cmdlet zum Abrufen der statischen Eigenschaften und Methoden der BasicTest-Klasse.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>The output shows that the Add method is included.</source>
          <target state="translated">Die Ausgabe zeigt, dass die Add-Methode enthalten ist.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>The third command uses the <bpt id="p1">**</bpt>Get-Member<ept id="p1">**</ept> cmdlet to get the members of the object stored in the $BasicTestObject variable.</source>
          <target state="translated">Der dritte Befehl verwendet die <bpt id="p1">**</bpt>Get-Member<ept id="p1">**</ept> -Cmdlet zum Abrufen der Member des Objekts in der $BasicTestObject-Variablen gespeichert.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>This was the object instance that was created by using the <bpt id="p1">**</bpt>New-Object<ept id="p1">**</ept> cmdlet with the $BasicType class.</source>
          <target state="translated">Dies war die Objektinstanz, die mit erstellt wurde die <bpt id="p1">**</bpt>New-Object<ept id="p1">**</ept> Cmdlet mit der $BasicType-Klasse.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>The output reveals that the value of the $BasicTestObject variable is an instance of the BasicTest class and that it includes a member called Multiply.</source>
          <target state="translated">Die Ausgabe zeigt, dass der Wert der $BasicTestObject-Variablen eine Instanz der BasicTest-Klasse ist und sie den Member „Multiply“ enthält.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>-------------------------- EXAMPLE 3 --------------------------</source>
          <target state="translated">-------------------------- EXAMPLE 3 --------------------------</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>This command adds the classes from the Accessibility assembly to the current session.</source>
          <target state="translated">Dieser Befehl fügt die Klassen aus der Accessibility-Assembly zu der aktuellen Sitzung hinzu.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>The command uses the <bpt id="p1">**</bpt>AssemblyName<ept id="p1">**</ept> parameter to specify the name of the assembly.</source>
          <target state="translated">Der Befehl verwendet den <bpt id="p1">**</bpt>AssemblyName<ept id="p1">**</ept> Parameter gibt den Namen der Assembly an.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>The wildcard character allows you to get the correct assembly even when you are not sure of the name or its spelling.</source>
          <target state="translated">Mit dem Platzhalterzeichen können Sie die richtige Assembly auch dann abrufen, wenn Sie den Namen oder die Schreibweise nicht kennen.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>The command uses the <bpt id="p1">**</bpt>PassThru<ept id="p1">**</ept> parameter to generate objects that represent the classes that are added to the session, and it saves the objects in the $accType variable.</source>
          <target state="translated">Der Befehl verwendet den <bpt id="p1">**</bpt>PassThru<ept id="p1">**</ept> Parameter generieren-Objekten, die die Klassen, die die Sitzung hinzugefügt werden, darstellen, und die Objekte in der Variablen $accType gespeichert.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>-------------------------- EXAMPLE 4 --------------------------</source>
          <target state="translated">-------------------------- EXAMPLE 4 --------------------------</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>This example uses the <bpt id="p1">**</bpt>Add-Type<ept id="p1">**</ept> cmdlet to add the VBFromFile class that is defined in the Hello.vb file to the current session.</source>
          <target state="translated">Dieses Beispiel verwendet die <bpt id="p1">**</bpt>Add-Type<ept id="p1">**</ept> -Cmdlet zum Hinzufügen von VBFromFile-Klasse, die in der Datei "Hello.vb" mit der aktuellen Sitzung definiert ist.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>The text of the Hello.vb file is shown in the command output.</source>
          <target state="translated">Der Text der Datei „Hello.vb“ wird in der Ausgabe des Befehls angezeigt.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>The first command uses the <bpt id="p1">**</bpt>Add-Type<ept id="p1">**</ept> cmdlet to add the type defined in the Hello.vb file to the current session.</source>
          <target state="translated">Der erste Befehl verwendet die <bpt id="p1">**</bpt>Add-Type<ept id="p1">**</ept> -Cmdlet zum Hinzufügen des in der Datei "Hello.vb" für die aktuelle Sitzung definierten Typs.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>The command uses the <bpt id="p1">**</bpt>Path<ept id="p1">**</ept> parameter to specify the source file.</source>
          <target state="translated">Der Befehl verwendet den <bpt id="p1">**</bpt>Pfad<ept id="p1">**</ept> Parameter, um die Quelldatei anzugeben.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>The second command calls the SayHello function as a static method of the VBFromFile class.</source>
          <target state="translated">Der zweite Befehl ruft die SayHello-Funktion als statische Methode der VBFromFile-Klasse auf.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>-------------------------- EXAMPLE 5 --------------------------</source>
          <target state="translated">-------------------------- EXAMPLE 5 --------------------------</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>The commands in this example demonstrate how to call native Windows APIs in Windows PowerShell.</source>
          <target state="translated">Die Befehle in diesem Beispiel zeigen, wie in Windows PowerShell systemeigene Windows-APIs aufgerufen werden.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Add-Type<ept id="p1">**</ept> uses the Platform Invoke (P/Invoke) mechanism to call a function in User32.dll from Windows PowerShell.</source>
          <target state="translated"><bpt id="p1">**</bpt>Add-Type<ept id="p1">**</ept> verwendet den Mechanismus des Plattformaufrufs (P/Invoke) zum Aufrufen einer Funktion in "User32.dll" von Windows PowerShell.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>The first command stores the C# signature of the <bpt id="p1">**</bpt>ShowWindowAsync<ept id="p1">**</ept> function in the $signature variable.</source>
          <target state="translated">Der erste Befehl speichert die C#-Signatur der <bpt id="p1">**</bpt>ShowWindowAsync<ept id="p1">**</ept> Funktion in der Variablen $signature.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>(For more information, see "ShowWindowAsync Function" in the MSDN library at http://go.microsoft.com/fwlink/?LinkId=143643.) To ensure that the resulting method will be visible in a Windows PowerShell session, the "public" keyword has been added to the standard signature.</source>
          <target state="translated">(Weitere Informationen finden Sie unter „ShowWindowAsync Function“ in der MSDN Library unter http://go.microsoft.com/fwlink/?LinkId=143643.) Um sicherzustellen, dass die resultierende Methode in einer Windows PowerShell-Sitzung angezeigt werden kann, wurde der Standardsignatur das Schlüsselwort „public“ hinzugefügt.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>The second command uses the <bpt id="p1">**</bpt>Add-Type<ept id="p1">**</ept> cmdlet to add the ShowWindowAsync function to the Windows PowerShell session as a static method of a class that <bpt id="p2">**</bpt>Add-Type<ept id="p2">**</ept> creates.</source>
          <target state="translated">Der zweite Befehl verwendet die <bpt id="p1">**</bpt>Add-Type<ept id="p1">**</ept> Cmdlet, um die ShowWindowAsync-Funktion der Windows PowerShell-Sitzung als statische Methode einer Klasse hinzuzufügen, die <bpt id="p2">**</bpt>Add-Type<ept id="p2">**</ept> erstellt.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>The command uses the <bpt id="p1">**</bpt>MemberDefinition<ept id="p1">**</ept> parameter to specify the method definition saved in the $signature variable.</source>
          <target state="translated">Der Befehl verwendet den <bpt id="p1">**</bpt>MemberDefinition<ept id="p1">**</ept> Parameter, um die in der $signature-Variablen gespeicherte Methodendefinition anzugeben.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>The command uses the <bpt id="p1">**</bpt>Name<ept id="p1">**</ept> and <bpt id="p2">**</bpt>Namespace<ept id="p2">**</ept> parameters to specify a name and namespace for the class.</source>
          <target state="translated">Der Befehl verwendet den <bpt id="p1">**</bpt>Namen<ept id="p1">**</ept> und <bpt id="p2">**</bpt>Namespace<ept id="p2">**</ept> Parameter einen Namen und Namespace für die Klasse an.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>It uses the <bpt id="p1">**</bpt>PassThru<ept id="p1">**</ept> parameter to generate an object that represents the types, and it saves the object in the $showWindowAsync variable.</source>
          <target state="translated">Er verwendet die <bpt id="p1">**</bpt>PassThru<ept id="p1">**</ept> Parameter, um ein Objekt zu generieren, die die Typen, und es stellt das Objekt in der $showWindowAsync-Variablen gespeichert.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>The third and fourth commands use the new ShowWindowAsync static method.</source>
          <target state="translated">Im dritten und vierten Befehl wird die neue statische Methode „ShowWindowAsync“ verwendet.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>The method takes two parameters, the window handle, and an integer specifies how the window is to be shown.</source>
          <target state="translated">Die Methode akzeptiert zwei Parameter und das Fensterhandle. Eine ganze Zahl gibt an, wie das Fenster angezeigt werden soll.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>The third command calls ShowWindowAsync.</source>
          <target state="translated">Der dritte Befehl ruft ShowWindowAsync auf.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>It uses the Get-Process cmdlet with the $pid automatic variable to get the process that is hosting the current Windows PowerShell session.</source>
          <target state="translated">Es verwendet das Cmdlet "Get-Process" mit der automatischen Variablen $pid um den Prozess abzurufen, der die aktuelle Windows PowerShell-Sitzung hostet.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>Then it uses the <bpt id="p1">**</bpt>MainWindowHandle<ept id="p1">**</ept> property of the current process and a value of "2", which represents the SW_MINIMIZE value.</source>
          <target state="translated">Anschließend wird die <bpt id="p1">**</bpt>MainWindowHandle<ept id="p1">**</ept> -Eigenschaft des aktuellen Prozess und den Wert "2", der den SW_MINIMIZE-Wert darstellt.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>To restore the window, the fourth command use a value of "4" for the window position, which represents the SW_RESTORE value.</source>
          <target state="translated">Um das Fenster wiederherzustellen, wird im vierten Befehl der Wert „4“ für die Fensterposition verwendet, der den SW_RESTORE-Wert darstellt.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>(SW_MAXIMIZE is 3.)</source>
          <target state="translated">(SW_MAXIMIZE ist 3.)</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>-------------------------- EXAMPLE 6 --------------------------</source>
          <target state="translated">-------------------------- EXAMPLE 6 --------------------------</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>This command uses the <bpt id="p1">**</bpt>Add-Type<ept id="p1">**</ept> cmdlet to add a method from inline JScript code to the Windows PowerShell session.</source>
          <target state="translated">Dieser Befehl verwendet den <bpt id="p1">**</bpt>Add-Type<ept id="p1">**</ept> -Cmdlet zum Hinzufügen einer Methode aus JScript-Inlinecode zu Windows PowerShell-Sitzung.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>It uses the <bpt id="p1">**</bpt>MemberDefinition<ept id="p1">**</ept> parameter to submit source code stored in the $jsMethod variable.</source>
          <target state="translated">Er verwendet die <bpt id="p1">**</bpt>MemberDefinition<ept id="p1">**</ept> Parameter zum Übermitteln von Quellcode in der $jsMethod-Variablen gespeichert.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>It uses the <bpt id="p1">**</bpt>Name<ept id="p1">**</ept> parameter to specify a name for the class that <bpt id="p2">**</bpt>Add-Type<ept id="p2">**</ept> creates for the method and the <bpt id="p3">**</bpt>Language<ept id="p3">**</ept> parameter to specify the JScript language.</source>
          <target state="translated">Verwendet den <bpt id="p1">**</bpt>Namen<ept id="p1">**</ept> Parameter zum Angeben eines Namens für die Klasse, die <bpt id="p2">**</bpt>Add-Type<ept id="p2">**</ept> für die Methode erstellt und die <bpt id="p3">**</bpt>Sprache<ept id="p3">**</ept> Parameter für die Programmiersprache JScript angegeben.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>-------------------------- EXAMPLE 7 --------------------------</source>
          <target state="translated">-------------------------- EXAMPLE 7 --------------------------</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>This example shows how to use the <bpt id="p1">**</bpt>Add-Type<ept id="p1">**</ept> cmdlet to add an FSharp code compiler to your Windows PowerShell session.</source>
          <target state="translated">Dieses Beispiel zeigt, wie Sie die <bpt id="p1">**</bpt>Add-Type<ept id="p1">**</ept> -Cmdlet zum Hinzufügen einer FSharp-Codecompilers zur Windows PowerShell-Sitzung.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>To run this example in Windows PowerShell, you must have the FSharp.Compiler.CodeDom.dll that is installed with the FSharp language.</source>
          <target state="translated">Zum Ausführen dieses Beispiels in Windows PowerShell benötigen Sie die Datei „FSharp.Compiler.CodeDom.dll“, die mit der Programmiersprache FSharp installiert wird.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>The first command in the example uses the <bpt id="p1">**</bpt>Add-Type<ept id="p1">**</ept> cmdlet with the <bpt id="p2">**</bpt>Path<ept id="p2">**</ept> parameter to specify an assembly.</source>
          <target state="translated">Der erste Befehl im Beispiel verwendet die <bpt id="p1">**</bpt>Add-Type<ept id="p1">**</ept> Cmdlet mit dem <bpt id="p2">**</bpt>Pfad<ept id="p2">**</ept> Parameter, um eine Assembly angeben.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Add-Type<ept id="p1">**</ept> gets the types in the assembly.</source>
          <target state="translated"><bpt id="p1">**</bpt>Add-Type<ept id="p1">**</ept> Ruft die Typen in der Assembly ab.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>The second command uses the New-Object cmdlet to create an instance of the FSharp code provider and saves the result in the $Provider variable.</source>
          <target state="translated">Der zweite Befehl verwendet das New-Object-Cmdlet zum Erstellen einer Instanz des FSharp-Codeanbieters und speichert das Ergebnis in der Variablen $Provider.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>The third command saves the FSharp code that defines the Loop method in the $FSharpCode variable.</source>
          <target state="translated">Mit dem dritten Befehl wird der FSharp-Code, der die Loop-Methode definiert, in der $FSharpCode-Variablen gespeichert.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>The fourth command uses the <bpt id="p1">**</bpt>Add-Type<ept id="p1">**</ept> cmdlet to save the public types defined in $fSharpCode in the $fSharpType variable.</source>
          <target state="translated">Der vierte Befehl verwendet die <bpt id="p1">**</bpt>Add-Type<ept id="p1">**</ept> Cmdlet in in der Variablen $fSharpType $fSharpCode definierten öffentlichen Typen zu speichern.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>TypeDefinition<ept id="p1">**</ept> parameter specifies the source code that defines the types.</source>
          <target state="translated">Die <bpt id="p1">**</bpt>TypeDefinition<ept id="p1">**</ept> Parameter gibt den Quellcode, der die Typen definiert.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>CodeDomProvider<ept id="p1">**</ept> parameter specifies the source code compiler.</source>
          <target state="translated">Die <bpt id="p1">**</bpt>CodeDomProvider<ept id="p1">**</ept> Parameter gibt den quellcodecompiler an.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>PassThru<ept id="p1">**</ept> parameter directs <bpt id="p2">**</bpt>Add-Type<ept id="p2">**</ept> to return a <bpt id="p3">**</bpt>Runtime<ept id="p3">**</ept> object that represents the types and a pipeline operator (|) sends the <bpt id="p4">**</bpt>Runtime<ept id="p4">**</ept> object to the Where-Object cmdlet, which returns only the public types.</source>
          <target state="translated">Die <bpt id="p1">**</bpt>PassThru<ept id="p1">**</ept> -Parameter weist <bpt id="p2">**</bpt>Add-Type<ept id="p2">**</ept> Zurückgeben einer <bpt id="p3">**</bpt>Common Language Runtime<ept id="p3">**</ept> -Objekt, das darstellt, die Typen und einen Pipelineoperator (|) sendet die <bpt id="p4">**</bpt>Common Language Runtime<ept id="p4">**</ept> -Objekt, das Where-Object-Cmdlet, das nur die öffentlichen Typen zurückgibt.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>Where-Object<ept id="p1">**</ept> cmdlet is used because the FSharp provider generates non-public types to support the resulting public type.</source>
          <target state="translated">Die <bpt id="p1">**</bpt>Where-Object<ept id="p1">**</ept> -Cmdlet wird verwendet, da der FSharp-Anbieter nicht öffentliche Typen zur Unterstützung des resultierenden öffentlichen Typs generiert.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>The fifth command calls the Loop method as a static method of the type stored in the $fSharpType variable.</source>
          <target state="translated">Der fünfte Befehl ruft die Loop-Methode als statische Methode des in der $fSharpType-Variablen gespeicherten Typs auf.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>PARAMETERS</source>
          <target state="translated">PARAMETER</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>-AssemblyName</source>
          <target state="translated">AssemblyName-</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>Specifies the name of an assembly that includes the types.</source>
          <target state="translated">Gibt den Namen einer Assembly an, die die Typen enthält.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Add-Type<ept id="p1">**</ept> takes the types from the specified assembly.</source>
          <target state="translated"><bpt id="p1">**</bpt>Add-Type<ept id="p1">**</ept> übernimmt die Typen aus der angegebenen Assembly.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>This parameter is required when you are creating types based on an assembly name.</source>
          <target state="translated">Dieser Parameter ist erforderlich, wenn Sie Typen basierend auf dem Namen einer Assembly erstellen.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>Enter the full or simple name (also known as the "partial name") of an assembly.</source>
          <target state="translated">Geben Sie den vollständigen oder einfachen Namen (auch bezeichnet als „partieller Name“) einer Assembly ein.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>Wildcard characters are permitted in the assembly name.</source>
          <target state="translated">Der Assemblyname darf Platzhalterzeichen enthalten.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>If you enter a simple or partial name, <bpt id="p1">**</bpt>Add-Type<ept id="p1">**</ept> resolves it to the full name, and then uses the full name to load the assembly.</source>
          <target state="translated">Wenn Sie einen einfachen oder partiellen Namen eingeben <bpt id="p1">**</bpt>Add-Type<ept id="p1">**</ept> löst in den vollständigen Namen und anschließend den vollständigen Namen verwendet, um die Assembly zu laden.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>This parameter does not accept a path or file name.</source>
          <target state="translated">Dieser Parameter akzeptiert keinen Pfad oder Dateinamen.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>To enter the path to the assembly dynamic-link library (DLL) file, use the Path parameter.</source>
          <target state="translated">Um den Pfad zur DLL-Datei (Dynamic Link Library) der Assembly einzugeben, verwenden Sie den Path-Parameter.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>-CodeDomProvider</source>
          <target state="translated">CodeDomProvider-</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>Specifies a code generator or compiler.</source>
          <target state="translated">Gibt einen Code-Generator oder Compiler an.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Add-Type<ept id="p1">**</ept> uses the specified compiler to compile the source code.</source>
          <target state="translated"><bpt id="p1">**</bpt>Add-Type<ept id="p1">**</ept> verwendet den angegebenen Compiler zum Kompilieren des Quellcodes.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>The default is the CSharp compiler.</source>
          <target state="translated">Der Standardwert ist der CSharp-Compiler.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>Use this parameter if you are using a language that cannot be specified by using the Language parameter.</source>
          <target state="translated">Verwenden Sie diesen Parameter, um eine Sprache anzugeben, die mit dem Language-Parameter nicht angegeben werden kann.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>The CodeDomProvider that you specify must be able to generate assemblies from source code.</source>
          <target state="translated">Der CodeDomProvider, den Sie angeben, muss Assemblys aus Quellcode generieren können.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>-CompilerParameters</source>
          <target state="translated">-CompilerParameters</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>Specifies the options for the source code compiler.</source>
          <target state="translated">Gibt die Optionen für den Quellcodecompiler an.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>These options are sent to the compiler without revision.</source>
          <target state="translated">Diese Optionen werden ohne Revision an den Compiler gesendet.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>This parameter allows you to direct the compiler to generate an executable file, embed resources, or set command-line options, such as the "/unsafe" option.</source>
          <target state="translated">Mit diesem Parameter können Sie den Compiler anweisen, eine ausführbare Datei zu generieren, Ressourcen einbetten oder Befehlszeilenoptionen, z. B. die Option „/unsafe“, festlegen.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>This parameter implements the <bpt id="p1">**</bpt>CompilerParameters<ept id="p1">**</ept> class (System.CodeDom.Compiler.CompilerParameters).</source>
          <target state="translated">Dieser Parameter implementiert die <bpt id="p1">**</bpt>CompilerParameters<ept id="p1">**</ept> -Klasse (System.CodeDom.Compiler.CompilerParameters).</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>You cannot use the <bpt id="p1">**</bpt>CompilerParameters<ept id="p1">**</ept> and <bpt id="p2">**</bpt>ReferencedAssemblies<ept id="p2">**</ept> parameters in the same command.</source>
          <target state="translated">Sie können keine der <bpt id="p1">**</bpt>CompilerParameters<ept id="p1">**</ept> und <bpt id="p2">**</bpt>ReferencedAssemblies<ept id="p2">**</ept> Parameter im gleichen Befehl.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>-IgnoreWarnings</source>
          <target state="translated">-IgnoreWarnings</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>Ignores compiler warnings.</source>
          <target state="translated">Ignoriert Compilerwarnungen.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>Use this parameter to prevent <bpt id="p1">**</bpt>Add-Type<ept id="p1">**</ept> from handling compiler warnings as errors.</source>
          <target state="translated">Verwenden Sie diesen Parameter, um zu verhindern, dass <bpt id="p1">**</bpt>Add-Type<ept id="p1">**</ept> von Compiler-Warnungen als Fehler behandeln.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>-Language</source>
          <target state="translated">-Sprache</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>Specifies the language that is used in the source code.</source>
          <target state="translated">Gibt die Sprache an, die im Quellcode verwendet wird.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>Add-Type<ept id="p1">**</ept> cmdlet uses the value of this parameter to select the appropriate CodeDomProvider.</source>
          <target state="translated">Die <bpt id="p1">**</bpt>Add-Type<ept id="p1">**</ept> Cmdlet verwendet den Wert dieses Parameters, um den entsprechenden CodeDomProvider auszuwählen.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>Valid values are "CSharp", "CSharpVersion3", "VisualBasic", and "JScript".</source>
          <target state="translated">Gültige Werte sind „CSharp“, „CSharpVersion3“, „VisualBasic“ und „JScript“.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>"CSharp" is the default value.</source>
          <target state="translated">„CSharp“ ist der Standardwert.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>-LiteralPath</source>
          <target state="translated">-LiteralPath</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>Specifies the path to source code files or assembly DLL files that contain the types.</source>
          <target state="translated">Gibt den Pfad zu Quellcodedateien oder Assembly-DLL-Dateien an, die die Typen enthalten.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>Unlike <bpt id="p1">**</bpt>Path<ept id="p1">**</ept>, the value of the <bpt id="p2">**</bpt>LiteralPath<ept id="p2">**</ept> parameter is used exactly as it is typed.</source>
          <target state="translated">Im Gegensatz zu <bpt id="p1">**</bpt>Pfad<ept id="p1">**</ept>, den Wert der <bpt id="p2">**</bpt>LiteralPath<ept id="p2">**</ept> Parameter wird verwendet, genau, wie er eingegeben wurde.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>No characters are interpreted as wildcards.</source>
          <target state="translated">Es werden keine Zeichen als Platzhalter interpretiert.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>If the path includes escape characters, enclose it in single quotation marks.</source>
          <target state="translated">Wenn der Pfad Escapezeichen enthält, müssen Sie ihn in einfache Anführungszeichen einschließen.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>Single quotation marks tell Windows PowerShell not to interpret any characters as escape sequences.</source>
          <target state="translated">Einfache Anführungszeichen veranlassen Windows PowerShell, Zeichen nicht als Escapesequenzen zu interpretieren.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>-MemberDefinition</source>
          <target state="translated">-MemberDefinition</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>Specifies new properties or methods for the class.</source>
          <target state="translated">Gibt neue Eigenschaften oder Methoden für die Klasse an.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Add-Type<ept id="p1">**</ept> generates the template code that is required to support the properties or methods.</source>
          <target state="translated"><bpt id="p1">**</bpt>Add-Type<ept id="p1">**</ept> generiert den Vorlagencode, die erforderlich sind, um die Eigenschaften oder Methoden zu unterstützen.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>You can use this feature to make Platform Invoke (P/Invoke) calls to unmanaged functions in Windows PowerShell.</source>
          <target state="translated">Mit diesem Feature können Sie Plattformaufrufe (P/Invoke) von nicht verwalteten Funktionen in Windows PowerShell ausführen.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>For more information, see the examples.</source>
          <target state="translated">Weitere Informationen finden Sie in den Beispielen.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>-Name</source>
          <target state="translated">-Name</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>Specifies the name of the class to create.</source>
          <target state="translated">Gibt den Namen der zu erstellenden Klasse an.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>This parameter is required when generating a type from a member definition.</source>
          <target state="translated">Dieser Parameter ist beim Generieren eines Typs aus einer Memberdefinition erforderlich.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>The type name and namespace must be unique within a session.</source>
          <target state="translated">Der Typname und der Namespace müssen innerhalb einer Sitzung eindeutig sein.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>You cannot unload a type or change it.</source>
          <target state="translated">Ein Typ kann nicht entladen oder geändert werden.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>If you need to change the code for a type, you must change the name or start a new Windows PowerShell session.</source>
          <target state="translated">Wenn Sie den Code für einen Typ ändern müssen, ändern Sie den Namen oder starten Sie eine neue Windows PowerShell-Sitzung.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>Otherwise, the command fails.</source>
          <target state="translated">Andernfalls führt der Befehl zu einem Fehler.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>-Namespace</source>
          <target state="translated">-Namespace</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>Specifies a namespace for the type.</source>
          <target state="translated">Gibt einen Namespace für den Typ an.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>If this parameter is not included in the command, the type is created in the <bpt id="p1">**</bpt>Microsoft.PowerShell.Commands.AddType.AutoGeneratedTypes<ept id="p1">**</ept> namespace.</source>
          <target state="translated">Wenn dieser Parameter nicht im Befehl enthalten ist, wird der Typ erstellt, der <bpt id="p1">**</bpt>Microsoft.PowerShell.Commands.AddType.AutoGeneratedTypes<ept id="p1">**</ept> Namespace.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>If the parameter is included in the command with an empty string value or a value of $null, the type is generated in the global namespace.</source>
          <target state="translated">Wenn der Parameter im Befehl mit einem leeren Zeichenfolgenwert oder einem Wert von $null enthalten ist, wird der Typ im globalen Namespace generiert.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>-OutputAssembly</source>
          <target state="translated">-OutputAssembly</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>Generates a DLL file for the assembly with the specified name in the location.</source>
          <target state="translated">Generiert eine DLL-Datei für die Assembly mit dem angegebenen Namen an dem Speicherort.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>Enter a path (optional) and file name.</source>
          <target state="translated">Geben Sie einen Pfad (optional) und den Dateinamen ein.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source>Wildcard characters are permitted.</source>
          <target state="translated">Platzhalterzeichen sind zulässig.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source>By default, <bpt id="p1">**</bpt>Add-Type<ept id="p1">**</ept> generates the assembly only in memory.</source>
          <target state="translated">In der Standardeinstellung <bpt id="p1">**</bpt>Add-Type<ept id="p1">**</ept> generiert die Assembly nur im Arbeitsspeicher.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source>-OutputType</source>
          <target state="translated">OutputType-</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source>Specifies the output type of the output assembly.</source>
          <target state="translated">Gibt den Ausgabetyp der Ausgabeassembly an.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source>Valid values are <bpt id="p1">**</bpt>Library<ept id="p1">**</ept>, <bpt id="p2">**</bpt>ConsoleApplication<ept id="p2">**</ept>, and <bpt id="p3">**</bpt>WindowsApplication<ept id="p3">**</ept>.</source>
          <target state="translated">Gültige Werte sind <bpt id="p1">**</bpt>Bibliothek<ept id="p1">**</ept>, <bpt id="p2">**</bpt>Konsolenanwendung<ept id="p2">**</ept>, und <bpt id="p3">**</bpt>WindowsApplication<ept id="p3">**</ept>.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source>For more information about the values, see "OutputAssemblyType Enumeration" in MSDN.</source>
          <target state="translated">Weitere Informationen zu den Werten finden Sie im MSDN unter „OutputAssemblyType Enumeration“.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve">
          <source>By default, no output type is specified.</source>
          <target state="translated">Standardmäßig wird kein Ausgabetyp angegeben.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source>This parameter is valid only when an output assembly is specified in the command.</source>
          <target state="translated">Dieser Parameter gilt nur, wenn eine Ausgabeassembly im Befehl angegeben wird.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source>-PassThru</source>
          <target state="translated">-PassThru</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source>Returns a <bpt id="p1">**</bpt>System.Runtime<ept id="p1">**</ept> object that represents the types that were added.</source>
          <target state="translated">Gibt eine <bpt id="p1">**</bpt>System.Runtime<ept id="p1">**</ept> -Objekt, das die Typen darstellt, die hinzugefügt wurden.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve">
          <source>By default, this cmdlet does not generate any output.</source>
          <target state="translated">Standardmäßig wird von diesem Cmdlet keine Ausgabe generiert.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve">
          <source>-Path</source>
          <target state="translated">-Path</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve">
          <source>Specifies the path to source code files or assembly DLL files that contain the types.</source>
          <target state="translated">Gibt den Pfad zu Quellcodedateien oder Assembly-DLL-Dateien an, die die Typen enthalten.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve">
          <source>If you submit source code files, <bpt id="p1">**</bpt>Add-Type<ept id="p1">**</ept> compiles the code in the files and creates an in-memory assembly of the types.</source>
          <target state="translated">Wenn Sie Quellcodedateien übermitteln <bpt id="p1">**</bpt>Add-Type<ept id="p1">**</ept> kompiliert den Code in den Dateien und erstellt eine speicherinterne Assembly der Typen.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve">
          <source>The file name extension specified in the value of Path determines the compiler that <bpt id="p1">**</bpt>Add-Type<ept id="p1">**</ept> uses.</source>
          <target state="translated">Die Erweiterung im Wert des Pfads angegeben, bestimmt den Compiler, <bpt id="p1">**</bpt>Add-Type<ept id="p1">**</ept> verwendet.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve">
          <source>If you submit an assembly file, <bpt id="p1">**</bpt>Add-Type<ept id="p1">**</ept> takes the types from the assembly.</source>
          <target state="translated">Wenn Sie eine Assembly-Datei übermitteln <bpt id="p1">**</bpt>Add-Type<ept id="p1">**</ept> übernimmt die Typen aus der Assembly.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve">
          <source>To specify an in-memory assembly or the global assembly cache, use the <bpt id="p1">**</bpt>AssemblyName<ept id="p1">**</ept> parameter.</source>
          <target state="translated">Um eine Assembly im Speicher oder im globalen Assemblycache anzugeben, verwenden Sie die <bpt id="p1">**</bpt>AssemblyName<ept id="p1">**</ept> Parameter.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve">
          <source>-ReferencedAssemblies</source>
          <target state="translated">ReferencedAssemblies-</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve">
          <source>Specifies the assemblies upon which the type depends.</source>
          <target state="translated">Gibt die Assemblys an, von denen der Typ abhängig ist.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve">
          <source>By default, <bpt id="p1">**</bpt>Add-Type<ept id="p1">**</ept> references System.dll and System.Management.Automation.dll.</source>
          <target state="translated">In der Standardeinstellung <bpt id="p1">**</bpt>Add-Type<ept id="p1">**</ept> verweist auf System.dll und System.Management.Automation.dll.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve">
          <source>The assemblies that you specify by using this parameter are referenced in addition to the default assemblies.</source>
          <target state="translated">Auf die Assemblys, die Sie mithilfe dieses Parameters angeben, wird zusätzlich zu den Standardassemblys verwiesen.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve">
          <source>You cannot use the <bpt id="p1">**</bpt>CompilerParameters<ept id="p1">**</ept> and <bpt id="p2">**</bpt>ReferencedAssemblies<ept id="p2">**</ept> parameters in the same command.</source>
          <target state="translated">Sie können keine der <bpt id="p1">**</bpt>CompilerParameters<ept id="p1">**</ept> und <bpt id="p2">**</bpt>ReferencedAssemblies<ept id="p2">**</ept> Parameter im gleichen Befehl.</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve">
          <source>-TypeDefinition</source>
          <target state="translated">-TypeDefinition</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve">
          <source>Specifies the source code that contains the type definitions.</source>
          <target state="translated">Gibt den Quellcode an, der die Typdefinitionen enthält.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve">
          <source>Enter the source code in a string or here-string, or enter a variable that contains the source code.</source>
          <target state="translated">Geben Sie den Quellcode in einer Zeichenfolge oder einer here-Zeichenfolge ein, oder geben Sie eine Variable ein, die den Quellcode enthält.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve">
          <source>For more information about here-strings, see about_Quoting_Rules (http://go.microsoft.com/fwlink/?LinkID=113253).</source>
          <target state="translated">Weitere Informationen zu Here-Strings finden Sie unter About_Quoting_Rules (http://go.microsoft.com/fwlink/?LinkID=113253).</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve">
          <source>Include a namespace declaration in your type definition.</source>
          <target state="translated">Schließen Sie eine Namespacedeklaration in die Typdefinition ein.</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve">
          <source>If you omit the namespace declaration, your type might have the same name as another type or the shortcut for another type, causing an unintentional overwrite.</source>
          <target state="translated">Wenn Sie die Namespacedeklaration weglassen, kann der Typ denselben Namen wie ein anderer Typ oder die Verknüpfung für einen anderen Typ aufweisen, was zu einer unbeabsichtigten Überschreibung führen kann.</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve">
          <source>For example, if you define a type called "Exception", scripts that use "Exception" as the shortcut for <bpt id="p1">**</bpt>System.Exception<ept id="p1">**</ept> will fail.</source>
          <target state="translated">Z. B. Wenn Sie einen Typ mit dem Namen "Exception" definieren, Skripts, in denen "Exception" als Kurzform für <bpt id="p1">**</bpt>System.Exception<ept id="p1">**</ept> schlägt fehl.</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve">
          <source>-UsingNamespace</source>
          <target state="translated">UsingNamespace-</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve">
          <source>Specifies other namespaces that are required for the class.</source>
          <target state="translated">Gibt andere Namespaces an, die für die Klasse erforderlich sind.</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve">
          <source>This is much like the Using keyword in C#.</source>
          <target state="translated">Dies entspricht dem Using-Schlüsselwort in C#.</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve">
          <source>By default, <bpt id="p1">**</bpt>Add-Type<ept id="p1">**</ept> references the <bpt id="p2">**</bpt>System<ept id="p2">**</ept> namespace.</source>
          <target state="translated">In der Standardeinstellung <bpt id="p1">**</bpt>Add-Type<ept id="p1">**</ept> Verweise die <bpt id="p2">**</bpt>System<ept id="p2">**</ept> Namespace.</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve">
          <source>When the <bpt id="p1">**</bpt>MemberDefinition<ept id="p1">**</ept> parameter is used, <bpt id="p2">**</bpt>Add-Type<ept id="p2">**</ept> also references the <bpt id="p3">**</bpt>System.Runtime.InteropServices<ept id="p3">**</ept> namespace by default.</source>
          <target state="translated">Wenn die <bpt id="p1">**</bpt>MemberDefinition<ept id="p1">**</ept> Parameter verwendet wird, <bpt id="p2">**</bpt>Add-Type<ept id="p2">**</ept> verweist auch auf die <bpt id="p3">**</bpt>System.Runtime.InteropServices<ept id="p3">**</ept> standardmäßig Namespace.</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve">
          <source>The namespaces that you add by using the <bpt id="p1">**</bpt>UsingNamespace<ept id="p1">**</ept> parameter are referenced in addition to the default namespaces.</source>
          <target state="translated">Die Namespaces, die Sie hinzufügen, indem Sie mit der <bpt id="p1">**</bpt>UsingNamespace<ept id="p1">**</ept> Parameter zusätzlich zu den standardmäßigen Namespaces verwiesen werden.</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve">
          <source>CommonParameters</source>
          <target state="translated">CommonParameters</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve">
          <source>This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutVariable, -OutBuffer, -PipelineVariable, -Verbose, -WarningAction, and -WarningVariable.</source>
          <target state="translated">Dieses Cmdlet unterstützt die allgemeinen Parameter:-Debug, - ErrorAction, - ErrorVariable, - InformationAction, -InformationVariable, - OutVariable,-OutBuffer, - PipelineVariable, - Verbose, - WarningAction und -WarningVariable.</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve">
          <source>For more information, see about_CommonParameters (http://go.microsoft.com/fwlink/?LinkID=113216).</source>
          <target state="translated">Weitere Informationen finden Sie unter "about_commonparameters" (http://go.microsoft.com/fwlink/?LinkID=113216).</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve">
          <source>INPUTS</source>
          <target state="translated">EINGABEN</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve">
          <source>None</source>
          <target state="translated">Keine</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve">
          <source>You cannot pipe objects to Add-Type.</source>
          <target state="translated">Objekte können nicht über die Pipeline an „Add-Type“ übergeben werden.</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve">
          <source>OUTPUTS</source>
          <target state="translated">AUSGABEN</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve">
          <source>None or System.Type</source>
          <target state="translated">None oder System.Type</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve">
          <source>When you use the <bpt id="p1">**</bpt>PassThru<ept id="p1">**</ept> parameter, <bpt id="p2">**</bpt>Add-Type<ept id="p2">**</ept> returns a <bpt id="p3">**</bpt>System.Type<ept id="p3">**</ept> object that represents the new type.</source>
          <target state="translated">Bei Verwendung der <bpt id="p1">**</bpt>PassThru<ept id="p1">**</ept> Parameter <bpt id="p2">**</bpt>Add-Type<ept id="p2">**</ept> Gibt eine <bpt id="p3">**</bpt>System.Type<ept id="p3">**</ept> -Objekt, das den neuen Typ darstellt.</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve">
          <source>Otherwise, this cmdlet does not generate any output.</source>
          <target state="translated">Andernfalls wird von diesem Cmdlet keine Ausgabe generiert.</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve">
          <source>NOTES</source>
          <target state="translated">NOTIZEN</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve">
          <source>The types that you add exist only in the current session.</source>
          <target state="translated">Die Typen, die Sie hinzufügen, sind nur in der aktuellen Sitzung vorhanden.</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve">
          <source>To use the types in all sessions, add them to your Windows PowerShell profile.</source>
          <target state="translated">Um die Typen in allen Sitzungen zu verwenden, fügen Sie sie Ihrem Windows PowerShell-Profil hinzu.</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve">
          <source>For more information about the profile, see about_Profiles (http://go.microsoft.com/fwlink/?LinkID=113729).</source>
          <target state="translated">Weitere Informationen zum Profil finden Sie unter "about_profiles" (http://go.microsoft.com/fwlink/?LinkID=113729).</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve">
          <source>Type names (and namespaces) must be unique within a session.</source>
          <target state="translated">Typnamen (und Namespaces) müssen innerhalb einer Sitzung eindeutig sein.</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve">
          <source>You cannot unload a type or change it.</source>
          <target state="translated">Ein Typ kann nicht entladen oder geändert werden.</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve">
          <source>If you need to change the code for a type, you must change the name or start a new Windows PowerShell session.</source>
          <target state="translated">Wenn Sie den Code für einen Typ ändern müssen, ändern Sie den Namen oder starten Sie eine neue Windows PowerShell-Sitzung.</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve">
          <source>Otherwise, the command fails.</source>
          <target state="translated">Andernfalls führt der Befehl zu einem Fehler.</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve">
          <source>The CodeDomProvider class for some languages, such as IronPython and JSharp, does not generate output.</source>
          <target state="translated">Die CodeDomProvider-Klasse für einige Sprachen, z. B. IronPython und JSharp, generiert keine Ausgabe.</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve">
          <source>As a result, types written in these languages cannot be used with <bpt id="p1">**</bpt>Add-Type<ept id="p1">**</ept>.</source>
          <target state="translated">Daher können nicht in diesen Sprachen geschriebene Typen verwendet werden, mit <bpt id="p1">**</bpt>Add-Type<ept id="p1">**</ept>.</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve">
          <source>This cmdlet is based on the <bpt id="p1">**</bpt>CodeDomProvider<ept id="p1">**</ept> class.</source>
          <target state="translated">Dieses Cmdlet basiert auf der <bpt id="p1">**</bpt>CodeDomProvider<ept id="p1">**</ept> Klasse.</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve">
          <source>For more information about this class, see the Microsoft .NET Framework SDK.</source>
          <target state="translated">Weitere Informationen zu dieser Klasse finden Sie im Microsoft .NET Framework SDK.</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve">
          <source>RELATED LINKS</source>
          <target state="translated">VERWANDTE LINKS</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve">
          <source>Add-Member</source>
          <target state="translated">Add-Member</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve">
          <source>New-Object</source>
          <target state="translated">Neues Objekt</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>