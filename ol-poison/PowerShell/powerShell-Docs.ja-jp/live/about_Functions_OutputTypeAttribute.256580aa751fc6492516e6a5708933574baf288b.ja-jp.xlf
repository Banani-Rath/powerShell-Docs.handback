<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-1c394fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">43501bdf5c2aa36171381c80c70f11055b28dc35</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">reference\5.0\Microsoft.PowerShell.Core\About\about_Functions_OutputTypeAttribute.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions" />
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">e0b5a241c93250bc445426b2cf2c6ce1e171578d</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">b19420e57bcf685bf1301196ebc24c5a983bf8fa</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>about_Functions_OutputTypeAttribute</source>
          <target state="translated">about_Functions_OutputTypeAttribute</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>powershell, cmdlet</source>
          <target state="translated">powershell コマンドレット</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>About Functions OutputTypeAttribute</source>
          <target state="translated">関数 OutputTypeAttribute について</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>about_Functions_OutputTypeAttribute</source>
          <target state="translated">about_Functions_OutputTypeAttribute</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>TOPIC</source>
          <target state="translated">トピック</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>about_Functions_OutputTypeAttribute</source>
          <target state="translated">about_Functions_OutputTypeAttribute</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>SHORT DESCRIPTION</source>
          <target state="translated">概要</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Describes an attribute that reports the type of object that the function returns.</source>
          <target state="translated">関数が返すオブジェクトの種類を報告する属性について説明します。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>LONG DESCRIPTION</source>
          <target state="translated">詳細説明</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The OutputType attribute lists the .NET types of objects that the functions returns.</source>
          <target state="translated">OutputType 属性には、関数によって返されるオブジェクトの .NET 型が一覧表示します。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>You can use its optional ParameterSetName parameter to list different output types for each parameter set.</source>
          <target state="translated">パラメーター セットごとに、オプションの ParameterSetName パラメーター リストの別の出力の種類を使用できます。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>The OutputType attribute is supported on simple and advanced functions.</source>
          <target state="translated">OutputType 属性は単純で高度な機能のサポートします。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>It is independent of the CmdletBinding attribute.</source>
          <target state="translated">これは、CmdletBinding 属性に依存しません。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>The OutputType attribute provides the value of the OutputType property of the System.Management.Automation.FunctionInfo object that the Get-Command cmdlet returns.</source>
          <target state="translated">OutputType 属性は、Get-command コマンドレットが返す System.Management.Automation.FunctionInfo オブジェクトの OutputType プロパティの値を提供します。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>The OutputType attribute value is only a documentation note.</source>
          <target state="translated">OutputType 属性の値とは、ドキュメント メモのみです。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>It is not derived from the function code or compared to the actual function output.</source>
          <target state="translated">または関数のコードから派生されない実際の関数の出力と比較します。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>As such, the value might be inaccurate.</source>
          <target state="translated">そのため、値は正確でない可能性があります。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>SYNTAX</source>
          <target state="translated">構文</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>The OutputType attribute of functions has the following syntax:</source>
          <target state="translated">関数の OutputType 属性には、次の構文があります。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>[OutputType([<ph id="ph1">&lt;TypeLiteral&gt;</ph>], ParameterSetName="<ph id="ph2">&lt;Name&gt;</ph>")] [OutputType("<ph id="ph3">&lt;TypeNameString&gt;</ph>", ParameterSetName="<ph id="ph4">&lt;Name&gt;</ph>")]</source>
          <target state="translated">[OutputType ([<ph id="ph1">&lt;TypeLiteral&gt;</ph>]、ParameterSetName ="<ph id="ph2">&lt;Name&gt;</ph>")] [OutputType ("<ph id="ph3">&lt;TypeNameString&gt;</ph>"、ParameterSetName ="<ph id="ph4">&lt;Name&gt;</ph>")]</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>The ParameterSetName parameter is optional.</source>
          <target state="translated">ParameterSetName パラメーターは省略できます。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>You can list multiple types in the OutputType attribute.</source>
          <target state="translated">OutputType 属性に複数の種類を一覧表示できます。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>[OutputType([<ph id="ph1">&lt;Type1&gt;</ph>],[<ph id="ph2">&lt;Type2&gt;</ph>],[<ph id="ph3">&lt;Type3&gt;</ph>])]</source>
          <target state="translated">[OutputType ([<ph id="ph1">&lt;Type1&gt;</ph>]、[<ph id="ph2">&lt;Type2&gt;</ph>]、[<ph id="ph3">&lt;Type3&gt;</ph>])]</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>You can use the ParameterSetName parameter to indicate that different parameter sets return different types.</source>
          <target state="translated">ParameterSetName パラメーターを使用すると、その別のパラメーターが戻り値のさまざまな種類を設定を指定します。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>[OutputType([<ph id="ph1">&lt;Type1&gt;</ph>], ParameterSetName="<ph id="ph2">&lt;Set1&gt;</ph>","<ph id="ph3">&lt;Set2&gt;</ph>")] [OutputType([<ph id="ph4">&lt;Type2&gt;</ph>], ParameterSetName="<ph id="ph5">&lt;Set3&gt;</ph>")]</source>
          <target state="translated">[OutputType ([<ph id="ph1">&lt;Type1&gt;</ph>]、ParameterSetName ="<ph id="ph2">&lt;Set1&gt;</ph>","<ph id="ph3">&lt;Set2&gt;</ph>")] [OutputType ([<ph id="ph4">&lt;Type2&gt;</ph>]、ParameterSetName ="<ph id="ph5">&lt;Set3&gt;</ph>")]</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Place the OutputType attribute statements in the attributes list that precedes the Param statement.</source>
          <target state="translated">Param ステートメントの前にある属性の一覧で OutputType 属性ステートメントを配置します。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>The following example shows the placement of the OutputType attribute in a simple function.</source>
          <target state="translated">次の例では、単純な関数の OutputType 属性の配置を示します。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>function SimpleFunction2 { [OutputType([<ph id="ph1">&lt;Type&gt;</ph>])] Param ($Parameter1)</source>
          <target state="translated">関数の SimpleFunction2 {[OutputType([<ph id="ph1">&lt;Type&gt;</ph>])] パラメーター (Parameter1 ドル)</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>}</source>
          <target state="translated">}</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>The following example shows the placement of the OutputType attribute in advanced functions.</source>
          <target state="translated">次の例では、高度な関数 OutputType 属性の配置を示します。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>function AdvancedFunction1 { [OutputType([<ph id="ph1">&lt;Type&gt;</ph>])] Param ( [parameter(Mandatory=$true)] [String[]] $Parameter1</source>
          <target state="translated">関数の AdvancedFunction1 {[OutputType([<ph id="ph1">&lt;Type&gt;</ph>])] Param ([parameter(Mandatory=$true)] [文字列ドル Parameter1]</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>)</source>
          <target state="translated">)です。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>}</source>
          <target state="translated">}</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>function AdvancedFunction2 { [CmdletBinding(SupportsShouldProcess=<ph id="ph1">&lt;Boolean&gt;</ph>)] [OutputType([<ph id="ph2">&lt;Type&gt;</ph>])] Param ( [parameter(Mandatory=$true)] [String[]] $Parameter1</source>
          <target state="translated">関数の AdvancedFunction2 {[CmdletBinding(SupportsShouldProcess=<ph id="ph1">&lt;Boolean&gt;</ph>)] [OutputType([<ph id="ph2">&lt;Type&gt;</ph>])] Param ([parameter(Mandatory=$true)] [文字列ドル Parameter1]</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>)</source>
          <target state="translated">)です。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>}</source>
          <target state="translated">}</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>EXAMPLES</source>
          <target state="translated">例</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>The following function uses the OutputType attribute to indicate that it returns a string value.</source>
          <target state="translated">次の関数では、OutputType 属性を使用して、文字列値が返されることを示します。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>function Send-Greeting { [OutputType([String])] Param ($Name)</source>
          <target state="translated">送信応答メッセージを機能 {[OutputType([String])] Param ($Name)</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Hello, $Name }</source>
          <target state="translated">こんにちは, $Name}</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>To see the resulting output type property, use the Get-Command cmdlet.</source>
          <target state="translated">プロパティを入力して、結果の出力を表示するには、Get-command コマンドレットを使用します。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>PS C:&gt; (Get-Command Send-Greeting).OutputType</source>
          <target state="translated">PS c: &gt; (Get-command 送信-応答メッセージ)。OutputType</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Name                                               Type</source>
          <target state="translated">Name                                               Type</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>System.String                                      System.String</source>
          <target state="translated">System.String System.String</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>The following advanced function uses the OutputType attribute to indicate that the function returns different types depending on the parameter set used in the function command.</source>
          <target state="translated">次の関数の詳細では、OutputType 属性を使用して、関数が関数のコマンドで使用されるパラメーターのセットに応じてさまざまな型を返すことを示します。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>function Get-User { [CmdletBinding(DefaultParameterSetName="ID")]</source>
          <target state="translated">関数、ユーザー {[CmdletBinding(DefaultParameterSetName="ID")]</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>[OutputType("System.Int32", ParameterSetName="ID")] [OutputType([String], ParameterSetName="Name")]</source>
          <target state="translated">[OutputType ("System.Int32"、ParameterSetName ="ID")][OutputType ([String] ParameterSetName ="Name")]</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Param ( [parameter(Mandatory=$true, ParameterSetName="ID")] [Int[]] $UserID,</source>
          <target state="translated">Param ([パラメーター (必須 $true ParameterSetName の = ="ID")] [Int $UserID、]</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>[parameter(Mandatory=$true, ParameterSetName="Name")] [String[]] $UserName</source>
          <target state="translated">[パラメーター (必須 $true ParameterSetName の = ="Name")][文字列 $UserName]</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>)</source>
          <target state="translated">)です。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>}</source>
          <target state="translated">}</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>The following example demonstrates that the output type property value displays the value of the OutputType attribute, even when it is inaccurate.</source>
          <target state="translated">次の例では、正確ながない場合でも、出力型のプロパティ値が OutputType 属性の値が表示されるを示します。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>The Get-Time function returns a string that contains the short form of the time in any DateTime object.</source>
          <target state="translated">Get 時刻関数では、任意の DateTime オブジェクトで時間の短縮形を表す文字列を返します。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>However, the OutputType attribute reports that it returns a System.DateTime object.</source>
          <target state="translated">ただし、OutputType 属性は、System.DateTime オブジェクトが返されることを報告します。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>function Get-Time { [OutputType([DateTime])] Param</source>
          <target state="translated">関数を Get 回 {[OutputType([DateTime])] パラメーター</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>(</source>
          <target state="translated">(</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>[parameter(Mandatory=$true)] [Datetime]$DateTime</source>
          <target state="translated">[parameter(Mandatory=$true)][Datetime] $DateTime</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>)</source>
          <target state="translated">)です。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>$DateTime.ToShortTimeString() }</source>
          <target state="translated">$DateTime.ToShortTimeString()}</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>The Get-Type method confirms that the function returns a string.</source>
          <target state="translated">Get 型のメソッドは、関数が文字列を返すことを確認します。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>PS C:&gt; (Get-Time -DateTime (Get-Date)).Gettype().FullName System.String</source>
          <target state="translated">PS c: &gt; (Get 時間 DateTime (Get-date))。Gettype() します。FullName System.String</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>However, the OutputType property, which gets its value from the OutputType attribute, reports that the function returns a DateTime object.</source>
          <target state="translated">ただし、OutputType 属性からその値を取得する OutputType プロパティは、関数が DateTime オブジェクトを返すことを報告します。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>PS C:&gt; (Get-Command Get-Time).OutputType</source>
          <target state="translated">PS c: &gt; (Get コマンド Get 時)。OutputType</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>Name                                      Type</source>
          <target state="translated">Name                                      Type</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>System.DateTime                           System.DateTime</source>
          <target state="translated">System.DateTime System.DateTime</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>NOTES</source>
          <target state="translated">ノート</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>The value of the OutputType property of a FunctionInfo object is an array of System.Management.Automation.PSTypeName objects, each of which have Name and Type properties.</source>
          <target state="translated">FunctionInfo オブジェクトの OutputType プロパティの値は、名前と型のプロパティを持つ各 System.Management.Automation.PSTypeName オブジェクトの配列です。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>To get only the name of each output type, use a command with the following format.</source>
          <target state="translated">出力の種類の名前のみを取得するには、次の形式でコマンドを使用します。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>(Get-Command Get-Time).OutputType | ForEach {$_.Name}</source>
          <target state="translated">(Get コマンド Get 時)。OutputType |ForEach {$_ です。Name}</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>The value of the OutputType property can be null.</source>
          <target state="translated">OutputType プロパティの値を null にすることができます。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>Use a null value when the output is a not a .NET type, such as a WMI object or a formatted view of an object.</source>
          <target state="translated">出力は次のでない場合に null 値を使用して、WMI オブジェクトやオブジェクトの書式設定されたビューなどの .NET 型です。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>SEE ALSO</source>
          <target state="translated">関連項目</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>about_Functions about_Functions_Advanced about_Functions_Advanced_Methods about_Functions_Advanced_Parameters about_Functions_CmdletBindingAttribute</source>
          <target state="translated">about_Functions about_Functions_Advanced about_Functions_Advanced_Methods 指示 about_Functions_CmdletBindingAttribute</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>