<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-1c394fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">4e9d1312554b9ef13a22460f93035a77849ef965</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">reference\3.0\Microsoft.PowerShell.Utility\ConvertFrom-Csv.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions" />
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f02a52f1d3281100d4f85be6aa2c39499a6b9467</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1d64b6e7e8a757c897400a86a9b8b5ead3ab0507</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>powershell, cmdlet</source>
          <target state="translated">powershell コマンドレット</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>ConvertFrom-Csv</source>
          <target state="translated">ConvertFrom-Csv</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>ConvertFrom-Csv</source>
          <target state="translated">ConvertFrom-Csv</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>SYNOPSIS</source>
          <target state="translated">概要</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Converts object properties in comma-separated value (CSV) format into CSV versions of the original objects.</source>
          <target state="translated">コンマ区切り値 (CSV) 形式のオブジェクトのプロパティを元のオブジェクトの CSV バージョンに変換します。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>SYNTAX</source>
          <target state="translated">構文</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Delimiter (Default)</source>
          <target state="translated">区切り記号 (既定値)</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>UseCulture</source>
          <target state="translated">UseCulture</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>DESCRIPTION</source>
          <target state="translated">説明</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The ConvertFrom-CSV cmdlet creates objects from CSV variable-length strings that are generated by the ConvertTo-CSV cmdlet.</source>
          <target state="translated">ConvertFrom-CSV コマンドレットは、ConvertTo-CSV コマンドレットによって生成された CSV 可変長文字列からオブジェクトを作成します。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>You can use the parameters of the ConvertFrom-CSV cmdlet to specify the column header row, which determines the property names of the resulting objects, to specify the item delimiter, or to direct ConvertFrom-CSV to use the list separator for the current culture as the delimiter.</source>
          <target state="translated">ConvertFrom-CSV コマンドレットのパラメーターを使用して、結果のオブジェクトのプロパティ名を決定する列ヘッダー行を指定したり、項目の区切り記号を指定したりできます。また、現在のカルチャの区切り記号を区切り記号として使用することを ConvertFrom-CSV に指示することもできます。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>The objects that ConvertFrom-CSV creates are CSV versions of the original objects.</source>
          <target state="translated">ConvertFrom-CSV によって作成されるオブジェクトは、元のオブジェクトの CSV バージョンです。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>The property values of the CSV objects are string versions of the property values of the original objects.</source>
          <target state="translated">CSV オブジェクトのプロパティ値は、元のオブジェクトのプロパティ値の文字列バージョンです。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>The CSV versions of the objects do not have any methods.</source>
          <target state="translated">オブジェクトの CSV バージョンはメソッドを持ちません。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>You can also use the Export-CSV and Import-CSV cmdlets to convert objects to CSV strings in a file (and back).</source>
          <target state="translated">Export-CSV コマンドレットと Import-CSV コマンドレットを使用して、オブジェクトをファイル内の CSV の文字列 (およびその逆) に変換することもできます。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>These cmdlets are the same as the ConvertTo-CSV and ConvertFrom-CSV cmdlets, except that they save the CSV strings in a file.</source>
          <target state="translated">これらのコマンドレットは、CSV 文字列をファイルに保存する点を除いて、ConvertTo-CSV コマンドレットと ConvertFrom-CSV コマンドレットと同じです。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>EXAMPLES</source>
          <target state="translated">例</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>-------------------------- EXAMPLE 1 --------------------------</source>
          <target state="translated">-------------------------- 例 1 --------------------------</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>These commands convert the processes on the local computer into CSV format and then restore them to object form.</source>
          <target state="translated">これらのコマンドは、ローカル コンピューター上のプロセスを CSV 形式に変換した後、オブジェクト形式に復元します。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>The first command uses the Get-Process cmdlet to get the processes on the local computer.</source>
          <target state="translated">最初のコマンドでは、Get-Process コマンドレットを使用して、ローカル コンピューター上のプロセスを取得しています。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>A pipeline operator (|) sends them to the ConvertTo-CSV cmdlet, which converts the process object to CSV format.</source>
          <target state="translated">取得したプロセスはパイプライン演算子 (|) によって ConvertTo-CSV コマンドレットに送られ、そこでプロセス オブジェクトが CSV 形式に変換されます。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>The CSV strings are saved in the $p variable.</source>
          <target state="translated">CSV 文字列は、$p 変数に保存されます。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>The second command uses a pipeline operator to send the CSV strings in the $p variable to the ConvertFrom-CSV cmdlet.</source>
          <target state="translated">2 番目のコマンドでは、パイプライン演算子を使用して、$p 変数内の CSV 文字列を ConvertFrom-CSV コマンドレットに渡しています。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>The cmdlet converts the CSV strings into CSV versions of the original process objects.</source>
          <target state="translated">このコマンドレットにより、CSV 文字列が元のプロセス オブジェクトの CSV バージョンに変換されます。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>-------------------------- EXAMPLE 2 --------------------------</source>
          <target state="translated">-------------------------- EXAMPLE 2 --------------------------</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>These commands convert a data object to CSV format and then to CSV object format.</source>
          <target state="translated">これらのコマンドは、データ オブジェクトを CSV 形式に変換した後、CSV オブジェクト形式に変換します。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>The first command uses the Get-Date cmdlet to get the current date and time.</source>
          <target state="translated">最初のコマンドで、Get-Date コマンドレットを使用して現在の日付と時刻を取得します。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>A pipeline object (|) sends the date to the ConvertTo-CSV cmdlets, which converts the date object to a series of CSV strings.</source>
          <target state="translated">パイプライン オブジェクト (|) によって日付が ConvertTo-CSV コマンドレットに送られ、そこで日付オブジェクトが一連の CSV 文字列に変換されます。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>The command uses the Delimiter parameter to specify a semicolon delimiter.</source>
          <target state="translated">このコマンドでは、Delimiter パラメーターを使用して、セミコロンを区切り文字として指定しています。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>The strings are saved in the $date variable.</source>
          <target state="translated">文字列は、$date 変数に保存されます。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>The second command uses the ConvertFrom-CSV cmdlet to convert the CSV strings in the $date variable back to object format.</source>
          <target state="translated">2 番目のコマンドでは、ConvertFrom-CSV コマンドレットを使用して、$date 変数内の CSV 文字列をオブジェクト形式に変換しています。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>The command uses the InputObject parameter to specify the CSV strings and the Delimiter parameter to specify the semicolon delimiter.</source>
          <target state="translated">このコマンドでは、InputObject パラメーターを使用して CSV 文字列を指定し、Delimiter パラメーターを使用してセミコロンの区切り文字を指定しています。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>-------------------------- EXAMPLE 3 --------------------------</source>
          <target state="translated">-------------------------- EXAMPLE 3 --------------------------</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>This example shows how to use the Header parameter of ConvertFrom-Csv to change the names of properties in the resulting imported object.</source>
          <target state="translated">この例は、ConvertFrom-Csv の Header パラメーターを使用して、結果のインポートされたオブジェクトのプロパティの名前を変更する方法を示しています。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>The first command uses the Start-Job cmdlet to start a background job that runs a Get-Process command on the local computer.</source>
          <target state="translated">最初のコマンドでは、Start-Job コマンドレットを使用して、ローカル コンピューター上で Get-Process コマンドを実行するバックグラウンド ジョブを開始しています。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>A pipeline operator (|) sends the resulting job object to the ConvertTo-CSV cmdlet, which converts the job object to CSV format.</source>
          <target state="translated">結果のジョブ オブジェクトはパイプライン演算子 (|) によって ConvertTo-CSV コマンドレットに送られ、そこでジョブ オブジェクトが CSV 形式に変換されます。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>An assignment operator (=) saves the resulting CSV in the $j variable.</source>
          <target state="translated">結果の CSV は、代入演算子 (=) によって $j 変数に保存されます。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>The second command saves a header in the $header variable.</source>
          <target state="translated">2 番目のコマンドは、ヘッダーを $header 変数に保存します。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Unlike the default header, this header uses "MoreData" instead of "HasMoreData" and "State" instead of "JobStateInfo".</source>
          <target state="translated">このヘッダーには、既定のヘッダーとは異なり、"HasMoreData" ではなく "MoreData"、"JobStateInfo" の代わりに "State" が使用されています。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>The third command deletes the original header (the second line) from the CSV strings and returns it to the $j variable.</source>
          <target state="translated">3 番目のコマンドは、CSV 文字列から元のヘッダー (2 行目) を削除してその結果を $j 変数に返します。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>The fourth command uses the ConvertFrom-CSV cmdlet to convert the CSV strings to a CSV version of the job object.</source>
          <target state="translated">4 番目のコマンドでは、ConvertFrom-CSV コマンドレットを使用して、CSV 文字列をジョブ オブジェクトの CSV バージョンに変換しています。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>The command uses a pipeline operator to send the content in $j to ConvertFrom-CSV.</source>
          <target state="translated">このコマンドでは、パイプライン演算子を使用して、$j の内容を ConvertFrom-CSV に渡しています。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>The resulting object has "MoreData" and "State" properties, as specified by the header.</source>
          <target state="translated">結果のオブジェクトは、ヘッダーに指定したとおり、"MoreData" プロパティと "State" プロパティを持ちます。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>-------------------------- EXAMPLE 4 --------------------------</source>
          <target state="translated">-------------------------- EXAMPLE 4 --------------------------</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>The command uses the ConvertFrom-CSV cmdlet to convert CSV strings of service objects that had been converted by the ConvertTo-CSV cmdlet.</source>
          <target state="translated">このコマンドは、ConvertFrom-CSV コマンドレットを使用して、ConvertTo-CSV によって変換されたサービス オブジェクトの CSV 文字列を変換します。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>The command uses the UseCulture parameter to direct ConvertFrom-CSV to use the delimiter (list separator) of the current culture.</source>
          <target state="translated">このコマンドでは、UseCulture パラメーターを使用して、現在のカルチャの区切り記号を使用することを ConvertFrom-CSV に指示しています。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>When using the UseCulture parameter, be sure that the list separator of the current culture matches the delimiter used in the CSV strings.</source>
          <target state="translated">UseCulture パラメーターを使用する場合は、現在のカルチャの区切り記号が CSV 文字列に使用されている区切り記号に一致していることを確認してください。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Otherwise, ConvertFrom-CSV cannot generate objects from the CSV strings.</source>
          <target state="translated">一致していないと、CSV 文字列からオブジェクトを生成できません。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>In this example, a Get-Culture command was used to verify the list separator, before the ConvertFrom-CSV command was used.</source>
          <target state="translated">この例では、ConvertFrom-CSV コマンドを使用する前に、Get-Culture コマンドを使用して区切り記号を確認しています。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>PARAMETERS</source>
          <target state="translated">パラメータ</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>-Delimiter</source>
          <target state="translated">区切り記号</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Specifies the delimiter that separates the property values in the CSV strings.</source>
          <target state="translated">CSV 文字列内のプロパティ値を区切る区切り記号を指定します。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>The default is a comma (,).</source>
          <target state="translated">既定値はコンマ (,) です。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Enter a character, such as a colon (:).</source>
          <target state="translated">コロン (:) などの文字を入力します。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>To specify a semicolon (;), enclose it in quotation marks.</source>
          <target state="translated">セミコロン (;) を指定するには、引用符で囲みます。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>If you specify a character other than the delimiter used in the CSV strings, ConvertFrom-CSV cannot create objects from the CSV strings.</source>
          <target state="translated">CSV 文字列で使用されている区切り記号以外の文字を指定した場合は、CSV 文字列からオブジェクトを作成できません。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Instead, it returns the strings.</source>
          <target state="translated">代わりに、その文字列が返されます。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>-Header</source>
          <target state="translated">ヘッダー</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>Specifies an alternate column header row for the imported string.</source>
          <target state="translated">インポートされた文字列の代替列ヘッダー行を指定します。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>The column header determines the names of the properties of the object that ConvertFrom-CSV creates.</source>
          <target state="translated">ConvertFrom-CSV によって作成されるオブジェクトのプロパティの名前は、列ヘッダーによって決定されます。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>Enter a comma-separated list of the column headers.</source>
          <target state="translated">列ヘッダーのコンマ区切りリストを入力します。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>Enclose each item in quotation marks (single or double).</source>
          <target state="translated">各項目を (一重または二重の) 引用符で囲みます。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>Do not enclose the header string in quotation marks.</source>
          <target state="translated">ヘッダー文字列は引用符で囲まないでください。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>If you enter fewer column headers than there are columns, the remaining columns will have no headers.</source>
          <target state="translated">入力した列ヘッダーの数が列の数より少ない場合、残りの列にはヘッダーが設定されません。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>If you enter more headers than there are columns, the extra headers are ignored.</source>
          <target state="translated">入力したヘッダーの数が列の数より多い場合、余分なヘッダーは無視されます。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>When using the Header parameter, omit the column header string from the CSV strings.</source>
          <target state="translated">Header パラメーターを使用する場合は、CSV 文字列から列ヘッダー文字列を削除してください。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>Otherwise, ConvertFrom-CSV creates an extra object from the items in the header row.</source>
          <target state="translated">この操作を行わないと、ヘッダー行内の項目から余分なオブジェクトが作成されます。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>-InputObject</source>
          <target state="translated">-Inputobject</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>Specifies the CSV strings to be converted to objects.</source>
          <target state="translated">オブジェクトに変換する CSV 文字列を指定します。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>Enter a variable that contains the CSV strings or type a command or expression that gets the CSV strings.</source>
          <target state="translated">CSV 文字列が格納されている変数を入力するか、CSV 文字列を取得するコマンドまたは式を入力します。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>You can also pipe the CSV strings to ConvertFrom-CSV.</source>
          <target state="translated">パイプを使用して CSV 文字列を ConvertFrom-CSV に渡すこともできます。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>-UseCulture</source>
          <target state="translated">-UseCulture</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>Use the list separator for the current culture as the string delimiter.</source>
          <target state="translated">文字列の区切り記号として、現在のカルチャの区切り記号を使用します。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>The default is a comma (,).</source>
          <target state="translated">既定値はコンマ (,) です。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>To find the list separator for a culture, use the following command: (Get-Culture).TextInfo.ListSeparator.</source>
          <target state="translated">カルチャの区切り記号を検索するには、次のコマンドを使用します。 (Get-culture)。TextInfo.ListSeparator します。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>If you specify a character other than the delimiter used in the CSV strings, ConvertFrom-CSV cannot create objects from the CSV strings.</source>
          <target state="translated">CSV 文字列で使用されている区切り記号以外の文字を指定した場合は、CSV 文字列からオブジェクトを作成できません。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>Instead, it returns the strings.</source>
          <target state="translated">代わりに、その文字列が返されます。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>CommonParameters</source>
          <target state="translated">CommonParameters</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutVariable, -OutBuffer, -PipelineVariable, -Verbose, -WarningAction, and -WarningVariable.</source>
          <target state="translated">このコマンドレットは、共通のパラメーターをサポートしています:-デバッグ、-erroraction、-errorvariable、- InformationAction-InformationVariable、- OutVariable、-OutBuffer、- PipelineVariable、- Verbose、および - WarningVariable です。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>For more information, see about_CommonParameters (http://go.microsoft.com/fwlink/?LinkID=113216).</source>
          <target state="translated">詳細については、about_CommonParameters (http://go.microsoft.com/fwlink/?LinkID=113216) を参照してください。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>INPUTS</source>
          <target state="translated">入力</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>System.String</source>
          <target state="translated">System.String</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>You can pipe CSV strings to ConvertFrom-CSV.</source>
          <target state="translated">パイプを使用して CSV 文字列を ConvertFrom-CSV に渡すことができます。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>OUTPUTS</source>
          <target state="translated">出力</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>System.Management.Automation.PSObject</source>
          <target state="translated">System.Management.Automation.PSObject</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>ConvertFrom-CSV returns the objects described by the properties in the CSV strings.</source>
          <target state="translated">ConvertFrom-CSV は、CSV 文字列のプロパティによって記述されたオブジェクトを返します。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>NOTES</source>
          <target state="translated">ノート</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>Because the imported objects are CSV versions of the object type, they are not recognized and formatted by the Windows PowerShell type formatting entries that format the non-CSV versions of the object type.</source>
          <target state="translated">インポートされるオブジェクトはオブジェクト型の CSV バージョンであるため、オブジェクト型の非 CSV バージョンを書式設定する Windows PowerShell の型書式設定エントリによって認識および書式設定されません。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>In CSV format, each object is represented by a comma-separated list of the property values of the object.</source>
          <target state="translated">CSV 形式では、各オブジェクトは、オブジェクトのプロパティ値のコンマ区切りリストで表されます。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>The property values are converted to strings (by using the ToString() method of the object), so they are generally represented by the name of the property value.</source>
          <target state="translated">プロパティ値はオブジェクトの ToString() メソッドを使用して文字列に変換するため、通常、これらはプロパティ値の名前で表されます。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>ConvertTo-Csv does not export the methods of the object.</source>
          <target state="translated">ConvertTo-Csv では、オブジェクトのメソッドはエクスポートされません。</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>RELATED LINKS</source>
          <target state="translated">関連リンク</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>ConvertTo-Csv</source>
          <target state="translated">ConvertTo-Csv</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>Export-Csv</source>
          <target state="translated">Export-Csv</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>Import-Csv</source>
          <target state="translated">Import-Csv</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>