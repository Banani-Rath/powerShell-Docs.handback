<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-1c394fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d75f782f52514fe0e45c6c2d11e6b8238bf9c8e2</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">reference\5.0\Microsoft.PowerShell.Utility\Get-Member.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions" />
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">a73d92e7bea2161f3cf02bb9e5590f1ef12ec38d</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">3b96567befc087249b7e96c7ccb6567cfa39ad38</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>powershell, cmdlet</source>
          <target state="translated">powershell コマンドレット</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Get-Member</source>
          <target state="translated">Get-Member</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Get-Member</source>
          <target state="translated">Get-Member</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>SYNOPSIS</source>
          <target state="translated">概要</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Gets the properties and methods of objects.</source>
          <target state="translated">オブジェクトのプロパティとメソッドを取得します。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>SYNTAX</source>
          <target state="translated">構文</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>DESCRIPTION</source>
          <target state="translated">説明</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>Get-Member<ept id="p1">**</ept> cmdlet gets the members, the properties and methods, of objects.</source>
          <target state="translated"> <bpt id="p1">**</bpt>Get-member<ept id="p1">**</ept> コマンドレットは、メンバー、プロパティ、およびオブジェクトのメソッドを取得します。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>To specify the object, use the <bpt id="p1">*</bpt>InputObject<ept id="p1">*</ept> parameter or pipe an object to <bpt id="p2">**</bpt>Get-Member<ept id="p2">**</ept>.</source>
          <target state="translated">オブジェクトを指定するには、使用、 <bpt id="p1">*</bpt>InputObject<ept id="p1">*</ept> パラメーターにオブジェクトをパイプまたは <bpt id="p2">**</bpt>Get-member<ept id="p2">**</ept>します。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>To get information about static members, the members of the class, not of the instance, use the <bpt id="p1">*</bpt>Static<ept id="p1">*</ept> parameter.</source>
          <target state="translated">静的なメンバーに関する情報を取得する、インスタンスのない、クラスのメンバーを使用、 <bpt id="p1">*</bpt>静的<ept id="p1">*</ept> パラメーター。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>To get only certain types of members, such as <bpt id="p1">**</bpt>NoteProperties<ept id="p1">**</ept>, use the <bpt id="p2">*</bpt>MemberType<ept id="p2">*</ept> parameter.</source>
          <target state="translated">など、特定の種類のメンバーのみを取得する <bpt id="p1">**</bpt>NoteProperties<ept id="p1">**</ept>, を使用して、 <bpt id="p2">*</bpt>MemberType<ept id="p2">*</ept> パラメーター。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>EXAMPLES</source>
          <target state="translated">例</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Example 1: Get the members of process objects</source>
          <target state="translated">例 1: プロセス オブジェクトのメンバーを取得します。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>This command displays the properties and methods of the process objects (System.ServiceProcess.ServiceController) that are generated by the Get-Service cmdlet.</source>
          <target state="translated">このコマンドは、Get-Service コマンドレットによって生成されるプロセス オブジェクト (System.ServiceProcess.ServiceController) のプロパティとメソッドを表示します。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>The command uses the pipeline operator (|) to send the output of a <bpt id="p1">**</bpt>Get-Service<ept id="p1">**</ept> command to <bpt id="p2">**</bpt>Get-Member<ept id="p2">**</ept>.</source>
          <target state="translated">コマンドの出力の送信先のパイプライン演算子 (|) を使用して、 <bpt id="p1">**</bpt>Get-service<ept id="p1">**</ept> コマンドを <bpt id="p2">**</bpt>Get-member<ept id="p2">**</ept>します。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Because the <bpt id="p1">**</bpt>Get-Member<ept id="p1">**</ept> part of the command does not have any parameters, it uses all of the default values.</source>
          <target state="translated"> <bpt id="p1">**</bpt>Get-member<ept id="p1">**</ept> コマンドの一部にはパラメーターがない、すべての既定値を使用します。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>As such, it gets all member types, but it does not get static members and does not display intrinsic members.</source>
          <target state="translated">そのため、すべてのメンバー型を取得しますが、静的メンバーは取得せず、組み込みメンバーを表示しません。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Example 2: Get members of service objects</source>
          <target state="translated">例 2: サービス オブジェクトのメンバーを取得します。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>This example gets all of the members (properties and methods) of the service objects (System.ServiceProcess.ServiceController) retrieved by the Get-Service cmdlet, including the intrinsic members, such as PSBase and PSObject, and the get_ and set_ methods.</source>
          <target state="translated">この例では、Get-Service コマンドレットで取得されたサービス オブジェクト (System.ServiceProcess.ServiceController) のすべてのメンバー (プロパティとメソッド) を取得します。その中には、PSBase、PSObject などの組み込みメンバーや、get_ メソッド、set_ メソッドなどが含まれます。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>The first command uses the <bpt id="p1">**</bpt>Get-Service<ept id="p1">**</ept> cmdlet to get objects that represent the services on the system.</source>
          <target state="translated">最初のコマンドを使用して、 <bpt id="p1">**</bpt>Get-service<ept id="p1">**</ept> コマンドレットをシステム上のサービスを表すオブジェクトを取得します。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>It uses a pipeline operator (|) to pass the service objects to the <bpt id="p1">**</bpt>Get-Member<ept id="p1">**</ept> cmdlet.</source>
          <target state="translated">サービス オブジェクトを渡すため、パイプライン演算子 (|) を使用、 <bpt id="p1">**</bpt>Get-member<ept id="p1">**</ept> コマンドレットです。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>Get-Member<ept id="p1">**</ept> command uses the <bpt id="p2">*</bpt>Force<ept id="p2">*</ept> parameter to add the intrinsic members and compiler-generated members of the objects to the display.</source>
          <target state="translated"> <bpt id="p1">**</bpt>Get-member<ept id="p1">**</ept> コマンドでは、 <bpt id="p2">*</bpt>Force<ept id="p2">*</ept> パラメーターを表示する組み込みメンバーと、オブジェクトのコンパイラによって生成されたメンバーを追加します。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Get-Member<ept id="p1">**</ept> gets these members, but it hides them by default.</source>
          <target state="translated"><bpt id="p1">**</bpt>Get-member<ept id="p1">**</ept> 既定のこれらのメンバーが、非表示にして、これらを取得します。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>You can use these properties and methods in the same way that you would use an adapted method of the object.</source>
          <target state="translated">これらのプロパティとメソッドは、オブジェクトのアダプター適用対象のメソッドを使用する場合と同じ方法で使用できます。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>The second command shows how to display the value of the PSBase property of the Schedule service.</source>
          <target state="translated">2 番目のコマンドは、Schedule サービスの PSBase プロパティの値を表示する方法を示しています。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Example 3: Get extended members of service objects</source>
          <target state="translated">例 3: 拡張サービス オブジェクトのメンバーの取得</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>This command gets the methods and properties of service objects that were extended by using the Types.ps1xml file or the Add-Member cmdlet.</source>
          <target state="translated">このコマンドは、Types.ps1xml ファイルまたは Add-Member コマンドレットを使用して拡張されたサービス オブジェクトのメソッドとプロパティを取得します。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>Get-Member<ept id="p1">**</ept> command uses the <bpt id="p2">*</bpt>View<ept id="p2">*</ept> parameter to get only the extended members of the service objects.</source>
          <target state="translated"> <bpt id="p1">**</bpt>Get-member<ept id="p1">**</ept> コマンドでは、 <bpt id="p2">*</bpt>ビュー<ept id="p2">*</ept> サービス オブジェクトの拡張のメンバーのみを取得するパラメーターです。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>In this case, the extended member is the Name property, which is an alias property of the ServiceName property.</source>
          <target state="translated">この場合、拡張されたメンバーは Name プロパティです。このプロパティは、ServiceName プロパティのエイリアス プロパティです。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Example 4: Get script properties of event log objects</source>
          <target state="translated">例 4: イベント ログ オブジェクトのスクリプトのプロパティを取得します。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>This command gets the script properties of event log objects in the System log in Event Viewer.</source>
          <target state="translated">このコマンドは、イベント ビューアーのシステム ログにあるイベント ログ オブジェクトのスクリプト プロパティを取得します。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>The command uses the <bpt id="p1">*</bpt>MemberType<ept id="p1">*</ept> parameter to get only objects with a value of ScriptProperty for their MemberType property.</source>
          <target state="translated">このコマンドは、 <bpt id="p1">*</bpt>MemberType<ept id="p1">*</ept> 、MemberType プロパティ ScriptProperty の値を持つオブジェクトのみを取得するパラメーターです。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>The command returns the EventID property of the <bpt id="p1">**</bpt>EventLog<ept id="p1">**</ept> object.</source>
          <target state="translated">コマンドは、取得の EventID プロパティ、 <bpt id="p1">**</bpt>EventLog<ept id="p1">**</ept> オブジェクトです。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Example 5: Get objects with a specified property</source>
          <target state="translated">例 5: 指定されたプロパティを使用してオブジェクトを取得します。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>This command gets objects that have a MachineName property from a list of cmdlets.</source>
          <target state="translated">このコマンドは、MachineName プロパティを持つオブジェクトをコマンドレットの一覧から取得します。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>The first command stores the names of several cmdlets in the $A variable.</source>
          <target state="translated">最初のコマンドは、$A 変数にいくつかのコマンドレットの名前を格納します。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>The second command uses a <bpt id="p1">**</bpt>ForEach<ept id="p1">**</ept> statement to invoke each command, send the results to <bpt id="p2">**</bpt>Get-Member<ept id="p2">**</ept>, and limit the results from <bpt id="p3">**</bpt>Get-Member<ept id="p3">**</ept> to members that have the name MachineName.</source>
          <target state="translated">2 番目のコマンドを使用して、 <bpt id="p1">**</bpt>ForEach<ept id="p1">**</ept> 各コマンドを呼び出すステートメントを送信、結果を <bpt id="p2">**</bpt>Get-member<ept id="p2">**</ept>, から結果を限定 <bpt id="p3">**</bpt>Get-member<ept id="p3">**</ept> MachineName の名前を持つメンバーにします。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>The results show that only process objects (<bpt id="p1">**</bpt>System.Diagnostics.Process<ept id="p1">**</ept>) and service objects (<bpt id="p2">**</bpt>System.ServiceProcess.ServiceController<ept id="p2">**</ept>) have a MachineName property.</source>
          <target state="translated">のみオブジェクトを処理する結果の表示 (<bpt id="p1">**</bpt>System.Diagnostics.Process<ept id="p1">**</ept>) とサービス オブジェクト (<bpt id="p2">**</bpt>System.ServiceProcess.ServiceController<ept id="p2">**</ept>) MachineName プロパティがあります。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Example 6: Get members for an array</source>
          <target state="translated">例 6: 配列の場合、メンバーを取得します</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>This example demonstrates how to find the properties and methods of an array of objects when you have only one object of the given type.</source>
          <target state="translated">この例は、特定の型のオブジェクトが 1 つしかない場合に、オブジェクトの配列のプロパティとメソッドを調べる方法を示しています。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Because the goal of the command is to find the properties of an array, the first command uses the <bpt id="p1">*</bpt>InputObject<ept id="p1">*</ept> parameter.</source>
          <target state="translated">最初のコマンドを使用して配列のプロパティを検索するが、コマンドの目標であるため、 <bpt id="p1">*</bpt>InputObject<ept id="p1">*</ept> パラメーター。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>It uses the at symbol (@) to indicate an array.</source>
          <target state="translated">使用して、アット マーク (@) 配列を示しています。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>In this case, the array contains only one object, the integer 1.</source>
          <target state="translated">この場合、配列には、1 つのオブジェクト、つまり整数 1 だけが含まれています。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>The third command uses the <bpt id="p1">**</bpt>Get-Member<ept id="p1">**</ept> cmdlet to get the properties and methods of an array of integers, and the command saves them in the $A variable.</source>
          <target state="translated">3 番目のコマンドを使用して、 <bpt id="p1">**</bpt>Get-member<ept id="p1">**</ept> プロパティと、コマンドや整数の配列のメソッドを取得するコマンドレットがそれらを $A 変数に保存します。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>The fourth command uses the Count property of the array to find the number of objects in the $A variable.</source>
          <target state="translated">4 番目のコマンドでは、配列の Count プロパティを使用して、$A 変数にオブジェクトの数を見つけます。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Example 7: Determine which object properties you can set</source>
          <target state="translated">例 7: を決定するオブジェクト プロパティを設定することができます。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>This example shows how to determine which properties of an object can be changed.</source>
          <target state="translated">この例は、オブジェクトのどのプロパティを変更できるかを判断する方法を示します。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>The example uses a file, but you can use this command format to find the changeable properties of any object in Windows PowerShell.</source>
          <target state="translated">この例では、1 つのファイルを使用していますが、このコマンド形式を使用すると、Windows PowerShell 内の任意のオブジェクトについて、変更可能なプロパティを調べることができます。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>The first command uses the Get-Item cmdlet to get a text file, and then it saves the file object in the $File variable.</source>
          <target state="translated">最初のコマンドは Get-item コマンドレットを使用してテキスト ファイルを取得し、ファイル オブジェクトを $File 変数に保存されます。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>The second command gets all of the changeable properties of the file object in the $File variable and displays the names of the properties in a table.</source>
          <target state="translated">2 番目のコマンドは、$File 変数内のすべてのファイル オブジェクトの変更可能なプロパティを取得し、テーブルのプロパティの名前を表示します。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>The third command gets the changeable properties of all objects in your Windows PowerShell session.</source>
          <target state="translated">3 番目のコマンドは、Windows PowerShell セッションのすべてのオブジェクトについて、変更可能なプロパティを取得します。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Example 8: Get members of each item in a collection</source>
          <target state="translated">例 8: コレクション内の各アイテムのメンバーを取得します。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>This example shows how the <bpt id="p1">*</bpt>InputObject<ept id="p1">*</ept> parameter works in the <bpt id="p2">**</bpt>Get-Member<ept id="p2">**</ept> cmdlet.</source>
          <target state="translated">この例では、どのように <bpt id="p1">*</bpt>InputObject<ept id="p1">*</ept> パラメータの機能、 <bpt id="p2">**</bpt>Get-member<ept id="p2">**</ept> コマンドレットです。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>When you use the <bpt id="p1">*</bpt>InputObject<ept id="p1">*</ept> parameter to get the members of a collection, <bpt id="p2">**</bpt>Get-Member<ept id="p2">**</ept> gets the members of the collection.</source>
          <target state="translated">使用すると、 <bpt id="p1">*</bpt>InputObject<ept id="p1">*</ept> 、コレクションのメンバーを取得するパラメーター <bpt id="p2">**</bpt>Get-member<ept id="p2">**</ept> コレクションのメンバーを取得します。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>When you pipe a collection of objects to <bpt id="p1">**</bpt>Get-Member<ept id="p1">**</ept>, <bpt id="p2">**</bpt>Get-Member<ept id="p2">**</ept> gets the members of each item in the collection.</source>
          <target state="translated">オブジェクトのコレクションをパイプする <bpt id="p1">**</bpt>Get-member<ept id="p1">**</ept>, 、<bpt id="p2">**</bpt>Get-member<ept id="p2">**</ept> コレクション内の各項目のメンバーを取得します。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>The first command gets the services on the local computer and saves the services in the $S variable.</source>
          <target state="translated">最初のコマンドは、ローカル コンピューターのサービスを取得し、サービスを $S 変数に保存します。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>The second command pipes the $S variable to the <bpt id="p1">**</bpt>Get-Member<ept id="p1">**</ept> cmdlet.</source>
          <target state="translated">2 番目のコマンドは、パイプを使用して、$S 変数に、 <bpt id="p1">**</bpt>Get-member<ept id="p1">**</ept> コマンドレットです。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Get-Member<ept id="p1">**</ept> gets the types of each member of $S and the members of that type.</source>
          <target state="translated"><bpt id="p1">**</bpt>Get-member<ept id="p1">**</ept> $S の各メンバーと、その型のメンバーの型を取得します。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>In this case, it gets ServiceController objects and lists the members, such as RequiredServices and Close.</source>
          <target state="translated">この場合は、ServiceController オブジェクトを取得し、RequiredServices や Close などのメンバーを一覧表示します。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>The third command uses the <bpt id="p1">*</bpt>InputObject<ept id="p1">*</ept> parameter of <bpt id="p2">**</bpt>Get-Member<ept id="p2">**</ept> to submit the $S variable.</source>
          <target state="translated">3 番目のコマンドを使用して、 <bpt id="p1">*</bpt>InputObject<ept id="p1">*</ept> のパラメーター <bpt id="p2">**</bpt>Get-member<ept id="p2">**</ept> を $S 変数に送信します。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Get-Member<ept id="p1">**</ept> gets the type (<bpt id="p2">**</bpt>System.Object<ph id="ph1">\[\]</ph><ept id="p2">**</ept>) and the members of the collection (or array) of <bpt id="p3">**</bpt>ServiceController<ept id="p3">**</ept> objects, such as Count and Clone.</source>
          <target state="translated"><bpt id="p1">**</bpt>Get-member<ept id="p1">**</ept> 型を取得します (<bpt id="p2">**</bpt>System.Object<ph id="ph1">\[\]</ph><ept id="p2">**</ept>) のコレクション (または配列) のメンバーと <bpt id="p3">**</bpt>ServiceController<ept id="p3">**</ept> Count や Clone などのオブジェクト。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>PARAMETERS</source>
          <target state="translated">パラメータ</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>-Force</source>
          <target state="translated">-Force</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>Adds the intrinsic members (PSBase, PSAdapted, PSObject, PSTypeNames) and the compiler-generated get_ and set_ methods to the display.</source>
          <target state="translated">組み込みメンバー (PSBase、PSAdapted、PSObject、PSTypeNames) と、コンパイラで生成された get_ メソッドおよび set_ メソッドを表示に追加します。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>By default, <bpt id="p1">**</bpt>Get-Member<ept id="p1">**</ept> gets these properties in all views other than Base and Adapted, but it does not display them.</source>
          <target state="translated">既定では、 <bpt id="p1">**</bpt>Get-member<ept id="p1">**</ept> 取得ベースおよび Adapted、それ以外のすべてのビューでこれらのプロパティは表示されません。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>The following list describes the properties that are added when you use the <bpt id="p1">*</bpt>Force<ept id="p1">*</ept> parameter:</source>
          <target state="translated">次の一覧を使用する場合に追加されているプロパティの説明、 <bpt id="p1">*</bpt>Force<ept id="p1">*</ept> パラメーター。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>PSBase:  The original properties of the .NET Framework object without extension or adaptation.</source>
          <target state="translated">PSBase: 拡張または適合なしで .NET Framework オブジェクトの元のプロパティです。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>These are the properties defined for the object class and listed in MSDN.</source>
          <target state="translated">これらは、オブジェクト クラスに対して定義されたプロパティで、MSDN に示されています。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>PSAdapted.</source>
          <target state="translated">PSAdapted します。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>The properties and methods defined in the Windows PowerShell extended type system.</source>
          <target state="translated">Windows PowerShell 拡張型システムで定義されているプロパティとメソッド。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>PSExtended.</source>
          <target state="translated">PSExtended します。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>The properties and methods that were added in the Types.ps1xml files or by using the Add-Member cmdlet.</source>
          <target state="translated">Types.ps1xml ファイルで追加されたか、または Add-Member コマンドレットを使用して追加されたプロパティとメソッド。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>PSObject.</source>
          <target state="translated">PSObject します。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>The adapter that converts the base object to a Windows PowerShell<bpt id="p1">**</bpt>PSObject<ept id="p1">**</ept> object.</source>
          <target state="translated">Windows PowerShell にベース オブジェクトを変換するアダプター<bpt id="p1">**</bpt>PSObject<ept id="p1">**</ept> オブジェクトです。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>PSTypeNames.</source>
          <target state="translated">PSTypeNames します。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>A list of object types that describe the object, in order of specificity.</source>
          <target state="translated">オブジェクト特定性の順に記述するオブジェクト型の一覧。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>When formatting the object, Windows PowerShell searches for the types in the Format.ps1xml files in the Windows PowerShell installation directory ($pshome).</source>
          <target state="translated">オブジェクトの書式を設定する場合、Windows PowerShell は、Windows PowerShell のインストール ディレクトリ ($pshome) の Format.ps1xml ファイルにある型を検索します。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>It uses the formatting definition for the first type that it finds.</source>
          <target state="translated">検出した最初の型の書式設定定義を使用します。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>-InputObject</source>
          <target state="translated">-Inputobject</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>Specifies the object whose members are retrieved.</source>
          <target state="translated">取得するメンバーを含んでいるオブジェクトを指定します。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>Using the <bpt id="p1">*</bpt>InputObject<ept id="p1">*</ept> parameter is not the same as piping an object to <bpt id="p2">**</bpt>Get-Member<ept id="p2">**</ept>.</source>
          <target state="translated">使用して、 <bpt id="p1">*</bpt>InputObject<ept id="p1">*</ept> パラメーターは、オブジェクトをパイプ処理と同じではない <bpt id="p2">**</bpt>Get-member<ept id="p2">**</ept>します。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>The differences are as follows:</source>
          <target state="translated">相違点は、次のとおりです。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>When you pipe a collection of objects to <bpt id="p1">**</bpt>Get-Member<ept id="p1">**</ept>, <bpt id="p2">**</bpt>Get-Member<ept id="p2">**</ept> gets the members of the individual objects in the collection, such as the properties of each string in an array of strings.</source>
          <target state="translated">オブジェクトのコレクションをパイプする <bpt id="p1">**</bpt>Get-member<ept id="p1">**</ept>, 、<bpt id="p2">**</bpt>Get-member<ept id="p2">**</ept> 文字列の配列内の各文字列のプロパティなど、コレクション内の個々 のオブジェクトのメンバーを取得します。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>When you use <bpt id="p1">*</bpt>InputObject<ept id="p1">*</ept> to submit a collection of objects, <bpt id="p2">**</bpt>Get-Member<ept id="p2">**</ept> gets the members of the collection, such as the properties of the array in an array of strings.</source>
          <target state="translated">使用すると <bpt id="p1">*</bpt>InputObject<ept id="p1">*</ept> 、オブジェクトのコレクションを送信する <bpt id="p2">**</bpt>Get-member<ept id="p2">**</ept> 文字列の配列の配列のプロパティなど、コレクションのメンバーを取得します。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>-MemberType</source>
          <target state="translated">-MemberType</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>Specifies the member type that this cmdlet gets.</source>
          <target state="translated">このコマンドレットを取得するメンバーの種類を指定します。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>The default is All.</source>
          <target state="translated">既定は [すべて] です。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>The acceptable values for this parameter are:</source>
          <target state="translated">このパラメーターに対して使用できる値:</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>AliasProperty</source>
          <target state="translated">AliasProperty</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>CodeProperty</source>
          <target state="translated">CodeProperty</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>Property</source>
          <target state="translated">プロパティ</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>NoteProperty</source>
          <target state="translated">NoteProperty</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>ScriptProperty</source>
          <target state="translated">ScriptProperty</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>Properties</source>
          <target state="translated">プロパティ</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>PropertySet</source>
          <target state="translated">PropertySet</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>Method</source>
          <target state="translated">方法</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>CodeMethod</source>
          <target state="translated">CodeMethod</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>ScriptMethod</source>
          <target state="translated">ScriptMethod</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>Methods</source>
          <target state="translated">メソッド</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>ParameterizedProperty</source>
          <target state="translated">ParameterizedProperty</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>MemberSet</source>
          <target state="translated">メンバー セット</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>Event</source>
          <target state="translated">イベント</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>Dynamic</source>
          <target state="translated">動的</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>All</source>
          <target state="translated">すべて</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>For information about these values, see PSMemberTypes Enumeration"https://msdn.microsoft.com/en-us/library/system.management.automation.psmembertypes(v=vs.85).aspx (https://msdn.microsoft.com/en-us/library/system.management.automation.psmembertypes(v=vs.85).aspx ) in MSDN.</source>
          <target state="translated">これらの値については、PSMemberTypes 列挙体"https://msdn.microsoft.com/en-us/library/system.management.automation.psmembertypes (v=vs.85).aspx (MSDN で https://msdn.microsoft.com/en-us/library/system.management.automation.psmembertypes (v=vs.85).aspx) を参照してください。。</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>Not all objects have every type of member.</source>
          <target state="translated">すべてのオブジェクトにすべての型のメンバーがあるわけではありません。</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>If you specify a member type that the object does not have, Windows PowerShell returns a null value.</source>
          <target state="translated">オブジェクトにないメンバー型を指定すると、Windows PowerShell は null 値を返します。</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>To get related types of members, such as all extended members, use the <bpt id="p1">*</bpt>View<ept id="p1">*</ept> parameter.</source>
          <target state="translated">関連する種類のすべての拡張メンバーなどのメンバーを取得する、 <bpt id="p1">*</bpt>ビュー<ept id="p1">*</ept> パラメーター。</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>If you use the <bpt id="p1">*</bpt>MemberType<ept id="p1">*</ept> parameter with the <bpt id="p2">*</bpt>Static<ept id="p2">*</ept> or <bpt id="p3">*</bpt>View<ept id="p3">*</ept> parameters, <bpt id="p4">**</bpt>Get-Member<ept id="p4">**</ept> gets the members that belong to both sets.</source>
          <target state="translated">使用する場合、 <bpt id="p1">*</bpt>MemberType<ept id="p1">*</ept> を持つパラメーター、 <bpt id="p2">*</bpt>静的<ept id="p2">*</ept> または <bpt id="p3">*</bpt>ビュー<ept id="p3">*</ept> パラメーター <bpt id="p4">**</bpt>Get-member<ept id="p4">**</ept> 両方のセットに属するメンバーを取得します。</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>-Name</source>
          <target state="translated">-Name</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>Specifies the names of one or more properties or methods of the object.</source>
          <target state="translated">オブジェクトの 1 つまたは複数のプロパティまたはメソッドの名前を指定します。</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Get-Member<ept id="p1">**</ept> gets only the specified properties and methods.</source>
          <target state="translated"><bpt id="p1">**</bpt>Get-member<ept id="p1">**</ept> 指定されたプロパティおよびメソッドのみを取得します。</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>If you use the <bpt id="p1">*</bpt>Name<ept id="p1">*</ept> parameter with the <bpt id="p2">*</bpt>MemberType<ept id="p2">*</ept>, <bpt id="p3">*</bpt>View<ept id="p3">*</ept>, or <bpt id="p4">*</bpt>Static<ept id="p4">*</ept> parameter, <bpt id="p5">**</bpt>Get-Member<ept id="p5">**</ept> gets only the members that satisfy the criteria of all parameters.</source>
          <target state="translated">使用する場合、 <bpt id="p1">*</bpt>名<ept id="p1">*</ept> を持つパラメーター、 <bpt id="p2">*</bpt>MemberType<ept id="p2">*</ept>, 、<bpt id="p3">*</bpt>ビュー<ept id="p3">*</ept>, 、または <bpt id="p4">*</bpt>静的<ept id="p4">*</ept> パラメーター、 <bpt id="p5">**</bpt>Get-member<ept id="p5">**</ept> すべてのパラメーターの条件を満たすメンバーだけを取得します。</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>To get a static member by name, use the <bpt id="p1">*</bpt>Static<ept id="p1">*</ept> parameter with the <bpt id="p2">*</bpt>Name<ept id="p2">*</ept> parameter.</source>
          <target state="translated">名前で静的メンバーを取得する、 <bpt id="p1">*</bpt>静的<ept id="p1">*</ept> を持つパラメーター、 <bpt id="p2">*</bpt>名前<ept id="p2">*</ept> パラメーター。</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>-Static</source>
          <target state="translated">-Static</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>Indicates that this cmdlet gets only the static properties and methods of the object.</source>
          <target state="translated">このコマンドレットが静的なプロパティと、オブジェクトのメソッドのみを取得することを示します。</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>Static properties and methods are defined on the class of objects, not on any particular instance of the class.</source>
          <target state="translated">静的プロパティおよびメソッドは、クラスの特定のインスタンスで定義されるのではなく、オブジェクトのクラスで定義されます。</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>If you use the <bpt id="p1">*</bpt>Static<ept id="p1">*</ept> parameter with the <bpt id="p2">*</bpt>View<ept id="p2">*</ept> parameter, the <bpt id="p3">*</bpt>View<ept id="p3">*</ept> parameter is ignored.</source>
          <target state="translated">使用する場合、 <bpt id="p1">*</bpt>静的<ept id="p1">*</ept> を持つパラメーター、 <bpt id="p2">*</bpt>ビュー<ept id="p2">*</ept> 、パラメーター、 <bpt id="p3">*</bpt>ビュー<ept id="p3">*</ept> パラメーターは無視されます。</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>If you use the <bpt id="p1">*</bpt>Static<ept id="p1">*</ept> parameter with the <bpt id="p2">*</bpt>MemberType<ept id="p2">*</ept> parameter, <bpt id="p3">**</bpt>Get-Member<ept id="p3">**</ept> gets only the members that belong to both sets.</source>
          <target state="translated">使用する場合、 <bpt id="p1">*</bpt>静的<ept id="p1">*</ept> を持つパラメーター、 <bpt id="p2">*</bpt>MemberType<ept id="p2">*</ept> パラメーター、 <bpt id="p3">**</bpt>Get-member<ept id="p3">**</ept> 両方のセットに属するメンバーのみを取得します。</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>-View</source>
          <target state="translated">ビュー</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>Specifies that this cmdlet gets only particular types properties and methods.</source>
          <target state="translated">このコマンドレットは取得のみ特定の種類のプロパティとメソッドを指定します。</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>Specify one or more of the values.</source>
          <target state="translated">1 つまたは複数の値を指定します。</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>The default is Adapted, Extended.</source>
          <target state="translated">既定値を適用すると、拡張します。</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>Valid values are:</source>
          <target state="translated">有効な値は、</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>Base.</source>
          <target state="translated">基底クラスです。</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>Gets only the original properties and methods of the .NET Framework object (without extension or adaptation).</source>
          <target state="translated">拡張もアダプターの適用もしていない .NET Framework オブジェクトの元のプロパティおよびメソッドだけを取得します。</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>Adapted.</source>
          <target state="translated">適合します。</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>Gets only the properties and methods defined in the Windows PowerShell extended type system.</source>
          <target state="translated">Windows PowerShell 拡張型システムで定義されたプロパティおよびメソッドだけを取得します。</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>Extended.</source>
          <target state="translated">拡張できます。</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>Gets only the properties and methods that were added in the Types.ps1xml files or by using the Add-Member cmdlet.</source>
          <target state="translated">Types.ps1xml ファイルや Add-Member コマンドレットで追加されたプロパティおよびメソッドだけを取得します。</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>All.</source>
          <target state="translated">すべてです。</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>Gets the members in the Base, Adapted, and Extended views.</source>
          <target state="translated">Base、Adapted、および Extended ビューのメンバーを取得します。</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">*</bpt>View<ept id="p1">*</ept> parameter determines the members retrieved, not just the display of those members.</source>
          <target state="translated"> <bpt id="p1">*</bpt>ビュー<ept id="p1">*</ept> メンバーの取得、それらのメンバーの表示だけでなくパラメーターによって決まります。</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>To get particular member types, such as script properties, use the <bpt id="p1">*</bpt>MemberType<ept id="p1">*</ept> parameter.</source>
          <target state="translated">スクリプトのプロパティなどの特定のメンバーの型を取得する、 <bpt id="p1">*</bpt>MemberType<ept id="p1">*</ept> パラメーター。</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>If you use the <bpt id="p1">*</bpt>MemberType<ept id="p1">*</ept> and <bpt id="p2">*</bpt>View<ept id="p2">*</ept> parameters in the same command, <bpt id="p3">**</bpt>Get-Member<ept id="p3">**</ept> gets the members that belong to both sets.</source>
          <target state="translated">使用する場合、 <bpt id="p1">*</bpt>MemberType<ept id="p1">*</ept> と <bpt id="p2">*</bpt>ビュー<ept id="p2">*</ept> パラメーターを同じコマンドで <bpt id="p3">**</bpt>Get-member<ept id="p3">**</ept> 両方のセットに属するメンバーを取得します。</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>If you use the <bpt id="p1">*</bpt>Static<ept id="p1">*</ept> and <bpt id="p2">*</bpt>View<ept id="p2">*</ept> parameters in the same command, the <bpt id="p3">*</bpt>View<ept id="p3">*</ept> parameter is ignored.</source>
          <target state="translated">使用する場合、 <bpt id="p1">*</bpt>静的<ept id="p1">*</ept> と <bpt id="p2">*</bpt>ビュー<ept id="p2">*</ept> パラメーターを同じコマンドで、 <bpt id="p3">*</bpt>ビュー<ept id="p3">*</ept> パラメーターは無視されます。</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>CommonParameters</source>
          <target state="translated">CommonParameters</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutVariable, -OutBuffer, -PipelineVariable, -Verbose, -WarningAction, and -WarningVariable.</source>
          <target state="translated">このコマンドレットは、共通のパラメーターをサポートしています:-デバッグ、-erroraction、-errorvariable、- InformationAction-InformationVariable、- OutVariable、-OutBuffer、- PipelineVariable、- Verbose、および - WarningVariable です。</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>For more information, see about_CommonParameters (http://go.microsoft.com/fwlink/?LinkID=113216).</source>
          <target state="translated">詳細については、about_CommonParameters (http://go.microsoft.com/fwlink/?LinkID=113216) を参照してください。</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>INPUTS</source>
          <target state="translated">入力</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>System.Management.Automation.PSObject</source>
          <target state="translated">System.Management.Automation.PSObject</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source>You can pipe any object to <bpt id="p1">**</bpt>Get-Member<ept id="p1">**</ept>.</source>
          <target state="translated">任意のオブジェクトをパイプ処理できます <bpt id="p1">**</bpt>Get-member<ept id="p1">**</ept>します。</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source>OUTPUTS</source>
          <target state="translated">出力</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source>Microsoft.PowerShell.Commands.MemberDefinition</source>
          <target state="translated">修正された Microsoft.PowerShell.Commands.MemberDefinition</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Get-Member<ept id="p1">**</ept> returns an object for each property or method that its gets.</source>
          <target state="translated"><bpt id="p1">**</bpt>Get-member<ept id="p1">**</ept> プロパティまたはメソッドごとにオブジェクトを取得、取得します。</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source>NOTES</source>
          <target state="translated">ノート</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source>You can get information about a collection object either by using the <bpt id="p1">*</bpt>InputObject<ept id="p1">*</ept> parameter or by piping the object, preceded by a comma, to <bpt id="p2">**</bpt>Get-Member<ept id="p2">**</ept>.</source>
          <target state="translated">使用するか、コレクション オブジェクトに関する情報を取得できる、 <bpt id="p1">*</bpt>InputObject<ept id="p1">*</ept> パラメーターまたはする前にコンマでは、オブジェクトをパイプ <bpt id="p2">**</bpt>Get-member<ept id="p2">**</ept>します。</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve">
          <source>You can use the $This automatic variable in script blocks that define the values of new properties and methods.</source>
          <target state="translated">$This 自動変数は、新しいプロパティとメソッドの値を定義するスクリプト ブロックで使用できます。</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source>The $This variable refers to the instance of the object to which the properties and methods are being added.</source>
          <target state="translated">$この変数は、プロパティとメソッドが追加するオブジェクトのインスタンスを参照します。</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source>For more information about the $This variable, see about_Automatic_Variables.</source>
          <target state="translated">詳細については、この変数 $、about_automatic_variables」を参照してください。</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source>RELATED LINKS</source>
          <target state="translated">関連リンク</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve">
          <source>Add-Member</source>
          <target state="translated">Add-Member</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve">
          <source>Get-Command</source>
          <target state="translated">Get-Command</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve">
          <source>Get-Help</source>
          <target state="translated">Get-Help</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve">
          <source>Get-PSDrive</source>
          <target state="translated">Get-PSDrive</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve">
          <source>about_Automatic_Variables</source>
          <target state="translated">about_Automatic_Variables</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve">
          <source>about_Properties</source>
          <target state="translated">about_Properties</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve">
          <source>about_Methods</source>
          <target state="translated">about_Methods</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve">
          <source>about_Objects</source>
          <target state="translated">about_Objects</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>