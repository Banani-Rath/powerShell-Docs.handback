<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-1c394fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">32bf1aef1b22d0413f61efec691f0d36334226a5</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">reference\4.0\Microsoft.PowerShell.Core\About\about_Functions_Advanced_Methods.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions" />
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">49ea43b8b67c4cd7906a28786d3f14f5a8930ee6</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">294970e4933f8adf1d5433b9aa6f18fa4909d80f</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>about_Functions_Advanced_Methods</source>
          <target state="translated">about_Functions_Advanced_Methods</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>powershell, cmdlet</source>
          <target state="translated">powershell コマンドレット</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>About Functions Advanced Methods</source>
          <target state="translated">メソッドを高度な関数について</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>about_Functions_Advanced_Methods</source>
          <target state="translated">about_Functions_Advanced_Methods</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>TOPIC</source>
          <target state="translated">トピック</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>about_Functions_Advanced_Methods</source>
          <target state="translated">about_Functions_Advanced_Methods</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>SHORT DESCRIPTION</source>
          <target state="translated">概要</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Describes how functions that specify the CmdletBinding attribute can use the methods and properties that are available to compiled cmdlets.</source>
          <target state="translated">CmdletBinding 属性を使用できるメソッドとプロパティに使用できる関数がコマンドレットをコンパイルする方法について説明します。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>LONG DESCRIPTION</source>
          <target state="translated">詳細説明</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Functions that specify the CmdletBinding attribute can access a number of methods and properties through the $pscmdlet variable.</source>
          <target state="translated">CmdletBinding 属性を指定する関数は、メソッドとプロパティの数を $pscmdlet 変数でアクセスできます。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>These methods include the following methods:</source>
          <target state="translated">これらの方法では、次の方法があります。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Input-processing methods that compiled cmdlets use to do their work.</source>
          <target state="translated">コマンドレットをコンパイルされた入力処理メソッドは、作業に使用します。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>The ShouldProcess and ShouldContinue methods that are used to get user feedback before an action is performed.</source>
          <target state="translated">ShouldProcess と ShouldContinue メソッド、アクションが実行される前に、ユーザーからのフィードバックを取得するために使用します。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>The ThrowTerminatingError method for generating error records.</source>
          <target state="translated">エラー レコードを生成するため ThrowTerminatingError メソッド。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Several Write methods that return different types of output.</source>
          <target state="translated">さまざまな種類の出力を返すいくつかの書き込み方法です。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>All the methods and properties of the PSCmdlet class are available to advanced functions.</source>
          <target state="translated">すべてのメソッドと PSCmdlet クラスのプロパティは、高度な関数に使用できるのです。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>For more information about these methods and properties, see System.Management.Automation.PSCmdlet in the MSDN (Microsoft Developer Network) library at http://go.microsoft.com/fwlink/?LinkId=142139.</source>
          <target state="translated">これらのメソッドとプロパティの詳細については、MSDN (Microsoft Developer Network) ライブラリ http://go.microsoft.com/fwlink/?LinkId=142139 で System.Management.Automation.PSCmdlet を参照してください。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Input Processing Methods</source>
          <target state="translated">入力処理メソッド</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>The methods described in this section are referred to as the input processing methods.</source>
          <target state="translated">このセクションで説明したメソッドは、入力処理メソッドとして参照します。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>For functions, these three methods are represented by the Begin, Process, and End blocks of the function.</source>
          <target state="translated">関数では、3 つの方法は、関数の開始、プロセス、および End ブロックによって表されます。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Each function must include one or more of these blocks.</source>
          <target state="translated">各関数は、これらのブロックの 1 つ以上含める必要があります。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>The Windows PowerShell runtime uses the code within these blocks when it is running a function.</source>
          <target state="translated">Windows PowerShell ランタイムは、関数の実行時に、これらのブロック内のコードを使用します。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>(These blocks are also available to functions that do not use the CmdletBinding attribute.)</source>
          <target state="translated">(これらのブロックは、CmdletBinding 属性を使用して関数に使用できるも)。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Begin This block is used to provide optional one-time preprocessing for the function.</source>
          <target state="translated">開始ブロックは、関数の省略可能な 1 回限り前処理に使用されます。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>The Windows PowerShell runtime uses the code in this block one time for each instance of the function in the pipeline.</source>
          <target state="translated">Windows PowerShell ランタイムは、パイプライン内の関数のインスタンスごとに 1 回、このブロックでは、コードを使用します。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Process This block is used to provide record-by-record processing for the function.</source>
          <target state="translated">プロセスのこのブロックは、関数のレコードの処理を提供に使用されます。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>This block might be used any number of times, or not at all, depending on the input to the function.</source>
          <target state="translated">このブロックがあります回数、またはまったくない関数への入力に応じて任意の数を使用します。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>For example, if the function is the first command in the pipeline, the Process block will be used one time.</source>
          <target state="translated">たとえば、関数が、パイプラインの最初のコマンドの場合、Process ブロックは一度使用できません。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>If the function is not the first command in the pipeline, the Process block is used one time for every input that the function receives from the pipeline.</source>
          <target state="translated">関数は、パイプラインの最初のコマンドではありません、Process ブロックは、関数は、パイプラインから受信するすべての入力に 1 回使用されます。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>If there is no pipeline input, the Process block is not used.</source>
          <target state="translated">パイプラインの入力がない場合は、Process ブロックは使用されません。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>This block must be defined if a function parameter is set to accept pipeline input.</source>
          <target state="translated">パイプラインの入力を受け付ける関数のパラメーターが設定されている場合は、このブロックを定義する必要があります。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>If this block is not defined and the parameter accepts input from the pipeline, the function will miss the values that are passed to the function through the pipeline.</source>
          <target state="translated">このブロックが定義されていないパラメーターが、パイプラインからの入力を受け取る場合は、関数には、パイプラインを介して関数に渡される値と得られません。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Also, when the function supports confirmation requests (when the SupportsShouldProcess parameter of the Parameter attribute is set to $True), the call to the ShouldProcess method must be made from within the Process block.</source>
          <target state="translated">関数は、(パラメーターの属性の SupportsShouldProcess パラメーターが $True に設定) 場合、確認要求をサポートするときに ShouldProcess メソッドの呼び出しをする必要がありますから作成 Process ブロック内で。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>End This block is used to provide optional one-time post-processing for the function.</source>
          <target state="translated">このブロックの終了を使用すると、関数の省略可能な 1 回限りの後処理を提供します。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>The following example shows the outline of a function that contains a Begin block for one-time preprocessing, a Process block for multiple record processing, and an End block for one-time post-processing.</source>
          <target state="translated">次の例では、1 回限りの前処理の Begin ブロック、処理、複数のレコードの処理ブロックおよび 1 回限りの処理の後に、End ブロックを含む関数の概要を示します。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Function Test-ScriptCmdlet { [CmdletBinding(SupportsShouldProcess=$True)] Param ($Parameter1) Begin{} Process{} End{} }</source>
          <target state="translated">機能テスト ScriptCmdlet {[CmdletBinding(SupportsShouldProcess=$True)] パラメーター (Parameter1 ドル) 開始 {} プロセス {} 終了 {}}</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Confirmation Methods</source>
          <target state="translated">確認方法</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>ShouldProcess This method is called to request confirmation from the user before the function performs an action that would change the system.</source>
          <target state="translated">ShouldProcess このメソッドは、関数は、システムを変更する操作を実行する前に、ユーザーに確認を要求すると呼ばれます。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>The function can continue based on the Boolean value returned by the method.</source>
          <target state="translated">関数は、このメソッドによって返されるブール値に基づいて続行できます。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>This method can be called only from within the Process{} block of the function.</source>
          <target state="translated">このメソッドは、関数の Process {} ブロック内からのみ呼び出すことができます。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>And, the CmdletBinding attribute must declare that the function supports ShouldProcess (as shown in the previous example).</source>
          <target state="translated">また、(前の例で示す) ように、関数が ShouldProcess をサポートしている CmdletBinding 属性を宣言する必要があります。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>For more information about this method, see System.Management.Automation.Cmdlet.ShouldProcess in the MSDN library at http://go.microsoft.com/fwlink/?LinkId=142142.</source>
          <target state="translated">この方法の詳細については、MSDN ライブラリ http://go.microsoft.com/fwlink/?LinkId=142142 で System.Management.Automation.Cmdlet.ShouldProcess を参照してください。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>For more information about how to request confirmation, see "Requesting Confirmation" in the MSDN library at http://go.microsoft.com/fwlink/?LinkID=136658.</source>
          <target state="translated">確認を要求する方法の詳細については、MSDN ライブラリ http://go.microsoft.com/fwlink/?LinkID=136658 で「確認の要求」を参照してください。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>ShouldContinue This method is called to request a second confirmation message.</source>
          <target state="translated">ShouldContinue このメソッドは、2 番目の確認メッセージを要求すると呼ばれます。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>It should be called when the ShouldProcess method returns $true.</source>
          <target state="translated">$True を ShouldProcess メソッドが戻るときに呼び出す必要があります。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>For more information about this method, see System.Management.Automation.Cmdlet.ShouldContinue in the MSDN library at http://go.microsoft.com/fwlink/?LinkId=142143.</source>
          <target state="translated">この方法の詳細については、MSDN ライブラリ http://go.microsoft.com/fwlink/?LinkId=142143 で System.Management.Automation.Cmdlet.ShouldContinue を参照してください。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Error Methods</source>
          <target state="translated">エラー メソッド</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Functions can call two different methods when errors occur.</source>
          <target state="translated">関数は、エラーが発生したときに、2 つの異なるメソッドを呼び出すことができます。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>When a nonterminating error occurs, the function should call the WriteError method, which is described in the "Write Methods" section.</source>
          <target state="translated">終わらないエラーが発生したときに、関数は「メソッドの記述」セクションで説明されている WriteError メソッドを呼び出す必要があります。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>When a terminating error occurs and the function cannot continue, it should call the ThrowTerminatingError method.</source>
          <target state="translated">終了エラーが発生して、関数を続行できません、ThrowTerminatingError メソッドを呼び出す必要があります。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>You can also use the Throw statement for terminating errors and the Write-Error cmdlet for nonterminating errors.</source>
          <target state="translated">また、終わらないエラーの終了するエラーの Throw ステートメントおよび書き込みエラー コマンドレットを使用することができます。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>For more information, see System.Management.Automation.Cmdlet.</source>
          <target state="translated">詳細については、System.Management.Automation.Cmdlet を参照してください。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>ThrowTerminatingError in the MSDN libray at http://go.microsoft.com/fwlink/?LinkId=142144.</source>
          <target state="translated">ThrowTerminatingError http://go.microsoft.com/fwlink/?LinkId=142144 でライブラリの msdn に掲載されています。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Write Methods</source>
          <target state="translated">書き込みメソッド</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>A function can call the following methods to return different types of output.</source>
          <target state="translated">関数は、さまざまな種類の出力を返すには、次のメソッドを呼び出すことができます。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>Notice that not all the output goes to the next command in the pipeline.</source>
          <target state="translated">すべての出力がパイプラインの次のコマンドになることに注意してください。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>You can also use the various Write cmdlets, such as Write-Error.</source>
          <target state="translated">また、書き込みエラーなど、さまざまな書き込みコマンドレットを使用することができます。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>WriteCommandDetail For information about the WriteCommandDetails method, see System.Management.Automation.Cmdlet.WriteCommandDetail in the MSDN library at http://go.microsoft.com/fwlink/?LinkId=142155.</source>
          <target state="translated">WriteCommandDetail WriteCommandDetails メソッドの詳細については、MSDN ライブラリ http://go.microsoft.com/fwlink/?LinkId=142155 で System.Management.Automation.Cmdlet.WriteCommandDetail を参照してください。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>WriteDebug To provide information that can be used to troubleshoot a function, make the function call the WriteDebug method.</source>
          <target state="translated">WriteDebug するには、関数のトラブルシューティングを行う、WriteDebug メソッドを呼び出す関数の作成に使用できる情報を指定します。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>This displays debug messages to the user.</source>
          <target state="translated">これには、ユーザーにデバッグ メッセージが表示されます。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>For more information, see System.Management.Automation.Cmdlet.WriteDebug in the MSDN library at http://go.microsoft.com/fwlink/?LinkId=142156.</source>
          <target state="translated">詳細については、MSDN ライブラリ http://go.microsoft.com/fwlink/?LinkId=142156 で System.Management.Automation.Cmdlet.WriteDebug を参照してください。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>WriteError Functions should call this method when nonterminating errors occur and the function is designed to continue processing records.</source>
          <target state="translated">WriteError 関数は終わらないエラーが発生した日時、関数がレコードの処理を続行するように設計、このメソッドを呼び出す必要があります。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>For more information, see System.Management.Automation.Cmdlet.WriteError in the MSDN library at http://go.microsoft.com/fwlink/?LinkId=142157.</source>
          <target state="translated">詳細については、MSDN ライブラリ http://go.microsoft.com/fwlink/?LinkId=142157 で System.Management.Automation.Cmdlet.WriteError を参照してください。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>Note: If a terminating error occurs, the function should call the ThrowTerminatingError method.</source>
          <target state="translated">注: 終了エラーが発生した場合、関数はメソッドを呼び出す ThrowTerminatingError します。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>WriteObject This method allows the function to send an object to the next command in the pipeline.</source>
          <target state="translated">WriteObject をこのメソッドにより、次のコマンドにパイプラインにオブジェクトを送信します。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>In most cases, this is the method to use when the function returns data.</source>
          <target state="translated">ほとんどの場合、これは、関数がデータを返す場合に使用する方法です。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>For more information, see System.Management.Automation.PSCmdlet.WriteObject in the MSDN library at http://go.microsoft.com/fwlink/?LinkId=142158.</source>
          <target state="translated">詳細については、MSDN ライブラリ http://go.microsoft.com/fwlink/?LinkId=142158 で System.Management.Automation.PSCmdlet.WriteObject を参照してください。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>WriteProgress For functions whose actions take a long time to complete, this method allows the function to call the WriteProgress method so that progress information is displayed.</source>
          <target state="translated">WriteProgress の関数が操作を完了する時間がかかる、このメソッドに進行状況に関する情報が表示されるように、WriteProgress メソッドを呼び出す関数を使用します。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>For example, you can display the percent completed.</source>
          <target state="translated">たとえば、割合を表示できますが完了します。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>For more information, see System.Management.Automation.PSCmdlet.WriteProgress in the MSDN library at http://go.microsoft.com/fwlink/?LinkId=142160.</source>
          <target state="translated">詳細については、MSDN ライブラリ http://go.microsoft.com/fwlink/?LinkId=142160 で System.Management.Automation.PSCmdlet.WriteProgress を参照してください。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>WriteVerbose To provide detailed information about what the function is doing, make the function call the WriteVerbose method to display verbose messages to the user.</source>
          <target state="translated">WriteVerbose 関数の実行内容に関する詳細情報は、メソッドを呼び出して、WriteVerbose をユーザーに詳細メッセージを表示する関数。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>By default, verbose messages are not displayed.</source>
          <target state="translated">既定では、詳細メッセージは表示されません。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>For more information, see System.Management.Automation.PSCmdlet.WriteVerbose in the MSDN library at http://go.microsoft.com/fwlink/?LinkId=142162.</source>
          <target state="translated">詳細については、MSDN ライブラリ http://go.microsoft.com/fwlink/?LinkId=142162 で System.Management.Automation.PSCmdlet.WriteVerbose を参照してください。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>WriteWarning To provide information about conditions that may cause unexpected results, make the function call the WriteWarning method to display warning messages to the user.</source>
          <target state="translated">WriteWarning に予期しない結果になる場合があります、関数のメソッドを呼び出して、WriteWarning をユーザーに警告メッセージを表示する状態に関する情報を提供します。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>By default, warning messages are displayed.</source>
          <target state="translated">既定では、警告メッセージが表示されます。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>For more information, see System.Management.Automation.PSCmdlet.WriteWarning in the MSDN library at http://go.microsoft.com/fwlink/?LinkId=142164.</source>
          <target state="translated">詳細については、MSDN ライブラリ http://go.microsoft.com/fwlink/?LinkId=142164 で System.Management.Automation.PSCmdlet.WriteWarning を参照してください。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>Note: You can also display warning messages by configuring the WarningPreference variable or by using the Verbose and Debug command-line options.</source>
          <target state="translated">注: WarningPreference 変数を構成することによって、または、Verbose および Debug のコマンド ライン オプションを使用して、警告メッセージを表示することができますもします。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>Other Methods and Properties</source>
          <target state="translated">その他のメソッドとプロパティ</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>For information about the other methods and properties that can be accessed through the $PSCmdlet variable, see System.Management.Automation.PSCmdlet in the MSDN library at http://go.microsoft.com/fwlink/?LinkId=142139.</source>
          <target state="translated">その他のメソッドと $PSCmdlet 変数でアクセスできるプロパティについては、MSDN ライブラリ http://go.microsoft.com/fwlink/?LinkId=142139 で System.Management.Automation.PSCmdlet を参照してください。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>For example, the ParameterSetName property allows you to see the parameter set that is being used.</source>
          <target state="translated">たとえば、プロパティを使用すると、このパラメーターを設定するを参照してください。 ParameterSetName が使用されています。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>Parameter sets allow you to create a function that performs different tasks based on the parameters that are specified when the function is run.</source>
          <target state="translated">パラメーターのセットを使用すると、関数の実行時に指定されたパラメーターに基づいて異なるタスクを実行する関数を作成できます。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>SEE ALSO</source>
          <target state="translated">関連項目</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>about_Functions about_Functions_Advanced about_Functions_Advanced_Parameters about_Functions_CmdletBindingAttribute about_Functions_OutputTypeAttribute</source>
          <target state="translated">about_Functions about_Functions_Advanced 指示 about_Functions_CmdletBindingAttribute about_Functions_OutputTypeAttribute</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>