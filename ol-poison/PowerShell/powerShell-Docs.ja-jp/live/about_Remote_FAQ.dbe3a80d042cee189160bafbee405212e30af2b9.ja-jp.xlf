<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-1c394fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f53f1295a0d123e3e60a2b611d8ca034b6d219cb</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">reference\5.0\Microsoft.PowerShell.Core\About\about_Remote_FAQ.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions" />
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">64af860adec9cbc42394cd21be3c0a9f0757050c</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">7607950f50f874e9e3cf194b6e60ff2432861c07</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>about_Remote_FAQ</source>
          <target state="translated">about_Remote_FAQ</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>powershell, cmdlet</source>
          <target state="translated">powershell コマンドレット</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>About Remote FAQ</source>
          <target state="translated">about_Remote_FAQ</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>about_Remote_FAQ</source>
          <target state="translated">about_Remote_FAQ</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>about_Remote_FAQ</source>
          <target state="translated">about_Remote_FAQ</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>SHORT DESCRIPTION</source>
          <target state="translated">概要</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Contains questions and answers about running remote commands in  Windows PowerShell�.</source>
          <target state="translated">Windows PowerShell のリモート コマンドの実行に関する質問と回答が含まれています。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>LONG DESCRIPTION</source>
          <target state="translated">詳細説明</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>When you work remotely, you type commands in  Windows PowerShell on one computer (known as the "local computer"), but the commands run on another computer (known as the "remote computer").</source>
          <target state="translated">リモートで作業するときに、(「ローカル コンピューター」と呼ばれます)、1 台のコンピューターで Windows PowerShell のコマンドを入力するが、(「リモートのコンピューター」と呼ばれます) の別のコンピューターでコマンドを実行します。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The experience of working remotely should be as much like working directly at the remote computer as possible.</source>
          <target state="translated">離れた場所でのエクスペリエンスが可能なリモート コンピューターで直接作業のように多くあります。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>MUST BOTH COMPUTERS HAVE WINDOWS POWERSHELL INSTALLED?</source>
          <target state="translated">WINDOWS POWERSHELL をインストールを両方のコンピューターがある必要がありますか。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Yes.</source>
          <target state="translated">対応</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>To work remotely, the local and remote computers must have  Windows PowerShell, the Microsoft .NET Framework, and the Web Services for Management (WS-Management) protocol.</source>
          <target state="translated">リモートで作業をローカルおよびリモート コンピューターは、Windows PowerShell、Microsoft .NET Framework および管理 (Ws-management) プロトコル用の Web サービスが必要です。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Any files and other resources that are needed to execute a particular command must be on the remote computer.</source>
          <target state="translated">すべてのファイルと特定のコマンドを実行するために必要なその他のリソースは、リモート コンピューターでなければなりません。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Computers running  Windows PowerShell 3.0 and computers running  Windows PowerShell 2.0 can connect to each other remotely and run remote commands.</source>
          <target state="translated">Windows PowerShell 3.0 を実行しているコンピューターと Windows PowerShell 2.0 を実行しているコンピューターはリモートで相互に接続し、リモート コマンドを実行します。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>However, some features, such as the ability to disconnect from a session and reconnect to it, work only when both computers are running  Windows PowerShell 3.0.</source>
          <target state="translated">ただし、セッションから切断して再接続して、機能など、一部の機能は、両方のコンピューターが実行中にのみ Windows PowerShell 3.0 を使用します。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>You must have permission to connect to the remote computer, permission to run  Windows PowerShell, and permission to access data stores (such as files and folders), and the registry on the remote computer.</source>
          <target state="translated">リモート コンピューターに接続する権限や Windows PowerShell を実行するアクセス許可 (ファイルおよびフォルダー) などのデータ ストアのアクセスとリモート コンピューター上のレジストリのアクセス許可が必要です。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>For more information, see about_Remote_Requirements.</source>
          <target state="translated">詳細については、「about_Remote_Requirements」を参照してください。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>HOW DOES REMOTING WORK?</source>
          <target state="translated">リモート処理のしくみ</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>When you submit a remote command, the command is transmitted across the network to the  Windows PowerShell engine on the remote computer, and it runs in the  Windows PowerShell client on the remote computer.</source>
          <target state="translated">リモート コマンドを送信するときに、コマンドは、リモート コンピューターで Windows PowerShell エンジンにネットワーク経由で送信され、リモート コンピューター上で Windows PowerShell クライアントで実行します。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>The command results are sent back to the local computer and appear in the  Windows PowerShell session on the local computer.</source>
          <target state="translated">コマンドの結果は、ローカル コンピューターに送信され、ローカル コンピューター上の Windows PowerShell セッションに表示されます。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>To transmit the commands and receive the output,  Windows PowerShell uses the WS-Management protocol.</source>
          <target state="translated">コマンドを送信し、出力を受信するのには、Windows PowerShell は、Ws-management プロトコルを使用します。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>For information about the WS-Management protocol, see "WS-Management Protocol" in the MSDN (Microsoft Developer Network) library at http:<ph id="ph1">\/\/</ph>go.microsoft.com<ph id="ph2">\/</ph>fwlink<ph id="ph3">\/</ph>?LinkId<ph id="ph4">\=</ph>144634.</source>
          <target state="translated">Ws-management プロトコルの詳細については、http に、MSDN (Microsoft Developer Network) ライブラリの「Ws-management プロトコル」を参照してください:<ph id="ph1">\/\/</ph>go.microsoft.com<ph id="ph2">\/</ph>fwlink<ph id="ph3">\/</ph>でしょうか。LinkId<ph id="ph4">\=</ph>144634 します。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Beginning in  Windows PowerShell 3.0, remote sessions are stored on the remote computer.</source>
          <target state="translated">Windows PowerShell 3.0 以降では、リモート セッションはリモート コンピューターに格納されます。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>This enables you to disconnect from the session and reconnect from a different session or a different computer without interrupting the commands or losing state.</source>
          <target state="translated">これにより、セッションから切断し、コマンドを中断または状態を失うことがなく別のセッションまたは別のコンピューターから再接続することができます。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>IS WINDOWS POWERSHELL REMOTING SECURE?</source>
          <target state="translated">WINDOWS POWERSHELL リモート処理を安全でしょうか。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>When you connect to a remote computer, the system uses the user name and password credentials on the local computer or the credentials that you supply in the command to log you in to the remote computer.</source>
          <target state="translated">リモート コンピューターに接続する場合は、ローカル コンピューターまたはリモート コンピューターへのログインをコマンドに指定した資格情報のユーザー名とパスワードの資格情報が使用されます。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>The credentials and the rest of the transmission are encrypted.</source>
          <target state="translated">資格情報と、送信の残りの部分が暗号化されます。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>To add additional protection, you can configure the remote computer to use Secure Sockets Layer (SSL) instead of HTTP to listen for Windows Remote Management (WinRM) requests.</source>
          <target state="translated">追加の保護を追加するには、Windows リモート管理 (WinRM) 要求をリッスンする HTTP の代わりに Secure Sockets Layer (SSL) を使用するリモート コンピューターを構成できます。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Then, users can use the UseSSL parameters of the Invoke-Command, New-PSSession, and Enter-PSSession cmdlets when establishing a connection.</source>
          <target state="translated">次に、ユーザーは、接続を確立するときに、Invoke-command、New-pssession、Enter-pssession コマンドレットの UseSSL パラメーターを使用できます。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>This option uses the more secure HTTPS channel instead of HTTP.</source>
          <target state="translated">このオプションは、HTTP ではなくより安全な HTTPS チャネルを使用します。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>DO ALL REMOTE COMMANDS REQUIRE WINDOWS POWERSHELL REMOTING?</source>
          <target state="translated">すべてのリモート コマンドには WINDOWS POWERSHELL リモート処理が必要ですか。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>No.</source>
          <target state="translated">いいえ。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Several cmdlets have a ComputerName parameter that lets you get objects from the remote computer.</source>
          <target state="translated">いくつかのコマンドレットでは、リモート コンピューターからオブジェクトを取得することができます、ComputerName パラメーターがあります。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>These cmdlets do not use  Windows PowerShell remoting.</source>
          <target state="translated">これらのコマンドレットでは、Windows PowerShell リモート処理は使用しないでください。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>So, you can use them on any computer that is running  Windows PowerShell, even if the computer is not configured for  Windows PowerShell remoting or if the computer does not meet the requirements for  Windows PowerShell remoting.</source>
          <target state="translated">そのため、それらをコンピューターが Windows PowerShell リモート処理用に構成されていない場合でも、またはコンピューターが Windows PowerShell リモート処理の要件を満たしていない場合、Windows PowerShell を実行している任意のコンピューターで使用できます。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>These cmdlets include the following cmdlets:</source>
          <target state="translated">これらのコマンドレットには、次のコマンドレットが含まれます。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>To find all the cmdlets with a ComputerName parameter, type:</source>
          <target state="translated">ComputerName パラメーターを持つすべてのコマンドレットを見つけるには、次のように入力します。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>To determine whether the ComputerName parameter of a particular cmdlet requires  Windows PowerShell remoting, see the parameter description.</source>
          <target state="translated">特定のコマンドレットの ComputerName パラメーターに Windows PowerShell リモート処理が必要かどうかを確認するのには、パラメーターの説明を参照してください。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>To display the parameter description, type:</source>
          <target state="translated">パラメーターの説明を表示するには、次のように入力します。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>For example:</source>
          <target state="translated">たとえば、次のように入力します。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>For all other commands, use the Invoke-Command cmdlet.</source>
          <target state="translated">その他のコマンドは、Invoke-command コマンドレットを使用します。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>HOW DO I RUN A COMMAND ON A REMOTE COMPUTER?</source>
          <target state="translated">リモート コンピューターでコマンドを実行する方法</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>To run a command on a remote computer, use the Invoke-Command cmdlet.</source>
          <target state="translated">リモート コンピューターでコマンドを実行するには、Invoke-command コマンドレットを使用します。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Enclose your command in braces ( {} ) to make it a script block.</source>
          <target state="translated">コマンドは、スクリプト ブロックを中かっこ ({}) で囲みます。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Use the ScriptBlock parameter of Invoke-Command to specify the command.</source>
          <target state="translated">コマンドを指定するのにには、Invoke-command の ScriptBlock パラメーターを使用します。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>You can use the ComputerName parameter of Invoke-Command to specify a remote computer.</source>
          <target state="translated">Invoke-command コマンドレットの ComputerName パラメーターを使用して、リモート コンピューターを指定することができます。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Or, you can create a persistent connection to a remote computer (a session) and then use the Session parameter of Invoke-Command to run the command in the session.</source>
          <target state="translated">または、リモート コンピューター (セッション) に永続的な接続を作成して、セッションでコマンドを実行する Invoke-command の Session パラメーターを使用します。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>For example, the following commands run a Get-Process command remotely.</source>
          <target state="translated">たとえば、次のコマンドは Get-process コマンドをリモートから実行します。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>To interrupt a remote command, type CTRL<ph id="ph1">\+</ph>C.</source>
          <target state="translated">リモート コマンドを中断するには、ctrl キーを入力<ph id="ph1">\+</ph>C.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>The interruption request is passed to the remote computer, where it terminates the remote command.</source>
          <target state="translated">中断要求は、リモート コマンドを終了して、リモート コンピューターに渡されます。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>For more information about remote commands, see about_Remote and the Help topics for the cmdlets that support remoting.</source>
          <target state="translated">リモート コマンドの詳細については、about_remote に関するページとリモート処理をサポートするコマンドレットのヘルプ トピックを参照してください。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>CAN I JUST "TELNET INTO" A REMOTE COMPUTER?</source>
          <target state="translated">ジャストできます"TELNET に"リモート コンピューターですか?</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>You can use the Enter-PSSession cmdlet to start an interactive session with a remote computer.</source>
          <target state="translated">Enter-pssession コマンドレットを使用すると、リモート コンピューターで対話型セッションを開始します。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>At the Windows PowerShell prompt, type:</source>
          <target state="translated">Windows PowerShell プロンプトで次のように入力します。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>The command prompt changes to show that you are connected to the remote computer.</source>
          <target state="translated">コマンド プロンプトが変化し、リモート コンピューターに接続されている表示します。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Now, the commands that you type run on the remote computer just as though you typed them directly on the remote computer.</source>
          <target state="translated">これで、入力したコマンドは、リモート コンピューター上で直接入力した場合と同様、リモート コンピューターで実行します。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>To end the interactive session, type:</source>
          <target state="translated">対話型セッションを終了するには、次のように入力します。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>An interactive session is a persistent session that uses the WS-Management protocol.</source>
          <target state="translated">対話型セッションでは、Ws-management プロトコルを使用する永続的なセッションを示します。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>It is not the same as using Telnet, but it provides a similar experience.</source>
          <target state="translated">Telnet を使用する場合と同じことはありませんが、同様のエクスペリエンスを提供します。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>For more information, see Enter-PSSession.</source>
          <target state="translated">詳細については、Enter-pssession を参照してください。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>CAN I CREATE A PERSISTENT CONNECTION?</source>
          <target state="translated">永続的な接続を作成することができますか。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>Yes.</source>
          <target state="translated">対応</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>You can run remote commands by specifying the name of the remote computer, its NetBIOS name, or its IP address.</source>
          <target state="translated">リモート コマンドを実行するには、リモート コンピューターの名前、その NetBIOS 名または IP アドレスを指定します。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>Or, you can run remote commands by specifying a  Windows PowerShell session (PSSession) that is connected to the remote computer.</source>
          <target state="translated">または、リモート コンピューターに接続されている Windows PowerShell セッション (PSSession) を指定することでリモート コマンドを実行することができます。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>When you use the ComputerName parameter of Invoke-Command or Enter-PSSession,  Windows PowerShell establishes a temporary connection.</source>
          <target state="translated">Invoke-command または Enter-pssession の ComputerName パラメーターを使用すると、Windows PowerShell は、一時的な接続を確立します。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>Windows PowerShell uses the connection to run only the current command, and then it closes the connection.</source>
          <target state="translated">Windows PowerShell では、接続を使用して、現在のコマンドのみを実行し、後の接続を閉じます。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>This is a very efficient method for running a single command or several unrelated commands, even on many remote computers.</source>
          <target state="translated">これは、1 つのコマンドを実行するための非常に効率的な方法またはコマンドの多くのリモート コンピューターであっても、いくつかとは無関係です。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>When you use the New-PSSession cmdlet to create a PSSession,  Windows PowerShell establishes a persistent connection for the PSSession.</source>
          <target state="translated">PSSession を作成、New-pssession コマンドレットを使用すると、Windows PowerShell は、PSSession の永続的な接続を確立します。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>Then, you can run multiple commands in the PSSession, including commands that share data.</source>
          <target state="translated">次に、データを共有するコマンドを含む PSSession で複数のコマンドを実行できます。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>Typically, you create a PSSession to run a series of related commands that share data.</source>
          <target state="translated">通常、一連のデータを共有する関連のコマンドを実行する PSSession を作成します。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>Otherwise, the temporary connection created by the ComputerName parameter is sufficient for most commands.</source>
          <target state="translated">それ以外の場合、ComputerName パラメーターによって作成された一時的な接続は、ほとんどのコマンドに対して十分です。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>For more information about sessions, see about_PSSessions.</source>
          <target state="translated">セッションの詳細については、「about_PSSessions を参照してください。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>CAN I RUN COMMANDS ON MORE THAN ONE COMPUTER AT A TIME?</source>
          <target state="translated">コマンドの実行 2 つ以上のコンピューターに一度にでしょうか。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>Yes.</source>
          <target state="translated">対応</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>The ComputerName parameter of the Invoke-Command cmdlet accepts multiple computer names, and the Session parameter accepts multiple PSSessions.</source>
          <target state="translated">Invoke-command コマンドレットの ComputerName パラメーターが複数のコンピューター名を受け取るし、セッションのパラメーターが複数の Pssession を受け取る。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>When you run an Invoke-Command command,  Windows PowerShell runs the commands on all of the specified computers or in all of the specified PSSessions.</source>
          <target state="translated">Invoke-command コマンドを実行すると、Windows PowerShell は、または、指定した Pssession のすべてのページで、指定したコンピューターのすべてのコマンドを実行します。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>Windows PowerShell can manage hundreds of concurrent remote connections.</source>
          <target state="translated">Windows PowerShell には、数百の同時リモート接続を管理できます。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>However, the number of remote commands that you can send might be limited by the resources of your computer and its capacity to establish and maintain multiple network connections.</source>
          <target state="translated">ただし、送信するリモート コマンドの数は、お使いのコンピューターとその容量を設定し、複数のネットワーク接続の管理のリソースによって制限可能性があります。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>For more information, see the example in the Invoke-Command Help topic.</source>
          <target state="translated">詳細については、Invoke-command コマンドレットのヘルプ トピックの例を参照してください。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>WHERE ARE MY PROFILES?</source>
          <target state="translated">[個人情報の検索</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>Windows PowerShell profiles are not run automatically in remote sessions, so the commands that the profile adds are not present in the session.</source>
          <target state="translated">Windows PowerShell プロファイルが自動的に実行されないリモート セッションで、プロファイルを追加するコマンドがセッションに存在しないようにします。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>In addition, the $profile automatic variable is not populated in remote sessions.</source>
          <target state="translated">さらに、自動変数 $profile は、リモート セッションでは設定されません。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>To run a profile in a session, use the Invoke-Command cmdlet.</source>
          <target state="translated">セッションでプロファイルを実行するには、Invoke-command コマンドレットを使用します。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>For example, the following command runs the CurrentUserCurrentHost profile from the local computer in the session in $s.</source>
          <target state="translated">たとえば、次のコマンドは、$s 内のセッションで、ローカル コンピューターから CurrentUserCurrentHost プロファイルを実行します。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>The following command runs the CurrentUserCurrentHost profile from the remote computer in the session in $s.</source>
          <target state="translated">次のコマンドは、$s 内のセッションで、リモート コンピューターから CurrentUserCurrentHost プロファイルを実行します。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>Because the $profile variable is not populated, the command uses the explicit path to the profile.</source>
          <target state="translated">$Profile 変数が設定されていないため、コマンドは、プロファイルへの明示的なパスを使用します。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>After running this command, the commands that the profile adds to the session are available in $s.</source>
          <target state="translated">このコマンドを実行して、プロファイルによってセッションに追加するコマンドを $s 内で使用できます。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>You can also use a startup script in a session configuration to run a profile in every remote session that uses the session configuration.</source>
          <target state="translated">セッション構成を使用するすべてのリモート セッションでプロファイルを実行するのにセッション構成でスタートアップ スクリプトを使用することもことができます。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>For more information about  Windows PowerShell profiles, see about_Profiles.</source>
          <target state="translated">Windows PowerShell プロファイルの詳細については、about_Profiles を参照してください。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>For more information about session configurations, see Register-PSSessionConfiguration.</source>
          <target state="translated">セッション構成の詳細については、Register-pssessionconfiguration を参照してください。</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>HOW DOES THROTTLING WORK ON REMOTE COMMANDS?</source>
          <target state="translated">リモート コマンドの調整作業をどのようにでしょうか。</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>To help you manage the resources on your local computer,  Windows PowerShell includes a per-command throttling feature that lets you limit the number of concurrent remote connections that are established for each command.</source>
          <target state="translated">ローカル コンピューター上のリソースを管理するために、Windows PowerShell には、コマンドごとに確立されている同時リモート接続の数を制限することができます、コマンドごとの調整機能が含まれています。</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>The default is 32 concurrent connections, but you can use the ThrottleLimit parameters of the cmdlets to set a custom throttle limit for particular commands.</source>
          <target state="translated">既定値は 32 の同時接続が、コマンドレットの ThrottleLimit パラメーターを使用すると、特定のコマンドのカスタムのスロットル制限を設定することができます。</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>When you use the throttling feature, remember that it is applied to each command, not to the entire session or to the computer.</source>
          <target state="translated">調整の機能を使用する場合は、各コマンドに、セッション全体に設定したり、コンピューターを適用には、注意してください。</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>If you are running commands concurrently in several sessions or PSSessions, the number of concurrent connections is the sum of the concurrent connections in all the sessions.</source>
          <target state="translated">同時に複数のセッションや Pssession でコマンドを実行している、すべてのセッションで同時接続の合計が、同時接続の数。</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>To find cmdlets with a ThrottleLimit parameter, type:</source>
          <target state="translated">ThrottleLimit パラメーターを持つコマンドレットを見つけるには、次のように入力します。</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>IS THE OUTPUT OF REMOTE COMMANDS DIFFERENT FROM LOCAL OUTPUT?</source>
          <target state="translated">リモート コマンドの出力はローカルの出力から異なりますか。</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>When you use  Windows PowerShell locally, you send and receive "live" .NET Framework objects; "live" objects are objects that are associated with actual programs or system components.</source>
          <target state="translated">Windows PowerShell をローカルで使用する場合、送受信する .NET Framework オブジェクトの「ライブ」です。「ライブ」オブジェクトは、実際のプログラムやシステム コンポーネントに関連付けられているオブジェクトです。</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>When you invoke the methods or change the properties of live objects, the changes affect the actual program or  component.</source>
          <target state="translated">メソッドを呼び出すことまたはライブ オブジェクトのプロパティを変更するときに、変更は、実際のプログラムまたはコンポーネントに影響します。</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>And, when the properties of a program or component change, the properties of the object that represent them also change.</source>
          <target state="translated">プログラムまたはコンポーネントのプロパティを変更するときにそれらを表すオブジェクトのプロパティを変更したりします。</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>However, because most live objects cannot be transmitted over the network,  Windows PowerShell "serializes" most of the objects sent in remote commands, that is, it converts each object into a series of XML (Constraint Language in XML [CLiXML]) data elements for transmission.</source>
          <target state="translated">ただし、Windows PowerShell「シリアル化」リモート コマンドで送信されるオブジェクトのほとんどするほとんどのライブ オブジェクトは、ネットワーク経由で送信されることはできませんのでは、一連の伝送用の XML (XML [CLiXML] で制約 Language) データ要素に各オブジェクトを変換します。</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>When  Windows PowerShell receives a serialized object, it converts the XML into a deserialized object type.</source>
          <target state="translated">Windows PowerShell は、シリアル化されたオブジェクトを受信した場合、XML を逆シリアル化されたオブジェクトの種類に変換します。</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>The deserialized object is an accurate record of the properties of the program or component at a previous time, but it is no longer "live", that is, it is no longer directly associated with the component.</source>
          <target state="translated">逆シリアル化されたオブジェクトが、前の時間のプログラムまたはコンポーネントのプロパティの正確な記録が不要になった「ライブ」は、コンポーネントに直接関連付けができなくなります。</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>And, the methods are removed because they are no longer effective.</source>
          <target state="translated">メソッドが有効でなくなったために削除されます。</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>Typically, you can use deserialized objects just as you would use live objects, but you must be aware of their limitations.</source>
          <target state="translated">通常は、ライブ オブジェクトを使用すると、その制限事項に注意するくださいと同様に、逆シリアル化されたオブジェクトを使用できます。</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>Also, the objects that are returned by the Invoke-Command cmdlet have additional properties that help you to determine the origin of the command.</source>
          <target state="translated">また、Invoke-command コマンドレットによって返されたオブジェクトには、するコマンドの起点を特定するのに役立つ追加プロパティがあります。</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>Some object types, such as DirectoryInfo objects and GUIDs, are converted back into live objects when they are received.</source>
          <target state="translated">DirectoryInfo オブジェクトと、Guid など、オブジェクトの種類は、受信したときに、ライブ オブジェクトに変換されます。</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>These objects do not need any special handling or formatting.</source>
          <target state="translated">これらのオブジェクトは、特別な処理や書式設定は不要です。</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>For information about interpreting and formatting remote output, see about_Remote_Output.</source>
          <target state="translated">解釈して、リモートの出力を書式設定については、about_Remote_Output を参照してください。</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>CAN I RUN BACKGROUND JOBS REMOTELY?</source>
          <target state="translated">バック グラウンド ジョブをリモートで実行できますか。</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>Yes.</source>
          <target state="translated">対応</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>A  Windows PowerShell background job is a  Windows PowerShell command that runs asynchronously without interacting with the session.</source>
          <target state="translated">Windows PowerShell のバック グラウンド ジョブは、セッションと対話することがなく非同期に実行される Windows PowerShell コマンドです。</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>When you start a background job, the command prompt returns immediately, and you can continue to work in the session while the job runs even if it runs for an extended period of time.</source>
          <target state="translated">バック グラウンド ジョブを開始してすぐに、コマンド プロンプトに戻る一定の時間に実行する場合でも、ジョブの実行中のセッションで作業を進めることができます。</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>You can start a background job even while other commands are running because  background jobs always run asynchronously in a temporary session.</source>
          <target state="translated">その他のコマンドは、一時的なセッションで、バック グラウンド ジョブを非同期的に常に実行されるために実行しているときにも、バック グラウンド ジョブを開始できます。</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>You can run background jobs on a local or remote computer.</source>
          <target state="translated">ローカルまたはリモート コンピューターでバック グラウンド ジョブを実行できます。</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>By default, a background job runs on the local computer.</source>
          <target state="translated">既定では、バック グラウンド ジョブは、ローカル コンピューターで実行されます。</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>However, you can use the AsJob parameter of the Invoke-Command cmdlet to run any remote command as a background job.</source>
          <target state="translated">ただし、Invoke-command コマンドレットの AsJob パラメーターを使用して、バック グラウンド ジョブとしてリモート コマンドを実行することができます。</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>And, you can use Invoke-Command to run a Start-Job command remotely.</source>
          <target state="translated">Invoke-command コマンドレットを使用して Start-job コマンドをリモートで実行することができます。</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>For more information about background jobs in  Windows PowerShell , see about_Jobs and about_Remote_Jobs.</source>
          <target state="translated">Windows PowerShell のバック グラウンド ジョブの詳細については、about_Jobs」および「about_Remote_Jobs を参照してください。</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>CAN I RUN WINDOWS PROGRAMS ON A REMOTE COMPUTER?</source>
          <target state="translated">リモート コンピューター上の WINDOWS プログラムを実行できますか。</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>You can use  Windows PowerShell remote commands to run Windows-based programs on remote computers.</source>
          <target state="translated">Windows PowerShell リモート コマンドを使用すると、リモート コンピューターで Windows ベースのプログラムを実行します。</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>For example, you can run Shutdown.exe or Ipconfig on a remote computer.</source>
          <target state="translated">たとえば、リモート コンピューターでは、Shutdown.exe や Ipconfig を実行できます。</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>However, you cannot use  Windows PowerShell commands to open the user interface for any program on a remote computer.</source>
          <target state="translated">ただし、リモート コンピューター上の任意のプログラムのユーザー インターフェイスを開く、Windows PowerShell コマンドを使用できません。</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>When you start a Windows program on a remote computer, the command is not completed, and the  Windows PowerShell command prompt does not return, until the program is finished or until you press CTRL<ph id="ph1">\+</ph>C to interrupt the command.</source>
          <target state="translated">リモート コンピューターで Windows プログラムを起動し、コマンドが完了するいないと、プログラムが終了するまで、Windows PowerShell コマンド プロンプトは返されませんが、または ctrl キーを押すまで<ph id="ph1">\+</ph>コマンドを中断するには C です。</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>For example, if you run the IpConfig program on a remote computer, the command prompt does not return until IpConfig is completed.</source>
          <target state="translated">たとえば、リモート コンピューターで IpConfig プログラムを実行すると、コマンド プロンプトは IpConfig が完了するまで返されません。</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>If you use remote commands to start a program that has a user interface, the program process starts, but the user interface does not appear.</source>
          <target state="translated">リモート コマンドを使用してプログラムを起動する場合は、プログラムの処理が開始されるのユーザー インターフェイスを持つが、ユーザー インターフェイスが表示されません。</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>The  Windows PowerShell command is not completed, and the command prompt does not return until you stop the program process or until you press CTRL<ph id="ph1">\+</ph>C, which interrupts the command and stops the process.</source>
          <target state="translated">Windows PowerShell コマンドが完了していないと、プログラムのプロセスを停止するまで、または ctrl キーを押してコマンド プロンプトが返されません<ph id="ph1">\+</ph>C では、コマンドを中断し、プロセスを停止します。</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>For example, if you use a  Windows PowerShell command to run Notepad on a remote computer, the Notepad process starts on the remote computer, but the Notepad user interface does not appear.</source>
          <target state="translated">たとえば、Windows PowerShell コマンドを使用してリモート コンピューターでメモ帳を実行する場合は、リモート コンピューター上メモ帳のプロセスが起動しますが、メモ帳のユーザー インターフェイスは表示されません。</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>To interrupt the command and restore the command prompt, press CTRL<ph id="ph1">\+</ph>C.</source>
          <target state="translated">中断コマンドをコマンド プロンプトの復元は、ctrl キーを押して<ph id="ph1">\+</ph>C.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>CAN I LIMIT THE COMMANDS THAT USERS CAN RUN REMOTELY ON MY COMPUTER?</source>
          <target state="translated">ユーザーがコンピューターにリモートで実行できるコマンドを制限することができますか。</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>Yes.</source>
          <target state="translated">対応</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>Every remote session must use one of the session configurations on the remote computer.</source>
          <target state="translated">すべてのリモート セッションは、リモートのコンピューター上のセッション構成のいずれかを使用する必要があります。</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>You can manage the session configurations on your computer (and the permissions to those session configurations) to determine who can run commands remotely on your computer and which commands they can run.</source>
          <target state="translated">リモート管理できますセッション構成お使いのコンピューター (およびこれらのセッション構成へのアクセス許可) コマンドを実行したことを決定する、コンピューターとコマンドを実行できます。</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>A session configuration configures the environment for the session.</source>
          <target state="translated">セッション構成では、セッションの環境を構成します。</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>You can define the configuration by using an assembly that implements a new configuration class or by using a script that runs in the session.</source>
          <target state="translated">新しい構成クラスを実装するアセンブリを使用するか、セッションで実行されるスクリプトを使用して、構成を定義できます。</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>The configuration can determine the commands that are available in the session.</source>
          <target state="translated">構成は、セッションで使用できるコマンドを確認できます。</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>And, the configuration can include settings that protect the computer, such as settings that limit the amount of data that the session can receive remotely in a single object or command.</source>
          <target state="translated">また、構成は、単一のオブジェクトまたはコマンドでセッションがリモートで受信可能なデータの量を制限する設定など、コンピューターの保護設定を含めることができます。</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>You can also specify a security descriptor that determines the permissions that are required to use the configuration.</source>
          <target state="translated">構成を使用するために必要なアクセス許可を決定するセキュリティ記述子を指定することもできます。</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>The Enable-PSRemoting cmdlet creates the default session configurations on your computer: Microsoft.PowerShell, Microsoft.PowerShell.Workflow, and Microsoft.PowerShell32 (64-bit operating systems only).</source>
          <target state="translated">Enable-psremoting コマンドレットはコンピューター内の既定のセッション構成を作成します。 Microsoft.PowerShell、Microsoft.PowerShell.Workflow、および Microsoft.PowerShell32 (64 ビット オペレーティング システムのみ)。</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>Enable-PSRemoting sets the security descriptor for the configuration to allow only members of the Administrators group on your computer to use them.</source>
          <target state="translated">Enable-psremoting は、それらを使用するコンピューターの Administrators グループのメンバーだけを許可するように構成のセキュリティ記述子を設定します。</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source>You can use the session configuration cmdlets to edit the default session configurations, to create new session configurations, and to change the security descriptors of all the session configurations.</source>
          <target state="translated">セッション構成のコマンドレットを使用すると、新しいセッション構成を作成してのに、すべてのセッション構成のセキュリティ記述子を変更するのに、既定のセッション構成を編集します。</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source>Beginning in  Windows PowerShell 3.0, the New-SessionConfigurationFile cmdlet lets you create custom session configurations by using a text file.</source>
          <target state="translated">Windows PowerShell 3.0 以降で、新規 SessionConfigurationFile コマンドレットでは、テキスト ファイルを使用してカスタム セッション構成を作成します。</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source>The file includes options for setting the language mode and for specifying the cmdlets and modules that are available in sessions that use the session configuration.</source>
          <target state="translated">ファイルには、言語モードを設定し、該当するコマンドレットとセッション構成を使用するセッションで使用できるモジュールを指定するためのオプションが含まれています。</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source>When users use the Invoke-Command, New-PSSession, or Enter-PSSession cmdlets, they can use the ConfigurationName parameter to indicate the session configuration that is used for the session.</source>
          <target state="translated">Invoke-command や New-pssession、Enter-pssession コマンドレットを使用時に、セッションに使用するセッション構成を示すために、ConfigurationName パラメーターを使用できます。</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source>And, they can change the default configuration that their sessions use by changing the value of the $PSSessionConfigurationName preference variable in the session.</source>
          <target state="translated">セッションの $PSSessionConfigurationName ユーザー設定変数の値を変更することで、セッションを使用して既定の構成を変更することができます。</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source>For more information about session configurations, see the Help for the session configuration cmdlets.</source>
          <target state="translated">セッション構成の詳細については、セッション構成コマンドレットのヘルプを参照してください。</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve">
          <source>To find the session configuration cmdlets, type:</source>
          <target state="translated">セッション構成のコマンドレットを見つけるには、次のように入力します。</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source>WHAT ARE FAN-IN AND FAN OUT CONFIGURATIONS?</source>
          <target state="translated">ファンインおよびファンアウトの構成とは</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source>The most common  Windows PowerShell remoting scenario involving multiple computers is the one-to-many configuration, in which one local computer (the administrator's computer) runs  Windows PowerShell commands on numerous remote computers.</source>
          <target state="translated">複数のコンピューターに関連する最も一般的な Windows PowerShell リモート処理のシナリオは、1 つのローカル コンピューター (管理者のコンピューター) が多数のリモート コンピューター上の Windows PowerShell コマンドを実行する、一対多の構成です。</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source>This is known as the "fan-out" scenario.</source>
          <target state="translated">これは「ファンアウト」シナリオと呼ばれます。</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve">
          <source>However, in some enterprises, the configuration is many-to-one, where many client computers connect to a single remote computer that is running  Windows PowerShell, such as a file server or a kiosk.</source>
          <target state="translated">ただし、一部の企業で、構成は多対一で多くのクライアント コンピューターは、ファイル サーバーやキオスクなど、Windows PowerShell を実行している 1 台のリモート コンピューターに接続します。</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve">
          <source>This is known as the "fan-in" configuration.</source>
          <target state="translated">これは「ファンイン」構成と呼ばれます。</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve">
          <source>Windows PowerShell remoting supports both fan-out and fan-in configurations.</source>
          <target state="translated">Windows PowerShell リモート処理では、ファンアウトとファンインの両方の構成をサポートします。</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve">
          <source>For the fan-out configuration,  Windows PowerShell uses the Web Services for Management (WS-Management) protocol and the WinRM service that supports the Microsoft implementation of WS-Management.</source>
          <target state="translated">ファンアウト構成では、Windows PowerShell は、Ws-management の Microsoft 実装をサポートする WinRM サービスと Web サービス管理 (Ws-management) プロトコルを使用します。</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve">
          <source>When a local computer connects to a remote computer, WS-Management establishes a connection and uses a plug-in for  Windows PowerShell to start the  Windows PowerShell host process (Wsmprovhost.exe) on the remote computer.</source>
          <target state="translated">ローカル コンピューターは、リモート コンピューターに接続するとき、Ws-management は、接続を確立し、Windows PowerShell 用のプラグインを使用して、リモート コンピューターで Windows PowerShell ホスト プロセス (Wsmprovhost.exe) を開始します。</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve">
          <source>The user can specify an alternate port, an alternate session configuration, and other features to customize the remote connection.</source>
          <target state="translated">ユーザーには、代替ポートを代替のセッション構成、およびリモート接続をカスタマイズするには、その他の機能を指定できます。</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve">
          <source>To support the "fan-in" configuration,  Windows PowerShell uses Internet Information Services (IIS) to host WS-Management, to load the  Windows PowerShell plug-in, and to start  Windows PowerShell.</source>
          <target state="translated">「ファンイン」構成をサポートするには、プラグイン、Windows PowerShell を読み込むと、Windows PowerShell を起動する、Windows PowerShell は、Ws-management のホストにインターネット インフォメーション サービス (IIS) を使用します。</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve">
          <source>In this scenario, instead of starting each  Windows PowerShell session in a separate process, all  Windows PowerShell sessions run in the same host process.</source>
          <target state="translated">別のプロセスで各 Windows PowerShell セッションを開始する代わりに、このシナリオでは、すべての Windows PowerShell セッションは、同じホスト プロセスで実行します。</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve">
          <source>IIS hosting and fan-in remote management is not supported in Windows XP or in Windows Server 2003.</source>
          <target state="translated">Windows XP または Windows Server 2003 では、IIS のホストとファンイン リモート管理はサポートされていません。</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve">
          <source>In a fan-in configuration, the user can specify a connection URI and an HTTP endpoint, including the transport, computer name, port, and application name.</source>
          <target state="translated">ファンインの構成では、ユーザーは接続 URI、トランスポート、コンピューター名、ポート、およびアプリケーション名を含む、HTTP エンドポイントを指定できます。</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve">
          <source>IIS forwards all the requests with a specified application name to the application.</source>
          <target state="translated">IIS では、アプリケーションの指定したアプリケーション名を持つすべての要求を転送します。</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve">
          <source>The default is WS-Management, which can host Windows PowerShell.</source>
          <target state="translated">既定では Ws-management は、Windows PowerShell をホストできます。</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve">
          <source>You can also specify an authentication mechanism and prohibit or allow redirection from HTTP and HTTPS endpoints.</source>
          <target state="translated">認証機構を指定しを禁止するしたり、HTTP および HTTPS のエンドポイントからのリダイレクトを許可できます。</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve">
          <source>CAN I TEST REMOTING ON A SINGLE COMPUTER <ph id="ph1">\(</ph>NOT IN A DOMAIN<ph id="ph2">\)</ph>?</source>
          <target state="translated">1 台のコンピューター上でリモート処理をテストできます <ph id="ph1">\(</ph>ドメインではなく<ph id="ph2">\)</ph>でしょうか。</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve">
          <source>Yes.</source>
          <target state="translated">対応</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve">
          <source>Windows PowerShell remoting is available even when the local computer is not in a domain.</source>
          <target state="translated">Windows PowerShell リモート処理は、ローカル コンピューターがドメイン内にない場合でも使用できます。</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve">
          <source>You can use the remoting features to connect to sessions and to create sessions on the same computer.</source>
          <target state="translated">セッションに接続し、同じコンピューター上のセッションを作成するには、リモート処理機能を使用することができます。</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve">
          <source>The features work the same as they do when you connect to a remote computer.</source>
          <target state="translated">リモート コンピューターに接続するときと同じ機能に動作します。</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve">
          <source>To run remote commands on a computer in a workgroup, change the following Windows settings on the computer.</source>
          <target state="translated">ワークグループ内のコンピューター上のリモート コマンドを実行するには、コンピューターの次の Windows 設定を変更します。</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve">
          <source>Caution: These settings affect all users on the system and they can make the system more vulnerable to a malicious attack.</source>
          <target state="translated">注意: これらの設定、システム上のすべてのユーザーに影響を与えるし、できるように、システム悪意のある攻撃を受けやすくなります。</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve">
          <source>Use caution when making these changes.</source>
          <target state="translated">これらの変更を行うときに、注意を使用します。</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve">
          <source>--  Windows XP with SP2:</source>
          <target state="translated">-Windows XP SP2 の場合:</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve">
          <source>Use Local Security Settings (Secpol.msc) to change the setting of the "Network Access: Sharing and security model for local accounts" policy in Security Settings\Local Policies\Security Options to "Classic".</source>
          <target state="translated">設定を変更するローカル セキュリティ設定 (Secpol.msc) を使用して、"ネットワーク アクセス: ローカル アカウントの共有とセキュリティ モデル"に「クラシック」] 順に展開、セキュリティ オプションのポリシー。</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve">
          <source>--  Windows Vista, Windows 7, Windows 8:</source>
          <target state="translated">-Windows Vista の場合は、Windows 7、Windows 8:</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve">
          <source>Create the following registry entry, and then set its value to 1: LocalAccountTokenFilterPolicy in HKLM\SOFTWARE\Microsoft\Windows\CurrentVersion\Policies\System</source>
          <target state="translated">次のレジストリ エントリを作成し、その値を 1 に設定します HKLM\SOFTWARE\Microsoft\Windows\CurrentVersion\Policies\System で LocalAccountTokenFilterPolicy。</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve">
          <source>You can use the following  Windows PowerShell command to add this entry:</source>
          <target state="translated">次の Windows PowerShell コマンドを使用すると、このエントリを追加します。</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve">
          <source>New-ItemProperty <ph id="ph1">` –Path HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\Policies\System `</ph> –Name LocalAccountTokenFilterPolicy –propertyType DWord –Value 1</source>
          <target state="translated">新しい ItemProperty <ph id="ph1">` –Path HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\Policies\System `</ph> – 名前 LocalAccountTokenFilterPolicy – propertyType DWord – 値 1</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve">
          <source>--  Windows Server 2003, Windows Server 2008, Windows Server 2012, Windows Server 2012 R2:</source>
          <target state="translated">-Windows Server 2003、Windows Server 2008、Windows Server 2012、Windows Server 2012 R2:</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve">
          <source>No changes are needed because the default setting of the "Network Access: Sharing and security model for local accounts" policy is "Classic".</source>
          <target state="translated">の変更は必要ありませんの既定の設定、"ネットワーク アクセス: ローカル アカウントの共有とセキュリティ モデル"ポリシーは、「クラシック」です。</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve">
          <source>Verify the setting in case it has changed.</source>
          <target state="translated">変更された場合に、設定を確認します。</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve">
          <source>CAN I RUN REMOTE COMMANDS ON A COMPUTER IN ANOTHER DOMAIN?</source>
          <target state="translated">別のドメイン内のコンピューターにリモート コマンドを実行できますか。</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve">
          <source>Yes.</source>
          <target state="translated">対応</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve">
          <source>Typically, the commands run without error, although you might need to use the Credential parameter of the Invoke-Command, New-PSSession, or Enter-PSSession cmdlets to provide the credentials of a member of the Administrators group on the remote computer.</source>
          <target state="translated">通常、コマンドは、Invoke-command、New-pssession、Enter-pssession コマンドレットの資格情報パラメーターを使用して、リモート コンピューターの Administrators グループのメンバーの資格情報が必要になるエラーを発生させず実行されます。</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve">
          <source>This is sometimes required even when the current user is a member of the Administrators group on the local and remote computers.</source>
          <target state="translated">現在のユーザーが、ローカルおよびリモート コンピューターの Administrators グループのメンバーである場合にも必要です。</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve">
          <source>However, if the remote computer is not in a domain that the local computer trusts, the remote computer might not be able to authenticate the user's credentials.</source>
          <target state="translated">ただし、リモート コンピューターがローカル コンピューターが信頼しているドメインにない場合は、リモート コンピューターできないことがあります、ユーザーの資格情報を認証します。</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve">
          <source>To enable authentication, use the following command to add the remote computer to the list of trusted hosts for the local computer in WinRM.</source>
          <target state="translated">認証を有効にするのにには、WinRM でローカル コンピューターの信頼されたホストの一覧に、リモート コンピューターを追加するのに、次のコマンドを使用します。</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve">
          <source>Type the command at the Windows PowerShell prompt.</source>
          <target state="translated">Windows PowerShell プロンプトでコマンドを入力します。</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve">
          <source>For example, to add the Server01 computer to the list of trusted hosts on the local computer, type the following command at the  Windows PowerShell prompt:</source>
          <target state="translated">など、ローカル コンピューター上の信頼されたホストの一覧には、Server01 コンピューターを追加するには、Windows PowerShell プロンプトで次のコマンドを入力します。</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve">
          <source>SEE ALSO</source>
          <target state="translated">関連項目</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve">
          <source>about_Remote</source>
          <target state="translated">about_Remote に関するページ</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve">
          <source>about_Profiles</source>
          <target state="translated">about_Profiles</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve">
          <source>about_PSSessions</source>
          <target state="translated">about_PSSessions</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve">
          <source>about_Remote_Jobs</source>
          <target state="translated">about_Remote_Jobs</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve">
          <source>about_Remote_Variables</source>
          <target state="translated">about_Remote_Variables</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve">
          <source>Invoke-Command</source>
          <target state="translated">Invoke-Command</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve">
          <source>New-PSSession</source>
          <target state="translated">New-PSSession</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>