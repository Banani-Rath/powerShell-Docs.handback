<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-1c394fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">0030e078e99f7d161206da37ff16f138f18dd615</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">reference\4.0\Microsoft.PowerShell.Core\About\about_Variables.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions" />
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fe3873bcf5954c1e6c22a683a49f7eeb2188d1dc</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">7622ae399e04da9dadd862070e13e0bf821557b3</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>about_Variables</source>
          <target state="translated">about_Variables</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>powershell, cmdlet</source>
          <target state="translated">powershell コマンドレット</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>About Variables</source>
          <target state="translated">変数の概要</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>about_Variables</source>
          <target state="translated">about_Variables</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>about_Variables</source>
          <target state="translated">about_Variables</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>SHORT DESCRIPTION</source>
          <target state="translated">概要</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Describes how variables store values that can be used in  Windows PowerShell�.</source>
          <target state="translated">Windows PowerShell で変数が使用できる値を格納する方法について説明します。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>LONG DESCRIPTION</source>
          <target state="translated">詳細説明</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>You can store all types of values in  Windows PowerShell variables.</source>
          <target state="translated">すべての型の値は、Windows PowerShell 変数に格納できます。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>They are typically used to store the results of commands and to store elements that are used in commands and expressions, such as names, paths, settings, and values.</source>
          <target state="translated">通常使用されるコマンドの結果を格納するコマンドと名前、パス、設定、および値などの式で使用される要素を格納します。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>A variable is a unit of memory in which values are stored.</source>
          <target state="translated">変数は、値が格納されているメモリの単位です。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>In  Windows PowerShell, variables are represented by text strings that begin with a dollar sign ($), such as $a, $process, or $my_var.</source>
          <target state="translated">Windows PowerShell で変数が $a、$process などのドル記号 ($) で始まるテキスト文字列で表されます。 または $my_var です。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Variable names are not case-sensitive.</source>
          <target state="translated">変数名は区別されません。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Variable names can include spaces and special characters, but these are difficult to use and should be avoided.</source>
          <target state="translated">変数名は、スペースや特殊文字を含めることができますが、これらを使用するが困難な避ける必要があります。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>There are several different types of variables in  Windows PowerShell.</source>
          <target state="translated">Windows PowerShell で変数のさまざまな種類があります。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>-- User-created variables: User-created variables are created and maintained by the user.</source>
          <target state="translated">-ユーザーが作成した変数: ユーザーが作成した変数が作成され、ユーザーが保持されます。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>By default, the variables that you create at the  Windows PowerShell command line exist only while the  Windows PowerShell window is open, and they are lost when you close the window.</source>
          <target state="translated">既定では、Windows PowerShell コマンドラインで作成した変数は、Windows PowerShell ウィンドウが開いて、およびウィンドウを閉じるときに失われましている間にのみ存在します。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>To save a variable, add it to your  Windows PowerShell profile.</source>
          <target state="translated">変数を保存するには、Windows PowerShell プロファイルに追加します。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>You can also create variables in scripts with global, script, or local scope.-- Automatic variables: Automatic variables store the state of  Windows PowerShell.</source>
          <target state="translated">グローバルなスクリプト、スクリプト、またはローカル スコープです。 - 自動変数の変数を作成することもできます。 自動変数は、Windows PowerShell の状態を格納します。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>These variables are created by  Windows PowerShell, and  Windows PowerShell changes their values as required to maintain their accuracy.</source>
          <target state="translated">これらの変数は、Windows PowerShell によって作成され、Windows PowerShell は、その正確度を維持するために必要に応じてその値を変更します。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Users cannot change the value of these variables.</source>
          <target state="translated">ユーザーは、これらの変数の値を変更できません。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>For example, the $PSHome variable stores the path to the  Windows PowerShell installation directory.</source>
          <target state="translated">たとえば、$PSHome 変数は、Windows PowerShell のインストール ディレクトリへのパスを格納します。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>For more information, a list, and a description of the automatic variables, see about_Automatic_Variables.</source>
          <target state="translated">詳細については、一覧、および自動変数の説明 about_automatic_variables」を参照してください。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>-- Preference variables: Preference variables store user preferences for  Windows PowerShell.</source>
          <target state="translated">-ユーザー設定変数: ユーザー設定変数は、Windows PowerShell 用のユーザー設定を格納します。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>These variables are created by  Windows PowerShell and are populated with default values.</source>
          <target state="translated">これらの変数は、Windows PowerShell によって作成され、既定値に設定されます。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Users can change the values of these variables.</source>
          <target state="translated">ユーザーは、これらの変数の値を変更できます。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>For example, the $MaximumHistoryCount variable determines the maximum number of entries in the session history.</source>
          <target state="translated">たとえば、$MaximumHistoryCount 変数では、セッション履歴内のエントリの最大数を決定します。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>For more information, a list, and a description of the preference variables, see about_Preference_Variables.</source>
          <target state="translated">詳細については、一覧、およびユーザー設定変数の説明には、about_Preference_Variables が参照してください。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>WORKING WITH VARIABLES</source>
          <target state="translated">変数を使用します。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>To create a new variable, use an assignment statement to assign a value to the variable.</source>
          <target state="translated">新しい変数を作成するのにには、変数に値を代入するのに代入ステートメントを使用します。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>You do not have to declare the variable  before using it.</source>
          <target state="translated">使用する前に、変数を宣言する必要はありません。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>The default value of all variables is $null.</source>
          <target state="translated">すべての変数の既定値は、$null です。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>For example:</source>
          <target state="translated">たとえば、次のように入力します。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Variables are very useful for storing the results of commands.</source>
          <target state="translated">変数は、コマンドの結果を格納するのに便利です。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>For example:</source>
          <target state="translated">たとえば、次のように入力します。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>To display the value of a variable, type the variable name, preceded by a dollar sign ($).</source>
          <target state="translated">変数の値を表示するには、前にドル記号 ($) で、変数名を入力します。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>For example:</source>
          <target state="translated">たとえば、次のように入力します。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>To change the value of a variable, assign a new value to the variable.</source>
          <target state="translated">変数の値を変更するには、変数に新しい値を割り当てます。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>The following examples displays the value of the $MyVariable variable, changes the value of the variable, and then displays the new value.</source>
          <target state="translated">次の例は、$MyVariable 変数の値を表示して、変数の値を変更、新しい値が表示されます。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>To delete the value of a variable, use the Clear-Variable cmdlet or change the value to $null.</source>
          <target state="translated">変数の値を削除するには、Clear-variable コマンドレットを使用または $null の値を変更します。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>To delete the variable, use the Remove-Variable or Remove-Item cmdlets.</source>
          <target state="translated">変数を削除するには、Remove-variable または Remove-item コマンドレットを使用します。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>(These cmdlets are discussed later in this topic.)</source>
          <target state="translated">(これらのコマンドレットは、このトピックの後半で説明しますが)。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>To get a list of all of the variables in your  Windows PowerShell session, type:</source>
          <target state="translated">Windows PowerShell セッションで変数のすべての一覧を取得するには、次のように入力します。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>TYPES OF VARIABLES</source>
          <target state="translated">型の変数</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>You can store any type of object in a variable, including integers, strings, arrays, hash tables, and objects that represent processes, services, event logs, and computers.</source>
          <target state="translated">どの型のオブジェクトは、整数、文字列、配列、ハッシュ テーブル、およびプロセス、サービス、イベント ログ、およびコンピューターを表すオブジェクトを含む、変数に格納できます。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Windows PowerShell variables are "loosely typed," which means that they are not limited to a particular type of object.</source>
          <target state="translated">Windows PowerShell の変数は「弱い型付け、」であること、特定のオブジェクト型に制限することを意味します。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>A single variable can even contain a collection (an "array") of different types of objects at the same time.</source>
          <target state="translated">1 つの変数には、同時に異なる種類のオブジェクトのコレクション ("array") が含まれているもします。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>The data type of a variable, which is a .NET Framework type, is determined by the .NET types of the values of the variable.</source>
          <target state="translated">.NET Framework の型である変数のデータ型は、変数の値の .NET 型によって決まります。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>For example:</source>
          <target state="translated">たとえば、次のように入力します。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>You can use a type attribute and cast notation to ensure that a variable can contain only objects of the specified type or objects that can be converted to that type.</source>
          <target state="translated">Type 属性を使用し、指定した型のオブジェクトのみ、またはその型に変換できるオブジェクト変数を含めることができることを確認する表記にキャストできます。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>If you try to assign a value of another type,  Windows PowerShell tries to convert the value to its type.</source>
          <target state="translated">別の型の値を代入しようとすると、Windows PowerShell は、値の型に変換しようとします。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>If it cannot, the assignment statement fails.</source>
          <target state="translated">できない場合は、代入ステートメントは失敗します。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>To use cast notation, enter a type name, enclosed in brackets, before the variable name (on the left side of the assignment statement).</source>
          <target state="translated">キャスト表記を使用するには、代入ステートメントの左側にある) [変数名の前に、角かっこで囲む型の名前を入力します。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>The following example creates an $number variable that can contain only integers, a $words variable that can contain only strings, and a $dates variable that can contain only DateTime objects.</source>
          <target state="translated">次の例では、整数、文字列だけを含めることができる $words 変数および DateTime オブジェクトのみを含めることができる $dates 変数のみを含めることができる $number 変数を作成します。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>USING VARIABLES IN COMMANDS AND EXPRESSIONS</source>
          <target state="translated">コマンドと式で変数を使用します。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>To use a variable in a command or expression, type the variable name, preceded by the dollar sign ($).</source>
          <target state="translated">コマンドまたは式で変数を使用するには、前にドル記号 ($) で、変数名を入力します。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>If the variable name (and dollar sign) are not enclosed in quotation marks, or if they are enclosed in double quotation marks ("), the value of the variable is used in the command or expression.</source>
          <target state="translated">変数名 (とドル記号)、引用符で囲まれていない場合、または二重引用符 (") で囲まれた場合は、変数の値はコマンドまたは式で使用されます。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>If the variable name (and dollar sign) are enclosed in single quotation marks, ('), the variable name is used in the expression.</source>
          <target state="translated">変数名 (とドル記号) が単一引用符 (') で囲まれている場合、変数名は、式で使用されます。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>For example, the first command gets the value of the $profile variable, which is the path to the  Windows PowerShell user profile file in the  Windows PowerShell console.</source>
          <target state="translated">たとえば、最初のコマンドは、Windows PowerShell コンソールで Windows PowerShell ユーザー プロファイルのファイルへのパスは $profile 変数の値を取得します。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>The second command opens the file in Notepad, and the  third and fourth commands use the name of the variable in an expression.</source>
          <target state="translated">2 番目のコマンドでは、ファイルを開きメモ帳で、3 番目と 4 番目のコマンドは、式の中で変数の名前を使用します。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>For more information about using quotation marks in  Windows PowerShell, see about_Quoting_Rules.</source>
          <target state="translated">Windows PowerShell での引用符の使用に関する詳細については、「about_Quoting_Rules を参照してください。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>VARIABLE NAMES THAT INCLUDE SPECIAL CHARACTERS</source>
          <target state="translated">特殊文字が使用される変数名</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>Variable names begin with a dollar sign.</source>
          <target state="translated">変数名は、ドル記号で始めます。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>They can include alphanumeric characters and special characters.</source>
          <target state="translated">これらは、英数字と特殊文字を含めることができます。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>The length of the variable name is limited only by available memory.</source>
          <target state="translated">変数名の長さは、使用可能なメモリによってのみ制限されます。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>Whenever possible, variable names should include only alphanumeric characters and the underscore character (_).Variable names that include spaces and other special characters, are difficult to use and should be avoided.</source>
          <target state="translated">可能であれば、変数名は文字の英数字とアンダー スコア文字 (_) を含める必要があります。スペースやその他の特殊文字を含む変数の名前は、使用するが困難なし、避ける必要があります。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>To create or display a variable name that includes spaces or special characters, enclose the variable name in braces.</source>
          <target state="translated">作成または表示スペースや特殊文字を含む変数名には、変数の名前を中かっこで囲みます。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>This directs  Windows PowerShell to interpret the characters in the variable name literally.</source>
          <target state="translated">これには、リテラル、変数名の文字を解釈する Windows PowerShell がように指示します。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>For example, the following command creates and then displays a variable named "save-items".</source>
          <target state="translated">たとえば、次のコマンドを作成し、「保存項目」という名前の変数を表示します。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>The following command gets the child items in the directory that is represented by the "ProgramFiles(x86)" environment variable.</source>
          <target state="translated">次のコマンドでは、"%programfiles (x86)"環境変数で表されるディレクトリに、子項目を取得します。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>To refer to a variable name that includes braces, enclose the variable name in braces, and use the backtick (escape) character to escape the braces.</source>
          <target state="translated">中かっこを含む変数名を参照するには、変数名をかっこで囲みし、バックティック (エスケープ) 文字を使用して、中かっこをエスケープします。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>For example, to create a variable named "this{value}is" with a value of 1, type:</source>
          <target state="translated">たとえば、値 1 は「{値} が」という名前の変数を作成する次のように入力します。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>VARIABLES AND SCOPE</source>
          <target state="translated">変数とスコープ</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>By default, variables are available only in the scope in which they are created.</source>
          <target state="translated">既定では、変数は、作成されたスコープ内でのみ使用できます。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>For example, a variable that you create in a function is available only within the function.</source>
          <target state="translated">たとえば、関数で作成する、変数は、関数内でのみ利用可能です。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>A variable that you create in a script is available only within the script (unless you dot-source the script, which adds it to the current scope).</source>
          <target state="translated">スクリプトで作成した変数は、スクリプト内でのみ使用できます (しない限り、現在のスコープを追加すると、スクリプトをドット ソース)。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>You can use a scope modifier to change the default scope of the variable.</source>
          <target state="translated">スコープ修飾子を使用して、変数の既定のスコープを変更することができます。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>The following expression creates a variable named "Computers".</source>
          <target state="translated">次の式では、「コンピューター」という名前の変数を作成します。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>The variable has a global scope, even when it is created in a script or function.</source>
          <target state="translated">変数は、スクリプトまたは関数の作成時にも、グローバル スコープを持っています。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>For more information, see about_Scopes.</source>
          <target state="translated">詳細については、「about_Scopes」を参照してください。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>SAVING VARIABLES</source>
          <target state="translated">変数の保存</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>Variables that you create are available only in the session in which you create them.</source>
          <target state="translated">作成した変数は、作成するセッションでのみ使用できます。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>They are lost when you close your session.</source>
          <target state="translated">セッションの終了時に失われます。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>To create the in every  Windows PowerShell session that you start, add the variable to your  Windows PowerShell profile.</source>
          <target state="translated">作成する、起動したすべての Windows PowerShell セッションで、Windows PowerShell プロファイルに変数を追加します。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>For example, to change the value of the $VerbosePreference variable in every  Windows PowerShell session, add the following command to your  Windows PowerShell profile.</source>
          <target state="translated">などのすべての Windows PowerShell セッションでは、$VerbosePreference 変数の値を変更するには、Windows PowerShell プロファイルに、次のコマンドを追加します。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>You can add this command to your profile by opening the profile file in a text editor, such as Notepad.</source>
          <target state="translated">このコマンドをプロファイルを追加するには、メモ帳などのテキスト エディターで、プロファイル ファイルを開きます。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>For more information about  Windows PowerShell profiles, see about_profiles.</source>
          <target state="translated">Windows PowerShell プロファイルの詳細については、about_profiles を参照してください。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>THE VARIABLE: DRIVE</source>
          <target state="translated">変数: ドライブ</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>Windows PowerShell Variable provider creates a Variable: drive that looks and acts like a file system drive, but it contains the variables in your session and their values.</source>
          <target state="translated">Windows PowerShell Variable プロバイダーは、変数を作成します。 ドライブと、ファイル システム ドライブが、外観や動作を、変数、セッションとその値が含まれています。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>To change to the variable: drive, type:</source>
          <target state="translated">変数を変更する: ドライブを入力します。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>To list the items (variables) in the Variable: drive, use the Get-Item or Get-ChildItem cmdlets.</source>
          <target state="translated">変数内の項目 (変数) を一覧表示する: ドライブ、Get-item または Get-childitem コマンドレットを使用します。</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>For example:</source>
          <target state="translated">たとえば、次のように入力します。</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>To get the value of a particular variable, use file system notation to specify the name of the drive and the name of the variable.</source>
          <target state="translated">特定の変数の値を取得するのにには、ドライブの名前と、変数の名前を指定するのにファイル システム表記を使用します。</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>For example, to get the $PSCulture automatic variable, use the following command.</source>
          <target state="translated">たとえば、$PSCulture 自動変数を取得するには、次のコマンドを使用します。</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>For more information about the Variable: drive and the  Windows PowerShell Variable provider, type "get-help variable".</source>
          <target state="translated">変数の詳細については: ドライブと Windows PowerShell Variable プロバイダーは、「get-help 変数」を入力します。</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>THE VARIABLE CMDLETS</source>
          <target state="translated">変数のコマンドレット</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>Windows PowerShell includes a set of cmdlets that are designed to manage variables.</source>
          <target state="translated">Windows PowerShell には、変数を管理するように設計されたコマンドレットのセットが含まれています。</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>To get help for these cmdlets, type: "Get-Help &lt;cmdlet-hame&gt;".</source>
          <target state="translated">これらのコマンドレットのヘルプを表示するには、入力:"Get-help &lt; コマンドレット名 &gt;"です。</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>SEE ALSO</source>
          <target state="translated">関連項目</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>about_Automatic_Variables</source>
          <target state="translated">about_Automatic_Variables</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>about_Environment_Variables</source>
          <target state="translated">about_Environment_Variables</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>about_Preference_Variables</source>
          <target state="translated">about_Preference_Variables</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>about_Profiles</source>
          <target state="translated">about_Profiles</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>about_Quoting_Rules</source>
          <target state="translated">about_Quoting_Rules</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>about_Scopes</source>
          <target state="translated">about_Scopes</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>