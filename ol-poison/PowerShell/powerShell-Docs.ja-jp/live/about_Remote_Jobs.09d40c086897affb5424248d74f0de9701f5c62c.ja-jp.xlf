<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-1c394fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">9ca6b3e19f764e6c75021b62c50eadbc34b3db58</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">reference\4.0\Microsoft.PowerShell.Core\About\about_Remote_Jobs.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions" />
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">c10206933b643cb559acbcaaf7c58683b5e38f20</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">7563fe12734532131e734a495fb2b86d35f4b41c</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>about_Remote_Jobs</source>
          <target state="translated">about_Remote_Jobs</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>powershell, cmdlet</source>
          <target state="translated">powershell コマンドレット</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>About Remote Jobs</source>
          <target state="translated">リモート ジョブについて</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>about_Remote_Jobs</source>
          <target state="translated">about_Remote_Jobs</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>about_Remote_Jobs</source>
          <target state="translated">about_Remote_Jobs</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>SHORT DESCRIPTION</source>
          <target state="translated">概要</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Describes how to run background jobs on remote computers.</source>
          <target state="translated">リモート コンピューターでバック グラウンド ジョブを実行する方法について説明します。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>DETAILED DESCRIPTION</source>
          <target state="translated">詳細説明</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>A background job is a command that runs asynchronously without interacting with the current session.</source>
          <target state="translated">バック グラウンド ジョブは、現在のセッションと対話することがなく非同期に実行されるコマンドです。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The command prompt returns immediately, and you can continue to use the session while the job runs.</source>
          <target state="translated">コマンド プロンプトに、すぐに戻るし、ジョブの実行中に、セッションを使用してもかまいません。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>By default, background jobs run on the local computer.</source>
          <target state="translated">既定では、バック グラウンド ジョブは、ローカル コンピューターで実行します。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>However, you can use several different procedures to run background jobs on remote computers.</source>
          <target state="translated">ただし、いくつかの異なる手順を使用すると、リモート コンピューターでバック グラウンド ジョブを実行します。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>This topic explains how to run a background job on a remote computer.</source>
          <target state="translated">このトピックでは、リモート コンピューターでバック グラウンド ジョブを実行する方法について説明します。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>For information about how to run background jobs on a local computer, see about_Jobs.</source>
          <target state="translated">ローカル コンピューターでバック グラウンド ジョブを実行する方法については、「about_jobs」を参照してください。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>For more information about background jobs, see about_Job_Details.</source>
          <target state="translated">バック グラウンド ジョブの詳細については、about_Job_Details を参照してください。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>REMOTE BACKGROUND JOBS</source>
          <target state="translated">リモート バック グラウンド ジョブ</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>You can run background jobs on remote computers by using three different methods.</source>
          <target state="translated">リモート コンピューターでバック グラウンド ジョブを実行するには、次の 3 つの異なる方法を使用します。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>-- Start an interactive session with a remote computer, and start a job in the interactive session.</source>
          <target state="translated">-リモート コンピューターと対話型セッションを起動し、対話型セッションでジョブを開始します。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>The procedures are the same as running a local job, although all actions are performed on the remote computer.</source>
          <target state="translated">手順は、リモート コンピューター上のすべてのアクションが実行されますが、ローカル ジョブを実行すると同じです。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>-- Run a background job on a remote computer that returns its results to the local computer.</source>
          <target state="translated">-ローカル コンピューターに、結果を返すリモート コンピューターでバック グラウンド ジョブを実行します。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Use this method when you want to collect the results of background jobs and maintain them in a central location on the local computer.</source>
          <target state="translated">バック グラウンド ジョブの結果を収集し、これらのローカル コンピューター上の中央の場所に維持する場合は、このメソッドを使用します。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>-- Run a background job on a remote computer that maintains its results on the remote computer.</source>
          <target state="translated">-リモート コンピューター上には、その結果を保持するリモート コンピューターでバック グラウンド ジョブを実行します。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Use this method when the job data is more securely maintained on the originating computer.</source>
          <target state="translated">ジョブ データがより安全に送信元のコンピューターで管理される場合は、このメソッドを使用します。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>START A BACKGROUND JOB IN AN INTERACTIVE SESSION</source>
          <target state="translated">対話型セッションでバック グラウンド ジョブを開始します。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>You can start an interactive session with a remote computer and then start a background job during the interactive session.</source>
          <target state="translated">リモート コンピューターで対話型セッションを開始し、対話型セッション中にバック グラウンド ジョブを開始できます。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>For more information about interactive sessions, see about_Remote, and see Enter-PSSession.</source>
          <target state="translated">対話型セッションの詳細については、Enter-pssession を参照して about_remote に関するページを参照してください。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>The procedure for starting a background job in an interactive session is almost identical to the procedure for starting a background job on the local computer.</source>
          <target state="translated">対話型セッションでバック グラウンド ジョブを起動するための手順は、ローカル コンピューターでバック グラウンド ジョブを開始する手順とほぼ同じです。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>However, all of the operations occur on the remote computer, not the local computer.</source>
          <target state="translated">ただし、すべての操作が発生するリモート コンピューターでローカル コンピューターではなく。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>STEP 1: ENTER-PSSESSION</source>
          <target state="translated">手順 1: ENTER-PSSESSION</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Use the Enter-PSSession cmdlet to start an interactive session with a remote computer.</source>
          <target state="translated">リモート コンピューターとの対話型セッションを開始するのにには、Enter-pssession コマンドレットを使用します。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>You can use the ComputerName parameter of Enter-PSSession to establish a temporary connection for the interactive session.</source>
          <target state="translated">対話型セッション用の一時的な接続を確立するためには、Enter-pssession の ComputerName パラメーターを使用できます。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Or, you can use the Session parameter to run the interactive session in a  Windows PowerShell� session (PSSession).</source>
          <target state="translated">または、Windows PowerShell セッション (PSSession) で対話型セッションを実行するため、Session パラメーターを使用することができます。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>The following command starts an interactive session on the Server01 computer.</source>
          <target state="translated">次のコマンドは、Server01 コンピューターで対話型セッションを開始します。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>The command prompt changes to show that you are now connected to the Server01 computer.</source>
          <target state="translated">コマンド プロンプトが変化し、Server01 コンピューターに接続していることを示します。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>STEP 2: START-JOB</source>
          <target state="translated">手順 2: START-JOB</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>To start a background job in the session, use the Start-Job cmdlet.</source>
          <target state="translated">セッションでバック グラウンド ジョブを開始するには、Start-job コマンドレットを使用します。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>The following command runs a background job that gets the events in the  Windows PowerShell event log on the Server01 computer.</source>
          <target state="translated">次のコマンドは、Server01 コンピューター上の Windows PowerShell イベント ログにイベントを取得するバック グラウンド ジョブを実行します。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>The Start-Job cmdlet returns an object that represents the job.</source>
          <target state="translated">Start-job コマンドレットでは、ジョブを表すオブジェクトを返します。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>This command saves the job object in the $job variable.</source>
          <target state="translated">このコマンドは、$job 変数にジョブ オブジェクトを保存します。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>While the job runs, you can use the interactive session to run other commands, including other background jobs.</source>
          <target state="translated">ジョブの実行中には、その他のバック グラウンド ジョブを含め、他のコマンドを実行するのに対話型セッションを使用できます。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>However, you must keep the interactive session open until the job is completed.</source>
          <target state="translated">ただし、必要があります開いたままにしておく対話型セッション、ジョブが完了するまでです。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>If you end the session, the job is interrupted, and the results are lost.</source>
          <target state="translated">セッションを終了する場合は、ジョブが中断されると、され、結果は失われます。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>STEP 3: GET-JOB</source>
          <target state="translated">手順 3: GET-JOB</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>To find out if the job is complete, display the value of the $job variable, or use the Get-Job cmdlet to get the job.</source>
          <target state="translated">については、ジョブが完了したら、$job 変数の値を表示するか、ジョブを取得、Get-job コマンドレットを使用します。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>The following command uses the Get-Job cmdlet to display the job.</source>
          <target state="translated">次のコマンドでは、Get-job コマンドレットを使用して、ジョブを表示します。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>The Get-Job output shows that job is running on the "localhost" computer because the job was started on and is running on the same computer (in this case, Server01).</source>
          <target state="translated">ジョブの開始されました、(この場合は、Server01) を同じコンピューターで実行されているために、そのジョブが"localhost"コンピューターで実行されて Get ジョブの出力を示しています。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>STEP 4: RECEIVE-JOB</source>
          <target state="translated">手順 4: 受信ジョブ</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>To get the results of the job, use the Receive-Job cmdlet.</source>
          <target state="translated">ジョブの結果を取得するには、Receive-job コマンドレットを使用します。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>You can display the results in the interactive session or save them to a file on the remote computer.</source>
          <target state="translated">対話型セッションで、結果を表示したり、リモート コンピューター上のファイルに保存することができます。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>The following command gets the results of the job in the $job variable.</source>
          <target state="translated">次のコマンドは、$job 変数に、ジョブの結果を取得します。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>The command uses the redirection operator (&gt;) to save the results of the job in the PsLog.txt file on the Server01 computer.</source>
          <target state="translated">コマンドでは、リダイレクト演算子 (&gt;) を使用して、PsLog.txt ファイル、Server01 コンピューター上でジョブの結果を保存します。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>STEP 5: EXIT-PSSESSION</source>
          <target state="translated">手順 5: EXIT-PSSESSION</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>To end the interactive session, use the Exit-PSSession cmdlet.</source>
          <target state="translated">対話型セッションを終了するには、Exit-pssession コマンドレットを使用します。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>The command prompt changes to show that you are back in the original session on the local computer.</source>
          <target state="translated">ローカル コンピューター上の元のセッションに戻りますが、表示するコマンド プロンプトの変更。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>STEP 6: INVOKE-COMMAND: GET-CONTENT</source>
          <target state="translated">手順 6: INVOKE-COMMAND: GET-CONTENT コマンドレット</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>To view the contents of the PsLog.txt file on the Server01 computer at any time, start another interactive session, or run a remote command.</source>
          <target state="translated">をいつでも、Server01 コンピューター上の PsLog.txt ファイルの内容を表示するには、別の対話型セッションを開始またはリモート コマンドを実行します。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>This type of command is best run in a PSSession (a persistent connection) in case you want to use several commands to investigate and manage the data in the PsLog.txt file.</source>
          <target state="translated">この種類のコマンドは、いくつかのコマンドを使用して、調査して PsLog.txt ファイル内のデータを管理する場合に最適な PSSession (固定接続) で実行されます。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>For more information about PSSessions, see about_PSSessions.</source>
          <target state="translated">Pssession の詳細については、「about_PSSessions を参照してください。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>The following commands use the New-PSSession cmdlet to create a PSSession that is connected to the Server01 computer, and they use the Invoke-Command cmdlet to run a Get-Content command in the PSSession to view the contents of the file.</source>
          <target state="translated">次のコマンドでは、New-pssession コマンドレットを使用して、Server01 コンピューターに接続されている PSSession を作成し、ファイルの内容を表示する PSSession で Get-content コマンドを実行、Invoke-command コマンドレットを使用します。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>START A REMOTE JOB THAT RETURNS THE RESULTS TO THE LOCAL COMPUTER <ph id="ph1">\(</ph>ASJOB</source>
          <target state="translated">結果を返す、ローカル コンピューターにリモート ジョブを開始 <ph id="ph1">\(</ph>ASJOB</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>To start a background job on a remote computer that returns the command results to the local computer, use the AsJob parameter of a cmdlet such as the Invoke-Command cmdlet.</source>
          <target state="translated">ローカル コンピューターに、コマンドの結果を返すリモート コンピューターでバック グラウンド ジョブを開始するには、Invoke-command コマンドレットなどのコマンドレットの AsJob パラメーターを使用します。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>When you use the AsJob parameter, the job object is actually created on the local computer even though the job runs on the remote computer.</source>
          <target state="translated">AsJob パラメーターを使用すると場合でも、リモート コンピューターで、ジョブの実行ジョブ オブジェクトが、ローカル コンピューター上実際に作成されます。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>When the job is completed, the results are returned to the local computer.</source>
          <target state="translated">ジョブが完了したときに、ローカル コンピューターに、結果が返されます。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>You can use the cmdlets that contain the Job noun (the Job cmdlets) to manage any job created by any cmdlet.</source>
          <target state="translated">すべてのコマンドレットによって作成された任意のジョブを管理する Job という名詞 (コマンドレット Job コマンドレット) を含むコマンドレットを使用することができます。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>Many of the cmdlets that have AsJob parameters do not use Windows PowerShell remoting, so you can use them even on computers that are not configured for remoting and that do not meet the requirements for remoting.</source>
          <target state="translated">リモート処理のない構成されていると、リモート処理の要件を満たしていないコンピューターでも使用できるよう、AsJob パラメーターを持つコマンドレットの多くは Windows PowerShell リモート処理に使用しないでください。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>STEP 1: INVOKE-COMMAND -ASJOB</source>
          <target state="translated">手順 1: INVOKE-COMMAND ASJOB</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>The following command uses the AsJob parameter of Invoke-Command to start a background job on the Server01 computer.</source>
          <target state="translated">次のコマンドでは、Invoke-command コマンドレットの AsJob パラメーターを使用して、Server01 コンピューターでバック グラウンド ジョブを開始します。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>The job runs a Get-Eventlog command that gets the events in the System log.</source>
          <target state="translated">このジョブは、システム ログのイベントを取得する Get-Eventlog コマンドを実行します。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>You can use the JobName parameter to assign a display name to the job.</source>
          <target state="translated">JobName パラメーターを使用して、表示名をジョブに割り当てることができます。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>The results of the command resemble the following sample output.</source>
          <target state="translated">コマンドの結果には、次のサンプル出力がようになります。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>When the AsJob parameter is used, Invoke-Command returns the same type of job object that Start-Job returns.</source>
          <target state="translated">AsJob パラメーターを使用する場合、Invoke-command は同じ型のジョブの開始を表すジョブ オブジェクトを返します。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>You can save the job object in a variable, or you can use a Get-Job command to get the job.</source>
          <target state="translated">ジョブ オブジェクトを保存するには、変数または Get-job コマンドを使用するには、ジョブを取得します。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>Note that the value of the Location property shows that the job ran on the Server01 computer.</source>
          <target state="translated">場所のプロパティの値には、Server01 コンピューターで、ジョブが実行されたことが示されているに注意してください。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>STEP 2: GET-JOB</source>
          <target state="translated">手順 2: GET-JOB</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>To manage a job started by using the AsJob parameter of the Invoke-Command cmdlet, use the Job cmdlets.</source>
          <target state="translated">Invoke-command コマンドレットの AsJob パラメーターを使用して開始したジョブを管理するには、Job コマンドレットを使用します。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>Because the job object that represents the remote job is on the local computer, you do not need to run remote commands to manage the job.</source>
          <target state="translated">リモート ジョブを表すジョブ オブジェクトは、ローカル コンピューター上にあるために、ジョブを管理するリモート コマンドを実行する必要はありません。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>To determine whether the job is complete, use a Get-Job command.</source>
          <target state="translated">ジョブが完了するかどうかを判断するには、Get-job コマンドを使用します。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>The following command gets all of the jobs that were started in the current session.</source>
          <target state="translated">次のコマンドでは、すべての現在のセッションで開始されたジョブを取得します。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>Because the remote job was started in the current session, a local Get-Job command gets the job.</source>
          <target state="translated">現在のセッションでリモート ジョブを開始した、ために、ローカル、Get-job コマンドは、ジョブを取得します。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>The State property of the job object shows that the command was completed successfully.</source>
          <target state="translated">ジョブ オブジェクトの State プロパティは、コマンドが正常に完了したことを示します。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>STEP 3: RECEIVE-JOB</source>
          <target state="translated">手順 3: 受信ジョブ</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>To get the results of the job, use the Receive-Job cmdlet.</source>
          <target state="translated">ジョブの結果を取得するには、Receive-job コマンドレットを使用します。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>Because the job results are automatically returned to the computer where the job object resides, you can get the results with a local Receive-Job command.</source>
          <target state="translated">自動的にジョブの結果がジョブ オブジェクトが存在するコンピューターに返される、ためには、ローカル Receive-job コマンドを使用して結果を得ることができます。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>The following command uses the Receive-Job cmdlet to get the results of the job.</source>
          <target state="translated">次のコマンドでは、Receive-job コマンドレットを使用して、ジョブの結果を取得します。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>It uses the session ID to identify the job.</source>
          <target state="translated">セッション ID を使用して、ジョブを特定します。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>This command saves the job results in the $results variable.</source>
          <target state="translated">このコマンドは、$results 変数に、ジョブの結果を保存します。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>You can also redirect the results to a file.</source>
          <target state="translated">結果をファイルにリダイレクトすることもできます。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>START A REMOTE JOB THAT KEEPS THE RESULTS ON THE REMOTE COMPUTER</source>
          <target state="translated">リモート コンピューターでは、結果を保持するリモート ジョブを開始します。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>To start a background job on a remote computer that keeps the command results on the remote computer, use the Invoke-Command cmdlet to run a Start-Job command on a remote computer.</source>
          <target state="translated">リモート コンピューターで、コマンドの結果を保持するリモート コンピューターでバック グラウンド ジョブを開始するには、リモート コンピューターで Start-job コマンドを実行する Invoke-command コマンドレットを使用します。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>You can use this method to run background jobs on multiple computers.</source>
          <target state="translated">このメソッドを使用して、複数のコンピューターでバック グラウンド ジョブを実行できます。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>When you run a Start-Job command remotely, the job object is created on the remote computer, and the job results are maintained on the remote computer.</source>
          <target state="translated">Start-job コマンドをリモートで実行するときに、リモート コンピューターで、ジョブ オブジェクトを作成し、ジョブの結果は、リモート コンピューターで管理します。</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>From the perspective of the job, all operations are local.</source>
          <target state="translated">ジョブの観点からは、すべての操作はローカルです。</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>You are just running commands remotely to manage a local job on the remote computer.</source>
          <target state="translated">リモート コンピューター上のローカル ジョブを管理するには、リモートでコマンドを実行しているだけです。</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>STEP 1: INVOKE-COMMAND START-JOB</source>
          <target state="translated">手順 1: INVOKE-COMMAND START-JOB</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>Use the Invoke-Command cmdlet to run a Start-Job command on a remote computer.</source>
          <target state="translated">リモート コンピューターで Start-job コマンドを実行するには、Invoke-command コマンドレットを使用します。</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>This command requires a PSSession (a persistent connection).</source>
          <target state="translated">このコマンドでは、PSSession (固定接続) が必要です。</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>If you use the ComputerName parameter of Invoke-Command to establish a temporary connection, the Invoke-Command command is considered to be complete when the job object is returned.</source>
          <target state="translated">一時的な接続を確立するために、Invoke-command コマンドレットの ComputerName パラメーターを使用すると、Invoke-command コマンドをジョブ オブジェクトが返されるときに完了するいると見なされます。</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>As a result, the temporary connection is closed, and the job is canceled.</source>
          <target state="translated">その結果、一時的な接続が閉じられるし、ジョブは取り消されます。</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>The following command uses the New-PSSession cmdlet to create a PSSession that is connected to the Server01 computer.</source>
          <target state="translated">次のコマンドでは、New-pssession コマンドレットを使用して、Server01 コンピューターに接続されている PSSession を作成します。</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>The command saves the PSSession in the $s variable</source>
          <target state="translated">このコマンドは、PSSession を $s 変数に保存します。</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>The next command uses the Invoke-Command cmdlet to run a Start-Job command in the PSSession.</source>
          <target state="translated">次のコマンドでは、Invoke-command コマンドレットを使用して、PSSession で Start-job コマンドを実行します。</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>The Start-Job command and the Get-Eventlog command are enclosed in braces.</source>
          <target state="translated">Start-job コマンドと Get-eventlog コマンドは、中かっこで囲まれます。</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>The results resemble the following sample output.</source>
          <target state="translated">結果には、次のサンプル出力がようになります。</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>When you run a Start-Job command remotely, Invoke-Command returns the same type of job object that Start-Job returns.</source>
          <target state="translated">Start-job コマンドをリモートで実行するときに、Invoke-command は同じ型のジョブの開始を表すジョブ オブジェクトを返します。</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>You can save the job object in a variable, or you can use a Get-Job command to get the job.</source>
          <target state="translated">ジョブ オブジェクトを保存するには、変数または Get-job コマンドを使用するには、ジョブを取得します。</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>Note that the value of the Location property shows that the job ran on the local computer, known as "LocalHost", even though the job ran on the Server01 computer.</source>
          <target state="translated">場所のプロパティの値には、Server01 コンピューターでジョブを実行した場合でも、"LocalHost"と呼ばれる、ローカル コンピューター上に、ジョブが実行されたことが示されているに注意してください。</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>Because the job object is created on the Server01 computer and the job runs on the same computer, it is considered to be a local background job.</source>
          <target state="translated">ジョブ オブジェクトは、Server01 コンピューターで作成され、同じコンピューターで、ジョブの実行、ためには、ローカル バック グラウンド ジョブであると見なされます。</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>STEP 2: INVOKE-COMMAND GET-JOB</source>
          <target state="translated">手順 2: INVOKE-COMMAND GET-JOB</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>To manage a remote background job, use the Job cmdlets.</source>
          <target state="translated">リモート バック グラウンド ジョブを管理するには、Job コマンドレットを使用します。</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>Because the job object is on the remote computer, you need to run remote commands to get, stop, wait for, or retrieve the job results.</source>
          <target state="translated">ジョブ オブジェクトは、リモート コンピューター上にあるため、停止の待機をリモート コマンドの実行またはジョブの結果を取得する必要があります。</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>To see if the job is complete, use an Invoke-Command command to run a Get-Job command in the PSSession that is connected to the Server01 computer.</source>
          <target state="translated">ジョブは完了して、Server01 コンピューターに接続されている PSSession で Get-job コマンドを実行するのに Invoke-command コマンドを使用します。</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>The command returns a job object.</source>
          <target state="translated">このコマンドによって返されるのは、ジョブ オブジェクトです。</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>The State property of the job object shows that the command was completed successfully.</source>
          <target state="translated">ジョブ オブジェクトの State プロパティは、コマンドが正常に完了したことを示します。</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>STEP 3: INVOKE-COMMAND RECEIVE-JOB</source>
          <target state="translated">手順 3: 受信呼び出しコマンドのジョブ</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>To get the results of the job, use the Invoke-Command cmdlet to run a Receive-Job command in the PSSession that is connected to the Server01 computer.</source>
          <target state="translated">ジョブの結果を取得するには、Server01 コンピューターに接続されている PSSession で Receive-job コマンドを実行する Invoke-command コマンドレットを使用します。</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>The following command uses the Receive-Job cmdlet to get the results of the job.</source>
          <target state="translated">次のコマンドでは、Receive-job コマンドレットを使用して、ジョブの結果を取得します。</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>It uses the session ID to identify the job.</source>
          <target state="translated">セッション ID を使用して、ジョブを特定します。</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>This command saves the job results in the $results variable.</source>
          <target state="translated">このコマンドは、$results 変数に、ジョブの結果を保存します。</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>It uses the Keep parameter of Receive-Job to keep the result in the job cache on the remote computer.</source>
          <target state="translated">リモート コンピューター上のジョブ キャッシュに結果を保持するのに Receive-job の Keep パラメーターを使用します。</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>You can also redirect the results to a file on the local or remote computer.</source>
          <target state="translated">結果は、ローカルまたはリモート コンピューター上のファイルにリダイレクトすることもできます。</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>The following command uses a redirection operator to save the results in a file on the Server01 computer.</source>
          <target state="translated">次のコマンドでは、リダイレクト演算子を使用して、Server01 コンピューター上のファイルに結果を保存します。</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>SEE ALSO</source>
          <target state="translated">関連項目</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>about_Jobs</source>
          <target state="translated">about_Jobs</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>about_Job_Details</source>
          <target state="translated">about_Job_Details</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>about_Remote</source>
          <target state="translated">about_Remote に関するページ</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>about_Remote_Variables</source>
          <target state="translated">about_Remote_Variables</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>Invoke-Command</source>
          <target state="translated">Invoke-Command</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>Start-Job</source>
          <target state="translated">ジョブの開始</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>Get-Job</source>
          <target state="translated">Get-job</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>Wait-Job</source>
          <target state="translated">Wait-job ジョブ</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>Stop-Job</source>
          <target state="translated">停止ジョブ</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>Remove-Job</source>
          <target state="translated">ジョブの削除</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>New-PSSession</source>
          <target state="translated">New-PSSession</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>Enter-PSSession</source>
          <target state="translated">Enter-PSSession</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>Exit-PSSession</source>
          <target state="translated">Exit-PSSession</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>