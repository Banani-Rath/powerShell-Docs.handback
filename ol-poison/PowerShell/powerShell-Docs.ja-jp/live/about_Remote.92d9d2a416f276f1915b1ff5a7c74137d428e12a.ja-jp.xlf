<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-1c394fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">e0732e9f699703d4959039bbc62a761e46daf8d0</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">reference\5.0\Microsoft.PowerShell.Core\About\about_Remote.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions" />
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">56cf2813eed13171ab77dbc09acd8957311cfb94</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">20c3932b94ef0a7e076fc49348f5abb516bfdad1</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>about_Remote</source>
          <target state="translated">about_Remote に関するページ</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>powershell, cmdlet</source>
          <target state="translated">powershell コマンドレット</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>About Remote</source>
          <target state="translated">リモート デスクトップについて</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>about_Remote</source>
          <target state="translated">about_Remote に関するページ</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>TOPIC</source>
          <target state="translated">トピック</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>about_Remote</source>
          <target state="translated">about_Remote に関するページ</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>SHORT DESCRIPTION</source>
          <target state="translated">概要</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Describes how to run remote commands in Windows PowerShell.</source>
          <target state="translated">Windows PowerShell のリモート コマンドを実行する方法について説明します。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>LONG DESCRIPTION</source>
          <target state="translated">詳細説明</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>You can run remote commands on a single computer or on multiple computers by using a temporary or persistent connection.</source>
          <target state="translated">一時的または永続的な接続を使用して 1 台のコンピューターまたは複数のコンピューターでリモート コマンドを実行できます。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>You can also start an interactive session with a single remote computer.</source>
          <target state="translated">1 台のリモート コンピューターで対話型セッションを開始することもできます。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>This topic provides a series of examples to show you how to run different types of remote command.</source>
          <target state="translated">このトピックでは、一連のさまざまな種類のリモート コマンドを実行する方法を説明する例を示します。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>After you try these basic commands, read the Help topics that describe each cmdlet that is used in these commands.</source>
          <target state="translated">これらの基本的なコマンドを実行すると、これらのコマンドで使用されている各コマンドレットを説明するヘルプ トピックに読みます。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>The topics provide the details and explain how you can modify the commands to meet your needs.</source>
          <target state="translated">トピックは、情報を提供し、ニーズに合わせてコマンドを変更する方法について説明します。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Note: To use Windows PowerShell remoting, the local and remote computers must be configured for remoting.</source>
          <target state="translated">注: Windows PowerShell リモート処理を使用するには、ローカルおよびリモート コンピューターを構成するリモート処理用です。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>For more information, see about_Remote_Requirements.</source>
          <target state="translated">詳細については、「about_Remote_Requirements」を参照してください。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>HOW TO START AN INTERACTIVE SESSION (ENTER-PSSESSION)</source>
          <target state="translated">対話型セッション (入力 PSSESSION) を開始するには、方法</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>The easiest way to run remote commands is to start an interactive session with a remote computer.</source>
          <target state="translated">リモート コマンドを実行する最も簡単な方法では、リモート コンピューターで対話型セッションを開始します。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>When the session starts, the commands that you type run on the remote computer, just as though you typed them directly on the remote computer.</source>
          <target state="translated">セッションが開始されると、入力したコマンドは、リモート コンピューター上で直接入力した場合と同様、リモート コンピューター上に実行します。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>You can connect to only one computer in each interactive session.</source>
          <target state="translated">各対話型セッションで、1 つだけのコンピューターに接続することができます。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>To start an interactive session, use the Enter-PSSession cmdlet.</source>
          <target state="translated">対話型セッションを開始するには、Enter-pssession コマンドレットを使用します。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>The following command starts an interactive session with the Server01 computer:</source>
          <target state="translated">次のコマンドは、Server01 コンピューターとの対話型セッションを起動します。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Enter-PSSession Server01</source>
          <target state="translated">Enter-pssession Server01</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>The command prompt changes to indicate that you are connected to the Server01 computer.</source>
          <target state="translated">コマンド プロンプトが、Server01 コンピューターに接続することを示すために変化します。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Server01\PS&gt;</source>
          <target state="translated">Server01\PS &gt;</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Now, you can type commands on the Server01 computer.</source>
          <target state="translated">これで、Server01 コンピューターでコマンドを入力することができます。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>To end the interactive session, type:</source>
          <target state="translated">対話型セッションを終了するには、次のように入力します。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Exit-PSSession</source>
          <target state="translated">Exit-PSSession</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>For more information, see Enter-PSSession.</source>
          <target state="translated">詳細については、Enter-pssession を参照してください。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>HOW TO USE CMDLETS THAT HAVE A COMPUTERNAME PARAMETER TO GET REMOTE DATA</source>
          <target state="translated">リモート データの取得に COMPUTERNAME パラメーターを持つコマンドレットを使用する方法</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Several cmdlets have a ComputerName parameter that lets you get objects from remote computers.</source>
          <target state="translated">いくつかのコマンドレットでは、リモート コンピューターからオブジェクトを取得することができます、ComputerName パラメーターがあります。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Because these cmdlets do not use WS-Management-based Windows PowerShell remoting, you can use the ComputerName parameter of these cmdlets on any computer that is running Windows PowerShell.</source>
          <target state="translated">これらのコマンドレットは、WS 管理ベースの Windows PowerShell リモート処理を使用しないので、Windows PowerShell を実行している任意のコンピューターでこれらのコマンドレットの ComputerName パラメーターを使用することができます。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>The computers do not have to be configured for Windows PowerShell remoting, and the computers do not have to meet the system requirements for remoting.</source>
          <target state="translated">コンピューターは、Windows PowerShell リモート処理用に構成する必要はありませんし、コンピューターをリモート処理用のシステム要件を満たしている必要はありません。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>The following cmdlets have a ComputerName parameter:</source>
          <target state="translated">次のコマンドレットには、ComputerName パラメーターが含まれています。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Clear-EventLog    Limit-EventLog Get-Counter       New-EventLog Get-EventLog      Remove-EventLog Get-HotFix        Restart-Computer Get-Process       Show-EventLog Get-Service       Stop-Computer Get-WinEvent      Test-Connection Get-WmiObject     Write-EventLog</source>
          <target state="translated">Clear-eventlog 制限-イベント ログ、Get-counter 新しいイベント ログの取得-イベント ログ、Remove-eventlog Get-修正プログラム Restart-computer Get-process Show-eventlog Get-サービス Stop-computer Get-winevent テスト-接続、Get-wmiobject 書き込み-イベント ログ</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>For example, the following command gets the services on the Server01 remote computer:</source>
          <target state="translated">たとえば、次のコマンドは、Server01 リモート コンピューター上、サービスを取得します。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Get-Service -ComputerName Server01</source>
          <target state="translated">Get-service の ComputerName Server01</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Typically, cmdlets that support remoting without special configuration have a ComputerName parameter and do not have a Session parameter.</source>
          <target state="translated">通常、特別な構成なしでリモート処理をサポートするコマンドレットは、ComputerName パラメーターを指定し、Session パラメーター必要はありません。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>To find these cmdlets in your session, type:</source>
          <target state="translated">セッションでこれらのコマンドレットを見つけるには、次のように入力します。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Get-Command | where { $.Parameters.Keys -contains "ComputerName" -and $.Parameters.Keys -NotContains "Session"}</source>
          <target state="translated">Get コマンド |ここで {$ です。Parameters.Keys-"ComputerName"が含まれています- および $ です。Parameters.Keys - NotContains"Session"}</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>HOW TO RUN A REMOTE COMMAND</source>
          <target state="translated">リモート コマンドを実行するには、方法</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>To run other commands on remote computers, use the Invoke-Command cmdlet.</source>
          <target state="translated">リモート コンピューター上の他のコマンドを実行するには、Invoke-command コマンドレットを使用します。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>To run a single command or a few unrelated commands, use the ComputerName parameter of Invoke-Command to specify the remote computers.</source>
          <target state="translated">1 つのコマンドまたはいくつかの関連性のないコマンドを実行するのにには、リモート コンピューターを指定して、Invoke-command コマンドレットの ComputerName パラメーターを使用します。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Use the ScriptBlock parameter to specify the command.</source>
          <target state="translated">コマンドを指定するのにには、ScriptBlock パラメーターを使用します。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>For example, the following command runs a Get-Culture command on the Server01 computer.</source>
          <target state="translated">たとえば、次のコマンドは、Server01 コンピューター上 Get-culture コマンドを実行します。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Invoke-Command -ComputerName Server01 -ScriptBlock {Get-Culture}</source>
          <target state="translated">Invoke-command-computername Server01-scriptblock {Get-culture}</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>The ComputerName parameter is designed for situation in which you run a single command or several unrelated commands on one or many computers.</source>
          <target state="translated">ComputerName パラメーターは状況が実行する 1 つのコマンドまたは関連性のないコマンドがいくつか 1 つまたは複数のコンピューター上に設計されています。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>To establish a persistent connection to a remote computer, use the Session parameter.</source>
          <target state="translated">リモート コンピューターへの永続的な接続を確立するには、セッション パラメーターを使用します。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>HOW TO CREATE A PERSISTENT CONNECTION (PSSESSION)</source>
          <target state="translated">永続的な接続 (PSSESSION) を作成するには、方法</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>When you use the ComputerName parameter of the Invoke-Command cmdlet, Windows PowerShell establishes a connection just for the command.</source>
          <target state="translated">Invoke-command コマンドレットの ComputerName パラメーターを使用すると、Windows PowerShell は、コマンドのためだけの接続を確立します。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Then, it closes the connection when the command is complete.</source>
          <target state="translated">そのため、コマンドが完了すると接続を閉じます。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Any variables or functions that are defined in the command are lost.</source>
          <target state="translated">すべての変数またはコマンドで定義されている関数は失われます。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>To create a persistent connection to a remote computer, use the New-PSSession cmdlet.</source>
          <target state="translated">リモート コンピューターへの永続的な接続を作成するには、New-pssession コマンドレットを使用します。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>For example, the following command creates PSSessions on the Server01 and Server02 computers and then saves the PSSessions in the $s variable.</source>
          <target state="translated">たとえば、次のコマンドは、コンピューター Server01 と Server02 で Pssession を作成し、Pssession を $s 変数に保存します。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>$s = New-PSSession -ComputerName Server01, Server02</source>
          <target state="translated">$s = New-pssession-computername Server01、Server02</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>HOW TO RUN COMMANDS IN A PSSESSION</source>
          <target state="translated">PSSESSION でコマンドを実行するには、方法</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>With a PSSession, you can run a series of remote commands that share data, like functions, aliases, and the values of variables.</source>
          <target state="translated">で、PSSession では、一連の関数、エイリアス、および変数の値などのデータを共有するリモート コマンドを実行できます。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>To run commands in a PSSession, use the Session parameter of the Invoke-Command cmdlet.</source>
          <target state="translated">PSSession でコマンドを実行するには、Invoke-command コマンドレットの Session パラメーターを使用します。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>For example, the following command uses the Invoke-Command cmdlet to run a Get-Process command in the PSSessions on the Server01 and Server02 computers.</source>
          <target state="translated">たとえば、次のコマンドは、コンピューター Server01 と Server02 コンピューターで、Pssession で Get-process コマンドを実行する Invoke-command コマンドレットを使用します。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>The command saves the processes in a $p variable in each PSSession.</source>
          <target state="translated">このコマンドは、各 PSSession で $p 変数にプロセスを保存します。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>Invoke-Command -Session $s -ScriptBlock {$p = Get-Process}</source>
          <target state="translated">Invoke-command - Session $s-scriptblock {$p = Get-process}</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>Because the PSSession uses a persistent connection, you can run another command in the same PSSession that uses the $p variable.</source>
          <target state="translated">PSSession は、永続的な接続を使用しているために、$p 変数を使用して同じ PSSession で別のコマンドを実行できます。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>The following command counts the number of processes saved in $p.</source>
          <target state="translated">次のコマンドは、$p に保存されているプロセスの数をカウントします。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>Invoke-Command -Session $s -ScriptBlock {$p.count}</source>
          <target state="translated">Invoke-command - Session $s-scriptblock {$p.count}</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>HOW TO RUN A REMOTE COMMAND ON MULTIPLE COMPUTERS</source>
          <target state="translated">複数のコンピューターでリモート コマンドを実行するには、方法</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>To run a remote command on multiple computers, type all of the computer names in the value of the ComputerName parameter of Invoke-Command.</source>
          <target state="translated">複数のコンピューターでリモート コマンドを実行するには、Invoke-command コマンドレットの ComputerName パラメーターの値にすべてのコンピューター名を入力します。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>Separate the names with commas.</source>
          <target state="translated">名前をコンマで区切ります。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>For example, the following command runs a Get-Culture command on three computers:</source>
          <target state="translated">たとえば、次のコマンドでは、3 台のコンピューターに、Get-culture コマンドが実行されます。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>Invoke-Command -ComputerName S1, S2, S3 -ScriptBlock {Get-Culture}</source>
          <target state="translated">Invoke-command-ComputerName S1、S2、S3-scriptblock {Get-culture}</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>You can also run a command in multiple PSSessions.</source>
          <target state="translated">複数の Pssession でコマンドを実行することもできます。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>The following commands create PSSessions on the Server01, Server02, and Server03 computers and then run a Get-Culture command in each of the PSSessions.</source>
          <target state="translated">次のコマンドは、Server01、Server02、および Server03 コンピューターに Pssession を作成し、各 Pssession で、Get-culture コマンドを実行します。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>$s = New-PSSession -ComputerName S1, S2, S3 Invoke-Command -Session $s -ScriptBlock {Get-Culture}</source>
          <target state="translated">$s = New-pssession-ComputerName S1、S2、S3 Invoke-command - Session $s-scriptblock {Get-culture}</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>To include the local computer list of computers, type the name of the local computer, type a dot (.), or type  "localhost".</source>
          <target state="translated">コンピューターのローカル コンピューターの一覧を含めるには、ローカル コンピューターの名前を入力、ドット (.) を入力または"localhost"を入力します。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>Invoke-Command -ComputerName S1, S2, S3, localhost -ScriptBlock {Get-Culture}</source>
          <target state="translated">Invoke-command-ComputerName S1、S2、S3、localhost-scriptblock {Get-culture}</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>HOW TO RUN A SCRIPT ON REMOTE COMPUTERS</source>
          <target state="translated">リモート コンピューターでスクリプトを実行するには、方法</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>To run a local script on remote computers, use the FilePath parameter of Invoke-Command.</source>
          <target state="translated">リモート コンピューターでローカルのスクリプトを実行するには、Invoke-command コマンドレットの FilePath パラメーターを使用します。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>For example, the following command runs the Sample.ps1 script on the S1 and S2 computers:</source>
          <target state="translated">たとえば、次のコマンドでは、S1 および S2 コンピューターに、Sample.ps1 スクリプトが実行されます。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>Invoke-Command -ComputerName S1, S2 -FilePath C:\Test\Sample.ps1</source>
          <target state="translated">Invoke-command-ComputerName S1、S2-filepath C:\Test\Sample.ps1</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>The results of the script are returned to the local computer.</source>
          <target state="translated">ローカル コンピューターには、スクリプトの結果が返されます。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>You do not need to copy any files.</source>
          <target state="translated">すべてのファイルをコピーする必要はありません。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>HOW TO STOP A REMOTE COMMAND</source>
          <target state="translated">リモート コマンドを停止するには、方法</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>To interrupt a command, press CTRL+C.</source>
          <target state="translated">コマンドが中断するには、CTRL キーを押しながら C キーを押します。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>The interrupt request is passed to the remote computer where it terminates the remote command.</source>
          <target state="translated">割り込み要求は、リモート コマンドを終了して、リモート コンピューターに渡されます。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>FOR MORE INFORMATION</source>
          <target state="translated">詳細情報</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>-- For information about the system requirements for remoting, see about_Remote_Requirements.</source>
          <target state="translated">-リモート処理用のシステム要件については、about_Remote_Requirements を参照してください。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>-- For help in formatting remote output, see about_Remote_Output.</source>
          <target state="translated">-についてリモート出力を書式設定では、about_Remote_Output を参照してください。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>-- For information about how remoting works, how to manage remote data, special configurations, security issues, and other frequently asked questions, see about_Remote_FAQ.</source>
          <target state="translated">-リモート処理のしくみについて、リモート データ、特別な構成、セキュリティ問題、およびその他のよく寄せられる質問を管理する方法については、about_Remote_FAQ を参照してください。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>-- For help in resolving remoting errors, see about_Remote_Troubleshooting.</source>
          <target state="translated">-のリモート処理のエラーを解決するため、about_Remote_Troubleshooting を参照してください。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>-- For information about PSSessions and persistent connections, see about_PSSessions.</source>
          <target state="translated">-の Pssession と永続的な接続については、about_PSSessions を参照してください。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>-- For information about Windows PowerShell background jobs, see about_Jobs.</source>
          <target state="translated">-Windows PowerShell のバック グラウンド ジョブについては、about_jobs」を参照してください。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>KEYWORDS</source>
          <target state="translated">キーワード</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>about_Remoting</source>
          <target state="translated">about_Remoting</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>SEE ALSO</source>
          <target state="translated">関連項目</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>about_PSSessions about_Remote_Disconnected_Sessions about_Remote_Requirements about_Remote_FAQ about_Remote_TroubleShooting about_Remote_Variables Enter-PSSession Invoke-Command New-PSSession</source>
          <target state="translated">about_PSSessions about_Remote_Disconnected_Sessions about_Remote_Requirements about_Remote_FAQ about_Remote_TroubleShooting about_Remote_Variables Enter-pssession Invoke-command New-pssession</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>