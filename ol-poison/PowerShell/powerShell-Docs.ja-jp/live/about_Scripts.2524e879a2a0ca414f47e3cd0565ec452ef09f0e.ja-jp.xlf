<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-1c394fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">652ddd2eebf056fa983b4bfe64ef2085f5a9649f</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">reference\4.0\Microsoft.PowerShell.Core\About\about_Scripts.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions" />
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1b6c807e43c60bc5e015267aa4448f43187d8080</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">2bedc30b0d0f5ea6e05f9d5e2540591c9006c90e</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>about_Scripts</source>
          <target state="translated">about_Scripts</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>powershell, cmdlet</source>
          <target state="translated">powershell コマンドレット</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>About Scripts</source>
          <target state="translated">スクリプトについて</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>about_Scripts</source>
          <target state="translated">about_Scripts</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>about_Scripts</source>
          <target state="translated">about_Scripts</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>SHORT DESCRIPTION</source>
          <target state="translated">概要</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Describes how to run and write scripts in  Windows PowerShell�.</source>
          <target state="translated">実行し、Windows PowerShell でスクリプトを記述する方法について説明します。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>LONG DESCRIPTION</source>
          <target state="translated">詳細説明</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>A script is a plain text file that contains one or more  Windows PowerShell commands.</source>
          <target state="translated">スクリプトは、1 つまたは複数の Windows PowerShell コマンドを含むプレーン テキスト ファイルです。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Windows PowerShell scripts have a .ps1 file name extension.</source>
          <target state="translated">Windows PowerShell スクリプトでは、拡張子が .ps1 のファイルがあります。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Running a script is a lot like running cmdlet.</source>
          <target state="translated">スクリプトを実行するよく似ていますコマンドレットを実行します。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>You type the path and file name of the script and use parameters to submit data and set options.</source>
          <target state="translated">スクリプトのパスとファイル名を入力し、パラメーターを使用してデータを送信し、オプションを設定します。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>You can run scripts on your computer or in a remote session on a different computer.</source>
          <target state="translated">別のコンピューターで、コンピューターまたはリモート セッションでスクリプトを実行できます。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Writing a script saves a command for later use and makes it easy to share with others.</source>
          <target state="translated">スクリプトを記述では、後で使用するためのコマンドを保存し、他のユーザーと共有しやすきます。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Most importantly, it lets you run the commands simply by typing the script path and the file name.</source>
          <target state="translated">最も重要なは、これにより、スクリプトのパスとファイル名を入力するだけで、コマンドを実行します。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Scripts can be as simple as a single command in a file or as extensive as a complex program.</source>
          <target state="translated">スクリプトには、ファイル内の 1 つのコマンドと同じくらい簡単または複雑なプログラムとしての大規模なものを指定できます。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Scripts have additional features, such as the <ph id="ph1">\#</ph>Requires special comment, the use of parameters, support for data sections, and digital signing for security.</source>
          <target state="translated">スクリプトでは、追加機能をなどがある、 <ph id="ph1">\#</ph>特殊なコメント、パラメーター、サポートのため、データのセクションでは、およびセキュリティのデジタル署名の使用が必要です。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>You can also write Help topics for scripts and for any functions in the script.</source>
          <target state="translated">スクリプトのヘルプ トピックやスクリプトのすべての機能を記述することもできます。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>HOW TO RUN A SCRIPT</source>
          <target state="translated">スクリプトを実行するには、方法</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Before you can run a script, you need to change the default  Windows PowerShell execution policy.</source>
          <target state="translated">スクリプトを実行する前に、既定の Windows PowerShell 実行ポリシーを変更する必要があります。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>The default execution policy, "Restricted", prevents all scripts from running, including scripts that you write on the local computer.</source>
          <target state="translated">既定の実行ポリシー"Restricted"すべてのスクリプト実行されないように、ローカル コンピューター上に記述するスクリプトを含みます。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>For more information, see about_Execution_Policies.</source>
          <target state="translated">詳細については、「about_Execution_Policies」を参照してください。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>The execution policy is saved in the registry, so you need to change it only once on each computer.</source>
          <target state="translated">実行ポリシーは、各コンピューターで、1 回だけを変更する必要がありますので、レジストリに保存されます。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>To change the execution policy, use the following procedure.</source>
          <target state="translated">実行ポリシーを変更するには、次の手順を使用します。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Start Windows PowerShell with the "Run  as administrator" option.</source>
          <target state="translated">[管理者として実行] オプションを使用して Windows PowerShell を起動します。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>At the command prompt, type:</source>
          <target state="translated">コマンド プロンプトで、次のように入力します。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Set-ExecutionPolicy AllSigned</source>
          <target state="translated">Set-executionpolicy AllSigned</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>-or-</source>
          <target state="translated">または</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Set-ExecutionPolicy RemoteSigned</source>
          <target state="translated">Set-executionpolicy RemoteSigned</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>The change is effective immediately</source>
          <target state="translated">変更はすぐに有効</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>To run a script, type the full name and the full path to the script file.</source>
          <target state="translated">スクリプトを実行するには、完全な名前と、スクリプト ファイルへの完全パスを入力します。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>For example, to run the Get-ServiceLog.ps1 script in the C:\Scripts directory, type:</source>
          <target state="translated">たとえば、Get ServiceLog.ps1 スクリプトを C:\Scripts ディレクトリを実行する次のように入力します。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>To run a script in the current directory, type the path to the current directory, or use a dot to represent the current directory, followed by a path backslash (.<ph id="ph1">\)</ph>.</source>
          <target state="translated">パスの円記号の後に、現在のディレクトリでスクリプトを実行、現在のディレクトリへのパスを入力するかを現在のディレクトリを表すドットを使用する (.<ph id="ph1">\)</ph>します。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>For example, to run the ServicesLog.ps1 script in the local directory, type:</source>
          <target state="translated">たとえば、ローカル ディレクトリに ServicesLog.ps1 スクリプトを実行する次のように入力します。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>If the script has parameters, type the parameters and parameter values after the script file name.</source>
          <target state="translated">スクリプトにパラメーターがある場合は、スクリプト ファイル名の後、パラメーターとパラメーター値を入力します。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>For example, the following command uses the ServiceName parameter of the Get-ServiceLog script to request a log of WinRM service activity.</source>
          <target state="translated">たとえば、次のコマンドは、WinRM サービスの利用状況のログを要求するのに Get ServiceLog スクリプトの ServiceName パラメーターを使用します。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>As a security feature,  Windows PowerShell does not run scripts when you double-click the script icon in File Explorer or when you type the script name without a full path, even when the script is in the current directory.</source>
          <target state="translated">セキュリティ機能として Windows PowerShell はスクリプトを実行しないエクスプ ローラーまたは完全パスを持たないスクリプト名を入力すると、スクリプトが現在のディレクトリになっている場合でも、スクリプトのアイコンをダブルクリックするとします。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>For more information about running commands and scripts in Windows PowerShell, see about_Command_Precedence.</source>
          <target state="translated">Windows PowerShell のコマンドおよびスクリプトの実行に関する詳細については、about_Command_Precedence を参照してください。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>RUN WITH POWERSHELL</source>
          <target state="translated">POWERSHELL を使用して実行します。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Beginning in  Windows PowerShell 3.0, you can run scripts from File Explorer (or Windows Explorer, in earlier versions of Windows).</source>
          <target state="translated">Windows PowerShell 3.0 以降では、ファイル エクスプ ローラー (またはそれ以前のバージョンの Windows での Windows のエクスプ ローラー) からスクリプトを実行できます。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>To use the "Run with PowerShell" feature:</source>
          <target state="translated">[PowerShell で実行"機能を使用します。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>The "Run with PowerShell" feature is designed to run scripts that do not have required parameters and do not return output to the command prompt.</source>
          <target state="translated">必要なパラメーターがないと、コマンド プロンプトに出力を返さないするスクリプトを実行するは、「PowerShell で実行」機能は設計されています。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>For more information, see about_Run_With_PowerShell</source>
          <target state="translated">詳細については、about_Run_With_PowerShell を参照してください。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>RUNNING SCRIPTS ON OTHER COMPUTERS</source>
          <target state="translated">他のコンピューターでスクリプトの実行</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>To run a script on one or more remote computers, use the FilePath parameter of the Invoke-Command cmdlet.</source>
          <target state="translated">1 つまたは複数のリモート コンピューターで、スクリプトを実行するには、Invoke-command コマンドレットの FilePath パラメーターを使用します。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Enter the path and file name of the script as the value of the FilePath parameter.</source>
          <target state="translated">FilePath パラメーターの値として、スクリプトのパスとファイル名を入力します。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>The script must reside on the local computer or in a directory that the local computer can access.</source>
          <target state="translated">スクリプトは、ローカル コンピューター上か、またはローカル コンピューターがアクセスできるディレクトリ内に存在する必要があります。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>The following command runs the Get-ServiceLog.ps1 script on the Server01 and Server02 remote computers.</source>
          <target state="translated">次のコマンドは、Server01 および Server02 リモート コンピューターで、Get ServiceLog.ps1 スクリプトを実行します。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>GET HELP FOR SCRIPTS</source>
          <target state="translated">スクリプトのヘルプを表示します。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>The Get-Help cmdlet gets the help topics for scripts as well as for cmdlets and other types of commands.</source>
          <target state="translated">Get-help コマンドレットでは、スクリプトでもコマンドレットとその他の種類のコマンドのヘルプ トピックを取得します。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>To get the help topic for a script, type "Get-Help" followed by the path and file name of the script.</source>
          <target state="translated">スクリプトのヘルプ トピックを取得するには、"Get-help"に続けて、スクリプトのパスとファイル名を入力します。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>If the script path is in your Path environment variable, you can omit the path.</source>
          <target state="translated">スクリプトのパスが Path 環境変数の場合は、パスを省略することができます。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>For example, to get help for the ServicesLog.ps1 script, type:</source>
          <target state="translated">たとえば、ServicesLog.ps1 スクリプトのヘルプを表示する次のように入力します。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>HOW TO WRITE A SCRIPT</source>
          <target state="translated">スクリプトを記述するには、方法</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>A script can contain any valid  Windows PowerShell commands, including single commands, commands that use the pipeline, functions, and control structures such as If statements and For loops.</source>
          <target state="translated">スクリプトは、1 つのコマンドでは、パイプライン、関数、および場合などの制御構造を使用するコマンドを含む、有効な Windows PowerShell コマンドを含めることができますステートメントおよび For ループします。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>To write a script, start a text editor (such as Notepad) or a script editor (such as the  Windows PowerShell Integrated Scripting Environment [ISE]).</source>
          <target state="translated">スクリプトを作成するには、メモ帳などのテキスト エディターまたは (Windows PowerShell Integrated Scripting Environment [ISE]) などのスクリプト エディターを起動します。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Type the commands and save them in a file with a valid file name and the .ps1 file name extension.</source>
          <target state="translated">コマンドを入力し、有効なファイル名とファイル名拡張子 .ps1 ファイルに保存します。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>The following example is a simple script that gets the services that are running on the current system and saves them to a log file.</source>
          <target state="translated">次の例では、現在のシステムで実行されているサービスを取得する単純なスクリプトは、し、ログ ファイルに保存します。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>The log file name is created from the current date.</source>
          <target state="translated">ログ ファイルの名前は、現在の日付から作成されます。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>To create this script, open a text editor or a script editor, type these commands, and then save them in a file named ServiceLog.ps1.</source>
          <target state="translated">このスクリプトを作成するにテキスト エディターまたはスクリプト エディターを開くし、これらのコマンドを入力 ServiceLog.ps1 という名前のファイルに保存します。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>PARAMETERS IN SCRIPTS</source>
          <target state="translated">パラメーターでのスクリプト</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>To define parameters in a script, use a Param statement.</source>
          <target state="translated">スクリプト内でパラメーターを定義するには、Param ステートメントを使用します。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>The Param statement must be the first statement in a script, except for comments and any <ph id="ph1">\#</ph>Requires statements.</source>
          <target state="translated">Param ステートメントは、およびコメントを除き、スクリプトの最初のステートメントをする必要があります <ph id="ph1">\#</ph>ステートメントが必要です。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>Script parameters work like function parameters.</source>
          <target state="translated">スクリプトのパラメーターは、関数のパラメーターと同様に機能します。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>The parameter values are available to all of the commands in the script.</source>
          <target state="translated">パラメーター値は、すべてのスクリプトでコマンドを使用できます。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>All of the features of function parameters, including the Parameter attribute and its named arguments, are also valid in scripts.</source>
          <target state="translated">すべての関数パラメーター、パラメーターの属性や、名前付き引数などの機能は、スクリプトで有効です。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>When running the script, script users type the parameters after the script name.</source>
          <target state="translated">スクリプトを実行するときにスクリプトのユーザーは、スクリプト名の後にパラメーターを入力します。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>The following example shows a Test-Remote.ps1 script that has a ComputerName parameter.</source>
          <target state="translated">次の例では、ComputerName パラメーターを持つテスト Remote.ps1 スクリプトを示します。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>Both of the script functions can access the ComputerName parameter value.</source>
          <target state="translated">スクリプト関数の両方により、ComputerName パラメーターの値がアクセスできます。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>To run this script, type the parameter name after the script name.</source>
          <target state="translated">このスクリプトを実行するには、スクリプト名の後に、パラメーター名を入力します。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>For example:</source>
          <target state="translated">たとえば、次のように入力します。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>For more information about the Param statement and the function parameters, see about_Functions and about_Functions_Advanced_Parameters.</source>
          <target state="translated">Param ステートメントおよび関数のパラメーターの詳細については、about_Functions と指示を参照してください。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>WRITING HELP FOR SCRIPTS</source>
          <target state="translated">スクリプトの作成のヘルプ</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>You can write a help topic for a script by using either of the two following methods:</source>
          <target state="translated">スクリプトのヘルプ トピックは、次の 2 つの方法のいずれかを使用して記述できます。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>--  Comment-Based Help for Scripts</source>
          <target state="translated">-コメント ベースのヘルプのスクリプト</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>Create a Help topic by using special keywords in the comments.</source>
          <target state="translated">ヘルプ トピックを作成するには、コメントに特別なキーワードを使用します。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>To create comment-based Help for a script, the comments must be placed at the beginning or end of the script file.</source>
          <target state="translated">スクリプトのコメント ベースのヘルプを作成するには、先頭またはスクリプト ファイルの末尾にコメントを配置する必要があります。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>For more information about comment-based Help, see about_Comment_Based_Help.</source>
          <target state="translated">コメント ベースのヘルプの詳細については、about_Comment_Based_Help を参照してください。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>--  XML-Based Help  for Scripts</source>
          <target state="translated">--スクリプトの XML ベースのヘルプ</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>Create an XML-based Help topic, such as the type that is typically created for cmdlets.</source>
          <target state="translated">XML ベースのヘルプ トピックを通常は、コマンドレットの作成の種類などを作成します。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>XML-based Help is required if you are translating Help topics into multiple languages.</source>
          <target state="translated">ヘルプ トピックは複数の言語に変換する場合、XML ベースのヘルプが必要です。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>To associate the script with the XML-based Help topic, use the .ExternalHelp Help comment keyword.</source>
          <target state="translated">ヘルプ トピックを XML ベースのスクリプトを関連付けるには使用します。ExternalHelp ヘルプ コメントのキーワードです。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>For more information about the ExternalHelp keyword, see about_Comment_Based_Help.</source>
          <target state="translated">ExternalHelp キーワードの詳細については、about_Comment_Based_Help を参照してください。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>For more information about XML-based help, see "How to Write Cmdlet Help" in the MSDN (Microsoft Developer Network) library at http:<ph id="ph1">\/\/</ph>go.microsoft.com<ph id="ph2">\/</ph>fwlink<ph id="ph3">\/</ph>?LinkID<ph id="ph4">\=</ph>123415.</source>
          <target state="translated">XML ベースのヘルプの詳細については、ヘルプを参照して"方法を記述コマンドレット"で、MSDN (Microsoft Developer Network) ライブラリの「http:<ph id="ph1">\/\/</ph>go.microsoft.com<ph id="ph2">\/</ph>fwlink<ph id="ph3">\/</ph>でしょうか。LinkID<ph id="ph4">\=</ph>123415 します。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>SCRIPT SCOPE AND DOT SOURCING</source>
          <target state="translated">スクリプトのスコープとドット ソース</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>Each script runs in its own scope.</source>
          <target state="translated">各スクリプトは、独自のスコープで実行されます。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>The functions, variables, aliases, and drives that are created in the script exist only in the script scope.</source>
          <target state="translated">関数、変数、エイリアス、およびスクリプトで作成されたドライブは、スクリプト スコープ内にのみ存在します。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>You cannot access these items or their values in the scope in which the script runs.</source>
          <target state="translated">これらのアイテムや、スクリプトが実行されるスコープ内には、その値にアクセスすることはできません。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>To run a script in a different scope, you can specify a scope, such as Global or Local, or you can dot source the script.</source>
          <target state="translated">別のスコープで、スクリプトを実行するには、など、グローバルまたはローカルで、スコープを指定することができます。 またはスクリプト ソースをドットことができます。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>The dot sourcing feature lets you run a script in the current scope instead of in the script scope.</source>
          <target state="translated">ドットのソーシングの機能を使用して、スクリプト スコープの代わりに現在のスコープでスクリプトを実行できます。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>When you run a script that is dot sourced, the commands in the script run as though you had typed them at the command prompt.</source>
          <target state="translated">ドット ソースであるスクリプトを実行するときに、コマンド プロンプトで型指定したかのように、スクリプトのコマンドが実行されます。</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>The functions, variables, aliases, and drives that the script creates are created in the scope in which you are working.</source>
          <target state="translated">関数、変数、エイリアス、およびドライブ、スクリプトを作成するは、作業しているスコープ内に作成されます。</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>After the script runs, you can use the created items and access their values in your session.</source>
          <target state="translated">スクリプトを実行した後、作成されたアイテムを使用し、セッションでその値にアクセスできます。</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>To dot source a script, type a dot (.) and a space before the script path.</source>
          <target state="translated">ソースのスクリプトをドットするには、ドット (.) と、スクリプトのパスの前にスペースを入力します。</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>For example:</source>
          <target state="translated">たとえば、次のように入力します。</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>After the UtilityFunctions script runs, the functions and variables that the script creates are added to the current scope.</source>
          <target state="translated">UtilityFunctions スクリプトを実行した後、関数とスクリプトを作成する変数は、現在のスコープに追加されます。</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>For example, the UtilityFunctions.ps1 script creates the New-Profile function and the $ProfileName variable.</source>
          <target state="translated">たとえば、UtilityFunctions.ps1 スクリプトは、新規プロファイル関数と $ProfileName 変数を作成します。</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>If you run the UtilityFunctions.ps1 script in its own script scope, the New-Profile function and the $ProfileName variable exist only while the script is running.</source>
          <target state="translated">独自のスクリプト スコープで UtilityFunctions.ps1 スクリプトを実行する場合、新しいプロファイル関数と $ProfileName 変数、スクリプトの実行中にのみを存在します。</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>When the script exits, the function and variable are removed, as shown in the following example.</source>
          <target state="translated">スクリプトの終了時に関数および変数は、次の例で示すようにします。</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>When you dot source the script and run it, the script creates the New-Profile function and the $ProfileName variable in your session in your scope.</source>
          <target state="translated">ドットがソース、スクリプト、実行する場合、スクリプト作成新規プロファイル関数と $ProfileName 変数のセッションで自分のスコープにします。</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>After the script runs, you can use the New-Profile function in your session, as shown in the following example.</source>
          <target state="translated">スクリプトを実行した後は、次の例で示すようのセッションで新規プロファイル関数を使用できます。</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>For more information about scope, see about_Scopes.</source>
          <target state="translated">スコープの詳細については、「about_Scopes を参照してください。</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>SCRIPTS IN MODULES</source>
          <target state="translated">モジュールのスクリプト</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>A module is a set of related Windows PowerShell resources that can be distributed as a unit.</source>
          <target state="translated">モジュールは、ユニットとして配布可能な関連する Windows PowerShell のリソースのセットです。</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>You can use modules to organize your scripts, functions, and other resources.</source>
          <target state="translated">モジュールを使用すると、スクリプト、関数、およびその他のリソースを整理します。</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>You can also use modules to distribute your code to others, and to get code from trusted sources.</source>
          <target state="translated">信頼できるソースからコードを取得すると、他のユーザーに、コードを分散し、モジュールを使用することもできます。</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>You can include scripts in your modules, or you can create a script module, which is a module that consists entirely or primarily of a script and supporting resources.</source>
          <target state="translated">モジュール内のスクリプトを含めることができますか、スクリプト モジュールを完全または主で構成されているモジュールを作成するスクリプトとサポート リソースのです。</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>A script module is just a script with a .psm1 file name extension.</source>
          <target state="translated">スクリプト モジュールは、.psm1 ファイル名拡張子を含むスクリプトだけです。</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>For more information about modules, see about_Modules.</source>
          <target state="translated">モジュールについての詳細については、「about_Modules」を参照してください。</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>OTHER SCRIPT FEATURES</source>
          <target state="translated">その他のスクリプト機能</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>Windows PowerShell has many useful features that you can use in scripts.</source>
          <target state="translated">Windows PowerShell ではスクリプトで使用できる多くの便利な機能です。</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>Requires</source>
          <target state="translated">必要です。</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>You can use a <ph id="ph1">\#</ph>Requires statement to prevent a script from running without specified modules or snap-ins and a specified version of  Windows PowerShell.</source>
          <target state="translated">使用することができます、 <ph id="ph1">\#</ph>せず、指定したモジュールまたはスナップインと、指定したバージョンの Windows PowerShell の実行をスクリプトを防止するステートメントが必要です。</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>For more information, see about_Requires.</source>
          <target state="translated">詳細については、about_Requires を参照してください。</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>$PSCommandPath</source>
          <target state="translated">$PSCommandPath</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>Contains the full path and name of the script that is being run.</source>
          <target state="translated">実行されているスクリプトの名前と完全なパスが含まれています。</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>This parameter is valid in all scripts.</source>
          <target state="translated">このパラメーターは、すべてのスクリプトでは無効です。</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>This automatic variable is introduced in  Windows PowerShell 3.0.</source>
          <target state="translated">自動変数は、Windows PowerShell 3.0 で導入されました。</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>$PSScriptRoot</source>
          <target state="translated">$PSScriptRoot</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>Contains the directory from which a script is being run.</source>
          <target state="translated">スクリプトの実行元となるディレクトリが含まれています。</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>In  Windows PowerShell 2.0, this variable is valid only in script modules (.psm1).</source>
          <target state="translated">Windows PowerShell 2.0 では、この変数はスクリプト モジュール (.psm1) でのみ有効です。</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>Beginning in  Windows PowerShell 3.0, it is valid in all scripts.</source>
          <target state="translated">Windows PowerShell 3.0 以降では、これはすべてのスクリプトでは無効です。</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>$MyInvocation</source>
          <target state="translated">$MyInvocation</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>The $MyInvocation automatic variable contains information about the current script, including information about how it was started or "invoked."</source>
          <target state="translated">$MyInvocation 自動変数には、開始または「呼び出されます。」にする方法に関する情報を含む、現在のスクリプトに関する情報が含まれています。</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>You can use this variable and its properties to get information about the script while it is  running.</source>
          <target state="translated">この変数とそのプロパティを使用すると、実行中に、スクリプトに関する情報を取得します。</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>For example, the $MyInvocation.MyCommand.Path variable contains the path and file name of the script.</source>
          <target state="translated">たとえば、$MyInvocation.MyCommand.Path 変数には、スクリプトのパスとファイル名が含まれています。</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>$MyInvocation.Line contains the command that started the script, including all parameters and values.</source>
          <target state="translated">$MyInvocation.Line には、すべてのパラメーターと値を含むスクリプトを開始するコマンドが含まれています。</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>Beginning in  Windows PowerShell 3.0, $MyInvocation has two new properties that provide information about the script that called or invoked the current script.</source>
          <target state="translated">Windows PowerShell 3.0 以降では、$MyInvocation を使うと、呼び出されるか、現在のスクリプトを起動するスクリプトに関する情報を提供する 2 つの新しいプロパティがあります。</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>The values of these properties are populated only when the invoker or caller is a script.</source>
          <target state="translated">これらのプロパティの値には、呼び出し元または呼び出し元が、スクリプトである場合にのみが設定されます。</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>-- PSCommandPath contains the full path and name of the script that called or invoked the current script.</source>
          <target state="translated">-PSCommandPath には、呼び出されるか、現在のスクリプトを起動するスクリプトの名前と完全なパスが含まれています。</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>-- PSScriptRoot contains the directory of the script that called or invoked the current script.</source>
          <target state="translated">-PSScriptRoot には、呼び出されるか、現在のスクリプトを起動するスクリプトのディレクトリが含まれています。</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>Unlike the $PSCommandPath and $PSScriptRoot automatic variables, which contain information about the current script, the PSCommandPath and PSScriptRoot properties of the $MyInvocation variable contain information about the script that called or invoke the current script.</source>
          <target state="translated">$PSCommandPath と $PSScriptRoot 自動変数、現在のスクリプトに関する情報が含まれているとは異なりは、$MyInvocation 変数の PSCommandPath と PSScriptRoot プロパティには、呼び出されるか、現在のスクリプトを起動するスクリプトに関する情報が含まれます。</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>Data sections</source>
          <target state="translated">データのセクションでは</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>You can use the Data keyword to separate data from logic in scripts.</source>
          <target state="translated">スクリプトのロジックからデータを分割するのにデータのキーワードを使用できます。</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>Data sections can also make localization easier.</source>
          <target state="translated">データ セクションもローカリゼーション簡単に実行できます。</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>For more information, see about_Data_Sections and about_Script_Localization.</source>
          <target state="translated">詳細については、about_Data_Sections と about_Script_Localization を参照してください。</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>Script Signing</source>
          <target state="translated">スクリプトへの署名</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>You can add a digital signature to a script.</source>
          <target state="translated">スクリプトにデジタル署名を追加できます。</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>Depending on the execution policy, you can use digital signatures to restrict the running of scripts that could include unsafe commands.</source>
          <target state="translated">実行ポリシーによっては、安全でないコマンドを含む可能性があるスクリプトの実行を制限するのにデジタル署名を使用できます。</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>For more information, see about_Execution_Policies and about_Signing.</source>
          <target state="translated">詳細については、about_Execution_Policies および署名に関するトピックを参照してください。</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>SEE ALSO</source>
          <target state="translated">関連項目</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source>about_Command_Precedence</source>
          <target state="translated">about_Command_Precedence</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source>about_Comment_Based_Help</source>
          <target state="translated">about_Comment_Based_Help</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source>about_Execution_Policies</source>
          <target state="translated">about_Execution_Policies</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source>about_Functions</source>
          <target state="translated">about_Functions</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source>about_Modules</source>
          <target state="translated">about_Modules</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source>about_Profiles</source>
          <target state="translated">about_Profiles</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve">
          <source>about_Requires</source>
          <target state="translated">about_Requires</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source>about_Run_With_PowerShell</source>
          <target state="translated">about_Run_With_PowerShell</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source>about_Scopes</source>
          <target state="translated">about_Scopes</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source>about_Script_Blocks</source>
          <target state="translated">about_Script_Blocks</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve">
          <source>about_Signing</source>
          <target state="translated">about_Signing</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve">
          <source>Invoke-Command</source>
          <target state="translated">Invoke-Command</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>