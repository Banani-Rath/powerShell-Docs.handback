<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-1c394fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">2620c57583a00f65bfd026d478adffb82526f8e5</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">reference\5.0\Microsoft.PowerShell.Security\ConvertFrom-SecureString.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions" />
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">4874d1ab6bfc2f71f69e92503ec4460678186896</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">857c9640555c612edd2442920919e90ead963e75</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>powershell, cmdlet</source>
          <target state="translated">powershell コマンドレット</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>ConvertFrom-SecureString</source>
          <target state="translated">ConvertFrom SecureString</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>ConvertFrom-SecureString</source>
          <target state="translated">ConvertFrom SecureString</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>SYNOPSIS</source>
          <target state="translated">概要</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Converts a secure string to an encrypted standard string.</source>
          <target state="translated">セキュリティで保護された文字列を暗号化された標準文字列に変換します。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>SYNTAX</source>
          <target state="translated">構文</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Secure (Default)</source>
          <target state="translated">(既定値) をセキュリティで保護します。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Open</source>
          <target state="translated">［開く］</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>DESCRIPTION</source>
          <target state="translated">説明</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>ConvertFrom-SecureString<ept id="p1">**</ept> cmdlet converts a secure string (<bpt id="p2">**</bpt>System.Security.SecureString<ept id="p2">**</ept>) to an encrypted standard string (<bpt id="p3">**</bpt>System.String<ept id="p3">**</ept>).</source>
          <target state="translated"> <bpt id="p1">**</bpt>Convertfrom-securestring<ept id="p1">**</ept> コマンドレットは、セキュリティで保護された文字列を変換 (<bpt id="p2">**</bpt>System.Security.SecureString<ept id="p2">**</ept>) を暗号化された標準文字列 (<bpt id="p3">**</bpt>System.String<ept id="p3">**</ept>)。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Unlike a secure string, an encrypted standard string can be saved in a file for later use.</source>
          <target state="translated">セキュリティで保護された文字列とは異なり、暗号化された標準文字列は、ファイルに保存して後で使用することができます。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>The encrypted standard string can be converted back to a secure string by using the ConvertTo-SecureString cmdlet.</source>
          <target state="translated">Convertto-securestring コマンドレットを使用して、暗号化された標準文字列をセキュリティで保護された文字列に変換できます。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>If an encryption key is specified by using the <bpt id="p1">*</bpt>Key<ept id="p1">*</ept> or <bpt id="p2">*</bpt>SecureKey<ept id="p2">*</ept> parameters, the Advanced Encryption Standard (AES) encryption algorithm is used.</source>
          <target state="translated">使用して暗号化キーが指定されている場合、 <bpt id="p1">*</bpt>キー<ept id="p1">*</ept> または <bpt id="p2">*</bpt>SecureKey<ept id="p2">*</ept> パラメーターを高度暗号化標準 (AES) 暗号化アルゴリズムを使用します。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>The specified key must have a length of 128, 192, or 256 bits, because those are the key lengths supported by the AES encryption algorithm.</source>
          <target state="translated">指定したキーは、AES 暗号化アルゴリズムでサポートされているキーの長さはであるために、128、192 ビット、または 256 ビットの長さにすることが必要です。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>If no key is specified, the Windows Data Protection API (DPAPI) is used to encrypt the standard string representation.</source>
          <target state="translated">キーを指定しない場合には、Windows データ保護 API (DPAPI) が使用されて標準文字列の表現が暗号化されます。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>EXAMPLES</source>
          <target state="translated">例</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Example 1: Create a secure string</source>
          <target state="translated">例 1: セキュリティで保護された文字列を作成します。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>This command creates a secure string from characters that you type at the command prompt.</source>
          <target state="translated">このコマンドは、コマンド プロンプトで入力した文字からセキュリティで保護された文字列を作成します。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>After entering the command, type the string you want to store as a secure string.</source>
          <target state="translated">コマンドを入力した後で、セキュリティで保護された文字列として格納する文字列を入力します。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>An asterisk (*) is displayed to represent each character that you type.</source>
          <target state="translated">入力した各文字はアスタリスク (*) で表示されます。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Example 2: Convert a secure string to an encrypted standard string</source>
          <target state="translated">例 2: セキュリティで保護された文字列を暗号化された標準文字列に変換します。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>This command converts the secure string in the $SecureString variable to an encrypted standard string.</source>
          <target state="translated">このコマンドは、$SecureString 変数内のセキュリティで保護された文字列を暗号化された標準文字列に変換します。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>The resulting encrypted standard string is stored in the $StandardString variable.</source>
          <target state="translated">結果として生成される暗号化された標準文字列は $StandardString 変数に格納されます。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Example 3: Convert a secure string to an encrypted standard string with a 192-bit key</source>
          <target state="translated">例 3: 暗号化された標準文字列に 192 ビット キーを使用してセキュリティで保護された文字列を変換します。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>These commands use the AES algorithm to convert the secure string stored in the $SecureString variable to an encrypted standard string with a 192-bit key.</source>
          <target state="translated">これらのコマンドでは、AES アルゴリズムを使用して、192 ビット キーを使用して暗号化された標準文字列に、$SecureString 変数に格納されているセキュリティで保護された文字列に変換します。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>The resulting encrypted standard string is stored in the $StandardString variable.</source>
          <target state="translated">結果として生成される暗号化された標準文字列は $StandardString 変数に格納されます。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>The first command stores a key in the $Key variable.</source>
          <target state="translated">最初のコマンドは、キーを $Key 変数に格納します。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>The key is an array of 24 digits, all of which are less than 256.</source>
          <target state="translated">このキーは 24 桁の配列で、いずれの桁も 256 より小さい値です。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Because each digit represents a byte (8 bits), the key has 24 digits for a total of 192 bits (8 x 24).</source>
          <target state="translated">配列の各桁は 1 バイト (8 ビット) であるため、24 桁では 192 ビット (8 x 24) になります。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>This is a valid key length for the AES algorithm.</source>
          <target state="translated">これは、AES アルゴリズムの有効なキー長さです。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Each individual value is less than 256, which is the maximum value that can be stored in an unsigned byte.</source>
          <target state="translated">それぞれの値は、1 つの符号なしバイトに格納できる最大値の 256 よりも小さい値です。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>The second command uses the key in the $Key variable to convert the secure string to an encrypted standard string.</source>
          <target state="translated">2 番目のコマンドは、&amp;Key 変数内のキーを使用して、セキュリティで保護された文字列を暗号化された標準文字列に変換します。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>PARAMETERS</source>
          <target state="translated">パラメータ</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>-Key</source>
          <target state="translated">キー</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Specifies the encryption key as a byte array.</source>
          <target state="translated">暗号化キーを、バイト配列として指定します。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>-SecureKey</source>
          <target state="translated">-SecureKey</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Specifies the encryption key as a secure string.</source>
          <target state="translated">暗号化キーを、セキュリティで保護された文字列として指定します。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>The secure string value is converted to a byte array before being used as the key.</source>
          <target state="translated">セキュリティで保護された文字列値は、キーとして使用される前に、バイト配列に変換されます。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>-SecureString</source>
          <target state="translated">SecureString</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Specifies the secure string to convert to an encrypted standard string.</source>
          <target state="translated">暗号化された標準文字列に変換するセキュリティで保護された文字列を指定します。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>CommonParameters</source>
          <target state="translated">CommonParameters</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutVariable, -OutBuffer, -PipelineVariable, -Verbose, -WarningAction, and -WarningVariable.</source>
          <target state="translated">このコマンドレットは、共通のパラメーターをサポートしています:-デバッグ、-erroraction、-errorvariable、- InformationAction-InformationVariable、- OutVariable、-OutBuffer、- PipelineVariable、- Verbose、および - WarningVariable です。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>For more information, see about_CommonParameters (http://go.microsoft.com/fwlink/?LinkID=113216).</source>
          <target state="translated">詳細については、about_CommonParameters (http://go.microsoft.com/fwlink/?LinkID=113216) を参照してください。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>INPUTS</source>
          <target state="translated">入力</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>System.Security.SecureString</source>
          <target state="translated">System.Security.SecureString</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>You can pipe a <bpt id="p1">**</bpt>SecureString<ept id="p1">**</ept> object to <bpt id="p2">**</bpt>ConvertFrom-SecureString<ept id="p2">**</ept>.</source>
          <target state="translated">パイプすることができます、 <bpt id="p1">**</bpt>SecureString<ept id="p1">**</ept> オブジェクトを <bpt id="p2">**</bpt>Convertfrom-securestring<ept id="p2">**</ept>します。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>OUTPUTS</source>
          <target state="translated">出力</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>System.String</source>
          <target state="translated">System.String</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>ConvertFrom-SecureString<ept id="p1">**</ept> returns a standard string object.</source>
          <target state="translated"><bpt id="p1">**</bpt>Convertfrom-securestring<ept id="p1">**</ept> 標準の文字列オブジェクトを返します。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>NOTES</source>
          <target state="translated">ノート</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>To create a secure string from characters that are typed at the command prompt, use the <bpt id="p1">*</bpt>AsSecureString<ept id="p1">*</ept> parameter of the Read-Host cmdlet.</source>
          <target state="translated">コマンド プロンプトで入力した文字からセキュリティで保護された文字列を作成するには、使用、 <bpt id="p1">*</bpt>AsSecureString<ept id="p1">*</ept> Read-host コマンドレットのパラメーターです。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>When you use the <bpt id="p1">*</bpt>Key<ept id="p1">*</ept> or <bpt id="p2">*</bpt>SecureKey<ept id="p2">*</ept> parameters to specify a key, the key length must be correct.</source>
          <target state="translated">使用すると、 <bpt id="p1">*</bpt>キー<ept id="p1">*</ept> または <bpt id="p2">*</bpt>SecureKey<ept id="p2">*</ept> キーの長さが正しくなければなりません、キーを指定するパラメーターです。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>For example, a key of 128 bits can be specified as a byte array of 16 digits.</source>
          <target state="translated">たとえば、128 ビットのキーは 16 桁のバイト配列として指定できます。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Similarly, 192-bit and 256-bit keys correspond to byte arrays of 24 and 32 digits, respectively.</source>
          <target state="translated">同様に、192 ビットおよび 256 ビットのキーは、それぞれ 24 桁および 32 桁のバイト配列に対応しています。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>RELATED LINKS</source>
          <target state="translated">関連リンク</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>ConvertTo-SecureString</source>
          <target state="translated">Convertto-securestring</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Read-Host</source>
          <target state="translated">Read-Host</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>