<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-1c394fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">bb0f067e426f0d3d36a14dac2755ddd88fad86ca</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">reference\3.0\Microsoft.PowerShell.Core\About\about_Object_Creation.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions" />
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">666e23a3dec72b6680f4a42fd662d653a1702722</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">78082c32a5cb572c3880eed244c6c4e55933448d</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>about_Object_Creation</source>
          <target state="translated">about_Object_Creation</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>powershell, cmdlet</source>
          <target state="translated">powershell コマンドレット</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>About Object Creation</source>
          <target state="translated">オブジェクトの作成について</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>about_Object_Creation</source>
          <target state="translated">about_Object_Creation</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>about_Object_Creation</source>
          <target state="translated">about_Object_Creation</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>SHORT DESCRIPTION</source>
          <target state="translated">概要</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Explains how to create objects in  Windows PowerShell�.</source>
          <target state="translated">Windows PowerShell でのオブジェクトを作成する方法について説明します。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>LONG DESCRIPTION</source>
          <target state="translated">詳細説明</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>You can create objects in  Windows PowerShell and use the objects that you create in commands and scripts.</source>
          <target state="translated">Windows PowerShell でのオブジェクトの作成のコマンドやスクリプトを作成するオブジェクトを使用することができます。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>There are several ways to create objects:</source>
          <target state="translated">オブジェクトを作成するいくつかの方法があります。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>New-Object:</source>
          <target state="translated">新しいオブジェクト。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>The New-Object cmdlet creates an instance of a .NET Framework object or COM object.</source>
          <target state="translated">New-object コマンドレットでは、.NET Framework のオブジェクトや COM オブジェクトのインスタンスを作成します。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Hash tables:</source>
          <target state="translated">ハッシュ テーブル。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Beginning in  Windows PowerShell 3.0, you can create objects from hash tables of property names and property values.</source>
          <target state="translated">Windows PowerShell 3.0 以降では、プロパティ名とプロパティ値のハッシュ テーブルからオブジェクトを作成できます。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Import-Csv:</source>
          <target state="translated">Import-csv:</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>The Import-Csv cmdlet creates custom objects (PSCustomObject) from the items in a CSV file.</source>
          <target state="translated">Import-csv コマンドレットは、CSV ファイル内の項目をカスタム オブジェクト (PSCustomObject) を作成します。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Each row is an object instance and each column is an object property.</source>
          <target state="translated">それぞれの行は、オブジェクト インスタンスと、各列は、オブジェクトのプロパティです。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>This topic will demonstrate and discuss each of these methods.</source>
          <target state="translated">このトピックはデモンストレーションし、これらの各方法について説明します。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>NEW-OBJECT</source>
          <target state="translated">新しいオブジェクト</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>The New-Object cmdlet provides a robust and consistent way to create new objects.</source>
          <target state="translated">New-object コマンドレットは、堅牢かつ一貫性のある新しいオブジェクトを作成する方法を提供します。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>The cmdlet works with almost all types and in all supported versions of  Windows PowerShell.</source>
          <target state="translated">コマンドレットでは、ほぼすべての型とはサポートされているすべてのバージョンの Windows PowerShell では機能します。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>To create a new object, specify either the type of a .NET Framework class or a ProgID of a COM object.</source>
          <target state="translated">新しいオブジェクトを作成するには、.NET Framework クラスの型または COM オブジェクトの ProgID のいずれかを指定します。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>For example, the following command creates a Version object.</source>
          <target state="translated">たとえば、次のコマンドは、バージョン オブジェクトを作成します。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>For more information, see the help topic for the New-Object cmdlet.</source>
          <target state="translated">詳細については、New-object コマンドレットのヘルプ トピックを参照してください。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>CREATE OBJECTS FROM HASH TABLES</source>
          <target state="translated">ハッシュ テーブルからオブジェクトを作成します。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Beginning in  Windows PowerShell 3.0, you can create an object from a hash table of properties and property values.</source>
          <target state="translated">Windows PowerShell 3.0 以降では、プロパティとプロパティ値のハッシュ テーブルからオブジェクトを作成できます。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>The syntax is as follows:</source>
          <target state="translated">構文は次のとおりです。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>This method works only for classes that have a null constructor, that is, a constructor that has no parameters.</source>
          <target state="translated">このメソッドは、null のコンス トラクター パラメーターをとらないコンス トラクターは、あるクラスに対してのみ機能します。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>The object properties must be public and settable.</source>
          <target state="translated">オブジェクトのプロパティは、パブリック、設定可能にする必要があります。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>CREATE CUSTOM OBJECTS FROM HASH TABLES</source>
          <target state="translated">ハッシュ テーブルからのカスタム オブジェクトを作成します。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Custom objects are very useful and they are very easy to create by using the hash table method.</source>
          <target state="translated">非常に簡単にハッシュ テーブルのメソッドを使用して作成されると、そのカスタム オブジェクトは非常に便利です。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>To create a custom object, use the PSCustomObject class, a class designed specifically for this purpose.</source>
          <target state="translated">カスタム オブジェクトを作成するには、この目的専用に設計されたクラスで、PSCustomObject クラスを使用します。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Custom objects are an excellent way to return customized output from a function or script; far more useful than returning formatted output that cannot be reformatted or piped to other commands.</source>
          <target state="translated">カスタム オブジェクトは関数またはスクリプトからカスタマイズされた出力を返すための優れた方法です。その他のコマンドを再フォーマットまたはパイプことはできませんが、書式付き出力を返すよりもはるかに役立ちます。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>The commands in the Test-Object function set some variable values and then use those values to create a custom object.</source>
          <target state="translated">テスト オブジェクト関数でのコマンドは、いくつかの変数の値を設定し、それらの値を使用して、カスタム オブジェクトを作成します。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>(You can see this object in use in the example section of the Update-Help cmdlet help topic.)</source>
          <target state="translated">(Update-help コマンドレットのヘルプ トピックの例」のセクションで使用するには、このオブジェクトを参照することができます)。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>The output of this function is a collection of custom objects formatted as a table by default.</source>
          <target state="translated">この関数の出力は、既定では、テーブルとして書式設定されたカスタム オブジェクトのコレクションです。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Users can manage the properties of the custom objects just as they do with standard objects.</source>
          <target state="translated">ユーザーは、標準のオブジェクトと同じように、カスタム オブジェクトのプロパティを管理できます。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>CREATE NON-CUSTOM OBJECTS FROM HASH TABLES</source>
          <target state="translated">ハッシュ テーブルの非カスタム オブジェクトを作成します。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>You can also use hash tables to create objects for non-custom classes.</source>
          <target state="translated">また、非カスタム クラスのオブジェクトを作成するのにハッシュ テーブルを使用することができます。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>When you create an object for a non-custom class, the full namespace name is required unless class is in the System namespace.</source>
          <target state="translated">非カスタム クラスのオブジェクトを作成するときに、System 名前空間のクラスがないと、完全な名前空間名が必要です。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Use only the properties of the class.</source>
          <target state="translated">クラスのプロパティのみを使用します。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>For example, the following command creates a session option object.</source>
          <target state="translated">たとえば、次のコマンドは、セッション オプション オブジェクトを作成します。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>The requirements of the hash table feature, especially the null constructor requirement, eliminate many existing classes.</source>
          <target state="translated">ハッシュ テーブルの機能、特に、null コンス トラクター要件の要件は、多くの既存のクラスを削除します。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>However, most  Windows PowerShell option classes are designed to work with this feature, as well as other very useful classes, such as the ScheduledJobTrigger class.</source>
          <target state="translated">ただし、この機能だけでなく、ScheduledJobTrigger クラスなどの他の非常に便利なクラスを使用するほとんどの Windows PowerShell のオプション クラスが設計されています。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>You can also use the hash table feature when setting parameter values.</source>
          <target state="translated">パラメーターの値を設定するときに、また、ハッシュ テーブルの機能を使用することができます。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>For example, the value of the SessionOption parameter of the New-PSSession cmdlet and the value of the JobTrigger parameter of Register-ScheduledJob can be a hash table.</source>
          <target state="translated">たとえば、New-pssession コマンドレットの SessionOption パラメーターと Register-scheduledjob の JobTrigger パラメーターの値の値には、ハッシュ テーブルを指定できます。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>IMPORT-CSV</source>
          <target state="translated">CSV のインポート</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>You can create custom objects from the items in a CSV file.</source>
          <target state="translated">CSV ファイル内の項目から、カスタム オブジェクトを作成できます。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>When you use the Import-Csv cmdlet to import the CSV file, the cmdlet creates a custom object (PSCustomObject) for each item in the file.</source>
          <target state="translated">Import-csv コマンドレットを使用して CSV ファイルをインポートするときに、コマンドレットは、ファイル内の各項目のカスタム オブジェクト (PSCustomObject) を作成します。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>The column names are the object properties.</source>
          <target state="translated">列名は、オブジェクトのプロパティです。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>For example, if you import a CSV file of computer asset data, Import-CSV creates a collection of custom objects from the input.</source>
          <target state="translated">たとえば、コンピューター資産のデータの CSV ファイルをインポートする場合、CSV のインポートは、入力からカスタム オブジェクトのコレクションを作成します。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Use the Get-Member cmdlet to confirm the object type.</source>
          <target state="translated">オブジェクトの種類を確認するのにには、Get-member コマンドレットを使用します。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>You can use the custom objects just as you would standard objects.</source>
          <target state="translated">標準的なオブジェクトと同様に、カスタム オブジェクトを使用できます。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>For more information, see the help topic for the Import-Csv cmdlet.</source>
          <target state="translated">詳細については、Import-csv コマンドレットのヘルプ トピックを参照してください。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>SEE ALSO</source>
          <target state="translated">関連項目</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>about_Objects</source>
          <target state="translated">about_Objects</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>about_Methods</source>
          <target state="translated">about_Methods</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>about_Properties</source>
          <target state="translated">about_Properties</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>about_Pipelines</source>
          <target state="translated">about_Pipelines</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>Get-Member</source>
          <target state="translated">Get-Member</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>Import-Csv</source>
          <target state="translated">Import-Csv</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>New-Object</source>
          <target state="translated">新しいオブジェクト</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>