<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-1c394fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ae0f24942c941d2ec3d0bd81d390fce49a700b26</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">reference\3.0\Microsoft.PowerShell.Core\About\about_Operators.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions" />
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">4685da2116d643026a33a5fd6eb584ee8acc01fa</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">942fa66d552b36a6ea96231e745486e46d3c7789</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>about_Operators</source>
          <target state="translated">about_Operators</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>powershell, cmdlet</source>
          <target state="translated">powershell コマンドレット</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>About Operators</source>
          <target state="translated">演算子の概要</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>about_Operators</source>
          <target state="translated">about_Operators</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>about_Operators</source>
          <target state="translated">about_Operators</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>SHORT DESCRIPTION</source>
          <target state="translated">概要</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Describes the operators that are supported by  Windows PowerShell�.</source>
          <target state="translated">Windows PowerShell でサポートされる演算子をについて説明します。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>LONG DESCRIPTION</source>
          <target state="translated">詳細説明</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>An operator is a language element that you can use in a command or expression.</source>
          <target state="translated">演算子は、コマンドまたは式で使用できる言語要素です。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Windows PowerShell supports several types of operators to help you manipulate values.</source>
          <target state="translated">Windows PowerShell には、いくつかの種類の値を操作するための演算子がサポートしています。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Arithmetic Operators</source>
          <target state="translated">算術演算子</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Use arithmetic operators (<ph id="ph1">\+</ph>, -, <ph id="ph2">\*</ph>, <ph id="ph3">\/</ph>, %) to calculate values in a command or expression.</source>
          <target state="translated">算術演算子を使用して (<ph id="ph1">\+</ph>, 、-、 <ph id="ph2">\*</ph>, 、<ph id="ph3">\/</ph>, 、%) コマンドまたは式の値を計算します。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>With these operators, you can add, subtract, multiply, or divide values, and calculate the remainder (modulus) of a division operation.</source>
          <target state="translated">これらの演算子を使用してを追加、減算、乗算、または値を分割したり除算演算の余り (剰余) を計算します。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>You can also use arithmetic operators with strings, arrays, and hash tables.</source>
          <target state="translated">また、文字列、配列、およびハッシュ テーブルで算術演算子を使用することができます。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>The addition operator concatenates elements.</source>
          <target state="translated">加算演算子では、要素を連結します。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>The multiplication operator returns the specified number of copies of each element.</source>
          <target state="translated">乗算演算子は、指定した各要素のコピー数を返します。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>For more information, see about_Arithmetic_Operators.</source>
          <target state="translated">詳細については、about_Arithmetic_Operators を参照してください。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Assignment Operators</source>
          <target state="translated">代入演算子</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Use assignment operators (<ph id="ph1">\=</ph>, <ph id="ph2">\+\=</ph>, -<ph id="ph3">\=</ph>, <ph id="ph4">\*\=</ph>, <ph id="ph5">\/\=</ph>, %<ph id="ph6">\=</ph>) to assign one or more values to variables, to change the values in a variable, and to append values to variables.</source>
          <target state="translated">代入演算子を使用して (<ph id="ph1">\=</ph>, 、<ph id="ph2">\+\=</ph>, 、-<ph id="ph3">\=</ph>, 、<ph id="ph4">\*\=</ph>, 、<ph id="ph5">\/\=</ph>, 、%<ph id="ph6">\=</ph>) に変数を変数に値を変更して、変数に値を追加する 1 つまたは複数の値を割り当てます。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>You can also cast the variable as any Microsoft .NET Framework data type, such as string or DateTime, or Process variable.</source>
          <target state="translated">DateTime、文字列など、任意の Microsoft .NET Framework データ型として変数またはプロセス変数をキャストすることもできます。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>For more information, see about_Assignment_Operators.</source>
          <target state="translated">詳細については、about_Assignment_Operators を参照してください。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Comparison Operators</source>
          <target state="translated">比較演算子</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Use comparison operators (-eq, -ne, -gt, -lt, -le, -ge) to compare values and test conditions.</source>
          <target state="translated">比較演算子を使用して (-eq、-ne、-gt、-lt、le、-ge) の値を比較し、テスト条件。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>For example, you can compare two string values to determine whether they are equal.</source>
          <target state="translated">たとえば、等しいかどうかを判断する 2 つの文字列値を比較できます。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>The comparison operators include the match operators (-match, -notmatch), which find patterns by using regular expressions; the replace operator (-replace), which uses regular expressions to change input values; the like operators (-like, -notlike), which find patterns using wildcard characters (<ph id="ph1">\*</ph>); and the containment operators (-in, -notin, -contains, -notcontains), which determine whether a test value appears in a reference set.</source>
          <target state="translated">比較演算子を含める一致演算子 (-一致すると、-notmatch)、正規表現を使用してパターンを検索します。replace 演算子 (-置換)、正規表現を使用して、入力の値を変更するにはワイルドカード文字を使用するパターンを検索する (の notlike)、like 演算子 (<ph id="ph1">\*</ph>); と包含演算子 (時のない、-- notcontains を含む)、テスト値が参照セットに表示されるかどうかを決定します。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>They also include the bitwise operators (-bAND, -bOR, -bXOR, -bNOT) to manipulate the bit patterns in values.</source>
          <target state="translated">ビットごとの演算子も含まれます (-、- bOR、- bXOR、- いません ^ の帯域外) 値のビット パターンを操作します。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>For more information, see about_Comparison_Operators</source>
          <target state="translated">詳細については、about_Comparison_Operators を参照してください。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Logical Operators</source>
          <target state="translated">論理演算子</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Use logical operators (-and, -or, -xor, -not, <ph id="ph1">\!</ph>) to connect conditional statements into a single complex conditional.</source>
          <target state="translated">論理演算子を使用して (-、- または xor、-、 <ph id="ph1">\!</ph>) にする 1 つの複雑な条件付きの条件付きステートメントを接続します。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>For example, you can use a logical -and operator to create an object filter with two different conditions.</source>
          <target state="translated">論理的ななどして and 演算子を 2 つの異なる条件でオブジェクトのフィルターを作成します。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>For more information, see about_Logical_Operators.</source>
          <target state="translated">詳細については、「about_logical_operators」を参照してください。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Redirection Operators</source>
          <target state="translated">リダイレクト演算子</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Use redirection operators (&gt;, &gt;&gt;, 2&gt;, 2&gt;, and 2&gt;&amp;1) to send the output of a command or expression to a text file.</source>
          <target state="translated">リダイレクト演算子を使用 (&gt;、&gt;&gt;, 2 &gt;, 2 &gt;、および 2 &gt; &amp; 1) コマンドまたは式の出力をテキスト ファイルに送信します。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>The redirection operators work like the Out-File cmdlet (without parameters) but they also let you redirect error output to specified files.</source>
          <target state="translated">リダイレクト演算子として機能し、Out-file コマンドレット (パラメーターなし) が、指定したファイルへのエラー出力をリダイレクトすることもできます。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>You can also use the Tee-Object cmdlet to redirect output.</source>
          <target state="translated">出力にリダイレクトするのに Tee-object コマンドレットを使用することもできます。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>For more information, see about_Redirection</source>
          <target state="translated">詳細については、about_Redirection を参照してください。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Split and Join Operators</source>
          <target state="translated">分割/結合演算子</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>The -split and -join operators divide and combine substrings.</source>
          <target state="translated">分割/結合演算子は、分割し、部分文字列を結合します。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>The -split operator splits a string into substrings.</source>
          <target state="translated">分割演算子の部分文字列に文字列を分割-です。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>The -join operator concatenates multiple strings into a single string.</source>
          <target state="translated">結合演算子が 1 つの文字列に複数の文字列を連結します。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>For more information, see about_Split and about_Join.</source>
          <target state="translated">詳細については、about_Split と about_Join を参照してください。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Type Operators</source>
          <target state="translated">型演算子</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Use the type operators (-is, -isnot, -as) to find or change the .NET Framework type of an object.</source>
          <target state="translated">型演算子を使用して (には、- isnot、- として) オブジェクトの .NET Framework 型を変更したり検索したりします。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>For more information, see about_Type_Operators.</source>
          <target state="translated">詳細については、about_Type_Operators を参照してください。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Unary Operators</source>
          <target state="translated">単項演算子</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Use unary operators to increment or decrement variables or object properties and to set integers to positive or negative numbers.</source>
          <target state="translated">インクリメントまたはデクリメント変数またはオブジェクトのプロパティと整数を正または負の数値に設定する単項演算子を使用します。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>For example, to increment the variable $a from 9 to 10, you type $a<ph id="ph1">\+\+</ph>.</source>
          <target state="translated">変数 $a を増分するなど、$ 10、9 から入力、<ph id="ph1">\+\+</ph>です。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Special Operators</source>
          <target state="translated">特殊な演算子</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Use special operators to perform tasks that cannot be performed by the other types of operators.</source>
          <target state="translated">その他の種類の演算子によって実行できないタスクを実行するのにには、特殊な演算子を使用します。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>For example, special operators allow you to perform operations such as running commands and changing a value's data type.</source>
          <target state="translated">たとえば、特殊な演算子を使用すると、コマンドを実行して、値のデータ型の変更などの操作を実行できます。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>@( ) Array subexpression operator</source>
          <target state="translated">@ () 配列のサブ式演算子</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Returns the result of one or more statements as an array.</source>
          <target state="translated">1 つまたは複数のステートメントの結果を配列として返します。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>If there is only one item, the array has only one member.</source>
          <target state="translated">1 つの項目がある場合は、1 つのメンバーが配列。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>&amp; Call operator</source>
          <target state="translated">&amp; 呼び出し演算子</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Runs a command, script, or script block.</source>
          <target state="translated">コマンド、スクリプト、またはスクリプト ブロックを実行します。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>The call operator, also known as the "invocation operator," lets you run commands that are stored in variables and represented by strings.</source>
          <target state="translated">呼び出し演算子とも呼ばれる、呼び出し、「演算子」では、変数に格納され、文字列で表されるコマンドを実行できます。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Because the call operator does not parse the command, it cannot interpret command parameters.</source>
          <target state="translated">呼び出し演算子が、コマンドを解析できませんので、コマンドのパラメーターを解析できません。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>[ ] Cast operator</source>
          <target state="translated">のキャスト演算子</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>Converts or limits objects to the specified type.</source>
          <target state="translated">変換または指定した型のオブジェクトを制限します。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>If the objects cannot be converted,  Windows PowerShell generates an error.</source>
          <target state="translated">オブジェクトを変換できない場合、Windows PowerShell には、エラーが生成されます。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>, Comma operator</source>
          <target state="translated">、コンマ演算子</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>As a binary operator, the comma creates an array.</source>
          <target state="translated">二項演算子としては、コンマは、配列を作成します。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>As a unary operator, the comma creates an array with one member.</source>
          <target state="translated">単項演算子としては、コンマは、1 つのメンバーを配列を作成します。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>Place the comma before the member.</source>
          <target state="translated">メンバーの前にコンマを配置します。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>.</source>
          <target state="translated">.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>Dot sourcing operator</source>
          <target state="translated">ドット (.) 演算子 sourcing</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>Runs a script in the current scope so that any functions, aliases, and variables that the script creates are added to the current scope.</source>
          <target state="translated">任意の関数、エイリアス、およびスクリプトを作成する変数が現在のスコープに追加されるように、現在のスコープ内、スクリプトを実行します。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>Note:</source>
          <target state="translated">注: </target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>The dot sourcing operator is followed by a space.</source>
          <target state="translated">演算子 sourcing ドットの後にスペースです。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>Use the space to distinguish the dot from the dot (.) symbol that represents the current directory.</source>
          <target state="translated">ドットに現在のディレクトリを表すドット (.) 記号を区別するために、スペースを使用します。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>In the following example, the Sample.ps1 script in the current directory is run in the current scope.</source>
          <target state="translated">次の例では、現在のディレクトリに Sample.ps1 スクリプトは、現在のスコープで実行します。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>-f Format operator</source>
          <target state="translated">-f 形式演算子</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>Formats strings by using the format method of string objects.</source>
          <target state="translated">文字列オブジェクトの書式設定メソッドを使用して文字列を書式化します。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>Enter the format string on the left side of the operator and the objects to be formatted on the right side of the operator.</source>
          <target state="translated">演算子と演算子の右側にある書式指定するオブジェクトの左側にある書式指定文字列を入力します。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>For more information, see the String.Format method (http:<ph id="ph1">\/\/</ph>go.microsoft.com<ph id="ph2">\/</ph>fwlink<ph id="ph3">\/</ph>?LinkID<ph id="ph4">\=</ph>166450) and Composite Formatting (http:<ph id="ph5">\/\/</ph>go.microsoft.com<ph id="ph6">\/</ph>fwlink<ph id="ph7">\/</ph>?LinkID<ph id="ph8">\=</ph>166451).</source>
          <target state="translated">詳細については、String.Format メソッドを参照してください (http:<ph id="ph1">\/\/</ph>go.microsoft.com<ph id="ph2">\/</ph>fwlink<ph id="ph3">\/</ph>でしょうか。LinkID<ph id="ph4">\=</ph>166450) と複合書式指定 (http:<ph id="ph5">\/\/</ph>go.microsoft.com<ph id="ph6">\/</ph>fwlink<ph id="ph7">\/</ph>でしょうか。LinkID<ph id="ph8">\=</ph>166451)。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>[ ] Index operator</source>
          <target state="translated">演算子</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>Selects objects from indexed collections, such as arrays and hash tables.</source>
          <target state="translated">配列とハッシュ テーブルなどのインデックス付きコレクションからオブジェクトを選択します。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>Array indexes are zero-based, so the first object is indexed as [0].</source>
          <target state="translated">配列インデックスは、[0] として、最初のオブジェクトのインデックスを作成するために、0 から始まる。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>For arrays (only), you can also use negative indexes to get the last values.</source>
          <target state="translated">配列 (のみ)、最後の値を取得するのに負のインデックスを使用することもできます。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>Hash tables are indexed by key value.</source>
          <target state="translated">キーの値では、ハッシュ テーブルはインデックスが作成されます。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>&amp;#124; Pipeline operator</source>
          <target state="translated">&amp; #124 文字です。パイプライン演算子</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>Sends ("pipes") the output of the command that precedes it to the command that follows it.</source>
          <target state="translated">それに続くコマンドに先行するコマンドの出力 (「パイプ」) を送信します。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>When the output includes more than one object (a "collection"), the pipeline operator sends the objects one at a time.</source>
          <target state="translated">出力には、複数のオブジェクト (「コレクション」) が含まれている場合、パイプライン演算子は、一度に 1 つのオブジェクトを送信します。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>.</source>
          <target state="translated">.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>Property dereference operator</source>
          <target state="translated">プロパティが逆参照演算子</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>Accesses the properties and methods of an object.</source>
          <target state="translated">プロパティとオブジェクトのメソッドにアクセスします。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>..</source>
          <target state="translated">..</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>Range operator</source>
          <target state="translated">範囲演算子</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>Represents the sequential integers in an integer array, given an upper and lower boundary.</source>
          <target state="translated">上限と下限の境界を指定した整数の配列、連続した整数を表します。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>:: Static member operator</source>
          <target state="translated">: 静的メンバー演算子</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>Calls the static properties operator and methods of a .NET Framework class.</source>
          <target state="translated">静的プロパティの演算子と .NET Framework クラスのメソッドを呼び出します。</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>To find the static properties and methods of an object, use the Static parameter of the Get-Member cmdlet.</source>
          <target state="translated">静的プロパティおよびオブジェクトのメソッドを検索するには、Get-member コマンドレットの静的パラメーターを使用します。</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>$( ) Subexpression operator</source>
          <target state="translated">$ () 部分式の演算子</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>Returns the result of one or more statements.</source>
          <target state="translated">1 つまたは複数のステートメントの結果を返します。</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>For a single result, returns a scalar.</source>
          <target state="translated">1 つの結果には、スカラーを返します。</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>For multiple results, returns an array.</source>
          <target state="translated">複数の結果を得るには、配列を返します。</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>SEE ALSO</source>
          <target state="translated">関連項目</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>about_Arithmetic_Operators</source>
          <target state="translated">about_Arithmetic_Operators</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>about_Assignment_Operators</source>
          <target state="translated">about_Assignment_Operators</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>about_Comparison_Operators</source>
          <target state="translated">about_Comparison_Operators</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>about_Logical_Operators</source>
          <target state="translated">about_Logical_Operators</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>about_Type_Operators</source>
          <target state="translated">about_Type_Operators</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>about_Split</source>
          <target state="translated">about_Split</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>about_Join</source>
          <target state="translated">about_Join</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>about_Redirection</source>
          <target state="translated">about_Redirection</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>