<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-1c394fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">b9d9fe88dea0a30af3763d1a9816d12bcd709f88</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">reference\5.0\Microsoft.PowerShell.Core\Get-Module.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions" />
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">65977d9e66583398b8c3a07a4ba14960872f99ce</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">e0893d1dfa91f844acbb388a596e695c5b737e48</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>powershell, cmdlet</source>
          <target state="translated">powershell コマンドレット</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Get-Module</source>
          <target state="translated">Get-Module</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Get-Module</source>
          <target state="translated">Get-Module</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>SYNOPSIS</source>
          <target state="translated">概要</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Gets the modules that have been imported or that can be imported into the current session.</source>
          <target state="translated">現在のセッションにインポート済みの、またはインポート可能なモジュールを取得します。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>SYNTAX</source>
          <target state="translated">構文</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Loaded (Default)</source>
          <target state="translated">読み込まれた (既定値)</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>CimSession</source>
          <target state="translated">CimSession</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Available</source>
          <target state="translated">利用可能</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>PsSession</source>
          <target state="translated">PsSession</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>DESCRIPTION</source>
          <target state="translated">説明</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>Get-Module<ept id="p1">**</ept> cmdlet gets the Windows PowerShell modules that have been imported, or that can be imported, into a Windows PowerShell session.</source>
          <target state="translated"> <bpt id="p1">**</bpt>Get-module<ept id="p1">**</ept> コマンドレットをインポート済みのまたはインポート可能な Windows PowerShell セッションには、Windows PowerShell モジュールを取得します。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>The module object that <bpt id="p1">**</bpt>Get-Module<ept id="p1">**</ept> returns contains valuable information about the module.</source>
          <target state="translated">モジュール オブジェクトを <bpt id="p1">**</bpt>Get-module<ept id="p1">**</ept> を返しますが、モジュールに関する貴重な情報が含まれています。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>You can also pipe the module objects to other cmdlets, such as the Import-Module and Remove-Module cmdlets.</source>
          <target state="translated">モジュールのインポートと Remove-module コマンドレットなど、他のコマンドレットに、モジュール オブジェクトを渡すこともできます。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Without parameters, <bpt id="p1">**</bpt>Get-Module<ept id="p1">**</ept> gets modules that have been imported into the current session.</source>
          <target state="translated">パラメーターを指定しない <bpt id="p1">**</bpt>Get-module<ept id="p1">**</ept> 、現在のセッションにインポートされているモジュールを取得します。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>To get all installed modules, specify the <bpt id="p1">*</bpt>ListAvailable<ept id="p1">*</ept> parameter.</source>
          <target state="translated">インストールされているすべてのモジュールを取得するには指定、 <bpt id="p1">*</bpt>ListAvailable<ept id="p1">*</ept> パラメーター。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Get-Module<ept id="p1">**</ept> gets modules, but it does not import them.</source>
          <target state="translated"><bpt id="p1">**</bpt>Get モジュール<ept id="p1">**</ept> 取得モジュールが、インポートは行いません。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Starting in Windows PowerShell 3.0, modules are automatically imported when you use a command in the module, but a <bpt id="p1">**</bpt>Get-Module<ept id="p1">**</ept> command does not trigger an automatic import.</source>
          <target state="translated">Windows PowerShell 3.0 以降は、モジュールが自動的にインポートされるモジュールで、コマンドを使用する場合が、 <bpt id="p1">**</bpt>Get-module<ept id="p1">**</ept> コマンドでは、自動インポートは発生しません。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>You can also import the modules into your session by using the <bpt id="p1">**</bpt>Import-Module<ept id="p1">**</ept> cmdlet.</source>
          <target state="translated">使用して、セッションにモジュールをインポートすることも、 <bpt id="p1">**</bpt>Import-module<ept id="p1">**</ept> コマンドレットです。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Starting in Windows PowerShell 3.0, you can get and then, import modules from remote sessions into the local session.</source>
          <target state="translated">Windows PowerShell 3.0 以降を取得し、その後、ローカル セッションにリモート セッションからモジュールをインポートできます。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>This strategy uses the Implicit Remoting feature of Windows PowerShell and is equivalent to using the Import-PSSession cmdlet.</source>
          <target state="translated">この方法で Windows PowerShell の暗黙的なリモート処理機能を使用して、Import-pssession コマンドレットを使用するとします。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>When you use commands in modules imported from another session, the commands run implicitly in the remote session.</source>
          <target state="translated">別のセッションからインポートしたモジュールのコマンドを使用するコマンドは、リモート セッションで暗黙的に実行します。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>This feature lets you manage the remote computer from the local session.</source>
          <target state="translated">この機能を使用して、ローカルのセッションからリモート コンピューターを管理できます。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Also, starting in Windows PowerShell 3.0, you can use <bpt id="p1">**</bpt>Get-Module<ept id="p1">**</ept> and <bpt id="p2">**</bpt>Import-Module<ept id="p2">**</ept> to get and import Common Information Model (CIM) modules, in which the cmdlets are defined in Cmdlet Definition XML (CDXML) files.</source>
          <target state="translated">また、Windows PowerShell 3.0 以降を使用する <bpt id="p1">**</bpt>Get-module<ept id="p1">**</ept> と <bpt id="p2">**</bpt>Import-module<ept id="p2">**</ept> を取得し、コマンドレットがコマンドレット定義 XML (CDXML) ファイルで定義されている、Common Information Model (CIM) モジュールをインポートします。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>This feature lets you use cmdlets that are implemented in non-managed code assemblies, such as those written in C++.</source>
          <target state="translated">この機能では、C++ で記述されたなどの非マネージ コード アセンブリに実装されているコマンドレットを使用することができます。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>With these new features, the <bpt id="p1">**</bpt>Get-Module<ept id="p1">**</ept> and <bpt id="p2">**</bpt>Import-Module<ept id="p2">**</ept> cmdlets become primary tools for managing heterogeneous enterprises that include computers that run the Windows operating system and computers that run other operating systems.</source>
          <target state="translated">これらの新機能と、 <bpt id="p1">**</bpt>Get-module<ept id="p1">**</ept> と <bpt id="p2">**</bpt>Import-module<ept id="p2">**</ept> コマンドレットの Windows オペレーティング システムとコンピューターを実行しているコンピューターを含む管理の異機種混在の企業が他のオペレーティング システムを実行する主なツールになります。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>To manage remote computers that run the Windows operating system that have Windows PowerShell and Windows PowerShell remoting enabled, create a <bpt id="p1">**</bpt>PSSession<ept id="p1">**</ept> on the remote computer and then use the <bpt id="p2">*</bpt>PSSession<ept id="p2">*</ept> parameter of <bpt id="p3">**</bpt>Get-Module<ept id="p3">**</ept> to get the Windows PowerShell modules in the <bpt id="p4">**</bpt>PSSession<ept id="p4">**</ept>.</source>
          <target state="translated">をリモートのコンピューター、Windows オペレーティング システムを実行している Windows PowerShell および Windows PowerShell リモート処理が有効になっている管理するには、作成、 <bpt id="p1">**</bpt>PSSession<ept id="p1">**</ept> し使用してリモート コンピューター、 <bpt id="p2">*</bpt>PSSession<ept id="p2">*</ept> のパラメーター <bpt id="p3">**</bpt>Get-module<ept id="p3">**</ept> で Windows PowerShell モジュールを取得する、 <bpt id="p4">**</bpt>PSSession<ept id="p4">**</ept>します。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>When you import the modules, and then use the imported commands in the current session, the commands run implicitly in the <bpt id="p1">**</bpt>PSSession<ept id="p1">**</ept> on the remote computer.</source>
          <target state="translated">コマンドは暗黙的に実行モジュールをインポートして、現在のセッションで、インポートされたコマンドを使用すると、 <bpt id="p1">**</bpt>PSSession<ept id="p1">**</ept> リモート コンピューターにします。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>You can use this strategy to manage the remote computer.</source>
          <target state="translated">この戦略を使用して、リモート コンピューターを管理できます。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>You can use a similar strategy to manage computers that do not have Windows PowerShell remoting enabled.</source>
          <target state="translated">同様の方法を使用して、Windows PowerShell リモート処理が有効になっていないコンピューターを管理することができます。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>These include computers that are not running the Windows operating system, and computers that have Windows PowerShell but do not have Windows PowerShell remoting enabled.</source>
          <target state="translated">Windows オペレーティング システムを実行していないコンピューターと Windows PowerShell はあるものの、Windows PowerShell リモート処理が有効になっていないコンピューターが含まれます。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Start by creating a CIM session on the remote computer.</source>
          <target state="translated">まず、リモート コンピューター上の CIM セッションを作成します。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>A CIM session is a connection to Windows Management Instrumentation (WMI) on the remote computer.</source>
          <target state="translated">CIM セッションは、リモート コンピューターで Windows Management Instrumentation (WMI) に接続です。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Then use the <bpt id="p1">*</bpt>CIMSession<ept id="p1">*</ept> parameter of <bpt id="p2">**</bpt>Get-Module<ept id="p2">**</ept> to get CIM modules from the CIM session.</source>
          <target state="translated">使用して、 <bpt id="p1">*</bpt>CIMSession<ept id="p1">*</ept> のパラメーター <bpt id="p2">**</bpt>Get-module<ept id="p2">**</ept> CIM セッションから CIM モジュールを取得します。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>When you import a CIM module by using the <bpt id="p1">**</bpt>Import-Module<ept id="p1">**</ept> cmdlet and then run the imported commands, the commands run implicitly on the remote computer.</source>
          <target state="translated">使用して CIM モジュールをインポートすると、 <bpt id="p1">**</bpt>Import-module<ept id="p1">**</ept> コマンドレット、インポートされたコマンドのコマンドは、リモートのコンピューターで暗黙的に実行して、実行します。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>You can use this WMI and CIM strategy to manage the remote computer.</source>
          <target state="translated">この WMI と CIM の戦略を使用して、リモート コンピューターを管理できます。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>EXAMPLES</source>
          <target state="translated">例</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Example 1: Get modules imported into the current session</source>
          <target state="translated">例 1: 現在のセッションにインポートしたモジュールを取得します。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>This command gets modules that have been imported into the current session.</source>
          <target state="translated">このコマンドは、現在のセッションにインポートされているモジュールを取得します。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Example 2: Get installed modules and available modules</source>
          <target state="translated">例 2: インストールされているモジュールと利用可能なモジュールを取得します。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>This command gets the modules that are installed on the computer and can be imported into the current session.</source>
          <target state="translated">このコマンドは、コンピューターにインストールされていて現在のセッションにインポートできるモジュールを取得します。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Get-Module<ept id="p1">**</ept> looks for available modules in the path specified by the <bpt id="p2">**</bpt>$env:PSModulePath<ept id="p2">**</ept> environment variable.</source>
          <target state="translated"><bpt id="p1">**</bpt>Get モジュール<ept id="p1">**</ept> によって指定されたパスで利用可能なモジュールを検索、 <bpt id="p2">**</bpt>$env:path: PSModulePath<ept id="p2">**</ept> 環境変数です。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>For more information about <bpt id="p1">**</bpt>PSModulePath<ept id="p1">**</ept>, see about_Modules and about_Environment_Variables.</source>
          <target state="translated">詳細については <bpt id="p1">**</bpt>PSModulePath<ept id="p1">**</ept>, 、about_Modules と about_Environment_Variables を参照してください。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Example 3: Get all exported files</source>
          <target state="translated">例 3: すべてのエクスポートされたファイルを取得します。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>This command gets all of the exported files for all available modules.</source>
          <target state="translated">このコマンドは、すべての利用可能なモジュールのすべてのエクスポートされたファイルを取得します。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Example 4: Get a module by its fully qualified name</source>
          <target state="translated">例 4: 完全修飾名でモジュールを取得します。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>This command gets the <bpt id="p1">**</bpt>Microsoft.PowerShell.Management<ept id="p1">**</ept> module by specifying the fully qualified name of the module by using the <bpt id="p2">*</bpt>FullyQualifiedName<ept id="p2">*</ept> parameter.</source>
          <target state="translated">このコマンドは、取得、 <bpt id="p1">**</bpt>Microsoft.PowerShell.Management<ept id="p1">**</ept> モジュールを使用して、モジュールの完全修飾名を指定することによって、 <bpt id="p2">*</bpt>FullyQualifiedName<ept id="p2">*</ept> パラメーター。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>The command then pipes the results into the Format-Table cmdlet to format the results as a table with Name and Version as the column headings.</source>
          <target state="translated">次のコマンドが、結果を列見出しとして名前とバージョンを含むテーブルとして結果の書式を Format-table コマンドレットに渡します。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Example 5: Get properties of a module</source>
          <target state="translated">例 5: モジュールのプロパティを取得します。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>This command gets the properties of the <bpt id="p1">**</bpt>PSModuleInfo<ept id="p1">**</ept> object that <bpt id="p2">**</bpt>Get-Module<ept id="p2">**</ept> returns.</source>
          <target state="translated">このコマンドのプロパティを取得、 <bpt id="p1">**</bpt>PSModuleInfo<ept id="p1">**</ept> オブジェクトを <bpt id="p2">**</bpt>Get-module<ept id="p2">**</ept> を返します。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>There is one object for each module file.</source>
          <target state="translated">モジュール ファイルごとに 1 つのオブジェクトがあります。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>You can use the properties to format and filter the module objects.</source>
          <target state="translated">プロパティを使用して、モジュール オブジェクトを書式設定したり、フィルター処理したりできます。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>For more information about the properties, see PSModule Propertieshttp://go.microsoft.com/fwlink/?LinkId=143624 (http://go.microsoft.com/fwlink/?LinkId=143624) in the MSDN  library.</source>
          <target state="translated">プロパティの詳細については、MSDN ライブラリの PSModule Propertieshttp://go.microsoft.com/fwlink/?LinkId=143624 (http://go.microsoft.com/fwlink/?LinkId=143624) を参照してください。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>The output includes the new properties, such as <bpt id="p1">**</bpt>Author<ept id="p1">**</ept> and <bpt id="p2">**</bpt>CompanyName<ept id="p2">**</ept>, that were introduced in Windows PowerShell 3.0.</source>
          <target state="translated">などの出力に新しいプロパティが含まれています <bpt id="p1">**</bpt>作成者<ept id="p1">**</ept> と <bpt id="p2">**</bpt>CompanyName<ept id="p2">**</ept>, 、Windows PowerShell 3.0 で導入されたことです。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Example 6: Group all modules by name</source>
          <target state="translated">例 6: すべてのモジュールを名前でグループ化します。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>This command gets all module files, both imported and available, and then groups them by module name.</source>
          <target state="translated">このコマンドは、すべてのモジュール ファイルをインポートしたおり、利用可能の両方を取得し、モジュール名ごとにグループ化し、します。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>This lets you see the module files that each script is exporting.</source>
          <target state="translated">これにより、それぞれのスクリプトによってエクスポートされるモジュール ファイルを確認できます。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Example 7: Display the contents of a module manifest</source>
          <target state="translated">例 7: モジュール マニフェストの内容を表示します。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>These commands display the contents of the module manifest for the Windows PowerShell<bpt id="p1">**</bpt>BitsTransfer<ept id="p1">**</ept> module.</source>
          <target state="translated">これらのコマンドは、Windows PowerShell のモジュール マニフェストの内容を表示<bpt id="p1">**</bpt>BitsTransfer<ept id="p1">**</ept> モジュールです。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>Modules are not required to have manifest files.</source>
          <target state="translated">モジュールは、マニフェスト ファイルを持つ必要はありません。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>When they do have a manifest file, the manifest file is required only to include a version number.</source>
          <target state="translated">マニフェスト ファイルがある、マニフェスト ファイルがバージョン番号を含める場合にのみ必要です。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>However, manifest files often provide useful information about a module, its requirements, and its contents.</source>
          <target state="translated">ただし、マニフェスト ファイルは、多くの場合、モジュール、その要件、およびその内容に関する有用な情報を提供します。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>Example 8: List files in module directory</source>
          <target state="translated">例 8: モジュール ディレクトリ内のファイルを一覧表示します。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>This command lists the files in the directory of the module.</source>
          <target state="translated">このコマンドは、モジュールのディレクトリ内のファイルを一覧表示します。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>This is another way to determine what is in a module before you import it.</source>
          <target state="translated">これは、インポートの前にモジュールの内容を確認するためのもう 1 つの方法です。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>Some modules might have help files or ReadMe files that describe the module.</source>
          <target state="translated">モジュールによっては、ヘルプ ファイルやモジュールについて記述した ReadMe ファイルが含まれている場合があります。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>Example 9: Get modules installed on a computer</source>
          <target state="translated">例 9: コンピューターにインストールされているモジュールを取得します。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>These commands get the modules that are installed on the Server01 computer.</source>
          <target state="translated">これらのコマンドは、Server01 コンピューターにインストールされているモジュールを取得します。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>The first command uses the <bpt id="p1">**</bpt>New-PSSession<ept id="p1">**</ept> cmdlet to create a <bpt id="p2">**</bpt>PSSession<ept id="p2">**</ept> on the Server01 computer.</source>
          <target state="translated">最初のコマンドを使用して、 <bpt id="p1">**</bpt>New-pssession<ept id="p1">**</ept> コマンドレットを作成、 <bpt id="p2">**</bpt>PSSession<ept id="p2">**</ept> 、Server01 コンピューター上です。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>The command saves the <bpt id="p1">**</bpt>PSSession<ept id="p1">**</ept> in the $s variable.</source>
          <target state="translated">このコマンドは保存、 <bpt id="p1">**</bpt>PSSession<ept id="p1">**</ept> $s 変数にします。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>The second command uses the <bpt id="p1">*</bpt>PSSession<ept id="p1">*</ept> and <bpt id="p2">*</bpt>ListAvailable<ept id="p2">*</ept> parameters of <bpt id="p3">**</bpt>Get-Module<ept id="p3">**</ept> to get the modules in the <bpt id="p4">**</bpt>PSSession<ept id="p4">**</ept> in the $s variable.</source>
          <target state="translated">2 番目のコマンドを使用して、 <bpt id="p1">*</bpt>PSSession<ept id="p1">*</ept> と <bpt id="p2">*</bpt>ListAvailable<ept id="p2">*</ept> のパラメーター <bpt id="p3">**</bpt>Get-module<ept id="p3">**</ept> モジュールを取得する、 <bpt id="p4">**</bpt>PSSession<ept id="p4">**</ept> $s 変数にします。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>If you pipe modules from other sessions to the <bpt id="p1">**</bpt>Import-Module<ept id="p1">**</ept> cmdlet, <bpt id="p2">**</bpt>Import-Module<ept id="p2">**</ept> imports the module into the current session by using the implicit remoting feature.</source>
          <target state="translated">他のセッションからモジュールをパイプする場合、 <bpt id="p1">**</bpt>Import-module<ept id="p1">**</ept> コマンドレット、 <bpt id="p2">**</bpt>モジュールのインポート<ept id="p2">**</ept> 暗黙的なリモート処理機能を使用して、現在のセッションにモジュールをインポートします。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>This is equivalent to using the <bpt id="p1">**</bpt>Import-PSSession<ept id="p1">**</ept> cmdlet.</source>
          <target state="translated">これを使用すると、 <bpt id="p1">**</bpt>Import-pssession<ept id="p1">**</ept> コマンドレットです。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>You can use the cmdlets from the module in the current session, but commands that use these cmdlets actually run the remote session.</source>
          <target state="translated">現在のセッションに含まれるモジュールのコマンドレットを使用することができますが、これらのコマンドレットを使用するコマンドは、実際にはリモート セッションで実行されます。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">**</bpt>Import-Module<ept id="p1">**</ept> and <bpt id="p2">**</bpt>Import-PSSession<ept id="p2">**</ept>.</source>
          <target state="translated">詳細については、次を参照してください。 <bpt id="p1">**</bpt>Import-module<ept id="p1">**</ept> と <bpt id="p2">**</bpt>Import-pssession<ept id="p2">**</ept>します。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>Example 10: Manage a computer that does not run the Windows operating system</source>
          <target state="translated">10 の使用例: Windows オペレーティング システムを稼働していないコンピューターを管理します。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>The commands in this example enable you to manage the storage systems of a remote computer that is not running the Windows operating system.</source>
          <target state="translated">この例のコマンドを使用すると、Windows オペレーティング システムが実行されていないリモート コンピューターの記憶域システムを管理できます。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>In this example, because the administrator of the computer has installed the Module Discovery WMI provider, the CIM commands can use the default values, which are designed for the provider.</source>
          <target state="translated">この例では、コンピューターの管理者によってモジュール検出用の WMI プロバイダーがインストールされているため、CIM コマンドでプロバイダー用の既定値を使用できます。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>PARAMETERS</source>
          <target state="translated">パラメータ</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>-All</source>
          <target state="translated">-All</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>Indicates that this cmdlet gets all modules in each module folder, including nested modules, manifest (.psd1) files, script module (.psm1) files, and binary module (.dll) files.</source>
          <target state="translated">このコマンドレットが入れ子になったモジュール、マニフェスト (.psd1) ファイル、スクリプト モジュール (.psm1) ファイル、およびバイナリ モジュール (.dll) ファイルを含む各モジュール フォルダー内のすべてのモジュールを取得することを示します。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>Without this parameter, <bpt id="p1">**</bpt>Get-Module<ept id="p1">**</ept> gets only the default module in each module folder.</source>
          <target state="translated">このパラメーターがない <bpt id="p1">**</bpt>Get-module<ept id="p1">**</ept> 各モジュール フォルダー内の既定のモジュールのみを取得します。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>-CimNamespace</source>
          <target state="translated">-CimNamespace</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>Specifies the namespace of an alternate CIM provider that exposes CIM modules.</source>
          <target state="translated">CIM モジュールを公開する代替 CIM プロバイダーの名前空間を指定します。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>The default value is the namespace of the Module Discovery WMI provider.</source>
          <target state="translated">既定値は、モジュール検出用の WMI プロバイダーの名前空間です。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>Use this parameter to get CIM modules from computers and devices that are not running the Windows operating system.</source>
          <target state="translated">このパラメーターを使用して、コンピューターと Windows オペレーティング システムを実行していないデバイスから CIM モジュールを取得します。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>This parameter was introduced in Windows PowerShell 3.0.</source>
          <target state="translated">このパラメーターは Windows PowerShell 3.0 で導入されました。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>-CimResourceUri</source>
          <target state="translated">-CimResourceUri</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>Specifies an alternate location for CIM modules.</source>
          <target state="translated">CIM モジュールの代替の場所を指定します。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>The default value is the resource URI of the Module Discovery WMI provider on the remote computer.</source>
          <target state="translated">既定値は、リモート コンピューター上のモジュール検出用 WMI プロバイダーのリソース URI です。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>Use this parameter to get CIM modules from computers and devices that are not running the Windows operating system.</source>
          <target state="translated">このパラメーターを使用して、コンピューターと Windows オペレーティング システムを実行していないデバイスから CIM モジュールを取得します。</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>This parameter was introduced in Windows PowerShell 3.0.</source>
          <target state="translated">このパラメーターは Windows PowerShell 3.0 で導入されました。</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>-CimSession</source>
          <target state="translated">-CimSession</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>Specifies a CIM session on the remote computer.</source>
          <target state="translated">リモート コンピューター上の CIM セッションを指定します。</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>Enter a variable that contains the CIM session or a command that gets the CIM session, such as a Get-CIMSessionhttp://go.microsoft.com/fwlink/?LinkId=227966 command.</source>
          <target state="translated">CIM セッションまたは Get CIMSessionhttp://go.microsoft.com/fwlink/?LinkId=227966 コマンドなど、CIM セッションを取得するコマンドを含む変数を入力します。</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Get-Module<ept id="p1">**</ept> uses the CIM session connection to get modules from the remote computer.</source>
          <target state="translated"><bpt id="p1">**</bpt>Get モジュール<ept id="p1">**</ept> CIM セッションの接続を使用してリモート コンピューターからモジュールを取得します。</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>When you import the module by using the <bpt id="p1">**</bpt>Import-Module<ept id="p1">**</ept> cmdlet and use the commands from the imported module in the current session, the commands actually run on the remote computer.</source>
          <target state="translated">使用して、モジュールをインポートすると、 <bpt id="p1">**</bpt>Import-module<ept id="p1">**</ept> コマンドレット、現在のセッションにインポートしたモジュールからコマンドを使用して、リモート コンピューターで実際にコマンドを実行します。</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>You can use this parameter to get modules from computers and devices that are not running the Windows operating system, and computers that have Windows PowerShell, but do not have Windows PowerShell remoting enabled.</source>
          <target state="translated">このパラメーターを使用して、Windows オペレーティング システムを実行していないデバイスおよび Windows PowerShell はあるものの、Windows PowerShell リモート処理が有効になっていないコンピューターのコンピューターからモジュールを取得します。</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">*</bpt>CimSession<ept id="p1">*</ept> parameter gets all modules in the <bpt id="p2">**</bpt>CIMSession<ept id="p2">**</ept>.</source>
          <target state="translated"> <bpt id="p1">*</bpt>CimSession<ept id="p1">*</ept> パラメーター内のすべてのモジュールの取得、 <bpt id="p2">**</bpt>CIMSession<ept id="p2">**</ept>します。</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>However, you can import only CIM-based and Cmdlet Definition XML (CDXML)-based modules.</source>
          <target state="translated">ただし、インポートできるのは、CIM ベースのモジュールとコマンドレット定義 XML (CDXML) ベースのモジュールのみです。</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>-FullyQualifiedName</source>
          <target state="translated">-FullyQualifiedName</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>Specifies names of modules in the form of <bpt id="p1">**</bpt>ModuleSpecification<ept id="p1">**</ept> objects.</source>
          <target state="translated">モジュールの名前を指定の形式で <bpt id="p1">**</bpt>ModuleSpecification<ept id="p1">**</ept> オブジェクトです。</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>These objects are described in the Remarks section of ModuleSpecification Constructor (Hashtable)http://msdn.microsoft.com/library/windows/desktop/jj136290(v=vs.85).aspx (http://msdn.microsoft.com/library/windows/desktop/jj136290(v=vs.85).aspx) in the Microsoft Developer Network (MSDN) library.</source>
          <target state="translated">これらのオブジェクトは、「解説」のセクションで説明 ModuleSpecification Constructor (Hashtable) http://msdn.microsoft.com/library/windows/desktop/jj136290 (v=vs.85).aspx (Microsoft Developer Network (MSDN) ライブラリで http://msdn.microsoft.com/library/windows/desktop/jj136290 (v=vs.85).aspx)。</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>For example, the <bpt id="p1">*</bpt>FullyQualifiedName<ept id="p1">*</ept> parameter accepts a module name that is specified in the following formats:</source>
          <target state="translated">たとえば、 <bpt id="p1">*</bpt>FullyQualifiedName<ept id="p1">*</ept> パラメーターは、次の形式で指定されているモジュールの名前を受け付けます。</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>@{ModuleName = "modulename"; ModuleVersion = "version_number"} @{ModuleName = "modulename"; ModuleVersion = "version_number"; Guid = "GUID"}.</source>
          <target state="translated">@{ModuleName ="modulename"です。ModuleVersion ="version_number"} @{ModuleName ="modulename"です。ModuleVersion ="version_number"です。Guid ="GUID"}。</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>ModuleName<ept id="p1">**</ept> and <bpt id="p2">**</bpt>ModuleVersion<ept id="p2">**</ept> are required, but <bpt id="p3">**</bpt>Guid<ept id="p3">**</ept> is optional.</source>
          <target state="translated"><bpt id="p1">**</bpt>ModuleName<ept id="p1">**</ept> と <bpt id="p2">**</bpt>ModuleVersion<ept id="p2">**</ept> は必須では <bpt id="p3">**</bpt>Guid<ept id="p3">**</ept> は省略可能です。</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>You cannot specify the <bpt id="p1">*</bpt>FullyQualifiedName<ept id="p1">*</ept> parameter in the same command as a <bpt id="p2">*</bpt>Name<ept id="p2">*</ept> parameter.</source>
          <target state="translated">指定することはできません、 <bpt id="p1">*</bpt>FullyQualifiedName<ept id="p1">*</ept> のと同じコマンド内のパラメーター、 <bpt id="p2">*</bpt>名前<ept id="p2">*</ept> パラメーター。</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>-ListAvailable</source>
          <target state="translated">-ListAvailable</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>Indicates that this cmdlet gets all installed modules.</source>
          <target state="translated">このコマンドレットがインストールされているすべてのモジュールを取得することを示します。</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Get-Module<ept id="p1">**</ept> gets modules in paths listed in the <bpt id="p2">**</bpt>PSModulePath<ept id="p2">**</ept> environment variable.</source>
          <target state="translated"><bpt id="p1">**</bpt>Get モジュール<ept id="p1">**</ept> に表示されたパスでモジュールを取得、 <bpt id="p2">**</bpt>PSModulePath<ept id="p2">**</ept> 環境変数です。</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>Without this parameter, <bpt id="p1">**</bpt>Get-Module<ept id="p1">**</ept> gets only the modules that are both listed in the <bpt id="p2">**</bpt>PSModulePath<ept id="p2">**</ept> environment variable, and that are loaded in the current session.</source>
          <target state="translated">このパラメーターがない <bpt id="p1">**</bpt>Get-module<ept id="p1">**</ept> 取得には、どちらもモジュールのみが一覧表示、 <bpt id="p2">**</bpt>PSModulePath<ept id="p2">**</ept> 環境変数、およびですが、現在のセッションに読み込まれています。</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source><bpt id="p1">*</bpt>ListAvailable<ept id="p1">*</ept> does not return information about modules that are not found in the <bpt id="p2">**</bpt>PSModulePath<ept id="p2">**</ept> environment variable, even if those modules are loaded in the current session.</source>
          <target state="translated"><bpt id="p1">*</bpt>ListAvailable<ept id="p1">*</ept> にはないモジュールに関する情報を返さない、 <bpt id="p2">**</bpt>PSModulePath<ept id="p2">**</ept> 、現在のセッションにこれらのモジュールが読み込まれている場合でも、環境変数です。</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>-Name</source>
          <target state="translated">-Name</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>Specifies names or name patterns of modules that this cmdlet gets.</source>
          <target state="translated">名前またはこのコマンドレットを取得するモジュールの名前のパターンを指定します。</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>Wildcard characters are permitted.</source>
          <target state="translated">ワイルドカード文字を使用できます。</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>You can also pipe the names to <bpt id="p1">**</bpt>Get-Module<ept id="p1">**</ept>.</source>
          <target state="translated">名前をパイプすることもできます <bpt id="p1">**</bpt>Get-module<ept id="p1">**</ept>します。</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>You cannot specify the <bpt id="p1">*</bpt>FullyQualifiedName<ept id="p1">*</ept> parameter in the same command as a <bpt id="p2">*</bpt>Name<ept id="p2">*</ept> parameter.</source>
          <target state="translated">指定することはできません、 <bpt id="p1">*</bpt>FullyQualifiedName<ept id="p1">*</ept> のと同じコマンド内のパラメーター、 <bpt id="p2">*</bpt>名前<ept id="p2">*</ept> パラメーター。</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source><bpt id="p1">*</bpt>Name<ept id="p1">*</ept> cannot accept a module GUID as a value.</source>
          <target state="translated"><bpt id="p1">*</bpt>名前<ept id="p1">*</ept> モジュール GUID を値としてを受け付けることができません。</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>To return modules by specifying a GUID, use <bpt id="p1">*</bpt>FullyQualifiedName<ept id="p1">*</ept> instead.</source>
          <target state="translated">GUID を指定してモジュールを返すには使用 <bpt id="p1">*</bpt>FullyQualifiedName<ept id="p1">*</ept> 代わりにします。</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>-PSSession</source>
          <target state="translated">PSSession</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>Gets the modules in the specified user-managed Windows PowerShell session (<bpt id="p1">**</bpt>PSSession<ept id="p1">**</ept>).</source>
          <target state="translated">指定したユーザー管理 Windows PowerShell セッションでのモジュールを取得 (<bpt id="p1">**</bpt>PSSession<ept id="p1">**</ept>)。</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>Enter a variable that contains the session, a command that gets the session, such as a Get-PSSession command, or a command that creates the session, such as a New-PSSession command.</source>
          <target state="translated">セッション、Get-pssession コマンドなど、セッションを取得するコマンドまたは New-pssession コマンドなど、セッションを作成するコマンドを含む変数を入力します。</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>When the session is connected to a remote computer, you must specify the <bpt id="p1">*</bpt>ListAvailable<ept id="p1">*</ept> parameter.</source>
          <target state="translated">指定する必要があります、セッションがリモート コンピューターに接続されている場合、 <bpt id="p1">*</bpt>ListAvailable<ept id="p1">*</ept> パラメーター。</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">**</bpt>Get-Module<ept id="p1">**</ept> command that uses the <bpt id="p2">*</bpt>PSSession<ept id="p2">*</ept> parameter is equivalent to using the Invoke-Command cmdlet to run a <ph id="ph1">`Get-Module -ListAvailable`</ph> command in a <bpt id="p3">**</bpt>PSSession<ept id="p3">**</ept>.</source>
          <target state="translated">A <bpt id="p1">**</bpt>Get-module<ept id="p1">**</ept> を使用するコマンド、 <bpt id="p2">*</bpt>PSSession<ept id="p2">*</ept> パラメーターは、Invoke-command コマンドレットを使用して実行する、 <ph id="ph1">`Get-Module -ListAvailable`</ph> コマンドを <bpt id="p3">**</bpt>PSSession<ept id="p3">**</ept>します。</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>This parameter was introduced in Windows PowerShell 3.0.</source>
          <target state="translated">このパラメーターは Windows PowerShell 3.0 で導入されました。</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>-Refresh</source>
          <target state="translated">更新</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>Indicates that this cmdlet refreshes the cache of installed commands.</source>
          <target state="translated">このコマンドレットがインストールされているコマンドのキャッシュを更新することを示します。</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>The command cache is created when the session starts.</source>
          <target state="translated">コマンドのキャッシュは、セッションの開始時に作成されます。</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>It enables the Get-Command cmdlet to get commands from modules that are not imported into the session.</source>
          <target state="translated">Get-command コマンドレット、セッションにインポートされていないモジュールからコマンドを取得するようになります。</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>This parameter is designed for development and testing scenarios in which the contents of modules have changed since the session started.</source>
          <target state="translated">このパラメーターは、セッションが開始された時点からモジュールの内容が変化する開発およびテスト シナリオ用に用意されています。</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>When you specify the <bpt id="p1">*</bpt>Refresh<ept id="p1">*</ept> parameter in a command, you must specify <bpt id="p2">*</bpt>ListAvailable<ept id="p2">*</ept>.</source>
          <target state="translated">指定すると、 <bpt id="p1">*</bpt>更新<ept id="p1">*</ept> を指定する必要があります、コマンドのパラメーター、 <bpt id="p2">*</bpt>ListAvailable<ept id="p2">*</ept>します。</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>This parameter was introduced in Windows PowerShell 3.0.</source>
          <target state="translated">このパラメーターは Windows PowerShell 3.0 で導入されました。</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>CommonParameters</source>
          <target state="translated">CommonParameters</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutVariable, -OutBuffer, -PipelineVariable, -Verbose, -WarningAction, and -WarningVariable.</source>
          <target state="translated">このコマンドレットは、共通のパラメーターをサポートしています:-デバッグ、-erroraction、-errorvariable、- InformationAction-InformationVariable、- OutVariable、-OutBuffer、- PipelineVariable、- Verbose、および - WarningVariable です。</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>For more information, see about_CommonParameters (http://go.microsoft.com/fwlink/?LinkID=113216).</source>
          <target state="translated">詳細については、about_CommonParameters (http://go.microsoft.com/fwlink/?LinkID=113216) を参照してください。</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>INPUTS</source>
          <target state="translated">入力</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>System.String</source>
          <target state="translated">System.String</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>You can pipe module names to this cmdlet.</source>
          <target state="translated">このコマンドレットをモジュール名をパイプすることができます。</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>.</source>
          <target state="translated">.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>OUTPUTS</source>
          <target state="translated">出力</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>System.Management.Automation.PSModuleInfo</source>
          <target state="translated">System.Management.Automation.PSModuleInfo</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source>This cmdlet returns objects that represent modules.</source>
          <target state="translated">このコマンドレットでは、モジュールを表すオブジェクトを返します。</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source>When you specify the <bpt id="p1">*</bpt>ListAvailable<ept id="p1">*</ept> parameter, <bpt id="p2">**</bpt>Get-Module<ept id="p2">**</ept> returns a <bpt id="p3">**</bpt>ModuleInfoGrouping<ept id="p3">**</ept> object, which is a type of <bpt id="p4">**</bpt>PSModuleInfo<ept id="p4">**</ept> object that has the same properties and methods.</source>
          <target state="translated">指定すると、 <bpt id="p1">*</bpt>ListAvailable<ept id="p1">*</ept> パラメーター、 <bpt id="p2">**</bpt>Get-module<ept id="p2">**</ept> 返します、 <bpt id="p3">**</bpt>ModuleInfoGrouping<ept id="p3">**</ept> 型であるオブジェクトの <bpt id="p4">**</bpt>PSModuleInfo<ept id="p4">**</ept> 同じプロパティとメソッドを持つオブジェクト。</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source>NOTES</source>
          <target state="translated">ノート</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source>Beginning in Windows PowerShell 3.0, the core commands that are included in Windows PowerShell are packaged in modules.</source>
          <target state="translated">Windows PowerShell 3.0 以降、Windows PowerShell に含まれているコア コマンドはモジュールにパッケージ化されています。</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source>The exception is <bpt id="p1">**</bpt>Microsoft.PowerShell.Core<ept id="p1">**</ept>, which is a snap-in (<bpt id="p2">**</bpt>PSSnapin<ept id="p2">**</ept>).</source>
          <target state="translated">例外は、 <bpt id="p1">**</bpt>Microsoft.PowerShell.Core<ept id="p1">**</ept>, 、スナップインである (<bpt id="p2">**</bpt>PSSnapin<ept id="p2">**</ept>)。</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source>By default, only the <bpt id="p1">**</bpt>Microsoft.PowerShell.Core<ept id="p1">**</ept> snap-in is added to the session.</source>
          <target state="translated">既定では、のみ、 <bpt id="p1">**</bpt>Microsoft.PowerShell.Core<ept id="p1">**</ept> スナップインがセッションに追加します。</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve">
          <source>Modules are imported automatically on first use and you can use the <bpt id="p1">**</bpt>Import-Module<ept id="p1">**</ept> cmdlet to import them.</source>
          <target state="translated">モジュールは初回使用時に自動的にインポートして、使用して、 <bpt id="p1">**</bpt>Import-module<ept id="p1">**</ept> コマンドレットをインポートすることです。</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source>Starting in Windows PowerShell 3.0, the core commands that are installed with Windows PowerShell are packaged in modules.</source>
          <target state="translated">Windows PowerShell 3.0 以降、Windows PowerShell と共にインストールされるコア コマンドはモジュールにパッケージ化します。</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source>In Windows PowerShell 2.0, and in host programs that create older-style sessions in later versions of Windows PowerShell, the core commands are packaged in snap-ins (<bpt id="p1">**</bpt>PSSnapins<ept id="p1">**</ept>).</source>
          <target state="translated">コア コマンドがスナップインでパッケージ化された Windows PowerShell 2.0 およびそれ以降のバージョンの Windows PowerShell で古いスタイルのセッションを作成するホスト プログラムでは、(<bpt id="p1">**</bpt>PSSnapins<ept id="p1">**</ept>)。</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source>The exception is <bpt id="p1">**</bpt>Microsoft.PowerShell.Core<ept id="p1">**</ept>, which is always a snap-in.</source>
          <target state="translated">例外は、 <bpt id="p1">**</bpt>Microsoft.PowerShell.Core<ept id="p1">**</ept>, 、これは、常にスナップインです。</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve">
          <source>Also, remote sessions, such as those started by the <bpt id="p1">**</bpt>New-PSSession<ept id="p1">**</ept> cmdlet, are older-style sessions that include core snap-ins.</source>
          <target state="translated">リモート セッションも、によって開始されたものなど、 <bpt id="p1">**</bpt>New-pssession<ept id="p1">**</ept> コマンドレットはコア スナップインを含む古いスタイルのセッションです。</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve">
          <source>For information about the <bpt id="p1">**</bpt>CreateDefault2<ept id="p1">**</ept> method that creates newer-style sessions with core modules, see CreateDefault2 Methodhttp://msdn.microsoft.com/en-us/library/windows/desktop/system.management.automation.runspaces.initialsessionstate.createdefault2(v=VS.85).aspx (http://msdn.microsoft.com/en-us/library/windows/desktop/system.management.automation.runspaces.initialsessionstate.createdefault2(v=VS.85).aspx) in the MSDN library.</source>
          <target state="translated">については、 <bpt id="p1">**</bpt>CreateDefault2<ept id="p1">**</ept> コア モジュールを含む新しいスタイルのセッションを作成するメソッドは、CreateDefault2 Methodhttp://msdn.microsoft.com/en-us/library/windows/desktop/system.management.automation.runspaces.initialsessionstate.createdefault2 (v=VS.85).aspx (MSDN ライブラリの http://msdn.microsoft.com/en-us/library/windows/desktop/system.management.automation.runspaces.initialsessionstate.createdefault2 (v=VS.85).aspx) を参照してください。。</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Get-Module<ept id="p1">**</ept> gets only modules in locations that are stored in the value of the <bpt id="p2">**</bpt>PSModulePath<ept id="p2">**</ept> environment variable ($env:PSModulePath).</source>
          <target state="translated"><bpt id="p1">**</bpt>Get モジュール<ept id="p1">**</ept> の値に格納されている場所にのみモジュールを取得、 <bpt id="p2">**</bpt>PSModulePath<ept id="p2">**</ept> 環境変数 ($env:path: PSModulePath)。</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve">
          <source>You can use the <bpt id="p1">*</bpt>Path<ept id="p1">*</ept> parameter of the <bpt id="p2">**</bpt>Import-Module<ept id="p2">**</ept> cmdlet to import modules in other locations, but you cannot use the <bpt id="p3">**</bpt>Get-Module<ept id="p3">**</ept> cmdlet to get them.</source>
          <target state="translated">使用することができます、 <bpt id="p1">*</bpt>パス<ept id="p1">*</ept> のパラメーター、 <bpt id="p2">**</bpt>Import-module<ept id="p2">**</ept> ものの、他の場所のモジュールをインポートするコマンドレットを使用できません、 <bpt id="p3">**</bpt>Get-module<ept id="p3">**</ept> コマンドレットを取得します。</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve">
          <source>Also, starting in Windows PowerShell 3.0, new properties have been added to the object that <bpt id="p1">**</bpt>Get-Module<ept id="p1">**</ept> returns that make it easier to learn about modules even before they are imported.</source>
          <target state="translated">また、Windows PowerShell 3.0 以降、新しいプロパティが追加されましたオブジェクトにする <bpt id="p1">**</bpt>Get-module<ept id="p1">**</ept> モジュールについては、インポートする前にもより簡単にするを返します。</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve">
          <source>All properties are populated before importing.</source>
          <target state="translated">インポートする前に、すべてのプロパティが設定されます。</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve">
          <source>These include the <bpt id="p1">**</bpt>ExportedCommands<ept id="p1">**</ept>, <bpt id="p2">**</bpt>ExportedCmdlets<ept id="p2">**</ept> and <bpt id="p3">**</bpt>ExportedFunctions<ept id="p3">**</ept> properties that list the commands that the module exports.</source>
          <target state="translated">以下の <bpt id="p1">**</bpt>ExportedCommands<ept id="p1">**</ept>, 、<bpt id="p2">**</bpt>ExportedCmdlets<ept id="p2">**</ept> と <bpt id="p3">**</bpt>ExportedFunctions<ept id="p3">**</ept> モジュールがエクスポートするコマンドを一覧表示されるプロパティです。</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">*</bpt>ListAvailable<ept id="p1">*</ept> parameter gets only well-formed modules, that is, folders that contain at least one file whose base name is the same as the name of the module folder.</source>
          <target state="translated"> <bpt id="p1">*</bpt>ListAvailable<ept id="p1">*</ept> パラメーターが整形式のモジュールのみ、つまり、モジュール フォルダーの名前と同じ基本名前のファイルが含まれているフォルダーを取得します。</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve">
          <source>The base name is the name without the file name extension.</source>
          <target state="translated">ベース名は、ファイル名拡張子の付かない名前です。</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve">
          <source>Folders that contain files that have different names are considered to be containers, but not modules.</source>
          <target state="translated">異なる名前を持つファイルを含むフォルダは、コンテナー モジュールではなくと見なされます。</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve">
          <source>To get modules that are implemented as .dll files, but are not enclosed in a module folder, specify both the <bpt id="p1">*</bpt>ListAvailable<ept id="p1">*</ept> and <bpt id="p2">*</bpt>All<ept id="p2">*</ept> parameters.</source>
          <target state="translated">.Dll ファイルとして実装されますが、モジュール フォルダーに含まれていないモジュールを取得するには、両方を指定、 <bpt id="p1">*</bpt>ListAvailable<ept id="p1">*</ept> と <bpt id="p2">*</bpt>すべて<ept id="p2">*</ept> パラメーター。</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve">
          <source>To use the CIM session feature, the remote computer must have WS-Management remoting and Windows Management Instrumentation (WMI), which is the Microsoft implementation of the Common Information Model (CIM) standard.</source>
          <target state="translated">CIM セッション機能を使用するには、リモート コンピューターにおいて、WS-Management リモート処理と Common Information Model (CIM) 標準の Microsoft 実装である Windows Management Instrumentation (WMI) が必要です。</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve">
          <source>The computer must also have the Module Discovery WMI provider or an alternate WMI provider that has the same basic features.</source>
          <target state="translated">さらに、モジュール検出用の WMI プロバイダーまたは同じ基本機能を備えた代替 WMI プロバイダーもコンピューターに必要です。</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve">
          <source>You can use the CIM session feature on computers that are not running the Windows operating system and on Windows computers that have Windows PowerShell, but do not have Windows PowerShell remoting enabled.</source>
          <target state="translated">Windows オペレーティング システムを実行していないコンピューター上および Windows PowerShell はあるものの、Windows PowerShell リモート処理が有効になっていない Windows コンピューター CIM セッション機能を使用することができます。</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve">
          <source>You can also use the CIM parameters to get CIM modules from computers that have Windows PowerShell remoting enabled.</source>
          <target state="translated">また、Windows PowerShell リモート処理が有効になっているコンピューターから CIM モジュールを取得、CIM パラメーターを使用することができます。</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve">
          <source>This includes the local computer.</source>
          <target state="translated">これには、ローカル コンピューターが含まれます。</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve">
          <source>When you create a CIM session on the local computer, Windows PowerShell uses DCOM, instead of WMI, to create the session.</source>
          <target state="translated">ローカル コンピューター上に CIM セッションを作成するとき、Windows PowerShell は、WMI ではなく DCOM を使用してセッションを作成します。</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve">
          <source>RELATED LINKS</source>
          <target state="translated">関連リンク</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve">
          <source>Get-CimSession</source>
          <target state="translated">Get-CimSession</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve">
          <source>New-CimSession</source>
          <target state="translated">New-CimSession</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve">
          <source>about_Modules</source>
          <target state="translated">about_Modules</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve">
          <source>Get-PSSession</source>
          <target state="translated">Get-pssession</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve">
          <source>Import-Module</source>
          <target state="translated">Import-Module</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve">
          <source>Import-PSSession</source>
          <target state="translated">Import-PSSession</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve">
          <source>New-PSSession</source>
          <target state="translated">New-PSSession</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve">
          <source>Remove-Module</source>
          <target state="translated">Remove-Module</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>