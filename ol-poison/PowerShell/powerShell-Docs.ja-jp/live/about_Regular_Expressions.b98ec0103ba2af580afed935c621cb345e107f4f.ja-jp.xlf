<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-1c394fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">0738f1ed719b9d81315af5829ab115014cba6a7d</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">reference\5.0\Microsoft.PowerShell.Core\About\about_Regular_Expressions.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions" />
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">2b12872a96f0a1ff25f246bc0c790bc97609718b</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">9bb067fa69bff02fd633e81c157e88e5817715c2</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>about_Regular_Expressions</source>
          <target state="translated">about_Regular_Expressions</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>powershell, cmdlet</source>
          <target state="translated">powershell コマンドレット</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>About Regular Expressions</source>
          <target state="translated">正規表現の概要</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>about_Regular_Expressions</source>
          <target state="translated">about_Regular_Expressions</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>TOPIC</source>
          <target state="translated">トピック</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>about_Regular_Expressions</source>
          <target state="translated">about_Regular_Expressions</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>SHORT DESCRIPTION</source>
          <target state="translated">概要</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Describes regular expressions in Windows PowerShell.</source>
          <target state="translated">Windows PowerShell で正規表現をについて説明します。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>LONG DESCRIPTION</source>
          <target state="translated">詳細説明</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Windows PowerShell supports the following regular expression characters.</source>
          <target state="translated">Windows PowerShell には、次の正規表現文字がサポートしています。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Format   Logic                            Example</source>
          <target state="translated">Format ロジックの例</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>value    Matches exact characters         "book" -match "oo" anywhere in the original value.</source>
          <target state="translated">値が正確な文字と一致する"book"-「オブジェクト指向」任意の場所に、元の値に一致します。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>.</source>
          <target state="translated">.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Matches any single character.</source>
          <target state="translated">任意の 1 文字と一致します。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>"copy" -match "c..y"</source>
          <target state="translated">[copy] - 一致"c。 します。y"</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>[value]  Matches at least one of the      "big" -match "b[iou]g" characters in the brackets.</source>
          <target state="translated">[値] 少なくとも 1 つと一致する「大規模な-」の角かっこ内の"b [iou] g"文字に一致します。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>[range]  Matches at least one of the      "and" -match "[a-e]nd" characters within the range.</source>
          <target state="translated">[範囲] 少なくとも 1 つの一致、"and"、"[a ~ e] nd"文字の範囲内で一致します。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>The use of a hyphen (–) allows you to specify an adjacent character.</source>
          <target state="translated">ハイフン (-) の使用には、隣接する文字を指定することができます。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>[^]      Matches any characters except    "and" -match "[^brt]nd" those in brackets.</source>
          <target state="translated">[^]     一致する任意の文字を除く「および」と一致"[^ brt] nd"角かっこ内です。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>^        Matches the beginning            "book" -match "^bo" characters.</source>
          <target state="translated">^ 先頭に一致する"book"- 一致"^ bo"文字です。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>$        Matches the end characters.</source>
          <target state="translated">$ では、最後の文字と一致します。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>"book" -match "ok$"</source>
          <target state="translated">"book"-「ok$」に一致</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Matches any instances            "baggy" -match "g" of the preceding character.</source>
          <target state="translated">"Baggy"- すべてのインスタンスと一致する"g"の直前の文字と一致します。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>?</source>
          <target state="translated">?</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Matches zero or one instance     "baggy" -match "g?"</source>
          <target state="translated">0 または 1 個の一致するインスタンスの"baggy"-"g ですか?"に一致します。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>of the preceding character.</source>
          <target state="translated">直前の文字。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>\        Matches the character that       "Try$" -match "Try<ph id="ph1">\$</ph>" follows as an escaped character.</source>
          <target state="translated">\ 文字を「Try$」に一致-と一致"しようと<ph id="ph1">\$</ph>"エスケープ文字としてに依存しています。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Windows PowerShell supports the character classes available in Microsoft .NET Framework regular expressions.</source>
          <target state="translated">Windows PowerShell には、Microsoft .NET Framework 正規表現で使用できる文字クラスがサポートしています。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Format   Logic                            Example</source>
          <target state="translated">Format ロジックの例</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>\p{name} Matches any character in the     "abcd defg" -match "\p{Ll}+" named character class specified by {name}.</source>
          <target state="translated">任意の文字、"abcd defg"- \p{name} 一致では、"\p{Ll}+"{name} で指定された文字クラスの名前と一致します。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Supported names are Unicode groups and block ranges such as Ll, Nd, Z, IsGreek, and IsBoxDrawing.</source>
          <target state="translated">サポートされている名前は、Unicode グループや、ブロックの範囲などとして Ll、Nd、Z、IsGreek、および IsBoxDrawing です。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>\P{name} Matches text not included in     1234 -match "\P{Ll}+" the groups and block ranges specified in {name}.</source>
          <target state="translated">\P{name} 1234 に含まれていないテキストに一致-"\P{Ll}+"グループに一致し、{name} で指定された範囲をブロックします。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>\w       Matches any word character.</source>
          <target state="translated">\w は、任意の文字と一致します。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>"abcd defg" -match "\w+" Equivalent to the Unicode        (this matches abcd) character categories [\p{Ll} \p{Lu}\p{Lt}\p{Lo}\p{Nd}\p{Pc}].</source>
          <target state="translated">"abcd defg"-"\w+"(abcd と一致する)、Unicode に相当する機能との一致 [\p{Ll} \p{Lu}\p{Lt}\p{Lo}\p{Nd}\p{Pc}] のカテゴリの文字します。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>If ECMAScript-compliant behavior is specified with the ECMAScript option, \w is equivalent to [a-zA-Z_0-9].</source>
          <target state="translated">ECMAScript 準拠の動作が ECMAScript オプションで指定されている場合、\w は [a-zA-Z_0-9] と同じです。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>\W       Matches any nonword character.</source>
          <target state="translated">\W は単語以外の任意の文字と一致します。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>"abcd defg" -match "\W+" Equivalent to the Unicode        (This matches the space) categories [^\p{Ll}\p{Lu}\p{Lt} \p{Lo}\p{Nd}\p{Pc}].</source>
          <target state="translated">"abcd defg"-"\W+"に一致 (スペースと一致する)、Unicode と同じカテゴリ [^ \p{Ll}\p{Lu}\p{Lt} \p{Lo}\p{Nd}\p{Pc}] です。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>\s       Matches any white-space          "abcd defg" -match "\s+" character.</source>
          <target state="translated">\s 一致の空白文字の"abcd defg"-"\s+"の文字と一致します。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Equivalent to the Unicode character categories [\f\n\r\t\v\x85\p{Z}].</source>
          <target state="translated">Unicode 文字のカテゴリ [\f\n\r\t\v\x85\p{Z}] に相当します。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>\S       Matches any non-white-space      "abcd defg" -match "\S+" character.</source>
          <target state="translated">\S に一致するすべての空白以外の"abcd defg"-"\S+"の文字と一致します。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Equivalent to the Unicode character categories [^\f\n\r\t\v\x85\p{Z}].</source>
          <target state="translated">Unicode 文字のカテゴリと同じ [^ \f\n\r\t\v\x85\p{Z}] です。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>\d       Matches any decimal digit.</source>
          <target state="translated">\d は、10 進数字と一致します。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>12345 -match "\d+" Equivalent to \p{Nd} for Unicode and [0-9] for non- Unicode behavior.</source>
          <target state="translated">12345 - 一致"\d+"に相当する \p{Nd} Unicode および [0-9] の Unicode 以外の動作をします。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>\D       Matches any nondigit.</source>
          <target state="translated">\D は数字以外と一致します。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>"abcd" -match "\D+" Equivalent  to \P{Nd} for Unicode and [^0-9] for non- Unicode behavior.</source>
          <target state="translated">"abcd"-"\D+"に一致 \P{Nd に相当} Unicode のおよび [^0-9] Unicode 以外の動作をします。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Windows PowerShell supports the quantifiers available in .NET Framework regular expressions.</source>
          <target state="translated">Windows PowerShell には、.NET Framework 正規表現で使用可能な量指定子がサポートしています。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>The following are some examples of quantifiers.</source>
          <target state="translated">量指定子のいくつかの例を次に示します。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Format   Logic                            Example</source>
          <target state="translated">Format ロジックの例</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Specifies zero or more matches;  "abc" -match "\w" for example, \wor (abc).</source>
          <target state="translated">0 個以上の一致を指定します。 "abc"の"\w"\wor (abc) などに一致します。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Equivalent to {0,}.</source>
          <target state="translated">{0,} と同じです。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Matches repeating instances of   "xyxyxy" -match "xy+" the preceding characters.</source>
          <target state="translated">一致するインスタンスを繰り返しの"xyxyxy"-「xy +」、前の文字と一致します。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>?</source>
          <target state="translated">?</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Specifies zero or one matches;   "abc" -match "\w?"</source>
          <target state="translated">0 個または 1 つの一致を指定します。  "abc"の"\w ですか?"と一致</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>for example, \w? or (abc)?.</source>
          <target state="translated">たとえば、\w でしょうか。または、(abc) ですか。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Equivalent to {0,1}.</source>
          <target state="translated">{0, 1} と同じです。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>{n}      Specifies exactly n matches;     "abc" -match "\w{2}" for example, (pizza){2}.</source>
          <target state="translated">{n} は、ちょうど n 個の一致を指定します。    "abc"の例では、(ピザ) に一致する"\w{2}"\ {2 \}。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>{n,}     Specifies at least n matches;    "abc" -match "\w{2,}" for example, (abc){2,}.</source>
          <target state="translated">{n}    少なくとも n 個の一致を指定します。   "abc"に一致する"\w{2、}"など (abc) {2,} します。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>{n,m}    Specifies at least n, but no     "abc" -match "\w{2,3}" more than m, matches.</source>
          <target state="translated">{n, m}   少なくとも指定なし"abc"- n 一致"\w{2,3}"よりも m、一致します。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>All the comparisons shown in the preceding table evaluate to true.</source>
          <target state="translated">前の表に示すようにすべての比較は、true に評価されます。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>Notice that the escape character for regular expressions, a backslash (), is different from the escape character for Windows PowerShell.</source>
          <target state="translated">正規表現は、円記号 () のエスケープ文字が、Windows PowerShell のエスケープ文字と異なっていることに注意してください。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>The escape character for Windows PowerShell is the backtick character (`)</source>
          <target state="translated">Windows PowerShell のエスケープ文字とは、アクサン グラーブ文字 (')</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>(ASCII 96).</source>
          <target state="translated">(ASCII 96)。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>For more information, see the "Regular Expression Language Elements" topic in the Microsoft Developer Network (MSDN) library at http://go.microsoft.com/fwlink/?LinkId=133231.</source>
          <target state="translated">詳細については、Microsoft Developer Network (MSDN) ライブラリ http://go.microsoft.com/fwlink/?LinkId=133231 で「正規表現言語要素」を参照してください。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>SEE ALSO</source>
          <target state="translated">関連項目</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>about_Comparison_Operators about_Operators</source>
          <target state="translated">about_Comparison_Operators about_Operators</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>