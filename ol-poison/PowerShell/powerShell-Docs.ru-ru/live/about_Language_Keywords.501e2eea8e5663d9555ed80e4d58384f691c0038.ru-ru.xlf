<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ru-ru">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-1c394fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">9d3200d4bf7ab30579a6de9c2a3dbf27ca82244f</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">reference\5.0\Microsoft.PowerShell.Core\About\about_Language_Keywords.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions" />
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">52c6cd6b06c666e8bd1159f9523bb6219988cefa</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f9c66dcc5d0efd2efb6c88bbf5c0cdc2bcee9cda</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>about_Language_Keywords</source>
          <target state="translated">about_Language_Keywords</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>powershell, cmdlet</source>
          <target state="translated">PowerShell, командлет</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>About Language Keywords</source>
          <target state="translated">О ключевых словах языка</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>about_Language_Keywords</source>
          <target state="translated">about_Language_Keywords</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>about_Language_Keywords</source>
          <target state="translated">about_Language_Keywords</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>SHORT DESCRIPTION</source>
          <target state="translated">КРАТКОЕ ОПИСАНИЕ</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Describes the keywords in the Windows PowerShell scripting language.</source>
          <target state="translated">Содержит описание ключевых слов языка сценариев Windows PowerShell.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>LONG DESCRIPTION</source>
          <target state="translated">ПОДРОБНОЕ ОПИСАНИЕ</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Windows PowerShell has the following language keywords.</source>
          <target state="translated">Windows PowerShell имеет следующие ключевые слова языка.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>For more information, see the about topic for the keyword and the information that follows the table.</source>
          <target state="translated">Дополнительные сведения см. в разделе о разделе ключевое слово и информацию, приведены после таблицы.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Keyword            Reference</source>
          <target state="translated">Справочник по ключевое слово</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Begin              about_Functions, about_Functions_Advanced Break              about_Break, about_Trap Catch              about_Try_Catch_Finally Continue           about_Continue, about_Trap Data               about_Data_Sections Do                 about_Do, about_While DynamicParam       about_Functions_Advanced_Parameters Else               about_If Elseif             about_If End                about_Functions, about_Functions_Advanced_Methods Exit               Described in this topic.</source>
          <target state="translated">Начните about_Functions, about_Functions_Advanced Break about_Break, about_Continue продолжить about_Try_Catch_Finally about_Trap Catch, about_Trap данных "about_data_sections" about_Do, about_While DynamicParam about_Functions_Advanced_Parameters Else about_If Elseif about_If End about_Functions, about_Functions_Advanced_Methods выхода, описанные в этом разделе.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Filter             about_Functions Finally            about_Try_Catch_Finally For                about_For ForEach            about_ForEach From               Reserved for future use.</source>
          <target state="translated">Фильтрация about_Functions наконец about_Try_Catch_Finally для about_For about_ForEach ForEach из зарезервированного для использования в будущем.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Function           about_Functions, about_Functions_Advanced If                 about_If In                 about_ForEach InlineScript       about_InlineScript Hidden             about_Hidden Parallel           about_Parallel, about_ForEach-Parallel Param              about_Functions Process            about_Functions, about_Functions_Advanced Return             about_Return Sequence           about_Sequence Switch             about_Switch Throw              about_Throw, about_Functions_Advanced_Methods Trap               about_Trap, about_Break, about_Try_Catch_Finally Try                about_Try_Catch_Finally Until              about_Do While              about_While, about_Do Workflow           about_Workflows</source>
          <target state="translated">Функция about_Functions, если при попытке about_If в параллельных about_Parallel about_ForEach InlineScript about_InlineScript Hidden about_Hidden about_Functions процесс about_Functions about_ForEach параллельного Param, возвращаемое about_Return about_Functions_Advanced последовательности коммутатора about_Sequence about_Switch about_Throw Throw, ловушки about_Trap about_Functions_Advanced_Methods, about_Break, about_Try_Catch_Finally about_Functions_Advanced about_Try_Catch_Finally до about_Do при about_While , about_Do рабочие процессы рабочего процесса</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Language Keywords</source>
          <target state="translated">Ключевые слова языка</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Begin</source>
          <target state="translated">Начать</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Specifies one part of the body of a function, along with the DynamicParam, Process, and End keywords.</source>
          <target state="translated">Указывает одну часть тела функции, а также ключевые слова DynamicParam, Process и End.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>The Begin statement list runs one time before any objects are received from the pipeline.</source>
          <target state="translated">Список операторов Begin запускается один раз перед любыми объектами получаются из конвейера.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Syntax:</source>
          <target state="translated">Синтаксис:</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>function <ph id="ph1">&lt;name&gt;</ph> { DynamicParam {<ph id="ph2">&lt;statement list&gt;</ph>} begin {<ph id="ph3">&lt;statement list&gt;</ph>} process {<ph id="ph4">&lt;statement list&gt;</ph>} end {<ph id="ph5">&lt;statement list&gt;</ph>} }</source>
          <target state="translated">функция <ph id="ph1">&lt;name&gt;</ph> {DynamicParam {<ph id="ph2">&lt;statement list&gt;</ph>} begin {<ph id="ph3">&lt;statement list&gt;</ph>} процесс {<ph id="ph4">&lt;statement list&gt;</ph>} end {<ph id="ph5">&lt;statement list&gt;</ph>}}</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Break</source>
          <target state="translated">Break</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Causes a script to exit a loop.</source>
          <target state="translated">В результате сценарий для выхода из цикла.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Syntax:</source>
          <target state="translated">Синтаксис:</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>while (<ph id="ph1">&lt;condition&gt;</ph>) {</source>
          <target state="translated">Хотя (<ph id="ph1">&lt;condition&gt;</ph>) {...}</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>...</source>
          <target state="translated">...</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>break</source>
          <target state="translated">break</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>...</source>
          <target state="translated">...</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>}</source>
          <target state="translated">}</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Catch</source>
          <target state="translated">Catch</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Specifies a statement list to run if an error occurs in the accompanying Try statement list.</source>
          <target state="translated">Указывает список операторов для выполнения при возникновении ошибки в списке сопутствующие инструкции Try.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>An error type requires brackets.</source>
          <target state="translated">Тип ошибки требует квадратные скобки.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>The second pair of brackets indicates that the error type is optional.</source>
          <target state="translated">Вторая пара скобок указывает необязательный тип ошибки.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Syntax:</source>
          <target state="translated">Синтаксис:</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>try {<ph id="ph1">&lt;statement list&gt;</ph>} catch [[<ph id="ph2">&lt;error type&gt;</ph>]] {<ph id="ph3">&lt;statement list&gt;</ph>}</source>
          <target state="translated">Попробуйте {<ph id="ph1">&lt;statement list&gt;</ph>} catch [[<ph id="ph2">&lt;error type&gt;</ph>]] {<ph id="ph3">&lt;statement list&gt;</ph>}</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Continue</source>
          <target state="translated">Продолжение</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Causes a script to stop running a loop and to go back to the condition.</source>
          <target state="translated">В результате сценарий, чтобы прекратить выполнение цикла и вернуться к условию.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>If the condition is met, the script begins the loop again.</source>
          <target state="translated">Если условие выполняется, сценарий начинается цикл снова.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Syntax:</source>
          <target state="translated">Синтаксис:</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>while (<ph id="ph1">&lt;condition&gt;</ph>) {</source>
          <target state="translated">Хотя (<ph id="ph1">&lt;condition&gt;</ph>) {...}</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>...</source>
          <target state="translated">...</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>continue</source>
          <target state="translated">Продолжить</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>...</source>
          <target state="translated">...</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>}</source>
          <target state="translated">}</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Data</source>
          <target state="translated">Данные</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>In a script, defines a section that isolates data from the script logic.</source>
          <target state="translated">В сценарии определяет раздел, который изолирует данных от логики сценариев.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Can also include If statements and some limited commands.</source>
          <target state="translated">Также можно включить, если инструкции и некоторые ограниченной команды.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Syntax:</source>
          <target state="translated">Синтаксис:</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>data <ph id="ph1">&lt;variable&gt;</ph> [-supportedCommand &lt;cmdlet-name&gt;] {<ph id="ph2">&lt;permitted content&gt;</ph>}</source>
          <target state="translated">данные <ph id="ph1">&lt;variable&gt;</ph> [-supportedCommand &lt; имя командлета &gt;] {<ph id="ph2">&lt;permitted content&gt;</ph>}</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Do</source>
          <target state="translated">Сделать</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Used with the While or Until keyword as a looping construct.</source>
          <target state="translated">Использовать в качестве конструкцию цикла While или Until-ключевое слово.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Windows PowerShell runs the statement list at least one time, unlike a loop that uses While.</source>
          <target state="translated">Windows PowerShell выполняет списка операторов по крайней мере один раз, в отличие от цикла, который используется во время.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Syntax:</source>
          <target state="translated">Синтаксис:</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>do {<ph id="ph1">&lt;statement list&gt;</ph>} while (<ph id="ph2">&lt;condition&gt;</ph>)</source>
          <target state="translated">Выполните {<ph id="ph1">&lt;statement list&gt;</ph>} хотя (<ph id="ph2">&lt;condition&gt;</ph>)</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>do {<ph id="ph1">&lt;statement list&gt;</ph>} until (<ph id="ph2">&lt;condition&gt;</ph>)</source>
          <target state="translated">Выполните {<ph id="ph1">&lt;statement list&gt;</ph>} пока (<ph id="ph2">&lt;condition&gt;</ph>)</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>DynamicParam</source>
          <target state="translated">DynamicParam</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>Specifies one part of the body of a function, along with the Begin, Process, and End keywords.</source>
          <target state="translated">Указывает одну часть тела функции, а также ключевые слова Begin, Process и End.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Dynamic parameters are added at run time.</source>
          <target state="translated">Динамические параметры добавляются во время выполнения.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Syntax:</source>
          <target state="translated">Синтаксис:</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>function <ph id="ph1">&lt;name&gt;</ph> { DynamicParam {<ph id="ph2">&lt;statement list&gt;</ph>} begin {<ph id="ph3">&lt;statement list&gt;</ph>} process {<ph id="ph4">&lt;statement list&gt;</ph>} end {<ph id="ph5">&lt;statement list&gt;</ph>} }</source>
          <target state="translated">функция <ph id="ph1">&lt;name&gt;</ph> {DynamicParam {<ph id="ph2">&lt;statement list&gt;</ph>} begin {<ph id="ph3">&lt;statement list&gt;</ph>} процесс {<ph id="ph4">&lt;statement list&gt;</ph>} end {<ph id="ph5">&lt;statement list&gt;</ph>}}</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>Else</source>
          <target state="translated">Else</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>Used with the If keyword to specify the default statement list.</source>
          <target state="translated">Используется с, если ключевое слово для указания списка операторов по умолчанию.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>Syntax:</source>
          <target state="translated">Синтаксис:</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>if (<ph id="ph1">&lt;condition&gt;</ph>) {<ph id="ph2">&lt;statement list&gt;</ph>} else {<ph id="ph3">&lt;statement list&gt;</ph>}</source>
          <target state="translated">if (<ph id="ph1">&lt;condition&gt;</ph>) {<ph id="ph2">&lt;statement list&gt;</ph>} else {<ph id="ph3">&lt;statement list&gt;</ph>}</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>Elseif</source>
          <target state="translated">ElseIf</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>Used with the If and Else keywords to specify additional conditionals.</source>
          <target state="translated">Используется с If и Else ключевых слов для указания дополнительных условий.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>The Else keyword is optional.</source>
          <target state="translated">Ключевое слово Else является необязательным.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>Syntax:</source>
          <target state="translated">Синтаксис:</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>if (<ph id="ph1">&lt;condition&gt;</ph>) {<ph id="ph2">&lt;statement list&gt;</ph>} elseif (<ph id="ph3">&lt;condition&gt;</ph>) {<ph id="ph4">&lt;statement list&gt;</ph>} else {<ph id="ph5">&lt;statement list&gt;</ph>}</source>
          <target state="translated">Если (<ph id="ph1">&lt;condition&gt;</ph>) {<ph id="ph2">&lt;statement list&gt;</ph>} elseif (<ph id="ph3">&lt;condition&gt;</ph>) {<ph id="ph4">&lt;statement list&gt;</ph>} else {<ph id="ph5">&lt;statement list&gt;</ph>}</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>End</source>
          <target state="translated">Окончание</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>Specifies one part of the body of a function, along with the DynamicParam, Begin, and End keywords.</source>
          <target state="translated">Указывает одну часть тела функции, а также ключевые слова DynamicParam, Begin и End.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>The End statement list runs one time after all the objects have been received from the pipeline.</source>
          <target state="translated">Конец списка операторов запускается один раз после того, как все объекты были получены из конвейера.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>Syntax:</source>
          <target state="translated">Синтаксис:</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>function <ph id="ph1">&lt;name&gt;</ph> { DynamicParam {<ph id="ph2">&lt;statement list&gt;</ph>} begin {<ph id="ph3">&lt;statement list&gt;</ph>} process {<ph id="ph4">&lt;statement list&gt;</ph>} end {<ph id="ph5">&lt;statement list&gt;</ph>} }</source>
          <target state="translated">функция <ph id="ph1">&lt;name&gt;</ph> {DynamicParam {<ph id="ph2">&lt;statement list&gt;</ph>} begin {<ph id="ph3">&lt;statement list&gt;</ph>} процесс {<ph id="ph4">&lt;statement list&gt;</ph>} end {<ph id="ph5">&lt;statement list&gt;</ph>}}</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>Exit</source>
          <target state="translated">Выход</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>Causes Windows PowerShell to exit a script or a Windows PowerShell instance.</source>
          <target state="translated">В результате Windows PowerShell выйти из скрипта или экземпляра Windows PowerShell.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>When you run 'powershell.exe –File <ph id="ph1">&lt;path to a script&gt;</ph>', you can only set the %ERRORLEVEL% variable to a value other than zero by using the exit statement.</source>
          <target state="translated">При запуске "powershell.exe — файл <ph id="ph1">&lt;path to a script&gt;</ph>", переменная % ERRORLEVEL % можно задать только значение, отличное от нуля, используя оператор exit.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>In the following example, the user sets the error level variable value to 4 by typing 'exit 4'.</source>
          <target state="translated">В следующем примере пользователь задает значение переменной ошибки уровня 4, введя 'exit 4".</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>C:\Users\bruce\documents\test&gt;type test.ps1</source>
          <target state="translated">C:\Users\bruce\documents\test &gt; введите test.ps1</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>1</source>
          <target state="translated">1</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>2</source>
          <target state="translated">2</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>3</source>
          <target state="translated">3</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>exit 4</source>
          <target state="translated">выйти из 4</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>C:\Users\bruce\documents\test&gt;powershell -file ./test.ps1</source>
          <target state="translated">C:\Users\bruce\documents\test &gt; powershell-файл./test.ps1</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>1</source>
          <target state="translated">1</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>2</source>
          <target state="translated">2</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>3</source>
          <target state="translated">3</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>C:\Users\bruce\documents\test&gt;echo %ERRORLEVEL%</source>
          <target state="translated">C:\Users\bruce\documents\test &gt; echo % ERRORLEVEL %</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>4</source>
          <target state="translated">4</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>When you use powershell.exe with the File parameter, the .ps1 (script) file itself should include instructions for handling any errors or exceptions that occur while the script is running.</source>
          <target state="translated">При использовании с параметром файла powershell.exe, сам файл .ps1 (сценарий) должен включать инструкции по обработке ошибки или исключения, которые могут возникнуть при выполнении сценария.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>You should only use the exit statement to indicate the post-execution status of the script.</source>
          <target state="translated">Оператор exit следует использовать только для указания состояния после выполнения сценария.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>Syntax:</source>
          <target state="translated">Синтаксис:</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>exit exit</source>
          <target state="translated">Выход выход</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>Filter</source>
          <target state="translated">Фильтр</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>Specifies a function in which the statement list runs one time for each input object.</source>
          <target state="translated">Указывает функцию, в котором список операторов запускается один раз для каждого входного объекта.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>It has the same effect as a function that contains only a Process block.</source>
          <target state="translated">Он действует так же, как функции, которая содержит только блок Process.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>Syntax:</source>
          <target state="translated">Синтаксис:</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>filter <ph id="ph1">&lt;name&gt;</ph> {<ph id="ph2">&lt;statement list&gt;</ph>}</source>
          <target state="translated">Фильтр <ph id="ph1">&lt;name&gt;</ph> {<ph id="ph2">&lt;statement list&gt;</ph>}</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>Finally</source>
          <target state="translated">Заключение</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>Defines a statement list that runs after statements that are associated with Try and Catch.</source>
          <target state="translated">Определяет список инструкций, который выполняется после инструкций, которые связаны с Try и Catch.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>A Finally statement list runs even if you press CTRL+C to leave a script or if you use the Exit keyword in the script.</source>
          <target state="translated">Объект наконец список операторов выполняется даже при нажатии клавиш CTRL + C, чтобы оставить сценарий или использовать ключевое слово Exit в скрипт.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>Syntax:</source>
          <target state="translated">Синтаксис:</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>try {<ph id="ph1">&lt;statement list&gt;</ph>} catch [&lt;error type] {<ph id="ph2">&lt;statement list&gt;</ph>} finally {<ph id="ph3">&lt;statement list&gt;</ph>}</source>
          <target state="translated">Попробуйте {<ph id="ph1">&lt;statement list&gt;</ph>} catch [&lt; тип ошибки] {<ph id="ph2">&lt;statement list&gt;</ph>} finally {<ph id="ph3">&lt;statement list&gt;</ph>}</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>For</source>
          <target state="translated">Для</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>Defines a loop by using a condition.</source>
          <target state="translated">Определяет цикл с помощью условия.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>Syntax:</source>
          <target state="translated">Синтаксис:</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>for (<ph id="ph1">&lt;initialize&gt;</ph>; <ph id="ph2">&lt;condition&gt;</ph>; <ph id="ph3">&lt;iterate&gt;</ph>) {<ph id="ph4">&lt;statement list&gt;</ph>}</source>
          <target state="translated">for (<ph id="ph1">&lt;initialize&gt;</ph>; <ph id="ph2">&lt;condition&gt;</ph>; <ph id="ph3">&lt;iterate&gt;</ph>) {<ph id="ph4">&lt;statement list&gt;</ph>}</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>ForEach</source>
          <target state="translated">По каждому элементу</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>Defines a loop by using each member of a collection.</source>
          <target state="translated">Определяет цикл с помощью каждого члена коллекции.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>Syntax:</source>
          <target state="translated">Синтаксис:</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>ForEach (<ph id="ph1">&lt;item&gt;</ph> in <ph id="ph2">&lt;collection&gt;</ph>){<ph id="ph3">&lt;statement list&gt;</ph>}</source>
          <target state="translated">ForEach (<ph id="ph1">&lt;item&gt;</ph> в <ph id="ph2">&lt;collection&gt;</ph>) {<ph id="ph3">&lt;statement list&gt;</ph>}</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>From</source>
          <target state="translated">С</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>Reserved for future use.</source>
          <target state="translated">Зарезервирован для использования в будущем.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>Function</source>
          <target state="translated">Функция</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>Creates a named statement list of reusable code.</source>
          <target state="translated">Создает список именованных инструкцию повторно используемый код.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>You can name the scope a function belongs to.</source>
          <target state="translated">Можно задать имя области, к которой принадлежит функция.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>And, you can specify one or more named parameters by using the Param keyword.</source>
          <target state="translated">И, используя ключевое слово Param можно указать один или несколько именованных параметров.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>Within the function statement list, you can include DynamicParam, Begin, Process, and End statement lists.</source>
          <target state="translated">В списке инструкции функции включают DynamicParam, Begin, процесс и завершить список инструкций.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>Syntax:</source>
          <target state="translated">Синтаксис:</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>function [&lt;scope:&gt;]<ph id="ph1">&lt;name&gt;</ph> { param ([type]&lt;$pname1&gt; [, [type]&lt;$pname2&gt;]) DynamicParam {<ph id="ph2">&lt;statement list&gt;</ph>} begin {<ph id="ph3">&lt;statement list&gt;</ph>} process {<ph id="ph4">&lt;statement list&gt;</ph>} end {<ph id="ph5">&lt;statement list&gt;</ph>} }</source>
          <target state="translated">функции [&lt; области: &gt;]<ph id="ph1">&lt;name&gt;</ph> {param ([type] &lt; pname1 &gt; [, [type] &lt; pname2 &gt;]) DynamicParam {<ph id="ph2">&lt;statement list&gt;</ph>} begin {<ph id="ph3">&lt;statement list&gt;</ph>} процесс {<ph id="ph4">&lt;statement list&gt;</ph>} end {<ph id="ph5">&lt;statement list&gt;</ph>}}</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>You also have the option of defining one or more parameters outside the statement list after the function name.</source>
          <target state="translated">Также имеется возможность определить один или несколько параметров за пределами списка операторов после имени функции.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>Syntax:</source>
          <target state="translated">Синтаксис:</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>function [&lt;scope:&gt;]<ph id="ph1">&lt;name&gt;</ph> [([type]&lt;$pname1&gt;, [[type]&lt;$pname2&gt;])] { DynamicParam {<ph id="ph2">&lt;statement list&gt;</ph>} begin {<ph id="ph3">&lt;statement list&gt;</ph>} process {<ph id="ph4">&lt;statement list&gt;</ph>} end {<ph id="ph5">&lt;statement list&gt;</ph>} }</source>
          <target state="translated">функции [&lt; области: &gt;]<ph id="ph1">&lt;name&gt;</ph> [([type] &lt;$ pname1 &gt;, [[type] &lt;$ pname2 &gt;])] {DynamicParam {<ph id="ph2">&lt;statement list&gt;</ph>} begin {<ph id="ph3">&lt;statement list&gt;</ph>} процесс {<ph id="ph4">&lt;statement list&gt;</ph>} end {<ph id="ph5">&lt;statement list&gt;</ph>}}</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>If</source>
          <target state="translated">Если командлет</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>Defines a conditional.</source>
          <target state="translated">Определяет условного выражения.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>Syntax:</source>
          <target state="translated">Синтаксис:</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>if (<ph id="ph1">&lt;condition&gt;</ph>) {<ph id="ph2">&lt;statement list&gt;</ph>}</source>
          <target state="translated">if (<ph id="ph1">&lt;condition&gt;</ph>) {<ph id="ph2">&lt;statement list&gt;</ph>}</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>Hidden</source>
          <target state="translated">Hidden</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>Hides class members from the default results of the Get-Member cmdlet, and from IntelliSense and tab completion results.</source>
          <target state="translated">Скрывает члены из результатов по умолчанию командлет Get-Member и результатах завершения IntelliSense и класса.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>Syntax:</source>
          <target state="translated">Синтаксис:</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>Hidden [data type] $member_name</source>
          <target state="translated">Скрытые member_name $ [тип данных]</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>In</source>
          <target state="translated">Входящий</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>Used in a ForEach statement to create a loop that uses each member of a collection.</source>
          <target state="translated">Используется в операторе ForEach для создания цикл, который используется каждый член коллекции.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>Syntax:</source>
          <target state="translated">Синтаксис:</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>ForEach (<ph id="ph1">&lt;item&gt;</ph> in <ph id="ph2">&lt;collection&gt;</ph>){<ph id="ph3">&lt;statement list&gt;</ph>}</source>
          <target state="translated">ForEach (<ph id="ph1">&lt;item&gt;</ph> в <ph id="ph2">&lt;collection&gt;</ph>) {<ph id="ph3">&lt;statement list&gt;</ph>}</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>InlineScript</source>
          <target state="translated">InlineScript</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>Runs workflow commands in a shared Windows PowerShell session.</source>
          <target state="translated">Выполняет команды рабочего процесса в общий сеанс Windows PowerShell.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>This keyword is valid only in a Windows PowerShell Workflow.</source>
          <target state="translated">Это ключевое слово является допустимым только в рабочем процессе Windows PowerShell.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>Syntax:</source>
          <target state="translated">Синтаксис:</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>workflow <ph id="ph1">&lt;verb&gt;-&lt;noun&gt;</ph> { InlineScript { &lt;Command/Expression&gt;</source>
          <target state="translated">рабочий процесс <ph id="ph1">&lt;verb&gt;-&lt;noun&gt;</ph> InlineScript {{&lt; команду или выражение &gt;</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>...</source>
          <target state="translated">...</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>} }</source>
          <target state="translated">} }</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source>The InlineScript keyword indicates an InlineScript activity, which runs commands in a shared standard (non-workflow) session.</source>
          <target state="translated">Ключевое слово InlineScript указывает действие InlineScript, который выполняет команды в сеансе общего standard (отличных от рабочего процесса).</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source>You can use the InlineScript keyword to run commands that are not otherwise valid in a workflow, and to run commands that share data.</source>
          <target state="translated">Для выполнения команд, которые недопустимы в противном случае в рабочем процессе и для запуска команд с общими данными, можно использовать ключевое слово InlineScript.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source>By default, the commands in an InlineScript script block run in a separate process.</source>
          <target state="translated">По умолчанию в блоке сценария InlineScript команды выполняются в отдельном процессе.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source>For more information, see about_InlineScript and Running Windows PowerShell Commands in a Workflow (http://technet.microsoft.com/library/jj574197.aspx).</source>
          <target state="translated">Дополнительные сведения см. в разделе about_InlineScript и запуск команд Windows PowerShell в рабочем процессе (http://technet.microsoft.com/library/jj574197.aspx).</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source>Param</source>
          <target state="translated">Param</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source>Defines the parameters in a function.</source>
          <target state="translated">Определяет параметры, в функции.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve">
          <source>Syntax:</source>
          <target state="translated">Синтаксис:</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source>function [&lt;scope:&gt;]<ph id="ph1">&lt;name&gt;</ph> { param ([type]&lt;$pname1&gt;[, [[type]&lt;$pname2&gt;]]) <ph id="ph2">&lt;statement list&gt;</ph> }</source>
          <target state="translated">функции [&lt; области: &gt;]<ph id="ph1">&lt;name&gt;</ph> {param ([type] &lt; pname1 &gt; [, [[type] &lt; pname2 &gt;]]) <ph id="ph2">&lt;statement list&gt;</ph> }</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source>Parallel</source>
          <target state="translated">Parallel</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source>Runs workflow commands concurrently and in an undefined order.</source>
          <target state="translated">Выполняет команды рабочего процесса, одновременно и в неопределенном порядке.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve">
          <source>This keyword is valid only in a Windows PowerShell Workflow.</source>
          <target state="translated">Это ключевое слово является допустимым только в рабочем процессе Windows PowerShell.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve">
          <source>The Parallel keyword indicates a Parallel script block.</source>
          <target state="translated">Параллельные ключевое слово указывает блок сценария Parallel.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve">
          <source>The commands in a Parallel script block can run at the same time and in any order.</source>
          <target state="translated">Команды в блок сценария Parallel можно запустить в то же время и в любом порядке.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve">
          <source>This feature significantly improves the performance of a workflow.</source>
          <target state="translated">Эта функция значительно повышает производительность рабочего процесса.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve">
          <source>Syntax:</source>
          <target state="translated">Синтаксис:</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve">
          <source>workflow <ph id="ph1">&lt;verb&gt;-&lt;noun&gt;</ph> { Parallel {</source>
          <target state="translated">рабочий процесс <ph id="ph1">&lt;verb&gt;-&lt;noun&gt;</ph> {параллельных {}</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve">
          <source>…</source>
          <target state="translated">…</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve">
          <source>} }</source>
          <target state="translated">} }</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve">
          <source>The Parallel parameter of the ForEach keyword processes the items in a collection in parallel.</source>
          <target state="translated">Параметр параллельных ключевого слова ForEach обрабатывает элементы в коллекции в параллельном режиме.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve">
          <source>The activities in the script block run sequentially on each item, but the script block can run on multiple items at the same time and the items are processed in an undefined order.</source>
          <target state="translated">Действия в блоке сценария выполняются последовательно применительно к каждому элементу, но блок скрипта может выполняться на несколько элементов одновременно, и элементы обрабатываются в неопределенном порядке.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve">
          <source>Syntax:</source>
          <target state="translated">Синтаксис:</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve">
          <source>workflow <ph id="ph1">&lt;verb&gt;-&lt;noun&gt;</ph> { ForEach -Parallel (<ph id="ph2">&lt;item&gt;</ph> in <ph id="ph3">&lt;collection&gt;</ph>) {</source>
          <target state="translated">рабочий процесс <ph id="ph1">&lt;verb&gt;-&lt;noun&gt;</ph> {ForEach-Parallel (<ph id="ph2">&lt;item&gt;</ph> в <ph id="ph3">&lt;collection&gt;</ph>) {...}</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve">
          <source>...</source>
          <target state="translated">...</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve">
          <source>} }</source>
          <target state="translated">} }</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve">
          <source>For more information, see about_Parallel, about_ForEach-Parallel</source>
          <target state="translated">Дополнительные сведения см. в разделе about_Parallel about_ForEach параллельного</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve">
          <source>Process</source>
          <target state="translated">Процесс</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve">
          <source>Specifies a part of the body of a function, along with the DynamicParam, Begin, and End keywords.</source>
          <target state="translated">Указывает часть тела функции, а также ключевые слова DynamicParam, Begin и End.</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve">
          <source>When a Process statement list receives input from the pipeline, the Process statement list runs one time for each element from the pipeline.</source>
          <target state="translated">Когда список инструкций процесс получает входные данные из конвейера, список операторов процесс запускается один раз для каждого элемента из конвейера.</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve">
          <source>If the pipeline provides no objects, the Process statement list does not run.</source>
          <target state="translated">Если конвейер предоставляет нет объектов, список операторов процесс не выполняется.</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve">
          <source>If the command is the first command in the pipeline, the Process statement list runs one time.</source>
          <target state="translated">Если команда является первая команда в конвейере, список операторов процесс запускается один раз.</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve">
          <source>Syntax:</source>
          <target state="translated">Синтаксис:</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve">
          <source>function <ph id="ph1">&lt;name&gt;</ph> { DynamicParam {<ph id="ph2">&lt;statement list&gt;</ph>} begin {<ph id="ph3">&lt;statement list&gt;</ph>} process {<ph id="ph4">&lt;statement list&gt;</ph>} end {<ph id="ph5">&lt;statement list&gt;</ph>} }</source>
          <target state="translated">функция <ph id="ph1">&lt;name&gt;</ph> {DynamicParam {<ph id="ph2">&lt;statement list&gt;</ph>} begin {<ph id="ph3">&lt;statement list&gt;</ph>} процесс {<ph id="ph4">&lt;statement list&gt;</ph>} end {<ph id="ph5">&lt;statement list&gt;</ph>}}</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve">
          <source>Return</source>
          <target state="translated">Возврат</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve">
          <source>Causes Windows PowerShell to leave the current scope, such as a script or function, and writes the optional expression to the output.</source>
          <target state="translated">Вызывает Windows PowerShell оставить текущую область, такие как сценарии или функции и записывает выходные данные необязательное выражение.</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve">
          <source>Syntax:</source>
          <target state="translated">Синтаксис:</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve">
          <source>return [<ph id="ph1">&lt;expression&gt;</ph>]</source>
          <target state="translated">Возвращает [<ph id="ph1">&lt;expression&gt;</ph>]</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve">
          <source>Sequence</source>
          <target state="translated">Sequence</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve">
          <source>Runs workflow commands sequentially in a Parallel script block.</source>
          <target state="translated">Выполняет команды рабочего процесса последовательно в блок сценария Parallel.</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve">
          <source>This keyword is valid only in a Windows PowerShell Workflow.</source>
          <target state="translated">Это ключевое слово является допустимым только в рабочем процессе Windows PowerShell.</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve">
          <source>Syntax:</source>
          <target state="translated">Синтаксис:</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve">
          <source>workflow <ph id="ph1">&lt;verb&gt;-&lt;noun&gt;</ph> { Parallel { Sequence { <ph id="ph2">&lt;Activity&gt;</ph> } } }</source>
          <target state="translated">рабочий процесс <ph id="ph1">&lt;verb&gt;-&lt;noun&gt;</ph> {параллельных {последовательности { <ph id="ph2">&lt;Activity&gt;</ph> }}}</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve">
          <source>The Sequence keyword creates a sequence block within a Parallel script block.</source>
          <target state="translated">Ключевое слово последовательности создает блок последовательности внутри блока сценария Parallel.</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve">
          <source>The commands in the Sequence script block run sequentially and in the order defined.</source>
          <target state="translated">Команды в блоке сценария последовательности выполняются последовательно и в порядке определения.</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve">
          <source>For more information, see about_Sequence</source>
          <target state="translated">Дополнительные сведения см. в разделе about_Sequence</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve">
          <source>Switch</source>
          <target state="translated">Переключатель</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve">
          <source>Specifies a variety of actions to be performed on items from the pipeline or from a file.</source>
          <target state="translated">Задает ряд действий, выполняемых на элементы из конвейера или из файла.</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve">
          <source>You can use either of the following syntax models.</source>
          <target state="translated">Можно использовать любой из следующих моделей синтаксис.</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve">
          <source>Syntax 1:</source>
          <target state="translated">Синтаксис 1:</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve">
          <source>switch [-regex|-wildcard|-exact][-casesensitive] ( pipeline )</source>
          <target state="translated">переключение [-regex |-подстановочные |-точное] [-casesensitive] (конвейер)</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve">
          <source>{ <ph id="ph1">&lt;string&gt;|&lt;number&gt;|&lt;variable&gt;</ph>|{ <ph id="ph2">&lt;expression&gt;</ph> } {<ph id="ph3">&lt;statement list&gt;</ph>} <ph id="ph4">&lt;string&gt;|&lt;number&gt;|&lt;variable&gt;</ph>|{ <ph id="ph5">&lt;expression&gt;</ph> } {<ph id="ph6">&lt;statement list&gt;</ph>}</source>
          <target state="translated">{ <ph id="ph1">&lt;string&gt;|&lt;number&gt;|&lt;variable&gt;</ph>|{ <ph id="ph2">&lt;expression&gt;</ph> } {<ph id="ph3">&lt;statement list&gt;</ph>} <ph id="ph4">&lt;string&gt;|&lt;number&gt;|&lt;variable&gt;</ph>|{ <ph id="ph5">&lt;expression&gt;</ph> } {<ph id="ph6">&lt;statement list&gt;</ph>}</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve">
          <source>...</source>
          <target state="translated">...</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve">
          <source>default {<ph id="ph1">&lt;statement list&gt;</ph>} }</source>
          <target state="translated">по умолчанию {<ph id="ph1">&lt;statement list&gt;</ph>}}</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve">
          <source>Syntax 2:</source>
          <target state="translated">Синтаксис 2:</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve">
          <source>switch [-regex|-wildcard|-exact][-casesensitive] -file filename { <ph id="ph1">&lt;string&gt;|&lt;number&gt;|&lt;variable&gt;</ph>|{ <ph id="ph2">&lt;expression&gt;</ph> } {<ph id="ph3">&lt;statement list&gt;</ph>} <ph id="ph4">&lt;string&gt;|&lt;number&gt;|&lt;variable&gt;</ph>|{ <ph id="ph5">&lt;expression&gt;</ph> } {<ph id="ph6">&lt;statement list&gt;</ph>}</source>
          <target state="translated">переключение [-regex |-подстановочные |-точное] [-casesensitive]-файл имя_файла { <ph id="ph1">&lt;string&gt;|&lt;number&gt;|&lt;variable&gt;</ph>| { <ph id="ph2">&lt;expression&gt;</ph> } {<ph id="ph3">&lt;statement list&gt;</ph>} <ph id="ph4">&lt;string&gt;|&lt;number&gt;|&lt;variable&gt;</ph>|{ <ph id="ph5">&lt;expression&gt;</ph> } {<ph id="ph6">&lt;statement list&gt;</ph>}</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve">
          <source>...</source>
          <target state="translated">...</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve">
          <source>default {<ph id="ph1">&lt;statement list&gt;</ph>} }</source>
          <target state="translated">по умолчанию {<ph id="ph1">&lt;statement list&gt;</ph>}}</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve">
          <source>Throw</source>
          <target state="translated">Throw</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve">
          <source>Throws an object as an error.</source>
          <target state="translated">Создает объект как ошибка.</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve">
          <source>Syntax:</source>
          <target state="translated">Синтаксис:</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve">
          <source>throw [<ph id="ph1">&lt;object&gt;</ph>]</source>
          <target state="translated">исключение [<ph id="ph1">&lt;object&gt;</ph>]</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve">
          <source>Trap</source>
          <target state="translated">Ловушки</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve">
          <source>Defines a statement list to be run if an error is encountered.</source>
          <target state="translated">Определяет список операторов для выполнения, если возникает ошибка.</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve">
          <source>An error type requires brackets.</source>
          <target state="translated">Тип ошибки требует квадратные скобки.</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve">
          <source>The second pair of brackets indicates that the error type is optional.</source>
          <target state="translated">Вторая пара скобок указывает необязательный тип ошибки.</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve">
          <source>Syntax:</source>
          <target state="translated">Синтаксис:</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve">
          <source>trap [[<ph id="ph1">&lt;error type&gt;</ph>]] {<ph id="ph2">&lt;statement list&gt;</ph>}</source>
          <target state="translated">trap [[<ph id="ph1">&lt;error type&gt;</ph>]] {<ph id="ph2">&lt;statement list&gt;</ph>}</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve">
          <source>Try</source>
          <target state="translated">Попробуйте</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve">
          <source>Defines a statement list to be checked for errors while the statements run.</source>
          <target state="translated">Определяет список операторов для проверки ошибок во время выполнения инструкции.</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve">
          <source>If an error occurs, Windows PowerShell continues running in a Catch or Finally statement.</source>
          <target state="translated">Если возникает ошибка, Windows PowerShell продолжит работать в оператор Catch или Finally.</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve">
          <source>An error type requires brackets.</source>
          <target state="translated">Тип ошибки требует квадратные скобки.</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve">
          <source>The second pair of brackets indicates that the error type is optional.</source>
          <target state="translated">Вторая пара скобок указывает необязательный тип ошибки.</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve">
          <source>Syntax:</source>
          <target state="translated">Синтаксис:</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve">
          <source>try {<ph id="ph1">&lt;statement list&gt;</ph>} catch [[&lt;error type]] {<ph id="ph2">&lt;statement list&gt;</ph>} finally {<ph id="ph3">&lt;statement list&gt;</ph>}</source>
          <target state="translated">Попробуйте {<ph id="ph1">&lt;statement list&gt;</ph>} catch [[&lt; тип ошибки]] {<ph id="ph2">&lt;statement list&gt;</ph>} finally {<ph id="ph3">&lt;statement list&gt;</ph>}</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve">
          <source>Until</source>
          <target state="translated">До</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve">
          <source>Used in a Do statement as a looping construct where the statement list is executed at least one time.</source>
          <target state="translated">Используется в инструкции Do как циклическую конструкцию, где список операторов выполняется по крайней мере один раз.</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve">
          <source>Syntax:</source>
          <target state="translated">Синтаксис:</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve">
          <source>do {<ph id="ph1">&lt;statement list&gt;</ph>} until (<ph id="ph2">&lt;condition&gt;</ph>)</source>
          <target state="translated">Выполните {<ph id="ph1">&lt;statement list&gt;</ph>} пока (<ph id="ph2">&lt;condition&gt;</ph>)</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve">
          <source>While</source>
          <target state="translated">Время</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve">
          <source>Used in a Do statement as a looping construct where the statement list is executed at least one time.</source>
          <target state="translated">Используется в инструкции Do как циклическую конструкцию, где список операторов выполняется по крайней мере один раз.</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve">
          <source>Syntax:</source>
          <target state="translated">Синтаксис:</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve">
          <source>do {<ph id="ph1">&lt;statement list&gt;</ph>} while (<ph id="ph2">&lt;condition&gt;</ph>)</source>
          <target state="translated">Выполните {<ph id="ph1">&lt;statement list&gt;</ph>} хотя (<ph id="ph2">&lt;condition&gt;</ph>)</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve">
          <source>Workflow</source>
          <target state="translated">Рабочий процесс</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve">
          <source>Creates a script-based Windows PowerShell workflow, that is, a workflow written in the Windows PowerShell language.</source>
          <target state="translated">Создает на основе сценария Windows PowerShell рабочий процесс, то есть, написанных на языке Windows PowerShell рабочего процесса.</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve">
          <source>A Windows PowerShell workflow is a Windows PowerShell command type that is supported by Windows PowerShell and Windows Workflow Foundation.</source>
          <target state="translated">Рабочий процесс Windows PowerShell является типом команды Windows PowerShell, поддерживаемые Windows Workflow Foundation и Windows PowerShell.</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve">
          <source>Workflows are designed for complex, long-running tasks that affect multiple computers.</source>
          <target state="translated">Рабочие процессы предназначены для сложных, длительно выполняемых задач, которые влияют на нескольких компьютерах.</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve">
          <source>Workflows can be recovered if interrupted, such as by a network outage, and you can suspend and resume them  without losing state or data.</source>
          <target state="translated">Рабочие процессы могут быть восстановлены в случае прерывания, таких как сети сбоя и можно приостанавливать и возобновлять их без потери данных или состояния.</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve">
          <source>Workflows can be written in XAML, the native language of Windows Workflow Foundation, or in the Windows PowerShell language.</source>
          <target state="translated">Рабочие процессы могут записываться в XAML, собственном языке Windows Workflow Foundation, или на языке Windows PowerShell.</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve">
          <source>The syntax of a script-based workflow is similar to the syntax of a function.</source>
          <target state="translated">Синтаксис рабочего процесса на основе сценария напоминает синтаксис функции.</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve">
          <source>However, the unit of execution in a workflow is an activity, instead of a command.</source>
          <target state="translated">Тем не менее это единица выполнения в рабочем процессе — это мероприятие, вместо команды.</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve">
          <source>Cmdlets (and other commands) that are used in script-based workflows are implicitly converted to activities.</source>
          <target state="translated">Командлеты (и других команд), которые используются в рабочих процессах на основе сценария, неявно преобразуются в действия.</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve">
          <source>Some language elements that are permitted in scripts and functions are not permitted in workflows.</source>
          <target state="translated">Некоторые языковые элементы, которые разрешены в сценарии и функции не допускаются в рабочих процессах.</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve">
          <source>Similarly, workflows can include elements that are not found in scripts and functions, such as "persistence points" (checkpoints), self-suspension, and parallel processing.</source>
          <target state="translated">Аналогично, процессы могут включать элементы, которые не найдены в сценарии и функции, такие как «точки сохранения» (контрольных точек), self приостановки и параллельной обработки.</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve">
          <source>In addition, all workflows have a set of common parameters that are added by Windows PowerShell when you use the Workflow keyword.</source>
          <target state="translated">Кроме того все рабочие процессы имеют набор общих параметров, которые были добавлены с Windows PowerShell, при использовании ключевого слова рабочего процесса.</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve">
          <source>Syntax: workflow &lt;Verb-Noun&gt; { param ([type]&lt;$pname1&gt; [, [type]&lt;$pname2&gt;]) <ph id="ph1">&lt;statement list&gt;</ph> }</source>
          <target state="translated">Синтаксис: рабочий процесс &lt; глагол-существительное &gt; {param ([type] &lt; pname1 &gt; [, [type] &lt; pname2 &gt;]) <ph id="ph1">&lt;statement list&gt;</ph> }</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve">
          <source>workflow &lt;verb-noun&gt; { [CmdletBinding(<ph id="ph1">&lt;Attributes&gt;</ph>)] Param</source>
          <target state="translated">рабочий процесс &lt; глагол существительное &gt; {[CmdletBinding (<ph id="ph1">&lt;Attributes&gt;</ph>)] Param</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve">
          <source>(</source>
          <target state="translated">(</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve">
          <source>[Parameter(<ph id="ph1">&lt;Arguments&gt;</ph>)] $Param1</source>
          <target state="translated">[Параметр (<ph id="ph1">&lt;Arguments&gt;</ph>)] $Param1</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve">
          <source>)</source>
          <target state="translated">)</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve">
          <source>}</source>
          <target state="translated">}</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve">
          <source>For more information about workflows, see about_Workflows and "Getting Started with Windows PowerShell Workflow" (http://go.microsoft.com/fwlink/?LinkID=252592) in the TechNet Library.</source>
          <target state="translated">Дополнительные сведения о рабочих процессах см. рабочие процессы и «Приступая к работе с рабочего процесса Windows PowerShell» (http://go.microsoft.com/fwlink/?LinkID=252592) в библиотеке TechNet.</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve">
          <source>SEE ALSO</source>
          <target state="translated">СМ. ТАКЖЕ</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve">
          <source>about_Escape_Characters about_Special_Characters about_Wildcards</source>
          <target state="translated">about_Escape_Characters about_Special_Characters about_Wildcards</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>