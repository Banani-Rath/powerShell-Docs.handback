<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ru-ru">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-1c394fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">a7f4fcb8468b48b68f0ec3e13ebf773027e84e45</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">reference\3.0\Microsoft.PowerShell.Utility\Update-TypeData.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions" />
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">528bde0d0d767cb87a35265608441c0496121517</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">210bf377f373468a31585b88d430a9e0c6096397</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>powershell, cmdlet</source>
          <target state="translated">PowerShell, командлет</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Update-TypeData</source>
          <target state="translated">Update-TypeData</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Update-TypeData</source>
          <target state="translated">Update-TypeData</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>SYNOPSIS</source>
          <target state="translated">КРАТКИЙ ОБЗОР</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Updates the extended type data in the session.</source>
          <target state="translated">Обновляет данные расширенного типа во время сеанса.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>SYNTAX</source>
          <target state="translated">СИНТАКСИС</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>FileSet (Default)</source>
          <target state="translated">FileSet (по умолчанию)</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>DynamicTypeSet</source>
          <target state="translated">DynamicTypeSet</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>TypeDataSet</source>
          <target state="translated">TypeDataSet</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>DESCRIPTION</source>
          <target state="translated">ОПИСАНИЕ</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>Update-TypeData<ept id="p1">**</ept> cmdlet updates the extended type data in the session by reloading the Types.ps1xml files into memory and adding new extended type data.</source>
          <target state="translated"> <bpt id="p1">**</bpt>Update-TypeData<ept id="p1">**</ept> командлет обновляет данные расширенного типа во время сеанса, перезагружая файлы Types.ps1xml в память и добавления новых данные расширенного типа.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>By default, Windows PowerShell loads extended type data as it is needed.</source>
          <target state="translated">По умолчанию Windows PowerShell загружает данные расширенного типа по мере необходимости.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Without parameters, <bpt id="p1">**</bpt>Update-TypeData<ept id="p1">**</ept> reloads all of the Types.ps1xml files that it has loaded in the session, including any type files that you added.</source>
          <target state="translated">Без параметров <bpt id="p1">**</bpt>Update-TypeData<ept id="p1">**</ept> перезагружает все файлы Types.ps1xml, загруженные в сеансе, включая добавленные файлы любого типа.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>You can use the parameters of <bpt id="p1">**</bpt>Update-TypeData<ept id="p1">**</ept> to add new type files and add and replace extended type data.</source>
          <target state="translated">Можно использовать параметры <bpt id="p1">**</bpt>Update-TypeData<ept id="p1">**</ept> добавлять новые файлы типа, добавлять и заменять данные расширенного типа.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>Update-TypeData<ept id="p1">**</ept> cmdlet can be used to preload all type data.</source>
          <target state="translated"> <bpt id="p1">**</bpt>Update-TypeData<ept id="p1">**</ept> командлет используется для предварительной загрузки всех данных типа.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>This feature is particularly useful when you are developing types and want to load those new types for testing purposes.</source>
          <target state="translated">Эта функция особенно полезна при разработке собственных типов, так как позволяет загружать их для тестирования.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Beginning in Windows PowerShell 3.0, you can use <bpt id="p1">**</bpt>Update-TypeData<ept id="p1">**</ept> to add and replace extended type data in the session without using a Types.ps1xml file.</source>
          <target state="translated">Начиная с Windows PowerShell 3.0, можно использовать <bpt id="p1">**</bpt>Update-TypeData<ept id="p1">**</ept> позволяет добавлять и заменять данные расширенного типа во время сеанса без использования файла Types.ps1xml.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Type data that is added dynamically, that is, without a file, is added only to the current session.</source>
          <target state="translated">Данные типа, добавленные динамически, то есть без помощи файла, добавляются только в текущий сеанс.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>To add the type data to all sessions, add an <bpt id="p1">**</bpt>Update-TypeData<ept id="p1">**</ept> command to your Windows PowerShell profile.</source>
          <target state="translated">Чтобы добавить тип данных для всех сеансов, добавьте <bpt id="p1">**</bpt>Update-TypeData<ept id="p1">**</ept> в профиль Windows PowerShell.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>For more information, see about_Profiles (http://go.microsoft.com/fwlink/?LinkID=113729).</source>
          <target state="translated">Дополнительные сведения см. в разделе about_Profiles (http://go.microsoft.com/fwlink/?LinkID=113729).</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Also, beginning in Windows PowerShell 3.0, you can use the Get-TypeData cmdlet to get the extended types in the current session and the Remove-TypeData cmdlet to delete extended types from the current session.</source>
          <target state="translated">Кроме того начиная с Windows PowerShell 3.0, вы можно использовать командлет Get-TypeData для получения расширенных типов в текущем сеансе и командлет Remove-TypeData, чтобы удалять расширенные типы из текущего сеанса.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Exceptions that occur in properties, or from adding properties to an <bpt id="p1">**</bpt>Update-TypeData<ept id="p1">**</ept> command, do not report errors to StdErr.</source>
          <target state="translated">Исключения, возникающие в свойствах или добавлять свойства к <bpt id="p1">**</bpt>Update-TypeData<ept id="p1">**</ept> команда, вывод сообщения об ошибках в StdErr.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>This is to suppress exceptions that would occur in many common types during formatting and outputting.</source>
          <target state="translated">Это необходимо для подавления исключений, которые могут возникнуть во многих распространенных типах в процессе форматирования и вывода.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>If you are getting .NET Framework properties, you can work around the suppression of exceptions by using method syntax instead, as shown in the following example:</source>
          <target state="translated">При получении свойств .NET Framework подавление исключений можно обойти, применив синтаксис метода, как показано в следующем примере:</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Note that method syntax can only be used with .NET Framework properties.</source>
          <target state="translated">Обратите внимание, что синтаксис метода может использоваться только со свойствами .NET Framework.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Properties that are added by running the Update-TypeData cmdlet cannot use method syntax.</source>
          <target state="translated">Свойства, добавленные с помощью командлета Update-TypeData, синтаксис метода использовать не могут.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>For more information about the *types.ps1xml files in Windows PowerShell, see about_Types.ps1xml (http://go.microsoft.com/fwlink/?LinkID=113274).</source>
          <target state="translated">Дополнительные сведения о файлах *types.ps1xml в Windows PowerShell см. в разделе about_Types.ps1xml (http://go.microsoft.com/fwlink/?LinkID=113274).</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>EXAMPLES</source>
          <target state="translated">ПРИМЕРЫ</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>-------------------------- EXAMPLE 1 --------------------------</source>
          <target state="translated">-------------------------- ПРИМЕР 1 --------------------------</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>This command updates the extended type configuration from the *.types.ps1xml files that have already been used in the session.</source>
          <target state="translated">Данная команда обновляет конфигурацию расширенного типа из файлов *.types.ps1xml, которые уже использовались в этом сеансе.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>-------------------------- EXAMPLE 2 --------------------------</source>
          <target state="translated">-------------------------- EXAMPLE 2 --------------------------</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>This example show how to update the types in a type file multiple times in the same session.</source>
          <target state="translated">В этом примере показано, как обеспечить многократное обновление типов в файле типа за один сеанс.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>-------------------------- EXAMPLE 3 --------------------------</source>
          <target state="translated">-------------------------- EXAMPLE 3 --------------------------</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>This example uses <bpt id="p1">**</bpt>Update-TypeData<ept id="p1">**</ept> to add the Quarter script property to <bpt id="p2">**</bpt>System.DateTime<ept id="p2">**</ept> objects in the current session, such as those returned by the Get-Date cmdlet.</source>
          <target state="translated">В этом примере используется <bpt id="p1">**</bpt>Update-TypeData<ept id="p1">**</ept> для добавления свойства сценария Quarter <bpt id="p2">**</bpt>System.DateTime<ept id="p2">**</ept> объекты в текущем сеансе, например возвращаемых командлетом Get-Date.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>Update-TypeData<ept id="p1">**</ept> command uses the <bpt id="p2">**</bpt>TypeName<ept id="p2">**</ept> parameter to specify <bpt id="p3">**</bpt>the System.DateTime<ept id="p3">**</ept> type, the <bpt id="p4">**</bpt>MemberName<ept id="p4">**</ept> parameter to specify a name for the new property, the <bpt id="p5">**</bpt>MemberType<ept id="p5">**</ept> property to specify the <bpt id="p6">**</bpt>ScriptProperty<ept id="p6">**</ept> type, and the <bpt id="p7">**</bpt>Value<ept id="p7">**</ept> parameter to specify the script that determines the annual quarter.</source>
          <target state="translated"> <bpt id="p1">**</bpt>Update-TypeData<ept id="p1">**</ept> команда использует <bpt id="p2">**</bpt>TypeName<ept id="p2">**</ept> для указания <bpt id="p3">**</bpt>System.DateTime<ept id="p3">**</ept> типа, <bpt id="p4">**</bpt>MemberName<ept id="p4">**</ept> параметр, чтобы указать имя для нового свойства <bpt id="p5">**</bpt>MemberType<ept id="p5">**</ept> для указания <bpt id="p6">**</bpt>ScriptProperty<ept id="p6">**</ept> типа и <bpt id="p7">**</bpt>значение<ept id="p7">**</ept> Чтобы указать сценарий, который определяет годовой квартал.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>The value of the <bpt id="p1">**</bpt>Value<ept id="p1">**</ept> property is a script that calculates the current annual quarter.</source>
          <target state="translated">Значение <bpt id="p1">**</bpt>значение<ept id="p1">**</ept> Свойства — это сценарий, вычисляющий текущий годовой квартал.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>The script block the $this automatic variable to represent the current instance of the object and the <bpt id="p1">**</bpt>In<ept id="p1">**</ept> operator to determine whether the month value appears in each integer array.</source>
          <target state="translated">Блока скрипта $этот автоматической переменной представляет текущий экземпляр объекта и <bpt id="p1">**</bpt>в<ept id="p1">**</ept> оператор, чтобы определить, появится ли значение месяца в каждом массиве целых чисел.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>For more information about the In operator, see about_Comparison_Operators (http://go.microsoft.com/fwlink/?LinkID=113217).</source>
          <target state="translated">Дополнительные сведения об операторе In см. в разделе about_Comparison_Operators (http://go.microsoft.com/fwlink/?LinkID=113217).</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>The second command gets the new Quarter property of the current date.</source>
          <target state="translated">Вторая команда возвращает новое свойство Quarter текущей даты.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>-------------------------- EXAMPLE 4 --------------------------</source>
          <target state="translated">-------------------------- EXAMPLE 4 --------------------------</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>This example shows how to set the properties of a type that display in lists by default, that is, when no properties are specified.</source>
          <target state="translated">В этом примере показано, как задать свойства типа, отображающие списки по умолчанию, т. е. в случае, если свойства не заданы.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Because the type data is not specified in a Types.ps1xml file, it is effective only in the current session.</source>
          <target state="translated">Поскольку данные типа не указаны в файле Types.ps1xml, этот код применяется только в текущем сеансе.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>The first command uses the <bpt id="p1">**</bpt>Update-TypeData<ept id="p1">**</ept> cmdlet to set the default list properties for the <bpt id="p2">**</bpt>System.DateTime<ept id="p2">**</ept> type.</source>
          <target state="translated">Первая команда использует <bpt id="p1">**</bpt>Update-TypeData<ept id="p1">**</ept> командлет, чтобы задать свойства списка по умолчанию <bpt id="p2">**</bpt>System.DateTime<ept id="p2">**</ept> типа.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>The command uses the <bpt id="p1">**</bpt>TypeName<ept id="p1">**</ept> parameter to specify the type and the <bpt id="p2">**</bpt>DefaultDisplayPropertySet<ept id="p2">**</ept> parameter to specify the default properties for a list.</source>
          <target state="translated">Команда использует <bpt id="p1">**</bpt>TypeName<ept id="p1">**</ept> параметр для указания типа и <bpt id="p2">**</bpt>DefaultDisplayPropertySet<ept id="p2">**</ept> для указания свойств по умолчанию для списка.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>The selected properties include the new Quarter script property that was added in a previous example.</source>
          <target state="translated">Выбранные свойства включают новое свойство скрипта Quarter, добавленное в предыдущем примере.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>The second command uses the Get-Date cmdlet to get a <bpt id="p1">**</bpt>System.DateTime<ept id="p1">**</ept> object that represents the current date.</source>
          <target state="translated">Вторая команда использует командлет Get-Date, чтобы получить <bpt id="p1">**</bpt>System.DateTime<ept id="p1">**</ept> объект, представляющий текущую дату.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>The command uses a pipeline operator (|) to send the <bpt id="p1">**</bpt>DateTime<ept id="p1">**</ept> object to the Format-List cmdlet.</source>
          <target state="translated">Команда использует оператор конвейера (|) для отправки <bpt id="p1">**</bpt>DateTime<ept id="p1">**</ept> объект в командлет Format-List.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Because the <bpt id="p1">**</bpt>Format-List<ept id="p1">**</ept> command does not specify the properties to display in the list, Windows PowerShell uses the default values that were established by the <bpt id="p2">**</bpt>Update-TypeData<ept id="p2">**</ept> command.</source>
          <target state="translated">Поскольку <bpt id="p1">**</bpt>Format-List<ept id="p1">**</ept> команда не указывает свойства для отображения в списке, Windows PowerShell использует значения по умолчанию, устанавливаемые с <bpt id="p2">**</bpt>Update-TypeData<ept id="p2">**</ept> команды.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>-------------------------- EXAMPLE 5 --------------------------</source>
          <target state="translated">-------------------------- EXAMPLE 5 --------------------------</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>This example demonstrates that when you pipe an object to <bpt id="p1">**</bpt>Update-TypeData<ept id="p1">**</ept>, <bpt id="p2">**</bpt>Update-TypeData<ept id="p2">**</ept> adds extended type data for the object type.</source>
          <target state="translated">В этом примере показано, что если передать объект <bpt id="p1">**</bpt>Update-TypeData<ept id="p1">**</ept>, <bpt id="p2">**</bpt>Update-TypeData<ept id="p2">**</ept> добавляет данные расширенного типа для типа объекта.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>This technique is quicker than using the Get-Member cmdlet or the <bpt id="p1">**</bpt>Get-Type<ept id="p1">**</ept> method to get the object type.</source>
          <target state="translated">Этот способ быстрее, чем с помощью командлета Get-Member или <bpt id="p1">**</bpt>типа Get<ept id="p1">**</ept> метод, чтобы получить тип объекта.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>However, if you pipe a collection of objects to <bpt id="p1">**</bpt>Update-TypeData<ept id="p1">**</ept>, it updates the type data of the first object type and then returns an error for all other objects in the collection because the member is already defined on the type.</source>
          <target state="translated">Тем не менее если передать коллекции объектов в <bpt id="p1">**</bpt>Update-TypeData<ept id="p1">**</ept>, он обновляет данные типа первого типа объекта и возвращает ошибку для всех объектов в коллекции элемент уже определен в типе.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>The first command uses the Get-Module cmdlet to get the PSScheduledJob module.</source>
          <target state="translated">Первая команда использует командлет Get-Module для получения модуля PSScheduledJob.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>The command pipes the module object to the <bpt id="p1">**</bpt>Update-TypeData<ept id="p1">**</ept> cmdlet, which updates the type data for the <bpt id="p2">**</bpt>System.Management.Automation.PSModuleInfo<ept id="p2">**</ept> type and the types derived from it, such as the <bpt id="p3">**</bpt>ModuleInfoGrouping<ept id="p3">**</ept> type that <bpt id="p4">**</bpt>Get-Module<ept id="p4">**</ept> returns when you use the <bpt id="p5">**</bpt>ListAvailable<ept id="p5">**</ept> parameter in the command.</source>
          <target state="translated">Команда передает объект модуля в <bpt id="p1">**</bpt>Update-TypeData<ept id="p1">**</ept> который обновляет данные типа <bpt id="p2">**</bpt>System.Management.Automation.PSModuleInfo<ept id="p2">**</ept> типа и типов, производных от него, таких как <bpt id="p3">**</bpt>ModuleInfoGrouping<ept id="p3">**</ept> введите <bpt id="p4">**</bpt>Get-Module<ept id="p4">**</ept> при использовании <bpt id="p5">**</bpt>ListAvailable<ept id="p5">**</ept> параметр в команде.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>Update-TypeData<ept id="p1">**</ept> commands adds the <bpt id="p2">**</bpt>SupportsUpdatableHelp<ept id="p2">**</ept> script property to all imported modules.</source>
          <target state="translated"> <bpt id="p1">**</bpt>Update-TypeData<ept id="p1">**</ept> добавляет команды <bpt id="p2">**</bpt>SupportsUpdatableHelp<ept id="p2">**</ept> все импортированные модули свойство скрипта.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>The value of the Value parameter is a script that returns $True if the <bpt id="p1">**</bpt>HelpInfoUri<ept id="p1">**</ept> property of the module is populated and $False otherwise.</source>
          <target state="translated">Значение параметра Value является скрипт, который возвращает значение $True, если <bpt id="p1">**</bpt>HelpInfoUri<ept id="p1">**</ept> свойство модуля заполняется и $False.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>The second command pipes the module objects from <bpt id="p1">**</bpt>Get-Module<ept id="p1">**</ept> to the Format-Table cmdlet, which displays the <bpt id="p2">**</bpt>Name<ept id="p2">**</ept> and <bpt id="p3">**</bpt>SupportsUpdatableHelp<ept id="p3">**</ept> properties of all modules in a list.</source>
          <target state="translated">Вторая команда передает объекты модуля из <bpt id="p1">**</bpt>Get-Module<ept id="p1">**</ept> в командлет Format-Table, которая отображает <bpt id="p2">**</bpt>имя<ept id="p2">**</ept> и <bpt id="p3">**</bpt>SupportsUpdatableHelp<ept id="p3">**</ept> для всех модулей в списке.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>PARAMETERS</source>
          <target state="translated">ПАРАМЕТРЫ</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>-AppendPath</source>
          <target state="translated">-AppendPath</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>Specifies the path to optional .ps1xml files.</source>
          <target state="translated">Определяет путь к необязательным файлам PS1XML.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>The specified files are loaded in the order that they are listed after the built-in files are loaded.</source>
          <target state="translated">Эти файлы загружаются в том порядке, в котором они были указаны, после загрузки встроенных файлов.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>You can also pipe an <bpt id="p1">**</bpt>AppendPath<ept id="p1">**</ept> value to <bpt id="p2">**</bpt>Update-TypeData<ept id="p2">**</ept>.</source>
          <target state="translated">Можно также передать <bpt id="p1">**</bpt>AppendPath<ept id="p1">**</ept> значение <bpt id="p2">**</bpt>Update-TypeData<ept id="p2">**</ept>.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>-PrependPath</source>
          <target state="translated">-PrependPath</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>Specifies the path to the optional .ps1xml files.</source>
          <target state="translated">Определяет путь к необязательным файлам PS1XML.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>The specified files are loaded in the order that they are listed before the built-in files are loaded.</source>
          <target state="translated">Эти файлы загружаются в том порядке, в котором они были указаны, до загрузки встроенных файлов.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>-DefaultDisplayProperty</source>
          <target state="translated">-DefaultDisplayProperty</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>Specifies the property of the type that is displayed by the Format-Wide cmdlet when no other properties are specified.</source>
          <target state="translated">Задает свойство типа, который отображается в командлет Format-Wide, если никакие другие свойства не заданы.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>Type the name of a standard or extended property of the type.</source>
          <target state="translated">Введите имя стандартного или расширенного свойства типа.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>The value of this parameter can be the name of a type that is added in the same command.</source>
          <target state="translated">В качестве значения этого параметра может выступать имя типа, добавленного в рамках той же команды.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>This value is effective only when there are no wide views defined for the type in a Format.ps1xml file.</source>
          <target state="translated">Оно применяется только в том случае, если для типа, указанного в файле Format.ps1xml, не установлены широкие представления.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>This parameter is introduced in Windows PowerShell 3.0.</source>
          <target state="translated">Этот параметр впервые появился в Windows PowerShell 3.0.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>-DefaultDisplayPropertySet</source>
          <target state="translated">-DefaultDisplayPropertySet</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>Specifies one or more properties of the type.</source>
          <target state="translated">Определяет одно или несколько свойств типа.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>These properties are displayed by the Format-List cmdlet when no other properties are specified.</source>
          <target state="translated">Эти свойства отображаются в командлет Format-List, если никакие другие свойства не заданы.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>Type the names of standard or extended properties of the type.</source>
          <target state="translated">Введите имена стандартных или расширенных свойств типа.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>The value of this parameter can be the names of types that are added in the same command.</source>
          <target state="translated">В качестве значения этого параметра могут выступать имена типов, добавленных в рамках той же команды.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>This value is effective only when there are no list views defined for the type in a Format.ps1xml file.</source>
          <target state="translated">Оно применяется только в том случае, если для типа, указанного в файле Format.ps1xml, не установлены представления списка.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>This parameter is introduced in Windows PowerShell 3.0.</source>
          <target state="translated">Этот параметр впервые появился в Windows PowerShell 3.0.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>-DefaultKeyPropertySet</source>
          <target state="translated">-DefaultKeyPropertySet</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>Specifies one or more properties of the type.</source>
          <target state="translated">Определяет одно или несколько свойств типа.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>These properties are used by the Group-Object and Sort-Object cmdlets when no other properties are specified.</source>
          <target state="translated">Эти свойства используются командлетами объекта группы и Sort-Object, если никакие другие свойства не заданы.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>Type the names of standard or extended properties of the type.</source>
          <target state="translated">Введите имена стандартных или расширенных свойств типа.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>The value of this parameter can be the names of types that are added in the same command.</source>
          <target state="translated">В качестве значения этого параметра могут выступать имена типов, добавленных в рамках той же команды.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>This parameter is introduced in Windows PowerShell 3.0.</source>
          <target state="translated">Этот параметр впервые появился в Windows PowerShell 3.0.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>-Force</source>
          <target state="translated">-Force</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>Uses the specified type data, even if type data has already been specified for that type.</source>
          <target state="translated">Использует указанные данные типа, даже если такие данные для этого типа уже заданы.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>This parameter is introduced in Windows PowerShell 3.0.</source>
          <target state="translated">Этот параметр впервые появился в Windows PowerShell 3.0.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>-InheritPropertySerializationSet</source>
          <target state="translated">-InheritPropertySerializationSet</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>Determines whether the set of properties that are serialized is inherited.</source>
          <target state="translated">Определяет наследование набора сериализуемых свойств.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>The default value is $Null</source>
          <target state="translated">Значение по умолчанию — $Null.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>Valid values are:</source>
          <target state="translated">Допустимые значения:</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>$True<ept id="p1">**</ept>: The property set is inherited.</source>
          <target state="translated"><bpt id="p1">**</bpt>$True<ept id="p1">**</ept>: набор свойств наследуется.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>$False<ept id="p1">**</ept>: The property set is not inherited.</source>
          <target state="translated"><bpt id="p1">**</bpt>$False<ept id="p1">**</ept>: набор свойств не наследуется.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>$Null<ept id="p1">**</ept>: Inheritance is not defined.</source>
          <target state="translated"><bpt id="p1">**</bpt>$Null<ept id="p1">**</ept>: наследование не определено.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>This parameter is valid only when the value of the <bpt id="p1">**</bpt>SerializationMethod<ept id="p1">**</ept> parameter is <bpt id="p2">**</bpt>SpecificProperties<ept id="p2">**</ept>.</source>
          <target state="translated">Этот параметр доступен, только если значение <bpt id="p1">**</bpt>SerializationMethod<ept id="p1">**</ept> параметр <bpt id="p2">**</bpt>SpecificProperties<ept id="p2">**</ept>.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>When the value of this parameter is <bpt id="p1">**</bpt>$False<ept id="p1">**</ept>, the <bpt id="p2">**</bpt>PropertySerializationSet<ept id="p2">**</ept> parameter is required.</source>
          <target state="translated">Если значение этого параметра равно <bpt id="p1">**</bpt>$False<ept id="p1">**</ept>,  <bpt id="p2">**</bpt>PropertySerializationSet<ept id="p2">**</ept> параметр является обязательным.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>This parameter is introduced in Windows PowerShell 3.0.</source>
          <target state="translated">Этот параметр впервые появился в Windows PowerShell 3.0.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>-MemberName</source>
          <target state="translated">-Имя пользователя</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>Specifies the name of a property or method.</source>
          <target state="translated">Определяет имя свойства или метода.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>Use this parameter with the <bpt id="p1">**</bpt>TypeName<ept id="p1">**</ept>, <bpt id="p2">**</bpt>MemberType<ept id="p2">**</ept>, <bpt id="p3">**</bpt>Value<ept id="p3">**</ept> and <bpt id="p4">**</bpt>SecondValue<ept id="p4">**</ept> parameters to add or change a property or method of a type.</source>
          <target state="translated">Используйте этот параметр с <bpt id="p1">**</bpt>TypeName<ept id="p1">**</ept>, <bpt id="p2">**</bpt>MemberType<ept id="p2">**</ept>, <bpt id="p3">**</bpt>значение<ept id="p3">**</ept> и <bpt id="p4">**</bpt>SecondValue<ept id="p4">**</ept> Параметры, чтобы добавить или изменить свойство или метод типа.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>This parameter is introduced in Windows PowerShell 3.0.</source>
          <target state="translated">Этот параметр впервые появился в Windows PowerShell 3.0.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>-MemberType</source>
          <target state="translated">-Тип элемента</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>Specifies the type of the member to add or change.</source>
          <target state="translated">Определяет тип элемента для добавления или изменения.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>Use this parameter with the <bpt id="p1">**</bpt>TypeName<ept id="p1">**</ept>, <bpt id="p2">**</bpt>MemberType<ept id="p2">**</ept>, <bpt id="p3">**</bpt>Value<ept id="p3">**</ept> and <bpt id="p4">**</bpt>SecondValue<ept id="p4">**</ept> parameters to add or change a property or method of a type.</source>
          <target state="translated">Используйте этот параметр с <bpt id="p1">**</bpt>TypeName<ept id="p1">**</ept>, <bpt id="p2">**</bpt>MemberType<ept id="p2">**</ept>, <bpt id="p3">**</bpt>значение<ept id="p3">**</ept> и <bpt id="p4">**</bpt>SecondValue<ept id="p4">**</ept> Параметры, чтобы добавить или изменить свойство или метод типа.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>The valid values for this parameter are: <bpt id="p1">**</bpt>AliasProperty<ept id="p1">**</ept>, <bpt id="p2">**</bpt>CodeMethod<ept id="p2">**</ept>, <bpt id="p3">**</bpt>CodeProperty<ept id="p3">**</ept>, <bpt id="p4">**</bpt>Noteproperty<ept id="p4">**</ept>, <bpt id="p5">**</bpt>ScriptMethod<ept id="p5">**</ept>, and <bpt id="p6">**</bpt>ScriptProperty<ept id="p6">**</ept>.</source>
          <target state="translated">Допустимые значения для этого параметра: <bpt id="p1">**</bpt>AliasProperty<ept id="p1">**</ept>, <bpt id="p2">**</bpt>CodeMethod<ept id="p2">**</ept>, <bpt id="p3">**</bpt>CodeProperty<ept id="p3">**</ept>, <bpt id="p4">**</bpt>Noteproperty<ept id="p4">**</ept>, <bpt id="p5">**</bpt>ScriptMethod<ept id="p5">**</ept>, и <bpt id="p6">**</bpt>ScriptProperty<ept id="p6">**</ept>.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>For information about these values, see "PSMemberTypes Enumeration" in MSDN at http://msdn.microsoft.com/library/windows/desktop/system.management.automation.psmembertypes(v=vs.85).aspxhttp://msdn.microsoft.com/library/windows/desktop/system.management.automation.psmembertypes(v=vs.85).aspx.</source>
          <target state="translated">Сведения об этих значениях см. в разделе «Перечисление PSMemberTypes» в библиотеке MSDN в.aspxhttp://msdn.microsoft.com/library/windows/desktop/system.management.automation.psmembertypes(v=vs.85).aspx. http://msdn.microsoft.com/library/windows/desktop/system.management.automation.psmembertypes (v=vs.85)</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>This parameter is introduced in Windows PowerShell 3.0.</source>
          <target state="translated">Этот параметр впервые появился в Windows PowerShell 3.0.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>-PropertySerializationSet</source>
          <target state="translated">-PropertySerializationSet</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>Specifies the names of properties that are serialized.</source>
          <target state="translated">Определяет имена сериализуемых свойств.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>Use this parameter when the value of the <bpt id="p1">**</bpt>SerializationMethod<ept id="p1">**</ept> parameter is <bpt id="p2">**</bpt>SpecificProperties<ept id="p2">**</ept>.</source>
          <target state="translated">Используйте этот параметр, если значение <bpt id="p1">**</bpt>SerializationMethod<ept id="p1">**</ept> параметр <bpt id="p2">**</bpt>SpecificProperties<ept id="p2">**</ept>.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>-SecondValue</source>
          <target state="translated">-SecondValue</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>Specifies additional values for <bpt id="p1">**</bpt>AliasProperty<ept id="p1">**</ept>, <bpt id="p2">**</bpt>ScriptProperty<ept id="p2">**</ept>, <bpt id="p3">**</bpt>CodeProperty<ept id="p3">**</ept>, or <bpt id="p4">**</bpt>CodeMethod<ept id="p4">**</ept> members.</source>
          <target state="translated">Определяет дополнительные значения для <bpt id="p1">**</bpt>AliasProperty<ept id="p1">**</ept>, <bpt id="p2">**</bpt>ScriptProperty<ept id="p2">**</ept>, <bpt id="p3">**</bpt>CodeProperty<ept id="p3">**</ept>, или <bpt id="p4">**</bpt>CodeMethod<ept id="p4">**</ept> члены.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>Use this parameter with the <bpt id="p1">**</bpt>TypeName<ept id="p1">**</ept>, <bpt id="p2">**</bpt>MemberType<ept id="p2">**</ept>, <bpt id="p3">**</bpt>Value<ept id="p3">**</ept> and <bpt id="p4">**</bpt>SecondValue<ept id="p4">**</ept> parameters to add or change a property or method of a type.</source>
          <target state="translated">Используйте этот параметр с <bpt id="p1">**</bpt>TypeName<ept id="p1">**</ept>, <bpt id="p2">**</bpt>MemberType<ept id="p2">**</ept>, <bpt id="p3">**</bpt>значение<ept id="p3">**</ept> и <bpt id="p4">**</bpt>SecondValue<ept id="p4">**</ept> Параметры, чтобы добавить или изменить свойство или метод типа.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>When the value of the <bpt id="p1">**</bpt>MemberType<ept id="p1">**</ept> parameter is <bpt id="p2">**</bpt>AliasProperty<ept id="p2">**</ept>, the value of the <bpt id="p3">**</bpt>SecondValue<ept id="p3">**</ept> parameter must be a data type.</source>
          <target state="translated">Если значение <bpt id="p1">**</bpt>MemberType<ept id="p1">**</ept> параметр <bpt id="p2">**</bpt>AliasProperty<ept id="p2">**</ept>, значение <bpt id="p3">**</bpt>SecondValue<ept id="p3">**</ept> параметр должен иметь тип данных.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>Windows PowerShell converts ("casts") the value of the alias property to the specified type.</source>
          <target state="translated">Windows PowerShell приводит значение свойства псевдонима к указанному типу.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>For example, if you add an alias property that provides an alternate name for a string property, you can also specify a <bpt id="p1">**</bpt>SecondValue<ept id="p1">**</ept> of System.Int32 to convert the aliased string value to an integer.</source>
          <target state="translated">Например, при добавлении свойства псевдонима, которое предоставляет альтернативное имя для свойства строки, можно также указать <bpt id="p1">**</bpt>SecondValue<ept id="p1">**</ept> для System.Int32, чтобы преобразовать строковое значение псевдонима в целое.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>When the value of the <bpt id="p1">**</bpt>MemberType<ept id="p1">**</ept> parameter is <bpt id="p2">**</bpt>ScriptProperty<ept id="p2">**</ept>, you can use the <bpt id="p3">**</bpt>SecondValue<ept id="p3">**</ept> parameter to specify an additional script block.</source>
          <target state="translated">Если значение <bpt id="p1">**</bpt>MemberType<ept id="p1">**</ept> параметр <bpt id="p2">**</bpt>ScriptProperty<ept id="p2">**</ept>, можно использовать <bpt id="p3">**</bpt>SecondValue<ept id="p3">**</ept> можно указать дополнительный блок скрипта.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>The script block in the value of the <bpt id="p1">**</bpt>Value<ept id="p1">**</ept> parameter gets the value of a variable.</source>
          <target state="translated">Блок скрипта в значении <bpt id="p1">**</bpt>значение<ept id="p1">**</ept> параметр получает значение переменной.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>The script block in the value of the <bpt id="p1">**</bpt>SecondValue<ept id="p1">**</ept> parameter set the value of the variable.</source>
          <target state="translated">Блок скрипта в значении <bpt id="p1">**</bpt>SecondValue<ept id="p1">**</ept> параметра задать значение переменной.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>This parameter is introduced in Windows PowerShell 3.0.</source>
          <target state="translated">Этот параметр впервые появился в Windows PowerShell 3.0.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>-SerializationDepth</source>
          <target state="translated">-SerializationDepth</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>Specifies how many levels of type objects are serialized as strings.</source>
          <target state="translated">Определяет, сколько уровней объектов типа будут сериализованы как строки.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>The default value, 1, serializes the object and its properties.</source>
          <target state="translated">Значения по умолчанию равно 1 и означает, что сериализуется объект и его свойства.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>A value of 0 serializes the object, but not its properties.</source>
          <target state="translated">При выборе значения 0 сериализуется только объект.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>A value of 2 serializes the object, its properties, and any objects in property values.</source>
          <target state="translated">При выборе значения 2 сериализуется объект, его свойства и все объекты в значениях свойств.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>This parameter is introduced in Windows PowerShell 3.0.</source>
          <target state="translated">Этот параметр впервые появился в Windows PowerShell 3.0.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>-SerializationMethod</source>
          <target state="translated">-SerializationMethod</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>Specifies a serialization method for the type.</source>
          <target state="translated">Указывает метод сериализации для типа.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>A serialization method determines which properties of the type are serialized and the technique that is used to serialize them.</source>
          <target state="translated">Метод сериализации определяет сериализуемые свойства типа и метод сериализации.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>Valid values are:</source>
          <target state="translated">Допустимые значения:</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>AllPublicProperties<ept id="p1">**</ept>: Serialize all public properties of the type.</source>
          <target state="translated"><bpt id="p1">**</bpt>AllPublicProperties<ept id="p1">**</ept>: сериализуются все открытые свойства типа.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>You can use the <bpt id="p1">**</bpt>SerializationDepth<ept id="p1">**</ept> parameter to determine whether child properties are serialized.</source>
          <target state="translated">Можно использовать <bpt id="p1">**</bpt>SerializationDepth<ept id="p1">**</ept> параметр, чтобы определить, сериализацию дочерних свойств.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>String<ept id="p1">**</ept>: Serialize the type as a string.</source>
          <target state="translated"><bpt id="p1">**</bpt>Строка<ept id="p1">**</ept>: сериализовать тип в виде строки.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>You can use the <bpt id="p1">**</bpt>StringSerializationSource<ept id="p1">**</ept> to specify a property of the type to use as the serialization result.</source>
          <target state="translated">Можно использовать <bpt id="p1">**</bpt>StringSerializationSource<ept id="p1">**</ept> для указания свойств типа для использования в результате сериализации.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>Otherwise, the type is serialized by using the <bpt id="p1">**</bpt>ToString<ept id="p1">**</ept> method of the object.</source>
          <target state="translated">В противном случае — тип сериализуется с помощью <bpt id="p1">**</bpt>ToString<ept id="p1">**</ept> метода объекта.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>SpecificProperties<ept id="p1">**</ept> Serialize only the specified properties of this type.</source>
          <target state="translated"><bpt id="p1">**</bpt>SpecificProperties<ept id="p1">**</ept> сериализации только указанные свойства этого типа.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>Use the <bpt id="p1">**</bpt>PropertySerializationSet<ept id="p1">**</ept> parameter to specify the properties of the type that are serialized.</source>
          <target state="translated">Используйте <bpt id="p1">**</bpt>PropertySerializationSet<ept id="p1">**</ept> для указания типа сериализуемых свойств.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>You can also use the <bpt id="p1">**</bpt>InheritPropertySerializationSet<ept id="p1">**</ept> parameter to determine whether the property set is inherited and the <bpt id="p2">**</bpt>SerializationDepth<ept id="p2">**</ept> parameter to determine whether child properties are serialized.</source>
          <target state="translated">Можно также использовать <bpt id="p1">**</bpt>InheritPropertySerializationSet<ept id="p1">**</ept> параметр, чтобы определить, наследуется ли набор свойств и <bpt id="p2">**</bpt>SerializationDepth<ept id="p2">**</ept> параметр, чтобы определить, сериализацию дочерних свойств.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>In Windows PowerShell, serialization methods are stored in <bpt id="p1">**</bpt>PSStandardMembers<ept id="p1">**</ept> internal objects.</source>
          <target state="translated">В Windows PowerShell методы сериализации хранятся в <bpt id="p1">**</bpt>PSStandardMembers<ept id="p1">**</ept> внутренние объекты.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>This parameter is introduced in Windows PowerShell 3.0.</source>
          <target state="translated">Этот параметр впервые появился в Windows PowerShell 3.0.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>-StringSerializationSource</source>
          <target state="translated">-StringSerializationSource</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source>Specifies the name of a property of the type.</source>
          <target state="translated">Определяет имя свойства типа.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source>The value of specified property is used as the serialization result.</source>
          <target state="translated">Значение указанного свойства используется в качестве результате сериализации.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source>This parameter is valid only when the value of the <bpt id="p1">**</bpt>SerializationMethod<ept id="p1">**</ept> parameter is <bpt id="p2">**</bpt>String<ept id="p2">**</ept>.</source>
          <target state="translated">Этот параметр доступен, только если значение <bpt id="p1">**</bpt>SerializationMethod<ept id="p1">**</ept> параметр <bpt id="p2">**</bpt>строки<ept id="p2">**</ept>.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source>-TargetTypeForDeserialization</source>
          <target state="translated">-TargetTypeForDeserialization</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source>Specifies the type to which object of this type are converted when they are deserialized.</source>
          <target state="translated">Определяет, в какой типа должны конвертироваться объекты данного типа при десериализации.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source>This parameter is introduced in Windows PowerShell 3.0.</source>
          <target state="translated">Этот параметр впервые появился в Windows PowerShell 3.0.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve">
          <source>-TypeAdapter</source>
          <target state="translated">-TypeAdapter</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source>Specifies the type of a type adapter, such as Microsoft.PowerShell.Cim.CimInstanceAdapter.</source>
          <target state="translated">Определяет тип адаптера типа, например, Microsoft.PowerShell.Cim.CimInstanceAdapter.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source>A type adapter enables Windows PowerShell to get the members of a type.</source>
          <target state="translated">Адаптер типа позволяет Windows PowerShell получать элементы типа.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source>This parameter is introduced in Windows PowerShell 3.0.</source>
          <target state="translated">Этот параметр впервые появился в Windows PowerShell 3.0.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve">
          <source>-TypeConverter</source>
          <target state="translated">-TypeConverter</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve">
          <source>Specifies a type converter to convert values between different types.</source>
          <target state="translated">Определяет преобразователь типов для конвертации значений из одного типа в другой.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve">
          <source>If a type converter is defined for a type, an instance of the type converter is used for the conversion.</source>
          <target state="translated">Если для типа определен преобразователь, для конвертации используется экземпляр этого преобразователя.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve">
          <source>Enter a <bpt id="p1">**</bpt>System.Type<ept id="p1">**</ept> value that is derived from the <bpt id="p2">**</bpt>System.ComponentModel.TypeConverter<ept id="p2">**</ept> or <bpt id="p3">**</bpt>System.Management.Automation.PSTypeConverter<ept id="p3">**</ept> classes.</source>
          <target state="translated">Введите <bpt id="p1">**</bpt>System.Type<ept id="p1">**</ept> значение, которое является производным от <bpt id="p2">**</bpt>System.ComponentModel.TypeConverter<ept id="p2">**</ept> или <bpt id="p3">**</bpt>System.Management.Automation.PSTypeConverter<ept id="p3">**</ept> классы.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve">
          <source>This parameter is introduced in Windows PowerShell 3.0.</source>
          <target state="translated">Этот параметр впервые появился в Windows PowerShell 3.0.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve">
          <source>-TypeData</source>
          <target state="translated">-TypeData</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve">
          <source>Adds the specified type data to the session.</source>
          <target state="translated">Добавляет в сеанс указанные данные типа.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve">
          <source>Enter a variable that contains a <bpt id="p1">**</bpt>TypeData<ept id="p1">**</ept> object or a command that gets a <bpt id="p2">**</bpt>TypeData<ept id="p2">**</ept> object, such as a Get-TypeData command.</source>
          <target state="translated">Введите переменную, содержащую <bpt id="p1">**</bpt>TypeData<ept id="p1">**</ept> объекта или команду, которая получает <bpt id="p2">**</bpt>TypeData<ept id="p2">**</ept> объекта, например команда Get-TypeData.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve">
          <source>You can also pipe a TypeData object to <bpt id="p1">**</bpt>Update-TypeData<ept id="p1">**</ept>.</source>
          <target state="translated">Можно также передать объект TypeData <bpt id="p1">**</bpt>Update-TypeData<ept id="p1">**</ept>.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve">
          <source>This parameter is introduced in Windows PowerShell 3.0.</source>
          <target state="translated">Этот параметр впервые появился в Windows PowerShell 3.0.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve">
          <source>-TypeName</source>
          <target state="translated">-TypeName</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve">
          <source>Specifies the name of the type to extend.</source>
          <target state="translated">Определяет имя типа для расширения.</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve">
          <source>For types in the <bpt id="p1">**</bpt>System<ept id="p1">**</ept> namespace, enter the short name.</source>
          <target state="translated">Для типов в <bpt id="p1">**</bpt>системы<ept id="p1">**</ept> пространства имен, введите короткое имя.</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve">
          <source>Otherwise, the full type name is required.</source>
          <target state="translated">В остальных случаях требуется полное имя типа.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve">
          <source>Wildcards are not supported.</source>
          <target state="translated">Подстановочные знаки не поддерживаются.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve">
          <source>You can pipe type names to <bpt id="p1">**</bpt>Update-TypeData<ept id="p1">**</ept>.</source>
          <target state="translated">Можно передать имена типов для <bpt id="p1">**</bpt>Update-TypeData<ept id="p1">**</ept>.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve">
          <source>When you pipe an object to <bpt id="p1">**</bpt>Update-TypeData<ept id="p1">**</ept>, <bpt id="p2">**</bpt>Update-TypeData<ept id="p2">**</ept> gets the type name of the object and type data to the object type.</source>
          <target state="translated">Если передать объект <bpt id="p1">**</bpt>Update-TypeData<ept id="p1">**</ept>, <bpt id="p2">**</bpt>Update-TypeData<ept id="p2">**</ept> возвращает имя типа объекта и типа данных в тип объекта.</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve">
          <source>Use this parameter with the <bpt id="p1">**</bpt>MemberName<ept id="p1">**</ept>, <bpt id="p2">**</bpt>MemberType<ept id="p2">**</ept>, <bpt id="p3">**</bpt>Value<ept id="p3">**</ept> and <bpt id="p4">**</bpt>SecondValue<ept id="p4">**</ept> parameters to add or change a property or method of a type.</source>
          <target state="translated">Используйте этот параметр с <bpt id="p1">**</bpt>MemberName<ept id="p1">**</ept>, <bpt id="p2">**</bpt>MemberType<ept id="p2">**</ept>, <bpt id="p3">**</bpt>значение<ept id="p3">**</ept> и <bpt id="p4">**</bpt>SecondValue<ept id="p4">**</ept> Параметры, чтобы добавить или изменить свойство или метод типа.</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve">
          <source>This parameter is introduced in Windows PowerShell 3.0.</source>
          <target state="translated">Этот параметр впервые появился в Windows PowerShell 3.0.</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve">
          <source>-Value</source>
          <target state="translated">-Значение</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve">
          <source>Specifies the value of the property or method.</source>
          <target state="translated">Определяет значение свойства или метода.</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve">
          <source>If you add an <bpt id="p1">**</bpt>AliasProperty<ept id="p1">**</ept>, <bpt id="p2">**</bpt>CodeProperty<ept id="p2">**</ept>, <bpt id="p3">**</bpt>ScriptProperty<ept id="p3">**</ept>, or <bpt id="p4">**</bpt>CodeMethod<ept id="p4">**</ept> member, you can use the <bpt id="p5">**</bpt>SecondValue<ept id="p5">**</ept> parameter to add additional information..</source>
          <target state="translated">При добавлении <bpt id="p1">**</bpt>AliasProperty<ept id="p1">**</ept>, <bpt id="p2">**</bpt>CodeProperty<ept id="p2">**</ept>, <bpt id="p3">**</bpt>ScriptProperty<ept id="p3">**</ept>, или <bpt id="p4">**</bpt>CodeMethod<ept id="p4">**</ept> элемента, можно использовать <bpt id="p5">**</bpt>SecondValue<ept id="p5">**</ept> параметр для добавления дополнительных сведений...</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve">
          <source>Use this parameter with the <bpt id="p1">**</bpt>MemberName<ept id="p1">**</ept>, <bpt id="p2">**</bpt>MemberType<ept id="p2">**</ept>, <bpt id="p3">**</bpt>Value<ept id="p3">**</ept> and <bpt id="p4">**</bpt>SecondValue<ept id="p4">**</ept> parameters to add or change a property or method of a type.</source>
          <target state="translated">Используйте этот параметр с <bpt id="p1">**</bpt>MemberName<ept id="p1">**</ept>, <bpt id="p2">**</bpt>MemberType<ept id="p2">**</ept>, <bpt id="p3">**</bpt>значение<ept id="p3">**</ept> и <bpt id="p4">**</bpt>SecondValue<ept id="p4">**</ept> Параметры, чтобы добавить или изменить свойство или метод типа.</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve">
          <source>This parameter is introduced in Windows PowerShell 3.0.</source>
          <target state="translated">Этот параметр впервые появился в Windows PowerShell 3.0.</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve">
          <source>-Confirm</source>
          <target state="translated">-Confirm</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve">
          <source>Prompts you for confirmation before running the cmdlet.Prompts you for confirmation before running the cmdlet.</source>
          <target state="translated">Запрашивает подтверждение перед запуском командлета. Запрашивает подтверждение перед запуском командлета.</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve">
          <source>-WhatIf</source>
          <target state="translated">-WhatIf</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve">
          <source>Shows what would happen if the cmdlet runs.</source>
          <target state="translated">Показывает, что произойдет при запуске командлета.</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve">
          <source>The cmdlet is not run.Shows what would happen if the cmdlet runs.</source>
          <target state="translated">Командлет не запущен. Показывает, что произойдет при запуске командлета.</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve">
          <source>The cmdlet is not run.</source>
          <target state="translated">Командлет не запущен.</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve">
          <source>CommonParameters</source>
          <target state="translated">CommonParameters</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve">
          <source>This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutVariable, -OutBuffer, -PipelineVariable, -Verbose, -WarningAction, and -WarningVariable.</source>
          <target state="translated">Этот командлет поддерживает общие параметры:-Debug, - ErrorAction, - ErrorVariable, - InformationAction, - InformationVariable, - OutVariable,-OutBuffer, - PipelineVariable, - Verbose, - WarningAction и - WarningVariable.</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve">
          <source>For more information, see about_CommonParameters (http://go.microsoft.com/fwlink/?LinkID=113216).</source>
          <target state="translated">Дополнительные сведения см. в разделе about_CommonParameters (http://go.microsoft.com/fwlink/?LinkID=113216).</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve">
          <source>INPUTS</source>
          <target state="translated">ВХОДНЫЕ ДАННЫЕ</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve">
          <source>System.String</source>
          <target state="translated">System.String</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve">
          <source>You can pipe a string that contains the values of the <bpt id="p1">**</bpt>AppendPath<ept id="p1">**</ept>, <bpt id="p2">**</bpt>TypeName<ept id="p2">**</ept>, or <bpt id="p3">**</bpt>TypeData<ept id="p3">**</ept> parameters to <bpt id="p4">**</bpt>Update-TypeData<ept id="p4">**</ept>.</source>
          <target state="translated">Можно передать строку, содержащую значения <bpt id="p1">**</bpt>AppendPath<ept id="p1">**</ept>, <bpt id="p2">**</bpt>TypeName<ept id="p2">**</ept>, или <bpt id="p3">**</bpt>TypeData<ept id="p3">**</ept> Параметры <bpt id="p4">**</bpt>Update-TypeData<ept id="p4">**</ept>.</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve">
          <source>OUTPUTS</source>
          <target state="translated">ВЫХОДНЫЕ ДАННЫЕ</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve">
          <source>None</source>
          <target state="translated">Нет</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve">
          <source>This cmdlet does not return any output.</source>
          <target state="translated">Этот командлет не возвращает никакие выходные данные.</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve">
          <source>NOTES</source>
          <target state="translated">ПРИМЕЧАНИЯ</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve">
          <source>RELATED LINKS</source>
          <target state="translated">СВЯЗАННЫЕ ССЫЛКИ</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve">
          <source>about_Types.ps1xml</source>
          <target state="translated">about_Types.ps1xml</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve">
          <source>Get-TypeData</source>
          <target state="translated">Get-TypeData</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve">
          <source>Remove-TypeData</source>
          <target state="translated">Remove-TypeData</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>