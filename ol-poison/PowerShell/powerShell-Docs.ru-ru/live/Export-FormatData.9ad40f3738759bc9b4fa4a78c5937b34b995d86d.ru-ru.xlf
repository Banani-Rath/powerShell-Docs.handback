<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ru-ru">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-1c394fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">efeab6f05e194e5a2b4ab013bc33c27dd23b575e</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">reference\4.0\Microsoft.PowerShell.Utility\Export-FormatData.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions" />
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">a718770ab414823235775bb5ecd1e9238d8aca2b</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">eae8fbc0c8ba762b4da61a07de91f449a0320bf0</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>powershell, cmdlet</source>
          <target state="translated">PowerShell, командлет</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Export-FormatData</source>
          <target state="translated">Export-FormatData</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Export-FormatData</source>
          <target state="translated">Export-FormatData</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>SYNOPSIS</source>
          <target state="translated">КРАТКИЙ ОБЗОР</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Saves formatting data from the current session in a formatting file.</source>
          <target state="translated">Сохраняет данные форматирования текущего сеанса в файле форматирования.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>SYNTAX</source>
          <target state="translated">СИНТАКСИС</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>ByPath (Default)</source>
          <target state="translated">ByPath (по умолчанию)</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>ByLiteralPath</source>
          <target state="translated">ByLiteralPath</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>DESCRIPTION</source>
          <target state="translated">ОПИСАНИЕ</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The Export-FormatData cmdlet creates Windows PowerShell formatting files (format.ps1xml) from the formatting objects in the current session.</source>
          <target state="translated">Командлет Export-FormatData создает файлы форматирования Windows PowerShell (format.ps1xml) на основе объектов форматирования в текущем сеансе.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>It takes the ExtendedTypeDefinition objects that Get-FormatData returns and saves them in a file in XML format.</source>
          <target state="translated">Он принимает объекты ExtendedTypeDefinition, которые возвращает командлет Get-FormatData, и сохраняет их в файле в формате XML.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Windows PowerShell uses the data in formatting files (format.ps1xml) to generate the default display of Microsoft .NET Framework objects in the session.</source>
          <target state="translated">Среда Windows PowerShell использует данные из файлов форматирования (format.ps1xml) для стандартного отображения объектов Microsoft .NET Framework в рамках сеанса.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>You can view and edit the formatting files and use the Update-FormatData cmdlet to add the formatting data to a session.</source>
          <target state="translated">Вы можете просматривать и изменять файлы форматирования и использовать командлет Update-FormatData для добавления данных форматирования в сеанс.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>For more information about formatting files in Windows PowerShell, see about_Format.ps1xml.</source>
          <target state="translated">Подробнее о файлах форматирования в Windows PowerShell см. в разделе about_Format.ps1xml.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>EXAMPLES</source>
          <target state="translated">ПРИМЕРЫ</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>-------------------------- EXAMPLE 1 --------------------------</source>
          <target state="translated">-------------------------- ПРИМЕР 1 --------------------------</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>This command exports all of the format data in the session to the AllFormat.ps1xml file.</source>
          <target state="translated">Эта команда экспортирует все данные форматирования из сеанса в файл AllFormat.ps1xml.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>The command uses the Get-FormatData cmdlet to get the format data in the session.</source>
          <target state="translated">В ней используется командлет Get-FormatData для получения данных форматирования в рамках сеанса.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>A value of * (all) for the TypeName parameter directs the cmdlet to get all of the data in the session.</source>
          <target state="translated">Значение "*" (все) параметра TypeName указывает, что командлет должен вернуть все данные сеанса.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>The command uses a pipeline operator (|) to send the format data from the Get-FormatData command to the Export-FormatData cmdlet, which exports the format data to the AllFormat.ps1 file.</source>
          <target state="translated">С помощью оператора конвейера (|) данные форматирования передаются из команды Get-FormatData в командлет Export-FormatData, который экспортирует их в файл AllFormat.ps1.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>The Export-FormatData command uses the IncludeScriptBlock parameter to include script blocks in the format data in the file.</source>
          <target state="translated">В команде Export-FormatData используется параметр IncludeScriptBlock для включения блоков сценариев в данные форматирования в файле.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>-------------------------- EXAMPLE 2 --------------------------</source>
          <target state="translated">-------------------------- EXAMPLE 2 --------------------------</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>These commands export the format data for the HelpInfoShort type to the Help.format.ps1xml file.</source>
          <target state="translated">Эти команды экспортируют данные форматирования типа HelpInfoShort в файл Help.format.ps1xml.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>The first command uses the Get-FormatData cmdlet to get the format data for the HelpInfoShort type, and it saves it in the $f variable.</source>
          <target state="translated">В первой команде используется командлет Get-FormatData для получения данных форматирования типа HelpInfoShort и их сохранения в переменной $f.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>The second command uses the InputObject parameter of the Export-FormatData to enter the format data saved in the $f variable.</source>
          <target state="translated">Во второй команде используется параметр InputObject командлета Export-FormatData для ввода данных форматирования, сохраненных в переменной $f.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>It also uses the IncludeScriptBlock parameter to include script blocks in the output.</source>
          <target state="translated">В ней также используется параметр IncludeScriptBlock для включения блоков сценариев в выходные данные.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>-------------------------- EXAMPLE 3 --------------------------</source>
          <target state="translated">-------------------------- EXAMPLE 3 --------------------------</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>This example shows the effect of omitting the IncludeScriptBlock parameter from an Export-FormatData command.</source>
          <target state="translated">В этом примере показано, что происходит, если в команде Export-FormatData не указать параметр IncludeScriptBlock.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>The first command uses the Get-FormatData cmdlet to get the format data for the System.Diagnostics.Process object that the Get-Process cmdlet returns.</source>
          <target state="translated">В первой команде используется командлет Get-FormatData для получения данных форматирования для объекта System.Diagnostics.Process, который возвращает командлет Get-Process.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>The command uses a pipeline operator (|) to send the formatting data to the Export-FormatData cmdlet, which exports it to the Process.format.ps1xml file in the current directory.</source>
          <target state="translated">С помощью оператора конвейера (|) данные форматирования передаются в командлет Export-FormatData, который экспортирует их в файл Process.format.ps1xml в текущем каталоге.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>In this case, the Export-FormatData command does not use the IncludeScriptBlock parameter.</source>
          <target state="translated">В этом случае в команде Export-FormatData параметр IncludeScriptBlock не используется.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>The second command uses the Update-FormatData cmdlet to add the Process.format.ps1xml file to the current session.</source>
          <target state="translated">Во второй команде используется командлет Update-FormatData для добавления файла Process.format.ps1xml в текущий сеанс.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>The command uses the PrependPath parameter to ensure that the formatting data for process objects in the Process.format.ps1xml file is found before the standard formatting data for process objects.</source>
          <target state="translated">Благодаря параметру PrependPath поиск данных форматирования для объектов процессов в файле Process.format.ps1xml должен производиться до поиска данных стандартного форматирования для объектов процессов.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>The third command shows the effects of this change.</source>
          <target state="translated">Третья команда демонстрирует последствия этого изменения.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>The command uses the Get-Process cmdlet to get processes that have names that begin with "P".</source>
          <target state="translated">В ней используется командлет Get-Process для получения процессов с именами, начинающимися на P.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>The output shows that property values that are calculated by using script blocks are missing from the display.</source>
          <target state="translated">В выходных данных видно, что значения свойств, вычисляемые с помощью блоков сценариев, не отображаются.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>PARAMETERS</source>
          <target state="translated">ПАРАМЕТРЫ</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>-Force</source>
          <target state="translated">-Force</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Overwrites an existing output file, even if the file has the read-only attribute.</source>
          <target state="translated">Перезаписывает существующий выходной файл, даже если он имеет атрибут только для чтения.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>-IncludeScriptBlock</source>
          <target state="translated">-IncludeScriptBlock</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Determines whether script blocks in the format data are exported.</source>
          <target state="translated">Определяет, экспортируются ли блоки сценариев в данных форматирования.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Because script blocks contain code and can be used maliciously, they are not exported by default.</source>
          <target state="translated">Так как блоки сценариев содержат код и могут использоваться во вредоносных целях, по умолчанию они не экспортируются.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>-InputObject</source>
          <target state="translated">-InputObject</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Specifies the format data objects to be exported.</source>
          <target state="translated">Указывает объекты данных форматирования для экспорта.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Enter a variable that contains the objects or a command that gets the objects, such as a Get-FormatData command.</source>
          <target state="translated">Введите переменную, содержащую объекты, или команду, получающую их, например Get-FormatData.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>You can also pipe the objects from Get-FormatData to Export-FormatData.</source>
          <target state="translated">Вы также можете передавать объекты из командлета Get-FormatData в командлет Export-FormatData по конвейеру.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>-NoClobber</source>
          <target state="translated">-NoClobber</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Prevents the cmdlet from overwriting existing files.</source>
          <target state="translated">Запрещает командлету перезаписывать существующие файлы.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>By default, Export-FormatData overwrites files without warning unless the file has the read-only attribute.</source>
          <target state="translated">По умолчанию командлет Export-FormatData перезаписывает файлы без предупреждения, если только у файла нет атрибута только для чтения.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>To direct Export-FormatData to overwrite read-only files, use the Force parameter.</source>
          <target state="translated">Чтобы указать, что командлет Export-FormatData может перезаписывать файлы, доступные только для чтения, используйте параметр Force.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>-Path</source>
          <target state="translated">-Path</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Specifies a location for the output file.</source>
          <target state="translated">Задает расположение выходного файла.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Enter a path (optional) and file name with a format.ps1xml file name extension.</source>
          <target state="translated">Введите путь (необязательно) и имя файла с расширением format.ps1xml.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>If you omit the path, Export-FormatData creates the file in the current directory.</source>
          <target state="translated">Если путь не указан, командлет Export-FormatData создает файл в текущем каталоге.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>If you use a file name extension other than .ps1xml, the Update-FormatData cmdlet will not recognize the file.</source>
          <target state="translated">Если использовать расширение, отличное от .ps1xml, командлет Update-FormatData не сможет распознать файл.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>If you specify an existing file, Export-FormatData overwrites the file without warning, unless the file has the read-only attribute.</source>
          <target state="translated">Если указать существующий файл, командлет Export-FormatData перезапишет его без предупреждения, если только у него нет атрибута только для чтения.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>To overwrite a read-only file, use the Force parameter.</source>
          <target state="translated">Чтобы перезаписать файл, доступный только для чтения, используйте параметр Force.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>To prevent files from being overwritten, use the NoClobber parameter.</source>
          <target state="translated">Чтобы запретить перезапись файлов, используйте параметр NoClobber.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>-LiteralPath</source>
          <target state="translated">-LiteralPath</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>Specifies a location for the output file.</source>
          <target state="translated">Задает расположение выходного файла.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>Unlike the <bpt id="p1">**</bpt>Path<ept id="p1">**</ept> parameter, the value of <bpt id="p2">**</bpt>LiteralPath<ept id="p2">**</ept> is used exactly as it is typed.</source>
          <target state="translated">В отличие от <bpt id="p1">**</bpt>путь<ept id="p1">**</ept> параметра, значение <bpt id="p2">**</bpt>LiteralPath<ept id="p2">**</ept> используется точно так, как оно указано.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>No characters are interpreted as wildcards.</source>
          <target state="translated">Никакие символы не интерпретируются как знаки подстановки.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>If the path includes escape characters, enclose it in single quotation marks.</source>
          <target state="translated">Если путь содержит escape-символы, заключите его в одинарные кавычки.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>Single quotation marks tell Windows PowerShell not to interpret any characters as escape sequences.</source>
          <target state="translated">Это позволит Windows PowerShell не интерпретировать какие-либо символы как символы Escape-последовательности.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>CommonParameters</source>
          <target state="translated">CommonParameters</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutVariable, -OutBuffer, -PipelineVariable, -Verbose, -WarningAction, and -WarningVariable.</source>
          <target state="translated">Этот командлет поддерживает общие параметры:-Debug, - ErrorAction, - ErrorVariable, - InformationAction, - InformationVariable, - OutVariable,-OutBuffer, - PipelineVariable, - Verbose, - WarningAction и - WarningVariable.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>For more information, see about_CommonParameters (http://go.microsoft.com/fwlink/?LinkID=113216).</source>
          <target state="translated">Дополнительные сведения см. в разделе about_CommonParameters (http://go.microsoft.com/fwlink/?LinkID=113216).</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>INPUTS</source>
          <target state="translated">ВХОДНЫЕ ДАННЫЕ</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>System.Management.Automation.ExtendedTypeDefinition</source>
          <target state="translated">System.Management.Automation.ExtendedTypeDefinition</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>You can pipe ExtendedTypeDefinition objects from Get-FormatData to Export-FormatData.</source>
          <target state="translated">Вы можете передавать объекты ExtendedTypeDefinition из командлета Get-FormatData в командлет Export-FormatData по конвейеру.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>OUTPUTS</source>
          <target state="translated">ВЫХОДНЫЕ ДАННЫЕ</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>None</source>
          <target state="translated">Нет</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>Export-FormatData does not return any objects.</source>
          <target state="translated">Командлет Export-FormatData не возвращает объектов.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>It generates a file and saves it in the specified path.</source>
          <target state="translated">Он создает файл и сохраняет его по указанному пути.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>NOTES</source>
          <target state="translated">ПРИМЕЧАНИЯ</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>To use any formatting file, including an exported formatting file, the execution policy for the session must allow scripts and configuration files to run.</source>
          <target state="translated">Для использования любого файла форматирования, включая экспортированный, политика выполнения сеанса должна разрешать запуск сценариев и файлов конфигурации.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>For more information, see about_Execution_Policies.</source>
          <target state="translated">Подробнее см. в разделе about_Execution_Policies.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>RELATED LINKS</source>
          <target state="translated">СВЯЗАННЫЕ ССЫЛКИ</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>Get-FormatData</source>
          <target state="translated">Get-FormatData</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>Update-FormatData</source>
          <target state="translated">Update-FormatData</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>