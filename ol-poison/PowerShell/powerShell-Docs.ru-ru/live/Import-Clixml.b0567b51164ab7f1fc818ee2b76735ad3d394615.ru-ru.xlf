<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ru-ru">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-1c394fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">674c653835b2417ebcafdaac720ce61ae7ef61d1</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">reference\3.0\Microsoft.PowerShell.Utility\Import-Clixml.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions" />
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d63068b0c9486486335662663b693b2578ffaf58</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">cdba758bf53c11a3af8c1b3e972df3c22131f02c</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>powershell, cmdlet</source>
          <target state="translated">PowerShell, командлет</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Import-Clixml</source>
          <target state="translated">Import-Clixml</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Import-Clixml</source>
          <target state="translated">Import-Clixml</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>SYNOPSIS</source>
          <target state="translated">КРАТКИЙ ОБЗОР</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Imports a CLIXML file and creates corresponding objects within Windows PowerShell.</source>
          <target state="translated">Импортирует файл CLIXML и создает соответствующие объекты в оболочке Windows PowerShell.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>SYNTAX</source>
          <target state="translated">СИНТАКСИС</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>ByPath (Default)</source>
          <target state="translated">ByPath (по умолчанию)</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>ByLiteralPath</source>
          <target state="translated">ByLiteralPath</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>DESCRIPTION</source>
          <target state="translated">ОПИСАНИЕ</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The Import-Clixml cmdlet imports a CLIXML file with data that represents Microsoft .NET Framework objects and creates the objects in Windows PowerShell.</source>
          <target state="translated">Командлет Import-Clixml импортирует файл CLIXML с данными, представляющими объекты Microsoft .NET Framework, и создает объекты в Windows PowerShell.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>A valuable use of Import-CliXml is to import credentials and secure strings that have been exported as secure XML by running the Export-CliXml cmdlet.</source>
          <target state="translated">Import-CliXml ценных используется для импорта учетных данных и безопасные строки, которые были экспортированы как безопасные XML, выполнив командлет Export-CliXml.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>For an example of how to do this, see Example 2 in this topic.</source>
          <target state="translated">Пример того, как это сделать см. в этом разделе Пример 2.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>EXAMPLES</source>
          <target state="translated">ПРИМЕРЫ</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>-------------------------- EXAMPLE 1 --------------------------</source>
          <target state="translated">-------------------------- ПРИМЕР 1 --------------------------</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>This command uses the Export-Clixml cmdlet to save a serialized copy of the process information returned by Get-Process.</source>
          <target state="translated">Эта команда сохраняет сериализованную копию сведений о процессах, возвращенных командлетом Get-Process с помощью командлета Export-Clixml.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>It then uses Import-Clixml to retrieve the contents of the serialized file and re-create an object that is stored in the $processes variable.</source>
          <target state="translated">После этого используется командлет Import-Clixml, извлекающий содержимое сериализованного файла и воссоздающий объект, который сохраняется в переменную $processes</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>-------------------------- EXAMPLE 2 --------------------------</source>
          <target state="translated">-------------------------- EXAMPLE 2 --------------------------</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>The Export-CliXml cmdlet encrypts credential objects by using the Windows Data Protection APIhttp://msdn.microsoft.com/library/windows/apps/xaml/hh464970.aspx.</source>
          <target state="translated">Командлет Export-CliXml шифрует объектов учетных данных с использованием APIhttp://msdn.microsoft.com/library/windows/apps/xaml/hh464970.aspx защиты данных Windows.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>This ensures that only your user account can decrypt the contents of the credential object.</source>
          <target state="translated">Это гарантирует, что содержимое объекта учетных данных можно расшифровать только с учетной записью пользователя.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>In this example, given a credential that you've stored in the $credential variable by running the Get-Credential cmdlet, you can run the Export-CliXml cmdlet to save the credential to disk.In the example, the file in which the credential is stored is represented by TestScript.ps1.credential.</source>
          <target state="translated">В этом примере получает учетные данные, сохраненного в переменной $credential, выполнив командлет Get-Credential можно запустить командлет Export-CliXml для сохранения учетных данных на диск. В примере TestScript.ps1.credential соответствует файл, в котором хранятся учетные данные.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Replace TestScript with the name of the script with which you are loading the credential.</source>
          <target state="translated">Замените TestScript имя сценария, с которым вы загружаете учетные данные.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>In the second command, you pipe the credential object to Export-CliXml, and save it to the path, $credxmlpath, that you specified in the first command.</source>
          <target state="translated">Во второй команде передать объект учетных данных в Export-CliXml и сохраните его в папку $credxmlpath, который указан в первой команде.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>To import the credential automatically into your script, run the final two commands.</source>
          <target state="translated">Чтобы автоматически импортировать учетные данные в скрипте, запустите последние две команды.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>This time, you are running Import-CliXml to import the secured credential object into your script.</source>
          <target state="translated">На этот раз вы используете Import-CliXml, импортируемый объект защищенных учетных данных в сценарий.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>This eliminates the risk of exposing plain-text passwords in your script.</source>
          <target state="translated">Это исключает риск раскрытия простых текстовых паролей в скрипте.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>PARAMETERS</source>
          <target state="translated">ПАРАМЕТРЫ</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>-Path</source>
          <target state="translated">-Path</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Specifies the XML files.</source>
          <target state="translated">Определяет XML-файлы.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>-LiteralPath</source>
          <target state="translated">-LiteralPath</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Specifies the XML files.</source>
          <target state="translated">Определяет XML-файлы.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Unlike <bpt id="p1">**</bpt>Path<ept id="p1">**</ept>, the value of the <bpt id="p2">**</bpt>LiteralPath<ept id="p2">**</ept> parameter is used exactly as it is typed.</source>
          <target state="translated">В отличие от <bpt id="p1">**</bpt>путь<ept id="p1">**</ept>, значение <bpt id="p2">**</bpt>LiteralPath<ept id="p2">**</ept> параметр используется точно так, как оно указано.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>No characters are interpreted as wildcards.</source>
          <target state="translated">Никакие символы не интерпретируются как знаки подстановки.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>If the path includes escape characters, enclose it in single quotation marks.</source>
          <target state="translated">Если путь содержит escape-символы, заключите его в одинарные кавычки.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Single quotation marks tell Windows PowerShell not to interpret any characters as escape sequences.</source>
          <target state="translated">Это позволит Windows PowerShell не интерпретировать какие-либо символы как символы Escape-последовательности.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>-First</source>
          <target state="translated">— Первый</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Gets only the specified number of objects.</source>
          <target state="translated">Получает только указанное количество объектов.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Enter the number of objects to get.</source>
          <target state="translated">Введите количество объектов, которые необходимо получить.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>-Skip</source>
          <target state="translated">-Skip</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Ignores the specified number of objects and then gets the remaining objects.</source>
          <target state="translated">Игнорирует указанное количество объектов, а затем получает оставшиеся объекты.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Enter the number of objects to skip.</source>
          <target state="translated">Введите количество объектов, которые необходимо пропустить.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>-IncludeTotalCount</source>
          <target state="translated">-IncludeTotalCount</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Reports the total number of objects in the data set (an integer) followed by the selected objects.</source>
          <target state="translated">Сообщает общее количество объектов в наборе данных (целое число), за которым следуют выбранные объекты.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>If the cmdlet cannot determine the total count, it displays "Unknown total count."</source>
          <target state="translated">Если командлет не может определить общее количество, отображается сообщение "Общее количество неизвестно".</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>The integer has an Accuracy property that indicates the reliability of the total count value.</source>
          <target state="translated">Целое число имеет свойство Accuracy, которое обозначает достоверность значения общего количества.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>The value of Accuracy ranges from 0.0 to 1.0 where 0.0 means that the cmdlet could not count the objects, 1.0 means that the count is exact, and a value between 0.0 and 1.0 indicates an increasingly reliable estimate.</source>
          <target state="translated">Значение свойства Accuracy варьируется от 0,0 до 1,0, где 0,0 означает, что командлет не может определить количество объектов, 1,0 означает, что количество точное, а значение между 0,0 и 1,0 обозначает степень достоверности оценки.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>CommonParameters</source>
          <target state="translated">CommonParameters</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutVariable, -OutBuffer, -PipelineVariable, -Verbose, -WarningAction, and -WarningVariable.</source>
          <target state="translated">Этот командлет поддерживает общие параметры:-Debug, - ErrorAction, - ErrorVariable, - InformationAction, - InformationVariable, - OutVariable,-OutBuffer, - PipelineVariable, - Verbose, - WarningAction и - WarningVariable.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>For more information, see about_CommonParameters (http://go.microsoft.com/fwlink/?LinkID=113216).</source>
          <target state="translated">Дополнительные сведения см. в разделе about_CommonParameters (http://go.microsoft.com/fwlink/?LinkID=113216).</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>INPUTS</source>
          <target state="translated">ВХОДНЫЕ ДАННЫЕ</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>System.String</source>
          <target state="translated">System.String</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>You can pipe a string that contains a path to Import-Clixml.</source>
          <target state="translated">Строку, содержащую путь, можно передать в командлет Import-Clixml по конвейеру.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>OUTPUTS</source>
          <target state="translated">ВЫХОДНЫЕ ДАННЫЕ</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>PSObject</source>
          <target state="translated">PSObject</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Import-Clixml returns objects that have been deserialized from the stored XML files.</source>
          <target state="translated">Командлет Import-Clixml возвращает объекты, десериализованные из сохраненных XML-файлов.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>NOTES</source>
          <target state="translated">ПРИМЕЧАНИЯ</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>When specifying multiple values for a parameter, use commas to separate the values.</source>
          <target state="translated">При указании нескольких значений параметра разделяйте их запятыми.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>For example, "<ph id="ph1">\&lt;</ph>parameter-name<ph id="ph2">\&gt;</ph> <ph id="ph3">\&lt;</ph>value1<ph id="ph4">\&gt;</ph>, <ph id="ph5">\&lt;</ph>value2<ph id="ph6">\&gt;</ph>".</source>
          <target state="translated">Например «<ph id="ph1">\&lt;</ph>имя параметра<ph id="ph2">\&gt;</ph> <ph id="ph3">\&lt;</ph>значение1<ph id="ph4">\&gt;</ph>, <ph id="ph5">\&lt;</ph>value2<ph id="ph6">\&gt;</ph>».</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>RELATED LINKS</source>
          <target state="translated">СВЯЗАННЫЕ ССЫЛКИ</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>Use PowerShell to Pass Credentials to Legacy Systems</source>
          <target state="translated">Использование PowerShell для передачи учетных данных систем прежних версий</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>Securely Store Credentials on Disk</source>
          <target state="translated">Безопасно хранить учетные данные на диске</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>Export-Clixml</source>
          <target state="translated">Export-Clixml</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>