<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ru-ru">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-1c394fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">be3268191a93408923f9e3ab45dedc2a01052128</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">reference\3.0\Microsoft.PowerShell.Core\About\about_Properties.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions" />
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">80b0ac597e17ff9ee7432747318e2d584ec23475</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">34b537130310bfa03e816d350ae66d77ffe5d356</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>about_Properties</source>
          <target state="translated">about_Properties</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>powershell, cmdlet</source>
          <target state="translated">PowerShell, командлет</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>About Properties</source>
          <target state="translated">О свойствах</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>about_Properties</source>
          <target state="translated">about_Properties</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>about_Properties</source>
          <target state="translated">about_Properties</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>SHORT DESCRIPTION</source>
          <target state="translated">КРАТКОЕ ОПИСАНИЕ</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Describes how to use object properties in  Windows PowerShell�.</source>
          <target state="translated">Описывает, как использовать свойства объектов в Windows PowerShell.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>LONG DESCRIPTION</source>
          <target state="translated">ПОДРОБНОЕ ОПИСАНИЕ</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Windows PowerShell uses structured collections of information called objects to represent the items in data stores or the state of the computer.</source>
          <target state="translated">Windows PowerShell использует структурированные наборы данных, называются объектами для представления элементов в хранилищ данных или состояние компьютера.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Typically, you work with object that are part of the Microsoft .NET Framework, but you can also create custom objects in  Windows PowerShell.</source>
          <target state="translated">Как правило иногда работать с объектами, которые являются частью платформы Microsoft .NET Framework, но можно также создать пользовательские объекты в Windows PowerShell.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>The association between an item and its object is very close.</source>
          <target state="translated">Связь между элементом и его объект особое.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>When you change an object, you usually change the item that it represents.</source>
          <target state="translated">При изменении объекта, обычно изменить элемент, который он представляет.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>For example, when you get a file in  Windows PowerShell, you do not get the actual file.</source>
          <target state="translated">Например при открытии файла в Windows PowerShell не получить фактический файл.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Instead, you get a FileInfo object that represents the file.</source>
          <target state="translated">Вместо этого вы получите объекта FileInfo, который представляет файл.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>When you change the FileInfo object, the file changes too.</source>
          <target state="translated">При изменении объекта FileInfo слишком изменении файла.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Most objects have properties.</source>
          <target state="translated">Большинство объектов имеют свойства.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Properties are the data that is associated with an object.</source>
          <target state="translated">Свойства являются данные, связанные с объектом.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Different types of object have different properties.</source>
          <target state="translated">Различные типы объектов имеют разные свойства.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>For example, a FileInfo object, which represents a file, has an IsReadOnly property that contains $True if the file the read-only attribute and $False if it does not.</source>
          <target state="translated">Например, объект FileInfo, который представляет файл, имеет свойство IsReadOnly, содержащий $True, если атрибут файла только для чтения и $False, если это не так.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>A DirectoryInfo object, which represents a file system directory, has a Parent property that contains the path to the parent directory.</source>
          <target state="translated">Объект DirectoryInfo, который представляет каталог файловой системы, имеет родительское свойство, которая содержит путь к родительскому каталогу.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>OBJECT PROPERTIES</source>
          <target state="translated">СВОЙСТВА ОБЪЕКТА</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>To get the properties of an object, use the Get-Member cmdlet.</source>
          <target state="translated">Чтобы получить свойства объекта, используйте командлет Get-Member.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>For example, to get the properties of a FileInfo object, use the Get-ChildItem cmdlet to get the FileInfo object that represents a file.</source>
          <target state="translated">Чтобы получить свойства объекта FileInfo, используйте командлет Get-ChildItem для получения объекта FileInfo, который представляет файл.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Then, use a pipeline operator (&amp;#124;) to send the FileInfo object to Get-Member.</source>
          <target state="translated">Затем с помощью оператора конвейера (&amp;#124;) для отправки объекта FileInfo в Get-Member.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>The following command gets the PowerShell.exe file and sends it to Get-Member.</source>
          <target state="translated">Следующая команда возвращает файла PowerShell.exe и отправляет его в командлет Get-Member.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>The $Pshome automatic variable contains the path of the  Windows PowerShell installation directory.</source>
          <target state="translated">Автоматическая переменная $Pshome содержит путь к каталогу установки Windows PowerShell.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>The output of the command lists the members of the FileInfo object.</source>
          <target state="translated">Выходные данные команды список членов объекта FileInfo.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Members include both properties and methods.</source>
          <target state="translated">Члены содержат свойства и методы.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>When you work in  Windows PowerShell, you have access to all the members of the objects.</source>
          <target state="translated">При работе в Windows PowerShell имеется доступ ко всем элементам объектов.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>To get only the properties of an object and not the methods, use the MemberType parameter of the Get-Member cmdlet with a value of "property", as shown in the following example.</source>
          <target state="translated">Чтобы получить только свойства и не методы объекта, используйте параметр MemberType командлет Get-Member со значением «свойство», как показано в следующем примере.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>After you find the properties, you can use them in your  Windows PowerShell commands.</source>
          <target state="translated">После поиска свойств, их можно использовать в командах Windows PowerShell.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>PROPERTY VALUES</source>
          <target state="translated">ЗНАЧЕНИЯ СВОЙСТВ</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Although every object of a specific type has the same properties, the values of those properties describe the particular object.</source>
          <target state="translated">Несмотря на то, что все объекты определенного типа имеет те же свойства, значения этих свойств описания конкретного объекта.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>For example, every FileInfo object has a CreationTime property, but the value of that property differs for each file.</source>
          <target state="translated">Например каждый FileInfo объект имеет свойства CreationTime, но значение этого свойства различается для каждого файла.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>The most common way to get the values of the properties of an object is to use the dot method.</source>
          <target state="translated">Использовать метод точка является наиболее распространенным способом для получения значений свойств объекта.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Type a reference to the object, such as a variable that contains the object, or a command that gets the object.</source>
          <target state="translated">Введите ссылку на объект, такие как переменную, которая содержит объект, или команду, которая возвращает объект.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Then, type a dot (.) followed by the property name.</source>
          <target state="translated">Затем введите точку (.), за которым следует имя свойства.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>For example, the following command displays the value of the CreationTime property of the PowerShell.exe file.</source>
          <target state="translated">Например следующая команда отображает значение свойства CreationTime файла PowerShell.exe.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>The Get-ChildItem command returns a FileInfo object that represents the PowerShell.exe file.</source>
          <target state="translated">Команда Get-ChildItem возвращает объект FileInfo, который представляет файл PowerShell.exe.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>The command is enclosed in parentheses to make sure that it is executed before any properties are accessed.</source>
          <target state="translated">Команду следует заключить в круглые скобки, чтобы убедиться в том, что он выполняется перед все свойства доступны.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>The Get-ChildItem command is followed by a dot and the name of the CreationTime property, as follows:</source>
          <target state="translated">Команда Get-ChildItem следуют точка и имя свойства CreationTime следующим образом:</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>You can also save an object in a variable and then get its properties by using the dot method, as shown in the following example:</source>
          <target state="translated">Можно также сохранить объект в переменной и получения его свойств с помощью метода точки, как показано в следующем примере:</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>You can also use the Select-Object and Format-List cmdlets to display the property values of an object.</source>
          <target state="translated">Также можно использовать командлет Select-Object и Format-List для отображения значений свойств объекта.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Select-Object and Format-List each have a Property parameter.</source>
          <target state="translated">SELECT-Object и Format-List есть параметр свойства.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>You can use the Property parameter to specify one or more properties and their values.</source>
          <target state="translated">Параметр свойства задать одно или несколько свойств и их значения.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Or, you can use the wildcard character (<ph id="ph1">\*</ph>) to represent all the properties.</source>
          <target state="translated">Или можно использовать подстановочный знак (<ph id="ph1">\*</ph>) для представления всех свойств.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>For example, the following command displays the values of all the properties of the PowerShell.exe file.</source>
          <target state="translated">Например следующая команда отображает значения всех свойств файла PowerShell.exe.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>STATIC PROPERTIES</source>
          <target state="translated">СТАТИЧЕСКИЕ СВОЙСТВА</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>You can use the static properties of .NET classes in  Windows PowerShell.</source>
          <target state="translated">В Windows PowerShell можно использовать статические свойства классов .NET.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Static properties are properties of class, unlike standard properties, which are properties of an object.</source>
          <target state="translated">Статические свойства являются свойствами класса, в отличие от стандартных свойств, которые являются свойствами объекта.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>To get the static properties of an class, use the Static parameter of the Get-Member cmdlet.</source>
          <target state="translated">Чтобы получить статические свойства класса, используйте параметр Static командлет Get-Member.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>For example, the following command gets the static properties of the System.DateTime class.</source>
          <target state="translated">Например следующая команда возвращает статические свойства класса System.DateTime.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>To get the value of a static property, use the following syntax.</source>
          <target state="translated">Чтобы получить значение статического свойства, используйте следующий синтаксис.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>For example, the following command gets the value of the UtcNow static property of the System.DateTime class.</source>
          <target state="translated">Например следующая команда возвращает значение UtcNow статическое свойство класса System.DateTime.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>PROPERTIES OF SCALAR OBJECTS AND COLLECTIONS</source>
          <target state="translated">СВОЙСТВА СКАЛЯРНЫХ ОБЪЕКТОВ И КОЛЛЕКЦИЙ</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>The properties of one ("scalar") object of a particular type are often different from the properties of a collection of objects of the same type.</source>
          <target state="translated">Свойства («скалярный») объекта определенного типа часто отличаются от свойств коллекции объектов одного типа.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>For example, every service has as DisplayName property, but a collection of services does not have a DisplayName property.</source>
          <target state="translated">Например каждая служба имеет как свойство DisplayName, но набор служб имеет свойство DisplayName.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Similarly, all collections have a Count property that tells how many objects are in the collection, but individual objects do not have a Count property.</source>
          <target state="translated">Аналогичным образом все коллекции имеют свойство Count, которое сообщает, сколько объектов в коллекции, но отдельные объекты не имеют свойство Count.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>Beginning in  Windows PowerShell 3.0,  Windows PowerShell tries to prevent scripting errors that result from the differing properties of scalar objects and collections.</source>
          <target state="translated">Начиная с Windows PowerShell 3.0, Windows PowerShell пытается предотвратить ошибки сценариев, возникающие в результате разные свойства скалярных объектов и коллекций.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>If you submit a collection, but request a property that exists only on single ("scalar") objects,  Windows PowerShell returns the value of that property for every object in the collection.</source>
          <target state="translated">Если отправка коллекции, но запросить свойство, которое существует только в отдельных объектов («скалярный»), Windows PowerShell возвращает значение этого свойства для каждого объекта в коллекции.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>If you request the Count or Length property of zero objects or of one object,  Windows PowerShell returns the correct value.</source>
          <target state="translated">Если запросить свойство Count или длина объектов ноль или один объект, Windows PowerShell возвращает правильное значение.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>If the property exists on the individual objects and on the collection,  Windows PowerShell does not alter the result.</source>
          <target state="translated">Если такое свойство существует на отдельные объекты и коллекции, Windows PowerShell не влияют на результаты.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>This feature also works on methods of scalar objects and collections.</source>
          <target state="translated">Эта функция также работает для методов скалярных объектов и коллекций.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>For more information, see about_Methods.</source>
          <target state="translated">Дополнительные сведения см. в разделе about_Methods.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>EXAMPLES</source>
          <target state="translated">ПРИМЕРЫ</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>For example, each service has a DisplayName property.</source>
          <target state="translated">Например каждая служба имеет свойство DisplayName.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>The following command gets the value of the DisplayName property of the Audiosrv service.</source>
          <target state="translated">Следующая команда возвращает значение свойства DisplayName Audiosrv службы.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>However, a collection or array of services does not have a DisplayName.</source>
          <target state="translated">Однако коллекции или массиве служб не DisplayName.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>The following command tries to get the DisplayName property of all services in  Windows PowerShell 2.0.</source>
          <target state="translated">Следующая команда пытается получить свойство DisplayName всех служб в Windows PowerShell 2.0.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>Beginning in  Windows PowerShell 3.0, the same command returns the value of the DisplayName property of every service that Get-Service returns.</source>
          <target state="translated">Начиная с Windows PowerShell 3.0, та же команда возвращает значение свойства DisplayName каждой из служб командлетом Get-Service.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>Conversely, a collection of two or more services has a Count property, which contains the number of objects in the collection.</source>
          <target state="translated">И наоборот коллекция двух или нескольких служб имеет свойство Count, которая содержит число объектов в коллекции.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>Individual services do not have a Count or Length property, as shown in this command in  Windows PowerShell 2.0.</source>
          <target state="translated">Отдельные службы имеют свойство Count или длину, как показано в этой команде в Windows PowerShell 2.0.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>Beginning in  Windows PowerShell 3.0, the command returns the correct Count value.</source>
          <target state="translated">Начиная с Windows PowerShell 3.0, команда возвращает правильное значение счетчика.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>SEE ALSO</source>
          <target state="translated">СМ. ТАКЖЕ</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>about_Methods</source>
          <target state="translated">about_Methods</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>about_Objects</source>
          <target state="translated">about_Objects</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>Get-Member</source>
          <target state="translated">Get-Member</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>Select-Object</source>
          <target state="translated">Select-Object</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>Format-List</source>
          <target state="translated">Format-List</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>