<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ru-ru">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-1c394fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d2eb643c659a1cbea2cad73c764733f2410159a4</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">reference\5.0\Microsoft.PowerShell.Core\About\about_Object_Creation.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions" />
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">800b0c34b44caeadb1b04b0826d983f451aee868</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">78082c32a5cb572c3880eed244c6c4e55933448d</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>about_Object_Creation</source>
          <target state="translated">about_Object_Creation</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>powershell, cmdlet</source>
          <target state="translated">PowerShell, командлет</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>About Object Creation</source>
          <target state="translated">О создании объекта</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>about_Object_Creation</source>
          <target state="translated">about_Object_Creation</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>about_Object_Creation</source>
          <target state="translated">about_Object_Creation</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>SHORT DESCRIPTION</source>
          <target state="translated">КРАТКОЕ ОПИСАНИЕ</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Explains how to create objects in  Windows PowerShell�.</source>
          <target state="translated">Описание способов создания объектов в Windows PowerShell.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>LONG DESCRIPTION</source>
          <target state="translated">ПОДРОБНОЕ ОПИСАНИЕ</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>You can create objects in  Windows PowerShell and use the objects that you create in commands and scripts.</source>
          <target state="translated">Можно создавать объекты в Windows PowerShell и использовать объекты, создаваемые в команды и сценарии.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>There are several ways to create objects:</source>
          <target state="translated">Для создания объектов несколькими способами:</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>New-Object:</source>
          <target state="translated">New-Object:</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>The New-Object cmdlet creates an instance of a .NET Framework object or COM object.</source>
          <target state="translated">Командлет New-Object создает экземпляр объекта .NET Framework или COM-объект.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Hash tables:</source>
          <target state="translated">Хэш-таблицы:</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Beginning in  Windows PowerShell 3.0, you can create objects from hash tables of property names and property values.</source>
          <target state="translated">Начиная с Windows PowerShell 3.0, можно создавать объекты из хэш-таблицы, имена свойств и их значений.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Import-Csv:</source>
          <target state="translated">Import-Csv:</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>The Import-Csv cmdlet creates custom objects (PSCustomObject) from the items in a CSV file.</source>
          <target state="translated">Командлет Import-Csv создает пользовательских объектов (PSCustomObject) из элементов в CSV-файл.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Each row is an object instance and each column is an object property.</source>
          <target state="translated">Каждая строка представляет экземпляр объекта, и каждый столбец имеет свойство объекта.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>This topic will demonstrate and discuss each of these methods.</source>
          <target state="translated">В этом разделе будет показано и рассмотрим каждую из этих методов.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>NEW-OBJECT</source>
          <target state="translated">НОВЫЙ ОБЪЕКТ</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>The New-Object cmdlet provides a robust and consistent way to create new objects.</source>
          <target state="translated">Командлет New-Object предоставляет надежное и согласованный способ создания новых объектов.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>The cmdlet works with almost all types and in all supported versions of  Windows PowerShell.</source>
          <target state="translated">Командлет работает с почти всеми типами и во всех поддерживаемых версиях Windows PowerShell.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>To create a new object, specify either the type of a .NET Framework class or a ProgID of a COM object.</source>
          <target state="translated">Чтобы создать новый объект, укажите тип класса .NET Framework или ProgID COM-объекта.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>For example, the following command creates a Version object.</source>
          <target state="translated">Например следующая команда создает объект версии.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>For more information, see the help topic for the New-Object cmdlet.</source>
          <target state="translated">Дополнительные сведения см. в разделе справки для командлета New-Object.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>CREATE OBJECTS FROM HASH TABLES</source>
          <target state="translated">СОЗДАТЬ ОБЪЕКТЫ ИЗ ХЭШ-ТАБЛИЦЫ</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Beginning in  Windows PowerShell 3.0, you can create an object from a hash table of properties and property values.</source>
          <target state="translated">Начиная с Windows PowerShell 3.0, можно создать объект из хэш-таблицу свойств и их значений.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>The syntax is as follows:</source>
          <target state="translated">Синтаксис выглядит следующим образом:</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>This method works only for classes that have a null constructor, that is, a constructor that has no parameters.</source>
          <target state="translated">Этот метод работает только для классов, имеющих значение null конструктор, то есть конструктор, который не имеет параметров.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>The object properties must be public and settable.</source>
          <target state="translated">Свойства объекта должны быть открытыми и настраиваемым.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>CREATE CUSTOM OBJECTS FROM HASH TABLES</source>
          <target state="translated">СОЗДАНИЕ НАСТРАИВАЕМЫХ ОБЪЕКТОВ ИЗ ХЭШ-ТАБЛИЦЫ</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Custom objects are very useful and they are very easy to create by using the hash table method.</source>
          <target state="translated">Пользовательские объекты очень полезны, и их можно легко создать с помощью метода таблицы хэширования.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>To create a custom object, use the PSCustomObject class, a class designed specifically for this purpose.</source>
          <target state="translated">Создание пользовательского объекта, используйте класс PSCustomObject, класс, разработанный специально для этой цели.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Custom objects are an excellent way to return customized output from a function or script; far more useful than returning formatted output that cannot be reformatted or piped to other commands.</source>
          <target state="translated">Пользовательские объекты являются отличным способом для получения настраиваемых выходных данных из функции или скрипт. гораздо более полезны, чем возврат Форматированные выходные данные, не могут быть переформатированы или по конвейеру другим командам.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>The commands in the Test-Object function set some variable values and then use those values to create a custom object.</source>
          <target state="translated">Команды в тестовый объект функции значения некоторых переменных, а затем использовать эти значения для создания пользовательского объекта.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>(You can see this object in use in the example section of the Update-Help cmdlet help topic.)</source>
          <target state="translated">(Вы видите этот объект используется в подразделе "Пример" раздела справки командлета Update-Help.)</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>The output of this function is a collection of custom objects formatted as a table by default.</source>
          <target state="translated">Выходные данные этой функции является коллекцией пользовательских объектов по умолчанию в формате таблицы.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Users can manage the properties of the custom objects just as they do with standard objects.</source>
          <target state="translated">Пользователи могут управлять свойствами пользовательских объектов, так же, как с помощью стандартных объектов.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>CREATE NON-CUSTOM OBJECTS FROM HASH TABLES</source>
          <target state="translated">СОЗДАНИЕ ОПРЕДЕЛЕННЫХ ПОЛЬЗОВАТЕЛЕМ ОБЪЕКТОВ ИЗ ХЭШ-ТАБЛИЦЫ</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>You can also use hash tables to create objects for non-custom classes.</source>
          <target state="translated">Также можно использовать хэш-таблицы для создания объектов для классов, определенных пользователем.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>When you create an object for a non-custom class, the full namespace name is required unless class is in the System namespace.</source>
          <target state="translated">При создании объекта от обычного класса, полное имя пространства имен обязателен, если класс находится в пространстве имен System.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Use only the properties of the class.</source>
          <target state="translated">Используйте только свойства класса.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>For example, the following command creates a session option object.</source>
          <target state="translated">Например следующая команда создает объект параметров сеанса.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>The requirements of the hash table feature, especially the null constructor requirement, eliminate many existing classes.</source>
          <target state="translated">Требования к функции таблицы хэша, особенно требования пустой конструктор, устранить многие существующие классы.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>However, most  Windows PowerShell option classes are designed to work with this feature, as well as other very useful classes, such as the ScheduledJobTrigger class.</source>
          <target state="translated">Однако большинство классов параметров Windows PowerShell предназначены для работы с этой функции, а также другие классы очень полезно, например класс ScheduledJobTrigger.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>You can also use the hash table feature when setting parameter values.</source>
          <target state="translated">Также можно использовать функцию таблицы хэширования, при задании значения параметров.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>For example, the value of the SessionOption parameter of the New-PSSession cmdlet and the value of the JobTrigger parameter of Register-ScheduledJob can be a hash table.</source>
          <target state="translated">Например значение параметра SessionOption командлета New-PSSession и значение параметра JobTrigger Register-ScheduledJob может быть хэш-таблицу.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>IMPORT-CSV</source>
          <target state="translated">IMPORT-CSV</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>You can create custom objects from the items in a CSV file.</source>
          <target state="translated">Возможность создания пользовательских объектов с элементами в CSV-файл.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>When you use the Import-Csv cmdlet to import the CSV file, the cmdlet creates a custom object (PSCustomObject) for each item in the file.</source>
          <target state="translated">При использовании командлета Import-Csv для импорта файла CSV, командлет создает пользовательский объект (PSCustomObject) для каждого элемента в файле.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>The column names are the object properties.</source>
          <target state="translated">Имена столбцов являются свойствами объекта.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>For example, if you import a CSV file of computer asset data, Import-CSV creates a collection of custom objects from the input.</source>
          <target state="translated">Например при импорте CSV-файл с компьютера активов данных Import-CSV создает коллекцию пользовательских объектов из входных данных.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Use the Get-Member cmdlet to confirm the object type.</source>
          <target state="translated">С помощью командлета Get-Member подтверждение тип объекта.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>You can use the custom objects just as you would standard objects.</source>
          <target state="translated">Настраиваемые объекты можно использовать так же, как стандартные объекты.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>For more information, see the help topic for the Import-Csv cmdlet.</source>
          <target state="translated">Дополнительные сведения см. в разделе справки для командлета Import-Csv.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>SEE ALSO</source>
          <target state="translated">СМ. ТАКЖЕ</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>about_Objects</source>
          <target state="translated">about_Objects</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>about_Methods</source>
          <target state="translated">about_Methods</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>about_Properties</source>
          <target state="translated">about_Properties</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>about_Pipelines</source>
          <target state="translated">about_Pipelines</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>Get-Member</source>
          <target state="translated">Get-Member</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>Import-Csv</source>
          <target state="translated">Import-Csv</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>New-Object</source>
          <target state="translated">Новый объект</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>