<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ru-ru">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-1c394fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">05c666988423bb803e9314e8428f1c0f5f074a6f</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">reference\3.0\Microsoft.PowerShell.Core\Where-Object.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions" />
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">534a6336b62921db621b76606a177fe437e03cb6</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">76ba53e05c0359cafc0bb03c294afa61184d4299</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>powershell, cmdlet</source>
          <target state="translated">PowerShell, командлет</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Where-Object</source>
          <target state="translated">Where-Object</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Where-Object</source>
          <target state="translated">Where-Object</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>SYNOPSIS</source>
          <target state="translated">КРАТКИЙ ОБЗОР</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Selects objects from a collection based on their property values.</source>
          <target state="translated">Выбирает объекты из коллекции на основании значения их свойств.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>SYNTAX</source>
          <target state="translated">СИНТАКСИС</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>EqualSet (Default)</source>
          <target state="translated">EqualSet (по умолчанию)</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>ScriptBlockSet</source>
          <target state="translated">ScriptBlockSet</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>GreaterOrEqualSet</source>
          <target state="translated">GreaterOrEqualSet</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>CaseSensitiveGreaterThanSet</source>
          <target state="translated">CaseSensitiveGreaterThanSet</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>CaseSensitiveNotLikeSet</source>
          <target state="translated">CaseSensitiveNotLikeSet</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>MatchSet</source>
          <target state="translated">MatchSet</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>CaseSensitiveMatchSet</source>
          <target state="translated">CaseSensitiveMatchSet</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>NotMatchSet</source>
          <target state="translated">NotMatchSet</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>CaseSensitiveNotMatchSet</source>
          <target state="translated">CaseSensitiveNotMatchSet</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>LessThanSet</source>
          <target state="translated">LessThanSet</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>NotContainsSet</source>
          <target state="translated">NotContainsSet</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>CaseSensitiveNotContainsSet</source>
          <target state="translated">CaseSensitiveNotContainsSet</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>InSet</source>
          <target state="translated">Отступ</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>CaseSensitiveLessThanSet</source>
          <target state="translated">CaseSensitiveLessThanSet</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>CaseSensitiveContainsSet</source>
          <target state="translated">CaseSensitiveContainsSet</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>ContainsSet</source>
          <target state="translated">ContainsSet</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>CaseSensitiveGreaterOrEqualSet</source>
          <target state="translated">CaseSensitiveGreaterOrEqualSet</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>LessOrEqualSet</source>
          <target state="translated">LessOrEqualSet</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>CaseSensitiveEqualSet</source>
          <target state="translated">CaseSensitiveEqualSet</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>CaseSensitiveLessOrEqualSet</source>
          <target state="translated">CaseSensitiveLessOrEqualSet</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>LikeSet</source>
          <target state="translated">LikeSet</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>CaseSensitiveLikeSet</source>
          <target state="translated">CaseSensitiveLikeSet</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>NotLikeSet</source>
          <target state="translated">NotLikeSet</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>NotEqualSet</source>
          <target state="translated">NotEqualSet</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>GreaterThanSet</source>
          <target state="translated">GreaterThanSet</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>CaseSensitiveInSet</source>
          <target state="translated">CaseSensitiveInSet</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>NotInSet</source>
          <target state="translated">NotInSet</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>CaseSensitiveNotEqualSet</source>
          <target state="translated">CaseSensitiveNotEqualSet</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>CaseSensitiveNotInSet</source>
          <target state="translated">CaseSensitiveNotInSet</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>IsSet</source>
          <target state="translated">Значении</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>IsNotSet</source>
          <target state="translated">IsNotSet</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>DESCRIPTION</source>
          <target state="translated">ОПИСАНИЕ</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>Where-Object<ept id="p1">**</ept> cmdlet selects objects that have particular property values from the collection of objects that are passed to it.</source>
          <target state="translated"> <bpt id="p1">**</bpt>Where-Object<ept id="p1">**</ept> выбирает объекты, имеющие определенные значения свойств из коллекции объектов, которые передаются в него.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>For example you can use the <bpt id="p1">**</bpt>Where-Object<ept id="p1">**</ept> cmdlet to select files that were created after a certain date, events with a particular ID, or computers with a particular version of Windows.</source>
          <target state="translated">Например можно использовать <bpt id="p1">**</bpt>Where-Object<ept id="p1">**</ept> командлет, чтобы выбрать файлы, созданные после определенной даты, события с определенным кодом или компьютеры с определенной версии Windows.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Beginning in Windows PowerShell 3.0, there are two different ways to construct a  <bpt id="p1">**</bpt>Where-Object<ept id="p1">**</ept> command.</source>
          <target state="translated">Начиная с Windows PowerShell 3.0, существует два способа создания  <bpt id="p1">**</bpt>Where-Object<ept id="p1">**</ept> команды.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Script block<ept id="p1">**</ept>.</source>
          <target state="translated"><bpt id="p1">**</bpt>Блок сценария<ept id="p1">**</ept>.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>You can use a script block to specify the property name, a comparison operator, and a property value.</source>
          <target state="translated">Для указания имени свойства, оператора сравнения и значения свойства можно использовать блок сценария.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Where-Object returns all objects for which the script block statement is true.</source>
          <target state="translated">Командлет Where-Object возвращает все объекты, для которых оператор блока сценария имеет значение true.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>For example, the following command gets processes in the Normal priority class, that is, processes where the value of the <bpt id="p1">**</bpt>PriorityClass<ept id="p1">**</ept> property equals "Normal".</source>
          <target state="translated">Например, следующая команда получает процессы с нормальным приоритетом, то есть, процессы, для которых значение <bpt id="p1">**</bpt>PriorityClass<ept id="p1">**</ept> свойство равно «Обычный».</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>All Windows PowerShell comparison operators are valid in the script block format.</source>
          <target state="translated">В формате блока сценария все операторы сравнения Windows PowerShell являются допустимыми.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>For more information about comparison operators, see about_Comparison_Operators (http://go.microsoft.com/fwlink/?LinkID=113217).</source>
          <target state="translated">Дополнительные сведения об операторах сравнения см. в разделе about_Comparison_Operators (http://go.microsoft.com/fwlink/?LinkID=113217).</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Comparison statement<ept id="p1">**</ept>.</source>
          <target state="translated"><bpt id="p1">**</bpt>Оператор сравнения<ept id="p1">**</ept>.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>You can also write a comparison statement, which is much more like natural language.</source>
          <target state="translated">Можно также написать оператор сравнения, который больше похож на естественный язык.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Comparison statements were introduced in Windows PowerShell 3.0.</source>
          <target state="translated">Операторы сравнения были представлены в Windows PowerShell 3.0.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>For example, the following commands also get processes that have a priority class of "Normal".</source>
          <target state="translated">Например, следующие команды также получают процессы с классом приоритета "Средний".</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>These commands are equivalent and can be used interchangeably.</source>
          <target state="translated">Эти команды эквивалентны и взаимозаменяемы.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Beginning in Windows PowerShell 3.0, <bpt id="p1">**</bpt>Where-Object<ept id="p1">**</ept> adds comparison operators as parameters in a <bpt id="p2">**</bpt>Where-Object<ept id="p2">**</ept> command.</source>
          <target state="translated">Начиная с Windows PowerShell 3.0 <bpt id="p1">**</bpt>Where-Object<ept id="p1">**</ept> Добавляет операторы сравнения в качестве параметров <bpt id="p2">**</bpt>Where-Object<ept id="p2">**</ept> команды.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Unless specified, all operators are case-insensitive.</source>
          <target state="translated">Если не указано иначе, все операторы вводятся без учета регистра.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Prior to Windows PowerShell 3.0, the comparison operators in the Windows PowerShell language could be used only in script blocks.</source>
          <target state="translated">До Windows PowerShell 3.0 операторы сравнения на языке Windows PowerShell можно было использовать только в блоках сценариев.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>EXAMPLES</source>
          <target state="translated">ПРИМЕРЫ</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>-------------------------- EXAMPLE 1 --------------------------</source>
          <target state="translated">-------------------------- ПРИМЕР 1 --------------------------</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>This command gets a list of all services that are currently stopped.</source>
          <target state="translated">Эта команда получает список всех служб, которые в настоящее время остановлены.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>The "$_" symbol represents each object that is passed to the <bpt id="p1">**</bpt>Where-Object<ept id="p1">**</ept> cmdlet.</source>
          <target state="translated">«$_» Символ представляет каждый объект, передаваемый <bpt id="p1">**</bpt>Where-Object<ept id="p1">**</ept> командлета.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>The first command uses the script block format.</source>
          <target state="translated">Первая команда использует формат блока сценария.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>The second command uses the comparison statement format.</source>
          <target state="translated">Вторая команда использует формат оператора сравнения.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>The commands are equivalent and can be used interchangeably.</source>
          <target state="translated">Команды эквивалентны и взаимозаменяемы.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>-------------------------- EXAMPLE 2 --------------------------</source>
          <target state="translated">-------------------------- EXAMPLE 2 --------------------------</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>This command lists processes that have a working set greater than 25,000 kilobytes (KB).</source>
          <target state="translated">Эта команда выводит список процессов, рабочий набор которых больше 25 000 килобайт (КБ).</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>Because the value of the WorkingSet property is stored in bytes, the value of 25,000 is multiplied by 1,024.</source>
          <target state="translated">Так как значение свойства WorkingSet хранится в байтах, значение 25 000 умножается на 1024.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>The first command uses the script block format.</source>
          <target state="translated">Первая команда использует формат блока сценария.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>The second command uses the comparison statement format.</source>
          <target state="translated">Вторая команда использует формат оператора сравнения.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>The commands are equivalent and can be used interchangeably.</source>
          <target state="translated">Команды эквивалентны и взаимозаменяемы.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>-------------------------- EXAMPLE 4 --------------------------</source>
          <target state="translated">-------------------------- EXAMPLE 4 --------------------------</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>This command gets the processes that have a <bpt id="p1">**</bpt>ProcessName<ept id="p1">**</ept> property value that begins with the letter "p".</source>
          <target state="translated">Эта команда получает процессы, имеющие <bpt id="p1">**</bpt>ProcessName<ept id="p1">**</ept> значение свойства, которое начинается с буквы «p».</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>The match operator lets you use regular expression matches.</source>
          <target state="translated">Оператор "совпадает" позволяет использовать совпадения с регулярными выражениями.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>The first command uses the script block format.</source>
          <target state="translated">Первая команда использует формат блока сценария.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>The second command uses the comparison statement format.</source>
          <target state="translated">Вторая команда использует формат оператора сравнения.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>The commands are equivalent and can be used interchangeably.</source>
          <target state="translated">Команды эквивалентны и взаимозаменяемы.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>-------------------------- EXAMPLE 5 --------------------------</source>
          <target state="translated">-------------------------- EXAMPLE 5 --------------------------</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>This example shows how to use the new comparison statement  format of the <bpt id="p1">**</bpt>Where-Object<ept id="p1">**</ept> cmdlet.</source>
          <target state="translated">В этом примере показано, как использовать новый формат оператора сравнения из <bpt id="p1">**</bpt>Where-Object<ept id="p1">**</ept> командлета.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>The first command uses the comparison statement format.</source>
          <target state="translated">Вторая команда использует формат оператора сравнения.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>In this command, no aliases are used and all parameters include the parameter name.</source>
          <target state="translated">В этой команде не используются псевдонимы, и все параметры включают имя параметра.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>The second command is the more natural use of the comparison command format.</source>
          <target state="translated">Вторая команда является более естественным способом использованием формата команды сравнения.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>The "where" alias is substituted for the "Where-Object" cmdlet name and all optional parameter names are omitted.</source>
          <target state="translated">Псевдоним where заменяется именем командлета Where-Object, а все имена необязательных параметров опускаются.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>-------------------------- EXAMPLE 6 --------------------------</source>
          <target state="translated">-------------------------- EXAMPLE 6 --------------------------</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>This example shows how to write commands that return items that are true or false or have any value for a specified property.</source>
          <target state="translated">В этом примере показано, как написать команды, которые возвращают элементы, имеющие значения true или false или любые значения для указанного свойства.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>The example shows both the script block and comparison statement formats for the command.</source>
          <target state="translated">В этом примере показаны оба формата команды, блок сценария и оператор сравнения.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>-------------------------- EXAMPLE 7 --------------------------</source>
          <target state="translated">-------------------------- EXAMPLE 7 --------------------------</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>This example shows how to create a <bpt id="p1">**</bpt>Where-Object<ept id="p1">**</ept> command with multiple conditions.</source>
          <target state="translated">В этом примере показано, как создать <bpt id="p1">**</bpt>Where-Object<ept id="p1">**</ept> с несколькими условиями.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>This command gets non-core modules that support the Updatable Help feature.</source>
          <target state="translated">Эта команда получает вспомогательные модули, которые поддерживают функцию обновляемой справки.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>The command uses the <bpt id="p1">**</bpt>ListAvailable<ept id="p1">**</ept> parameter of the Get-Module cmdlet to get all modules on the computer.</source>
          <target state="translated">Команда использует <bpt id="p1">**</bpt>ListAvailable<ept id="p1">**</ept> командлета Get-Module для получения всех модулей на компьютере.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>A pipeline operator sends the modules to the <bpt id="p1">**</bpt>Where-Object<ept id="p1">**</ept> cmdlet, which gets modules whose names do not begin with "Microsoft" or "PS" and have  a value for the <bpt id="p2">**</bpt>HelpInfoURI<ept id="p2">**</ept> property, which tells Windows PowerShell where to find updated help files for the module.</source>
          <target state="translated">Оператор конвейера отправляет модули в <bpt id="p1">**</bpt>Where-Object<ept id="p1">**</ept> который получает модули, имена которых начинаются с «Microsoft» или «PS» и не имеет значения для <bpt id="p2">**</bpt>HelpInfoURI<ept id="p2">**</ept> свойство, которое сообщает Windows PowerShell, где можно найти обновленные файлы справки для модуля.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>The comparison statements are connected by the <bpt id="p1">**</bpt>-And<ept id="p1">**</ept> logical operator.</source>
          <target state="translated">Операторы сравнения соединяются с <bpt id="p1">**</bpt>- и<ept id="p1">**</ept> логический оператор.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>The example uses the script block command format.</source>
          <target state="translated">В примере используется формат команды блока сценария.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>Logical operators, such as -And and -Or, are valid only in script blocks.</source>
          <target state="translated">Логические операторы, такие как -And (И) и -Or (ИЛИ), допустимы только в блоках сценариев.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>You cannot use them in the comparison statement format of a Where-Object command.</source>
          <target state="translated">Их нельзя использовать в формате оператора сравнения команды Where-Object.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>For more information about Windows PowerShell logical operators, see about_Logical_Operators (http://go.microsoft.com/fwlink/?LinkID=113238).</source>
          <target state="translated">Дополнительные сведения о логических операторах Windows PowerShell см. в разделе about_Logical_Operators (http://go.microsoft.com/fwlink/?LinkID=113238).</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>For more information about the Updatable Help feature, see about_Updatable_Help (http://go.microsoft.com/fwlink/?LinkID=235801).</source>
          <target state="translated">Дополнительные сведения об обновляемой справке см. в разделе about_Updatable_Help (http://go.microsoft.com/fwlink/?LinkID=235801).</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>PARAMETERS</source>
          <target state="translated">ПАРАМЕТРЫ</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>-Contains</source>
          <target state="translated">— Содержит</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>Specifies the Contains operator, which gets objects when any item in the property value of the object is an exact match for the specified value.</source>
          <target state="translated">Задает оператор "содержит", который получает объекты, если любой элемент в значении свойства объекта точно соответствует указанному значению.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>For example:</source>
          <target state="translated">Например:</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>If the property value contains a single object, Windows PowerShell converts it to a collection of one object.</source>
          <target state="translated">Если значение свойства содержит один объект, Windows PowerShell преобразует его в коллекцию одного объекта.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>This parameter is introduced in Windows PowerShell 3.0.</source>
          <target state="translated">Этот параметр впервые появился в Windows PowerShell 3.0.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>-EQ</source>
          <target state="translated">-EQ</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>Specifies the equals operator, which gets objects when the property value is the same as the specified value.</source>
          <target state="translated">Задает оператор "равняется", который получает объекты, если значение свойства совпадает с указанным значением.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>This parameter is introduced in Windows PowerShell 3.0.</source>
          <target state="translated">Этот параметр впервые появился в Windows PowerShell 3.0.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>-FilterScript</source>
          <target state="translated">-FilterScript</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>Specifies the script block that is used to filter the objects.</source>
          <target state="translated">Задает блок сценария, который используется для фильтрации объектов.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>Enclose the script block in braces ( {} ).</source>
          <target state="translated">Заключите блок сценария в скобки ({}).</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>The parameter name (-FilterScript) is optional.</source>
          <target state="translated">Имя параметра (-FilterScript) является необязательным.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>-GE</source>
          <target state="translated">-GE</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>Specifies the Greater-than-or-equal operator, which gets objects when the property value is greater than or equal to the specified value.</source>
          <target state="translated">Задает оператор "больше или равно", который получает объекты, если значение свойства больше или равно указанному значению.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>This parameter is introduced in Windows PowerShell 3.0.</source>
          <target state="translated">Этот параметр впервые появился в Windows PowerShell 3.0.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>-GT</source>
          <target state="translated">-GT</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>Specifies the Greater-than operator, which gets objects when the property value is greater than the specified value.</source>
          <target state="translated">Задает оператор "больше чем", который получает объекты, если значение свойства больше указанного значения.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>This parameter is introduced in Windows PowerShell 3.0.</source>
          <target state="translated">Этот параметр впервые появился в Windows PowerShell 3.0.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>-In</source>
          <target state="translated">-В</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>Specifies the In operator, which gets objects when the property value matches any of the specified values.</source>
          <target state="translated">Задает оператор "в диапазоне", который получает объекты, если значение свойства совпадает с любым из указанных значений.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>For example: Get-Process | where -Property ProcessName -in -Value "Svchost", "TaskHost", "WsmProvHost"</source>
          <target state="translated">Например: Get-Process | WHERE - свойства ProcessName-в - значение «Svchost», «TaskHost», «WsmProvHost»</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>If the value of the <bpt id="p1">**</bpt>Value<ept id="p1">**</ept> parameter is a single object, Windows PowerShell converts it to a collection of one object.</source>
          <target state="translated">Если значение <bpt id="p1">**</bpt>значение<ept id="p1">**</ept> параметр представляет собой один объект, Windows PowerShell преобразует его в коллекцию одного объекта.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>If the property value of an object is an array, Windows PowerShell uses reference equality to determine a match.</source>
          <target state="translated">Если значение свойства объекта является массивом, Windows PowerShell использует равенство ссылок для определения соответствия.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Where-Object<ept id="p1">**</ept> returns the object only if the value of the <bpt id="p2">**</bpt>Property<ept id="p2">**</ept> parameter and any value of the <bpt id="p3">**</bpt>Value<ept id="p3">**</ept> parameter are the same instance of an object.</source>
          <target state="translated"><bpt id="p1">**</bpt>Where-Object<ept id="p1">**</ept> возвращает объект, только если значение <bpt id="p2">**</bpt>Свойства<ept id="p2">**</ept> и любое значение параметра <bpt id="p3">**</bpt>значение<ept id="p3">**</ept> параметр имеют один и тот же экземпляр объекта.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>This parameter is introduced in Windows PowerShell 3.0.</source>
          <target state="translated">Этот параметр впервые появился в Windows PowerShell 3.0.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>-InputObject</source>
          <target state="translated">-InputObject</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>Specifies the objects to be filtered.</source>
          <target state="translated">Задает объекты для фильтрации.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>You can also pipe the objects to <bpt id="p1">**</bpt>Where-Object<ept id="p1">**</ept>.</source>
          <target state="translated">Можно также передать объекты <bpt id="p1">**</bpt>Where-Object<ept id="p1">**</ept>.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>-Is</source>
          <target state="translated">— Это</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>Specifies the Is operator, which gets objects when the property value is an instance of the specified .NET Framework type.</source>
          <target state="translated">Задает оператор "является", который получает объекты, если значение свойства является экземпляром указанного типа .NET Framework.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>Enclose the type name in square brackets.</source>
          <target state="translated">Заключите имя типа в квадратные скобки.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>For example,</source>
          <target state="translated">Например,</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>This parameter is introduced in Windows PowerShell 3.0.</source>
          <target state="translated">Этот параметр впервые появился в Windows PowerShell 3.0.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>-IsNot</source>
          <target state="translated">-IsNot</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>Specifies the Is-Not operator, which gets objects when the property value is not an instance of the specified .NET Framework type.</source>
          <target state="translated">Задает оператор "не является", который получает объекты, если значение свойства не является экземпляром указанного типа .NET Framework.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>For example,</source>
          <target state="translated">Например,</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>This parameter is introduced in Windows PowerShell 3.0.</source>
          <target state="translated">Этот параметр впервые появился в Windows PowerShell 3.0.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>-LE</source>
          <target state="translated">-LE</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>Specifies the Less-than-or-equals operator.</source>
          <target state="translated">Задает оператор "меньше или равно".</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>This parameter is introduced in Windows PowerShell 3.0.</source>
          <target state="translated">Этот параметр впервые появился в Windows PowerShell 3.0.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>-LT</source>
          <target state="translated">-LT</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>Specifies the Less-than operator, which gets objects when the property value is less than the specified value.</source>
          <target state="translated">Задает оператор "меньше чем", который получает объекты, если значение свойства меньше указанного значения.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>This parameter is introduced in Windows PowerShell 3.0.</source>
          <target state="translated">Этот параметр впервые появился в Windows PowerShell 3.0.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>-Like</source>
          <target state="translated">-Как</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>Specifies the Like operator, which gets objects when the property value matches a value that includes wildcard characters.</source>
          <target state="translated">Задает оператор "подобен", который получает объекты, если значение свойства совпадает со значением, которое содержит подстановочные знаки.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>For example:</source>
          <target state="translated">Например:</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source>This parameter is introduced in Windows PowerShell 3.0.</source>
          <target state="translated">Этот параметр впервые появился в Windows PowerShell 3.0.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source>-Match</source>
          <target state="translated">-Match</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source>Specifies the Match operator, which gets objects when the property value matches the specified regular expression.</source>
          <target state="translated">Задает оператор "совпадает", который получает объекты, если значение свойства совпадает с указанным регулярным выражением.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source>When the input is scalar, the matched value is saved in $Matches automatic variable.</source>
          <target state="translated">Если входные данные являются скалярными, совпадающее значение сохраняется в автоматической переменной $Matches.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source>For example:</source>
          <target state="translated">Например:</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source>This parameter is introduced in Windows PowerShell 3.0.</source>
          <target state="translated">Этот параметр впервые появился в Windows PowerShell 3.0.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve">
          <source>-NE</source>
          <target state="translated">-NE</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source>Specifies the Not-equals operator, which gets objects when the property value is different than the specified value.</source>
          <target state="translated">Задает оператор "не равно", который получает объекты, если значение свойства отличается от указанного значения.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source>This parameter is introduced in Windows PowerShell 3.0.</source>
          <target state="translated">Этот параметр впервые появился в Windows PowerShell 3.0.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source>-NotContains</source>
          <target state="translated">Оператор-не содержит</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve">
          <source>Specifies the  Not-Contains operator, which gets objects when none of the items in the  property value is an exact match for the specified value.</source>
          <target state="translated">Задает оператор "не содержит", который получает объекты, если ни один из элементов в значении свойства не является точным соответствием для указанного значения.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve">
          <source>For example:</source>
          <target state="translated">Например:</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve">
          <source>"NotContains" refers to a collection of values and is true when the collection does not contain any items that are an exact match for the specified value.</source>
          <target state="translated">Оператор "не содержит" относится к коллекции значений и справедлив, если коллекция не содержит элементы, являющиеся точным соответствием для указанного значения.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve">
          <source>If the input is a single object, Windows PowerShell converts it to a collection of one object.</source>
          <target state="translated">Если ввод представляет один объект, Windows PowerShell преобразует его в коллекцию одного объекта.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve">
          <source>This parameter is introduced in Windows PowerShell 3.0.</source>
          <target state="translated">Этот параметр впервые появился в Windows PowerShell 3.0.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve">
          <source>-NotIn</source>
          <target state="translated">-NotIn</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve">
          <source>Specifies the  Not-In operator, which gets objects when the property value is not an exact match for any of the specified values.</source>
          <target state="translated">Задает оператор "не в диапазоне", который получает объекты, если значение свойства не является точным соответствием для одного из указанных значений.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve">
          <source>For example:</source>
          <target state="translated">Например:</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve">
          <source>If the value of the <bpt id="p1">**</bpt>Value<ept id="p1">**</ept> parameter is a single object, Windows PowerShell converts it to a collection of one object.</source>
          <target state="translated">Если значение <bpt id="p1">**</bpt>значение<ept id="p1">**</ept> параметр представляет собой один объект, Windows PowerShell преобразует его в коллекцию одного объекта.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve">
          <source>If the property value of an object is an array, Windows PowerShell uses reference equality to determine a match.</source>
          <target state="translated">Если значение свойства объекта является массивом, Windows PowerShell использует равенство ссылок для определения соответствия.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Where-Object<ept id="p1">**</ept> returns the object only if the value of the <bpt id="p2">**</bpt>Property<ept id="p2">**</ept> parameter and any value of the <bpt id="p3">**</bpt>Value<ept id="p3">**</ept> parameter are not the same instance of an object.</source>
          <target state="translated"><bpt id="p1">**</bpt>Where-Object<ept id="p1">**</ept> возвращает объект, только если значение <bpt id="p2">**</bpt>Свойства<ept id="p2">**</ept> и любое значение параметра <bpt id="p3">**</bpt>значение<ept id="p3">**</ept> параметра не тот же экземпляр объекта.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve">
          <source>This parameter is introduced in Windows PowerShell 3.0.</source>
          <target state="translated">Этот параметр впервые появился в Windows PowerShell 3.0.</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve">
          <source>-NotLike</source>
          <target state="translated">-NotLike</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve">
          <source>Specifies the Not-Like operator, which gets objects when the property value does not match a value that includes wildcard characters.</source>
          <target state="translated">Задает оператор "не подобен", который получает объекты, если значение свойства не совпадает со значением, которое содержит подстановочные знаки.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve">
          <source>For example:</source>
          <target state="translated">Например:</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve">
          <source>This parameter is introduced in Windows PowerShell 3.0.</source>
          <target state="translated">Этот параметр впервые появился в Windows PowerShell 3.0.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve">
          <source>-NotMatch</source>
          <target state="translated">-NotMatch</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve">
          <source>Specifies the not-match operator, which gets objects when the property value does not match the specified regular expression.</source>
          <target state="translated">Задает оператор "не совпадает", который получает объекты, если значение свойства не совпадает с указанным регулярным выражением.</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve">
          <source>When the input is scalar, the matched value is saved in $Matches automatic variable.</source>
          <target state="translated">Если входные данные являются скалярными, совпадающее значение сохраняется в автоматической переменной $Matches.</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve">
          <source>For example:</source>
          <target state="translated">Например:</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve">
          <source>This parameter is introduced in Windows PowerShell 3.0.</source>
          <target state="translated">Этот параметр впервые появился в Windows PowerShell 3.0.</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve">
          <source>-Property</source>
          <target state="translated">-Свойство</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve">
          <source>Specifies the name of an object property.</source>
          <target state="translated">Задает имя свойства объекта.</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve">
          <source>The parameter name (-Property) is optional.</source>
          <target state="translated">Имя параметра (-Property) является необязательным.</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve">
          <source>This parameter is introduced in Windows PowerShell 3.0.</source>
          <target state="translated">Этот параметр впервые появился в Windows PowerShell 3.0.</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve">
          <source>-Value</source>
          <target state="translated">-Значение</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve">
          <source>Specifies a property value.</source>
          <target state="translated">Задает значение свойства.</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve">
          <source>The parameter name (-Value) is optional.</source>
          <target state="translated">Имя параметра (-Value) является необязательным.</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve">
          <source>This parameter is introduced in Windows PowerShell 3.0.</source>
          <target state="translated">Этот параметр впервые появился в Windows PowerShell 3.0.</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve">
          <source>-CContains</source>
          <target state="translated">-Содержит</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve">
          <source>Specifies the case-sensitive Contains operator, which gets objects from a collection when the property value of the object is an exact match for the specified value</source>
          <target state="translated">Задает учитывающий регистр оператор "содержит", который получает объекты, если значение свойства объекта точно соответствует указанному значению.</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve">
          <source>For example:</source>
          <target state="translated">Например:</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve">
          <source>"Contains" refers to a collection of values and is true when the collection contains an item that is an exact match for the specified value.</source>
          <target state="translated">Оператор "содержит" относится к коллекции значений и справедлив, если коллекция содержит элемент, являющийся точным соответствием для указанного значения.</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve">
          <source>If the input is a single object, Windows PowerShell converts it to a collection of one object.</source>
          <target state="translated">Если ввод представляет один объект, Windows PowerShell преобразует его в коллекцию одного объекта.</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve">
          <source>This parameter is introduced in Windows PowerShell 3.0.</source>
          <target state="translated">Этот параметр впервые появился в Windows PowerShell 3.0.</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve">
          <source>-CEQ</source>
          <target state="translated">-CEQ</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve">
          <source>Specifies the case-sensitive Equals operator, which gets objects when the property value is the same as the specified value.</source>
          <target state="translated">Задает учитывающий регистр оператор "равняется", который получает объекты, если значение свойства совпадает с указанным значением.</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve">
          <source>This parameter is introduced in Windows PowerShell 3.0.</source>
          <target state="translated">Этот параметр впервые появился в Windows PowerShell 3.0.</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve">
          <source>-CGE</source>
          <target state="translated">-CGE</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve">
          <source>Specifies the case-sensitive Greater-than-or-equal value, which gets objects when the property value is greater than or equal to the specified value.</source>
          <target state="translated">Задает учитывающий регистр оператор "больше или равно", который получает объекты, если значение свойства больше или равно указанному значению.</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve">
          <source>This parameter is introduced in Windows PowerShell 3.0.</source>
          <target state="translated">Этот параметр впервые появился в Windows PowerShell 3.0.</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve">
          <source>-CGT</source>
          <target state="translated">-CGT</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve">
          <source>Specifies the case-sensitive Greater-than property, which gets objects when the property value is greater than the specified value.</source>
          <target state="translated">Задает учитывающий регистр оператор "больше чем", который получает объекты, если значение свойства больше указанного значения.</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve">
          <source>This parameter is introduced in Windows PowerShell 3.0.</source>
          <target state="translated">Этот параметр впервые появился в Windows PowerShell 3.0.</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve">
          <source>-CIn</source>
          <target state="translated">-CIn</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve">
          <source>Specifies the case-sensitive In operator, which gets objects when the property value includes the specified value.</source>
          <target state="translated">Задает учитывающий регистр оператор "в диапазоне", который получает объекты, если значение свойства включает указанное значение.</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve">
          <source>For example: Get-Process | where -Value "svchost" -CIn ProcessName</source>
          <target state="translated">Например: Get-Process | WHERE - значение «svchost» - CIn ProcessName</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve">
          <source>The In operator is much like the Contains operator, except that the property and value positions are reversed.</source>
          <target state="translated">Оператор "в диапазоне" во многом похож на оператор "содержит" за исключением того, что положения свойства и значения обратны.</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve">
          <source>For example, the following statements are both true.</source>
          <target state="translated">Например обе следующие инструкции верны.</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve">
          <source>"abc", "def" -CContains "abc"</source>
          <target state="translated">"abc", "def" -CContains "abc"</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve">
          <source>"abc" -CIn "abc", "def"</source>
          <target state="translated">"abc" -CIn "abc", "def"</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve">
          <source>This parameter is introduced in Windows PowerShell 3.0.</source>
          <target state="translated">Этот параметр впервые появился в Windows PowerShell 3.0.</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve">
          <source>-CLE</source>
          <target state="translated">-CLE</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve">
          <source>Specifies the case-sensitive Less-than-or-equal operator, which gets objects when the property value is less-than or equal to the specified value.</source>
          <target state="translated">Задает учитывающий регистр оператор "меньше или равно", который получает объекты, если значение свойства меньше или равно указанному значению.</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve">
          <source>This parameter is introduced in Windows PowerShell 3.0.</source>
          <target state="translated">Этот параметр впервые появился в Windows PowerShell 3.0.</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve">
          <source>-CLT</source>
          <target state="translated">СРЕДСТВО РЕГИСТРАЦИИ ЗВОНКОВ-</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve">
          <source>Specifies the case-sensitive Less-than operator, which gets objects when the property value is less-than the specified value.</source>
          <target state="translated">Задает учитывающий регистр оператор "меньше чем", который получает объекты, если значение свойства меньше указанного значения.</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve">
          <source>This parameter is introduced in Windows PowerShell 3.0.</source>
          <target state="translated">Этот параметр впервые появился в Windows PowerShell 3.0.</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve">
          <source>-CLike</source>
          <target state="translated">-CLike</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve">
          <source>Specifies the case-sensitive Like operator, which gets objects when the property value matches a value that includes wildcard characters.</source>
          <target state="translated">Задает учитывающий регистр оператор "подобен", который получает объекты, если значение свойства совпадает со значением, которое содержит подстановочные знаки.</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve">
          <source>For example:</source>
          <target state="translated">Например:</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve">
          <source>This parameter is introduced in Windows PowerShell 3.0.</source>
          <target state="translated">Этот параметр впервые появился в Windows PowerShell 3.0.</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve">
          <source>-CMatch</source>
          <target state="translated">-CMatch</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve">
          <source>Specifies the case-sensitive Match operator, which gets objects when the property value matches the specified regular expression.</source>
          <target state="translated">Задает учитывающий регистр оператор "совпадает", который получает объекты, если значение свойства совпадает с указанным регулярным выражением.</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve">
          <source>When the input is scalar, the matched value is saved in $Matches automatic variable.</source>
          <target state="translated">Если входные данные являются скалярными, совпадающее значение сохраняется в автоматической переменной $Matches.</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve">
          <source>For example:</source>
          <target state="translated">Например:</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve">
          <source>This parameter is introduced in Windows PowerShell 3.0.</source>
          <target state="translated">Этот параметр впервые появился в Windows PowerShell 3.0.</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve">
          <source>-CNE</source>
          <target state="translated">-CNE</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve">
          <source>Specifies the case-sensitive Not-Equals operator, which gets objects when the property value is different than the specified value.</source>
          <target state="translated">Задает учитывающий регистр оператор "не равно", который получает объекты, если значение свойства отличается от указанного значения.</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve">
          <source>This parameter is introduced in Windows PowerShell 3.0.</source>
          <target state="translated">Этот параметр впервые появился в Windows PowerShell 3.0.</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve">
          <source>-CNotContains</source>
          <target state="translated">-Справедлив</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve">
          <source>Specifies the case-sensitive Not-Contains operator, which gets objects when the property value of the object is not an exact match for the specified value.</source>
          <target state="translated">Задает учитывающий регистр оператор "не содержит", который получает объекты, если значение свойства объекта не является точным соответствием для указанного значения.</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve">
          <source>For example:</source>
          <target state="translated">Например:</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve">
          <source>"NotContains" and "CNotContains refer to a collection of values and are true when the collection does not contains any items that are an exact match for the specified value.</source>
          <target state="translated">Оператор "не содержит" (с учетом регистра и без) относится к коллекции значений и справедлив, если коллекция не содержит элементы, являющиеся точным соответствием для указанного значения.</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve">
          <source>If the input is a single object, Windows PowerShell converts it to a collection of one object.</source>
          <target state="translated">Если ввод представляет один объект, Windows PowerShell преобразует его в коллекцию одного объекта.</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve">
          <source>This parameter is introduced in Windows PowerShell 3.0.</source>
          <target state="translated">Этот параметр впервые появился в Windows PowerShell 3.0.</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve">
          <source>-CNotIn</source>
          <target state="translated">-CNotIn</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve">
          <source>Specifies the case-sensitive Not-In operator, which gets objects when the property value is not an exact match for the specified value.</source>
          <target state="translated">Задает учитывающий регистр оператор "не в диапазоне", который получает объекты, если значение свойства не является точным соответствием для указанного значения.</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve">
          <source>For example:</source>
          <target state="translated">Например:</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve">
          <source>The Not-In  and CNot-In operators are much like the Not-Contains and CNot-Contains operators, except that the property and value positions are reversed.</source>
          <target state="translated">Оператор "не в диапазоне" (с учетом регистра и без) во многом похож на оператор "не содержит" (с учетом регистра и без) за исключением того, что положения свойства и значения обратны.</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve">
          <source>For example, the following statements are true.</source>
          <target state="translated">Например, обе следующие инструкции верны.</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve">
          <source>"abc", "def" -CNotContains "Abc"</source>
          <target state="translated">"abc", "def" -CNotContains "Abc"</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve">
          <source>"abc" -CNotIn "Abc", "def"</source>
          <target state="translated">"abc" -CNotIn "Abc", "def"</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve">
          <source>-CNotLike</source>
          <target state="translated">-CNotLike</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve">
          <source>Specifies the case-sensitive Not-Like operator, which gets objects when the property value does not match a value that includes wildcard characters.</source>
          <target state="translated">Задает учитывающий регистр оператор "не подобен", который получает объекты, если значение свойства не совпадает со значением, которое содержит подстановочные знаки.</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve">
          <source>For example:</source>
          <target state="translated">Например:</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve">
          <source>This parameter is introduced in Windows PowerShell 3.0.</source>
          <target state="translated">Этот параметр впервые появился в Windows PowerShell 3.0.</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve">
          <source>-CNotMatch</source>
          <target state="translated">-CNotMatch</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve">
          <source>Specifies the case-sensitive Not-match operator, which gets objects when the property value does not match the specified regular expression.</source>
          <target state="translated">Задает учитывающий регистр оператор "не совпадает", который получает объекты, если значение свойства не совпадает с указанным регулярным выражением.</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve">
          <source>When the input is scalar, the matched value is saved in $Matches automatic variable.</source>
          <target state="translated">Если входные данные являются скалярными, совпадающее значение сохраняется в автоматической переменной $Matches.</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve">
          <source>For example:</source>
          <target state="translated">Например:</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve">
          <source>This parameter is introduced in Windows PowerShell 3.0.</source>
          <target state="translated">Этот параметр впервые появился в Windows PowerShell 3.0.</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve">
          <source>CommonParameters</source>
          <target state="translated">CommonParameters</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve">
          <source>This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutVariable, -OutBuffer, -PipelineVariable, -Verbose, -WarningAction, and -WarningVariable.</source>
          <target state="translated">Этот командлет поддерживает общие параметры:-Debug, - ErrorAction, - ErrorVariable, - InformationAction, - InformationVariable, - OutVariable,-OutBuffer, - PipelineVariable, - Verbose, - WarningAction и - WarningVariable.</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve">
          <source>For more information, see about_CommonParameters (http://go.microsoft.com/fwlink/?LinkID=113216).</source>
          <target state="translated">Дополнительные сведения см. в разделе about_CommonParameters (http://go.microsoft.com/fwlink/?LinkID=113216).</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve">
          <source>INPUTS</source>
          <target state="translated">ВХОДНЫЕ ДАННЫЕ</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve">
          <source>System.Management.Automation.PSObject</source>
          <target state="translated">System.Management.Automation.PSObject</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve">
          <source>You can pipe the objects to be filtered to Where-Object.</source>
          <target state="translated">В командлет Where-Object можно передать объекты для фильтрации.</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve">
          <source>OUTPUTS</source>
          <target state="translated">ВЫХОДНЫЕ ДАННЫЕ</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve">
          <source>Object</source>
          <target state="translated">Объект</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve">
          <source>Where-Object returns selected items from the input object set.</source>
          <target state="translated">Where-Object возвращает выбранные элементы из входного набора объектов.</target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve">
          <source>NOTES</source>
          <target state="translated">ПРИМЕЧАНИЯ</target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve">
          <source>RELATED LINKS</source>
          <target state="translated">СВЯЗАННЫЕ ССЫЛКИ</target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve">
          <source>Compare-Object</source>
          <target state="translated">Compare-Object</target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve">
          <source>ForEach-Object</source>
          <target state="translated">ForEach-Object</target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve">
          <source>Group-Object</source>
          <target state="translated">Group-Object</target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve">
          <source>Measure-Object</source>
          <target state="translated">Measure-Object</target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve">
          <source>New-Object</source>
          <target state="translated">Новый объект</target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve">
          <source>Select-Object</source>
          <target state="translated">Select-Object</target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve">
          <source>Sort-Object</source>
          <target state="translated">Sort-Object</target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve">
          <source>Tee-Object</source>
          <target state="translated">Tee-Object</target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve">
          <source>Where-Object</source>
          <target state="translated">Where-Object</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>