<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ru-ru">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-1c394fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fb00f872a8d33a2c0613a45e378338b4a0ba88f5</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">reference\5.0\Microsoft.PowerShell.Utility\Get-FileHash.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions" />
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">a2e40b64b9b6cc9fa463ad9f5a4c4e544c67febd</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">c5c1852ed0b554de42f88167f3ac519e97781b83</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>powershell, cmdlet</source>
          <target state="translated">PowerShell, командлет</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Get-FileHash</source>
          <target state="translated">Get-FileHash</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Get-FileHash</source>
          <target state="translated">Get-FileHash</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>SYNOPSIS</source>
          <target state="translated">КРАТКИЙ ОБЗОР</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Computes the hash value for a file by using a specified hash algorithm.</source>
          <target state="translated">Вычисляет хэш-значение для файла с помощью указанного хэш-алгоритма.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>SYNTAX</source>
          <target state="translated">СИНТАКСИС</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Path (Default)</source>
          <target state="translated">Путь (по умолчанию)</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>LiteralPath</source>
          <target state="translated">LiteralPath</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Stream</source>
          <target state="translated">Поток</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>DESCRIPTION</source>
          <target state="translated">ОПИСАНИЕ</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>Get-FileHash<ept id="p1">**</ept> cmdlet computes the hash value for a file by using a specified hash algorithm.</source>
          <target state="translated"> <bpt id="p1">**</bpt>Get-FileHash<ept id="p1">**</ept> командлет вычисляет хэш-значение для файла с помощью указанного хэш-алгоритма.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>A hash value is a unique value that corresponds to the content of the file.</source>
          <target state="translated">Хэш-значение представляет собой уникальное значение, соответствующее содержимому файла.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Rather than identifying the contents of a file by its file name, extension, or other designation, a hash assigns a unique value to the contents of a file.</source>
          <target state="translated">Вместо определения содержимого файла по его имени, расширению или иному обозначению хэш назначает содержимому файла уникальное значение.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>File names and extensions can be changed without altering the content of the file, and without changing the hash value.</source>
          <target state="translated">Имена и расширения файлов могут изменяться без изменения содержимого файла и без изменения хэш-значения.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Similarly, the file's content can be changed without changing the name or extension.</source>
          <target state="translated">Аналогичным образом можно изменить содержимое файла без изменения его имени или расширения.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>However, changing even a single character in the contents of a file changes the hash value of the file.</source>
          <target state="translated">Однако при изменении даже одного символа в содержимом файла хэш-значение этого файла тоже изменяется.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>The purpose of hash values is to provide a cryptographically-secure way to verify that the contents of a file have not been changed.</source>
          <target state="translated">Хэш-значения позволяет криптографически защищенным образом убедиться, что содержимое файла не было изменено.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>While some hash algorithms, including MD5 and SHA1, are no longer considered secure against attack, the goal of a secure hash algorithm is to render it impossible to change the contents of a file-either by accident, or by malicious or unauthorized attempt-and maintain the same hash value.</source>
          <target state="translated">Хотя некоторые хэш-алгоритмы, включая MD5 и SHA1, больше не считаются защищенными от атак, алгоритм SHA призвано для подготовки к просмотру невозможно изменить содержимое либо для файлов, случайно или злонамеренно- и поддерживать то же значение хэша.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>You can also use hash values to determine if two different files have exactly the same content.</source>
          <target state="translated">С помощью хэш-значений также можно определить, имеют ли два разных файла эквивалентное содержимое.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>If the hash values of two files are identical, the contents of the files are also identical.</source>
          <target state="translated">Если хэш-значения двух файлов идентичны, содержимое этих файлов также идентично.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>By default, the <bpt id="p1">**</bpt>Get-FileHash<ept id="p1">**</ept> cmdlet uses the SHA256 algorithm, although any hash algorithm that is supported by the target operating system can be used.</source>
          <target state="translated">По умолчанию <bpt id="p1">**</bpt>Get-FileHash<ept id="p1">**</ept> командлет использует алгоритм SHA256, хотя можно использовать любой хэш-алгоритм, поддерживаемый целевой операционной системы.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>EXAMPLES</source>
          <target state="translated">ПРИМЕРЫ</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Example 1: Compute the hash value for a PowerShell.exe file</source>
          <target state="translated">Пример 1: Вычислить значение хэша для файла PowerShell.exe</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>This command uses the <bpt id="p1">**</bpt>Get-FileHash<ept id="p1">**</ept> cmdlet to compute the hash value for the Powershell.exe file.</source>
          <target state="translated">Эта команда использует <bpt id="p1">**</bpt>Get-FileHash<ept id="p1">**</ept> командлет, чтобы вычислить значение хэша для файла Powershell.exe.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>The hash algorithm used is the default, SHA256.</source>
          <target state="translated">Используется хэш-алгоритм по умолчанию — SHA256.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>The output is piped to the Format-List cmdlet to format the output as a list.</source>
          <target state="translated">Результат передается по конвейеру в командлет Format-List для форматирования в виде списка.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Example 2: Compute the has value for an ISO file</source>
          <target state="translated">Пример 2: Вычисления имеет значение для ISO-файла</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>This command uses the <bpt id="p1">**</bpt>Get-FileHash<ept id="p1">**</ept> cmdlet and the SHA384 algorithm to compute the hash value for an ISO file that an administrator has downloaded from the Internet.</source>
          <target state="translated">Эта команда использует <bpt id="p1">**</bpt>Get-FileHash<ept id="p1">**</ept> командлета и алгоритм SHA384 для вычисления хэш-код значения для ISO-файл, который администратор загрузил из Интернета.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>The output is piped to the Format-List cmdlet to format the output as a list.</source>
          <target state="translated">Результат передается по конвейеру в командлет Format-List для форматирования в виде списка.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>PARAMETERS</source>
          <target state="translated">ПАРАМЕТРЫ</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>-Algorithm</source>
          <target state="translated">-Алгоритм</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Specifies the cryptographic hash function to use for computing the hash value of the contents of the specified file.</source>
          <target state="translated">Указывает криптографическую хэш-функцию для вычисления хэш-значения по содержимому указанного файла.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>A cryptographic hash function includes the property that it is not possible to find two distinct inputs that generate the same hash values.</source>
          <target state="translated">Криптографическая хэш-функция обладает таким свойством, что невозможно найти два различных набора входных данных, дающих одинаковые хэш-значения.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Hash functions are commonly used with digital signatures and for data integrity.</source>
          <target state="translated">Хэш-функции обычно используются с цифровыми подписями и для обеспечения целостности данных.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>The acceptable values for this parameter are:</source>
          <target state="translated">Ниже указаны допустимые значения этого параметра.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>SHA1</source>
          <target state="translated">SHA1</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>SHA256</source>
          <target state="translated">SHA256</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>SHA384</source>
          <target state="translated">SHA384</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>SHA512</source>
          <target state="translated">SHA512</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>MACTripleDES</source>
          <target state="translated">MACTripleDES</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>MD5</source>
          <target state="translated">MD5</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>RIPEMD160</source>
          <target state="translated">RIPEMD160</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>If no value is specified, or if the parameter is omitted, the default value is SHA256.</source>
          <target state="translated">Если значение не указано или параметр пропущен, используется значение по умолчанию — SHA256.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>For security reasons, MD5 and SHA1, which are no longer considered secure, should only be used for simple change validation, and should not be used to generate hash values for files that require protection from attack or tampering.</source>
          <target state="translated">По соображениям безопасности алгоритмы MD5 и SHA1, которые больше не считаются безопасными, следует использовать только для проверки на наличие изменений и не следует применять для создания хэш-значений файлов, которые требуют защиты от атак или незаконного изменения.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>-InputStream</source>
          <target state="translated">-InputStream</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Specifies the input stream.</source>
          <target state="translated">Указывает входной поток.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>-LiteralPath</source>
          <target state="translated">-LiteralPath</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Specifies the path to a file as an array.</source>
          <target state="translated">Указывает путь к файлу как массив.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Unlike the <bpt id="p1">*</bpt>Path<ept id="p1">*</ept> parameter, the value of the <bpt id="p2">*</bpt>LiteralPath<ept id="p2">*</ept> parameter is used exactly as it is typed.</source>
          <target state="translated">В отличие от <bpt id="p1">*</bpt>путь<ept id="p1">*</ept> параметра, значение <bpt id="p2">*</bpt>LiteralPath<ept id="p2">*</ept> параметр используется точно так, как оно указано.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>No characters are interpreted as wildcard characters.</source>
          <target state="translated">Никакие символы не распознаются как подстановочные знаки.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>If the path includes escape characters, enclose the path in single quotation marks.</source>
          <target state="translated">Если путь содержит escape-символы, заключите его в одинарные кавычки.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Single quotation marks instruct Windows PowerShell not to interpret characters as escape sequences.</source>
          <target state="translated">Одинарные кавычки указывают Windows PowerShell на то, что не следует распознавать символы как escape-последовательности.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>-Path</source>
          <target state="translated">-Path</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Specifies the path to one or more files as an array.</source>
          <target state="translated">Указывает путь для одного или нескольких файлов как массив.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Wildcard characters are permitted.</source>
          <target state="translated">Можно использовать подстановочные знаки.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>CommonParameters</source>
          <target state="translated">CommonParameters</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutVariable, -OutBuffer, -PipelineVariable, -Verbose, -WarningAction, and -WarningVariable.</source>
          <target state="translated">Этот командлет поддерживает общие параметры:-Debug, - ErrorAction, - ErrorVariable, - InformationAction, - InformationVariable, - OutVariable,-OutBuffer, - PipelineVariable, - Verbose, - WarningAction и - WarningVariable.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>For more information, see about_CommonParameters (http://go.microsoft.com/fwlink/?LinkID=113216).</source>
          <target state="translated">Дополнительные сведения см. в разделе about_CommonParameters (http://go.microsoft.com/fwlink/?LinkID=113216).</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>INPUTS</source>
          <target state="translated">ВХОДНЫЕ ДАННЫЕ</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>System.String</source>
          <target state="translated">System.String</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>You can pipe a string to the <bpt id="p1">**</bpt>Get-FileHash<ept id="p1">**</ept> cmdlet that contains a path to one or more files.</source>
          <target state="translated">Можно передать строку <bpt id="p1">**</bpt>Get-FileHash<ept id="p1">**</ept> командлет, который содержит путь для одного или нескольких файлов.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>OUTPUTS</source>
          <target state="translated">ВЫХОДНЫЕ ДАННЫЕ</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>Microsoft.Powershell.Utility.FileHash</source>
          <target state="translated">Microsoft.Powershell.Utility.FileHash</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Get-FileHash<ept id="p1">**</ept> returns an object that represents the path to the specified file, the value of the computed hash, and the algorithm used to compute the hash.</source>
          <target state="translated"><bpt id="p1">**</bpt>Get-FileHash<ept id="p1">**</ept> возвращает объект, представляющий путь к указанному файлу, значение вычисляемого хэша и алгоритм, используемый для вычисления хэша.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>NOTES</source>
          <target state="translated">ПРИМЕЧАНИЯ</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>RELATED LINKS</source>
          <target state="translated">СВЯЗАННЫЕ ССЫЛКИ</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>Format-List</source>
          <target state="translated">Format-List</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>