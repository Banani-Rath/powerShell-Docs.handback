<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-cn">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-1c394fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d25c382440003643d3ceba05938eb71fc6c173e0</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">reference\4.0\Microsoft.PowerShell.Core\About\about_Throw.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions" />
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">e14dc9df9ac40943baefa3ebcd51ac21fa469acd</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">4ed9d03e93b0ebb02cae207fb1c5c0e4c03c702a</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>about_Throw</source>
          <target state="translated">about_Throw</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>powershell, cmdlet</source>
          <target state="translated">powershell cmdlet</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>About Throw</source>
          <target state="translated">关于 Throw</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>about_Throw</source>
          <target state="translated">about_Throw</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>TOPIC</source>
          <target state="translated">TOPIC</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>about_Throw</source>
          <target state="translated">about_Throw</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>SHORT DESCRIPTION</source>
          <target state="translated">简短说明</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Describes the Throw keyword, which generates a terminating error.</source>
          <target state="translated">描述 Throw 关键字，它将生成终止错误。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>LONG DESCRIPTION</source>
          <target state="translated">详细说明</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The Throw keyword causes a terminating error.</source>
          <target state="translated">Throw 关键字会导致终止错误。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>You can use the Throw keyword to stop the processing of a command, function, or script.</source>
          <target state="translated">Throw 关键字可用于停止处理命令、 函数或脚本。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>For example, you can use the Throw keyword in the script block of an If statement to respond to a condition or in the Catch block of a Try-Catch-Finally statement.</source>
          <target state="translated">例如，If 的脚本块中使用 Throw 关键字语句，以响应为条件或在 Catch 块的 Try – Catch – Finally 语句中。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>You can also use the Throw keyword in a parameter declaration to make a function parameter mandatory.</source>
          <target state="translated">您还可以在参数声明中使用 Throw 关键字使函数参数为强制性。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>The Throw keyword can throw any object, such as a user message string or the object that caused the error.</source>
          <target state="translated">Throw 关键字可能会引发任何对象，如用户的消息字符串或导致了错误的对象。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>SYNTAX</source>
          <target state="translated">语法</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>The syntax of the Throw keyword is as follows:</source>
          <target state="translated">Throw 关键字的语法如下所示︰</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>throw [<ph id="ph1">&lt;expression&gt;</ph>]</source>
          <target state="translated">引发 [<ph id="ph1">&lt;expression&gt;</ph>]</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>The expression in the Throw syntax is optional.</source>
          <target state="translated">中的 Throw 语法的表达式是可选的。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>When the Throw statement does not appear in a Catch block, and it does not include an expression, it generates a ScriptHalted error.</source>
          <target state="translated">当 Throw 语句未出现在 Catch 块中，并不包括一个表达式时，它会生成 ScriptHalted 错误。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>C:\PS&gt; throw</source>
          <target state="translated">C:\PS &gt; 引发</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>ScriptHalted At line:1 char:6</source>
          <target state="translated">ScriptHalted 在行︰ 1 char: 6</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>throw &lt;&lt;&lt;&lt;</source>
          <target state="translated">引发 &lt;&lt;&lt;&lt;</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>CategoryInfo          : OperationStopped: (:) [], RuntimeException</source>
          <target state="translated">CategoryInfo: OperationStopped: （:）[] RuntimeException</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>FullyQualifiedErrorId : ScriptHalted</source>
          <target state="translated">FullyQualifiedErrorId: ScriptHalted</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>If the Throw keyword is used in a Catch block without an expression, it throws the current RuntimeException again.</source>
          <target state="translated">如果不带表达式的 Catch 块中使用 Throw 关键字，它将再次引发当前 RuntimeException。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>For more information, see about_Try_Catch_Finally.</source>
          <target state="translated">有关详细信息，请参阅 about_Try_Catch_Finally。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>THROWING A STRING</source>
          <target state="translated">引发一个字符串，</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>The optional expression in a Throw statement can be a string, as shown in the following example:</source>
          <target state="translated">Throw 语句中的可选表达式可以是一个字符串，如下面的示例中所示︰</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>C:\PS&gt; throw "This is an error."</source>
          <target state="translated">C:\PS &gt; 引发"这是一个错误"。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>This is an error.</source>
          <target state="translated">这是一个错误。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>At line:1 char:6</source>
          <target state="translated">在行︰ 1 char: 6</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>throw &lt;&lt;&lt;&lt;  "This is an error."</source>
          <target state="translated">引发 &lt;&lt;&lt;&lt;"这是一个错误"。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>CategoryInfo          : OperationStopped: (This is an error.:String) [], RuntimeException</source>
          <target state="translated">CategoryInfo: OperationStopped: （这是一个错误。: 字符串） []，RuntimeException</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>FullyQualifiedErrorId : This is an error.</source>
          <target state="translated">FullyQualifiedErrorId︰ 这是一个错误。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>THROWING OTHER OBJECTS</source>
          <target state="translated">引发的其他对象</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>The expression can also be an object that throws the object that represents the PowerShell process, as shown in the following example:</source>
          <target state="translated">表达式还可以将一个对象，将引发该对象表示的 PowerShell 进程，如下面的示例中所示︰</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>C:\PS&gt; throw (get-process PowerShell)</source>
          <target state="translated">C:\PS &gt; 引发 (获取进程 PowerShell)</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>System.Diagnostics.Process (PowerShell) At line:1 char:6</source>
          <target state="translated">在行︰ 1 char: 6 System.Diagnostics.Process (PowerShell)</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>throw &lt;&lt;&lt;&lt;  (get-process PowerShell)</source>
          <target state="translated">引发 &lt;&lt;&lt;&lt; (获取进程 PowerShell)</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>CategoryInfo          : OperationStopped: (System.Diagnostics.Process (PowerShell):Process) [], RuntimeException</source>
          <target state="translated">CategoryInfo: OperationStopped: (System.Diagnostics.Process (PowerShell): 进程) []，RuntimeException</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>FullyQualifiedErrorId : System.Diagnostics.Process (PowerShell)</source>
          <target state="translated">FullyQualifiedErrorId: System.Diagnostics.Process (PowerShell)</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>You can use the TargetObject property of  the ErrorRecord object in the $error automatic variable to examine the error.</source>
          <target state="translated">使用在 $error 自动变量的 ErrorRecord 对象的 TargetObject 属性，以检查该错误。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>C:\PS&gt; $error[0].targetobject</source>
          <target state="translated">C:\PS &gt; $error [0].targetobject</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Handles  NPM(K)    PM(K)      WS(K) VM(M)   CPU(s)     Id ProcessName</source>
          <target state="translated">处理 npm （k) pm （k) ws （k) vm （m) CPU(s) Id ProcessName</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>319      26    61016      70864   568     3.28   5548 PowerShell</source>
          <target state="translated">319 26 61016 70864 568 3.28 5548 PowerShell</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>You can also throw an ErrorRecord object or a Microsoft .NET Framework exception.</source>
          <target state="translated">您可以引发 ErrorRecord 对象或 Microsoft.NET Framework 异常。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>The following example uses the Throw keyword to throw a System.FormatException object.</source>
          <target state="translated">下面的示例使用 Throw 关键字引发 System.FormatException 对象。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>C:\PS&gt; $formatError = new-object system.formatexception</source>
          <target state="translated">C:\PS &gt; $formatError = 新对象 system.formatexception</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>C:\PS&gt; throw $formatError</source>
          <target state="translated">C:\PS &gt; 引发 $formatError</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>One of the identified items was in an invalid format.</source>
          <target state="translated">标识项之一是格式无效。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>At line:1 char:6</source>
          <target state="translated">在行︰ 1 char: 6</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>throw &lt;&lt;&lt;&lt;  $formatError</source>
          <target state="translated">引发 &lt;&lt;&lt;&lt; $formatError</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>CategoryInfo          : OperationStopped: (:) [], FormatException</source>
          <target state="translated">CategoryInfo: OperationStopped: （:）[] FormatException</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>FullyQualifiedErrorId : One of the identified items was in an invalid format.</source>
          <target state="translated">FullyQualifiedErrorId︰ 其中一个标识项的无效格式。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>RESULTING ERROR</source>
          <target state="translated">生成的错误</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>The Throw keyword can generate an ErrorRecord object.</source>
          <target state="translated">Throw 关键字可以生成一个 ErrorRecord 对象。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>The Exception property of the ErrorRecord object contains a RuntimeException object.</source>
          <target state="translated">ErrorRecord 对象的异常属性包含 RuntimeException 对象。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>The remainder of the ErrorRecord object and the RuntimeException object vary with the object that the Throw keyword throws.</source>
          <target state="translated">Throw 关键字用于抛的对象因 ErrorRecord 对象和 RuntimeException 对象的其余部分而异。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>The RunTimeException object is wrapped in an ErrorRecord object, and the ErrorRecord object is automatically saved in the $Error automatic variable.</source>
          <target state="translated">RunTimeException 对象包装在 ErrorRecord object，且 ErrorRecord 对象将自动保存在 $Error 自动变量。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>USING THROW TO CREATE A MANDATORY PARAMETER</source>
          <target state="translated">使用 THROW 来创建必需的参数</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>You can use the Throw keyword to make a function parameter mandatory.</source>
          <target state="translated">Throw 关键字可用于将函数参数设为强制。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>This is an alternative to using the Mandatory parameter of the Parameter keyword.</source>
          <target state="translated">这是使用参数关键字的必需参数的替代方法。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>When you use the Mandatory parameter, the system prompts the user for the required parameter value.</source>
          <target state="translated">当您使用的必需参数时，系统将提示用户输入所需的参数值。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>When you use the Throw keyword, the command stops and displays the error record.</source>
          <target state="translated">使用 Throw 关键字时，此命令将停止并显示错误记录。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>For example, the Throw keyword in the parameter subexpression makes the Path parameter a required parameter in the function.</source>
          <target state="translated">例如，参数子表达式中的 Throw 关键字使 Path 参数所需的参数的函数中。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>In this case, the Throw keyword throws a message string, but it is the presence of the Throw keyword that generates the terminating error if the Path parameter is not specified.</source>
          <target state="translated">在这种情况下，Throw 关键字但会引发消息字符串，它是将生成终止错误，如果未指定 Path 参数中的 Throw 关键字存在。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>The expression that follows Throw is optional.</source>
          <target state="translated">后面抛出的表达式是可选的。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>function Get-XMLFiles { param ($path = $(throw "The Path parameter is required.")) dir -path $path<ph id="ph1">\*</ph>.xml -recurse | sort lastwritetime | ft lastwritetime, attributes, name  -auto }</source>
          <target state="translated">函数获取 XMLFiles {param ($path = $（将引发"Path 参数是必需"。）) dir-路径 $path<ph id="ph1">\*</ph>.xml-recurse | 排序 lastwritetime | ft lastwritetime、 属性、 name-自动}</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>SEE ALSO</source>
          <target state="translated">另请参阅</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>about_Break about_Continue about_Scope about_Trap about_Try_Catch_Finally</source>
          <target state="translated">about_Break about_Continue about_Scope about_Trap about_Try_Catch_Finally</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>