<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-cn">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-1c394fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">9d30cc68076844c95172cd17cee919f17415caa1</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">reference\4.0\Microsoft.PowerShell.Core\About\about_Split.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions" />
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">4e24da57e65b4f3ac1b9caff01d863000cf3ce59</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fba4bd3a743b20011d38d7384e1b1d6701f571a6</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>about_Split</source>
          <target state="translated">about_Split</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>powershell, cmdlet</source>
          <target state="translated">powershell cmdlet</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>About Split</source>
          <target state="translated">有关拆分</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>about_Split</source>
          <target state="translated">about_Split</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>about_Split</source>
          <target state="translated">about_Split</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>SHORT DESCRIPTION</source>
          <target state="translated">简短说明</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Explains how to use the Split operator to split one or more strings into substrings.</source>
          <target state="translated">说明如何使用拆分运算符以将一个或多个字符串拆分为多个子字符串。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>LONG DESCRIPTION</source>
          <target state="translated">详细说明</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>The Split operator splits one or more strings into substrings.</source>
          <target state="translated">Split 运算符将一个或多个字符串拆分为多个子字符串。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>You can change the following elements of the Split operation:</source>
          <target state="translated">您可以更改该拆分操作的下列元素︰</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>-- Delimiter.</source>
          <target state="translated">-分隔符。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>The default is whitespace, but you can specify characters, strings, patterns, or script blocks that specify the delimiter.</source>
          <target state="translated">默认值为空白，但您可以指定的字符、 字符串、 模式或指定的分隔符的脚本块。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>The Split operator in Windows PowerShell uses a regular expression in the delimiter, rather than a simple character.</source>
          <target state="translated">Windows PowerShell 中的拆分运算符使用分隔符，而不是简单字符的正则表达式。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>-- Maximum number of substrings.</source>
          <target state="translated">-子字符串最大数目。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>The default is to return all substrings.</source>
          <target state="translated">默认值是返回所有的子字符串。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>If you specify a number less than the number of substrings, the remaining substrings are concatenated in the last substring.</source>
          <target state="translated">如果指定的值小于数量的子字符串时，剩余的子字符串串联在一起在最后一个子字符串。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>-- Options that specify the conditions under which the delimiter is matched, such as SimpleMatch and Multiline.</source>
          <target state="translated">-指定在其下分隔符匹配时，如 SimpleMatch 和多行的条件的选项。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>SYNTAX</source>
          <target state="translated">语法</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>The following diagram shows the syntax for the -split operator.</source>
          <target state="translated">下图显示的语法的拆分运算符。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>The parameter names do not appear in the command.</source>
          <target state="translated">在命令中不显示参数名称。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Include only the parameter values.</source>
          <target state="translated">只包括的参数值。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>The values must appear in the order specified in the syntax diagram.</source>
          <target state="translated">值必须出现在此语法关系图中指定的顺序。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>-Split</source>
          <target state="translated">拆分</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>-Split <ph id="ph1">&lt;Delimiter&gt;</ph>[,&lt;Max-substrings&gt;[,"<ph id="ph2">&lt;Options&gt;</ph>"]]</source>
          <target state="translated">-拆分 <ph id="ph1">&lt;Delimiter&gt;</ph>[，&lt; 最大值的子字符串 &gt; [，"<ph id="ph2">&lt;Options&gt;</ph>"]]</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>-Split {<ph id="ph1">&lt;ScriptBlock&gt;</ph>} [,&lt;Max-substrings&gt;]</source>
          <target state="translated">-拆分 {<ph id="ph1">&lt;ScriptBlock&gt;</ph>} [，&lt; 最大值的子字符串 &gt;]</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>You can substitute -iSplit or -cSplit for -split in any binary Split statement (a Split statement that includes a delimiter or script block).</source>
          <target state="translated">您可以替换-iSplit 或-cSplit 拆分任何二进制拆分语句 （包括分隔符或脚本块是拆分语句） 中。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>The -iSplit and -split operators are case-insensitive.</source>
          <target state="translated">-ISplit 和拆分运算符不区分大小写。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>The -cSplit operator is case-sensitive, meaning that case is considered when the delimiter rules are applied.</source>
          <target state="translated">-CSplit 运算符是区分大小写，这意味着当应用分隔符规则考虑大小写。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>PARAMETERS</source>
          <target state="translated">参数</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Specifies one or more strings to be split.</source>
          <target state="translated">指定一个或多个要拆分的字符串。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>If you submit multiple strings, all the strings are split using the same delimiter rules.</source>
          <target state="translated">如果提交多个字符串时，将所有字符串被都拆分使用相同的分隔符规则。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Example:</source>
          <target state="translated">例如：</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>-split "red yellow blue green" red yellow blue green</source>
          <target state="translated">-拆分"黄色红、 绿蓝"红色黄色蓝绿色</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>The characters that identify the end of a substring.</source>
          <target state="translated">字符是标识一个子字符串的末尾。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>The default delimiter is whitespace, including spaces and non-printable characters, such as newline (<ph id="ph1">`n) and tab (`</ph>t).</source>
          <target state="translated">默认分隔符是空格，包括空格和非打印字符，如换行符 (<ph id="ph1">`n) and tab (`</ph>t)。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>When the strings are split, the delimiter is omitted from all the substrings.</source>
          <target state="translated">当字符串被分割时，分隔符将忽略从所有子字符串。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Example:</source>
          <target state="translated">例如：</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>"Lastname:FirstName:Address" -split ":" Lastname FirstName Address</source>
          <target state="translated">"Lastname:FirstName:Address"-拆分":"Lastname 名字地址</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>By default, the delimiter is omitted from the results.</source>
          <target state="translated">默认情况下，结果中省略了分隔符。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>To preserve all or part of the delimiter, enclose in parentheses the part that you want to preserve.</source>
          <target state="translated">若要保留分隔符的全部或部分，将在圆括号中您想要保留的部分。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>If the &lt;Max-substrings&gt; parameter is added, this takes precedence when your command splits up the collection.</source>
          <target state="translated">如果添加 &lt; 最大值的子字符串 &gt; 参数，这将优先，当您的命令将拆分集合。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>If you opt to include a delimiter as part of the output, the command returns the delimiter as part of the output; however, splitting the string to return the delimiter as part of output does not count as a split.</source>
          <target state="translated">如果你选择作为输出的一部分包含分隔符，该命令将返回作为输出; 的一部分的分隔符但是，拆分要作为输出的一部分返回分隔符的字符串不能算作一个拆分。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>.Examples:</source>
          <target state="translated">.示例︰</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>"Lastname:FirstName:Address" -split "(:)" Lastname</source>
          <target state="translated">"Lastname:FirstName:Address"-拆分"（:）"姓氏</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>:</source>
          <target state="translated">：</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>FirstName</source>
          <target state="translated">FirstName</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>:</source>
          <target state="translated">：</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Address</source>
          <target state="translated">地址</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>"Lastname/:/FirstName/:/Address" -split "/(:)/" Lastname</source>
          <target state="translated">"Lastname /: / FirstName /: / 地址"的拆分"/ （:） /"Lastname</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>:</source>
          <target state="translated">：</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>FirstName</source>
          <target state="translated">FirstName</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>:</source>
          <target state="translated">：</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Address</source>
          <target state="translated">地址</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>In the following example, &lt;Max-substrings&gt; is set to 3.</source>
          <target state="translated">在下面的示例中，&lt; 最大值的子字符串 &gt; 设置为 3。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>This results in three splits of the string values, but a total of five strings in the resulting output; the delimiter is included after the splits, until the maximum of three substrings is reached.</source>
          <target state="translated">这将导致三个拆分的字符串值，而是在生成的输出; 中的五个字符串的总和分隔符后包含拆分，直到达到三个字符串的最大值。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>Additional delimiters in the final substring become part of the substring.</source>
          <target state="translated">附加的分隔符，在最后一个子字符串将成为子字符串的一部分。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>'Chocolate-Vanilla-Strawberry-Blueberry' -split '(-)', 3;</source>
          <target state="translated">巧克力-传统-草莓-Blueberry'-拆分 （-），3;</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Chocolate</source>
          <target state="translated">巧克力</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>Vanilla</source>
          <target state="translated">传统的</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>Strawberry-Blueberry</source>
          <target state="translated">草莓 Blueberry</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>&lt;Max-substrings&gt; Specifies the maximum number of times that a string is split.</source>
          <target state="translated">&lt; 子字符串最大值 &gt; 指定拆分字符串的最大次数。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>The default is all the substrings split by the delimiter.</source>
          <target state="translated">默认值是由分隔符拆分的所有子字符串。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>If there are more substrings, they are concatenated to the final substring.</source>
          <target state="translated">如果有更多的子字符串，它们会连接到的最后一个子字符串。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>If there are fewer substrings, all the substrings are returned.</source>
          <target state="translated">如果有较少的子字符串，则返回所有子字符串。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>A value of 0 and negative values return all the substrings.</source>
          <target state="translated">值为 0 或负值返回所有子字符串。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>Max-substrings does not specify the maximum number of objects that are returned; its value equals the maximum number of times that a string is split.</source>
          <target state="translated">最大子字符串未指定; 不返回的对象的最大数目其值等于字符串拆分的最大次数。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>If you submit more than one string (an array of strings) to the Split operator , the Max-substrings limit is applied to each string separately.</source>
          <target state="translated">如果提交到拆分运算符的多个字符串 （数组的字符串），子字符串的最大限制将分别应用到每个字符串。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>Example:</source>
          <target state="translated">例如：</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>$c = "Mercury,Venus,Earth,Mars,Jupiter,Saturn,Uranus,Neptune" $c -split ",", 5 Mercury Venus Earth Mars Jupiter,Saturn,Uranus,Neptune</source>
          <target state="translated">$c ="Mercury、 金星、 地球、 Mars、 Jupiter、 土星、 天王星、 海王星"$c-拆分"，"，5 Mercury Venus 地球 Mar Jupiter、 土星、 天王星、 海王星</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>An expression that specifies rules for applying the delimiter.</source>
          <target state="translated">一个表达式，指定用于将应用分隔符规则。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>The expression must evaluate to $true or $false.</source>
          <target state="translated">该表达式的计算结果必须为 $true $false。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>Enclose the script block in braces.</source>
          <target state="translated">将脚本块括在大括号中。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>Example:</source>
          <target state="translated">例如：</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>$c = "Mercury,Venus,Earth,Mars,Jupiter,Saturn,Uranus,Neptune" $c -split {$-eq "e" -or $-eq "p"}</source>
          <target state="translated">$c ="Mercury、 金星、 地球、 Mars、 Jupiter、 土星、 天王星、 海王星"$c-拆分 {$-eq"e"的或 $-eq"p"}</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>M</source>
          <target state="translated">M</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>rcury,V nus,Earth,Mars,Ju it r,Saturn,Uranus,N</source>
          <target state="translated">rcury，V nus，地球，Mars，Ju 它 r、 土星、 天王星、 N</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>tun</source>
          <target state="translated">运行</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>Enclose the option name in quotation marks.</source>
          <target state="translated">选项名称用引号引起来。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>Options are valid only when the &lt;Max-substrings&gt; parameter is used in the statement.</source>
          <target state="translated">仅当 &lt; 最大值的子字符串 &gt; 将使用此参数在语句中，选项都有效。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>The syntax for the Options parameter is:</source>
          <target state="translated">选项参数的语法是︰</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>"SimpleMatch [,IgnoreCase]"</source>
          <target state="translated">"SimpleMatch [，IgnoreCase]"</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>"[RegexMatch] [,IgnoreCase] [,CultureInvariant] [,IgnorePatternWhitespace] [,ExplicitCapture] [,Singleline | ,Multiline]"</source>
          <target state="translated">"[RegexMatch] [，IgnoreCase] [，CultureInvariant] [，IgnorePatternWhitespace] [，ExplicitCapture] [，单行 |、 多行]"</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>The SimpleMatch options are:</source>
          <target state="translated">SimpleMatch 选项有︰</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>-- SimpleMatch: Use simple string comparison when evaluating the delimiter.</source>
          <target state="translated">-SimpleMatch︰ 评估分隔符时，请使用简单的字符串比较。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>Cannot be used with RegexMatch.</source>
          <target state="translated">不能与 RegexMatch 使用。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>-- IgnoreCase: Forces case-insensitive matching, even if the -cSplit operator is specified.</source>
          <target state="translated">-IgnoreCase︰ 强制不区分大小写匹配，即使指定了-cSplit 运算符。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>The RegexMatch options are:</source>
          <target state="translated">RegexMatch 选项有︰</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>-- RegexMatch: Use regular expression matching to evaluate the delimiter.</source>
          <target state="translated">-RegexMatch︰ 使用正则表达式匹配评估分隔符。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>This is the default behavior.</source>
          <target state="translated">这是默认行为。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>Cannot be used with SimpleMatch.</source>
          <target state="translated">不能与 SimpleMatch 使用。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>-- IgnoreCase: Forces case-insensitive matching, even if the -cSplit operator is specified.</source>
          <target state="translated">-IgnoreCase︰ 强制不区分大小写匹配，即使指定了-cSplit 运算符。</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>-- CultureInvariant: Ignores cultural differences in language when evaluting the delimiter.</source>
          <target state="translated">-CultureInvariant︰ 将忽略语言的区域性差异时评估分隔符。</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>Valid only with RegexMatch.</source>
          <target state="translated">仅对 RegexMatch 有效。</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>-- IgnorePatternWhitespace: Ignores unescaped whitespace and comments marked with the number sign (#).</source>
          <target state="translated">-IgnorePatternWhitespace︰ 将忽略非转义的空白和注释标有数字符号 （#）。</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>Valid only with RegexMatch.</source>
          <target state="translated">仅对 RegexMatch 有效。</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>-- Multiline: Multiline mode recognizes the start and end of lines and strings.</source>
          <target state="translated">-多行︰ 多行模式识别的开始和结束的行和字符串。</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>Valid only with RegexMatch.</source>
          <target state="translated">仅对 RegexMatch 有效。</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>Singleline is the default.</source>
          <target state="translated">默认值为单行。</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>-- Singleline: Singleline mode recognizes only the start and end of strings.</source>
          <target state="translated">-单行︰ 单行模式识别开始和结束的字符串。</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>Valid only with RegexMatch.</source>
          <target state="translated">仅对 RegexMatch 有效。</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>Singleline is the default.</source>
          <target state="translated">默认值为单行。</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>-- ExplicitCapture: Ignores non-named match groups so that only explicit capture groups are returned in the result list.</source>
          <target state="translated">-ExplicitCapture︰ 将忽略未命名的匹配项组，以便仅显式捕获组返回的结果列表中。</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>Valid only with RegexMatch.</source>
          <target state="translated">仅对 RegexMatch 有效。</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>UNARY and BINARY SPLIT OPERATORS</source>
          <target state="translated">一元和二进制拆分的运算符</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>The unary split operator (-split <ph id="ph1">&lt;string&gt;</ph>) has higher precedence than a comma.</source>
          <target state="translated">一元拆分运算符 (-拆分 <ph id="ph1">&lt;string&gt;</ph>) 优先级高于逗号。</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>As a result, if you submit a comma-separated list of strings to the unary split operator, only the first string (before the first comma) is split.</source>
          <target state="translated">结果是，如果您提交逗号分隔的字符串转换为一元拆分运算符列表时，仅第一个字符串 （在之前的第一个逗号） 拆分。</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>To split more than one string, use the binary split operator (<ph id="ph1">&lt;string&gt;</ph> -split <ph id="ph2">&lt;delimiter&gt;</ph>).</source>
          <target state="translated">若要将多个字符串拆分，使用二进制拆分运算符 (<ph id="ph1">&lt;string&gt;</ph> -拆分 <ph id="ph2">&lt;delimiter&gt;</ph>)。</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>Enclose all the strings in parentheses, or store the strings in a variable, and then submit the variable to the split operator.</source>
          <target state="translated">将所有字符串都括在括号中，或将这些字符串存储在变量中，然后提交到拆分运算符的变量。</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>Consider the following example:</source>
          <target state="translated">请考虑下面的示例︰</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>-split "1 2", "a b"</source>
          <target state="translated">-拆分"1 2"，"a b"</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>1</source>
          <target state="translated">1</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>2</source>
          <target state="translated">2</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>a b</source>
          <target state="translated">b</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>"1 2", "a b" -split " "</source>
          <target state="translated">"1 2"，"a b"-拆分""</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>1</source>
          <target state="translated">1</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>2</source>
          <target state="translated">2</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>a b</source>
          <target state="translated">b</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>-split ("1 2", "a b")</source>
          <target state="translated">-拆分 ("1 2"，"a b")</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>1</source>
          <target state="translated">1</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>2</source>
          <target state="translated">2</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>a b</source>
          <target state="translated">b</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>$a = "1 2", "a b" -split $a</source>
          <target state="translated">$a ="1 2"，"a b"-拆分 $</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>1</source>
          <target state="translated">1</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>2</source>
          <target state="translated">2</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>a b</source>
          <target state="translated">b</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>EXAMPLES</source>
          <target state="translated">示例</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>The following statement splits the string at whitespace.</source>
          <target state="translated">下面的语句将拆分字符串中的空白。</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>C:\PS&gt; -split "Windows PowerShell 2.0`nWindows PowerShell with remoting"</source>
          <target state="translated">C:\PS &gt;-拆分"Windows PowerShell 2.0 nWindows PowerShell 远程处理与"</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>Windows PowerShell</source>
          <target state="translated">Windows PowerShell</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>2.0</source>
          <target state="translated">2.0</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>Windows PowerShell with remoting</source>
          <target state="translated">Windows PowerShell 远程处理</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>The following statement splits the string at any comma.</source>
          <target state="translated">下面的语句将拆分处任何逗号的字符串。</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>C:\PS&gt; "Mercury,Venus,Earth,Mars,Jupiter,Saturn,Uranus,Neptune" -split ','</source>
          <target state="translated">C:\PS &gt;"Mercury、 金星、 地球、 Mars、 Jupiter、 土星、 天王星、 海王星"-拆分 '，'</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>Mercury Venus Earth Mars Jupiter Saturn Uranus Neptune</source>
          <target state="translated">Mercury Venus 地球 Mar Jupiter Saturn 天王星海王星</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>The following statement splits the string at the pattern "er".</source>
          <target state="translated">下面的语句将字符串拆分模式"er"。</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>C:\PS&gt;"Mercury,Venus,Earth,Mars,Jupiter,Saturn,Uranus,Neptune" -split 'er'</source>
          <target state="translated">C:\PS &gt;"Mercury、 金星、 地球、 Mars、 Jupiter、 土星、 天王星、 海王星"-拆分执行</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>M</source>
          <target state="translated">M</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>cury,Venus,Earth,Mars,Jupit ,Saturn,Uranus,Neptune</source>
          <target state="translated">cury，金星、 地球、 Mars、 Jupit、 土星、 天王星、 海王星</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>The following statement performs a case-sensitive split at the letter "N".</source>
          <target state="translated">下面的语句执行区分大小写字母"N"在拆分。</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>C:\PS&gt; "Mercury,Venus,Earth,Mars,Jupiter,Saturn,Uranus,Neptune" -cSplit 'N'</source>
          <target state="translated">C:\PS &gt;"Mercury、 金星、 地球、 Mars、 Jupiter、 土星、 天王星、 海王星"-cSplit n</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>Mercury,Venus,Earth,Mars,Jupiter,Saturn,Uranus, eptune</source>
          <target state="translated">Mercury、 金星、 地球、 Mars、 Jupiter、 土星、 天王星、 eptune</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source>The following statement splits the string at "e" and "t".</source>
          <target state="translated">下面的语句在拆分字符串"e"和"t"。</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source>C:\PS&gt; "Mercury,Venus,Earth,Mars,Jupiter,Saturn,Uranus,Neptune" -split '[et]'</source>
          <target state="translated">C:\PS &gt;"Mercury、 金星、 地球、 Mars、 Jupiter、 土星、 天王星、 海王星"-拆分 [et]</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source>M</source>
          <target state="translated">M</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source>rcury,V nus, ar h,Mars,Jupi</source>
          <target state="translated">rcury、 V nus、 ar h、 Mars、 Jupi</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source>r,Sa urn,Uranus,N p un</source>
          <target state="translated">r、 Sa urn，天王星、 N p 取消</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source>The following statement splits the string at "e" and "r", but limits the resulting substrings to six substrings.</source>
          <target state="translated">下面的语句处拆分字符串"e"和"r"，但限制对六个的子字符串结果的子字符串。</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve">
          <source>C:\PS&gt; "Mercury,Venus,Earth,Mars,Jupiter,Saturn,Uranus,Neptune" -split '[er]', 6</source>
          <target state="translated">C:\PS &gt;"Mercury、 金星、 地球、 Mars、 Jupiter、 土星、 天王星、 海王星"-拆分 '[er]，6</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source>M</source>
          <target state="translated">M</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source>cu y,V nus, arth,Mars,Jupiter,Saturn,Uranus,Neptune</source>
          <target state="translated">cu y、 V nus、 arth，Mars、 Jupiter、 土星、 天王星、 海王星</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source>The following statement splits a string into three substrings.</source>
          <target state="translated">下面的语句将字符串拆分为三个多个子字符串。</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve">
          <source>C:\PS&gt; "a,b,c,d,e,f,g,h" -split ",", 3</source>
          <target state="translated">C:\PS &gt;"a、 b、 c、 d、 e、 f、 g、 h"的拆分"，"，3</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve">
          <source>a b c,d,e,f,g,h</source>
          <target state="translated">b c、 d、 e、 f、 g、 h</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve">
          <source>The following statement splits two strings into three substrings.</source>
          <target state="translated">下面的语句将两个字符串拆分为三个的子字符串。</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve">
          <source>(The limit is applied to each string independently.)</source>
          <target state="translated">（此限制适用于每个字符串独立。）</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve">
          <source>C:\PS&gt; "a,b,c,d", "e,f,g,h" -split ",", 3</source>
          <target state="translated">C:\PS &gt;"a、 b、 c、 d"、"e、 f、 g、 h"-拆分"，"，3</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve">
          <source>a b c,d e f g,h</source>
          <target state="translated">b c、 意识 f g、 h</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve">
          <source>The following statement splits each line in the here-string at the first digit.</source>
          <target state="translated">下面的语句将拆分此处字符串中的第一个数字中的每一行。</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve">
          <source>It uses the Multiline option to recognize the beginning of each line and string.</source>
          <target state="translated">它使用多行选项来识别每个行和字符串的开头。</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve">
          <source>The 0 represents the "return all" value of the Max-substrings parameter.</source>
          <target state="translated">0 表示最大子字符串参数的"返回所有"值。</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve">
          <source>You can use options, such as Multiline, only when the Max-substrings value is specified.</source>
          <target state="translated">只有在指定的子字符串的最大值时，可以使用选项，如多行以外。</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve">
          <source>C:\PS&gt; $a = @' 1The first line.</source>
          <target state="translated">C:\PS &gt; $ = @ 1 机器第一行。</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve">
          <source>2The second line.</source>
          <target state="translated">2The 第二行。</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve">
          <source>3The third of three lines.</source>
          <target state="translated">3The 三条线的第三个。</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve">
          <source>'@</source>
          <target state="translated">'@</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve">
          <source>C:\PS&gt; $a -split "^\d", 0, "multiline"</source>
          <target state="translated">C:\PS &gt; $a 的拆分"^ \d"、 0，"多行"</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve">
          <source>The first line.</source>
          <target state="translated">第一行。</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve">
          <source>The second line.</source>
          <target state="translated">第二行。</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve">
          <source>The third of three lines.</source>
          <target state="translated">三条线的第三个。</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve">
          <source>The following statement uses the SimpleMatch option to direct the -split operator to interpret the dot (.) delimiter literally.</source>
          <target state="translated">下面的语句使用 SimpleMatch 选项来指示-拆分运算符按原义解释圆点 （.） 分隔符。</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve">
          <source>With the default, RegexMatch, the dot enclosed in quotation marks (".") is interpreted to match any character except for a newline character.</source>
          <target state="translated">默认值，RegexMatch，点括在引号 ("。") 被解释为匹配除换行符外的任何字符。</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve">
          <source>As a result, the Split statement returns a blank line for every character except newline.</source>
          <target state="translated">结果是，拆分语句将返回一个空行的除换行符之外的每个字符。</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve">
          <source>The 0 represents the "return all" value of the Max-substrings parameter.</source>
          <target state="translated">0 表示最大子字符串参数的"返回所有"值。</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve">
          <source>You can use options, such as SimpleMatch, only when the Max-substrings value is specified.</source>
          <target state="translated">只有在指定的子字符串的最大值时，可以使用选项，如 SimpleMatch。</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve">
          <source>C:\PS&gt; "This.is.a.test" -split ".", 0, "simplematch"</source>
          <target state="translated">C:\PS &gt;"This.is.a.test"-拆分"。"，而是 0，"simplematch"</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve">
          <source>This is a test</source>
          <target state="translated">这是一个测试</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve">
          <source>The following statement splits the string at one of two delimiters, depending on the value of a variable.</source>
          <target state="translated">下面的语句将拆分字符串中两个分隔符，具体取决于变量的值之一。</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve">
          <source>C:\PS&gt; $i = 1 C:\PS&gt; $c = "LastName, FirstName; Address, City, State, Zip" C:\PS&gt; $c -split {if ($i -lt 1) {$-eq ","} else {$-eq ";"}}</source>
          <target state="translated">C:\PS &gt; $i = 1 C:\PS &gt; $c ="LastName，FirstName;地址、 城市、 省/自治区，邮编"C:\PS &gt; $c-拆分 {如果 ($i lt 1) {$-eq"，"} else {$-eq";"}}</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve">
          <source>LastName, FirstName Address, City, State, Zip</source>
          <target state="translated">姓氏、 名字地址、 城市、 状态、 Zip</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve">
          <source>The following split statements split an XML file first at the angle bracket and then at the semicolon.</source>
          <target state="translated">以下拆分语句拆分 XML 文件依次首先在尖括号和分号。</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve">
          <source>The result is a readable version of the XML file.</source>
          <target state="translated">结果是 XML 文件的可读格式。</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve">
          <source>C:\PS&gt; get-process PowerShell | export-clixml ps.xml C:\PS&gt; $x = import-clixml ps.xml C:\PS&gt; $x = $x -split "&lt;" C:\PS&gt; $x = $x -split ";"</source>
          <target state="translated">C:\PS &gt; 获取进程 PowerShell |导出 clixml ps.xml C:\PS &gt; $x = 导入 clixml ps.xml C:\PS &gt; $x = $x-拆分"&lt;"C:\PS &gt; $x = $x-拆分";"</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve">
          <source>To display the result, type "$x".</source>
          <target state="translated">若要显示结果，请键入"$x"。</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve">
          <source>C:\PS&gt; $x</source>
          <target state="translated">C:\PS &gt; $x</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve">
          <source>@{__NounName=Process Name=PowerShell Handles=428</source>
          <target state="translated">@{__NounName = 进程名称 = PowerShell 句柄 = 428</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve">
          <source>VM=150081536</source>
          <target state="translated">VM = 150081536</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve">
          <source>WS=34840576</source>
          <target state="translated">WS = 34840576</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve">
          <source>PM=36253696</source>
          <target state="translated">PM = 36253696</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve">
          <source>...</source>
          <target state="translated">...</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve">
          <source>SEE ALSO</source>
          <target state="translated">另请参阅</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve">
          <source>Split-Path about_Operators about_Comparison_Operators about_Join</source>
          <target state="translated">拆分路径 about_Operators about_Comparison_Operators about_Join</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>