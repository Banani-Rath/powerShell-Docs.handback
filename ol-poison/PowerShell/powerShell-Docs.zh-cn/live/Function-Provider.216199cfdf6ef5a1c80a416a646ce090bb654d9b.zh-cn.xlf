<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-cn">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-1c394fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">e443841031efc1b3d0c4e1e7a7ae0e219690daea</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">reference\3.0\Microsoft.PowerShell.Core\Providers\Function-Provider.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions" />
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">4be6b619efbda8755cd846ec9e14e3c53d7cb4cb</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">23556e73a6576861144141284e27ec5d5c659875</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Function Provider</source>
          <target state="translated">Function 提供程序</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Function Provider</source>
          <target state="translated">Function 提供程序</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>PROVIDER NAME</source>
          <target state="translated">提供程序名称</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Function</source>
          <target state="translated">功能</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>DRIVES</source>
          <target state="translated">驱动器</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Function:</source>
          <target state="translated">Function:</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>SHORT DESCRIPTION</source>
          <target state="translated">简短说明</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Provides access to the functions defined in Windows PowerShell.</source>
          <target state="translated">提供对 Windows PowerShell 中所定义函数的访问权限。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>DETAILED DESCRIPTION</source>
          <target state="translated">详细说明</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The Windows PowerShell Function provider lets you get, add, change, clear, and delete the functions and filters in Windows PowerShell.</source>
          <target state="translated">通过 Windows PowerShell Function 提供程序，你可以获取、添加、更改、清除和删除 Windows PowerShell 中的函数和筛选器。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>A function is a named block of code that performs an action.</source>
          <target state="translated">函数是用于执行某项操作的命名的代码块。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>When you type the function name, the code in the function runs.</source>
          <target state="translated">在键入函数名称后，将运行该函数中的代码。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>A filter is a named block of code that establishes conditions for an action.</source>
          <target state="translated">筛选器是用于建立操作条件的命名的代码块。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>You can type the name of the filter in place of the condition, such as in a <bpt id="p1">[</bpt>Where<ph id="ph1">\-</ph>Object &amp;#91;m2&amp;#93;<ept id="p1">](assetId:///f4c69467-d5ce-4da2-87d5-d2ae74be8acb)</ept> command.</source>
          <target state="translated">您键入的名称的筛选器来代替条件，例如在 <bpt id="p1">[</bpt>其中<ph id="ph1">\-</ph>对象 #91; m2 &amp;#93;<ept id="p1">](assetId:///f4c69467-d5ce-4da2-87d5-d2ae74be8acb)</ept> 命令。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>In the Function: drive, functions are preceded by the label "Function" and filters are preceded by the label "Filter", but they operate properly when used in the correct context regardless of the label.</source>
          <target state="translated">在 Function: 驱动器中，函数以标签“Function”开头，而筛选器以标签“Filter”开头；然而，无论其标签如何，只要在正确的上下文中使用，两者就会正常运行。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>The Function provider is a flat namespace that contains only the function and filter objects.</source>
          <target state="translated">Function 提供程序是一个仅包含函数和筛选器对象的平面命名空间。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Neither functions nor filters have child items.</source>
          <target state="translated">函数和筛选器都没有子项。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Each function is an instance of the System.Management.Automation.FunctionInfo class.</source>
          <target state="translated">每个函数都是 System.Management.Automation.FunctionInfo 类的实例。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Each filter is an instance of the System.Management.Automation.FilterInfo class.</source>
          <target state="translated">每个筛选器都是 System.Management.Automation.FilterInfo 类的实例。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>The examples in this section show how to manage functions, but the same methods can be used with filters.</source>
          <target state="translated">本节中的示例显示了如何管理函数，而这些筛选器可使用相同的方法。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>The Function provider exposes its data store in the Function: drive.</source>
          <target state="translated">Function 提供程序在 Function: 驱动器中公开其数据存储。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>To work with functions, you can change your location to the Function: drive <ph id="ph1">\(</ph>"set<ph id="ph2">\-</ph>location function:"<ph id="ph3">\)</ph>.</source>
          <target state="translated">若要使用的函数，可以更改您的位置函数︰ 驱动器 <ph id="ph1">\(</ph>"设置<ph id="ph2">\-</ph>位置函数:"<ph id="ph3">\)</ph>。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Or, you can work from another Windows PowerShell drive.</source>
          <target state="translated">或者，可以从其他 Windows PowerShell 驱动器中使用函数。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>To reference a function from another location, use the drive name <ph id="ph1">\(</ph>Function:<ph id="ph2">\)</ph> in the path.</source>
          <target state="translated">若要从另一个位置引用函数，使用驱动器名称 <ph id="ph1">\(</ph>函数︰<ph id="ph2">\)</ph> 路径中。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>The Function provider supports all of the cmdlets whose names contain the Item noun <ph id="ph1">\(</ph>the Item cmdlets<ph id="ph2">\)</ph>, except for <bpt id="p1">[</bpt>Invoke<ph id="ph3">\-</ph>Item &amp;#91;m2&amp;#93;<ept id="p1">](assetId:///38a9887b-ce1a-4bde-be4e-98012efae204)</ept>.</source>
          <target state="translated">Function 提供程序支持的所有名称中包含 Item 名词的 cmdlet <ph id="ph1">\(</ph>Item cmdlet<ph id="ph2">\)</ph>, ，除 <bpt id="p1">[</bpt>Invoke<ph id="ph3">\-</ph>项和 #91; m2 &amp;#93;<ept id="p1">](assetId:///38a9887b-ce1a-4bde-be4e-98012efae204)</ept>。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>And, it supports the <bpt id="p1">[</bpt>Get<ph id="ph1">\-</ph>Content &amp;#91;m2&amp;#93;<ept id="p1">](assetId:///86d8b4af-af2c-4a27-9519-2c9fd420be3d)</ept> and <bpt id="p2">[</bpt>Set<ph id="ph2">\-</ph>Content &amp;#91;m2&amp;#93;<ept id="p2">](assetId:///6fff9b86-86df-4440-b7b7-8124b22088fc)</ept> cmdlets.</source>
          <target state="translated">它还支持 <bpt id="p1">[</bpt>获取<ph id="ph1">\-</ph>内容 #91; m2 &amp;#93;<ept id="p1">](assetId:///86d8b4af-af2c-4a27-9519-2c9fd420be3d)</ept> 和 <bpt id="p2">[</bpt>设置<ph id="ph2">\-</ph>内容 #91; m2 &amp;#93;<ept id="p2">](assetId:///6fff9b86-86df-4440-b7b7-8124b22088fc)</ept> cmdlet。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>However, it does not support the cmdlets whose names contain the ItemProperty noun <ph id="ph1">\(</ph>the ItemProperty cmdlets<ph id="ph2">\)</ph>, and it does not support the Filter parameter in any cmdlet.</source>
          <target state="translated">但是，不支持名称中包含 ItemProperty 名词的 cmdlet <ph id="ph1">\(</ph>ItemProperty cmdlet<ph id="ph2">\)</ph>, ，并且它不支持任何 cmdlet 中的筛选器参数。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>All changes to the functions affect the current console only.</source>
          <target state="translated">对函数所做的所有更改只会影响当前控制台。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>To save the changes, add the function to the Windows PowerShell profile, or use <bpt id="p1">[</bpt>Export<ph id="ph1">\-</ph>Console &amp;#91;m2&amp;#93;<ept id="p1">](assetId:///0858eece-ddcb-4525-89d1-4732c5f54c48)</ept> to save the current console.</source>
          <target state="translated">若要保存所做的更改，请将函数添加到 Windows PowerShell 配置文件，或使用 <bpt id="p1">[</bpt>导出<ph id="ph1">\-</ph>控制台 #91; m2 &amp;#93;<ept id="p1">](assetId:///0858eece-ddcb-4525-89d1-4732c5f54c48)</ept> 要保存当前控制台。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>CAPABILITIES</source>
          <target state="translated">功能</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>ShouldProcess</source>
          <target state="translated">ShouldProcess</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>EXAMPLES</source>
          <target state="translated">示例</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Getting to the Function: Drive</source>
          <target state="translated">访问 Function︰ 驱动器</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>EXAMPLE 1</source>
          <target state="translated">示例 1</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Changes the current location to the Function: drive.</source>
          <target state="translated">将当前位置更改为 Function: 驱动器。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>You can use this command from any drive in Windows PowerShell.</source>
          <target state="translated">你可以从 Windows PowerShell 中的任何驱动器使用此命令。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>To return to a file system drive, type the drive name.</source>
          <target state="translated">若要返回到文件系统驱动器，请键入驱动器名称。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>For example, type "set<ph id="ph1">\-</ph>location c:".</source>
          <target state="translated">例如，键入"设置<ph id="ph1">\-</ph>位置 c:"。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Getting Functions</source>
          <target state="translated">获取函数</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>EXAMPLE 1</source>
          <target state="translated">示例 1</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>This command gets the list of all the functions in the current session.</source>
          <target state="translated">此命令将获取当前会话中所有函数的列表。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>You can use this command from any Windows PowerShell drive.</source>
          <target state="translated">你可以从任何 Windows PowerShell 驱动器使用此命令。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>EXAMPLE 2</source>
          <target state="translated">示例 2</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>This command gets the "man" function from the Function: drive.</source>
          <target state="translated">此命令将从 Function: 驱动器中获取“man”函数。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>It uses the Get<ph id="ph1">\-</ph>Item cmdlet to get the function.</source>
          <target state="translated">使用 Get<ph id="ph1">\-</ph>项 cmdlet 来获取该函数。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>The pipeline operator <ph id="ph1">\(</ph>&amp;#124;<ph id="ph2">\)</ph> sends the result to Format<ph id="ph3">\-</ph>Table.</source>
          <target state="translated">管道运算符 <ph id="ph1">\(</ph>&amp;#124;<ph id="ph2">\)</ph> 将结果发送给格式<ph id="ph3">\-</ph>表。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>The Wrap parameter directs text that does not fit on the line onto the next line.</source>
          <target state="translated">Wrap 参数将一行中无法容纳的文本转至下一行。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>The Autosize parameter resizes the table columns to accommodate the text.</source>
          <target state="translated">Autosize 参数将调整表列的大小以容纳文本。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>If you are in a different drive, add the drive name <ph id="ph1">\(</ph>Function:<ph id="ph2">\)</ph> to the path.</source>
          <target state="translated">如果您处于不同的驱动器，将驱动器名称添加 <ph id="ph1">\(</ph>函数︰<ph id="ph2">\)</ph> 到路径。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>EXAMPLE 3</source>
          <target state="translated">示例 3</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>These commands both get the function named "c:".</source>
          <target state="translated">这两个命令都可以获取名为“c:”的函数。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>The first command can be used in any drive.</source>
          <target state="translated">第一个命令可在任何驱动器中使用。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>The second command is used in the Function: drive.</source>
          <target state="translated">第二个命令在 Function: 驱动器中使用。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Because the name ends in a colon, which is the syntax for a drive, you must qualify the path with the drive name.</source>
          <target state="translated">由于名称以冒号结束（这是驱动器的语法），因此必须使用驱动器名称来限定路径。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Within the Function: drive, you can use either format.</source>
          <target state="translated">在 Function: 驱动器中，可以使用两种格式之一。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>In the second command, the dot <ph id="ph1">\(</ph>.</source>
          <target state="translated">在第二个命令中，点 <ph id="ph1">\(</ph>。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>represents the current location.</source>
          <target state="translated">表示当前的位置。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Creating a Function</source>
          <target state="translated">创建函数</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>EXAMPLE 1</source>
          <target state="translated">示例 1</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>This command uses the New<ph id="ph1">\-</ph>Item cmdlet to create a function called "HKLM:".</source>
          <target state="translated">此命令使用新建<ph id="ph1">\-</ph>项 cmdlet 来创建一个函数调用"HKLM:"。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>The expression in braces is the script block that is represented by the function name.</source>
          <target state="translated">大括号中的表达式是以函数名称表示的脚本块。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>You can also create a function by typing it at the Windows PowerShell command line.</source>
          <target state="translated">也可以通过在 Windows PowerShell 命令行中键入某个函数来创建该函数。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>For example, tpe "function:hklm: {set<ph id="ph1">\-</ph>location hklm:}".</source>
          <target state="translated">例如，键入"函数︰ hklm: {设置<ph id="ph1">\-</ph>位置 hklm:}"。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>If you are in the Function: drive, you can omit the drive name.</source>
          <target state="translated">如果你在 Function: 驱动器中，则可以省略驱动器名称。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>Because you cannot specify the "Filter" label in New<ph id="ph1">\-</ph>Item, filters are labeled as functions, but they operate properly with any label.</source>
          <target state="translated">因为您无法指定"Filter"标签中新建<ph id="ph1">\-</ph>项，筛选器标记为函数，但它们正常使用任何标签。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>To create a filter with the "Filter" label, type the filter at the command line.</source>
          <target state="translated">若要创建带有“Filter”标签的筛选器，请在命令行中键入该筛选器。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>For example, type "filter:Running {$<ph id="ph1">\_</ph>.Status <ph id="ph2">\-</ph>eq "Running"}".</source>
          <target state="translated">例如，键入"filter: Running {$<ph id="ph1">\_</ph>。状态 <ph id="ph2">\-</ph>eq"Running"}"。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>EXAMPLE 2</source>
          <target state="translated">示例 2</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>This command uses the New<ph id="ph1">\-</ph>Item cmdlet to create a function called Csrss.</source>
          <target state="translated">此命令使用新建<ph id="ph1">\-</ph>项 cmdlet 来创建名为 Csrss 的函数。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>It uses the Options dynamic parameter to specify a value of ReadOnly for the Options property of the function.</source>
          <target state="translated">它使用 Options 动态参数将该函数的 Options 属性值指定为 ReadOnly。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>This command works from any location.</source>
          <target state="translated">此命令可从任何位置运行。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>If you are in the Function: drive, you can use a dot <ph id="ph1">\(</ph>.</source>
          <target state="translated">如果您是在函数中︰ 驱动器中，您可以使用一个圆点 <ph id="ph1">\(</ph>。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>to specify the path.</source>
          <target state="translated">若要指定的路径。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>The dot represents the current location.</source>
          <target state="translated">该点表示当前位置。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>Deleting a Function</source>
          <target state="translated">删除函数</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>EXAMPLE 1</source>
          <target state="translated">示例 1</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>This command deletes the "hklm:" function from the current session.</source>
          <target state="translated">此命令将从当前会话中删除“hklm:”函数。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>EXAMPLE 2</source>
          <target state="translated">示例 2</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>This command deletes all the functions from the current session except for the functions whose Options property has a value of Constant.</source>
          <target state="translated">此命令将从当前会话中删除所有函数，但其 Options 属性值为 Constant 的函数除外。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>Without the Force parameter, the command does not delete functions whose Options property has a value of ReadOnly.</source>
          <target state="translated">在没有 Force 参数的情况下，该命令将不会删除其 Options 属性值为 ReadOnly 的函数。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>When you delete all the functions, the command prompt changes because the prompt function, which defines the content of the command prompt, is deleted.</source>
          <target state="translated">在删除所有函数后，命令提示符将会发生更改，因为删除了用于定义命令提示符内容的 prompt 函数。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>Displaying the Properties and Methods of Functions</source>
          <target state="translated">显示函数的属性和方法</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>EXAMPLE 1</source>
          <target state="translated">示例 1</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>This command uses the Get<ph id="ph1">\-</ph>Item cmdlet to get all the functions.</source>
          <target state="translated">此命令使用 Get<ph id="ph1">\-</ph>项 cmdlet 来获取所有函数。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>The pipeline operator sends the results to the Get<ph id="ph1">\-</ph>Member cmdlet, which displays the methods and the properties of the object.</source>
          <target state="translated">管道运算符将结果发送给 Get<ph id="ph1">\-</ph>成员 cmdlet，后者会显示的方法和对象的属性。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>When you pipe a collection of objects <ph id="ph1">\(</ph>such as the collection of functions in the Function: drive<ph id="ph2">\)</ph> to Get<ph id="ph3">\-</ph>Member, Get<ph id="ph4">\-</ph>Member evaluates each object in the collection separately and returns information about each object type that it finds.</source>
          <target state="translated">当通过管道传递对象的集合， <ph id="ph1">\(</ph>如函数中的函数的集合︰ 驱动器<ph id="ph2">\)</ph> 到 Get<ph id="ph3">\-</ph>成员，获取<ph id="ph4">\-</ph>成员将分别评估该集合中的每个对象并返回有关它所找到的每个对象类型的信息。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>If all of the objects are of the same type, it returns information about the single object type.</source>
          <target state="translated">如果所有对象都属于同一类型，则它将返回有关该单一对象类型的信息。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>In this case, all of the functions are FunctionInfo objects.</source>
          <target state="translated">在本例中，所有函数均为 FunctionInfo 对象。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>To get information about the collection of FunctionInfo objects, use the InputObject parameter of Get<ph id="ph1">\-</ph>Member.</source>
          <target state="translated">若要获取有关 FunctionInfo 对象的集合的信息，请使用 Get 的 InputObject 参数<ph id="ph1">\-</ph>成员。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>For example, type "get<ph id="ph1">\-</ph>member <ph id="ph2">\-</ph>InputObject <ph id="ph3">\(</ph>get<ph id="ph4">\-</ph>item function:<ph id="ph5">\*\)</ph>".</source>
          <target state="translated">例如，键入"获取<ph id="ph1">\-</ph>成员 <ph id="ph2">\-</ph>InputObject <ph id="ph3">\(</ph>获取<ph id="ph4">\-</ph>项函数︰<ph id="ph5">\*\)</ph>"。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>When you use the InputObject parameter, Get<ph id="ph1">\-</ph>Member evaluates the collection, not the objects in the collection.</source>
          <target state="translated">当你使用 InputObject 参数获取<ph id="ph1">\-</ph>成员将对集合进行评估不在集合中的对象。</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>EXAMPLE 2</source>
          <target state="translated">示例 2</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>This command lists the values of the properties of the "prompt" function.</source>
          <target state="translated">此命令将列出“prompt”函数的属性值。</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>It uses the Get<ph id="ph1">\-</ph>Item cmdlet to get an object that represents the "prompt" function.</source>
          <target state="translated">使用 Get<ph id="ph1">\-</ph>项 cmdlet 来获取一个对象，表示"prompt"函数。</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>The pipeline operator <ph id="ph1">\(</ph>&amp;#124;<ph id="ph2">\)</ph> sends the results to the Format<ph id="ph3">\-</ph>List command.</source>
          <target state="translated">管道运算符 <ph id="ph1">\(</ph>&amp;#124;<ph id="ph2">\)</ph> 将结果发送到格式<ph id="ph3">\-</ph>List 命令。</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>The Format<ph id="ph1">\-</ph>List command uses the Property parameter with a wildcard character <ph id="ph2">\(\*\)</ph> to format and to display the values of all of the properties of the "prompt" function.</source>
          <target state="translated">格式<ph id="ph1">\-</ph>列出命令使用带有通配符的 Property 参数 <ph id="ph2">\(\*\)</ph> 设置格式和显示的所有"prompt"函数属性的值。</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>Changing the Properties of a Function</source>
          <target state="translated">更改函数的属性</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>EXAMPLE 1</source>
          <target state="translated">示例 1</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>You can use the Set<ph id="ph1">\-</ph>Item cmdlet with the Options dynamic parameter to change the value of the Options property of a function.</source>
          <target state="translated">您可以使用一组<ph id="ph1">\-</ph>项 cmdlet 和 Options 动态参数来更改函数的 Options 属性值。</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>This command sets the AllScope and ReadOnly options for the "prompt" function.</source>
          <target state="translated">此命令设置“prompt”函数的 AllScope 选项和 ReadOnly 选项。</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>This command uses the Options dynamic parameter of the Set<ph id="ph1">\-</ph>Item cmdlet.</source>
          <target state="translated">此命令使用 Options 动态参数集的<ph id="ph1">\-</ph>项 cmdlet。</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>The Options parameter is available in Set<ph id="ph1">\-</ph>Item only when you use it with the Alias or Function provider.</source>
          <target state="translated">选项参数是在集中<ph id="ph1">\-</ph>项仅当使用与 Alias 或 Function 提供程序。</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>EXAMPLE 2</source>
          <target state="translated">示例 2</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>This command uses the Set<ph id="ph1">\-</ph>Item cmdlet to change the "prompt" function so that it displays the time before the path.</source>
          <target state="translated">此命令使用集<ph id="ph1">\-</ph>项 cmdlet 更改"prompt"函数，使其显示在路径之前的时间。</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>The change affects both the Definition and ScriptBlock properties of the FunctionInfo object.</source>
          <target state="translated">此更改将同时影响 FunctionInfo 对象的 Definition 和 ScriptBlock 属性。</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>To see the effect of the change, type "get<ph id="ph1">\-</ph>item <ph id="ph2">\-</ph>path function:prompt &amp;#124; format<ph id="ph3">\-</ph>list <ph id="ph4">\-</ph>property <ph id="ph5">\*</ph>".</source>
          <target state="translated">若要查看更改效果，请键入"获取<ph id="ph1">\-</ph>项 <ph id="ph2">\-</ph>路径函数︰ prompt &amp;#124;格式<ph id="ph3">\-</ph>列表 <ph id="ph4">\-</ph>属性 <ph id="ph5">\*</ph>"。</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>EXAMPLE 3</source>
          <target state="translated">示例 3</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>This command uses the Rename<ph id="ph1">\-</ph>Item cmdlet to change the name of the "help" function to "gh".</source>
          <target state="translated">此命令使用重命名<ph id="ph1">\-</ph>项 cmdlet 可将"help"函数的名称更改为"gh"。</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>Copying a Function</source>
          <target state="translated">复制函数</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>EXAMPLE 1</source>
          <target state="translated">示例 1</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>This command copies the "prompt" function to "oldPrompt", effectively creating a new name for the script block that is associated with the prompt function.</source>
          <target state="translated">此命令将“prompt”函数复制到“oldPrompt”，从而为与 prompt 函数相关联的脚本块高效创建一个新名称。</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>You can use this to save the original prompt function if you plan to change it.</source>
          <target state="translated">如果计划更改原始 prompt 函数，你可以使用此命令来保存该函数。</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>The Options property of the new function has a value of None.</source>
          <target state="translated">新函数的 Options 属性值为 None。</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>To change the value of the Options property, use Set<ph id="ph1">\-</ph>Item.</source>
          <target state="translated">若要更改 Options 属性的值，使用一组<ph id="ph1">\-</ph>项。</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>DYNAMIC PARAMETERS</source>
          <target state="translated">动态参数</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>Dynamic parameters are cmdlet parameters that are added by a Windows PowerShell provider and are available only when the cmdlet is being used in the provider<ph id="ph1">\-</ph>enabled drive.</source>
          <target state="translated">动态参数是 cmdlet 参数，仅当该 cmdlet 中使用的是提供程序时由 Windows PowerShell 提供程序，并且可以添加<ph id="ph1">\-</ph>启用驱动器。</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>Options <ph id="ph1">\&lt;</ph>System.Management.Automation.ScopedItemOptions</source>
          <target state="translated">选项 <ph id="ph1">\&lt;</ph>System.Management.Automation.ScopedItemOptions</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>Determines the value of the Options property of a function.</source>
          <target state="translated">确定函数的 Options 属性值。</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>Value</source>
          <target state="translated">值</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>Description</source>
          <target state="translated">说明</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>None</source>
          <target state="translated">无</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>No options.</source>
          <target state="translated">无选项。</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>"None" is the default.</source>
          <target state="translated">默认值为“None”。</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>Constant</source>
          <target state="translated">Constant</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>The function cannot be deleted, and its properties cannot be changed.</source>
          <target state="translated">无法删除该函数，也无法更改其属性。</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>Constant is available only when you are creating a function.</source>
          <target state="translated">Constant 仅在创建函数时才可用。</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>You cannot change the option of an existing function to Constant.</source>
          <target state="translated">不能将现有函数的选项更改为 Constant。</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>Private</source>
          <target state="translated">Private</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>The function is visible only in the current scope <ph id="ph1">\(</ph>not in child scopes<ph id="ph2">\)</ph>.</source>
          <target state="translated">仅在当前范围内可见的功能，是 <ph id="ph1">\(</ph>不在子作用域<ph id="ph2">\)</ph>。</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>ReadOnly</source>
          <target state="translated">ReadOnly</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>The properties of the function cannot be changed except by using the Force parameter.</source>
          <target state="translated">除非使用 Force 参数，否则无法更改该函数的属性。</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>You can use <bpt id="p1">[</bpt>Remove<ph id="ph1">\-</ph>Item &amp;#91;m2&amp;#93;<ept id="p1">](assetId:///f98b4219-60df-408b-bdc8-994f920fc7bd)</ept> to delete the function.</source>
          <target state="translated">您可以使用 <bpt id="p1">[</bpt>删除<ph id="ph1">\-</ph>项和 #91; m2 &amp;#93;<ept id="p1">](assetId:///f98b4219-60df-408b-bdc8-994f920fc7bd)</ept> 删除函数。</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>AllScope</source>
          <target state="translated">AllScope</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>The function is copied to any new scopes that are created.</source>
          <target state="translated">该函数将复制到创建的所有新作用域中。</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>Cmdlets supported:</source>
          <target state="translated">支持的 Cmdlet：</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>New<ph id="ph1">\-</ph>Item &amp;#91;m2&amp;#93;</source>
          <target state="translated">新<ph id="ph1">\-</ph>项和 #91; m2 &amp;#93;</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>Set<ph id="ph1">\-</ph>Item &amp;#91;m2&amp;#93;</source>
          <target state="translated">设置<ph id="ph1">\-</ph>项和 #91; m2 &amp;#93;</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>See Also</source>
          <target state="translated">另请参阅</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>about<ph id="ph1">\_</ph>Functions &amp;#91;m2&amp;#93;</source>
          <target state="translated">有关<ph id="ph1">\_</ph>函数 #91; m2 &amp;#93;</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>about<ph id="ph1">\_</ph>Providers</source>
          <target state="translated">有关<ph id="ph1">\_</ph>提供程序</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>