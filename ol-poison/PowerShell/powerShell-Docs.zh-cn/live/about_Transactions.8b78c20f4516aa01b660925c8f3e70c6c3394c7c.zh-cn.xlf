<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-cn">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-1c394fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1b308a177aea4263d03b8e69f98ee09611424178</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">reference\5.0\Microsoft.PowerShell.Core\About\about_Transactions.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions" />
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ef09f3238e08ce35d462babf100ea204758f66eb</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ac846c5c95f4aaa3f33229c0c736b5993735c5dd</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>about_Transactions</source>
          <target state="translated">about_Transactions</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>powershell, cmdlet</source>
          <target state="translated">powershell cmdlet</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>About Transactions</source>
          <target state="translated">有关事务</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>about_Transactions</source>
          <target state="translated">about_Transactions</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>about_Transactions</source>
          <target state="translated">about_Transactions</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>SHORT DESCRIPTION</source>
          <target state="translated">简短说明</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Describes how to manage transacted operations in Windows PowerShell.</source>
          <target state="translated">描述如何管理 Windows PowerShell 中的事务处理的操作。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>LONG DESCRIPTION</source>
          <target state="translated">详细说明</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Transactions are supported in Windows PowerShell beginning in Windows PowerShell 2.0.</source>
          <target state="translated">在 Windows PowerShell 开始在 Windows PowerShell 2.0 中支持事务。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>This feature enables you to start a transaction, to indicate which commands are part of the transaction, and to commit or roll back a transaction.</source>
          <target state="translated">此功能使您可以启动一个事务，以指示哪些命令的事务的一部分，以提交或回滚事务。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>ABOUT TRANSACTIONS</source>
          <target state="translated">有关事务</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>In Windows PowerShell, a transaction is a set of one or more commands that are managed as a logical unit.</source>
          <target state="translated">在 Windows PowerShell 中，事务是一组作为一个逻辑单元进行管理的一个或多个命令。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>A transaction can be completed ("committed"), which changes data affected by the transaction.</source>
          <target state="translated">事务可以是已完成 （"提交"），这会更改该事务影响的数据。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Or, a transaction can be completely undone ("rolled back") so that the affected data is not changed by the transaction.</source>
          <target state="translated">或者，事务可以是完全撤消 （"回滚"），以便不会由事务更改受影响的数据。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Because the commands in a transaction are managed as a unit, either all commands are committed, or all commands are rolled back.</source>
          <target state="translated">因为在事务中的命令作为一个单元管理，所有命令都都已提交，或者所有命令都都将都回滚。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Transactions are widely used in data processing, most notably in database operations and for financial transactions.</source>
          <target state="translated">数据处理，最值得注意的是在数据库操作和金融交易中被广泛使用的事务。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Transactions are most often used when the worst-case scenario for a set of commands is not that they all fail, but that some commands succeed while others fail, leaving the system in a damaged, false, or uninterpretable state that is difficult to repair.</source>
          <target state="translated">当一组命令坏的情况下不是它们全都会失败，但是，某些命令会成功，而其他人会失败，这么做损坏、 false 或 uninterpretable 状态中的系统，很难修复时，是最常用于事务。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>TRANSACTION CMDLETS</source>
          <target state="translated">事务 CMDLET</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Windows PowerShell includes several cmdlets designed for managing transactions.</source>
          <target state="translated">Windows PowerShell 中包含多个 cmdlet 专门用于管理事务。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Cmdlet                 Description</source>
          <target state="translated">Cmdlet 说明</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Start-Transaction      Starts a new transaction.</source>
          <target state="translated">开始事务启动新事务。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Use-Transaction        Adds a command or expression to the transaction.</source>
          <target state="translated">使用事务将添加的命令或对事务的表达式。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>The command must use transaction-enabled objects.</source>
          <target state="translated">该命令必须使用支持事务的对象。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Undo-Transaction       Rolls back the transaction so that no data is changed by the transaction.</source>
          <target state="translated">撤消事务回滚备份该事务，以便由事务更改没有数据。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Complete-Transaction   Commits the transaction.</source>
          <target state="translated">完成事务提交该事务。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>The data affected by the transaction is changed.</source>
          <target state="translated">更改该事务影响的数据。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Get-Transaction        Gets information about the active transaction.</source>
          <target state="translated">有关活动的事务获取事务获取的信息。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>For a list of transaction cmdlets, type:</source>
          <target state="translated">对于事务 cmdlet 的列表，请键入︰</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>get-command *transaction</source>
          <target state="translated">get 命令 * 事务</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>For detailed information about the cmdlets, type:</source>
          <target state="translated">有关 cmdlet 的详细信息，请键入︰</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>get-help &lt;cmdlet-name&gt; -detailed</source>
          <target state="translated">get-help &lt; t e &gt;-detailed</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>For example:</source>
          <target state="translated">例如：</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>get-help use-transaction -detailed</source>
          <target state="translated">获取帮助使用事务的详细</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>TRANSACTION-ENABLED ELEMENTS</source>
          <target state="translated">支持事务的元素</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>To participate in a transaction, both the cmdlet and the provider must support transactions.</source>
          <target state="translated">若要参与一个事务，该 cmdlet 和提供程序必须支持事务。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>This feature is built in to the objects that are affected by the transaction.</source>
          <target state="translated">此功能内置于该事务影响的对象。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>The Windows PowerShell Registry provider supports transactions in Windows Vista.</source>
          <target state="translated">Windows PowerShell Registry 提供程序在 Windows Vista 中支持事务。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>The TransactedString object (Microsoft.PowerShell.Commands.Management.TransactedString) works with any operating system that runs Windows PowerShell.</source>
          <target state="translated">与任何操作系统上运行 Windows PowerShell 配合使用 TransactedString 对象 (Microsoft.PowerShell.Commands.Management.TransactedString)。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Other Windows PowerShell providers can support transactions.</source>
          <target state="translated">其他 Windows PowerShell 提供程序可以支持事务。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>To find the Windows PowerShell providers in your session that support transactions, use the following command to find the "Transactions" value in the Capabilities property of providers:</source>
          <target state="translated">若要查找您支持事务的会话的 Windows PowerShell 提供程序，请使用以下命令可查找中提供的功能属性"的事务"值︰</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>get-psprovider | where {$_.Capabilities -like "transactions"}</source>
          <target state="translated">get psprovider |其中 {$_。功能-喜欢"的事务"}</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>For more information about a provider, see the Help for the provider.</source>
          <target state="translated">有关提供程序的详细信息，请参阅该提供程序的帮助。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>To get provider Help, type:</source>
          <target state="translated">若要获取提供程序的帮助，请键入︰</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>get-help &lt;provider-name&gt;</source>
          <target state="translated">get-help &lt; 提供程序名称 &gt;</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>For example, to get Help for the Registry provider, type:</source>
          <target state="translated">例如，若要获取有关 Registr 提供程序的帮助，请键入：</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>get-help registry</source>
          <target state="translated">获取帮助注册表</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>THE USETRANSACTION PARAMETER</source>
          <target state="translated">USETRANSACTION 参数</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Cmdlets that can support transactions have a UseTransaction parameter.</source>
          <target state="translated">可以支持事务的 Cmdlet 具有 UseTransaction 参数。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>This parameter includes the command in the active transaction.</source>
          <target state="translated">此参数在活动事务中包括该命令。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>You can use the full parameter name or its alias, "usetx".</source>
          <target state="translated">您可以使用完整参数名或其别名，"usetx"。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>The parameter can be used only when the session contains an active transaction.</source>
          <target state="translated">仅在此会话包含一个活动事务时，可以使用该参数。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>If you enter a command with the UseTransaction parameter when there is no active transaction, the command fails.</source>
          <target state="translated">如果没有活动事务时输入带有 UseTransaction 参数的命令，该命令将失败。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>To find cmdlets with the UseTransaction parameter, type:</source>
          <target state="translated">若要查找带有 UseTransaction 参数的 cmdlet，请键入︰</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>get-help * -parameter UseTransaction</source>
          <target state="translated">获取帮助 *-UseTransaction 参数</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>In Windows PowerShell core, all of the cmdlets designed to work with Windows PowerShell providers support transactions.</source>
          <target state="translated">在 Windows PowerShell 核心中的所有 cmdlet 用于处理 Windows PowerShell 提供程序来支持事务。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>As a result, you can use the provider cmdlets to manage transactions.</source>
          <target state="translated">因此，提供程序 cmdlet 可用于管理事务。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>For more information about Windows PowerShell providers, see about_Providers.</source>
          <target state="translated">有关 Windows PowerShell 提供程序的详细信息，请参阅 about_Providers。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>THE TRANSACTION OBJECT</source>
          <target state="translated">事务对象</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>Transactions are represented in Windows PowerShell by a transaction object, System.Management.Automation.Transaction.</source>
          <target state="translated">事务由事务对象，System.Management.Automation.Transaction 表示 Windows PowerShell 中。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>The object has the following properties:</source>
          <target state="translated">该对象具有以下属性︰</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>RollbackPreference: Contains the rollback preference set for the current transaction.</source>
          <target state="translated">RollbackPreference︰ 包含设置为当前事务的回滚首选项。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>You can set the rollback preference when you use Start-Transaction to start the transaction.</source>
          <target state="translated">当您使用 Start-transaction 启动事务时，您可以设置的回滚首选项。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>The rollback preference determines the conditions under which the transaction is rolled back automatically.</source>
          <target state="translated">回滚首选项决定在其下自动回滚事务的条件。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>Valid values are Error, TerminatingError, and Never.</source>
          <target state="translated">有效值为错误、 TerminatingError，和从不。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>The default value is Error.</source>
          <target state="translated">默认值为错误。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>Status: Contains the current status of the transaction.</source>
          <target state="translated">状态︰ 包含事务的当前状态。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>Valid values are Active, Committed, and RolledBack.</source>
          <target state="translated">有效值为活动、 已提交和已回滚。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>SubscriberCount: Contains the number of subscribers to the transaction.</source>
          <target state="translated">SubscriberCount︰ 包含对事务的订阅者的数量。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>A subscriber is added to a transaction when you start a transaction while another transaction is in progress.</source>
          <target state="translated">在另一个事务正在进行时启动事务时，将为事务添加订阅服务器。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>The subscriber count is decremented when a subscriber commits the transaction.</source>
          <target state="translated">在订阅服务器上提交事务时，订阅者计数会递减。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>ACTIVE TRANSACTIONS</source>
          <target state="translated">活动事务</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>In Windows PowerShell, only one transaction is active at a time, and you can manage only the active transaction.</source>
          <target state="translated">在 Windows PowerShell 中，一次只能有一个事务处于活动状态并且可以管理仅在活动事务。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>Multiple transactions can be in progress in the same session at the same time, but only the most-recently started transaction is active.</source>
          <target state="translated">多个事务可以是正在进行在同一会话中时相同，但仅最近启动的事务处于活动状态。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>As a result, you cannot specify a particular transaction when using the transaction cmdlets.</source>
          <target state="translated">因此，不能使用事务 cmdlet 时指定特定事务。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>Commands always apply to the active transaction.</source>
          <target state="translated">命令始终应用于活动的事务。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>This is most evident in the behavior of the Get-Transaction cmdlet.</source>
          <target state="translated">这是最为明显 Get-transaction cmdlet 的行为。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>When you enter a Get-Transaction command, Get-Transaction always gets only one transaction object.</source>
          <target state="translated">当您输入 Get-transaction 命令时，Get-transaction 始终可获得只有一个事务对象。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>This object is the object that represents the active transaction.</source>
          <target state="translated">此对象是表示活动事务的对象。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>To manage a different transaction, you must first finish the active transaction, either by committing it or rolling it back.</source>
          <target state="translated">若要管理不同的事务，必须首先完成活动事务，通过将其提交或回滚它。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>When you do this, the previous transaction becomes active automatically.</source>
          <target state="translated">执行此操作时，前面的事务将自动变为活动状态。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>Transactions become active in the reverse of order of which they are started, so that the most recently started transaction is always active.</source>
          <target state="translated">事务将变成中的启动的顺序的相反值处于活动状态，以便最最近启动事务始终处于活动状态。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>SUBSCRIBERS AND INDEPENDENT TRANSACTIONS</source>
          <target state="translated">订阅服务器和独立的事务</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>If you start a transaction while another transaction is in progress, by default, Windows PowerShell does not start a new transaction.</source>
          <target state="translated">如果您启动事务，而另一个事务正在进行，默认情况下，Windows PowerShell 不会启动新事务。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>Instead, it adds a "subscriber" to the current transaction.</source>
          <target state="translated">相反，它将"订户"添加到当前事务。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>When a transaction has multiple subscribers, a single Undo-Transaction command at any point rolls back the entire transaction for all subscribers.</source>
          <target state="translated">当事务具有多个订阅服务器时，任何时候单个 Undo-transaction 命令回滚所有订阅服务器的整个事务。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>However, to commit the transaction, you must enter a Complete-Transaction command for every subscriber.</source>
          <target state="translated">但是，若要提交该事务，必须为每个订阅服务器输入 Complete-transaction 命令。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>To find the number of subscribers to a transaction, check the SubscriberCount property of the transaction object.</source>
          <target state="translated">若要查找与事务的订阅者的数量，请检查的事务对象的 SubscriberCount 属性。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>For example, the following command uses the Get-Transaction cmdlet to get the value of the SubscriberCount property of the active transaction:</source>
          <target state="translated">例如，下面的命令使用 Get-transaction cmdlet 获取活动事务的 SubscriberCount 属性的值︰</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>(Get-Transaction).SubscriberCount</source>
          <target state="translated">（get-事务）。SubscriberCount</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>Adding a subscriber is the default behavior because most transactions that are started while another transaction is in progress are related to the original transaction.</source>
          <target state="translated">添加订阅服务器是默认行为，因为对原来的事务相关的大多数其他事务正在进行时启动的事务。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>In the typical model, a script that contains a transaction calls a helper script that contains its own transaction.</source>
          <target state="translated">在典型的模型中，一个包含事务脚本调用帮助程序脚本包含其自己的事务。</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>Because the transactions are related, they should be rolled back or committed as a unit.</source>
          <target state="translated">因为相关的事务，它们应回滚或作为一个单元提交。</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>However, you can start a transaction that is independent of the current transaction by using the Independent parameter of the Start-Transaction cmdlet.</source>
          <target state="translated">但是，可以开始使用 Start-transaction cmdlet 的 Independent 参数无关当前事务的事务。</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>When you start an independent transaction, Start-Transaction creates a new transaction object, and the new transaction becomes the active transaction.</source>
          <target state="translated">当你启动一个独立事务时，开始事务创建一个新的事务对象，和新的事务将成为活动事务。</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>The independent transaction can be committed or rolled back without affecting the original transaction.</source>
          <target state="translated">可以提交或回滚而不会影响原始事务独立事务。</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>When the independent transaction is finished (committed or rolled back), the original transaction becomes the active transaction again.</source>
          <target state="translated">在独立的事务完成 （提交或回滚后） 时，原始交易记录将成为活动的事务。</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>CHANGING DATA</source>
          <target state="translated">变化的数据</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>When you use transactions to change data, the data that is affected by the transaction is not changed until you commit the transaction.</source>
          <target state="translated">当使用事务来更改数据时，直到提交事务，也不会更改该事务影响数据。</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>However, the same data can be changed by commands that are not part of the transaction.</source>
          <target state="translated">但是，可以通过不是事务的一部分的命令更改相同的数据。</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>Keep this in mind when you are using transactions to manage shared data.</source>
          <target state="translated">在使用事务来管理共享的数据时，请记住这一点。</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>Typically, databases have mechanisms that lock the data while you are working on it, preventing other users, and other commands, scripts, and functions, from changing it.</source>
          <target state="translated">通常情况下，数据库已锁定的数据中工作时，阻止其他用户，其他命令、 脚本和函数，更改它的机制。</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>However, the lock is a feature of the database.</source>
          <target state="translated">但是，该锁是一项功能的数据库。</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>It is not related to transactions.</source>
          <target state="translated">它不与事务。</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>If you are working in a transaction-enabled file system or other data store, the data can be changed while the transaction is in progress.</source>
          <target state="translated">如果您正在支持事务的文件系统或其他数据存储区中，在事务处于正在进行中时，可以更改的数据。</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>EXAMPLES</source>
          <target state="translated">示例</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>The examples in this section use the Windows PowerShell Registry provider and assume that you are familiar with it.</source>
          <target state="translated">本部分中的示例使用 Windows PowerShell Registry 提供程序，并假定您已熟悉它。</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>For information about the Registry provider, type "get-help registry".</source>
          <target state="translated">有关注册表提供程序的信息，请键入"get-help 的注册表"。</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>EXAMPLE 1: COMMITTING A TRANSACTION</source>
          <target state="translated">示例 1︰ 提交事务</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>To create a transaction, use the Start-Transaction cmdlet.</source>
          <target state="translated">若要创建事务时，使用 Start-transaction cmdlet。</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>The following command starts a transaction with the default settings.</source>
          <target state="translated">以下命令启动事务，使用默认设置。</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>start-transaction</source>
          <target state="translated">开始事务</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>To include commands in the transaction, use the UseTransaction parameter of the cmdlet.</source>
          <target state="translated">若要在事务中包含的命令，使用该 cmdlet 的 UseTransaction 参数。</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>By default, commands are not included in the transaction,</source>
          <target state="translated">默认情况下，命令不包括在该事务中</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>For example, the following command, which sets the current location in the Software key of the HKCU: drive, is not included in the transaction.</source>
          <target state="translated">例如，以下命令，该命令将当前位置设置在软件密钥的 HKCU︰ 驱动器中，不包括在事务中。</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>cd hkcu:\Software</source>
          <target state="translated">cd hkcu: \software</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>The following command, which creates the MyCompany key, uses the UseTransaction parameter of the New-Item cmdlet to include the command in the active transaction.</source>
          <target state="translated">下面的命令来创建 MyCompany 项时，使用 UseTransaction 参数的 New-item cmdlet 将该命令包括在活动事务中。</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>new-item MyCompany -UseTransaction</source>
          <target state="translated">新项 MyCompany UseTransaction</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>The command returns an object that represents the new key, but because the command is part of the transaction, the registry is not yet changed.</source>
          <target state="translated">该命令返回一个对象，表示新的密钥，但该命令是事务的一部分，因为注册表尚未更改。</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>Hive: HKEY_CURRENT_USER\Software</source>
          <target state="translated">配置单元︰ HKEY_CURRENT_USER\Software</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>SKC  VC Name                           Property</source>
          <target state="translated">SKC VC Name 属性</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>0   0 MyCompany                      {}</source>
          <target state="translated">0 0 MyCompany {}</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>To commit the transaction, use the Complete-Transaction cmdlet.</source>
          <target state="translated">若要提交事务，使用 Complete-transaction cmdlet。</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>Because it always affects the active transaction, you cannot specify the transaction.</source>
          <target state="translated">因为它始终会影响活动的事务，不能指定事务。</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>complete-transaction</source>
          <target state="translated">完成事务</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>As a result, the MyCompany key is added to the registry.</source>
          <target state="translated">因此，MyCompany 项添加到注册表中。</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>dir m*</source>
          <target state="translated">dir m *</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>Hive: HKEY_CURRENT_USER\software</source>
          <target state="translated">配置单元︰ HKEY_CURRENT_USER\software</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>SKC  VC Name                           Property</source>
          <target state="translated">SKC VC Name 属性</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>83   1 Microsoft                      {(default)} 0   0 MyCompany                      {}</source>
          <target state="translated">83 1 Microsoft {（默认值）} 0 0 MyCompany {}</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>EXAMPLE 2: ROLLING BACK A TRANSACTION</source>
          <target state="translated">示例 2︰ 正在回滚事务</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>To create a transaction, use the Start-Transaction cmdlet.</source>
          <target state="translated">若要创建事务时，使用 Start-transaction cmdlet。</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>The following command starts a transaction with the default settings.</source>
          <target state="translated">以下命令启动事务，使用默认设置。</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>start-transaction</source>
          <target state="translated">开始事务</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>The following command, which creates the MyOtherCompany key, uses the UseTransaction parameter of the New-Item cmdlet to include the command in the active transaction.</source>
          <target state="translated">下面的命令来创建 MyOtherCompany 密钥，使用 UseTransaction 参数的 New-item cmdlet 将该命令包括在活动事务中。</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>new-item MyOtherCompany -UseTransaction</source>
          <target state="translated">新项 MyOtherCompany UseTransaction</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>The command returns an object that represents the new key, but because the command is part of the transaction, the registry is not yet changed.</source>
          <target state="translated">该命令返回一个对象，表示新的密钥，但该命令是事务的一部分，因为注册表尚未更改。</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>Hive: HKEY_CURRENT_USER\Software</source>
          <target state="translated">配置单元︰ HKEY_CURRENT_USER\Software</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>SKC  VC Name                           Property</source>
          <target state="translated">SKC VC Name 属性</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>0   0 MyOtherCompany                 {}</source>
          <target state="translated">0 0 MyOtherCompany {}</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>To roll back the transaction, use the Undo-Transaction cmdlet.</source>
          <target state="translated">若要回滚事务，使用 Undo-transaction cmdlet。</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>Because it always affects the active transaction, you do not specify the transaction.</source>
          <target state="translated">因为它始终会影响活动的事务，则不要指定事务。</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source>Undo-transaction</source>
          <target state="translated">撤消事务</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source>The result is that the MyOtherCompany key is not added to the registry.</source>
          <target state="translated">结果是 MyOtherCompany 密钥不会添加到注册表。</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source>dir m*</source>
          <target state="translated">dir m *</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source>Hive: HKEY_CURRENT_USER\software</source>
          <target state="translated">配置单元︰ HKEY_CURRENT_USER\software</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source>SKC  VC Name                           Property</source>
          <target state="translated">SKC VC Name 属性</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source>83   1 Microsoft                      {(default)} 0   0 MyCompany                      {}</source>
          <target state="translated">83 1 Microsoft {（默认值）} 0 0 MyCompany {}</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve">
          <source>EXAMPLE 3: PREVIEWING A TRANSACTION</source>
          <target state="translated">示例 3︰ 预览事务</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source>Typically, the commands used in a transaction change data.</source>
          <target state="translated">通常情况下，事务中使用的命令更改数据。</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source>However, the commands that get data are useful in a transaction, too, because they get data inside of the transaction.</source>
          <target state="translated">但是，获取数据的命令是在事务中，也很有用，因为它们会获得事务内的数据。</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source>This provides a preview of the changes that committing the transaction would cause.</source>
          <target state="translated">这提供了预览提交事务会导致的更改。</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve">
          <source>The following example shows how to use the Get-ChildItem command (the alias is "dir") to preview the changes in a transaction.</source>
          <target state="translated">下面的示例演示如何使用 Get-childitem 命令 （别名为"dir"） 来预览事务中的更改。</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve">
          <source>The following command starts a transaction.</source>
          <target state="translated">以下命令启动一个事务。</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve">
          <source>start-transaction</source>
          <target state="translated">开始事务</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve">
          <source>The following command uses the New-ItemProperty cmdlet to add the MyKey registry entry to the MyCompany key.</source>
          <target state="translated">下面的命令使用 New-itemproperty cmdlet 将 MyKey 注册表项添加到 MyCompany 项。</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve">
          <source>The command uses the UseTransaction parameter to include the command in the transaction.</source>
          <target state="translated">该命令使用 UseTransaction 参数将该命令包括在事务中。</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve">
          <source>new-itemproperty -path MyCompany -Name MyKey -value 123 -UseTransaction</source>
          <target state="translated">新 itemproperty-路径 MyCompany-名称 mykey 派生而来的值 123-UseTransaction</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve">
          <source>The command returns an object representing the new registry entry, but the registry entry is not changed.</source>
          <target state="translated">该命令返回一个对象，表示新的注册表项，但不是更改注册表项。</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve">
          <source>MyKey</source>
          <target state="translated">MyKey</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve">
          <source>123</source>
          <target state="translated">123</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve">
          <source>To get the items that are currently in the registry, use a Get-ChildItem command ("dir") without the UseTransaction parameter.</source>
          <target state="translated">若要获取当前在注册表中的项，请使用 Get-childitem 命令 ("dir")，而不使用 UseTransaction 参数。</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve">
          <source>The following command gets items that begin with "M."</source>
          <target state="translated">以下命令将获取项的开头"M"。</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve">
          <source>dir m*</source>
          <target state="translated">dir m *</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve">
          <source>The result shows that no entries have yet been added to the MyCompany key.</source>
          <target state="translated">结果显示尚未添加任何条目到 MyCompany 项。</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve">
          <source>Hive: HKEY_CURRENT_USER\Software</source>
          <target state="translated">配置单元︰ HKEY_CURRENT_USER\Software</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve">
          <source>SKC  VC Name                           Property</source>
          <target state="translated">SKC VC Name 属性</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve">
          <source>83   1 Microsoft                      {(default)} 0   0 MyCompany                      {}</source>
          <target state="translated">83 1 Microsoft {（默认值）} 0 0 MyCompany {}</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve">
          <source>To preview the effect of committing the transaction, enter a Get-ChildItem ("dir") command with the UseTransaction parameter.</source>
          <target state="translated">若要预览提交事务的效果，通过输入带有 UseTransaction 参数的 Get-childitem ("dir") 命令。</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve">
          <source>This command has a view of the data from within the transaction.</source>
          <target state="translated">此命令的事务中从数据的视图。</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve">
          <source>dir m* -useTransaction</source>
          <target state="translated">dir m *-useTransaction</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve">
          <source>The result shows that, if the transaction is committed, the MyKey entry will be added to the MyCompany key.</source>
          <target state="translated">结果显示，是否事务是提交，MyKey 条目将会添加到 MyCompany 项。</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve">
          <source>Hive: HKEY_CURRENT_USER\Software</source>
          <target state="translated">配置单元︰ HKEY_CURRENT_USER\Software</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve">
          <source>SKC  VC Name                           Property</source>
          <target state="translated">SKC VC Name 属性</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve">
          <source>83   1 Microsoft                      {(default)} 0   1 MyCompany                      {MyKey}</source>
          <target state="translated">83 1 Microsoft {（默认值）} 0 1 MyCompany {MyKey}</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve">
          <source>EXAMPLE 4: COMBINING TRANSACTED AND NON-TRANSACTED COMMANDS</source>
          <target state="translated">示例 4︰ 将事务处理和非事务处理命令结合使用</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve">
          <source>You can enter non-transacted commands during a transaction.</source>
          <target state="translated">您可以在事务期间输入非事务处理命令。</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve">
          <source>The non-transacted commands affect the data immediately, but they do not affect the transaction.</source>
          <target state="translated">非事务处理命令会立即影响的数据，但它们不影响该事务。</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve">
          <source>The following command starts a transaction in the HKCU:\Software registry key.</source>
          <target state="translated">下面的命令在 hkcu: \software 注册表项中启动一个事务。</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve">
          <source>start-transaction</source>
          <target state="translated">开始事务</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve">
          <source>The next three commands use the New-Item cmdlet to add keys to the registry.</source>
          <target state="translated">接下来三个命令使用 New-item cmdlet 将密钥添加到注册表。</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve">
          <source>The first and third commands use the UseTransaction parameter to include the commands in the transaction.</source>
          <target state="translated">第一个和第三个命令使用 UseTransaction 参数在命令包括在事务中。</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve">
          <source>The second command omits the parameter.</source>
          <target state="translated">第二个命令省略该参数。</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve">
          <source>Because the second command is not included in the transaction, it is effective immediately.</source>
          <target state="translated">由于第二个命令未包括在事务中，因此它将立即生效。</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve">
          <source>new-item MyCompany1 -UseTransaction</source>
          <target state="translated">新项 MyCompany1 UseTransaction</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve">
          <source>new-item MyCompany2</source>
          <target state="translated">新项 MyCompany2</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve">
          <source>new-item MyCompany3 -UseTransaction</source>
          <target state="translated">新项 MyCompany3 UseTransaction</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve">
          <source>To view the current state of the registry, use a Get-ChildItem ("dir") command without the UseTransaction parameter.</source>
          <target state="translated">若要查看注册表的当前状态，请使用 Get-childitem ("dir") 命令而不使用 UseTransaction 参数。</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve">
          <source>This command gets items that begin with "M."</source>
          <target state="translated">此命令将获取项的开头"M"。</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve">
          <source>dir m*</source>
          <target state="translated">dir m *</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve">
          <source>The result shows that the MyCompany2 key is added to the registry, but the MyCompany1 and MyCompany3 keys, which are part of the transaction, are not added.</source>
          <target state="translated">结果显示 MyCompany2 密钥添加到注册表中，但 MyCompany1 和 MyCompany3 键，后者是事务的一部分，不会添加。</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve">
          <source>Hive: HKEY_CURRENT_USER\Software</source>
          <target state="translated">配置单元︰ HKEY_CURRENT_USER\Software</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve">
          <source>SKC  VC Name                           Property</source>
          <target state="translated">SKC VC Name 属性</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve">
          <source>83   1 Microsoft                      {(default)} 0    0 MyCompany2                     {}</source>
          <target state="translated">83 1 Microsoft {（默认值）} 0 0 MyCompany2 {}</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve">
          <source>The following command commits the transaction.</source>
          <target state="translated">以下命令提交事务。</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve">
          <source>complete-transaction</source>
          <target state="translated">完成事务</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve">
          <source>Now, the keys that were added as part of the transaction appear in the registry.</source>
          <target state="translated">现在，已作为事务的一部分添加的键出现在注册表中。</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve">
          <source>dir m*</source>
          <target state="translated">dir m *</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve">
          <source>Hive: HKEY_CURRENT_USER\Software</source>
          <target state="translated">配置单元︰ HKEY_CURRENT_USER\Software</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve">
          <source>SKC  VC Name                           Property</source>
          <target state="translated">SKC VC Name 属性</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve">
          <source>83   1 Microsoft                      {(default)} 0    0 MyCompany1                     {} 0    0 MyCompany2                     {} 0    0 MyCompany3                     {}</source>
          <target state="translated">83 1 Microsoft {（默认值）} 0 0 MyCompany1 {} 0 0 MyCompany2 {} 0 0 MyCompany3 {}</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve">
          <source>EXAMPLE 5: USING AUTOMATIC ROLLBACK</source>
          <target state="translated">示例 5︰ 使用自动回滚</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve">
          <source>When a command in a transaction generates an error of any kind, the transaction is automatically rolled back.</source>
          <target state="translated">当在事务中的命令生成任何种类的错误时，自动回滚事务。</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve">
          <source>This default behavior is designed for scripts that run transactions.</source>
          <target state="translated">此默认行为专为运行事务的脚本。</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve">
          <source>Scripts are typically well tested and include error-handling logic, so errors are not expected and should terminate the transaction.</source>
          <target state="translated">脚本通常不仅经过测试，并且包括错误处理逻辑，因此错误会不可用，并应终止该事务。</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve">
          <source>The first command starts a transaction in the HKCU:\Software registry key.</source>
          <target state="translated">第一个命令在 hkcu: \software 注册表项中启动一个事务。</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve">
          <source>start-transaction</source>
          <target state="translated">开始事务</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve">
          <source>The following command uses the New-Item cmdlet to add the MyCompany key to the registry.</source>
          <target state="translated">下面的命令使用 New-item cmdlet 将 MyCompany 项添加到注册表。</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve">
          <source>The command uses the UseTransaction parameter (the alias is "usetx") to include the command in the transaction.</source>
          <target state="translated">该命令使用 UseTransaction 参数 （别名为"usetx"） 将该命令包括在事务中。</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve">
          <source>New-Item MyCompany -UseTX</source>
          <target state="translated">新项 MyCompany UseTX</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve">
          <source>Because the MyCompany key already exists in the registry, the command fails, and the transaction is rolled back.</source>
          <target state="translated">因为在注册表中已存在的 MyCompany 项，该命令将失败，并回滚事务。</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve">
          <source>New-Item : A key at this path already exists At line:1 char:9</source>
          <target state="translated">新项目︰ 在此路径密钥已存在行︰ 1 char: 9</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve">
          <source>new-item &lt;&lt;&lt;&lt;  MyCompany -usetx</source>
          <target state="translated">新项 &lt;&lt;&lt;&lt; MyCompany usetx</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve">
          <source>A Get-Transaction command confirms that the transaction has been rolled back and that the SubscriberCount is 0.</source>
          <target state="translated">Get-transaction 命令确认事务回滚后 SubscriberCount 为 0。</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve">
          <source>RollbackPreference   SubscriberCount   Status</source>
          <target state="translated">RollbackPreference SubscriberCount 状态</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve">
          <source>Error                0                 RolledBack</source>
          <target state="translated">错误 0 已回滚</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve">
          <source>EXAMPLE 6: CHANGING THE ROLLBACK PREFERENCE</source>
          <target state="translated">示例 6︰ 更改的回滚首选项</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve">
          <source>If you want the transaction to be more error tolerant, you can use the RollbackPreference parameter of Start-Transaction to change the preference.</source>
          <target state="translated">如果您想要是容错的多个错误的事务，可以使用 Start-transaction 的 RollbackPreference 参数来更改首选项。</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve">
          <source>The following command starts a transaction with a rollback preference of "Never".</source>
          <target state="translated">下面的命令回滚首选项为"Never"以启动事务。</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve">
          <source>start-transaction -rollbackpreference Never</source>
          <target state="translated">rollbackpreference 永远不会启动事务</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve">
          <source>In this case, when the command fails, the transaction is not automatically rolled back.</source>
          <target state="translated">在这种情况下，当该命令失败时，不自动回滚事务。</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve">
          <source>New-Item MyCompany -UseTX</source>
          <target state="translated">新项 MyCompany UseTX</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve">
          <source>New-Item : A key at this path already exists At line:1 char:9</source>
          <target state="translated">新项目︰ 在此路径密钥已存在行︰ 1 char: 9</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve">
          <source>new-item &lt;&lt;&lt;&lt;  MyCompany -usetx</source>
          <target state="translated">新项 &lt;&lt;&lt;&lt; MyCompany usetx</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve">
          <source>Because the transaction is still active, you can resubmit the command as part of the transaction.</source>
          <target state="translated">因为该事务仍处于活动状态，可以重新提交该命令作为事务的一部分。</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve">
          <source>New-Item MyOtherCompany -UseTX</source>
          <target state="translated">新项 MyOtherCompany UseTX</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve">
          <source>EXAMPLE 7: USING THE USE-TRANSACTION CMDLET</source>
          <target state="translated">示例 7︰ 使用 USE-TRANSACTION CMDLET</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve">
          <source>The Use-Transaction cmdlet enables you to do direct scripting against transaction-enabled Microsoft .NET Framework  objects.</source>
          <target state="translated">Use-transaction cmdlet 可以执行直接针对事务启用 Microsoft.NET Framework 对象编写脚本。</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve">
          <source>Use-Transaction takes a script block that can only contain commands and expressions that use transaction-enabled .NET Framework objects, such as instances of the Microsoft.PowerShell.Commands.Management.TransactedString class.</source>
          <target state="translated">使用事务将命令和使用支持事务的.NET Framework 对象，如 Microsoft.PowerShell.Commands.Management.TransactedString 类的实例的表达式只能包含一个脚本块。</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve">
          <source>The following command starts a transaction.</source>
          <target state="translated">以下命令启动一个事务。</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve">
          <source>start-transaction</source>
          <target state="translated">开始事务</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve">
          <source>The following New-Object command creates an instance of the TransactedString class and saves it in the $t variable.</source>
          <target state="translated">下面的 New-object 命令创建 TransactedString 类的实例，并将其保存在 $t 变量。</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve">
          <source>$t = New-Object Microsoft.PowerShell.Commands.Management.TransactedString</source>
          <target state="translated">$t = New-object Microsoft.PowerShell.Commands.Management.TransactedString</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve">
          <source>The following command uses the Append method of the TransactedString object to add text to the string.</source>
          <target state="translated">下面的命令使用 TransactedString 对象的 Append 方法将文本添加到该字符串。</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve">
          <source>Because the command is not part of the transaction, the change is effective immediately.</source>
          <target state="translated">由于该命令不是事务的一部分，那么更改将立即生效。</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve">
          <source>$t.append("Windows")</source>
          <target state="translated">$t.append("Windows")</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve">
          <source>The following command uses the same Append method to add text, but it adds the text as part of the transaction.</source>
          <target state="translated">下面的命令使用相同的 Append 方法添加文本，但它将文本添加作为事务的一部分。</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve">
          <source>The command is enclosed in braces, and it is set as the value of the ScriptBlock parameter of Use-Transaction.</source>
          <target state="translated">该命令括在大括号，和它被设置为使用事务在 ScriptBlock 参数的值。</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve">
          <source>The UseTransaction parameter (UseTx) is required.</source>
          <target state="translated">UseTransaction 参数 (UseTx) 是必需的。</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve">
          <source>use-transaction {$t.append(" PowerShell")} -usetx</source>
          <target state="translated">使用事务 {$t.append ("PowerShell")} usetx</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve">
          <source>To see the current content of the transacted string in $t, use the ToString method of the TransactedString object.</source>
          <target state="translated">若要查看 $t 中的事务处理字符串的当前内容，请使用 TransactedString 对象的 ToString 方法。</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve">
          <source>$t.tostring()</source>
          <target state="translated">$t.tostring()</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve">
          <source>The output shows that only the non-transacted changes are effective.</source>
          <target state="translated">该输出显示仅非事务处理的更改将生效。</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve">
          <source>Windows</source>
          <target state="translated">Windows</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve">
          <source>To see the current content of the transacted string in $t from within the transaction, embed the expression in a Use-Transaction command.</source>
          <target state="translated">若要查看在事务中从 $t 中的事务处理字符串的当前内容，请在使用事务命令中嵌入表达式。</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve">
          <source>use-transaction {$s.tostring()} -usetx</source>
          <target state="translated">使用事务 {$s.tostring()} usetx</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve">
          <source>The output shows the transaction view.</source>
          <target state="translated">该输出显示事务视图。</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve">
          <source>Windows PowerShell</source>
          <target state="translated">Windows PowerShell</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve">
          <source>The following command commits the transaction.</source>
          <target state="translated">以下命令提交事务。</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve">
          <source>complete-transaction</source>
          <target state="translated">完成事务</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve">
          <source>To see the final string:</source>
          <target state="translated">若要查看最终的字符串︰</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve">
          <source>$t.tostring()</source>
          <target state="translated">$t.tostring()</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve">
          <source>Windows PowerShell</source>
          <target state="translated">Windows PowerShell</target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve">
          <source>EXAMPLE 7: MANAGING MULTI-SUBSCRIBER TRANSACTIONS</source>
          <target state="translated">示例 7︰ 管理多订阅者事务</target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve">
          <source>When you start a transaction while another transaction is in progress, Windows PowerShell does not create a second transaction by default.</source>
          <target state="translated">另一个事务正在进行时，事务启动时，Windows PowerShell 不默认情况下创建第二个事务。</target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve">
          <source>Instead, it adds a subscriber to the current transaction.</source>
          <target state="translated">相反，它将订阅服务器添加到当前事务。</target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve">
          <source>This example shows how to view and manage a multi-subscriber transaction.</source>
          <target state="translated">此示例演示如何查看和管理多订阅者事务。</target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve">
          <source>Begin by starting a transaction in the HKCU:\Software key.</source>
          <target state="translated">首先在 hkcu: \software 项中启动事务。</target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve">
          <source>start-transaction</source>
          <target state="translated">开始事务</target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve">
          <source>The following command uses the Get-Transaction command to get the active transaction.</source>
          <target state="translated">下面的命令使用 Get-transaction 命令获取活动事务。</target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve">
          <source>get-transaction</source>
          <target state="translated">获取事务</target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve">
          <source>The result shows the object that represents the active transaction.</source>
          <target state="translated">结果显示该对象表示在活动事务。</target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve">
          <source>RollbackPreference   SubscriberCount   Status</source>
          <target state="translated">RollbackPreference SubscriberCount 状态</target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve">
          <source>Error                1                 Active</source>
          <target state="translated">错误 1 活动</target>       </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve">
          <source>The following command adds the MyCompany key to the registry.</source>
          <target state="translated">下面的命令将 MyCompany 项添加到注册表。</target>       </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve">
          <source>The command  uses the UseTransaction parameter to include the command in the transaction.</source>
          <target state="translated">该命令使用 UseTransaction 参数将该命令包括在事务中。</target>       </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve">
          <source>new-item MyCompany -UseTransaction</source>
          <target state="translated">新项 MyCompany UseTransaction</target>       </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve">
          <source>The following command uses the Start-Transaction command to start a transaction.</source>
          <target state="translated">下面的命令使用 Start-transaction 命令启动事务。</target>       </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve">
          <source>Although this command is typed at the command prompt, this scenario is more likely to happen when you run a script that contains a transaction.</source>
          <target state="translated">尽管在命令提示符下键入此命令，这种情况下是更有可能发生这种情况时运行脚本，其中包含一个事务。</target>       </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve">
          <source>start-transaction</source>
          <target state="translated">开始事务</target>       </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve">
          <source>A Get-Transaction command shows that the subscriber count on the transaction object is incremented.</source>
          <target state="translated">Get-transaction 命令显示事务对象则订阅者计数将递增。</target>       </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve">
          <source>The value is now 2.</source>
          <target state="translated">现在，值为 2。</target>       </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve">
          <source>RollbackPreference   SubscriberCount   Status</source>
          <target state="translated">RollbackPreference SubscriberCount 状态</target>       </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve">
          <source>Error                2                 Active</source>
          <target state="translated">错误 2 活动</target>       </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve">
          <source>The next command uses the New-ItemProperty cmdlet to add the MyKey registry entry to the MyCompany key.</source>
          <target state="translated">下一个命令使用 New-itemproperty cmdlet 将 MyKey 注册表项添加到 MyCompany 项。</target>       </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve">
          <source>It uses the UseTransaction parameter to include the command in the transaction.</source>
          <target state="translated">它使用 UseTransaction 参数将该命令包括在事务中。</target>       </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve">
          <source>new-itemproperty -path MyCompany -name MyKey -UseTransaction</source>
          <target state="translated">新 itemproperty-路径 MyCompany-命名 MyKey UseTransaction</target>       </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve">
          <source>The MyCompany key does not exist in the registry, but this command succeeds because the two commands are part of the same transaction.</source>
          <target state="translated">在注册表中，MyCompany 项不存在，但此命令将成功，因为这两个命令都属于同一个事务。</target>       </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve">
          <source>The following command commits the transaction.</source>
          <target state="translated">以下命令提交事务。</target>       </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve">
          <source>If it rolled back the transaction, the transaction would be rolled back for all the subscribers.</source>
          <target state="translated">如果回滚事务，事务将回滚所有订阅服务器。</target>       </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve">
          <source>complete-transaction</source>
          <target state="translated">完成事务</target>       </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve">
          <source>A Get-Transaction command shows that the subscriber count on the transaction object is 1, but the value of Status is still Active (not Committed).</source>
          <target state="translated">Get-transaction 命令显示事务对象上的订阅者计数为 1，但状态的值仍处于活动状态 （未提交）。</target>       </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve">
          <source>RollbackPreference   SubscriberCount   Status</source>
          <target state="translated">RollbackPreference SubscriberCount 状态</target>       </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve">
          <source>Error                1                 Active</source>
          <target state="translated">错误 1 活动</target>       </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve">
          <source>To finish committing the transaction, enter a second Complete- Transaction command.</source>
          <target state="translated">若要完成提交事务后，输入第二条 Complete-transaction 命令。</target>       </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve">
          <source>To commit a multi-subscriber transaction, you must enter one Complete-Transaction command for each Start-Transaction command.</source>
          <target state="translated">若要提交多订阅者事务，必须为每个 Start-transaction 命令输入一个 Complete-transaction 命令。</target>       </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve">
          <source>complete-transaction</source>
          <target state="translated">完成事务</target>       </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve">
          <source>Another Get-Transaction command shows that the transaction has been committed.</source>
          <target state="translated">另一个 Get-transaction 命令显示已提交事务。</target>       </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve">
          <source>RollbackPreference   SubscriberCount   Status</source>
          <target state="translated">RollbackPreference SubscriberCount 状态</target>       </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve">
          <source>Error                0                 Committed</source>
          <target state="translated">0 提交错误</target>       </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve">
          <source>EXAMPLE 8: MANAGING INDEPENDENT TRANSACTIONS</source>
          <target state="translated">示例 8︰ 管理独立事务</target>       </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve">
          <source>When you start a transaction while another transaction is in progress, you can use the Independent parameter of Start-Transaction to make the new transaction independent of the original transaction.</source>
          <target state="translated">另一个事务正在进行时，事务启动时，可以使用 Start-transaction 的 Independent 参数以使新的事务独立于原始事务。</target>       </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve">
          <source>When you do, Start-Transaction creates a new transaction object and makes the new transaction the active transaction.</source>
          <target state="translated">在执行时，开始事务创建新的事务对象，并使活动事务的新事务。</target>       </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve">
          <source>Begin by starting a transaction in the HKCU:\Software key.</source>
          <target state="translated">首先在 hkcu: \software 项中启动事务。</target>       </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve">
          <source>start-transaction</source>
          <target state="translated">开始事务</target>       </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve">
          <source>The following command uses the Get-Transaction command to get the active transaction.</source>
          <target state="translated">下面的命令使用 Get-transaction 命令获取活动事务。</target>       </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve">
          <source>get-transaction</source>
          <target state="translated">获取事务</target>       </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve">
          <source>The result shows the object that represents the active transaction.</source>
          <target state="translated">结果显示该对象表示在活动事务。</target>       </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve">
          <source>RollbackPreference   SubscriberCount   Status</source>
          <target state="translated">RollbackPreference SubscriberCount 状态</target>       </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve">
          <source>Error                1                 Active</source>
          <target state="translated">错误 1 活动</target>       </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve">
          <source>The following command adds the MyCompany registry key as part of the transaction.</source>
          <target state="translated">下面的命令将 MyCompany 注册表项添加为该事务的一部分。</target>       </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve">
          <source>It uses the UseTransaction parameter (UseTx) to include the command in the active transaction.</source>
          <target state="translated">它使用 UseTransaction 参数 (UseTx) 将该命令包括在活动事务中。</target>       </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve">
          <source>new-item MyCompany -use</source>
          <target state="translated">新项 MyCompany 的使用</target>       </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve">
          <source>The following command starts a new transaction.</source>
          <target state="translated">以下命令启动一个新事务。</target>       </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve">
          <source>The command uses the Independent parameter to indicate that this transaction is not a subscriber to the active transaction.</source>
          <target state="translated">该命令使用 Independent 参数以指示此事务不是活动的事务的订阅服务器。</target>       </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve">
          <source>start-transaction -independent</source>
          <target state="translated">开始事务的独立</target>       </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve">
          <source>When you create an independent transaction, the new (most-recently created) transaction becomes the active transaction.</source>
          <target state="translated">在创建独立的事务时，新 （最近创建） 的事务将成为活动事务。</target>       </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve">
          <source>You can use a Get-Transaction command to get the active transaction.</source>
          <target state="translated">Get-transaction 命令可用于获取活动事务。</target>       </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve">
          <source>get-transaction</source>
          <target state="translated">获取事务</target>       </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve">
          <source>Note that the SubscriberCount of the transaction is 1, indicating that there are no other subscribers and that the transaction is new.</source>
          <target state="translated">请注意在事务 SubscriberCount 为 1，指示存在不为任何其他订阅服务器，并且该事务是新。</target>       </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve">
          <source>RollbackPreference   SubscriberCount   Status</source>
          <target state="translated">RollbackPreference SubscriberCount 状态</target>       </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve">
          <source>Error                1                 Active</source>
          <target state="translated">错误 1 活动</target>       </trans-unit>
        <trans-unit id="412" translate="yes" xml:space="preserve">
          <source>The new transaction must be finished (either committed or rolled back) before you can manage the original transaction.</source>
          <target state="translated">新的事务之前必须先完成 （提交或回滚后） 可以管理原来的事务。</target>       </trans-unit>
        <trans-unit id="413" translate="yes" xml:space="preserve">
          <source>The following command adds the MyOtherCompany key to the registry.</source>
          <target state="translated">以下命令向注册表添加 MyOtherCompany 键。</target>       </trans-unit>
        <trans-unit id="414" translate="yes" xml:space="preserve">
          <source>It uses the UseTransaction parameter (UseTx) to include the command in the active transaction.</source>
          <target state="translated">它使用 UseTransaction 参数 (UseTx) 将该命令包括在活动事务中。</target>       </trans-unit>
        <trans-unit id="415" translate="yes" xml:space="preserve">
          <source>new-item MyOtherCompany -usetx</source>
          <target state="translated">新项 MyOtherCompany usetx</target>       </trans-unit>
        <trans-unit id="416" translate="yes" xml:space="preserve">
          <source>Now, roll back the transaction.</source>
          <target state="translated">现在，回滚事务。</target>       </trans-unit>
        <trans-unit id="417" translate="yes" xml:space="preserve">
          <source>If there were a single transaction with two subscribers, rolling back the transaction would roll back the entire transaction for all the subscribers.</source>
          <target state="translated">如果有两个订阅服务器的单个事务，回滚事务将回滚整个事务用于所有订阅服务器。</target>       </trans-unit>
        <trans-unit id="418" translate="yes" xml:space="preserve">
          <source>However, because these transactions are independent, rolling back the newest transaction cancels the registry changes and makes the original transaction the active transaction.</source>
          <target state="translated">但是，由于这些事务都是独立的回滚最新事务，取消注册表更改，并使原始事务活动事务。</target>       </trans-unit>
        <trans-unit id="419" translate="yes" xml:space="preserve">
          <source>undo-transaction</source>
          <target state="translated">撤消事务</target>       </trans-unit>
        <trans-unit id="420" translate="yes" xml:space="preserve">
          <source>A Get-Transaction command confirms that the original transaction is still active in the session.</source>
          <target state="translated">Get-transaction 命令确认原来的事务是在会话中仍处于活动状态。</target>       </trans-unit>
        <trans-unit id="421" translate="yes" xml:space="preserve">
          <source>get-transaction</source>
          <target state="translated">获取事务</target>       </trans-unit>
        <trans-unit id="422" translate="yes" xml:space="preserve">
          <source>RollbackPreference   SubscriberCount   Status</source>
          <target state="translated">RollbackPreference SubscriberCount 状态</target>       </trans-unit>
        <trans-unit id="423" translate="yes" xml:space="preserve">
          <source>Error                1                 Active</source>
          <target state="translated">错误 1 活动</target>       </trans-unit>
        <trans-unit id="424" translate="yes" xml:space="preserve">
          <source>The following command commits the active transaction.</source>
          <target state="translated">下面的命令将提交活动事务。</target>       </trans-unit>
        <trans-unit id="425" translate="yes" xml:space="preserve">
          <source>complete-transaction</source>
          <target state="translated">完成事务</target>       </trans-unit>
        <trans-unit id="426" translate="yes" xml:space="preserve">
          <source>A Get-ChildItem command shows that the registry has been changed.</source>
          <target state="translated">Get-childitem 命令显示注册表已更改。</target>       </trans-unit>
        <trans-unit id="427" translate="yes" xml:space="preserve">
          <source>dir m*</source>
          <target state="translated">dir m *</target>       </trans-unit>
        <trans-unit id="428" translate="yes" xml:space="preserve">
          <source>Hive: HKEY_CURRENT_USER\Software</source>
          <target state="translated">配置单元︰ HKEY_CURRENT_USER\Software</target>       </trans-unit>
        <trans-unit id="429" translate="yes" xml:space="preserve">
          <source>SKC  VC Name                           Property</source>
          <target state="translated">SKC VC Name 属性</target>       </trans-unit>
        <trans-unit id="430" translate="yes" xml:space="preserve">
          <source>83   1 Microsoft                      {(default)} 0   0 MyCompany                      {}</source>
          <target state="translated">83 1 Microsoft {（默认值）} 0 0 MyCompany {}</target>       </trans-unit>
        <trans-unit id="431" translate="yes" xml:space="preserve">
          <source>SEE ALSO</source>
          <target state="translated">另请参阅</target>       </trans-unit>
        <trans-unit id="432" translate="yes" xml:space="preserve">
          <source>Start-Transaction Get-Transaction Complete-Transaction Undo-Transaction Use-Transaction Registry (provider) about_Providers Get-PSProvider Get-ChildItem</source>
          <target state="translated">开始事务 Get-transaction Complete-transaction 撤消事务使用事务注册表 （提供程序） about_Providers Get-psprovider Get-childitem</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>