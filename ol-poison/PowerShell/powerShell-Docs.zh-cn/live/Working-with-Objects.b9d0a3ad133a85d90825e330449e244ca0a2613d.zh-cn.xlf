<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-cn">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-56a7a5e" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">a25734261fdcf657d0b97b1f037580f89b04881d</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">scripting\getting-started\cookbooks\Working-with-Objects.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions" />
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">e2a62a34bcbd56a4c8bed81bd15a09a3fa699ccb</xliffext:olskeletonhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Working with Objects</source>
          <target state="translated">使用对象</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>powershell,cmdlet</source>
          <target state="translated">powershell,cmdlet</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Working with Objects</source>
          <target state="translated">使用对象</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>We have discussed how Windows PowerShell uses objects to transfer data between cmdlets, and demonstrated a few ways to view detailed information about objects by using Get<ph id="ph1">\-</ph>Member and Format cmdlets to view particular properties of objects.</source>
          <target state="translated">我们已讨论了 Windows PowerShell 如何使用对象在 cmdlet 之间传输数据，并通过使用 Get<ph id="ph1">\-</ph>Member 和 Format cmdlet 查看对象的特定属性演示了几种查看有关对象详细信息的方法。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>The power of objects is that they provide you with access to a lot of complex data, and it is already correlated.</source>
          <target state="translated">对象可以为你提供访问大量复杂数据的权限，并且该权限已关联。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>With some simple techniques you can further manipulate objects to do even more work.</source>
          <target state="translated">通过一些简单的技术，你可以进一步操作对象来完成更多工作。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>We are going to look at some specific types of objects and ways you can manipulate them in this chapter.</source>
          <target state="translated">本章我们将介绍几种特定类型的对象，以及这些对象的操作方法。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>