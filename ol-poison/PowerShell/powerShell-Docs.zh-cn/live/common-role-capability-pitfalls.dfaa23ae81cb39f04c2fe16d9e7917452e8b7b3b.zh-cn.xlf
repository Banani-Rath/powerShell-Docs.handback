<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-cn">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-56a7a5e" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">0e221c840f083ce0b8ecbcbb34c184bcdbc0c73e</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">jea\common-role-capability-pitfalls.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions" />
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">b3a075124e9e18286c8fe824e358e32c4405d838</xliffext:olskeletonhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>powershell,cmdlet,jea</source>
          <target state="translated">powershell,cmdlet,jea</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>common role capability pitfalls</source>
          <target state="translated">角色功能的常见问题</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Common Role Capability Pitfalls</source>
          <target state="translated">角色功能的常见问题</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>You may run into a few common pitfalls into you go through this process yourself.</source>
          <target state="translated">你自己完成此过程时，可能遇到一些常见问题。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Here is a quick guide explaining how to identify and remediate these issues when modifying or creating a new endpoint:</source>
          <target state="translated">以下是一个快速指南，阐释了修改或创建新的终结点时如何确定并修正这些问题：</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Functions vs. Cmdlets</source>
          <target state="translated">函数与Cmdlet</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>PowerShell commands written in PowerShell are PowerShell Functions.</source>
          <target state="translated">在 PowerShell 中编写的 PowerShell 命令即 PowerShell 函数。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>PowerShell commands written as specialized .NET classes are PowerShell Cmdlets.</source>
          <target state="translated">作为为专用 .NET 类编写的 PowerShell 命令即 PowerShell Cmdlet。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>You can check the command type by running <ph id="ph1">`Get-Command`</ph>.</source>
          <target state="translated">你可以通过运行 <ph id="ph1">`Get-Command`</ph> 来检查命令类型。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>VisibleProviders</source>
          <target state="translated">VisibleProviders</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>You will need to expose any providers your commands need.</source>
          <target state="translated">你将需要公开命令需要的任意提供程序。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>The most common is the FileSystem provider, but you may also need to expose others, like the Registry provider.</source>
          <target state="translated">最常见的是 FileSystem 提供程序，但你可能还需要公开其他提供程序，如 Registry 提供程序。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>For an introduction to providers, check out this <bpt id="p1">[</bpt>Hey, Scripting Guy blog post<ept id="p1">](http://blogs.technet.com/b/heyscriptingguy/archive/2015/04/20/find-and-use-windows-powershell-providers.aspx)</ept>.</source>
          <target state="translated">有关提供程序的简介，请参阅这篇 <bpt id="p1">[</bpt>Hey, Scripting Guy<ept id="p1">](http://blogs.technet.com/b/heyscriptingguy/archive/2015/04/20/find-and-use-windows-powershell-providers.aspx)</ept>（你好，脚本专家）博客文章。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Be careful when exposing providers -- often, it is better to define your own function that works with the underlying providers than to directly expose the provider in a JEA session.</source>
          <target state="translated">请谨慎公开提供程序 -- 通常，最好定义适用于基础提供程序的函数，而不是在 JEA 会话中直接公开提供程序。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>This way, you can still allow users to work with files, registry keys, etc. but retain control over <bpt id="p1">**</bpt>which<ept id="p1">**</ept> files and registry keys they can work with using custom validation logic.</source>
          <target state="translated">这样一来，你仍可允许用户使用文件、注册表项等，但保留了对其可使用自定义验证逻辑处理<bpt id="p1">**</bpt>哪些<ept id="p1">**</ept>文件和注册表项的控制权。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>