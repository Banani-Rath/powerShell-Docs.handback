<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-cn">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-1c394fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">5d5a54092fee0107e4660f9852f585714b852907</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">reference\5.0\Microsoft.PowerShell.Management\Start-Transaction.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions" />
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1c3978f68110688e768814057107145c6ea772d0</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">61a6b48e1b3a7adcf774ff7ce6fe3a5919d45e9f</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>powershell, cmdlet</source>
          <target state="translated">powershell cmdlet</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Start-Transaction</source>
          <target state="translated">Start-Transaction</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Start-Transaction</source>
          <target state="translated">Start-Transaction</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>SYNOPSIS</source>
          <target state="translated">简述</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Starts a transaction.</source>
          <target state="translated">启动事务。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>SYNTAX</source>
          <target state="translated">语法</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>DESCRIPTION</source>
          <target state="translated">说明</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>Start-Transaction<ept id="p1">**</ept> cmdlet starts a transaction, which is a series of commands that are managed as a unit.</source>
          <target state="translated"> <bpt id="p1">**</bpt>Start-transaction<ept id="p1">**</ept> cmdlet 启动事务，这是一系列命令作为一个单元进行管理。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>A transaction can be completed, or committed.</source>
          <target state="translated">可以完成，或已提交事务。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Alternatively, it can be completely undone, or rolled back, so that any data changed by the transaction is restored to its original state.</source>
          <target state="translated">或者，它可以是完全撤消或回滚，以便由事务更改的任何数据还原到其原始状态。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Because the commands in a transaction are managed as a unit, either all commands are committed or all commands are rolled back.</source>
          <target state="translated">由于事务中的命令作为一个单元进行管理，因此所有命令不是全部提交就是全部回滚。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>By default, if any command in the transaction generates an error, transactions are rolled back automatically.</source>
          <target state="translated">默认情况下，如果事务中的任何命令生成一个错误，事务将自动回滚。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>You can use the <bpt id="p1">*</bpt>RollbackPreference<ept id="p1">*</ept> parameter to change this behavior.</source>
          <target state="translated">您可以使用 <bpt id="p1">*</bpt>RollbackPreference<ept id="p1">*</ept> 参数来更改此行为。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>The cmdlets used in a transaction must be designed to support transactions.</source>
          <target state="translated">事务中使用的 cmdlet 必须设计为支持事务。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Cmdlets that support transactions have a <bpt id="p1">*</bpt>UseTransaction<ept id="p1">*</ept> parameter.</source>
          <target state="translated">支持事务的 Cmdlet 具有 <bpt id="p1">*</bpt>UseTransaction<ept id="p1">*</ept> 参数。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>To perform transactions in a provider, the provider must support transactions.</source>
          <target state="translated">若要通过提供程序执行事务，则该提供程序必须支持事务。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>The Windows PowerShell Registry provider in Windows Vista and later versions of the Windows operating system supports transactions.</source>
          <target state="translated">Windows Vista 和更高版本的 Windows 操作系统中的 Windows PowerShell Registry 提供程序支持事务。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>You can also use the <bpt id="p1">**</bpt>Microsoft.PowerShell.Commands.Management.TransactedString<ept id="p1">**</ept> class to include expressions in transactions on any version of the Windows system that supports Windows PowerShell.</source>
          <target state="translated">您还可以使用 <bpt id="p1">**</bpt>Microsoft.PowerShell.Commands.Management.TransactedString<ept id="p1">**</ept> 类，以在任何版本的支持 Windows PowerShell 的 Windows 系统上的事务中包含表达式。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Other Windows PowerShell providers can also support transactions.</source>
          <target state="translated">其他 Windows PowerShell 提供程序也可以支持事务。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Only one transaction can be active at a time.</source>
          <target state="translated">一次只能有一个事务处于活动状态。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>If you start a new, independent transaction while a transaction is in progress, the new transaction becomes the active transaction, and you must commit or roll back the new transaction before you make any changes to the original transaction.</source>
          <target state="translated">如果您启动新的独立事务，事务正在进行时，新的事务将成为活动事务，并必须提交或回滚新事务之前对原始事务进行任何更改。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Start-Transaction<ept id="p1">**</ept> cmdlet is one of a set of cmdlets that support the transactions feature in Windows PowerShell.</source>
          <target state="translated"><bpt id="p1">**</bpt>开始事务<ept id="p1">**</ept> cmdlet 是一组 Windows PowerShell 中支持事务功能的 cmdlet 之一。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>For more information, see about_Transactions.</source>
          <target state="translated">有关详细信息，请参阅 about_Transactions。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>EXAMPLES</source>
          <target state="translated">示例</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Example 1: Start and roll back a transaction</source>
          <target state="translated">示例 1︰ 启动和回滚的事务</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>These commands start and then roll back a transaction.</source>
          <target state="translated">这些命令先启动事务，然后回滚事务。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Because the transaction is rolled back, no changes are made to the registry.</source>
          <target state="translated">由于回滚了事务，因此未对注册表进行更改。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Example 2: Start and complete a transaction</source>
          <target state="translated">示例 2︰ 启动和完成事务</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>These commands start and then complete a transaction.</source>
          <target state="translated">这些命令先启动事务，然后完成事务。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>No changes are made to the registry until the <bpt id="p1">**</bpt>Complete-Transaction<ept id="p1">**</ept> command is used.</source>
          <target state="translated">对直到注册表进行任何更改 <bpt id="p1">**</bpt>Complete-transaction<ept id="p1">**</ept> 使用命令。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Example 3: Use different rollback preferences</source>
          <target state="translated">示例 3︰ 使用不同的回滚首选项</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>This example demonstrates the effect of changing the <bpt id="p1">*</bpt>RollbackPreference<ept id="p1">*</ept> parameter value.</source>
          <target state="translated">此示例说明如何更改的效果 <bpt id="p1">*</bpt>RollbackPreference<ept id="p1">*</ept> 参数值。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>In the first set of commands, <bpt id="p1">**</bpt>Start-Transaction<ept id="p1">**</ept> does not use <bpt id="p2">*</bpt>RollbackPreference<ept id="p2">*</ept>.</source>
          <target state="translated">在第一组命令， <bpt id="p1">**</bpt>Start-transaction<ept id="p1">**</ept> 不使用 <bpt id="p2">*</bpt>RollbackPreference<ept id="p2">*</ept>。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>As a result, the default value (Error) is used.</source>
          <target state="translated">因此，使用默认值 （错误）。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>When an error occurs in a transaction command, that is, the specified path does not exist, the transaction is automatically rolled back.</source>
          <target state="translated">当事务命令发生错误时，也就是说，指定的路径不存在，该事务会自动回滚。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>In the second set of commands, <bpt id="p1">**</bpt>Start-Transaction<ept id="p1">**</ept> uses <bpt id="p2">*</bpt>RollbackPreference<ept id="p2">*</ept> with a value of Never.</source>
          <target state="translated">在第二个集中的命令， <bpt id="p1">**</bpt>Start-transaction<ept id="p1">**</ept> 使用 <bpt id="p2">*</bpt>RollbackPreference<ept id="p2">*</ept> Never 值。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>As a result, when an error occurs in a transaction command, the transaction is still active and can be completed successfully.</source>
          <target state="translated">因此当事务命令发生错误时，事务仍处于活动状态并且可以成功完成。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Because most transactions must be performed without error, the default value of <bpt id="p1">*</bpt>RollbackPreference<ept id="p1">*</ept> is typically preferred.</source>
          <target state="translated">因为没有错误，默认值，必须执行的多数事务 <bpt id="p1">*</bpt>RollbackPreference<ept id="p1">*</ept> 通常是首选的。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Example 4: Use this cmdlet while a transaction is in progress</source>
          <target state="translated">示例 4︰ 使用此 cmdlet 在事务执行过程正在进行中</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>This example shows the effect of using <bpt id="p1">**</bpt>Start-Transaction<ept id="p1">**</ept> while a transaction is in progress.</source>
          <target state="translated">此示例演示使用的效果 <bpt id="p1">**</bpt>Start-transaction<ept id="p1">**</ept> 事务正在进行时。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>The effect is much like joining the transaction in progress.</source>
          <target state="translated">这与加入正在执行的事务的效果非常类似。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Although this is a simplified command, this scenario frequently occurs when the transaction involves running a script that includes a complete transaction.</source>
          <target state="translated">虽然这是简化的命令，这种情况下会在该事务涉及到运行包含完整的事务的脚本时频繁出现。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>The first <bpt id="p1">**</bpt>Start-Transaction<ept id="p1">**</ept> command starts the transaction.</source>
          <target state="translated">第一个 <bpt id="p1">**</bpt>Start-transaction<ept id="p1">**</ept> 命令将启动事务。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>The first <bpt id="p1">**</bpt>New-Item<ept id="p1">**</ept> command is part of the transaction.</source>
          <target state="translated">第一个 <bpt id="p1">**</bpt>New-item<ept id="p1">**</ept> 命令是事务的一部分。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>The second <bpt id="p1">**</bpt>Start-Transaction<ept id="p1">**</ept> command adds a new subscriber to the transaction.</source>
          <target state="translated">第二个 <bpt id="p1">**</bpt>Start-transaction<ept id="p1">**</ept> 命令将新的订阅服务器添加到该事务。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>Get-Transaction<ept id="p1">**</ept> command now returns a transaction with a subscriber count of 2.</source>
          <target state="translated"> <bpt id="p1">**</bpt>Get-transaction<ept id="p1">**</ept> 命令立即返回订阅者计数为 2 的事务。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>The second <bpt id="p1">**</bpt>New-Item<ept id="p1">**</ept> command is part of the same transaction.</source>
          <target state="translated">第二个 <bpt id="p1">**</bpt>New-item<ept id="p1">**</ept> 命令是在同一个事务的一部分。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>No changes are made to the registry until the whole transaction is completed.</source>
          <target state="translated">整个事务完成之前，将对注册表不进行任何更改。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>To complete the transaction, you must enter two <bpt id="p1">**</bpt>Complete-Transaction<ept id="p1">**</ept> commands, one for each subscriber.</source>
          <target state="translated">若要完成事务，必须输入两个 <bpt id="p1">**</bpt>Complete-transaction<ept id="p1">**</ept> 命令时，一个用于每个订阅服务器。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>If you were to roll back the transaction at any point, all the transaction would be rolled back for both subscribers.</source>
          <target state="translated">如果您打算在任何时刻回滚事务，所有事务将都回滚对这两个订阅服务器。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Example 5: Start an independent transaction while one is in progress</source>
          <target state="translated">示例 5︰ 启动独立的事务时有正在进行</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>This example shows the effect of using the <bpt id="p1">*</bpt>Independent<ept id="p1">*</ept> parameter of <bpt id="p2">**</bpt>Start-Transaction<ept id="p2">**</ept> to start a transaction while another transaction is in progress.</source>
          <target state="translated">此示例演示使用的效果 <bpt id="p1">*</bpt>独立<ept id="p1">*</ept> 参数 <bpt id="p2">**</bpt>Start-transaction<ept id="p2">**</ept> 启动事务，同时另一个事务正在进行。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>In this case, the new transaction is rolled back without affecting the original transaction.</source>
          <target state="translated">在本例中，将回滚新事务，而不影响原来的事务。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Although the transactions are logically independent, because only one transaction can be active at a time, you must roll back or commit the newest transaction before resuming work on the original transaction.</source>
          <target state="translated">虽然事务在逻辑上是独立的，但由于一次只能有一个事务处于活动状态，因此你必须回滚或提交最新事务，然后才能继续处理原来的事务。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>The first set of commands starts a transaction.</source>
          <target state="translated">第一组命令启动一个事务。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>New-Item<ept id="p1">**</ept> command is part of the first transaction.</source>
          <target state="translated"> <bpt id="p1">**</bpt>New-item<ept id="p1">**</ept> 命令是在第一个事务的一部分。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>In the second set of commands, the <bpt id="p1">**</bpt>Start-Transaction<ept id="p1">**</ept> command uses the <bpt id="p2">*</bpt>Independent<ept id="p2">*</ept> parameter.</source>
          <target state="translated">在第二个集中的命令， <bpt id="p1">**</bpt>Start-transaction<ept id="p1">**</ept> 命令使用 <bpt id="p2">*</bpt>独立<ept id="p2">*</ept> 参数。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>Get-Transaction<ept id="p1">**</ept> command that follows shows the transaction object for the active transaction, which is the newest one.</source>
          <target state="translated"> <bpt id="p1">**</bpt>Get-transaction<ept id="p1">**</ept> 后面的命令显示活动事务，这是最新的事务对象。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>The subscriber count is equal to 1, that shows that the transactions are unrelated.</source>
          <target state="translated">订阅者计数等于 1，表明，事务是不相关。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>When the active transaction is rolled back by using an <bpt id="p1">**</bpt>Undo-Transaction<ept id="p1">**</ept> command, the original transaction becomes active again.</source>
          <target state="translated">当活动的事务将回滚使用 <bpt id="p1">**</bpt>撤消事务<ept id="p1">**</ept> 命令时，原始事务将再次变为活动状态。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>New-ItemProperty<ept id="p1">**</ept> command, which is part of the original transaction, finishes without error, and the original transaction can be completed by using the <bpt id="p2">**</bpt>Complete-Transaction<ept id="p2">**</ept> command.</source>
          <target state="translated"> <bpt id="p1">**</bpt>New-itemproperty<ept id="p1">**</ept> 命令，它是在原始事务的一部分，完成未生成错误，并在原始事务可以通过使用完成 <bpt id="p2">**</bpt>Complete-transaction<ept id="p2">**</ept> 命令。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>As a result, the registry is changed.</source>
          <target state="translated">因此注册表会发生更改。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>Example 6: Run commands that are not part of a transaction</source>
          <target state="translated">示例 6︰ 运行不是事务的一部分的命令</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>This example demonstrates that commands that are submitted while a transaction is in progress can be included in the transaction or not included.</source>
          <target state="translated">此示例演示了在事务正在执行时提交的命令可以包含在事务中，也可以不包含在事务中。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>Only commands that use the <bpt id="p1">*</bpt>UseTransaction<ept id="p1">*</ept> parameter are part of the transaction.</source>
          <target state="translated">只有命令使用 <bpt id="p1">*</bpt>UseTransaction<ept id="p1">*</ept> 参数是事务的一部分。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>The first and third <bpt id="p1">**</bpt>New-Item<ept id="p1">**</ept> commands use the <bpt id="p2">*</bpt>UseTransaction<ept id="p2">*</ept> parameter.</source>
          <target state="translated">第一个和第三个 <bpt id="p1">**</bpt>New-item<ept id="p1">**</ept> 命令使用 <bpt id="p2">*</bpt>UseTransaction<ept id="p2">*</ept> 参数。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>These commands are part of the transaction.</source>
          <target state="translated">这两个命令都包含在事务中。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>Because the second <bpt id="p1">**</bpt>New-Item<ept id="p1">**</ept> command does not use the <bpt id="p2">*</bpt>UseTransaction<ept id="p2">*</ept> parameter, it is not part of the transaction.</source>
          <target state="translated">因为第二个 <bpt id="p1">**</bpt>New-item<ept id="p1">**</ept> 命令不使用 <bpt id="p2">*</bpt>UseTransaction<ept id="p2">*</ept> 参数，它不是事务的一部分。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>The first dir command shows the effect.</source>
          <target state="translated">第一个 dir 命令显示的效果。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>The second <bpt id="p1">**</bpt>New-Item<ept id="p1">**</ept> command is completed immediately, but the first and third <bpt id="p2">**</bpt>New-Item<ept id="p2">**</ept> commands are not effective until the transaction is committed.</source>
          <target state="translated">第二个 <bpt id="p1">**</bpt>New-item<ept id="p1">**</ept> 命令是已完成，但第一个和第三个 <bpt id="p2">**</bpt>New-item<ept id="p2">**</ept> 提交事务之前，可能不是有效的命令。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>Complete-Transaction<ept id="p1">**</ept> command commits the transaction.</source>
          <target state="translated"> <bpt id="p1">**</bpt>Complete-transaction<ept id="p1">**</ept> 命令提交该事务。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>As a result, the second dir command shows that all of the new items are added to the registry.</source>
          <target state="translated">因此，第二个的 dir 命令显示的所有新项添加到注册表。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>Example 7: Roll back a transaction that does not finish in a specified time</source>
          <target state="translated">示例 7︰ 回滚在一段指定时间内未完成的事务</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>This command uses the <bpt id="p1">*</bpt>Timeout<ept id="p1">*</ept> parameter of <bpt id="p2">**</bpt>Start-Transaction<ept id="p2">**</ept> to start a transaction that must be completed within two minutes.</source>
          <target state="translated">此命令使用 <bpt id="p1">*</bpt>超时<ept id="p1">*</ept> 参数 <bpt id="p2">**</bpt>Start-transaction<ept id="p2">**</ept> 开始必须在两分钟内完成的事务。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>If the transaction is not finished when the time-out expires, it is rolled back automatically.</source>
          <target state="translated">如果超时过期时，未完成事务，它将自动回滚。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>When the time-out expires, you are not notified, but the <bpt id="p1">**</bpt>Status<ept id="p1">**</ept> property of the transaction object is set to RolledBack and commands that use the <bpt id="p2">*</bpt>UseTransaction<ept id="p2">*</ept> parameter fail.</source>
          <target state="translated">当超时到期时，将不会通知您，但 <bpt id="p1">**</bpt>状态<ept id="p1">**</ept> 事务对象的属性将设置为 RolledBack 和命令使用 <bpt id="p2">*</bpt>UseTransaction<ept id="p2">*</ept> 参数失败。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>PARAMETERS</source>
          <target state="translated">参数</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>-Confirm</source>
          <target state="translated">-Confirm</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>Prompts you for confirmation before running the cmdlet.Prompts you for confirmation before running the cmdlet.</source>
          <target state="translated">将提示您在运行 cmdlet 前进行确认。将提示您在运行 cmdlet 前进行确认。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>-Independent</source>
          <target state="translated">独立于</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>Indicates that this cmdlet starts a transaction that is independent of any transactions in progress.</source>
          <target state="translated">指示此 cmdlet 开始都是独立的正在进行的任何事务的事务。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>By default, if you use <bpt id="p1">**</bpt>Start-Transaction<ept id="p1">**</ept> while another transaction is in progress, a new subscriber is added to the transaction in progress.</source>
          <target state="translated">默认情况下，如果您使用 <bpt id="p1">**</bpt>Start-transaction<ept id="p1">**</ept> 正在进行另一个事务时，新的订阅服务器添加到正在执行的事务。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>This parameter has an effect only when a transaction is already in progress in the session.</source>
          <target state="translated">仅当会话中已经在执行某项事务时，此参数才有效。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>By default, if you use <bpt id="p1">**</bpt>Start-Transaction<ept id="p1">**</ept> while a transaction is in progress, the existing transaction object is reused and the subscriber count is incremented.</source>
          <target state="translated">默认情况下，如果您使用 <bpt id="p1">**</bpt>Start-transaction<ept id="p1">**</ept> 事务时，重复使用现有的事务对象，订阅者计数会递增。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>The effect is much like joining the original transaction.</source>
          <target state="translated">这与加入原来事务的效果非常类似。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>An Undo-Transaction command rolls back the whole the transaction.</source>
          <target state="translated">Undo-transaction 命令回滚整个事务。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>To complete the transaction, you must enter a Complete-Transaction command for each subscriber.</source>
          <target state="translated">若要完成事务，则必须为每个订阅者输入一个 Complete-Transaction 命令。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>Because most transactions that are in progress at the same time are related, the default is sufficient for most uses.</source>
          <target state="translated">因为同时执行的多数事务都是相关的，所以默认设置可满足大多数用途的要求。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>If you specify the <bpt id="p1">*</bpt>Independent<ept id="p1">*</ept> parameter, this cmdlet creates a new transaction that can be completed or undone without affecting the original transaction.</source>
          <target state="translated">如果指定 <bpt id="p1">*</bpt>独立<ept id="p1">*</ept> 参数时，此 cmdlet 创建新的事务，可以完成或撤消而不会影响原来的事务。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>However, because only one transaction can be active at a time, you must complete or roll back the new transaction before resuming work on the original transaction.</source>
          <target state="translated">但是，由于一次只能有一个事务处于活动状态，因此必须完成或回滚新事务，然后才能继续处理原来的事务。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>-RollbackPreference</source>
          <target state="translated">-RollbackPreference</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>Specifies the conditions under which a transaction is automatically rolled back.</source>
          <target state="translated">指定自动回滚事务的条件。</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>The acceptable values for this parameter are:</source>
          <target state="translated">此参数的可接受的值是：</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>Error.</source>
          <target state="translated">出现错误。</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>The transaction is rolled back automatically if a terminating or non-terminating error occurs.</source>
          <target state="translated">当发生终止错误或非终止错误时，自动回滚事务。</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>TerminatingError.</source>
          <target state="translated">TerminatingError。</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>The transaction is rolled back automatically if a terminating error occurs.</source>
          <target state="translated">当发生终止错误时，自动回滚事务。</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>Never.</source>
          <target state="translated">永远不会。</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>The transaction is never rolled back automatically.</source>
          <target state="translated">从不自动回滚事务。</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>The default value is Error.</source>
          <target state="translated">默认值为错误。</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>-Timeout</source>
          <target state="translated">超时</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>Specifies the maximum time, in minutes, that the transaction is active.</source>
          <target state="translated">指定事务处于活动状态的最长时间，以分钟为单位。</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>When the time-out expires, the transaction is automatically rolled back.</source>
          <target state="translated">当该超时到期时，将自动回滚事务。</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>By default, there is no time-out for transactions that are started at the command line.</source>
          <target state="translated">默认情况下，在命令行启动的事务没有超时值。</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>When transactions are started by a script, the default time-out is 30 minutes.</source>
          <target state="translated">如果事务由脚本启动，则默认超时值为 30 分钟。</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>-WhatIf</source>
          <target state="translated">-WhatIf</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>Shows what would happen if the cmdlet runs.</source>
          <target state="translated">显示如果运行 cmdlet 则会发生什么情况。</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>The cmdlet is not run.Shows what would happen if the cmdlet runs.</source>
          <target state="translated">该 cmdlet 不会运行。显示在 cmdlet 运行时，会发生什么情况。</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>The cmdlet is not run.</source>
          <target state="translated">cmdlet 未运行。</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>CommonParameters</source>
          <target state="translated">CommonParameters</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutVariable, -OutBuffer, -PipelineVariable, -Verbose, -WarningAction, and -WarningVariable.</source>
          <target state="translated">此 cmdlet 支持以下常见参数:-调试-ErrorAction、-ErrorVariable、-InformationAction、-InformationVariable、-OutVariable、-OutBuffer、-PipelineVariable、-Verbose、-WarningAction 和-WarningVariable。</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>For more information, see about_CommonParameters (http://go.microsoft.com/fwlink/?LinkID=113216).</source>
          <target state="translated">有关详细信息，请参阅 about_CommonParameters (http://go.microsoft.com/fwlink/?LinkID=113216)。</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>INPUTS</source>
          <target state="translated">输入</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>None</source>
          <target state="translated">无</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>You cannot pipe input to this cmdlet.</source>
          <target state="translated">不能通过管道将输入传递给此 cmdlet。</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>OUTPUTS</source>
          <target state="translated">输出</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>None</source>
          <target state="translated">无</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>This cmdlet does not generate any output.</source>
          <target state="translated">此 cmdlet 将不生成任何输出。</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>NOTES</source>
          <target state="translated">说明</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>RELATED LINKS</source>
          <target state="translated">相关的链接</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>Complete-Transaction</source>
          <target state="translated">Complete-Transaction</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>Get-Transaction</source>
          <target state="translated">Get-Transaction</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>Undo-Transaction</source>
          <target state="translated">Undo-Transaction</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>Use-Transaction</source>
          <target state="translated">Use-Transaction</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>