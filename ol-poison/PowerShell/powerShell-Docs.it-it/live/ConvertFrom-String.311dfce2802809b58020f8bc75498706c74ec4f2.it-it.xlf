<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="it-it">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-1c394fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">4b887b04a42e3ed4a34c3149eb926434b2812073</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">reference\5.0\Microsoft.PowerShell.Utility\ConvertFrom-String.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions" />
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">bc139ae602e803d12e36303954502ffa7ba98dd3</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">12eb81c1f67bac207762a69fe821c7b8403f44b5</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>powershell, cmdlet</source>
          <target state="translated">cmdlet PowerShell</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>ConvertFrom-String</source>
          <target state="translated">ConvertFrom-stringa</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>ConvertFrom-String</source>
          <target state="translated">ConvertFrom-stringa</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>SYNOPSIS</source>
          <target state="translated">RIEPILOGO</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Extracts and parses structured objects from string content.</source>
          <target state="translated">Estrae e analizza oggetti strutturati dal contenuto della stringa.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>SYNTAX</source>
          <target state="translated">SINTASSI</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>ByDelimiter (Default)</source>
          <target state="translated">ByDelimiter (impostazione predefinita)</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>TemplateParsing</source>
          <target state="translated">TemplateParsing</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>DESCRIPTION</source>
          <target state="translated">DESCRIZIONE</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>ConvertFrom-String<ept id="p1">**</ept> cmdlet extracts and parses structured objects from string content.</source>
          <target state="translated">Il <bpt id="p1">**</bpt>ConvertFrom-stringa<ept id="p1">**</ept> cmdlet estrae e analizza oggetti strutturati dal contenuto della stringa.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>This cmdlet generates an object by parsing text from a traditional text stream.</source>
          <target state="translated">Questo cmdlet genera un oggetto mediante l'analisi di testo da un flusso di testo tradizionale.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>For each string in the pipeline, the cmdlet splits the input by either a delimiter or a parse expression, and then assigns property names to each of the resulting split elements.</source>
          <target state="translated">Per ogni stringa nella pipeline, il cmdlet suddivide l'input da un delimitatore o un'espressione di analisi e quindi assegna i nomi delle proprietà a ogni risultante dividere gli elementi.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>You can provide these property names; if you do not, they are automatically generated for you.</source>
          <target state="translated">È possibile fornire questi nomi di proprietà. in caso contrario, vengono automaticamente generati automaticamente.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>The cmdlet's default parameter set, <bpt id="p1">*</bpt>ByDelimiter<ept id="p1">*</ept>, splits exactly on the regular expression delimiter.</source>
          <target state="translated">Parametro predefinito del cmdlet set, <bpt id="p1">*</bpt>ByDelimiter<ept id="p1">*</ept>, divide esattamente nel delimitatore di espressione regolare.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>It does not perform quote matching or delimiter escaping as the Import-Csv cmdlet does.</source>
          <target state="translated">Non esegue offerta corrispondenti o delimitatore escape come avviene con il cmdlet Import-Csv.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>The cmdlet's alternate parameter set, <bpt id="p1">*</bpt>TemplateParsing<ept id="p1">*</ept>, generates elements from the groups that are captured by a regular expression.</source>
          <target state="translated">Impostare parametri alternativi del cmdlet, <bpt id="p1">*</bpt>TemplateParsing<ept id="p1">*</ept>, genera gli elementi dai gruppi che sono stati acquisiti da un'espressione regolare.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>This cmdlet supports two modes: basic delimited parsing, and automatically-generated, example-driven parsing.</source>
          <target state="translated">Questo cmdlet supporta due modalità: basic delimitato l'analisi e l'analisi di esempio basato su generato automaticamente.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Delimited parsing, by default, splits the input at white space, and assigns property names to the resulting groups.</source>
          <target state="translated">L'analisi delimitata divide l'input per impostazione predefinita in corrispondenza di spazi vuoti e assegna i nomi delle proprietà ai gruppi risultanti.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>You can customize the delimiter by piping the <bpt id="p1">**</bpt>ConvertFrom-String<ept id="p1">**</ept> results into one of the Format-<bpt id="p2">*</bpt> cmdlets, or you can use the <ept id="p2">*</ept>Delimiter* parameter.</source>
          <target state="translated">È possibile personalizzare il delimitatore piping il <bpt id="p1">**</bpt>ConvertFrom-stringa<ept id="p1">**</ept> risultati in un formato-<bpt id="p2">*</bpt> cmdlet oppure è possibile utilizzare il <ept id="p2">*</ept>delimitatore * parametro.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>The cmdlet also supports automatically-generated, example-driven parsing based on the <bpt id="p1">**</bpt>FlashExtract<ept id="p1">**</ept> research work by Microsoft Researchhttp://research.microsoft.com/.</source>
          <target state="translated">Il cmdlet supporta inoltre generati automaticamente, basata sull'esempio di analisi in base il <bpt id="p1">**</bpt>FlashExtract<ept id="p1">**</ept> la ricerca di lavoro di Microsoft Researchhttp://research.microsoft.com/.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>EXAMPLES</source>
          <target state="translated">ESEMPI</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Example 1: Generate an object with default property names</source>
          <target state="translated">Esempio 1: Generare un oggetto con i nomi di proprietà predefiniti</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>This command generates an object with default property names, P1 and P2.</source>
          <target state="translated">Questo comando genera un oggetto con i nomi di proprietà predefiniti, P1 e P2.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>The results are P1=Hello and P2=World.</source>
          <target state="translated">I risultati sono P1 = Hello e P2 = World.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Example 2: Generate an object with default property names using a delimiter</source>
          <target state="translated">Esempio 2: Generare un oggetto con i nomi di proprietà predefiniti utilizzando un delimitatore</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>This command generates an object with P1=He and P2=o World, by specifying the ll in Hello  as the delimiter.</source>
          <target state="translated">Questo comando genera un oggetto con P1 = ha e P2 = o World, specificando il tutto in Hello come delimitatore.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Example 3: Use an expression as the value of the TemplateContent parameter</source>
          <target state="translated">Esempio 3: Utilizzare un'espressione come valore del parametro TemplateContent</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>This command uses an expression as the value of the <bpt id="p1">*</bpt>TemplateContent<ept id="p1">*</ept> parameter to instruct Windows PowerShell that the string that is used on the pipeline to <bpt id="p2">**</bpt>ConvertFrom-String<ept id="p2">**</ept> has a property of <bpt id="p3">**</bpt>Name<ept id="p3">**</ept>.</source>
          <target state="translated">Questo comando utilizza un'espressione come valore di <bpt id="p1">*</bpt>TemplateContent<ept id="p1">*</ept> parametro per indicare a Windows PowerShell che la stringa da utilizza per la pipeline a <bpt id="p2">**</bpt>ConvertFrom-stringa<ept id="p2">**</ept> ha una proprietà di <bpt id="p3">**</bpt>nome<ept id="p3">**</ept>.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>You can also save the expression in a variable, then use the variable as the value of the <bpt id="p1">*</bpt>TemplateContent<ept id="p1">*</ept> parameter, as shown here.</source>
          <target state="translated">È inoltre possibile salvare l'espressione in una variabile, quindi utilizzare la variabile come valore di <bpt id="p1">*</bpt>TemplateContent<ept id="p1">*</ept> parametro, come illustrato di seguito.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Example 4: Generate an object that contains two properties</source>
          <target state="translated">Esempio 4: Generare un oggetto che contiene due proprietà</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>This command generates an object that contains two properties, FirstWord and SecondWord.</source>
          <target state="translated">Questo comando genera un oggetto che contiene due proprietà, FirstWord e SecondWord.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>The results are FirstWord=Hello and SecondWord=World.</source>
          <target state="translated">I risultati sono FirstWord = Hello e SecondWord = World.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Example 5: Generate two objects of different object types</source>
          <target state="translated">Esempio 5: Generare due oggetti di diversi tipi di oggetto</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>This command generates an object with default property names P1 and P2, but property types String and Integer are identified.</source>
          <target state="translated">Questo comando genera un oggetto con i nomi di proprietà predefiniti P1 e P2, ma vengono identificati i tipi di proprietà String e Integer.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>The results are P1=123 and P2=456.</source>
          <target state="translated">I risultati sono P1 = 123 e P2 = 456.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>The second property is an integer, not a string.</source>
          <target state="translated">La seconda proprietà è un numero intero, non è una stringa.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>PARAMETERS</source>
          <target state="translated">PARAMETRI</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>-Delimiter</source>
          <target state="translated">-Delimitatore</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Specifies a regular expression that identifies the boundary between elements.</source>
          <target state="translated">Specifica un'espressione regolare che identifica il limite tra gli elementi.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Elements that are created by the split become properties in the resulting object.</source>
          <target state="translated">Gli elementi creati tramite la suddivisione diventano le proprietà dell'oggetto risulta.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>The delimiter is ultimately used in a call to <bpt id="p1">**</bpt>System.Text.RegularExpressions.RegularExpression.Split()<ept id="p1">**</ept>.</source>
          <target state="translated">Il delimitatore viene infine utilizzato in una chiamata a <bpt id="p1">**</bpt>System.Text.RegularExpressions.RegularExpression.Split()<ept id="p1">**</ept>.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>-IncludeExtent</source>
          <target state="translated">-IncludeExtent</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Indicates that this cmdlet includes an extent text property that is removed by default.</source>
          <target state="translated">Indica che questo cmdlet include una proprietà di testo di extent che viene rimosso per impostazione predefinita.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>-InputObject</source>
          <target state="translated">-InputObject</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Specifies strings received from the pipeline, or a variable that contains a string object.</source>
          <target state="translated">Specifica le stringhe ricevute dalla pipeline o una variabile che contiene un oggetto stringa.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>-PropertyNames</source>
          <target state="translated">-PropertyNames</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Specifies and array of property names to which to assign split values in the resulting object.</source>
          <target state="translated">Specifica e la matrice di nomi di proprietà a cui assegnare i valori di divisione nell'oggetto risultante.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Every line of text that you split or parse generates elements that represent property values.</source>
          <target state="translated">Ogni riga di testo che è possibile dividere o analizzare genera gli elementi che rappresentano i valori delle proprietà.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>If the element is the result of a capture group, and that capture group is named (for example, (?<ph id="ph1">\&lt;</ph>name<ph id="ph2">\&gt;</ph>) or (?'name') ), then the name of that capture group is assigned to the property.</source>
          <target state="translated">Se l'elemento è il risultato di un gruppo di acquisizione e il gruppo di acquisizione denominato (ad esempio, (?<ph id="ph1">\&lt;</ph>nome<ph id="ph2">\&gt;</ph>) o (?' nome ')), quindi il nome del gruppo di acquisizione è assegnato alla proprietà.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>If you provide any elements in the <bpt id="p1">*</bpt>PropertyName<ept id="p1">*</ept> array, those names are assigned to properties that have not yet been named.</source>
          <target state="translated">Se si forniscono tutti gli elementi nel <bpt id="p1">*</bpt>PropertyName<ept id="p1">*</ept> matrice, tali nomi vengono assegnati alle proprietà che non sono ancora stata rinominate.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>If you provide more property names than there are fields, Windows PowerShell ignores the extra property names.</source>
          <target state="translated">Se si specificano più nomi di proprietà rispetto ai campi, Windows PowerShell ignora i nomi delle proprietà aggiuntive.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>If you do not specify enough property names to name all fields, Windows PowerShellautomatically assigns numerical property names to any properties that are not named: P1, P2, etc.</source>
          <target state="translated">Se non si specifica sufficiente i nomi delle proprietà per assegnare un nome di tutti i campi, PowerShellautomatically Windows assegna i nomi di proprietà numerica per tutte le proprietà che non sono denominate: P1, P2, e così via.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>-TemplateContent</source>
          <target state="translated">TemplateContent-</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Specifies an expression, or an expression saved as a variable, that describes the properties to which this cmdlet assigns strings.</source>
          <target state="translated">Specifica un'espressione o un'espressione salvata come una variabile, che descrive le proprietà a cui questo cmdlet assegna le stringhe.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>The syntax of a template field specification is the following: {<ph id="ph1">\[</ph>optional-typecast<ph id="ph2">\]</ph>name(sequence-spec, for example <bpt id="p1">*</bpt>):example-value}. An example is {PersonInfo<ept id="p1">*</ept>:{Name:Patti Fuller}.</source>
          <target state="translated">La sintassi di una specifica del modello di campo è il seguente: {<ph id="ph1">\[</ph>facoltativo, il cast di tipo<ph id="ph2">\]</ph>name(sequence-spec, for example <bpt id="p1">*</bpt>):example-valore}. Ad esempio {PersonInfo<ept id="p1">*</ept>: {nome: Patti Fuller}.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>-TemplateFile</source>
          <target state="translated">-TemplateFile</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Specifies a file, as an array, that contains a template for the desired parsing of the string.</source>
          <target state="translated">Specifica un file, come una matrice, che contiene un modello per l'analisi della stringa desiderata.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>In the template file, properties and their values are enclosed in brackets, as shown in the following example.</source>
          <target state="translated">Nel file del modello, proprietà e i relativi valori sono racchiusi tra parentesi quadre, come illustrato nell'esempio seguente.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>If a property, such as the Name property and its associated other properties, appears multiple times, you can add an asterisk (*) to indicate that this results in multiple records.</source>
          <target state="translated">Se una proprietà, ad esempio la proprietà Name e l'identificatore associato altre proprietà, viene visualizzato più volte, è possibile aggiungere un asterisco (*) per indicare che ciò comporta più record.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>This avoids extracting multiple properties into a single record.</source>
          <target state="translated">Questo evita l'estrazione di più proprietà in un singolo record.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>{Name*:David Chew}</source>
          <target state="translated">{Name*:David Chew}</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>{City:Redmond}, {State:WA}</source>
          <target state="translated">{Città: Redmond}, {stato: WA}</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>{Name*:Evan Narvaez}</source>
          <target state="translated">{Name*:Evan Narvaez}</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>{City:Issaquah}, {State:WA}</source>
          <target state="translated">{Città: Issaquah}, {stato: WA}</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>-UpdateTemplate</source>
          <target state="translated">-UpdateTemplate</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>Indicates that this cmdlet saves the results of a learning algorithm into a comment in the template file.</source>
          <target state="translated">Indica che questo cmdlet consente di salvare i risultati di un algoritmo di apprendimento in un commento nel file di modello.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>This makes the algorithm learning process faster.</source>
          <target state="translated">In questo modo l'algoritmo di processo di apprendimento più velocemente.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>To use this parameter, you must also specify a template file with the <bpt id="p1">*</bpt>TemplateFile<ept id="p1">*</ept> parameter.</source>
          <target state="translated">Per utilizzare questo parametro, è necessario specificare anche un file di modello con il <bpt id="p1">*</bpt>TemplateFile<ept id="p1">*</ept> parametro.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>CommonParameters</source>
          <target state="translated">CommonParameters</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutVariable, -OutBuffer, -PipelineVariable, -Verbose, -WarningAction, and -WarningVariable.</source>
          <target state="translated">Questo cmdlet supporta i parametri comuni:-eseguire il Debug, - ErrorAction, - ErrorVariable, - InformationAction, InformationVariable-, - OutVariable,-OutBuffer, - PipelineVariable, - Verbose, - WarningAction e - WarningVariable.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>For more information, see about_CommonParameters (http://go.microsoft.com/fwlink/?LinkID=113216).</source>
          <target state="translated">Per ulteriori informazioni, vedere about_CommonParameters (http://go.microsoft.com/fwlink/?LinkID=113216).</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>INPUTS</source>
          <target state="translated">INPUT</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>System.String</source>
          <target state="translated">System.String</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>OUTPUTS</source>
          <target state="translated">OUTPUT</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>NOTES</source>
          <target state="translated">NOTE</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>RELATED LINKS</source>
          <target state="translated">COLLEGAMENTI CORRELATI</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>ConvertFrom-String: Example-based text parsing</source>
          <target state="translated">ConvertFrom-stringa: L'analisi di testo basato su esempio</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>ConvertFrom-StringData</source>
          <target state="translated">ConvertFrom-StringData</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>ConvertFrom-Csv</source>
          <target state="translated">ConvertFrom-Csv</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>ConvertTo-Xml</source>
          <target state="translated">ConvertTo-XML</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>