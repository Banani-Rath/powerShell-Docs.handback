<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ko-kr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-1c394fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">35cff9fcdf697c28be0457b90ffff1c4e26cc649</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">reference\4.0\Microsoft.PowerShell.Core\About\about_Eventlogs.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions" />
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">6ef0ebbcf5f66af2d431253f67fb68735c5a45a9</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">c71cb94eff8d57f36a7aaef0ea5afacc776c3531</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>about_Eventlogs</source>
          <target state="translated">about_Eventlogs</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>powershell, cmdlet</source>
          <target state="translated">powershell cmdlet</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>About Eventlogs</source>
          <target state="translated">대 한 이벤트 로그에 대 한</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>about_Eventlogs</source>
          <target state="translated">about_Eventlogs</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>TOPIC</source>
          <target state="translated">항목</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>about_EventLogs</source>
          <target state="translated">about_Eventlogs</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>SHORT DESCRIPTION</source>
          <target state="translated">간단한 설명</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Windows PowerShell creates a Windows event log that is named "Windows PowerShell" to record Windows PowerShell events.</source>
          <target state="translated">Windows PowerShell은 Windows PowerShell 이벤트를 기록 하려면 "Windows PowerShell" 라는 Windows 이벤트 로그를 만듭니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>You can view this log in Event Viewer or by using cmdlets that get events, such as the Get-EventLog cmdlet.</source>
          <target state="translated">이벤트 뷰어 또는 Get-eventlog cmdlet 등의 이벤트를 발생 시 cmdlet을 사용 하 여이 로그를 볼 수 있습니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>By default, Windows PowerShell engine and provider events are recorded in the event log, but you can use the event log preference variables to customize the event log.</source>
          <target state="translated">기본적으로 Windows PowerShell 엔진 및 공급자 이벤트가 이벤트 로그에 있지만 이벤트 로그를 사용자 지정 하려면 이벤트 로그 기본 설정 변수를 사용할 수에 기록 됩니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>For example, you can add events about Windows PowerShell commands.</source>
          <target state="translated">예를 들어 Windows PowerShell 명령에 대 한 이벤트를 추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>LONG DESCRIPTION</source>
          <target state="translated">자세한 설명</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>The Windows PowerShell event log records details of Windows PowerShell operations, such as starting and stopping the program engine and starting and stopping the Windows PowerShell providers.</source>
          <target state="translated">Windows PowerShell 이벤트 로그를 시작 하 고 프로그램 엔진을 중지 및 시작 하 고 Windows PowerShell 공급자를 중지 하는 등의 Windows PowerShell 작업의 세부 정보를 기록 합니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>You can also log details about Windows PowerShell commands.</source>
          <target state="translated">또한 Windows PowerShell 명령에 대 한 세부 정보를 기록할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>The Windows PowerShell event log is in the Application and Services Logs group.</source>
          <target state="translated">Windows PowerShell 이벤트 로그는 응용 프로그램 및 서비스 로그 그룹입니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>The Windows PowerShell log is a classic event log that does not use the Windows Eventing technology.</source>
          <target state="translated">Windows PowerShell 로그는 클래식 이벤트 로그는 Windows Eventing 기술을 사용 하지 않는 경우</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>To view the log, use the cmdlets designed for classic event logs, such as Get-EventLog.</source>
          <target state="translated">로그를 보려면 Get-eventlog와 같은 기본 이벤트 로그를 위한 cmdlet을 사용 합니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Viewing the Windows PowerShell Event Log</source>
          <target state="translated">Windows PowerShell 이벤트 로그 보기</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>You can view the Windows PowerShell event log in Event Viewer or by using the Get-EventLog and Get-WmiObject cmdlets.</source>
          <target state="translated">이벤트 뷰어 또는 Get-eventlog 및 Get-wmiobject cmdlet을 사용 하 여 Windows PowerShell 이벤트 로그를 볼 수 있습니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>To view the contents of the Windows PowerShell log, type:</source>
          <target state="translated">Windows PowerShell 로그의 내용을 보려면 다음을 입력 합니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Get-EventLog -LogName "Windows PowerShell"</source>
          <target state="translated">"Windows PowerShell" Get-eventlog-LogName</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>To examine the events and their properties, use the Sort-Object cmdlet, the Group-Object cmdlet, and the cmdlets that contain the Format verb (the Format cmdlets).</source>
          <target state="translated">이벤트 및 해당 속성을 검사 하려면 Sort-object cmdlet, Group-object cmdlet 및 형식 동사 (형식 cmdlet)를 포함 하는 cmdlet을 사용 합니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>For example, to view the events in the log grouped by the event ID, type:</source>
          <target state="translated">예를 들어 이벤트 ID 별로 그룹화 하는 로그에 이벤트를 보려면 다음을 입력 합니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Get-EventLog "Windows PowerShell" | Format-Table -GroupBy EventID</source>
          <target state="translated">Get-eventlog "Windows PowerShell" | Format-table-GroupBy 이벤트 Id</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Or, type:</source>
          <target state="translated">또는 입력 합니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Get-EventLog "Windows PowerShell" | Sort-Object EventID ` | Group-Object EventID</source>
          <target state="translated">Get-eventlog "Windows PowerShell" | Sort-object EventID ' | 그룹 개체의 이벤트 Id</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>To view all the classic event logs, type:</source>
          <target state="translated">모든 기본 이벤트 로그를 보려면 다음을 입력 합니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Get-EventLog -List</source>
          <target state="translated">Get-eventlog-목록</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>You can also use the Get-WmiObject cmdlet to use the event-related Windows Management Instumentation (WMI) classes to examine the event log.</source>
          <target state="translated">또한 이벤트 로그에 이벤트 관련 Instumentation WMI (Windows Management) 클래스를 사용 하는 Get-wmiobject cmdlet를 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>For example, to view all the properties of the event log file, type:</source>
          <target state="translated">예를 들어 이벤트 로그 파일의 모든 속성을 보려면 다음을 입력 합니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Get-WmiObject Win32_NTEventLogFile | where ` {$_.LogFileName -eq "Windows PowerShell"} | Format-List -Property *</source>
          <target state="translated">Get-wmiobject Win32_NTEventLogFile | 여기서 ' {$_입니다. LogFileName-eq "Windows PowerShell"} | Format-list-속성 *</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>To find the Win32 event-related WMI classes, type:</source>
          <target state="translated">Win32 이벤트와 관련 된 WMI 클래스를 찾으려면 다음을 입력 합니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Get-WmiObject -List | where {$_.Name -like "win32event"}</source>
          <target state="translated">Get-wmiobject-목록 | 여기서 {$_입니다. Name-"win32event"와 같은}</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>For more information, type "Get-Help Get-EventLog" and "Get-Help Get-WmiObject".</source>
          <target state="translated">자세한 내용은 "Get-help Get-eventlog" 및 "Get-help Get-wmiobject"를 입력 합니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Selecting Events for the Windows PowerShell Event Log</source>
          <target state="translated">Windows PowerShell 이벤트 로그에 대 한 이벤트를 선택합니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>You can use the event log preference variables to determine which events are recorded in the Windows PowerShell event log.</source>
          <target state="translated">어떤 이벤트가 Windows PowerShell 이벤트 로그에 기록 되는지 확인 하려면 이벤트 로그의 기본 설정 변수를 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>There are six event log preference variables; two variables for each of the three logging components: the engine (the Windows PowerShell program), the providers, and the commands.</source>
          <target state="translated">6 개의 이벤트 로그의 기본 설정 변수가; 각각의 세 가지 로깅 구성 요소에 대 한 두 개의 변수: 엔진 (Windows PowerShell 프로그램), 공급자, 및 명령.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>The LifeCycleEvent variables log normal starting and stopping events.</source>
          <target state="translated">LifeCycleEvent 변수 일반 시작 및 중지 이벤트를 기록 합니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>The Health variables log error events.</source>
          <target state="translated">상태 변수는 오류 이벤트를 기록합니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>The following table lists the event log preference variables.</source>
          <target state="translated">다음 표에서 이벤트 로그의 기본 설정 변수를 나열합니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Variable                     Description</source>
          <target state="translated">변수 설명</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>$LogEngineLifeCycleEvent     Logs starting and stopping of Windows PowerShell.</source>
          <target state="translated">Windows PowerShell의 시작 및 중지 $LogEngineLifeCycleEvent 로그입니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>$LogEngineHealthEvent        Logs Windows PowerShell program errors.</source>
          <target state="translated">$LogEngineHealthEvent 로그 Windows PowerShell 프로그램 오류가 발생 했습니다.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>$LogProviderLifeCycleEvent   Logs starting and stopping of Windows PowerShell providers.</source>
          <target state="translated">Windows PowerShell 공급자의 시작 및 중지 $LogProviderLifeCycleEvent 로그입니다.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>$LogProviderHealthEvent      Logs Windows PowerShell provider errors.</source>
          <target state="translated">$LogProviderHealthEvent 로그 Windows PowerShell 공급자 오류입니다.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>$LogCommandLifeCycleEvent    Logs starting and completion of commands.</source>
          <target state="translated">$LogCommandLifeCycleEvent 로그 시작 및 명령의 완료 합니다.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>$LogCommandHealthEvent       Logs command errors.</source>
          <target state="translated">$LogCommandHealthEvent 로그 명령 오류가 발생 했습니다.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>(For information about Windows PowerShell providers, type: "Get-Help about_providers".)</source>
          <target state="translated">(Windows PowerShell 공급자에 대 한 정보를 입력: "Get-help about_providers"입니다.)</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>By default, only the following event types are enabled:</source>
          <target state="translated">기본적으로는 다음 이벤트 형식에만 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>$LogEngineLifeCycleEvent $LogEngineHealthEvent $LogProviderLifeCycleEvent $LogProviderHealthEvent</source>
          <target state="translated">$LogEngineLifeCycleEvent $LogEngineHealthEvent $LogProviderLifeCycleEvent $LogProviderHealthEvent</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>To enable an event type, set the preference variable for that event type to $true.</source>
          <target state="translated">이벤트 종류를 사용 하려면 해당 이벤트 유형을 $true에 대 한 기본 설정 변수를 설정 합니다.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>For example, to enable command life-cycle events, type:</source>
          <target state="translated">예를 들어 명령 수명 주기 이벤트를 사용 하려면 다음을 입력 합니다.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>$LogCommandLifeCycleEvent</source>
          <target state="translated">$LogCommandLifeCycleEvent</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Or, type:</source>
          <target state="translated">또는 입력 합니다.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>$LogCommandLifeCycleEvent = $true</source>
          <target state="translated">$LogCommandLifeCycleEvent $true =</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>To disable an event type, set the preference variable for that event type to $false.</source>
          <target state="translated">이벤트 종류를 사용 하지 않으려면 $false를 해당 이벤트 유형에 대 한 기본 설정 변수를 설정 합니다.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>For example, to disable command life-cycle events, type:</source>
          <target state="translated">예를 들어 명령 수명 주기 이벤트를 사용 하지 않으려면 다음을 입력 합니다.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>$LogProviderLifeCycleEvent = $false</source>
          <target state="translated">$LogProviderLifeCycleEvent $false =</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>You can disable any event, except for the events that indicate that the Windows PowerShell engine and the core providers are started.</source>
          <target state="translated">Windows PowerShell 엔진 및 핵심 공급자 시작 되었음을 나타내는 이벤트를 제외 하 고 모든 이벤트를 비활성화할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>These events are generated before the Windows PowerShell profiles are run and before the host program is ready to accept commands.</source>
          <target state="translated">Windows PowerShell 프로필에 실행 되 고 프로그램은 명령을 받을 준비가 호스트 하기 전에 먼저 이러한 이벤트가 생성 됩니다.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>The variable settings apply only for the current Windows PowerShell session.</source>
          <target state="translated">변수 설정의 현재 Windows PowerShell 세션에만 적용 됩니다.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>To apply them to all Windows PowerShell sessions, add them to your Windows PowerShell profile.</source>
          <target state="translated">모든 Windows PowerShell 세션을 적용 하려면 Windows PowerShell 프로필에 추가 합니다.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>Logging Module Events</source>
          <target state="translated">로깅 모듈 이벤트</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>Beginning in Windows PowerShell 3.0, you can record execution events for the cmdlets and functions in Windows PowerShell modules and snap-ins by setting the LogPipelineExecutionDetails property of modules and snap-ins to TRUE.</source>
          <target state="translated">Windows PowerShell 3.0부터, 모듈 및 스냅인의 LogPipelineExecutionDetails 속성을 TRUE로 설정 하 여 Windows PowerShell 모듈 및 스냅인의 cmdlet 및 함수에 대 한 실행 이벤트를 기록할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>In Windows PowerShell 2.0, this feature is available only for snap-ins.</source>
          <target state="translated">Windows PowerShell 2.0에서이 기능은 스냅인에 대해서만 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>When the LogPipelineExecutionDetails property value is TRUE ($True), Windows PowerShell writes cmdlet and function execution events in the session to the Windows PowerShell log in Event Viewer.</source>
          <target state="translated">LogPipelineExecutionDetails 속성 값이 TRUE ($True), Windows PowerShell cmdlet 및 함수 실행에 이벤트를 기록 세션의 이벤트 뷰어에서 Windows PowerShell 로그 합니다.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>The setting is effective only in the current session.</source>
          <target state="translated">설정은 현재 세션에만 적용 됩니다.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>To enable logging of execution events of cmdlets and functions in a module, use the following command sequence.</source>
          <target state="translated">모듈의 함수와 cmdlet의 실행 이벤트 로깅을 사용 하려면 다음 명령 시퀀스를 사용 합니다.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>Import-Module <ph id="ph1">&lt;ModuleName&gt;</ph> $m = Get-Module <ph id="ph2">&lt;ModuleName&gt;</ph> $m.LogPipelineExecutionDetails = $True</source>
          <target state="translated">모듈 가져오기 <ph id="ph1">&lt;ModuleName&gt;</ph> $m Get-module = <ph id="ph2">&lt;ModuleName&gt;</ph> $m.LogPipelineExecutionDetails $True =</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>To enable logging of execution events of cmdlets in a snap-in, use the following command sequence.</source>
          <target state="translated">스냅인의 cmdlet 실행 이벤트의 로깅을 사용 하려면 다음 명령 시퀀스를 사용 합니다.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>$m = Get-PSSnapin <ph id="ph1">&lt;SnapInName&gt;</ph> [-Registered] $m.LogPipelineExecutionDetails = $True</source>
          <target state="translated">$m Get-pssnapin = <ph id="ph1">&lt;SnapInName&gt;</ph> [-등록] $m.LogPipelineExecutionDetails $True =</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>To disable logging, use the same command sequence to set the property value to FALSE ($False).</source>
          <target state="translated">로깅을 사용 하지 않으려면, 동일한 명령 시퀀스를 사용 하 여 속성 값을 FALSE ($False)로 설정 합니다.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>You can also use the "Turn on Module Logging" Group Policy setting to enable and disable module and snap-in logging.</source>
          <target state="translated">또한 활성화 하 고 모듈 및 스냅인 로깅을 비활성화 "모듈 로깅 켜기" 그룹 정책 설정을 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>The policy value includes a list of module and snap-in names.</source>
          <target state="translated">정책 값에는 모듈 및 스냅인 이름 목록이 포함 됩니다.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>Wildcards are supported.</source>
          <target state="translated">와일드카드가 지원됩니다.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>When "Turn on Module Logging" is set for a module, the value of the LogPipelineExecutionDetails property of the module is TRUE in all sessions and it cannot be changed.</source>
          <target state="translated">"모듈 로깅 켜기" 모듈에 대해 설정 되 면 모듈의 LogPipelineExecutionDetails 속성의 값은 모든 세션에서 TRUE 및 변경할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>The Turn On Module Logging group policy setting is located in the following Group Policy paths:</source>
          <target state="translated">모듈 로깅 켜기 그룹 정책 설정은 다음 그룹 정책 경로에 있습니다.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>Computer Configuration\Administrative Templates\Windows Components\Windows PowerShell User Configuration\Administrative Templates\Windows Components\Windows PowerShell</source>
          <target state="translated">컴퓨터 구성 \ 관리 템플릿 구성 요소 Components\Windows PowerShell 사용자 구성 \ 관리 템플릿 구성 요소 Components\Windows PowerShell</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>The User Configuration policy takes precedence over the Computer Configuration policy, and both policies take preference over the value of the LogPipelineExecutionDetails property of modules and snap-ins.</source>
          <target state="translated">사용자 구성 정책은 컴퓨터 구성 정책 보다 우선 하 고이 두 정책은 모듈 및 스냅인의 LogPipelineExecutionDetails 속성의 값에 대해 기본 설정을 고려 합니다.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>For more information about this Group Policy setting, see about_Group_Policy_Settings (http://go.microsoft.com/fwlink/?LinkID=251696).</source>
          <target state="translated">이 그룹 정책 설정에 대 한 자세한 내용은 about_Group_Policy_Settings (http://go.microsoft.com/fwlink/?LinkID=251696)를 참조 하십시오.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>Security and Auditing</source>
          <target state="translated">보안 및 감사</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>The Windows PowerShell event log is designed to indicate activity and to provide operational details for troubleshooting.</source>
          <target state="translated">Windows PowerShell 이벤트 로그 문제 해결에 대 한 세부 정보를 제공 하 고 활동을 나타내기 위해 설계 되었습니다.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>However, like most Windows-based application event logs, the Windows PowerShell event log is not designed to be secure.</source>
          <target state="translated">그러나 대부분의 Windows 기반 응용 프로그램 이벤트 로그와 같은 Windows PowerShell 이벤트 로그는 안전 하도록 설계 되지 않았습니다.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>It should not be used to audit security or to record confidential or proprietary information.</source>
          <target state="translated">보안 감사 또는 기밀 또는 소유 정보를 기록 하지 사용 해야 합니다.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>Event logs are designed to be read and understood by users.</source>
          <target state="translated">이벤트 로그 읽기 하 고 사용자가 이해할 수 하도록 설계 되었습니다.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>Users can read from and write to the log.</source>
          <target state="translated">사용자가에서 읽고 로그에 쓸 수 있습니다.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>A malicious user could read an event log on a local or remote computer, record false data, and then prevent the logging of their activities.</source>
          <target state="translated">악의적인 사용자 로컬 또는 원격 컴퓨터에서 이벤트 로그를 읽을 하 고 잘못 된 데이터를 기록 하 고의 작업 로깅하지 수 있습니다.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>NOTES</source>
          <target state="translated">참고 사항</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>Authors of module authors can add logging features to their modules.</source>
          <target state="translated">모듈 작성자의 작성자 해당 모듈에 로깅 기능을 추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>For more information, see "Writing a Windows PowerShell Module" in MSDN at http://go.microsoft.com/fwlink/?LinkID=144916.</source>
          <target state="translated">자세한 내용은 "쓰기 Windows PowerShell 모듈" MSDN에 http://go.microsoft.com/fwlink/?LinkID=144916에서 참조 하십시오.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>SEE ALSO</source>
          <target state="translated">참고 항목</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>Get-EventLog Get-WmiObject about_Group_Policy_Settings about_Preference_Variables</source>
          <target state="translated">Get-eventlog Get-wmiobject about_Group_Policy_Settings about_preference_variables를 참조 하세요</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>