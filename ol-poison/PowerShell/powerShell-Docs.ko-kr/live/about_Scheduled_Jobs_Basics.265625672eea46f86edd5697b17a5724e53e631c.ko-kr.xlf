<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ko-kr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-1c394fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">b405466d226415a506b6d429591842a50bf361ac</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">reference\5.0\PSScheduledJob\About\about_Scheduled_Jobs_Basics.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions" />
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">0b0c0a7cb61a59b04e6598015767e30d97231863</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">e99ca94ebd33390450190ddfd193a437dcca88e9</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>about_Scheduled_Jobs_Basics</source>
          <target state="translated">about_Scheduled_Jobs_Basics</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>powershell, cmdlet</source>
          <target state="translated">powershell cmdlet</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>About Scheduled Jobs Basics</source>
          <target state="translated">예약 된 작업의 기본 사항에 대 한</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>about_Scheduled_Jobs_Basics</source>
          <target state="translated">about_Scheduled_Jobs_Basics</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>about_Scheduled_Jobs_Basics</source>
          <target state="translated">about_Scheduled_Jobs_Basics</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>SHORT DESCRIPTION</source>
          <target state="translated">간단한 설명</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Explains how to create and manage scheduled jobs.</source>
          <target state="translated">예약된 작업을 만들고 관리하는 방법에 대해 설명합니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>LONG DESCRIPTION</source>
          <target state="translated">자세한 설명</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>This topic shows how to perform basic tasks of creating and managing scheduled jobs.</source>
          <target state="translated">이 항목에서는 예약 된 작업 만들기 및 관리의 기본 작업을 수행 하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>For information about more advanced tasks, see about_Scheduled_Jobs_Advanced.</source>
          <target state="translated">고급 작업에 대 한 내용은 about_Scheduled_Jobs_Advanced를 참조 하십시오.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>HOW TO CREATE A SCHEDULED JOB</source>
          <target state="translated">예약 된 작업을 만드는 방법</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>To create a scheduled job, use the Register-ScheduledJob cmdlet.</source>
          <target state="translated">예약 된 작업을 만들려면 Register-scheduledjob cmdlet을 사용 합니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>The cmdlet requires a name and the commands or script that the job runs.</source>
          <target state="translated">Cmdlet는 이름 및 명령 또는 작업을 실행 하는 스크립트에 필요 합니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>You can either run the job immediately by adding the RunNow parameter, or create a job trigger and set job options when you create the job or at a later time.</source>
          <target state="translated">RunNow 매개 변수를 추가 하 여 작업을 즉시 실행 하거나 작업 트리거 만들기 하 고 작업을 만들 때 또는 나중에 작업 옵션을 설정할 수 합니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>To create a job that runs a script, use the FilePath parameter to specify the path to the script file.</source>
          <target state="translated">스크립트를 실행 하는 작업을 만들려면 FilePath 매개 변수를 사용 하 여 스크립트 파일의 경로를 지정 합니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>To create a job that runs commands, use the ScriptBlock parameter.</source>
          <target state="translated">명령을 실행 하는 작업을 만들려면 ScriptBlock 매개 변수를 사용 합니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>The following command creates the ProcessJob, which runs a Get-Process command.</source>
          <target state="translated">다음 명령은 Get-process 명령을 실행 하는 ProcessJob를 만듭니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>This scheduled job has the default job options and no job trigger.</source>
          <target state="translated">이 예약 된 작업에 기본 작업 옵션 및 작업 트리거 없는 있습니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>PS C:&gt; Register-ScheduledJob -Name ProcessJob -ScriptBlock { Get-Process }</source>
          <target state="translated">PS c: &gt; Register-scheduledjob-ProcessJob-ScriptBlock {Get-process} 이름 지정</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Id         Name            Triggers        Command       Enabled</source>
          <target state="translated">Id 이름 트리거 명령 사용</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>8          ProcessJob      {}              Get-Process   True</source>
          <target state="translated">8 ProcessJob {} Get-process True</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>HOW TO CREATE A JOB TRIGGER</source>
          <target state="translated">작업 트리거를 만드는 방법</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Job triggers start a scheduled job automatically.</source>
          <target state="translated">작업 트리거는 예약된 된 작업을 자동으로 시작 합니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>A job trigger can be one-time or recurring schedule or an event, such as when a user logs on or Windows starts.</source>
          <target state="translated">Windows가 시작 또는 작업 트리거는 일회성 또는 되풀이 일정 또는 사용자가 로그온 할 때와 같은 이벤트를 수 있습니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Each job can have zero, one, or multiple job triggers.</source>
          <target state="translated">각 작업에는 0, 1 또는 여러 개의 작업 트리거가 있을 수 있습니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>To create a job trigger, use the New-JobTrigger cmdlet.</source>
          <target state="translated">작업 트리거를 만들려면 New-jobtrigger cmdlet을 사용 합니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>The following command creates a job trigger that starts a job every Monday and Thursday at 5:00 AM.</source>
          <target state="translated">다음 명령은 오전 5시 모든 월요일과 목요일 작업을 시작 하는 작업 트리거를 만듭니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>The command saves the job trigger in the $t variable.</source>
          <target state="translated">작업 트리거 $t 변수에 저장 합니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>$t = New-JobTrigger -Weekly -DaysOfWeek "Monday", "Thursday" -At "5:00 AM"</source>
          <target state="translated">$t New-jobtrigger =-DaysOfWeek 매주 "Monday", "Thursday"-"오전 5시"부터</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Job triggers are optional.</source>
          <target state="translated">작업 트리거는 선택 사항입니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>You can start a scheduled job at any time by adding the RunNow parameter to your Register-ScheduledJob command, or by using the Start-Job cmdlets.</source>
          <target state="translated">Register-scheduledjob를 RunNow 매개 변수를 추가 하거나 Start-job cmdlet을 사용 하 여 언제 든 지 예약된 된 작업을 시작할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>HOW TO ADD A JOB TRIGGER</source>
          <target state="translated">작업 트리거를 추가 하는 방법</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>When you add a job trigger to a scheduled job, the job trigger is added to the scheduled job XML file for the scheduled job and becomes part of the scheduled job.</source>
          <target state="translated">예약된 된 작업에 작업 트리거를 추가 하는 경우 작업 트리거는 예약 된 작업에 대 한 예약 된 작업 XML 파일에 추가 되 고 예약된 된 작업의 일부가 됩니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>You can add a job trigger to a scheduled job when you create the scheduled job or at a later time and you can change the job trigger of a scheduled job at any time.</source>
          <target state="translated">언제 든 지 또는 나중 시간을 예약 된 작업을 만들 때 예약된 된 작업에 작업 트리거는 예약 된 작업의 작업 트리거를 변경할 수를 추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Windows PowerShell uses some of the same job triggers that Task Scheduler uses.</source>
          <target state="translated">Windows PowerShell 몇 작업 스케줄러를 사용 하 여 동일한 작업 트리거를 사용 합니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>For detailed information about job triggers, see the help topic for the New-JobTrigger cmdlet.</source>
          <target state="translated">작업 트리거에 대 한 자세한 내용은 New-jobtrigger cmdlet에 대 한 도움말 항목을 참조 하십시오.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>The following command uses the Register-ScheduledJob cmdlet to create the process job.</source>
          <target state="translated">다음 명령은 Register-scheduledjob cmdlet를 사용 하 여 프로세스 작업을 만듭니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>It uses the Trigger parameter to specify the job trigger in the $t variable.</source>
          <target state="translated">트리거 매개 변수를 사용 하 여 $t 변수의 작업 트리거를 지정할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Register-ScheduledJob -Name ProcessJob -ScriptBlock {Get-Command} -Trigger $t</source>
          <target state="translated">Register-scheduledjob-이름을 ProcessJob-ScriptBlock {Get-command}-$t 트리거</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>You can also add a job trigger to an existing scheduled job at any time.</source>
          <target state="translated">언제 든 지 기존 예약 된 작업에 작업 트리거를 추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>The following command adds the job trigger in the $t variable to the  ProcessJob scheduled job.</source>
          <target state="translated">다음 명령은 ProcessJob 예약 된 작업에 $t 변수의 작업 트리거를 추가합니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Add-JobTrigger -Name ProcessJob -Trigger $t</source>
          <target state="translated">Add-jobtrigger-ProcessJob 이름-$t 트리거</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>As a result of this command, the job trigger starts the ProcessJob automatically every Monday and Thursday at 5:00 AM.</source>
          <target state="translated">이 명령의 결과로 작업 트리거는 ProcessJob에서 자동으로 시작 모든 월요일과 목요일 오전 5시입니다.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>HOW TO GET A JOB TRIGGER</source>
          <target state="translated">작업 트리거 가져오기 하는 방법</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>To get the job trigger of a scheduled job, use the Get-JobTrigger cmdlet.</source>
          <target state="translated">예약된 된 작업의 작업 트리거 Get-jobtrigger cmdlet을 사용 합니다.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Use the Name, ID, and InputObject parameters to specify the scheduled job (not the job trigger).</source>
          <target state="translated">이름, ID 및 InputObject 매개 변수를 사용 하 여 예약 된 작업 (작업 트리거 제외)을 지정 합니다.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>The following command gets the job trigger of the ProcessJob.</source>
          <target state="translated">다음 명령은 ProcessJob의 작업 트리거를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>PS C:&gt; Get-JobTrigger -Name ProcessJob</source>
          <target state="translated">PS c: &gt; Get-jobtrigger-ProcessJob 이름 지정</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Id   Frequency       Time                   DaysOfWeek              Enabled</source>
          <target state="translated">Id 주파수 시간 DaysOfWeek 사용</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>1    Weekly          11/7/2011 5:00:00 AM   {Monday, Thursday}      True</source>
          <target state="translated">1 주 11/7/2011 5시: 00 AM {월요일, 목요일} True</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>HOW TO CREATE JOB OPTIONS</source>
          <target state="translated">작업 옵션을 만드는 방법</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Job options establish conditions for starting and running the job.</source>
          <target state="translated">작업 옵션에는 시작 및 작업 실행에 대 한 조건을 설정 합니다.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Every job has the default job options unless you change them.</source>
          <target state="translated">모든 작업에 기본 작업 옵션에는 변경 하지 않는 경우.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Because job options can prevent a job from running at the scheduled time, it is important to understand the job options and use them carefully.</source>
          <target state="translated">작업 옵션 예약된 된 시간에 실행 되는 작업을 방지할 수 있습니다, 이므로 작업 옵션을 이해 하 고 주의 해 서 사용 하는 것이 중요 합니다.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Windows PowerShell uses the same job options that Task Scheduler uses.</source>
          <target state="translated">Windows PowerShell에는 작업 스케줄러를 사용 하는 동일한 작업 옵션을 사용 합니다.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>For detailed information about the job options, see the help topic for the New-ScheduledJobOption cmdlet.</source>
          <target state="translated">작업 옵션에 대 한 자세한 내용은 New-scheduledjoboption cmdlet에 대 한 도움말 항목을 참조 하십시오.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Type "Get-Help New-ScheduledJobOption" or see the help topic online at http://go.microsoft.com/fwlink/?LinkID=223915.</source>
          <target state="translated">"Get-help New-scheduledjoboption"를 입력 하거나 http://go.microsoft.com/fwlink/?LinkID=223915에서 온라인 도움말 항목을 참조 합니다.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Job options are stored in the scheduled job XML file.</source>
          <target state="translated">작업 옵션은 예약 된 작업 XML 파일에 저장 됩니다.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>You can set job options when you create a scheduled job or change them at any time.</source>
          <target state="translated">예약 된 작업을 만들거나 언제 든 지 변경할 때 작업 옵션을 설정할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>The following command creates a scheduled job option in which the WakeToRun scheduled job option is set to True.</source>
          <target state="translated">다음 명령은 WakeToRun 예약 된 작업 옵션을 True로 설정 되어 있는 예약 된 작업 옵션을 만듭니다.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>The WakeToRun option runs the scheduled job even if the computer is in the Sleep or Hibernate state at the scheduled start time.</source>
          <target state="translated">WakeToRun 옵션 예약 된 시작 시간에 컴퓨터가 절전 또는 최대 절전 모드 상태의 하는 경우에 예약된 된 작업을 실행 합니다.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>The command saves the job options in the $o variable.</source>
          <target state="translated">이 명령은 $o 변수에 작업 옵션을 저장 합니다.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>$o = New-ScheduledJobOption -WakeToRun</source>
          <target state="translated">$o New-scheduledjoboption WakeToRun =</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>HOW TO GET JOB OPTIONS</source>
          <target state="translated">작업 옵션 가져오기 하는 방법</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>To get the job options of a scheduled job, use the Get-ScheduledJobOption cmdlet.</source>
          <target state="translated">예약된 된 작업의 작업 옵션 Get-scheduledjoboption cmdlet을 사용 합니다.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>Use the Name, ID, and InputObject parameters to specify the scheduled job (not the job options).</source>
          <target state="translated">이름, ID 및 InputObject 매개 변수를 사용 하 여 예약 된 작업 (작업 옵션 제외)을 지정 합니다.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>The following command gets the job options of the ProcessJob.</source>
          <target state="translated">다음 명령은 ProcessJob의 작업 옵션을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>PS C:&gt; Get-ScheduledJobOption -Name ProcessJob</source>
          <target state="translated">PS c: &gt; Get-scheduledjoboption-ProcessJob 이름 지정</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>StartIfOnBatteries     : False StopIfGoingOnBatteries : True WakeToRun              : False StartIfNotIdle         : True StopIfGoingOffIdle     : False RestartOnIdleResume    : False IdleDuration           : 00:10:00 IdleTimeout            : 01:00:00 ShowInTaskScheduler    : True RunElevated            : False RunWithoutNetwork      : True DoNotAllowDemandStart  : False MultipleInstancePolicy : IgnoreNew JobDefinition          : Microsoft.PowerShell.ScheduledJob.ScheduledJobDefinition</source>
          <target state="translated">StartIfOnBatteries: False StopIfGoingOnBatteries: WakeToRun True: False StartIfNotIdle: StopIfGoingOffIdle True: False RestartOnIdleResume: False IdleDuration: IdleTimeout 00시 10분: 00: 01시: 00 ShowInTaskScheduler: True RunElevated: False RunWithoutNetwork: DoNotAllowDemandStart True: False MultipleInstancePolicy: IgnoreNew JobDefinition: Microsoft.PowerShell.ScheduledJob.ScheduledJobDefinition</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>HOW TO CHANGE JOB OPTIONS</source>
          <target state="translated">작업 옵션을 변경 하는 방법</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>You can change the job options of a scheduled job when you create a scheduled job or at any time thereafter.</source>
          <target state="translated">이후 언제 든 지 또는 예약 된 작업을 만들 때 예약된 된 작업의 작업 옵션을 변경할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>The following command uses the Register-JobTrigger cmdlet to create the process job.</source>
          <target state="translated">다음 명령은 레지스터 Trigger cmdlet를 사용 하 여 프로세스 작업을 만듭니다.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>It uses the ScheduledJobOption parameter to specify the job options in the $o variable.</source>
          <target state="translated">ScheduledJobOption 매개 변수를 사용 하 여 $o 변수에 작업 옵션을 지정 합니다.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>Register-JobTrigger -Name ProcessJob -ScriptBlock {Get-Process} -ScheduledJobOption $o</source>
          <target state="translated">레지스터 Trigger-ProcessJob-ScriptBlock {Get-process} ScheduledJobOption $o 이름 지정</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>You can also change the job options to an existing scheduled job at any time.</source>
          <target state="translated">또한 언제 든 지 기존 예약 된 작업에 작업 옵션을 변경할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>The following command uses the Set-ScheduledJobOption cmdlet to change the value of the WakeToRun option of the ProcessJob scheduledJob to True.</source>
          <target state="translated">다음 명령은 Set-scheduledjoboption cmdlet를 사용 하 여 ProcessJob scheduledJob의 WakeToRun 옵션의 값을 True로 변경 합니다.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>Like all of the Set cmdlets in the PSScheduledJob module, Set-ScheduledJobOption cmdlet does not have Name or ID parameters.</source>
          <target state="translated">모든 PSScheduledJob 모듈의 집합 cmdlet 처럼 Set-scheduledjoboption cmdlet 이름 또는 ID 매개 변수가 없는 합니다.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>You can use the InputObject parameter to specify the scheduled job options or pipe a scheduled job from Get-ScheduledJobOption cmdlet to Set-ScheduledJobOption.</source>
          <target state="translated">Set-scheduledjoboption를 Get-scheduledjoboption cmdlet에서 예약 된 작업 또는 예약 된 작업 옵션을 지정 하려면 InputObject 매개 변수를 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>The following command uses the Get-ScheduledJob cmdlet to get the ProcessJob.</source>
          <target state="translated">다음 명령은 ProcessJob 가져오려는 Get-scheduledjob cmdlet을 사용 합니다.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>It uses the Get-ScheduledJobOption cmdlet to get the job options in the ProcessJob and the Set-ScheduledJobOption cmdlet to change the WakeToRun job option in the ProcessJob to True.</source>
          <target state="translated">Get-scheduledjoboption cmdlet를 사용 하 여는 ProcessJob에서 WakeToRun 작업 옵션을 True로 변경 하는 ProcessJob 및 Set-scheduledjoboption cmdlet에서 작업 옵션 가져오기.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>Get-ScheduledJob -Name ProcessJob | Get-ScheduledJobOption | Set-ScheduledJobOption -WakeToRun</source>
          <target state="translated">Get-scheduledjob-ProcessJob 이름을 | Get-scheduledjoboption | Set-scheduledjoboption WakeToRun</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>HOW TO GET SCHEDULED JOB INSTANCES</source>
          <target state="translated">예약 된 작업 인스턴스를 가져오는 방법</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>When a scheduled job is started, Windows PowerShell creates a job instance that is similar to a standard Windows PowerShell background job.</source>
          <target state="translated">예약 된 작업이 시작 되 면 Windows PowerShell 표준 Windows PowerShell 백그라운드 작업을 유사한 작업 인스턴스를 만듭니다.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>You can use the Job cmdlets, such as Get-Job, Stop-Job and Receive-Job to manage the job instances.</source>
          <target state="translated">Get-job, 같은 Job cmdlet을 사용할 수 있습니다 Stop-job 및 Receive-job 작업 인스턴스를 관리할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>NOTE: To use the Job cmdlets on instances of scheduled jobs, the PSScheduledJob module  must be imported into the session.</source>
          <target state="translated">참고: Job cmdlet을 사용 하 여 예약 된 작업의 인스턴스에서 PSScheduledJob 모듈 세션으로 가져오지 해야 합니다.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>To import the PSScheduledJob module, type "Import-Module PSScheduledJob" (without quotation marks) or use any Scheduled Job cmdlet, such as Get-ScheduledJob.</source>
          <target state="translated">PSScheduledJob 모듈을 가져오려면 (따옴표 제외) "PSScheduledJob 모듈 가져오기"를 입력 하거나 Get-scheduledjob와 같은 모든 예약 된 작업 cmdlet을 사용 합니다.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>To get all instances of Windows PowerShell scheduled jobs (and all active standard jobs), use the Get-Job cmdlet.</source>
          <target state="translated">Windows PowerShell 예약 된 작업 (및 모든 활성 표준 작업)의 모든 인스턴스 Get-job cmdlet을 사용 합니다.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>The following command imports the PSScheduledJob module and then gets all jobs on the local computer.</source>
          <target state="translated">다음 명령을 PSScheduledJob 모듈을 가져오고 로컬 컴퓨터에서 모든 작업을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>PS C:&gt; Import-Module PSScheduledJob</source>
          <target state="translated">PS c: &gt; PSScheduledJob 모듈 가져오기</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>PS C:&gt; Get-Job</source>
          <target state="translated">PS c: &gt; Get-job</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>The following command gets all instances of the ProcessJob on the local computer.</source>
          <target state="translated">다음 명령은 로컬 컴퓨터에는 ProcessJob의 모든 인스턴스를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>PS C:&gt; Get-Job -Name ProcessJob</source>
          <target state="translated">PS c: &gt; Get-job-ProcessJob 이름 지정</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>Id     Name        PSJobTypeName  State    HasMoreData   Location   Command</source>
          <target state="translated">Id 이름 PSJobTypeName 상태 HasMoreData 위치 명령</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>45     ProcessJob  PSScheduledJob Completed       True   localhost   Get-Process 46     ProcessJob  PSScheduledJob Completed       True   localhost   Get-Process 47     ProcessJob  PSScheduledJob Completed       True   localhost   Get-Process 48     ProcessJob  PSScheduledJob Completed       True   localhost   Get-Process 49     ProcessJob  PSScheduledJob Completed       True   localhost   Get-Process 50     ProcessJob  PSScheduledJob Completed       True   localhost   Get-Process 51     ProcessJob  PSScheduledJob Completed       True   localhost   Get-Process</source>
          <target state="translated">45 ProcessJob PSScheduledJob 완료 True localhost Get-process 46 ProcessJob PSScheduledJob 완료 True localhost Get-process 47 ProcessJob PSScheduledJob 완료 True localhost Get-process 48 ProcessJob PSScheduledJob 완료 True localhost Get-process 49 ProcessJob PSScheduledJob 완료 True localhost Get-process 50 ProcessJob PSScheduledJob 완료 True localhost Get-process 51 ProcessJob PSScheduledJob 완료 True localhost Get-process</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>The default display does not show the start time, which typically distinguishes instances of the same scheduled job.</source>
          <target state="translated">기본 표시는 일반적으로 같은 예약 된 작업의 인스턴스를 구별 되는 시작 시간을 표시 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>The following command uses the Format-Table cmdlet to display the Name, ID, and BeginTime  properties of the scheduled job.</source>
          <target state="translated">다음 명령은 Format-table cmdlet를 사용 하 여 예약된 된 작업의 이름, ID 및 BeginTime 속성을 표시 합니다.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>PS C:&gt; Get-Job ProcessJob | Format-Table -Property Name, ID, BeginTime</source>
          <target state="translated">PS c: &gt; Get-job ProcessJob | Format-table-속성 이름, ID, BeginTime</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>Name       Id BeginTime</source>
          <target state="translated">이름 Id BeginTime</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>ProcessJob 43 11/2/2011 3:00:02 AM ProcessJob 44 11/3/2011 3:00:02 AM ProcessJob 45 11/4/2011 3:00:02 AM ProcessJob 46 11/5/2011 3:00:02 AM ProcessJob 47 11/6/2011 3:00:02 AM ProcessJob 48 11/7/2011 12:00:01 AM ProcessJob 49 11/7/2011 3:00:02 AM ProcessJob 50 11/8/2011 3:00:02 AM</source>
          <target state="translated">ProcessJob 43 11/2/2011 오전 3시: 02 ProcessJob 44 11/3/2011 오전 3시: 02 ProcessJob 45 11/4/2011 오전 3시: 02 ProcessJob 46 11/5/2011 오전 3시: 02 ProcessJob 47 11/6/2011 ProcessJob 48 11/7/2011 오전 3시: 02 오전 12시: 01 ProcessJob 49 11/7/2011 오전 3시: 02 ProcessJob 50 11/8/2011 오전 3시: 02</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>GET SCHEDULED JOB RESULTS</source>
          <target state="translated">예약 된 작업 결과 가져오기</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>To get the results of an instance of a scheduled job, use the Receive-Job cmdlet.</source>
          <target state="translated">예약된 된 작업 인스턴스 결과 가져오려면 Receive-job cmdlet을 사용 합니다.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>NOTE: To use the Job cmdlets on instances of scheduled jobs, the PSScheduledJob module must be imported into the session.</source>
          <target state="translated">참고: Job cmdlet을 사용 하 여 예약 된 작업의 인스턴스에서 PSScheduledJob 모듈 세션으로 가져오지 해야 합니다.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>To import the PSScheduledJob module, type "Import-Module PSScheduledJob" (without quotation marks) or use any Scheduled Job cmdlet, such as Get-ScheduledJob.</source>
          <target state="translated">PSScheduledJob 모듈을 가져오려면 (따옴표 제외) "PSScheduledJob 모듈 가져오기"를 입력 하거나 Get-scheduledjob와 같은 모든 예약 된 작업 cmdlet을 사용 합니다.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>The following command gets the results of the newest instance of the ProcessJob scheduled job (ID = 51)</source>
          <target state="translated">다음 명령은 최신 인스턴스의 ProcessJob 예약 된 작업의 결과 가져옵니다 (ID = 51)</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>PS C:&gt; Import-Module PSScheduledJob</source>
          <target state="translated">PS c: &gt; PSScheduledJob 모듈 가져오기</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>PS C:&gt; Receive-Job -ID 51 -Keep</source>
          <target state="translated">PS c: &gt; Receive-job ID 51-유지</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>The results of scheduled jobs are saved on disk, so the Keep parameter of Receive-Job is not required.</source>
          <target state="translated">예약 된 작업의 결과 수신 작업의 Keep 매개 변수는 필요 하지 않도록 디스크에 저장 됩니다.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>However, without the Keep parameter, you can get the results of a scheduled job only once in each Windows PowerShell session.</source>
          <target state="translated">그러나 Keep 매개 변수 없이 각 Windows PowerShell 세션에서 번에만 예약 된 작업의 결과 가져올 수 있습니다.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>To start a new Windows PowerShell session, type "PowerShell" or open a new Windows PowerShell window.</source>
          <target state="translated">새 Windows PowerShell 세션을 시작 하려면 "PowerShell"를 입력 하거나 새 Windows PowerShell 창을 엽니다.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>SEE ALSO</source>
          <target state="translated">참고 항목</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>about_Scheduled_Jobs about_Scheduled_Jobs_Advanced about_Scheduled_Jobs_Troubleshooting</source>
          <target state="translated">about_Scheduled_Jobs about_Scheduled_Jobs_Advanced about_scheduled_jobs_troubleshooting을 참조 하세요</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>