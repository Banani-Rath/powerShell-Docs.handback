<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ko-kr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-1c394fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ff6ed9549314912975439acb1d7f10f7cebf60ae</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">reference\3.0\Microsoft.PowerShell.Utility\Trace-Command.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions" />
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">df07ea05f93bf7c70131bc1bd650fed239dddfcd</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">a82ff0eb5e68ed711734c8d8248ebdaec4d05984</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>powershell, cmdlet</source>
          <target state="translated">powershell cmdlet</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Trace-Command</source>
          <target state="translated">Trace-Command</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Trace-Command</source>
          <target state="translated">Trace-Command</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>SYNOPSIS</source>
          <target state="translated">요약</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Configures and starts a trace of the specified expression or command.</source>
          <target state="translated">지정된 식 또는 명령의 추적을 구성하고 시작합니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>SYNTAX</source>
          <target state="translated">구문</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>expressionSet (Default)</source>
          <target state="translated">expressionSet (기본값)</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>commandSet</source>
          <target state="translated">commandSet</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>DESCRIPTION</source>
          <target state="translated">설명</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The Trace-Command cmdlet configures and starts a trace of the specified expression or command.</source>
          <target state="translated">Trace-Command cmdlet은 지정된 식 또는 명령의 추적을 구성하고 시작합니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>It works like Set-TraceSource, except that it applies only to the specified command.</source>
          <target state="translated">지정한 명령에만 적용된다는 점을 제외하고 Set-TraceSource와 동일하게 작동합니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>EXAMPLES</source>
          <target state="translated">예제</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>-------------------------- EXAMPLE 1 --------------------------</source>
          <target state="translated">-------------------------- 예제 1 --------------------------</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>This command starts a trace of metadata processing, parameter binding, and cmdlet creation and destruction of the "get-process notepad" expression.</source>
          <target state="translated">이 명령은 메타데이터 처리, 매개 변수 바인딩 및 cmdlet의 "get-process notepad" 식 만들기 및 삭제에 대한 추적을 시작합니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>It uses the Name parameter to specify the trace sources, the Expression parameter to specify the command, and the PSHost parameter to send the output to the console.</source>
          <target state="translated">Name 매개 변수를 사용하여 추적 원본을 지정하고, Expression 매개 변수를 사용하여 명령을 지정하며, PSHost 매개 변수를 사용하여 출력을 콘솔로 보냅니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Because it does not specify any tracing options or listener options, the command uses the defaults, "All" for the tracing options, and "None" for the listener options.</source>
          <target state="translated">또한 추적 옵션이나 수신기 옵션을 지정하지 않으므로 추적 옵션에 대해 기본값인 "All"을 사용하고 수신기 옵션에 대해 "None"을 사용합니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>-------------------------- EXAMPLE 2 --------------------------</source>
          <target state="translated">-------------------------- EXAMPLE 2 --------------------------</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>These commands trace the actions of the ParameterBinding operations of Windows PowerShell while it processes a Get-Alias expression that takes input from the pipeline.</source>
          <target state="translated">이 명령은 Windows PowerShell이 파이프라인의 입력을 사용하는 Get-Alias 식을 처리하는 동안 해당 ParameterBinding 작업을 추적합니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>In Trace-Command, the InputObject parameter passes an object to the expression that is being processed during the trace.</source>
          <target state="translated">Trace-Command에서 InputObject 매개 변수는 추적하는 동안 처리되는 식에 개체를 전달합니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>The first command stores the string "i*" in the $a variable.</source>
          <target state="translated">첫 번째 명령은 $a 변수에 "i*" 문자열을 저장합니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>The second command uses the Trace-Command cmdlet with the ParameterBinding trace source.</source>
          <target state="translated">두 번째 명령은 ParameterBinding 추적 원본과 함께 Trace-Command cmdlet을 사용합니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>The PSHost parameter sends the output to the console.</source>
          <target state="translated">PSHost 매개 변수는 출력을 콘솔로 보냅니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>The expression being processed is "get-alias $input", where the $input variable is associated with the InputObject parameter.</source>
          <target state="translated">처리되는 식은 "get-alias $input"입니다. 여기서 $input 변수는 InputObject 매개 변수에 연결됩니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>The InputObject parameter passes the variable $a to the expression.</source>
          <target state="translated">InputObject 매개 변수는 $a 변수를 식으로 전달합니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>In effect, the command being processed during the trace is "get-alias -inputobject $a" or "$a | get-alias".</source>
          <target state="translated">실제로 추적하는 동안 처리되는 명령은 "get-alias -inputobject $a" 또는 "$a | get-alias"입니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>PARAMETERS</source>
          <target state="translated">매개 변수</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>-ArgumentList</source>
          <target state="translated">-ArgumentList</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Specifies the parameters and parameter values for the command being traced.</source>
          <target state="translated">추적되는 명령의 매개 변수 및 매개 변수 값을 지정합니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>The alias for ArgumentList is Args.</source>
          <target state="translated">ArgumentList의 별칭은 Args입니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>This feature is especially useful for debugging dynamic parameters.</source>
          <target state="translated">이 기능은 동적 매개 변수를 디버그하는 데 특히 유용합니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>-Command</source>
          <target state="translated">-Command</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Specifies a command that is being processed during the trace.</source>
          <target state="translated">추적하는 동안 처리되는 명령을 지정합니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>-Debugger</source>
          <target state="translated">-디버거</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Sends the trace output to the debugger.</source>
          <target state="translated">추적 출력을 디버거로 보냅니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>You can view the output in any user-mode or kernel mode debugger or in Visual Studio.</source>
          <target state="translated">사용자 모드 또는 커널 모드 디버거나 Visual Studio에서 출력을 볼 수 있습니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>This parameter also selects the default trace listener.</source>
          <target state="translated">이 매개 변수는 기본 추적 수신기도 선택합니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>-Expression</source>
          <target state="translated">식</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Specifies the expression that is being processed during the trace.</source>
          <target state="translated">추적하는 동안 처리되는 식을 지정합니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Enclose the expression in braces ({}).</source>
          <target state="translated">식을 중괄호({})로 묶습니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>-FilePath</source>
          <target state="translated">-파일 경로</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Sends the trace output to the specified file.</source>
          <target state="translated">추적 출력을 지정된 파일로 보냅니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>This parameter also selects the file trace listener.</source>
          <target state="translated">이 매개 변수는 파일 추적 수신기도 선택합니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>-Force</source>
          <target state="translated">-Force</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Allows the cmdlet to append trace information to a read-only file.</source>
          <target state="translated">cmdlet이 읽기 전용 파일에 추적 정보를 추가할 수 있게 합니다.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Used with the FilePath parameter.</source>
          <target state="translated">FilePath 매개 변수와 함께 사용됩니다.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Even using the Force parameter, the cmdlet cannot override security restrictions.</source>
          <target state="translated">Force 매개 변수를 사용해도 cmdlet에서 보안 제한을 재정의할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>-InputObject</source>
          <target state="translated">-InputObject</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Provides input to the expression that is being processed during the trace.</source>
          <target state="translated">추적하는 동안 처리되는 식에 입력을 제공합니다.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>You can enter a variable that represents the input that the expression accepts, or pass an object through the pipeline.</source>
          <target state="translated">식에서 허용하는 입력을 나타내는 변수를 입력하거나 파이프라인을 통해 개체를 전달할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>-ListenerOption</source>
          <target state="translated">-ListenerOption</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Adds optional data to the prefix of each trace message in the output.</source>
          <target state="translated">출력의 각 추적 메시지 접두사에 데이터를 선택적으로 추가합니다.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>The valid values are None, LogicalOperationStack, DateTime, Timestamp, ProcessId, ThreadId, and Callstack.</source>
          <target state="translated">유효한 값은 None, LogicalOperationStack, DateTime, Timestamp, ProcessId, ThreadId 및 Callstack입니다.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>"None" is the default.</source>
          <target state="translated">"None"이 기본값입니다.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>To specify multiple options, separate them with commas, but with no spaces, and enclose them in quotation marks, such as "ProcessID,ThreadID".</source>
          <target state="translated">여러 옵션을 지정하려면 "ProcessID,ThreadID"와 같이 공백 없이 쉼표로 구분하고 따옴표로 묶습니다.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>-Name</source>
          <target state="translated">-Name</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>Determines which Windows PowerShell components are traced.</source>
          <target state="translated">추적할 Windows PowerShell 구성 요소를 결정합니다.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Enter the name of the trace source of each component.</source>
          <target state="translated">각 구성 요소의 추적 원본 이름을 입력합니다.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Wildcards are permitted.</source>
          <target state="translated">와일드카드가 지원됩니다.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>To find the trace sources on your computer, type "Get-TraceSource".</source>
          <target state="translated">컴퓨터에서 추적 원본을 찾으려면 "Get-TraceSource"를 입력합니다.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>-Option</source>
          <target state="translated">-옵션</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>Determines the type of events that are traced.</source>
          <target state="translated">추적할 이벤트 유형을 결정합니다.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>The valid values are None, Constructor, Dispose, Finalizer, Method, Property, Delegates, Events, Exception, Lock, Error, Errors, Warning, Verbose, WriteLine, Data, Scope, ExecutionFlow, Assert, and All.</source>
          <target state="translated">유효한 값은 Constructor, Dispose, Finalizer, Method, Property, Delegates, Events, Exception, Lock, Error, Errors, Warning, Verbose, WriteLine, Data, Scope, ExecutionFlow, Assert 및 All입니다.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>"All" is the default.</source>
          <target state="translated">"All"이 기본값입니다.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>The following values are combinations of other values:</source>
          <target state="translated">다음 값은 다른 값의 조합입니다.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>ExecutionFlow: (Constructor, Dispose, Finalizer, Method, Delegates, Events, and Scope)</source>
          <target state="translated">ExecutionFlow: (생성자, Dispose, 종료자, 메서드, 대리자, 이벤트 및 범위)</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>Data: (Constructor, Dispose, Finalizer, Property, Verbose, and WriteLine)</source>
          <target state="translated">데이터: (생성자, Dispose, 종료자, Property, Verbose 및 WriteLine)</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>Errors: (Error and Exception).</source>
          <target state="translated">오류: (오류 및 예외).</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>To specify multiple options, separate them with commas, but with no spaces, and enclose them in quotation marks, such as "Constructor,Dispose".</source>
          <target state="translated">여러 옵션을 지정하려면 "Constructor,Dispose"와 같이 공백 없이 쉼표로 구분하고 따옴표로 묶습니다.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>-PSHost</source>
          <target state="translated">-PSHost</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>Sends the trace output to the Windows PowerShell host.</source>
          <target state="translated">추적 출력을 Windows PowerShell 호스트로 보냅니다.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>This parameter also selects the PSHost trace listener.</source>
          <target state="translated">이 매개 변수는 PSHost 추적 수신기도 선택합니다.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>CommonParameters</source>
          <target state="translated">CommonParameters</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutVariable, -OutBuffer, -PipelineVariable, -Verbose, -WarningAction, and -WarningVariable.</source>
          <target state="translated">이 cmdlet은 공통 매개 변수:-디버그,-ErrorAction,-ErrorVariable,-InformationAction,-InformationVariable,-OutVariable,-OutBuffer,-PipelineVariable,-Verbose,-WarningAction 및-warningvariable을 지원 합니다.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>For more information, see about_CommonParameters (http://go.microsoft.com/fwlink/?LinkID=113216).</source>
          <target state="translated">자세한 내용은 about_CommonParameters (http://go.microsoft.com/fwlink/?LinkID=113216)를 참조 합니다.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>INPUTS</source>
          <target state="translated">입력</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>System.Management.Automation.PSObject</source>
          <target state="translated">System.Management.Automation.PSObject</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>You can pipe objects that represent input to the expression to Trace-Command.</source>
          <target state="translated">식에 대한 입력을 나타내는 개체를 Trace-Command로 파이프할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>OUTPUTS</source>
          <target state="translated">출력</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>System.Management.Automation.PSObject</source>
          <target state="translated">System.Management.Automation.PSObject</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>Returns the command trace in the debug stream.</source>
          <target state="translated">명령 추적을 디버그 스트림으로 반환합니다.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>NOTES</source>
          <target state="translated">참고 사항</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>Tracing is a method that developers use to debug and refine programs.</source>
          <target state="translated">추적은 개발자가 디버깅하고 프로그램을 다듬는 데 사용하는 방법입니다.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>When tracing, the program generates detailed messages about each step in its internal processing.</source>
          <target state="translated">추적하면 프로그램에서 내부 프로세스의 각 단계에 대한 세부 메시지를 생성합니다.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>The Windows PowerShell tracing cmdlets are designed to help Windows PowerShell developers, but they are available to all users.</source>
          <target state="translated">Windows PowerShell 추적 cmdlet은 Windows PowerShell 개발자용으로 만들어졌지만 모든 사용자가 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>They let you monitor nearly every aspect of the functionality of the shell.</source>
          <target state="translated">이 cmdlet을 사용하면 셸 기능의 거의 모든 측면을 모니터링할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>To find the Windows PowerShell components that are enabled for tracing, type "Get-Help Get-TraceSource."</source>
          <target state="translated">추적할 수 있는 Windows PowerShell 구성 요소를 찾으려면 "Get-Help Get-TraceSource"를 입력합니다.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>A "trace source" is the part of each Windows PowerShell component that manages tracing and generates trace messages for the component.</source>
          <target state="translated">"추적 원본"은 구성 요소에 대해 추적을 관리하고 추적 메시지를 생성하는 각 Windows PowerShell 구성 요소의 일부입니다.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>To trace a component, you identify its trace source.</source>
          <target state="translated">구성 요소를 추적하려면 추적 원본을 확인하세요.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>A "trace listener" receives the output of the trace and displays it to the user.</source>
          <target state="translated">"추적 수신기"는 추적 결과를 받아 사용자에게 표시합니다.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>You can elect to send the trace data to a user-mode or kernel-mode debugger, to the host or console, to a file, or to a custom listener derived from the System.Diagnostics.TraceListener class.</source>
          <target state="translated">사용자 모드 또는 커널 모드 디버거, 호스트 또는 콘솔, 파일 또는 System.Diagnostics.TraceListener 클래스에서 파생된 사용자 지정 수신기로 추적 데이터를 보내도록 선택할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>When you use the Command parameter set, Windows PowerShell processes the command just as it would be processed in a pipeline.</source>
          <target state="translated">Command 매개 변수 집합을 사용할 경우 Windows PowerShell은 파이프라인에서 처리되는 것과 동일한 방식으로 명령을 처리합니다.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>For example, command discovery is not repeated for each incoming object.</source>
          <target state="translated">예를 들어 들어오는 개체마다 명령 검색을 반복하지 않습니다.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>The names of the Name, Expression, Option, and Command parameters are optional.</source>
          <target state="translated">Name, Expression, Option 및 Command 매개 변수의 이름은 선택 사항입니다.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>If you omit the parameter names, the unnamed parameter values must appear in this order: Name, Expression, Option or Name, Command,-Option .</source>
          <target state="translated">명명 되지 않은 매개 변수 값이이 순서 대로 표시 매개 변수 이름을 생략 하면: 이름, 식, 옵션 또는 이름, 명령,-옵션입니다.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>If you include the parameter names, the parameters can appear in any order.</source>
          <target state="translated">매개 변수 이름을 포함할 경우 원하는 순서대로 매개 변수를 표시할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>RELATED LINKS</source>
          <target state="translated">관련된 링크</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>Get-TraceSource</source>
          <target state="translated">Get-tracesource</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>Set-TraceSource</source>
          <target state="translated">Set-tracesource</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>