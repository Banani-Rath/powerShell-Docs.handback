<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ko-kr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-56a7a5e" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">a25734261fdcf657d0b97b1f037580f89b04881d</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">scripting\getting-started\cookbooks\Working-with-Objects.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions" />
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">e2a62a34bcbd56a4c8bed81bd15a09a3fa699ccb</xliffext:olskeletonhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Working with Objects</source>
          <target state="translated">개체 작업</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>powershell,cmdlet</source>
          <target state="translated">powershell,cmdlet</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Working with Objects</source>
          <target state="translated">개체 작업</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>We have discussed how Windows PowerShell uses objects to transfer data between cmdlets, and demonstrated a few ways to view detailed information about objects by using Get<ph id="ph1">\-</ph>Member and Format cmdlets to view particular properties of objects.</source>
          <target state="translated">이 가이드에서는 Windows PowerShell에서 개체를 사용하여 cmdlet 간에 데이터를 전송하는 방법을 설명하고 개체의 특정 속성을 보기 위해 Get<ph id="ph1">\-</ph>Member 및 Format cmdlet을 사용하여 개체에 대한 자세한 정보를 표시하는 몇 가지 방법을 살펴보았습니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>The power of objects is that they provide you with access to a lot of complex data, and it is already correlated.</source>
          <target state="translated">개체 사용의 이점은 많은 복잡한 데이터에 액세스할 수 있을 뿐 아니라 이미 상관 관계가 있다는 것입니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>With some simple techniques you can further manipulate objects to do even more work.</source>
          <target state="translated">간단한 조작만으로 훨씬 더 많은 작업을 수행할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>We are going to look at some specific types of objects and ways you can manipulate them in this chapter.</source>
          <target state="translated">이 장에서는 몇 가지 특정 유형의 개체와 이러한 개체를 조작하는 방법을 설명합니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>