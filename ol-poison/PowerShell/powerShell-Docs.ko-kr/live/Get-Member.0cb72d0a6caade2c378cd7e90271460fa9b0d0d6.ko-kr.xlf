<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ko-kr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-1c394fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d75f782f52514fe0e45c6c2d11e6b8238bf9c8e2</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">reference\5.0\Microsoft.PowerShell.Utility\Get-Member.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions" />
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">a73d92e7bea2161f3cf02bb9e5590f1ef12ec38d</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">3b96567befc087249b7e96c7ccb6567cfa39ad38</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>powershell, cmdlet</source>
          <target state="translated">powershell cmdlet</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Get-Member</source>
          <target state="translated">Get-Member</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Get-Member</source>
          <target state="translated">Get-Member</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>SYNOPSIS</source>
          <target state="translated">요약</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Gets the properties and methods of objects.</source>
          <target state="translated">개체의 속성 및 메서드를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>SYNTAX</source>
          <target state="translated">구문</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>DESCRIPTION</source>
          <target state="translated">설명</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>Get-Member<ept id="p1">**</ept> cmdlet gets the members, the properties and methods, of objects.</source>
          <target state="translated"> <bpt id="p1">**</bpt>Get-member<ept id="p1">**</ept> cmdlet 멤버, 속성 및 개체의 메서드를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>To specify the object, use the <bpt id="p1">*</bpt>InputObject<ept id="p1">*</ept> parameter or pipe an object to <bpt id="p2">**</bpt>Get-Member<ept id="p2">**</ept>.</source>
          <target state="translated">개체를 지정 하려면는 <bpt id="p1">*</bpt>InputObject<ept id="p1">*</ept> 매개 변수 개체 또는 <bpt id="p2">**</bpt>Get-member<ept id="p2">**</ept>합니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>To get information about static members, the members of the class, not of the instance, use the <bpt id="p1">*</bpt>Static<ept id="p1">*</ept> parameter.</source>
          <target state="translated">정적 멤버에 대 한 정보를 가져오려면 하지 인스턴스의 클래스의 멤버는 다음과 같이 사용 됩니다.는 <bpt id="p1">*</bpt>정적<ept id="p1">*</ept> 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>To get only certain types of members, such as <bpt id="p1">**</bpt>NoteProperties<ept id="p1">**</ept>, use the <bpt id="p2">*</bpt>MemberType<ept id="p2">*</ept> parameter.</source>
          <target state="translated">같은 특정 유형의 멤버를 가져오는 데 <bpt id="p1">**</bpt>NoteProperties<ept id="p1">**</ept>, 를 사용 하 여는 <bpt id="p2">*</bpt>MemberType<ept id="p2">*</ept> 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>EXAMPLES</source>
          <target state="translated">예제</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Example 1: Get the members of process objects</source>
          <target state="translated">예 1: 프로세스 개체의 멤버를 가져오기</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>This command displays the properties and methods of the process objects (System.ServiceProcess.ServiceController) that are generated by the Get-Service cmdlet.</source>
          <target state="translated">이 명령은 Get-Service cmdlet에서 생성된 프로세스 개체(System.ServiceProcess.ServiceController)의 속성 및 메서드를 표시합니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>The command uses the pipeline operator (|) to send the output of a <bpt id="p1">**</bpt>Get-Service<ept id="p1">**</ept> command to <bpt id="p2">**</bpt>Get-Member<ept id="p2">**</ept>.</source>
          <target state="translated">명령은 파이프라인 연산자 (|)를 사용 하 여 출력을 <bpt id="p1">**</bpt>Get-service<ept id="p1">**</ept> 명령을 <bpt id="p2">**</bpt>Get-member<ept id="p2">**</ept>합니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Because the <bpt id="p1">**</bpt>Get-Member<ept id="p1">**</ept> part of the command does not have any parameters, it uses all of the default values.</source>
          <target state="translated">때문에 <bpt id="p1">**</bpt>Get-member<ept id="p1">**</ept> 명령 매개 변수, 모든 기본 값을 사용 합니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>As such, it gets all member types, but it does not get static members and does not display intrinsic members.</source>
          <target state="translated">따라서 멤버 유형은 모두 가져오지만 정적 멤버는 가져오지 않으며 내장 멤버를 표시하지도 않습니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Example 2: Get members of service objects</source>
          <target state="translated">예 2: 서비스 개체의 멤버를 가져오기</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>This example gets all of the members (properties and methods) of the service objects (System.ServiceProcess.ServiceController) retrieved by the Get-Service cmdlet, including the intrinsic members, such as PSBase and PSObject, and the get_ and set_ methods.</source>
          <target state="translated">이 예제에서는 PSBase 및 PSObject와 같은 내장 멤버와 get_ 및 set_ 메서드를 비롯하여 Get-Service cmdlet에서 검색된 서비스 개체(System.ServiceProcess.ServiceController)의 모든 멤버(속성 및 메서드)를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>The first command uses the <bpt id="p1">**</bpt>Get-Service<ept id="p1">**</ept> cmdlet to get objects that represent the services on the system.</source>
          <target state="translated">첫 번째 명령은 <bpt id="p1">**</bpt>Get-service<ept id="p1">**</ept> cmdlet을 사용 시스템의 서비스를 나타내는 개체를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>It uses a pipeline operator (|) to pass the service objects to the <bpt id="p1">**</bpt>Get-Member<ept id="p1">**</ept> cmdlet.</source>
          <target state="translated">서비스 개체를 전달 하는 파이프라인 연산자 (|) 사용 하 여 하는 <bpt id="p1">**</bpt>Get-member<ept id="p1">**</ept> cmdlet입니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>Get-Member<ept id="p1">**</ept> command uses the <bpt id="p2">*</bpt>Force<ept id="p2">*</ept> parameter to add the intrinsic members and compiler-generated members of the objects to the display.</source>
          <target state="translated"> <bpt id="p1">**</bpt>Get-member<ept id="p1">**</ept> 명령을 사용 하 여는 <bpt id="p2">*</bpt>Force<ept id="p2">*</ept> 내장 멤버 및 컴파일러에서 생성 된 멤버 개체의 디스플레이에 추가할 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Get-Member<ept id="p1">**</ept> gets these members, but it hides them by default.</source>
          <target state="translated"><bpt id="p1">**</bpt>Get-member<ept id="p1">**</ept> 기본 하지만 이러한 멤버에 게 보이지 않는 하 여 가져옵니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>You can use these properties and methods in the same way that you would use an adapted method of the object.</source>
          <target state="translated">이러한 속성 및 메서드는 조정된 개체 메서드를 사용하는 것과 같은 방식으로 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>The second command shows how to display the value of the PSBase property of the Schedule service.</source>
          <target state="translated">두 번째 명령은 Schedule 서비스의 PSBase 속성 값을 표시하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Example 3: Get extended members of service objects</source>
          <target state="translated">예제 3: 서비스 개체의 멤버를 확장 가져오기</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>This command gets the methods and properties of service objects that were extended by using the Types.ps1xml file or the Add-Member cmdlet.</source>
          <target state="translated">이 명령은 Types.ps1xml 파일 또는 Add-Member cmdlet을 사용하여 확장된 서비스 개체의 메서드 및 속성을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>Get-Member<ept id="p1">**</ept> command uses the <bpt id="p2">*</bpt>View<ept id="p2">*</ept> parameter to get only the extended members of the service objects.</source>
          <target state="translated"> <bpt id="p1">**</bpt>Get-member<ept id="p1">**</ept> 명령을 사용 하 여는 <bpt id="p2">*</bpt>보기<ept id="p2">*</ept> 매개 변수를 서비스 개체의 확장된 된 멤버만 가져옵니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>In this case, the extended member is the Name property, which is an alias property of the ServiceName property.</source>
          <target state="translated">이 경우 확장된 멤버는 ServiceName 속성의 별칭 속성인 Name 속성입니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Example 4: Get script properties of event log objects</source>
          <target state="translated">예 4: 이벤트 로그 개체의 스크립트 속성 가져오기</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>This command gets the script properties of event log objects in the System log in Event Viewer.</source>
          <target state="translated">이 명령은 이벤트 뷰어의 시스템 로그에 있는 이벤트 로그 개체의 스크립트 속성을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>The command uses the <bpt id="p1">*</bpt>MemberType<ept id="p1">*</ept> parameter to get only objects with a value of ScriptProperty for their MemberType property.</source>
          <target state="translated">이 명령은 <bpt id="p1">*</bpt>MemberType<ept id="p1">*</ept> 매개 변수를 MemberType 속성 값이 ScriptProperty 인 개체만 가져옵니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>The command returns the EventID property of the <bpt id="p1">**</bpt>EventLog<ept id="p1">**</ept> object.</source>
          <target state="translated">EventID 속성을 반환 하는 명령은 <bpt id="p1">**</bpt>EventLog<ept id="p1">**</ept> 개체입니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Example 5: Get objects with a specified property</source>
          <target state="translated">예 5: 지정된 된 속성을 사용 하 여 개체를 가져오기</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>This command gets objects that have a MachineName property from a list of cmdlets.</source>
          <target state="translated">이 명령은 cmdlet 목록에서 MachineName 속성을 포함하는 개체를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>The first command stores the names of several cmdlets in the $A variable.</source>
          <target state="translated">첫 번째 명령은 $A 변수에 여러 cmdlet 이름을 저장합니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>The second command uses a <bpt id="p1">**</bpt>ForEach<ept id="p1">**</ept> statement to invoke each command, send the results to <bpt id="p2">**</bpt>Get-Member<ept id="p2">**</ept>, and limit the results from <bpt id="p3">**</bpt>Get-Member<ept id="p3">**</ept> to members that have the name MachineName.</source>
          <target state="translated">두 번째 명령은 <bpt id="p1">**</bpt>ForEach<ept id="p1">**</ept> 결과를 전송 하는 각 명령을 호출 하는 문을 <bpt id="p2">**</bpt>Get-member<ept id="p2">**</ept>, 결과를 제한 하 고 <bpt id="p3">**</bpt>Get-member<ept id="p3">**</ept> MachineName 이름을 가진 멤버에 있습니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>The results show that only process objects (<bpt id="p1">**</bpt>System.Diagnostics.Process<ept id="p1">**</ept>) and service objects (<bpt id="p2">**</bpt>System.ServiceProcess.ServiceController<ept id="p2">**</ept>) have a MachineName property.</source>
          <target state="translated">만 개체를 처리 하는 결과 표시 (<bpt id="p1">**</bpt>System.Diagnostics.Process<ept id="p1">**</ept>) 및 서비스 개체 (<bpt id="p2">**</bpt>System.ServiceProcess.ServiceController<ept id="p2">**</ept>) MachineName 속성을 포함 합니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Example 6: Get members for an array</source>
          <target state="translated">예제 6: 배열에 대 한 멤버를 가져오기</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>This example demonstrates how to find the properties and methods of an array of objects when you have only one object of the given type.</source>
          <target state="translated">이 예제에서는 지정된 유형의 개체가 하나뿐일 때 개체 배열의 속성 및 메서드를 찾는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Because the goal of the command is to find the properties of an array, the first command uses the <bpt id="p1">*</bpt>InputObject<ept id="p1">*</ept> parameter.</source>
          <target state="translated">첫 번째 명령은 사용 하 여 명령의 목표는 배열의 속성을 찾기 위해는 이기 때문에 <bpt id="p1">*</bpt>InputObject<ept id="p1">*</ept> 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>It uses the at symbol (@) to indicate an array.</source>
          <target state="translated">사용 하 여는 기호 (@) 배열을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>In this case, the array contains only one object, the integer 1.</source>
          <target state="translated">이 경우 배열에 포함된 개체는 정수 1 하나뿐입니다.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>The third command uses the <bpt id="p1">**</bpt>Get-Member<ept id="p1">**</ept> cmdlet to get the properties and methods of an array of integers, and the command saves them in the $A variable.</source>
          <target state="translated">세 번째 명령은 <bpt id="p1">**</bpt>Get-member<ept id="p1">**</ept> cmdlet 정수와 명령은 배열의 메서드와 속성을 사용 하 여 $A 변수에 저장 합니다.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>The fourth command uses the Count property of the array to find the number of objects in the $A variable.</source>
          <target state="translated">네 번째 명령은 배열의 Count 속성을 사용 하 여 $A 변수에 개체의 수를 찾을 수 있습니다.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Example 7: Determine which object properties you can set</source>
          <target state="translated">예 7: 어떤 개체 속성을 설정할 수를 확인 합니다.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>This example shows how to determine which properties of an object can be changed.</source>
          <target state="translated">이 예제에서는 변경할 수 있는 개체의 속성을 결정하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>The example uses a file, but you can use this command format to find the changeable properties of any object in Windows PowerShell.</source>
          <target state="translated">이 예제에서는 파일을 사용하지만 Windows PowerShell에서 이 명령을 사용하여 모든 개체의 변경 가능한 속성 찾을 수 있습니다.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>The first command uses the Get-Item cmdlet to get a text file, and then it saves the file object in the $File variable.</source>
          <target state="translated">첫 번째 명령은 Get-item cmdlet를 사용 하 여 텍스트 파일을 읽어 하 고 $File 변수에 파일 개체를 저장 합니다.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>The second command gets all of the changeable properties of the file object in the $File variable and displays the names of the properties in a table.</source>
          <target state="translated">두 번째 명령은 파일 개체의 변경 가능한 속성의 모든 $File 변수에 가져오고 테이블의 속성의 이름을 표시 합니다.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>The third command gets the changeable properties of all objects in your Windows PowerShell session.</source>
          <target state="translated">세 번째 명령은 Windows PowerShell 세션에 있는 모든 개체의 변경 가능한 속성을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Example 8: Get members of each item in a collection</source>
          <target state="translated">예 8: 컬렉션의 각 항목의 멤버를 가져오기</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>This example shows how the <bpt id="p1">*</bpt>InputObject<ept id="p1">*</ept> parameter works in the <bpt id="p2">**</bpt>Get-Member<ept id="p2">**</ept> cmdlet.</source>
          <target state="translated">이 예에서는 방법을 <bpt id="p1">*</bpt>InputObject<ept id="p1">*</ept> 에서 작동 하는 매개 변수는 <bpt id="p2">**</bpt>Get-member<ept id="p2">**</ept> cmdlet입니다.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>When you use the <bpt id="p1">*</bpt>InputObject<ept id="p1">*</ept> parameter to get the members of a collection, <bpt id="p2">**</bpt>Get-Member<ept id="p2">**</ept> gets the members of the collection.</source>
          <target state="translated">사용 하는 경우는 <bpt id="p1">*</bpt>InputObject<ept id="p1">*</ept> 매개 변수는 컬렉션의 멤버를 가져올 <bpt id="p2">**</bpt>Get-member<ept id="p2">**</ept> 컬렉션의 멤버를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>When you pipe a collection of objects to <bpt id="p1">**</bpt>Get-Member<ept id="p1">**</ept>, <bpt id="p2">**</bpt>Get-Member<ept id="p2">**</ept> gets the members of each item in the collection.</source>
          <target state="translated">개체의 컬렉션을 파이프 하면 <bpt id="p1">**</bpt>Get-member<ept id="p1">**</ept>, <bpt id="p2">**</bpt>Get-member<ept id="p2">**</ept> 컬렉션의 각 항목의 멤버를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>The first command gets the services on the local computer and saves the services in the $S variable.</source>
          <target state="translated">첫 번째 명령은 로컬 컴퓨터에 서비스를 가져오고 서비스 $S 변수에 저장 합니다.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>The second command pipes the $S variable to the <bpt id="p1">**</bpt>Get-Member<ept id="p1">**</ept> cmdlet.</source>
          <target state="translated">두 번째 명령은 파이프를 $S 변수에 <bpt id="p1">**</bpt>Get-member<ept id="p1">**</ept> cmdlet입니다.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Get-Member<ept id="p1">**</ept> gets the types of each member of $S and the members of that type.</source>
          <target state="translated"><bpt id="p1">**</bpt>Get-member<ept id="p1">**</ept> $S의 각 멤버와 해당 형식의 멤버의 형식을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>In this case, it gets ServiceController objects and lists the members, such as RequiredServices and Close.</source>
          <target state="translated">이 경우에는 ServiceController 개체를 가져와 멤버(예: RequiredServices 및 Close)를 나열합니다.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>The third command uses the <bpt id="p1">*</bpt>InputObject<ept id="p1">*</ept> parameter of <bpt id="p2">**</bpt>Get-Member<ept id="p2">**</ept> to submit the $S variable.</source>
          <target state="translated">세 번째 명령은 <bpt id="p1">*</bpt>InputObject<ept id="p1">*</ept> 의 매개 변수 <bpt id="p2">**</bpt>Get-member<ept id="p2">**</ept> $S 변수에 전송 하도록 합니다.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Get-Member<ept id="p1">**</ept> gets the type (<bpt id="p2">**</bpt>System.Object<ph id="ph1">\[\]</ph><ept id="p2">**</ept>) and the members of the collection (or array) of <bpt id="p3">**</bpt>ServiceController<ept id="p3">**</ept> objects, such as Count and Clone.</source>
          <target state="translated"><bpt id="p1">**</bpt>Get-member<ept id="p1">**</ept> 형식을 가져옵니다 (<bpt id="p2">**</bpt>System.Object<ph id="ph1">\[\]</ph><ept id="p2">**</ept>)와의 컬렉션 (또는 배열)의 멤버는 <bpt id="p3">**</bpt>ServiceController<ept id="p3">**</ept> Count 및 Clone 등의 개체입니다.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>PARAMETERS</source>
          <target state="translated">매개 변수</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>-Force</source>
          <target state="translated">-Force</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>Adds the intrinsic members (PSBase, PSAdapted, PSObject, PSTypeNames) and the compiler-generated get_ and set_ methods to the display.</source>
          <target state="translated">내장 멤버(PSBase, PSAdapted, PSObject, PSTypeNames)와 컴파일러에서 생성된 get_ 및 set_ 메서드를 표시에 추가합니다.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>By default, <bpt id="p1">**</bpt>Get-Member<ept id="p1">**</ept> gets these properties in all views other than Base and Adapted, but it does not display them.</source>
          <target state="translated">기본적으로 <bpt id="p1">**</bpt>Get-member<ept id="p1">**</ept> 가져옵니다 자료 있으며 Adapted를 제외한 모든 보기에서 이러한 속성 표시 하지는 않습니다.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>The following list describes the properties that are added when you use the <bpt id="p1">*</bpt>Force<ept id="p1">*</ept> parameter:</source>
          <target state="translated">다음 목록은 사용 하는 경우 추가 된 속성의 <bpt id="p1">*</bpt>Force<ept id="p1">*</ept> 매개 변수:</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>PSBase:  The original properties of the .NET Framework object without extension or adaptation.</source>
          <target state="translated">PSBase: 확장 되거나 조정 되지 않은.NET Framework 개체의 원래 속성입니다.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>These are the properties defined for the object class and listed in MSDN.</source>
          <target state="translated">개체 클래스에 대해 정의되며 MSDN에 나열됩니다.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>PSAdapted.</source>
          <target state="translated">PSAdapted 합니다.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>The properties and methods defined in the Windows PowerShell extended type system.</source>
          <target state="translated">Windows PowerShell 확장 유형 시스템에 정의된 속성 및 메서드입니다.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>PSExtended.</source>
          <target state="translated">PSExtended 합니다.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>The properties and methods that were added in the Types.ps1xml files or by using the Add-Member cmdlet.</source>
          <target state="translated">Types.ps1xml 파일에 추가되었거나 Add-Member cmdlet을 사용하여 추가된 속성 및 메서드입니다.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>PSObject.</source>
          <target state="translated">PSObject 합니다.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>The adapter that converts the base object to a Windows PowerShell<bpt id="p1">**</bpt>PSObject<ept id="p1">**</ept> object.</source>
          <target state="translated">Windows PowerShell에 기본 개체를 변환 하는 어댑터<bpt id="p1">**</bpt>PSObject<ept id="p1">**</ept> 개체입니다.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>PSTypeNames.</source>
          <target state="translated">PSTypeNames 합니다.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>A list of object types that describe the object, in order of specificity.</source>
          <target state="translated">구체적인 순서로 개체를 설명하는 개체 유형 목록입니다.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>When formatting the object, Windows PowerShell searches for the types in the Format.ps1xml files in the Windows PowerShell installation directory ($pshome).</source>
          <target state="translated">개체 형식을 지정할 때 Windows PowerShell은 Windows PowerShell 설치 디렉터리($pshome)의 Format.ps1xml 파일에서 유형을 검색하며</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>It uses the formatting definition for the first type that it finds.</source>
          <target state="translated">가장 먼저 발견되는 유형의 형식 지정 정의를 사용합니다.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>-InputObject</source>
          <target state="translated">-InputObject</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>Specifies the object whose members are retrieved.</source>
          <target state="translated">해당 멤버를 검색할 개체를 지정합니다.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>Using the <bpt id="p1">*</bpt>InputObject<ept id="p1">*</ept> parameter is not the same as piping an object to <bpt id="p2">**</bpt>Get-Member<ept id="p2">**</ept>.</source>
          <target state="translated">사용 하 여 <bpt id="p1">*</bpt>InputObject<ept id="p1">*</ept> 매개 변수 개체를 파이프와 동일 하지는 <bpt id="p2">**</bpt>Get-member<ept id="p2">**</ept>합니다.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>The differences are as follows:</source>
          <target state="translated">차이점은 다음과 같습니다.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>When you pipe a collection of objects to <bpt id="p1">**</bpt>Get-Member<ept id="p1">**</ept>, <bpt id="p2">**</bpt>Get-Member<ept id="p2">**</ept> gets the members of the individual objects in the collection, such as the properties of each string in an array of strings.</source>
          <target state="translated">개체의 컬렉션을 파이프 하면 <bpt id="p1">**</bpt>Get-member<ept id="p1">**</ept>, <bpt id="p2">**</bpt>Get-member<ept id="p2">**</ept> 문자열의 배열에서 각 문자열의 속성과 같은 컬렉션의 개별 개체의 멤버를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>When you use <bpt id="p1">*</bpt>InputObject<ept id="p1">*</ept> to submit a collection of objects, <bpt id="p2">**</bpt>Get-Member<ept id="p2">**</ept> gets the members of the collection, such as the properties of the array in an array of strings.</source>
          <target state="translated">사용 하는 경우 <bpt id="p1">*</bpt>InputObject<ept id="p1">*</ept> 개체의 컬렉션을 제출할 <bpt id="p2">**</bpt>Get-member<ept id="p2">**</ept> 문자열의 배열에 배열의 속성과 같은 컬렉션의 멤버를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>-MemberType</source>
          <target state="translated">-MemberType</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>Specifies the member type that this cmdlet gets.</source>
          <target state="translated">이 cmdlet을 가져옵니다 멤버 유형을 지정 합니다.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>The default is All.</source>
          <target state="translated">기본값은 [모두]입니다.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>The acceptable values for this parameter are:</source>
          <target state="translated">이 매개 변수에 허용되는 값은 다음과 같습니다.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>AliasProperty</source>
          <target state="translated">AliasProperty</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>CodeProperty</source>
          <target state="translated">CodeProperty</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>Property</source>
          <target state="translated">속성</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>NoteProperty</source>
          <target state="translated">NoteProperty</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>ScriptProperty</source>
          <target state="translated">ScriptProperty</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>Properties</source>
          <target state="translated">속성</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>PropertySet</source>
          <target state="translated">PropertySet</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>Method</source>
          <target state="translated">방법</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>CodeMethod</source>
          <target state="translated">CodeMethod</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>ScriptMethod</source>
          <target state="translated">ScriptMethod</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>Methods</source>
          <target state="translated">메서드</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>ParameterizedProperty</source>
          <target state="translated">ParameterizedProperty</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>MemberSet</source>
          <target state="translated">멤버 집합</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>Event</source>
          <target state="translated">이벤트</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>Dynamic</source>
          <target state="translated">동적</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>All</source>
          <target state="translated">모두</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>For information about these values, see PSMemberTypes Enumeration"https://msdn.microsoft.com/en-us/library/system.management.automation.psmembertypes(v=vs.85).aspx (https://msdn.microsoft.com/en-us/library/system.management.automation.psmembertypes(v=vs.85).aspx ) in MSDN.</source>
          <target state="translated">이러한 값에 대 한 내용은 참조 PSMemberTypes 열거 "https://msdn.microsoft.com/en-us/library/system.management.automation.psmembertypes (v=vs.85).aspx (https://msdn.microsoft.com/en-us/library/system.management.automation.psmembertypes (v=vs.85).aspx) MSDN에 있습니다.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>Not all objects have every type of member.</source>
          <target state="translated">모든 개체가 모든 멤버 유형을 포함하는 것은 아닙니다.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>If you specify a member type that the object does not have, Windows PowerShell returns a null value.</source>
          <target state="translated">개체에 포함되지 않은 멤버 유형을 지정하면 Windows PowerShell에서 null 값이 반환됩니다.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>To get related types of members, such as all extended members, use the <bpt id="p1">*</bpt>View<ept id="p1">*</ept> parameter.</source>
          <target state="translated">모든 확장 된 멤버와 같이 멤버의 관련된 형식을 가져오려면는 <bpt id="p1">*</bpt>보기<ept id="p1">*</ept> 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>If you use the <bpt id="p1">*</bpt>MemberType<ept id="p1">*</ept> parameter with the <bpt id="p2">*</bpt>Static<ept id="p2">*</ept> or <bpt id="p3">*</bpt>View<ept id="p3">*</ept> parameters, <bpt id="p4">**</bpt>Get-Member<ept id="p4">**</ept> gets the members that belong to both sets.</source>
          <target state="translated">사용 하는 경우는 <bpt id="p1">*</bpt>MemberType<ept id="p1">*</ept> 매개 변수는 <bpt id="p2">*</bpt>정적<ept id="p2">*</ept> 또는 <bpt id="p3">*</bpt>보기<ept id="p3">*</ept> 매개 변수를 <bpt id="p4">**</bpt>Get-member<ept id="p4">**</ept> 집합에 모두 속하는 멤버를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>-Name</source>
          <target state="translated">-Name</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>Specifies the names of one or more properties or methods of the object.</source>
          <target state="translated">개체의 속성 또는 메서드 이름을 하나 이상 지정합니다.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Get-Member<ept id="p1">**</ept> gets only the specified properties and methods.</source>
          <target state="translated"><bpt id="p1">**</bpt>Get-member<ept id="p1">**</ept> 지정 된 속성 및 메서드만 가져옵니다.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>If you use the <bpt id="p1">*</bpt>Name<ept id="p1">*</ept> parameter with the <bpt id="p2">*</bpt>MemberType<ept id="p2">*</ept>, <bpt id="p3">*</bpt>View<ept id="p3">*</ept>, or <bpt id="p4">*</bpt>Static<ept id="p4">*</ept> parameter, <bpt id="p5">**</bpt>Get-Member<ept id="p5">**</ept> gets only the members that satisfy the criteria of all parameters.</source>
          <target state="translated">사용 하는 경우는 <bpt id="p1">*</bpt>이름<ept id="p1">*</ept> 매개 변수는 <bpt id="p2">*</bpt>MemberType<ept id="p2">*</ept>, <bpt id="p3">*</bpt>보기<ept id="p3">*</ept>, 또는 <bpt id="p4">*</bpt>정적<ept id="p4">*</ept> 매개 변수를 <bpt id="p5">**</bpt>Get-member<ept id="p5">**</ept> 모든 매개 변수의 조건을 충족 하는 멤버만 가져옵니다.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>To get a static member by name, use the <bpt id="p1">*</bpt>Static<ept id="p1">*</ept> parameter with the <bpt id="p2">*</bpt>Name<ept id="p2">*</ept> parameter.</source>
          <target state="translated">정적 멤버를 이름별으로 가져오려면는 <bpt id="p1">*</bpt>정적<ept id="p1">*</ept> 매개 변수는 <bpt id="p2">*</bpt>이름<ept id="p2">*</ept> 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>-Static</source>
          <target state="translated">-Static</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>Indicates that this cmdlet gets only the static properties and methods of the object.</source>
          <target state="translated">정적 속성 및 메서드는 개체의이 cmdlet을 가져옴을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>Static properties and methods are defined on the class of objects, not on any particular instance of the class.</source>
          <target state="translated">정적 속성 및 메서드는 클래스의 특정 인스턴스가 아닌 개체의 클래스에 정의됩니다.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>If you use the <bpt id="p1">*</bpt>Static<ept id="p1">*</ept> parameter with the <bpt id="p2">*</bpt>View<ept id="p2">*</ept> parameter, the <bpt id="p3">*</bpt>View<ept id="p3">*</ept> parameter is ignored.</source>
          <target state="translated">사용 하는 경우는 <bpt id="p1">*</bpt>정적<ept id="p1">*</ept> 매개 변수는 <bpt id="p2">*</bpt>보기<ept id="p2">*</ept> 매개 변수는 <bpt id="p3">*</bpt>보기<ept id="p3">*</ept> 매개 변수는 무시 됩니다.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>If you use the <bpt id="p1">*</bpt>Static<ept id="p1">*</ept> parameter with the <bpt id="p2">*</bpt>MemberType<ept id="p2">*</ept> parameter, <bpt id="p3">**</bpt>Get-Member<ept id="p3">**</ept> gets only the members that belong to both sets.</source>
          <target state="translated">사용 하는 경우는 <bpt id="p1">*</bpt>정적<ept id="p1">*</ept> 매개 변수는 <bpt id="p2">*</bpt>MemberType<ept id="p2">*</ept> 매개 변수를 <bpt id="p3">**</bpt>Get-member<ept id="p3">**</ept> 집합에 모두 속하는 멤버만 가져옵니다.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>-View</source>
          <target state="translated">-보기</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>Specifies that this cmdlet gets only particular types properties and methods.</source>
          <target state="translated">이 cmdlet만 특정 형식의 속성 및 메서드를 가져옴을 지정 합니다.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>Specify one or more of the values.</source>
          <target state="translated">하나 이상의 값을 지정합니다.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>The default is Adapted, Extended.</source>
          <target state="translated">기본값 적용 되었습니다 확장 합니다.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>Valid values are:</source>
          <target state="translated">유효한 값은</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>Base.</source>
          <target state="translated">기준입니다.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>Gets only the original properties and methods of the .NET Framework object (without extension or adaptation).</source>
          <target state="translated">확장되거나 조정되지 않은 .NET Framework 개체의 원래 속성 및 메서드만 가져옵니다.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>Adapted.</source>
          <target state="translated">조정 합니다.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>Gets only the properties and methods defined in the Windows PowerShell extended type system.</source>
          <target state="translated">Windows PowerShell 확장 유형 시스템에 정의된 속성 및 메서드를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>Extended.</source>
          <target state="translated">확장입니다.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>Gets only the properties and methods that were added in the Types.ps1xml files or by using the Add-Member cmdlet.</source>
          <target state="translated">Types.ps1xml 파일에 추가되었거나 Add-Member cmdlet을 사용하여 추가된 속성 및 메서드만 가져옵니다.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>All.</source>
          <target state="translated">모든.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>Gets the members in the Base, Adapted, and Extended views.</source>
          <target state="translated">Base, Adapted 및 Extended 보기의 멤버를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">*</bpt>View<ept id="p1">*</ept> parameter determines the members retrieved, not just the display of those members.</source>
          <target state="translated"> <bpt id="p1">*</bpt>보기<ept id="p1">*</ept> 매개 변수 멤버를 검색할 뿐만 아니라 해당 멤버의 표시를 결정 합니다.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>To get particular member types, such as script properties, use the <bpt id="p1">*</bpt>MemberType<ept id="p1">*</ept> parameter.</source>
          <target state="translated">스크립트 속성과 같은 특정 멤버 유형을 가져오려면는 <bpt id="p1">*</bpt>MemberType<ept id="p1">*</ept> 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>If you use the <bpt id="p1">*</bpt>MemberType<ept id="p1">*</ept> and <bpt id="p2">*</bpt>View<ept id="p2">*</ept> parameters in the same command, <bpt id="p3">**</bpt>Get-Member<ept id="p3">**</ept> gets the members that belong to both sets.</source>
          <target state="translated">사용 하는 경우는 <bpt id="p1">*</bpt>MemberType<ept id="p1">*</ept> 및 <bpt id="p2">*</bpt>보기<ept id="p2">*</ept> 동일한 명령에 매개 변수 <bpt id="p3">**</bpt>Get-member<ept id="p3">**</ept> 집합에 모두 속하는 멤버를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>If you use the <bpt id="p1">*</bpt>Static<ept id="p1">*</ept> and <bpt id="p2">*</bpt>View<ept id="p2">*</ept> parameters in the same command, the <bpt id="p3">*</bpt>View<ept id="p3">*</ept> parameter is ignored.</source>
          <target state="translated">사용 하는 경우는 <bpt id="p1">*</bpt>정적<ept id="p1">*</ept> 및 <bpt id="p2">*</bpt>보기<ept id="p2">*</ept> 동일한 명령에 매개 변수는 <bpt id="p3">*</bpt>보기<ept id="p3">*</ept> 매개 변수는 무시 됩니다.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>CommonParameters</source>
          <target state="translated">CommonParameters</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutVariable, -OutBuffer, -PipelineVariable, -Verbose, -WarningAction, and -WarningVariable.</source>
          <target state="translated">이 cmdlet은 공통 매개 변수:-디버그,-ErrorAction,-ErrorVariable,-InformationAction,-InformationVariable,-OutVariable,-OutBuffer,-PipelineVariable,-Verbose,-WarningAction 및-warningvariable을 지원 합니다.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>For more information, see about_CommonParameters (http://go.microsoft.com/fwlink/?LinkID=113216).</source>
          <target state="translated">자세한 내용은 about_CommonParameters (http://go.microsoft.com/fwlink/?LinkID=113216)를 참조 합니다.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>INPUTS</source>
          <target state="translated">입력</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>System.Management.Automation.PSObject</source>
          <target state="translated">System.Management.Automation.PSObject</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source>You can pipe any object to <bpt id="p1">**</bpt>Get-Member<ept id="p1">**</ept>.</source>
          <target state="translated">모든 개체를 파이프할 수 있습니다 <bpt id="p1">**</bpt>Get-member<ept id="p1">**</ept>합니다.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source>OUTPUTS</source>
          <target state="translated">출력</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source>Microsoft.PowerShell.Commands.MemberDefinition</source>
          <target state="translated">Microsoft.PowerShell.Commands.MemberDefinition</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Get-Member<ept id="p1">**</ept> returns an object for each property or method that its gets.</source>
          <target state="translated"><bpt id="p1">**</bpt>Get-member<ept id="p1">**</ept> 각 메서드나 속성에 대 한 개체를 반환 해당 가져옵니다.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source>NOTES</source>
          <target state="translated">참고 사항</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source>You can get information about a collection object either by using the <bpt id="p1">*</bpt>InputObject<ept id="p1">*</ept> parameter or by piping the object, preceded by a comma, to <bpt id="p2">**</bpt>Get-Member<ept id="p2">**</ept>.</source>
          <target state="translated">사용 하 여 컬렉션 개체에 대 한 정보를 얻을 수는 <bpt id="p1">*</bpt>InputObject<ept id="p1">*</ept> 매개 변수 또는 개체를 앞에 쉼표가 파이프 하 여 <bpt id="p2">**</bpt>Get-member<ept id="p2">**</ept>합니다.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve">
          <source>You can use the $This automatic variable in script blocks that define the values of new properties and methods.</source>
          <target state="translated">새 속성 및 메서드는 값을 정의 하는 스크립트 블록의 $This 자동 변수를 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source>The $This variable refers to the instance of the object to which the properties and methods are being added.</source>
          <target state="translated">$가이 변수를 속성 및 메서드는 추가 되는 개체의 인스턴스를 참조 합니다.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source>For more information about the $This variable, see about_Automatic_Variables.</source>
          <target state="translated">$This 변수에 대 한 자세한 내용은 about_Automatic_Variables를 참조 합니다.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source>RELATED LINKS</source>
          <target state="translated">관련된 링크</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve">
          <source>Add-Member</source>
          <target state="translated">Add-Member</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve">
          <source>Get-Command</source>
          <target state="translated">Get-Command</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve">
          <source>Get-Help</source>
          <target state="translated">Get-Help</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve">
          <source>Get-PSDrive</source>
          <target state="translated">Get-PSDrive</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve">
          <source>about_Automatic_Variables</source>
          <target state="translated">about_Automatic_Variables</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve">
          <source>about_Properties</source>
          <target state="translated">about_Properties</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve">
          <source>about_Methods</source>
          <target state="translated">about_methods</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve">
          <source>about_Objects</source>
          <target state="translated">about_Objects</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>