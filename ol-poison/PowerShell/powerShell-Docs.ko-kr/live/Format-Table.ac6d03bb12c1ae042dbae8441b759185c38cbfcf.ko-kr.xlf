<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ko-kr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-1c394fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">bc24770f7e6f760b98d3de7f96b64c2df63cc315</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">reference\5.0\Microsoft.PowerShell.Utility\Format-Table.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions" />
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">8c3eb4f1c0b6f2f0fd467995ef34d108a97e691f</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">73103493f9cc5c04fff6a361217a58840845879a</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>powershell, cmdlet</source>
          <target state="translated">powershell cmdlet</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Format-Table</source>
          <target state="translated">Format-Table</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Format-Table</source>
          <target state="translated">Format-Table</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>SYNOPSIS</source>
          <target state="translated">요약</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Formats the output as a table.</source>
          <target state="translated">출력 형식을 테이블로 지정합니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>SYNTAX</source>
          <target state="translated">구문</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>DESCRIPTION</source>
          <target state="translated">설명</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>Format-Table<ept id="p1">**</ept> cmdlet formats the output of a command as a table with the selected properties of the object in each column.</source>
          <target state="translated"> <bpt id="p1">**</bpt>Format-table<ept id="p1">**</ept> cmdlet 선택한 각 열에 있는 개체의 속성을 테이블로 명령 출력의 형식을 지정 합니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>The object type determines the default layout and properties that are displayed in each column, but you can use the <bpt id="p1">*</bpt>Property<ept id="p1">*</ept> parameter to select the properties that you want to see.</source>
          <target state="translated">개체 형식은 기본 레이아웃 및 각 열에 표시 되는 속성을 결정 하지만 사용할 수는 <bpt id="p1">*</bpt>속성<ept id="p1">*</ept> 매개 변수를 확인 하려면 속성을 선택 합니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>You can also use a hash table to add calculated properties to an object before displaying it and to specify the column headings in the table.</source>
          <target state="translated">해시 테이블을 사용하여 계산된 속성을 개체에 추가한 후에 표시할 수도 있고 테이블의 열 머리글을 지정할 수도 있습니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>To add a calculated property, use the <bpt id="p1">*</bpt>Property<ept id="p1">*</ept> or <bpt id="p2">*</bpt>GroupBy<ept id="p2">*</ept> parameter.</source>
          <target state="translated">계산 된 속성을 추가 하려면 사용 된 <bpt id="p1">*</bpt>속성<ept id="p1">*</ept> 또는 <bpt id="p2">*</bpt>GroupBy<ept id="p2">*</ept> 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>EXAMPLES</source>
          <target state="translated">예제</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Example 1: Format PowerShell snap-ins</source>
          <target state="translated">예제 1: 형식 PowerShell 스냅인</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>This command formats information about Windows PowerShell snap-ins in a table.</source>
          <target state="translated">이 명령은 테이블의 모든 Windows PowerShell 스냅인에 대한 정보의 형식을 지정합니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>By default, they are formatted in a list.</source>
          <target state="translated">기본적으로 이 정보 형식은 목록으로 지정됩니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>The Get-PSSnapin cmdlet gets objects representing the snap-ins.</source>
          <target state="translated">Get-pssnapin cmdlet은 스냅인을 나타내는 개체를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>The pipeline operator (|) passes the object to the <bpt id="p1">**</bpt>Format-Table<ept id="p1">**</ept> command.</source>
          <target state="translated">에 개체를 전달 하는 파이프라인 연산자 (|)는 <bpt id="p1">**</bpt>Format-table<ept id="p1">**</ept> 명령입니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Format-Table<ept id="p1">**</ept> formats the objects in a table.</source>
          <target state="translated"><bpt id="p1">**</bpt>Format-table<ept id="p1">**</ept> 테이블의 개체 형식을 지정 합니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">*</bpt>Autosize<ept id="p1">*</ept> parameter adjusts the column widths to minimize truncation.</source>
          <target state="translated"> <bpt id="p1">*</bpt>Autosize<ept id="p1">*</ept> 잘림 최소화 하기 위해 열 너비를 조정 하는 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Example 2: Format processes by BasePriority</source>
          <target state="translated">예제 2: 서식을 BasePriority 기준으로 프로세스</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>This command displays the processes on the computer in groups with the same base priority.</source>
          <target state="translated">이 명령은 컴퓨터의 프로세스를 기본 우선 순위가 같은 프로세스별로 그룹화하여 표시합니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>The Get-Process cmdlet gets objects representing each process on the computer.</source>
          <target state="translated">Get-process cmdlet는 컴퓨터에 있는 각 프로세스를 나타내는 개체를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>The pipeline operator (|) passes the object to the Sort-Object cmdlet, which sorts the objects in order of their base priority.</source>
          <target state="translated">파이프라인 연산자 (|)를 Sort-object cmdlet의 기본 우선 순위에 따라에서 개체를 정렬 하는 개체를 전달 합니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Another pipeline operator passes the results to the <bpt id="p1">**</bpt>Format-Table<ept id="p1">**</ept> cmdlet.</source>
          <target state="translated">다른 파이프라인 연산자는 결과에 전달 된 <bpt id="p1">**</bpt>Format-table<ept id="p1">**</ept> cmdlet입니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">*</bpt>GroupBy<ept id="p1">*</ept> parameter arranges the data about the processes into groups based on the value of their BasePriority property.</source>
          <target state="translated"> <bpt id="p1">*</bpt>GroupBy<ept id="p1">*</ept> BasePriority 속성의 값에 따라 그룹으로 프로세스에 대 한 데이터를 정렬 하는 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">*</bpt>Wrap<ept id="p1">*</ept> parameter ensures that data is not truncated.</source>
          <target state="translated"> <bpt id="p1">*</bpt>래핑할<ept id="p1">*</ept> 매개 변수를 사용 하면 데이터는 잘리지 않습니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Example 3: Format processes by start date</source>
          <target state="translated">시작 날짜 여 예 3: 형식 처리</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>This command displays information about the processes on the computer in group based on the start date of the process.</source>
          <target state="translated">이 명령은 프로세스의 시작 날짜에 따라 그룹화된 컴퓨터의 프로세스에 대한 정보를 표시하고</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>It uses the Get-Process cmdlet to get objects representing the processes on the computer.</source>
          <target state="translated">Get-process cmdlet를 사용 하 여 컴퓨터의 프로세스를 나타내는 개체를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>The pipeline operator (|) sends the output of Get-Process to the Sort-Object cmdlet, which sorts it based on the StartTime property.</source>
          <target state="translated">파이프라인 연산자 (|) 보냅니다 Get-process의 출력 Sort-object cmdlet으로 보내 StartTime 속성에 따라 정렬 합니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Another pipeline operator sends the sorted results to <bpt id="p1">**</bpt>Format-Table<ept id="p1">**</ept>.</source>
          <target state="translated">다른 파이프라인 연산자가 정렬 된 결과를 <bpt id="p1">**</bpt>Format-table<ept id="p1">**</ept>합니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">*</bpt>View<ept id="p1">*</ept> parameter is used to select the StartTime view that is defined in the DotNetTypes.format.ps1xml formatting file for <bpt id="p2">**</bpt>System.Diagnostics.Process<ept id="p2">**</ept> objects, such as those returned by <bpt id="p3">**</bpt>Get-Process<ept id="p3">**</ept>.</source>
          <target state="translated"> <bpt id="p1">*</bpt>보기<ept id="p1">*</ept> 매개 변수를 사용에 대 한 DotNetTypes.format.ps1xml 형식 지정 파일에 정의 된 StartTime 보기 선택 <bpt id="p2">**</bpt>System.Diagnostics.Process<ept id="p2">**</ept> 개체를 반환한 것과 같은 <bpt id="p3">**</bpt>Get-process<ept id="p3">**</ept>합니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>This view converts the StartTime of the process to a short date and then groups the processes by start date.</source>
          <target state="translated">이 보기는 프로세스의 StartTime을 간단한 날짜로 변환한 다음 시작 날짜별로 프로세스를 그룹화합니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>The DotNetTypes.format.ps1xml formatting file also contains a Priority view for processes, and you can create your own format.ps1xml files with customized views.</source>
          <target state="translated">DotNetTypes.format.ps1xml 형식 지정 파일에도 프로세스에 대한 우선 순위 보기가 포함되어 있으며 사용자 지정된 보기로 직접 format.ps1xml 파일을 만들 수 있습니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Example 4: Format services</source>
          <target state="translated">예 4: 형식 서비스</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>This command displays all of the services on the computer in a table with two columns, Name and DependentServices.</source>
          <target state="translated">이 명령은 Name과 DependentServices라는 두 개의 열이 있는 표에 컴퓨터의 서비스를 모두 표시하고</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>The command uses the Get-Service cmdlet to get all of the services on the computer.</source>
          <target state="translated">이 명령은 컴퓨터에서 모든 서비스를 가져오려는 Get-service cmdlet을 사용 합니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>The pipeline operator (|) sends the results to the <bpt id="p1">**</bpt>Format-Table<ept id="p1">**</ept> cmdlet, which formats the output in a table.</source>
          <target state="translated">파이프라인 연산자 (|)는 결과를 전송는 <bpt id="p1">**</bpt>Format-table<ept id="p1">**</ept> cmdlet으로 테이블에 출력의 형식을 지정 합니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">*</bpt>Property<ept id="p1">*</ept> parameter specifies the properties that appear in the table as columns.</source>
          <target state="translated"> <bpt id="p1">*</bpt>속성<ept id="p1">*</ept> 매개 변수 테이블의 열으로 표시 되는 속성을 지정 합니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>The name of the <bpt id="p1">*</bpt>Property<ept id="p1">*</ept> parameter is optional, so you can omit it, for example <ph id="ph1">`format-table name, dependentservices`</ph>.</source>
          <target state="translated">이름에서 <bpt id="p1">*</bpt>속성<ept id="p1">*</ept> 매개 변수가 선택 사항 이므로 생략할 수 있습니다, 예를 들어 <ph id="ph1">`format-table name, dependentservices`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Name and DependentServices are just two of the properties of service objects.</source>
          <target state="translated">Name 및 DependentServices는 서비스 개체의 속성입니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>To view all of the properties, type <ph id="ph1">`get-service | get-member`</ph>.</source>
          <target state="translated">입력의 모든 속성을 보려면 <ph id="ph1">`get-service | get-member`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Example 5: Format a process and calculate its running time</source>
          <target state="translated">예제 5: 프로세스를 서식을 지정 하 고 해당 실행 시간을 계산 합니다.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>This command shows how to use a calculated property in a table.</source>
          <target state="translated">이 명령은 표에 계산된 속성 사용 방법을 표시하고</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>The command displays a table with the process name and total running time of all Notepad processes on the local computer.</source>
          <target state="translated">로컬 컴퓨터의 모든 메모장 프로세스의 프로세스 이름과 총 실행 시간이 있는 테이블을 표시합니다.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>The total running time is calculated by subtracting the start time of each process from the current time.</source>
          <target state="translated">총 실행 시간은 현재 시간에서 각 프로세스의 시작 시간을 빼서 계산합니다.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>The command uses the Get-Process cmdlet to get all processes named Notepad on the local computer.</source>
          <target state="translated">이 명령은 Get-process cmdlet를 사용 하 여 로컬 컴퓨터에서 메모장을 라는 모든 프로세스를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>The pipeline operator (|) sends the results to <bpt id="p1">**</bpt>Format-Table<ept id="p1">**</ept>, which displays a table with two columns: ProcessName, a standard property of processes, and TotalRunningTime, a calculated property.</source>
          <target state="translated">파이프라인 연산자 (|)는 결과를 전송 <bpt id="p1">**</bpt>Format-table<ept id="p1">**</ept>, 두 개의 열이 있는 테이블을 표시 하는: 프로세스의 표준 속성인 ProcessName 및 TotalRunningTime, 계산 된 속성입니다.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>The TotalRunningTime property is specified by a hash table with two keys, Label and Expression.</source>
          <target state="translated">TotalRunningTime 속성은 Label과 Expression이라는 두 개의 키가 있는 해시 테이블에서 지정됩니다.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>The name of the property is assigned to the Label key.</source>
          <target state="translated">속성 이름은 Label 키에 할당됩니다.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>The calculation is assigned to the Expression key.</source>
          <target state="translated">계산은 Expression 키에 할당됩니다.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>The expression gets the StartTime property of each process object and subtracts it from the result of a Get-Date command, which gets the current date and time.</source>
          <target state="translated">식은 각 프로세스 개체의 StartTime 속성 가져오고 현재 날짜 및 시간을 가져오는 Get-date 명령의 결과에서 뺍니다.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Example 6: Format Notepad processes</source>
          <target state="translated">예제 6: 형식 메모장 프로세스</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>These commands are similar to the previous command, except that these commands use the Get-WmiObject cmdlet and the Win32_Process class to display information about Notepad processes on a remote computer.</source>
          <target state="translated">이러한 명령은이 명령은 Get-wmiobject cmdlet 및 Win32_Process 클래스를 사용 하 여 원격 컴퓨터에 메모장 프로세스에 대 한 정보를 표시 한다는 점을 제외 하면 이전 명령을 비슷합니다.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>The first command uses the <bpt id="p1">**</bpt>Get-WmiObject<ept id="p1">**</ept> cmdlet to get instances of the Windows Management Instrumentation (WMI) Win32_Process class that describes all of the processes on the Server01 computer that are named Notepad.exe.</source>
          <target state="translated">첫 번째 명령은 <bpt id="p1">**</bpt>Get-wmiobject<ept id="p1">**</ept> cmdlet Notepad.exe 라는 Server01 컴퓨터에 모든 프로세스를 설명 하는 Windows WMI (Management Instrumentation) Win32_Process 클래스의 인스턴스를 가져와야 합니다.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>The command stores the process information in the $Processes variable.</source>
          <target state="translated">이 명령은 $Processes 변수에 프로세스 정보를 저장합니다.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>The second command uses a pipeline operator (|) to send the process information in the $Processes variable to the <bpt id="p1">**</bpt>Format-Table<ept id="p1">**</ept> cmdlet, which displays the ProcessName of each process along with a new calculated property.</source>
          <target state="translated">두 번째 명령은를 사용 하 여 파이프라인 연산자 (|)를 $Processes 변수에 프로세스 정보를 보내는 <bpt id="p1">**</bpt>Format-table<ept id="p1">**</ept> 새로 계산 된 속성을 함께 각 프로세스의 ProcessName를 표시 하는 cmdlet입니다.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>The command assigns the name of the new calculated property, Total Running Time, to the Label key.</source>
          <target state="translated">이 명령은 새로 계산된 속성 "Total Running Time"을 Label 키에 할당합니다.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>The script block that is assigned to the Expression key calculates how long the process has been running by subtracting the creation date of the process from the current date.</source>
          <target state="translated">Expression 키에 할당된 스크립트 블록이 현재 날짜에서 프로세스 만든 날짜를 빼서 프로세스 실행 시간을 계산합니다.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>The Get-Date cmdlet gets the current date.</source>
          <target state="translated">Get-Date cmdlet은 현재 날짜를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>The ConvertToDateTime method converts the CreationDate property of the Win32_Process object from a WMI CIM_DATETIME object to a Microsoft .NET Framework<bpt id="p1">**</bpt>DateTime<ept id="p1">**</ept> object that can be compared with the output of <bpt id="p2">**</bpt>Get-Date<ept id="p2">**</ept>.</source>
          <target state="translated">ConvertToDateTime 메서드는 Microsoft.NET Framework에는 WMI CIM_DATETIME 개체에서 Win32_Process 개체의 CreationDate 속성 변환<bpt id="p1">**</bpt>DateTime<ept id="p1">**</ept> 출력으로 비교할 수 있는 개체 <bpt id="p2">**</bpt>Get-date<ept id="p2">**</ept>합니다.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>Then, the converted creation date is subtracted from the current date.</source>
          <target state="translated">그런 다음 현재 날짜에서 변환된 만든 날짜를 뺍니다.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>The result is the value of Total Running Time.</source>
          <target state="translated">그 결과가 Total Running Time의 값입니다.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>PARAMETERS</source>
          <target state="translated">매개 변수</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>-AutoSize</source>
          <target state="translated">-자동 크기 조정</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>Indicates that the cmdlet adjusts the column size and number of columns based on the width of the data.</source>
          <target state="translated">Cmdlet는 데이터의 너비를 기준으로 열 수와 열 크기 조정 있는지를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>By default, the column size and number are determined by the view.</source>
          <target state="translated">기본적으로 열 크기 및 수는 뷰에 따라 결정됩니다.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>-DisplayError</source>
          <target state="translated">-DisplayError</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>Indicates that the cmdlet displays errors at the command line.</source>
          <target state="translated">명령줄에서 오류를 표시 하는 cmdlet을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>This parameter is rarely used, but can be used as a debugging aid when you are formatting expressions in a <bpt id="p1">**</bpt>Format-Table<ept id="p1">**</ept> command, and the expressions do not appear to be working.</source>
          <target state="translated">이 매개 변수는 거의 사용 되지 않지만 식에 형식을 지정 하는 경우 디버깅 도구로 사용할 수는 <bpt id="p1">**</bpt>Format-table<ept id="p1">**</ept> 명령 및 식 작업 표시 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>The following shows an example of the results of adding the DisplayError parameter with an expression.</source>
          <target state="translated">다음 예제에서는 식을 사용하여 DisplayError 매개 변수를 추가할 경우의 결과를 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>PS <ph id="ph1">\&gt;</ph> Get-Date | Format-Table DayOfWeek,{ $<bpt id="p1">_</bpt> / $null } -ShowError DayOfWeek  $<ept id="p1">_</ept> / $null</source>
          <target state="translated">PS <ph id="ph1">\&gt;</ph> Get-date | Format-table DayOfWeek {$<bpt id="p1">_</bpt> / $null}-ShowError DayOfWeek $<ept id="p1">_</ept> / $null</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>Wednesday #ERR</source>
          <target state="translated">수요일 #ERR</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>-Expand</source>
          <target state="translated">-확장</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>Specifies the format of the collection object, as well as the objects in the collection.</source>
          <target state="translated">컬렉션의 개체와 함께 컬렉션 개체의 형식을 지정합니다.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>This parameter is designed to format objects that support the ICollection (System.Collections) interface.</source>
          <target state="translated">이 매개 변수는 ICollection(System.Collections) 인터페이스를 지원하는 개체의 형식을 지정할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>The default value is EnumOnly.</source>
          <target state="translated">기본값은 EnumOnly입니다.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>The acceptable values for this parameter are:</source>
          <target state="translated">이 매개 변수에 허용되는 값은 다음과 같습니다.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>EnumOnly.</source>
          <target state="translated">EnumOnly입니다.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>Displays the properties of the objects in the collection.</source>
          <target state="translated">컬렉션에 있는 개체의 속성을 표시합니다.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>CoreOnly.</source>
          <target state="translated">CoreOnly 합니다.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>Displays the properties of the collection object.</source>
          <target state="translated">컬렉션 개체의 속성을 표시합니다.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>Both.</source>
          <target state="translated">둘 다.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>Displays the properties of the collection object and the properties of objects in the collection.</source>
          <target state="translated">컬렉션 개체의 속성과 컬렉션에 있는 개체의 속성을 표시합니다.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>-Force</source>
          <target state="translated">-Force</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>Indicates that the cmdlet directs the cmdlet to display all of the error information.</source>
          <target state="translated">Cmdlet은 cmdlet의 모든 오류 정보를 표시 하는 조정이 나타냅니다.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>Use with the <bpt id="p1">*</bpt>DisplayError<ept id="p1">*</ept> or <bpt id="p2">*</bpt>ShowError<ept id="p2">*</ept> parameter.</source>
          <target state="translated">와 함께 사용 된 <bpt id="p1">*</bpt>DisplayError<ept id="p1">*</ept> 또는 <bpt id="p2">*</bpt>ShowError<ept id="p2">*</ept> 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>By default, when an error object is written to the error or display streams, only some of the error information is displayed.</source>
          <target state="translated">기본적으로 오류 또는 표시 스트림에 오류 개체를 쓰는 경우 일부 오류 정보만 표시됩니다.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>-GroupBy</source>
          <target state="translated">-GroupBy</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>Specifies sorted output in separate tables based on a property value.</source>
          <target state="translated">속성 값에 따라 별도 테이블에 정렬 된 출력을 지정 합니다.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>For example, you can use <bpt id="p1">*</bpt>GroupBy<ept id="p1">*</ept> to list services in separate tables based on their status.</source>
          <target state="translated">예를 들어, 사용할 수 있습니다 <bpt id="p1">*</bpt>GroupBy<ept id="p1">*</ept> 목록 서비스의 상태에 따라 별도 테이블에 있습니다.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>Enter an expression or a property of the output.</source>
          <target state="translated">출력의 식이나 속성을 입력하세요.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>The output must be sorted before you send it to <bpt id="p1">**</bpt>Format-Table<ept id="p1">**</ept>.</source>
          <target state="translated">출력을 보내기 전에 정렬 해야 <bpt id="p1">**</bpt>Format-table<ept id="p1">**</ept>합니다.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>The value of the <bpt id="p1">*</bpt>GroupBy<ept id="p1">*</ept> parameter can be a new calculated property.</source>
          <target state="translated">값은 <bpt id="p1">*</bpt>GroupBy<ept id="p1">*</ept> 매개 변수는 새로 계산 된 속성 일 수 있습니다.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>To create a calculated, property, use a hash table.</source>
          <target state="translated">계산된 속성을 만들려면 해시 테이블을 사용하세요.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>Valid keys are:</source>
          <target state="translated">유효한 키는 다음과 같습니다.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>Name (or Label) <ph id="ph1">\&lt;</ph>string</source>
          <target state="translated">이름 (또는 레이블) <ph id="ph1">\&lt;</ph>문자열</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>Expression <ph id="ph1">\&lt;</ph>string<ph id="ph2">\&gt;</ph> or <ph id="ph3">\&lt;</ph>script block</source>
          <target state="translated">식 <ph id="ph1">\&lt;</ph>문자열<ph id="ph2">\&gt;</ph> 또는 <ph id="ph3">\&lt;</ph>스크립트 블록</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>FormatString <ph id="ph1">\&lt;</ph>string</source>
          <target state="translated">FormatString <ph id="ph1">\&lt;</ph>문자열</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>-HideTableHeaders</source>
          <target state="translated">-HideTableHeaders</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>Indicates that the cmdlet omits the column headings from the table.</source>
          <target state="translated">Cmdlet은 테이블에서 열 머리글을 생략을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>-InputObject</source>
          <target state="translated">-InputObject</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>Specifies the objects to format.</source>
          <target state="translated">형식을 지정할 개체를 지정 합니다.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>Enter a variable that contains the objects, or type a command or expression that gets the objects.</source>
          <target state="translated">개체를 포함하는 변수를 입력하거나 개체를 가져오는 명령 또는 식을 입력하세요.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>-Property</source>
          <target state="translated">-속성</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>Specifies the object properties that appear in the display and the order in which they appear.</source>
          <target state="translated">표시에 나타나는 개체 속성 및 표시되는 순서를 지정합니다.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>Type one or more property names (separated by commas), or use a hash table to display a calculated property.</source>
          <target state="translated">하나 이상의 속성 이름을 쉼표로 구분하여 입력하거나 해시 테이블을 사용하여 계산된 속성을 표시합니다.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>Wildcards are permitted.</source>
          <target state="translated">와일드카드가 지원됩니다.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>If you omit this parameter, the properties that appear in the display depend on the object being displayed.</source>
          <target state="translated">이 매개 변수를 생략할 경우 표시에 나타나는 속성은 표시되는 개체에 따라 달라집니다.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>The parameter name (<bpt id="p1">*</bpt>Property<ept id="p1">*</ept>) is optional.</source>
          <target state="translated">매개 변수 이름 (<bpt id="p1">*</bpt>속성<ept id="p1">*</ept>)은 선택 사항입니다.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>You cannot use the <bpt id="p1">*</bpt>Property<ept id="p1">*</ept> and <bpt id="p2">*</bpt>View<ept id="p2">*</ept> parameters in the same command.</source>
          <target state="translated">사용할 수 없습니다는 <bpt id="p1">*</bpt>속성<ept id="p1">*</ept> 및 <bpt id="p2">*</bpt>보기<ept id="p2">*</ept> 동일한 명령에 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>The value of the <bpt id="p1">*</bpt>Property<ept id="p1">*</ept> parameter can be a new calculated property.</source>
          <target state="translated">값은 <bpt id="p1">*</bpt>속성<ept id="p1">*</ept> 매개 변수는 새로 계산 된 속성 일 수 있습니다.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>To create a calculated property, use a hash table.</source>
          <target state="translated">계산된 속성을 만들려면 해시 테이블을 사용하세요.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>Valid keys are:</source>
          <target state="translated">유효한 키는 다음과 같습니다.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>Expression <ph id="ph1">\&lt;</ph>string<ph id="ph2">\&gt;</ph> or <ph id="ph3">\&lt;</ph>script block</source>
          <target state="translated">식 <ph id="ph1">\&lt;</ph>문자열<ph id="ph2">\&gt;</ph> 또는 <ph id="ph3">\&lt;</ph>스크립트 블록</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>Depth <ph id="ph1">\&lt;</ph>int32</source>
          <target state="translated">깊이 <ph id="ph1">\&lt;</ph>int32</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>-ShowError</source>
          <target state="translated">-ShowError</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>Indicates that the cmdlet sends errors through the pipeline.</source>
          <target state="translated">Cmdlet은 전송 파이프라인을 통해 오류를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>This parameter is rarely used, but can be used as a debugging aid when you are formatting expressions in a <bpt id="p1">**</bpt>Format-Table<ept id="p1">**</ept> command, and the expressions do not appear to be working.</source>
          <target state="translated">이 매개 변수는 거의 사용 되지 않지만 식에 형식을 지정 하는 경우 디버깅 도구로 사용할 수는 <bpt id="p1">**</bpt>Format-table<ept id="p1">**</ept> 명령 및 식 작업 표시 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>The following shows an example of the results of adding the <bpt id="p1">*</bpt>ShowError<ept id="p1">*</ept> parameter with an expression.</source>
          <target state="translated">다음에 추가 하는 결과의 예가 나와 <bpt id="p1">*</bpt>ShowError<ept id="p1">*</ept> 하는 식으로 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>PS <ph id="ph1">\&gt;</ph> Get-Date | Format-Table DayOfWeek,{ $<bpt id="p1">_</bpt> / $null } -ShowError DayOfWeek  $<ept id="p1">_</ept> / $null</source>
          <target state="translated">PS <ph id="ph1">\&gt;</ph> Get-date | Format-table DayOfWeek {$<bpt id="p1">_</bpt> / $null}-ShowError DayOfWeek $<ept id="p1">_</ept> / $null</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>Wednesday</source>
          <target state="translated">수요일</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>Failed to evaluate expression " $_ / $null ".</source>
          <target state="translated">" $_ / $null " 식을 평가하지 못했습니다.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>+ CategoryInfo          : InvalidArgument: (10/30/2013 2:28:07 PM:PSObject) <ph id="ph1">\[\]</ph>, RuntimeException + FullyQualifiedErrorId : mshExpressionError</source>
          <target state="translated">+ CategoryInfo: 인수: (10/30/2013 2시 28분: 07 PM:PSObject) <ph id="ph1">\[\]</ph>, RuntimeException + FullyQualifiedErrorId: mshExpressionError</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>-View</source>
          <target state="translated">-보기</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>Specifies the name of an alternate table format or view.</source>
          <target state="translated">대체 테이블 형식 또는 보기의 이름을 지정합니다.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>You cannot use the <bpt id="p1">*</bpt>Property<ept id="p1">*</ept> and <bpt id="p2">*</bpt>View<ept id="p2">*</ept> parameters in the same command.</source>
          <target state="translated">사용할 수 없습니다는 <bpt id="p1">*</bpt>속성<ept id="p1">*</ept> 및 <bpt id="p2">*</bpt>보기<ept id="p2">*</ept> 동일한 명령에 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>-Wrap</source>
          <target state="translated">자동 줄 바꿈</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>Indicates that the cmdlet displays text that exceeds the column width on the next line.</source>
          <target state="translated">Cmdlet은 다음 줄에서 열 너비를 초과 하는 텍스트를 표시를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>By default, text that exceeds the column width is truncated.</source>
          <target state="translated">기본적으로 열 너비를 초과하는 텍스트는 잘립니다.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>CommonParameters</source>
          <target state="translated">CommonParameters</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutVariable, -OutBuffer, -PipelineVariable, -Verbose, -WarningAction, and -WarningVariable.</source>
          <target state="translated">이 cmdlet은 공통 매개 변수:-디버그,-ErrorAction,-ErrorVariable,-InformationAction,-InformationVariable,-OutVariable,-OutBuffer,-PipelineVariable,-Verbose,-WarningAction 및-warningvariable을 지원 합니다.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>For more information, see about_CommonParameters (http://go.microsoft.com/fwlink/?LinkID=113216).</source>
          <target state="translated">자세한 내용은 about_CommonParameters (http://go.microsoft.com/fwlink/?LinkID=113216)를 참조 합니다.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>INPUTS</source>
          <target state="translated">입력</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>System.Management.Automation.PSObject</source>
          <target state="translated">System.Management.Automation.PSObject</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>You can pipe any object to <bpt id="p1">**</bpt>Format-Table<ept id="p1">**</ept>.</source>
          <target state="translated">모든 개체를 파이프할 수 있습니다 <bpt id="p1">**</bpt>Format-table<ept id="p1">**</ept>합니다.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>OUTPUTS</source>
          <target state="translated">출력</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>Microsoft.PowerShell.Commands.Internal.Format</source>
          <target state="translated">Microsoft.PowerShell.Commands.Internal.Format</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Format-Table<ept id="p1">**</ept> returns format objects that represent the table.</source>
          <target state="translated"><bpt id="p1">**</bpt>Format-table<ept id="p1">**</ept> 테이블을 나타내는 형식 개체를 반환 합니다.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>NOTES</source>
          <target state="translated">참고 사항</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">*</bpt>GroupBy<ept id="p1">*</ept> parameter assumes that the objects are sorted.</source>
          <target state="translated"> <bpt id="p1">*</bpt>GroupBy<ept id="p1">*</ept> 매개 변수는 개체가 정렬 되어 있다고 가정 합니다.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source>Before using <bpt id="p1">**</bpt>Format-Table<ept id="p1">**</ept> to group the objects, use the Sort-Object cmdlet to sort them.</source>
          <target state="translated">사용 하기 전에 <bpt id="p1">**</bpt>Format-table<ept id="p1">**</ept> 정렬할 개체를 그룹화 하 Sort-object cmdlet을 사용 합니다.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">*</bpt>View<ept id="p1">*</ept> parameter lets you specify an alternate format for the table.</source>
          <target state="translated"> <bpt id="p1">*</bpt>보기<ept id="p1">*</ept> 매개 변수는 테이블에 대 한 대체 형식을 지정할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source>You can use the views defined in the *.format.PS1XML files in the Windows PowerShell directory or you can create your own views in new PS1XML files and then use the Update-FormatData cmdlet to include them in Windows PowerShell.</source>
          <target state="translated">에 정의 된 보기를 사용 하는 *.format 합니다. Windows PowerShell 디렉터리의 PS1XML 파일 새 PS1XML 파일에서 고유한 보기를 만들고 Update-formatdata cmdlet을 사용 하 여 Windows PowerShell에 포함할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source>The alternate views for the <bpt id="p1">*</bpt>View<ept id="p1">*</ept> parameter must use the table format.</source>
          <target state="translated">대체에 대 한 뷰는 <bpt id="p1">*</bpt>보기<ept id="p1">*</ept> 매개 변수 테이블 형식을 사용 해야 합니다.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source>If it does not, the command fails.</source>
          <target state="translated">그러지 않으면 명령이 실패합니다.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source>If the alternate view is a list, use the Format-List cmdlet.</source>
          <target state="translated">대체 보기가 목록이 인 경우 Format-list cmdlet을 사용 합니다.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve">
          <source>If the alternate view is neither a list nor a table, use the Format-Custom cmdlet.</source>
          <target state="translated">대체 보기가 목록이 나 테이블이 아니면 이면 Format-custom cmdlet을 사용 합니다.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source>RELATED LINKS</source>
          <target state="translated">관련된 링크</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source>Format-Custom</source>
          <target state="translated">Format-Custom</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source>Format-Hex</source>
          <target state="translated">Format-Hex</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve">
          <source>Format-List</source>
          <target state="translated">Format-List</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve">
          <source>Format-Wide</source>
          <target state="translated">Format-Wide</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>