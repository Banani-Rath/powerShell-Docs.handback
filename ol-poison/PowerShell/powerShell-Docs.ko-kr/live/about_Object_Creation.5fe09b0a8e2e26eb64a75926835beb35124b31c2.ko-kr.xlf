<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ko-kr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-1c394fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ea0233ce4fc826d6a971ecd5142e9b1068e5eca0</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">reference\4.0\Microsoft.PowerShell.Core\About\about_Object_Creation.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions" />
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">61953e67f23f3d6d969e52899889e7d843d85449</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">78082c32a5cb572c3880eed244c6c4e55933448d</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>about_Object_Creation</source>
          <target state="translated">about_Object_Creation</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>powershell, cmdlet</source>
          <target state="translated">powershell cmdlet</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>About Object Creation</source>
          <target state="translated">개체를 만드는 방법에 대 한</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>about_Object_Creation</source>
          <target state="translated">about_Object_Creation</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>about_Object_Creation</source>
          <target state="translated">about_Object_Creation</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>SHORT DESCRIPTION</source>
          <target state="translated">간단한 설명</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Explains how to create objects in  Windows PowerShell�.</source>
          <target state="translated">Windows PowerShell에 개체를 만드는 방법에 설명 합니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>LONG DESCRIPTION</source>
          <target state="translated">자세한 설명</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>You can create objects in  Windows PowerShell and use the objects that you create in commands and scripts.</source>
          <target state="translated">Windows PowerShell에서 개체를 만들고 명령 및 스크립트에서 만드는 개체를 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>There are several ways to create objects:</source>
          <target state="translated">여러 가지 방법으로 개체를 만듭니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>New-Object:</source>
          <target state="translated">새 개체:</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>The New-Object cmdlet creates an instance of a .NET Framework object or COM object.</source>
          <target state="translated">New-object cmdlet는.NET Framework 개체 또는 COM 개체의 인스턴스를 만듭니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Hash tables:</source>
          <target state="translated">해시 테이블:</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Beginning in  Windows PowerShell 3.0, you can create objects from hash tables of property names and property values.</source>
          <target state="translated">Windows PowerShell 3.0부터, 속성 이름 및 속성 값의 해시 테이블에서 개체를 만들 수 있습니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Import-Csv:</source>
          <target state="translated">Import-csv:</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>The Import-Csv cmdlet creates custom objects (PSCustomObject) from the items in a CSV file.</source>
          <target state="translated">Import-csv cmdlet은 CSV 파일에 있는 항목의 사용자 지정 개체 (PSCustomObject)을 만듭니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Each row is an object instance and each column is an object property.</source>
          <target state="translated">각 행은 개체 인스턴스 및 각 열은 개체 속성입니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>This topic will demonstrate and discuss each of these methods.</source>
          <target state="translated">이 항목 설명 하 고 이러한 각 방법에 설명 합니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>NEW-OBJECT</source>
          <target state="translated">새 개체</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>The New-Object cmdlet provides a robust and consistent way to create new objects.</source>
          <target state="translated">New-object cmdlet를 통해 강력 하 고 일관 된 새 개체를 만들 수 있습니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>The cmdlet works with almost all types and in all supported versions of  Windows PowerShell.</source>
          <target state="translated">Cmdlet은 거의 모든 종류의 Windows PowerShell 지원 되는 모든 버전에서 작동합니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>To create a new object, specify either the type of a .NET Framework class or a ProgID of a COM object.</source>
          <target state="translated">새 개체를 만들려면.NET Framework 클래스의 형식 또는 COM 개체의 ProgID를 지정 합니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>For example, the following command creates a Version object.</source>
          <target state="translated">예를 들어 다음 명령은 버전 개체를 만듭니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>For more information, see the help topic for the New-Object cmdlet.</source>
          <target state="translated">자세한 내용은 New-object cmdlet에 대 한 도움말 항목을 참조 하십시오.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>CREATE OBJECTS FROM HASH TABLES</source>
          <target state="translated">해시 테이블에서 개체를 만듭니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Beginning in  Windows PowerShell 3.0, you can create an object from a hash table of properties and property values.</source>
          <target state="translated">Windows PowerShell 3.0부터, 속성 및 속성 값의 해시 테이블에서 개체를 만들 수 있습니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>The syntax is as follows:</source>
          <target state="translated">구문은 다음과 같습니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>This method works only for classes that have a null constructor, that is, a constructor that has no parameters.</source>
          <target state="translated">이 메서드는 null 생성자, 즉 매개 변수가 없는 생성자가 있는 클래스에 대해서만 작동 합니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>The object properties must be public and settable.</source>
          <target state="translated">공용 및 설정할 수 있는 개체 속성 이어야 합니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>CREATE CUSTOM OBJECTS FROM HASH TABLES</source>
          <target state="translated">해시 테이블에서 사용자 지정 개체 만들기</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Custom objects are very useful and they are very easy to create by using the hash table method.</source>
          <target state="translated">사용자 지정 개체는 매우 유용 하 고 매우 쉽게 해시 테이블 메서드를 사용 하 여 만들 수 있습니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>To create a custom object, use the PSCustomObject class, a class designed specifically for this purpose.</source>
          <target state="translated">사용자 지정 개체를 만들려면 PSCustomObject 클래스를이 용도로 특별히 설계 된 클래스를 사용 합니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Custom objects are an excellent way to return customized output from a function or script; far more useful than returning formatted output that cannot be reformatted or piped to other commands.</source>
          <target state="translated">사용자 지정 개체는 함수 또는 스크립트에서 사용자 지정 된 출력을 반환 하는 훌륭한 방법 다른 명령에 파이프 하거나 다시 포맷 수 없는 형식이 지정 된 출력을 반환 하는 보다 훨씬 더 유용 합니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>The commands in the Test-Object function set some variable values and then use those values to create a custom object.</source>
          <target state="translated">명령 테스트 개체 함수에서 일부 변수 값을 설정 하 고 해당 값을 사용 하 여 사용자 지정 개체를 만들.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>(You can see this object in use in the example section of the Update-Help cmdlet help topic.)</source>
          <target state="translated">(Update-help cmdlet 도움말 항목의 예제 단원에는 사용에서이 개체를 볼 수 있습니다.)</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>The output of this function is a collection of custom objects formatted as a table by default.</source>
          <target state="translated">이 함수의 출력은 기본적으로 서식이 표로 지정 하는 사용자 지정 개체의 컬렉션입니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Users can manage the properties of the custom objects just as they do with standard objects.</source>
          <target state="translated">사용자는 표준 개체와 마찬가지로 사용자 지정 개체의 속성을 관리할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>CREATE NON-CUSTOM OBJECTS FROM HASH TABLES</source>
          <target state="translated">해시 테이블에서 사용자 지정이 아닌 개체를 만듭니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>You can also use hash tables to create objects for non-custom classes.</source>
          <target state="translated">또한 사용자 지정이 아닌 클래스에 대 한 개체를 만들 해시 테이블을 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>When you create an object for a non-custom class, the full namespace name is required unless class is in the System namespace.</source>
          <target state="translated">사용자 지정이 아닌 클래스에 대 한 개체를 만들 때 시스템 네임 스페이스의 클래스는 경우가 아니면 전체 네임 스페이스 이름은 필수입니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Use only the properties of the class.</source>
          <target state="translated">클래스의 속성에만 사용 합니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>For example, the following command creates a session option object.</source>
          <target state="translated">예를 들어 다음 명령은 세션 옵션 개체를 만듭니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>The requirements of the hash table feature, especially the null constructor requirement, eliminate many existing classes.</source>
          <target state="translated">해시 테이블 기능, 특히 null 생성자 요구의 요구 사항을 여러 기존 클래스를 제거합니다.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>However, most  Windows PowerShell option classes are designed to work with this feature, as well as other very useful classes, such as the ScheduledJobTrigger class.</source>
          <target state="translated">그러나 대부분의 Windows PowerShell 옵션 클래스 ScheduledJobTrigger 클래스와 같은 다른 매우 유용한 클래스 뿐만 아니라이 기능을 함께 작동 하도록 설계 됩니다.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>You can also use the hash table feature when setting parameter values.</source>
          <target state="translated">매개 변수 값을 설정 하는 경우 해시 테이블 기능을 사용할 수도 있습니다.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>For example, the value of the SessionOption parameter of the New-PSSession cmdlet and the value of the JobTrigger parameter of Register-ScheduledJob can be a hash table.</source>
          <target state="translated">예를 들어 New-pssession cmdlet의 SessionOption 매개 변수 및 Register-scheduledjob의 JobTrigger 매개 변수 값의 값에는 해시 테이블 수 있습니다.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>IMPORT-CSV</source>
          <target state="translated">CSV 가져오기</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>You can create custom objects from the items in a CSV file.</source>
          <target state="translated">CSV 파일에 있는 항목의 사용자 지정 개체를 만들 수 있습니다.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>When you use the Import-Csv cmdlet to import the CSV file, the cmdlet creates a custom object (PSCustomObject) for each item in the file.</source>
          <target state="translated">Import-csv cmdlet을 사용 하 여 CSV 파일을 가져올 때 cmdlet 파일의 각 항목에 대 한 사용자 지정 개체 (PSCustomObject)을 만듭니다.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>The column names are the object properties.</source>
          <target state="translated">열 이름은 개체 속성이 제공 됩니다.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>For example, if you import a CSV file of computer asset data, Import-CSV creates a collection of custom objects from the input.</source>
          <target state="translated">예를 들어 컴퓨터 자산 데이터의 CSV 파일을 가져오면 IMPORT-CSV 입력에서 사용자 지정 개체의 컬렉션을 만듭니다.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Use the Get-Member cmdlet to confirm the object type.</source>
          <target state="translated">Get-member cmdlet를 사용 하 여 개체 유형을 확인 합니다.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>You can use the custom objects just as you would standard objects.</source>
          <target state="translated">표준 개체와 마찬가지로 사용자 지정 개체를 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>For more information, see the help topic for the Import-Csv cmdlet.</source>
          <target state="translated">자세한 내용은 Import-csv cmdlet에 대 한 도움말 항목을 참조 하십시오.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>SEE ALSO</source>
          <target state="translated">참고 항목</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>about_Objects</source>
          <target state="translated">about_Objects</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>about_Methods</source>
          <target state="translated">about_methods</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>about_Properties</source>
          <target state="translated">about_Properties</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>about_Pipelines</source>
          <target state="translated">about_Pipelines</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>Get-Member</source>
          <target state="translated">Get-Member</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>Import-Csv</source>
          <target state="translated">Import-Csv</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>New-Object</source>
          <target state="translated">새 개체</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>