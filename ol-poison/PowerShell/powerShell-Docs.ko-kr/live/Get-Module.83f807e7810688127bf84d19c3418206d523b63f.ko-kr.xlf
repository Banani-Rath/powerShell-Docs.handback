<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ko-kr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-1c394fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f6f44fe03bf31070c7e6ad331b438c9134ab55ae</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">reference\3.0\Microsoft.PowerShell.Core\Get-Module.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions" />
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">7622848439ee83ac4ec1fdb734be96816a66556e</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">bf2880552df79f224c63554687c2681cae84a103</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>powershell, cmdlet</source>
          <target state="translated">powershell cmdlet</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Get-Module</source>
          <target state="translated">Get-Module</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Get-Module</source>
          <target state="translated">Get-Module</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>SYNOPSIS</source>
          <target state="translated">요약</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Gets the modules that have been imported or that can be imported into the current session.</source>
          <target state="translated">현재 세션으로 가져왔거나 가져올 수 있는 모듈을 검색합니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>SYNTAX</source>
          <target state="translated">구문</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Loaded (Default)</source>
          <target state="translated">로드 된 (기본값)</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Available</source>
          <target state="translated">사용 가능</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>PsSession</source>
          <target state="translated">PsSession</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>CimSession</source>
          <target state="translated">CimSession</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>DESCRIPTION</source>
          <target state="translated">설명</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>Get-Module<ept id="p1">**</ept> cmdlet gets the Windows PowerShell modules that have been imported, or that can be imported, into a Windows PowerShell session.</source>
          <target state="translated"> <bpt id="p1">**</bpt>Get-module<ept id="p1">**</ept> cmdlet는 가져온 또는 가져올 수 있는, Windows PowerShell 세션으로 Windows PowerShell 모듈을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>The module object that <bpt id="p1">**</bpt>Get-Module<ept id="p1">**</ept> returns contains valuable information about the module.</source>
          <target state="translated">모듈 개체를 <bpt id="p1">**</bpt>Get-module<ept id="p1">**</ept> 포함 된 모듈에 대 한 중요 한 정보를 반환 합니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>You can also pipe the module objects to other cmdlets, such as the Import-Module and Remove-Module cmdlets.</source>
          <target state="translated">모듈 가져오기 및 Remove-module cmdlet 등의 다른 cmdlet 모듈 개체를 파이프할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Without parameters, <bpt id="p1">**</bpt>Get-Module<ept id="p1">**</ept> gets modules that have been imported into the current session.</source>
          <target state="translated">매개 변수 없이 <bpt id="p1">**</bpt>Get-module<ept id="p1">**</ept> 현재 세션으로 가져온 모듈을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>To get all installed modules, use the <bpt id="p1">**</bpt>ListAvailable<ept id="p1">**</ept> parameter.</source>
          <target state="translated">설치 된 모든 모듈을 사용은 <bpt id="p1">**</bpt>ListAvailable<ept id="p1">**</ept> 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Get-Module<ept id="p1">**</ept> gets modules, but it does not import them.</source>
          <target state="translated"><bpt id="p1">**</bpt>Get-module<ept id="p1">**</ept> 하지만 가져옵니다 모듈을 가져올 수 없는 경우 해당 합니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Beginning in Windows PowerShell 3.0, modules are automatically imported when you use a command in the module, but a <bpt id="p1">**</bpt>Get-Module<ept id="p1">**</ept> command does not trigger an automatic import.</source>
          <target state="translated">Windows PowerShell 3.0 부터는 모듈을 자동으로 가져올 모듈에서 명령을 사용 하지만 <bpt id="p1">**</bpt>Get-module<ept id="p1">**</ept> 명령은 자동 가져오기를 트리거하지 않습니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>You can also import the modules into your session by using the Import-Module cmdlet.</source>
          <target state="translated">Import-module cmdlet을 사용 하 여 모듈을 세션으로 가져올 수도 있습니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Beginning in Windows PowerShell 3.0, you can get (and then, import) modules from remote sessions into the local session.</source>
          <target state="translated">Windows PowerShell 3.0부터는 원격 세션에서 모듈을 검색한 다음 로컬 세션으로 가져올 수 있습니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>This strategy uses the Implicit Remoting feature of Windows PowerShell and is equivalent to using the Import-PSSession cmdlet.</source>
          <target state="translated">이 전략은 Windows PowerShell의 암시적 원격 기능을 사용 하 여 및 Import-pssession cmdlet을 사용 하는 것과 같습니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>When you use commands in modules imported from another session, the commands run implicitly in the remote session, allowing you to manage the remote computer from the local session.</source>
          <target state="translated">다른 세션에서 가져온 모듈에서 명령을 사용하면 명령이 원격 세션에서 암시적으로 실행되어 로컬 세션에서 원격 컴퓨터를 관리할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Also, beginning in Windows PowerShell 3.0, you can use <bpt id="p1">**</bpt>Get-Module<ept id="p1">**</ept> and <bpt id="p2">**</bpt>Import-Module<ept id="p2">**</ept> to get and import Common Information Model (CIM) modules, in which the cmdlets are defined in Cmdlet Definition XML (CDXML) files.</source>
          <target state="translated">또한 Windows PowerShell 3.0부터 사용할 수 있습니다 <bpt id="p1">**</bpt>Get-module<ept id="p1">**</ept> 및 <bpt id="p2">**</bpt>Import-module<ept id="p2">**</ept> 을 가져오고 모델 CIM (Common Information) 모듈, Cmdlet 정의 XML (CDXML) 파일에 정의 되어 있는 cmdlet을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>This feature allows you to use cmdlets that are implemented in non-managed code assemblies, such as those written in C++.</source>
          <target state="translated">이 기능을 사용하면 C++로 작성된 코드 어셈블리와 같은 비관리 코드 어셈블리에 구현된 cmdlet을 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>With these new features, the <bpt id="p1">**</bpt>Get-Module<ept id="p1">**</ept> and <bpt id="p2">**</bpt>Import-Module<ept id="p2">**</ept> cmdlets become primary tools for managing heterogeneous enterprises that include Windows computers and computers that are running other operating systems.</source>
          <target state="translated">이러한 새로운 기능으로는 <bpt id="p1">**</bpt>Get-module<ept id="p1">**</ept> 및 <bpt id="p2">**</bpt>Import-module<ept id="p2">**</ept> cmdlet에는 Windows 컴퓨터 및 다른 운영 체제를 실행 중인 컴퓨터를 포함 하는 여러 유형의 기업 환경을 관리 하는 기본 도구가 됩니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>To manage remote Windows computers that have Windows PowerShell and Windows PowerShell remoting enabled, create a PSSession on the remote computer and then use the <bpt id="p1">**</bpt>PSSession<ept id="p1">**</ept> parameter of <bpt id="p2">**</bpt>Get-Module<ept id="p2">**</ept> to get the Windows PowerShell modules in the PSSession.</source>
          <target state="translated">Windows PowerShell 및 Windows PowerShell 원격을 사용 하는 원격 Windows 컴퓨터를 관리 하려면 원격 컴퓨터에서 PSSession를 만들고 사용 하 여는 <bpt id="p1">**</bpt>PSSession<ept id="p1">**</ept> 의 매개 변수 <bpt id="p2">**</bpt>Get-module<ept id="p2">**</ept> PSSession에서 Windows PowerShell 모듈을 가져올 수 있습니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>When you import the modules, and then use the imported commands in the current session, the commands run implicitly in the PSSession on the remote computer.</source>
          <target state="translated">모듈을 가져온 다음 현재 세션에서 가져온 명령을 사용하면 명령이 원격 컴퓨터의 PSSession에서 암시적으로 실행됩니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>You can use this strategy to manage the remote computer.</source>
          <target state="translated">이 전략을 사용하여 원격 컴퓨터를 관리할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>You can use a similar strategy to manage computers that do not have Windows PowerShell remoting enabled, including computers that are not running a Windows operating system, and Windows computers that have Windows PowerShell, but do not have Windows PowerShell remoting enabled.</source>
          <target state="translated">유사한 전략을 사용하여 Windows 운영 체제를 실행하지 않는 컴퓨터, Windows PowerShell을 설치했지만 Windows PowerShell 원격을 사용하도록 설정하지 않은 컴퓨터 등 Windows PowerShell 원격을 사용하지 않는 컴퓨터를 관리할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Begin by creating a "CIM session" on the remote computer; a connection  to Windows Management Instrumentation (WMI) on the remote computer.</source>
          <target state="translated">원격 컴퓨터에 "CIM 세션"을 만들어 시작 합니다. 원격 컴퓨터에서 연결에 Windows Management Instrumentation (WMI)입니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Then use the <bpt id="p1">**</bpt>CIMSession<ept id="p1">**</ept> parameter of <bpt id="p2">**</bpt>Get-Module<ept id="p2">**</ept> to get CIM modules from the CIM session.</source>
          <target state="translated">다음 사용 하 여는 <bpt id="p1">**</bpt>CIMSession<ept id="p1">**</ept> 의 매개 변수 <bpt id="p2">**</bpt>Get-module<ept id="p2">**</ept> CIM 세션에서 CIM 모듈을 가져올 수 있습니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>When you import a CIM module (by using the <bpt id="p1">**</bpt>Import-Module<ept id="p1">**</ept> cmdlet) and then run the imported commands, the commands run implicitly on the remote computer.</source>
          <target state="translated">CIM 모듈을 가져올 때 (사용 하 여는 <bpt id="p1">**</bpt>Import-module<ept id="p1">**</ept> cmdlet) 원격 컴퓨터에서 가져온된 명령을 명령이 암시적으로 실행 된 후 실행 합니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>You can use this WMI and CIM strategy to manage the remote computer.</source>
          <target state="translated">이 WMI 및 CIM 전략을 사용하여 원격 컴퓨터를 관리할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>EXAMPLES</source>
          <target state="translated">예제</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>-------------------------- EXAMPLE 1 --------------------------</source>
          <target state="translated">-------------------------- 예제 1 --------------------------</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>This command gets modules that have been imported into the current session.</source>
          <target state="translated">이 명령은 현재 세션으로 가져온 모듈을 검색합니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>-------------------------- EXAMPLE 2 --------------------------</source>
          <target state="translated">-------------------------- EXAMPLE 2 --------------------------</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>This command gets the modules that are installed on the computer and can be imported into the current session.</source>
          <target state="translated">이 명령은 컴퓨터에 설치되어 있고 현재 세션으로 가져올 수 있는 모듈을 검색합니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Get-Module<ept id="p1">**</ept> looks for available modules in the path specified by the <bpt id="p2">**</bpt>$env:PSModulePath<ept id="p2">**</ept> environment variable.</source>
          <target state="translated"><bpt id="p1">**</bpt>Get-module<ept id="p1">**</ept> 에서 지정 된 경로에서 사용 가능한 모듈을 찾고는 <bpt id="p2">**</bpt>$env: PSModulePath<ept id="p2">**</ept> 환경 변수입니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>For more information about <bpt id="p1">**</bpt>PSModulePath<ept id="p1">**</ept>, see about_Modules and about_Environment_Variables.</source>
          <target state="translated">에 대 한 자세한 내용은 <bpt id="p1">**</bpt>PSModulePath<ept id="p1">**</ept>, about_Modules 및 about_Environment_Variables를 참조 하십시오.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>-------------------------- EXAMPLE 3 --------------------------</source>
          <target state="translated">-------------------------- EXAMPLE 3 --------------------------</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>This command gets all of the exported files for all available modules.</source>
          <target state="translated">이 명령은 사용 가능한 모든 모듈의 내보낸 파일을 모두 가져옵니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>-------------------------- EXAMPLE 4 --------------------------</source>
          <target state="translated">-------------------------- EXAMPLE 4 --------------------------</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>This command gets the properties of the <bpt id="p1">**</bpt>PSModuleInfo<ept id="p1">**</ept> object that <bpt id="p2">**</bpt>Get-Module<ept id="p2">**</ept> returns.</source>
          <target state="translated">이 명령은의 속성을 가져옵니다는 <bpt id="p1">**</bpt>PSModuleInfo<ept id="p1">**</ept> 개체를 <bpt id="p2">**</bpt>Get-module<ept id="p2">**</ept> 를 반환 합니다.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>There is one object for each module file.</source>
          <target state="translated">모듈 파일마다 하나의 개체가 있습니다.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>You can use the properties to format and filter the module objects.</source>
          <target state="translated">이러한 속성을 사용하여 모듈 개체의 형식을 지정하고 필터링할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>For more information about the properties, see "PSModule Properties" in the MSDN (Microsoft Developer Network) library at http://go.microsoft.com/fwlink/?LinkId=143624http://go.microsoft.com/fwlink/?LinkId=143624.</source>
          <target state="translated">속성에 대 한 자세한 내용은 http://go.microsoft.com/fwlink/?LinkId=143624http에서 MSDN (Microsoft Developer Network) 라이브러리의 "PSModule 속성"을 참조 하십시오.: / / go.microsoft.com/fwlink/?LinkId=143624 합니다.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>The output includes the new properties, such as <bpt id="p1">**</bpt>Author<ept id="p1">**</ept> and <bpt id="p2">**</bpt>CompanyName<ept id="p2">**</ept>, that were introduced in Windows PowerShell 3.0</source>
          <target state="translated">와 같은 새 속성을 출력에 포함 <bpt id="p1">**</bpt>작성자<ept id="p1">**</ept> 및 <bpt id="p2">**</bpt>CompanyName<ept id="p2">**</ept>, Windows PowerShell 3.0에서 도입 된</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>-------------------------- EXAMPLE 5 --------------------------</source>
          <target state="translated">-------------------------- EXAMPLE 5 --------------------------</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>This command gets all module files (imported and available) and groups them by module name.</source>
          <target state="translated">이 명령은 모든 모듈 파일(가져온 파일과 사용 가능한 파일)을 가져오고 모듈 이름별로 그룹화합니다.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>This lets you see the module files that each script is exporting.</source>
          <target state="translated">이에 따라 각 스크립트에서 내보내는 모듈 파일을 확인할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>-------------------------- EXAMPLE 6 --------------------------</source>
          <target state="translated">-------------------------- EXAMPLE 6 --------------------------</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>These commands display the contents of the module manifest for the Windows PowerShell BitsTransfer module.</source>
          <target state="translated">이러한 명령은 Windows PowerShell BitsTransfer 모듈에 대한 모듈 매니페스트의 내용을 표시합니다.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Modules are not required to have manifest files and, when they do have a manifest file, the manifest file is required only to include a version number.</source>
          <target state="translated">모듈에는 매니페스트 파일이 있을 필요가 없으며, 매니페스트 파일이 있는 경우 매니페스트 파일에는 버전 번호만 포함되어야 합니다.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>However, manifest files often provide useful information about a module, its requirements, and its contents.</source>
          <target state="translated">그러나 매니페스트 파일에서 모듈, 해당 모듈의 요구 사항 및 내용에 대한 유용한 정보를 제공하는 경우도 많습니다.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>-------------------------- EXAMPLE 7 --------------------------</source>
          <target state="translated">-------------------------- EXAMPLE 7 --------------------------</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>This command lists the files in the module's directory.</source>
          <target state="translated">이 명령은 모듈의 디렉터리에 있는 파일을 나열합니다.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>This is another way to determine what is in a module before you import it.</source>
          <target state="translated">이는 모듈을 가져오기 전에 모듈에 있는 항목을 확인하는 또 다른 방법입니다.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>Some modules might have help files or ReadMe files that describe the module.</source>
          <target state="translated">일부 모듈에는 모듈에 대해 설명하는 추가 정보 파일이나 도움말 파일이 있을 수 있습니다.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>-------------------------- EXAMPLE 8 --------------------------</source>
          <target state="translated">-------------------------- EXAMPLE 8 --------------------------</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>These commands get the modules that are installed on the Server01 computer.</source>
          <target state="translated">이러한 명령은 Server01 컴퓨터에 설치된 모듈을 검색합니다.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>The first command uses the New-PSSession cmdlet to create a PSSession on the Server01 computer.</source>
          <target state="translated">첫 번째 명령은 New-PSSession cmdlet을 사용하여 Server01 컴퓨터에서 PSSession을 만듭니다.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>The command saves the PSSession in the $s variable.</source>
          <target state="translated">이 명령은 PSSession을 $s 변수에 저장합니다.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>The second command uses the <bpt id="p1">**</bpt>PSSession<ept id="p1">**</ept> and <bpt id="p2">**</bpt>ListAvailable<ept id="p2">**</ept> parameters of <bpt id="p3">**</bpt>Get-Module<ept id="p3">**</ept> to get the modules in the PSSession in the $s variable.</source>
          <target state="translated">두 번째 명령은 <bpt id="p1">**</bpt>PSSession<ept id="p1">**</ept> 및 <bpt id="p2">**</bpt>ListAvailable<ept id="p2">**</ept> 의 매개 변수 <bpt id="p3">**</bpt>Get-module<ept id="p3">**</ept> $s 변수에 PSSession의 모듈을 가져올 수 있습니다.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>If you pipe modules from other sessions to the <bpt id="p1">**</bpt>Import-Module<ept id="p1">**</ept> cmdlet, <bpt id="p2">**</bpt>Import-Module<ept id="p2">**</ept> imports the module into the current session by using the implicit remoting feature.</source>
          <target state="translated">다른 세션에서 모듈을 파이프는 <bpt id="p1">**</bpt>Import-module<ept id="p1">**</ept> cmdlet <bpt id="p2">**</bpt>Import-module<ept id="p2">**</ept> 암시적 원격 기능을 사용 하 여 현재 세션으로 모듈을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>This is equivalent to using the  Import-PSSession cmdlet.</source>
          <target state="translated">Import-pssession cmdlet을 사용 하는 것과 같습니다.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>You can use the cmdlets from the module in the current session, but commands that use these cmdlets actually run the remote session.</source>
          <target state="translated">이 cmdlet은 현재 세션의 모듈에서 사용할 수 있지만 이러한 cmdlet을 사용하는 명령은 실제로 원격 세션을 실행합니다.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>For more information, see Import-Module and Import-PSSession.</source>
          <target state="translated">자세한 내용은 Import-module 및 Import-pssession을 참조 하십시오.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>-------------------------- EXAMPLE 9 --------------------------</source>
          <target state="translated">-------------------------- EXAMPLE 9 --------------------------</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>The commands in this example enable you to manage the storage systems of a remote computer that is not running a Windows operating system.</source>
          <target state="translated">이 예제의 명령을 사용하면 Windows 운영 체제를 실행하지 않는 원격 컴퓨터의 저장소 시스템을 관리할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>In this example, because the administrator of the computer has installed the Module Discovery WMI provider, the CIM commands can use the default values, which are designed for the provider.</source>
          <target state="translated">이 예제에서는 컴퓨터의 관리자가 모듈 검색 WMI 공급자를 설치했으므로 CIM 명령은 공급자용으로 설계된 기본값을 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>PARAMETERS</source>
          <target state="translated">매개 변수</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>-All</source>
          <target state="translated">-모두</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>Gets all modules in each module folder, including nested modules, manifest (.psd1) files, script module (.psm1) files, and binary module (.dll) files.</source>
          <target state="translated">중첩된 모듈, 매니페스트(.psd1) 파일, 스크립트 모듈(.psm1) 파일 및 이진 모듈(.dll) 파일을 비롯한 각 모듈 폴더에서 모든 모듈을 검색합니다.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>Without the <bpt id="p1">**</bpt>All<ept id="p1">**</ept> parameter, Get-Module gets only the default module in each module folder.</source>
          <target state="translated">없이 <bpt id="p1">**</bpt>모든<ept id="p1">**</ept> 매개 변수를 Get-module는 각 모듈 폴더에는 기본 모듈을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>-CimNamespace</source>
          <target state="translated">-CimNamespace</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>Specifies the namespace of an alternate CIM provider that exposes CIM modules.</source>
          <target state="translated">CIM 모듈을 표시하는 대체 CIM 공급자의 네임스페이스를 지정합니다.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>The default value is the namespace of the Module Discovery WMI provider.</source>
          <target state="translated">기본값은 모듈 검색 WMI 공급자의 네임스페이스입니다.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>Use this parameter to get CIM modules from computers and devices that are not running a Windows operating system.</source>
          <target state="translated">이 매개 변수를 사용하여 Windows 운영 체제를 실행하지 않는 컴퓨터 및 장치에서 CIM 모듈을 검색합니다.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>This parameter is introduced in Windows PowerShell 3.0.</source>
          <target state="translated">이 매개 변수는 Windows PowerShell 3.0에서 도입되었습니다.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>-CimResourceUri</source>
          <target state="translated">-CimResourceUri</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>Specifies an alternate location for CIM modules.</source>
          <target state="translated">CIM 모듈의 대체 위치를 지정합니다.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>The default value is the  resource URI of the Module Discovery WMI provider on the remote computer.</source>
          <target state="translated">기본값은 원격 컴퓨터의 모듈 검색 WMI 공급자에 대한 리소스 URI입니다.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>Use this parameter to get CIM modules from computers and devices that are not running a Windows operating system.</source>
          <target state="translated">이 매개 변수를 사용하여 Windows 운영 체제를 실행하지 않는 컴퓨터 및 장치에서 CIM 모듈을 검색합니다.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>This parameter is introduced in Windows PowerShell 3.0.</source>
          <target state="translated">이 매개 변수는 Windows PowerShell 3.0에서 도입되었습니다.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>-ListAvailable</source>
          <target state="translated">-ListAvailable</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>Gets all installed modules.</source>
          <target state="translated">설치된 모듈을 모두 검색합니다.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Get-Module<ept id="p1">**</ept> gets modules in paths listed in the <bpt id="p2">**</bpt>PSModulePath<ept id="p2">**</ept> environment variable.</source>
          <target state="translated"><bpt id="p1">**</bpt>Get-module<ept id="p1">**</ept> 에 나열 된 경로에서 모듈을 가져옵니다는 <bpt id="p2">**</bpt>PSModulePath<ept id="p2">**</ept> 환경 변수입니다.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>Without this parameter, <bpt id="p1">**</bpt>Get-Module<ept id="p1">**</ept> gets only the modules that are both listed in the <bpt id="p2">**</bpt>PSModulePath<ept id="p2">**</ept> environment variable, and that are loaded in the current session.</source>
          <target state="translated">이 매개 변수가 없으면 <bpt id="p1">**</bpt>Get-module<ept id="p1">**</ept> 에 나열 된 둘 다 있는 모듈만 가져옵니다는 <bpt id="p2">**</bpt>PSModulePath<ept id="p2">**</ept> 환경 변수를 지정 하 고 있는 현재 세션에서 로드 됩니다.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>ListAvailable<ept id="p1">**</ept> does not return information about modules that are not found in the <bpt id="p2">**</bpt>PSModulePath<ept id="p2">**</ept> environment variable, even if those modules are loaded in the current session.</source>
          <target state="translated"><bpt id="p1">**</bpt>ListAvailable<ept id="p1">**</ept> 에서 찾을 수 없는 모듈에 대 한 정보를 반환 하지 않는 <bpt id="p2">**</bpt>PSModulePath<ept id="p2">**</ept> 환경 변수를 이러한 모듈은 현재 세션에 로드 하는 경우에 마찬가지입니다.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>-Name</source>
          <target state="translated">-Name</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>Gets only modules with the specified names or name patterns.</source>
          <target state="translated">지정된 이름이나 이름 패턴의 모듈만 가져옵니다.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>Wildcards are permitted.</source>
          <target state="translated">와일드카드가 지원됩니다.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>You can also pipe the names to <bpt id="p1">**</bpt>Get-Module<ept id="p1">**</ept>.</source>
          <target state="translated">이름을 파이프할 수도 있습니다 <bpt id="p1">**</bpt>Get-module<ept id="p1">**</ept>합니다.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>-CimSession</source>
          <target state="translated">-CimSession</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>Specifies a CIM session on the remote computer.</source>
          <target state="translated">원격 컴퓨터에서 CIM 세션을 지정합니다.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>Enter a variable that contains the CIM session or a command that gets the CIM session, such as a Get-CIMSessionhttp://go.microsoft.com/fwlink/?LinkId=227966 command.</source>
          <target state="translated">예: Get CIMSessionhttp://go.microsoft.com/fwlink/?LinkId=227966 명령 CIM 세션을 가져오는 명령 또는 CIM 세션을 포함 하는 변수를 입력 합니다.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Get-Module<ept id="p1">**</ept> uses the CIM session connection to get modules from the remote computer.</source>
          <target state="translated"><bpt id="p1">**</bpt>Get-module<ept id="p1">**</ept> CIM 세션 연결을 사용 하 여 원격 컴퓨터에서 모듈을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>When you import the module (by using the Import-Module cmdlet) and use the commands from the imported module in the current session, the commands actually run on the remote computer.</source>
          <target state="translated">Import-module cmdlet을 사용 하 여) 하는 것 (여는 모듈을 가져올 하 고 현재 세션에서 가져온된 모듈에서 명령을 사용 하는 경우 명령은 실제로 원격 컴퓨터에서 실행 됩니다.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>You can use this parameter to get modules from computers and devices that are not running a Windows operating system, and Windows computers that have Windows PowerShell, but do not have Windows PowerShell remoting enabled.</source>
          <target state="translated">이 매개 변수를 사용하여 Windows 운영 체제를 실행하지 않는 컴퓨터와 장치 및 Windows PowerShell이 있지만 Windows PowerShell 원격 기능을 사용하도록 설정하지 않은 Windows 컴퓨터에서 모듈을 검색할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>CimSession<ept id="p1">**</ept> parameter gets all modules in the <bpt id="p2">**</bpt>CIMSession<ept id="p2">**</ept>.</source>
          <target state="translated"> <bpt id="p1">**</bpt>CimSession<ept id="p1">**</ept> 매개 변수 모듈을 모두 가져옵니다는 <bpt id="p2">**</bpt>CIMSession<ept id="p2">**</ept>합니다.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>However, you can import only CIM-based and Cmdlet Definition XML (CDXML)-based modules.</source>
          <target state="translated">그러나 CIM 기반 및 CDXML(Cmdlet 정의 XML) 기반 모듈만 가져올 수 있습니다.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>-PSSession</source>
          <target state="translated">-PSSession</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>Gets the modules in the specified user-managed Windows PowerShell session (PSSession).</source>
          <target state="translated">지정된 사용자 관리 Windows PowerShell 세션(PSSession)에서 모듈을 검색합니다.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>Enter a variable that contains the session, a command that gets the session, such as a Get-PSSession command, or a command that creates the session, such as a New-PSSession command.</source>
          <target state="translated">세션, 예: Get-pssession 명령, 세션을 가져오는 명령 또는 New-pssession 명령이 등 세션을 만드는 명령을 포함 하는 변수를 입력 합니다.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>When the session is connected to a remote computer, the <bpt id="p1">**</bpt>ListAvailable<ept id="p1">**</ept> parameter is required.</source>
          <target state="translated">원격 컴퓨터에 연결 되어 있으면 세션의 <bpt id="p1">**</bpt>ListAvailable<ept id="p1">**</ept> 매개 변수는 필수입니다.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">**</bpt>Get-Module<ept id="p1">**</ept> command with the <bpt id="p2">**</bpt>PSSession<ept id="p2">**</ept> parameter is equivalent to using the Invoke-Command cmdlet to run a <bpt id="p3">**</bpt>Get-Module -ListAvailable<ept id="p3">**</ept> command in a PSSession.</source>
          <target state="translated">A <bpt id="p1">**</bpt>Get-module<ept id="p1">**</ept> 명령과 <bpt id="p2">**</bpt>PSSession<ept id="p2">**</ept> 실행 하려면 Invoke-command cmdlet을 사용 하는 매개 변수는 <bpt id="p3">**</bpt>Get-module-ListAvailable<ept id="p3">**</ept> PSSession에서 명령을 합니다.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>This parameter is introduced in Windows PowerShell 3.0.</source>
          <target state="translated">이 매개 변수는 Windows PowerShell 3.0에서 도입되었습니다.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>-Refresh</source>
          <target state="translated">새로 고침</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>Refreshes the cache of installed commands.</source>
          <target state="translated">설치된 명령의 캐시를 새로 고칩니다.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>The command cache is created when the session starts.</source>
          <target state="translated">명령 캐시는 세션이 시작될 때 만들어집니다.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>It enables the Get-Command cmdlet to get commands from modules that are not imported into the session.</source>
          <target state="translated">Get-command cmdlet을 세션으로 가져오지 않은 모듈에서 명령을 가져올 수 있습니다.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>This parameter is designed for development and testing scenarios in which the contents of modules have changed since the session started.</source>
          <target state="translated">이 매개 변수는 세션이 시작된 이후 모듈의 내용이 변경된 개발 및 테스트 시나리오에 사용하도록 설계되었습니다.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>When the <bpt id="p1">**</bpt>Refresh<ept id="p1">**</ept> parameter is used in a command, the <bpt id="p2">**</bpt>ListAvailable<ept id="p2">**</ept> parameter is required.</source>
          <target state="translated">때는 <bpt id="p1">**</bpt>새로 고침<ept id="p1">**</ept> 매개 변수를 사용 하는 명령에는 <bpt id="p2">**</bpt>ListAvailable<ept id="p2">**</ept> 매개 변수는 필수입니다.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>This parameter is introduced in Windows PowerShell 3.0.</source>
          <target state="translated">이 매개 변수는 Windows PowerShell 3.0에서 도입되었습니다.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>CommonParameters</source>
          <target state="translated">CommonParameters</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutVariable, -OutBuffer, -PipelineVariable, -Verbose, -WarningAction, and -WarningVariable.</source>
          <target state="translated">이 cmdlet은 공통 매개 변수:-디버그,-ErrorAction,-ErrorVariable,-InformationAction,-InformationVariable,-OutVariable,-OutBuffer,-PipelineVariable,-Verbose,-WarningAction 및-warningvariable을 지원 합니다.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>For more information, see about_CommonParameters (http://go.microsoft.com/fwlink/?LinkID=113216).</source>
          <target state="translated">자세한 내용은 about_CommonParameters (http://go.microsoft.com/fwlink/?LinkID=113216)를 참조 합니다.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>INPUTS</source>
          <target state="translated">입력</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>System.String</source>
          <target state="translated">System.String</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>You can pipe module names to <bpt id="p1">**</bpt>Get-Module<ept id="p1">**</ept>.</source>
          <target state="translated">모듈 이름을로 파이프할 수 있습니다 <bpt id="p1">**</bpt>Get-module<ept id="p1">**</ept>합니다.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>OUTPUTS</source>
          <target state="translated">출력</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>System.Management.Automation.PSModuleInfo</source>
          <target state="translated">System.Management.Automation.PSModuleInfo</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>Get-Module returns objects that represent modules.</source>
          <target state="translated">Get-Module은 모듈을 나타내는 개체를 반환합니다.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>When you use the <bpt id="p1">**</bpt>ListAvailable<ept id="p1">**</ept> parameter, Get-Module returns a <bpt id="p2">**</bpt>ModuleInfoGrouping<ept id="p2">**</ept> object, which is a type of <bpt id="p3">**</bpt>PSModuleInfo<ept id="p3">**</ept> object that has the same properties and methods.</source>
          <target state="translated">사용 하는 경우는 <bpt id="p1">**</bpt>ListAvailable<ept id="p1">**</ept> Get-module 반환 매개 변수를는 <bpt id="p2">**</bpt>ModuleInfoGrouping<ept id="p2">**</ept> 형식인 개체의 <bpt id="p3">**</bpt>PSModuleInfo<ept id="p3">**</ept> 동일한 속성 및 메서드가 있는 개체입니다.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>NOTES</source>
          <target state="translated">참고 사항</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>Beginning in Windows PowerShell 3.0, the core commands that are included in Windows PowerShell are packaged in modules.</source>
          <target state="translated">Windows PowerShell 3.0부터는 Windows PowerShell에 포함되는 핵심 명령이 모듈에 패키지됩니다.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>The exception is <bpt id="p1">**</bpt>Microsoft.PowerShell.Core<ept id="p1">**</ept>, which is a snap-in (PSSnapin).</source>
          <target state="translated">예외는 <bpt id="p1">**</bpt>Microsoft.PowerShell.Core<ept id="p1">**</ept>, 스냅인 (PSSnapin)입니다.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>By default, only the <bpt id="p1">**</bpt>Microsoft.PowerShell.Core<ept id="p1">**</ept> snap-in is added to the session by default.</source>
          <target state="translated">기본적으로만 <bpt id="p1">**</bpt>Microsoft.PowerShell.Core<ept id="p1">**</ept> 스냅인 세션에 기본적으로 추가 됩니다.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>Modules are imported automatically on first use and you can use the Import-Module cmdlet to import them.</source>
          <target state="translated">모듈을 처음 사용할 때 자동으로 가져올 및 Import-module cmdlet을 사용 하 여 가져와야 합니다.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>Beginning in Windows PowerShell 3.0, the core commands that are installed with Windows PowerShell are packaged in modules.</source>
          <target state="translated">Windows PowerShell 3.0부터 Windows PowerShell과 함께 설치된 핵심 명령이 모듈에 패키지됩니다.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>In Windows PowerShell 2.0, and in host programs that create older-style sessions in later versions of Windows PowerShell, the core commands are packaged in snap-ins ("PSSnapins").</source>
          <target state="translated">Windows PowerShell 2.0 및 이후 버전의 Windows PowerShell에서 이전 스타일의 세션을 만드는 호스트 프로그램에서 핵심 명령은 스냅인("PSSnapins")에 패키지됩니다.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>The exception is <bpt id="p1">**</bpt>Microsoft.PowerShell.Core<ept id="p1">**</ept>, which is always a snap-in.</source>
          <target state="translated">예외는 <bpt id="p1">**</bpt>Microsoft.PowerShell.Core<ept id="p1">**</ept>, 는 항상의 스냅인입니다.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>Also, remote sessions, such as those started by the New-PSSession cmdlet, are older-style sessions that include core snap-ins.</source>
          <target state="translated">또한 New-pssession cmdlet에 의해 시작 된 원격 세션은 핵심 스냅인을 포함 하는 이전 스타일의 세션입니다.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>For information about the <bpt id="p1">**</bpt>CreateDefault2<ept id="p1">**</ept> method that creates newer-style sessions with core modules, see "CreateDefault2 Method" in MSDN at http://msdn.microsoft.com/library/windows/desktop/system.management.automation.runspaces.initialsessionstate.createdefault2(v=VS.85).aspxhttp://msdn.microsoft.com/en-us/library/windows/desktop/system.management.automation.runspaces.initialsessionstate.createdefault2(v=VS.85).aspx.</source>
          <target state="translated">에 대 한 내용은 <bpt id="p1">**</bpt>CreateDefault2<ept id="p1">**</ept> 핵심 모듈을 사용 하 여 최신 스타일 세션을 만듭니다 메서드 (v = vs.85) http://msdn.microsoft.com/library/windows/desktop/system.management.automation.runspaces.initialsessionstate.createdefault2.aspxhttp://msdn.microsoft.com/en-us/library/windows/desktop/system.management.automation.runspaces.initialsessionstate.createdefault2 (v=VS.85).aspx에서 MSDN의 "CreateDefault2 메서드"를 참조.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Get-Module<ept id="p1">**</ept> only gets modules in locations that are stored in the value of the <bpt id="p2">**</bpt>PSModulePath<ept id="p2">**</ept> environment variable ($env:PSModulePath).</source>
          <target state="translated"><bpt id="p1">**</bpt>Get-module<ept id="p1">**</ept> 값에 저장 된 위치의 모듈만 가져옵니다는 <bpt id="p2">**</bpt>PSModulePath<ept id="p2">**</ept> 환경 변수 ($env: PSModulePath).</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>You can use the <bpt id="p1">**</bpt>Path<ept id="p1">**</ept> parameter of the Import-Module cmdlet to import modules in other locations, but you cannot use the <bpt id="p2">**</bpt>Get-Module<ept id="p2">**</ept> cmdlet to get them.</source>
          <target state="translated">사용할 수는 <bpt id="p1">**</bpt>경로<ept id="p1">**</ept> 수 있지만 다른 위치에서 모듈을 가져오려면 Import-module cmdlet의 매개 변수를 사용할 수 없습니다는 <bpt id="p2">**</bpt>Get-module<ept id="p2">**</ept> cmdlet을 가져와야 합니다.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>Also, beginning in Windows PowerShell 3.0, new properties have been added to the object that <bpt id="p1">**</bpt>Get-Module<ept id="p1">**</ept> returns that make it easier to learn about modules even before they are imported.</source>
          <target state="translated">또한 Windows PowerShell 3.0 부터는 새 속성이 추가 된 개체에는 <bpt id="p1">**</bpt>Get-module<ept id="p1">**</ept> 가져오기 전에 모듈에 대 한 자세한 쉽게 해 주는 반환 합니다.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>All properties are populated before importing, including the <bpt id="p1">**</bpt>ExportedCommands<ept id="p1">**</ept>, <bpt id="p2">**</bpt>ExportedCmdlets<ept id="p2">**</ept> and <bpt id="p3">**</bpt>ExportedFunctions<ept id="p3">**</ept> properties that list the commands that the module exports.</source>
          <target state="translated">모든 속성은 가져오기 전에 채워집니다를 포함 하는 <bpt id="p1">**</bpt>ExportedCommands<ept id="p1">**</ept>, <bpt id="p2">**</bpt>ExportedCmdlets<ept id="p2">**</ept> 및 <bpt id="p3">**</bpt>ExportedFunctions<ept id="p3">**</ept> 은 모듈이 내보내는 명령을 나열 하는 속성입니다.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>ListAvailable<ept id="p1">**</ept> parameter gets only well-formed modules, that is, folders that contain at least one file whose base name (the name without the file name extension) is the same as the name of the module folder.</source>
          <target state="translated"> <bpt id="p1">**</bpt>ListAvailable<ept id="p1">**</ept> 매개 변수는 올바른 형식의 모듈을 가져옵니다, 하나 이상 포함 된 폴더의 기준이 파일 즉, 모듈 폴더의 이름과 동일한 이름 (파일 이름 확장명 없이 이름)입니다.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>Folders that contain files with different names are considered to be containers, but not modules.</source>
          <target state="translated">이름이 다른 파일을 포함하는 폴더는 모듈이 아니라 컨테이너로 간주됩니다.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source>To get modules that are implemented as .dll files, but are not enclosed in a module folder, use both the <bpt id="p1">**</bpt>ListAvailable<ept id="p1">**</ept> and <bpt id="p2">**</bpt>All<ept id="p2">**</ept> parameters.</source>
          <target state="translated">.Dll 파일로 구현 되지만 모듈 폴더에 포함 되지 않는 모듈을 가져오기 위해 사용 하 여 둘 다는 <bpt id="p1">**</bpt>ListAvailable<ept id="p1">**</ept> 및 <bpt id="p2">**</bpt>모든<ept id="p2">**</ept> 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source>To use the CIM session feature, the remote computer must have WS-Management remoting and Windows Management Instrumentation (WMI), which is the Microsoft implementation of the Common Information Model (CIM) standard.</source>
          <target state="translated">CIM 세션 기능을 사용하려면 원격 컴퓨터에 WS-Management 원격 기능과 CIM(Common Information Model) 표준에 대한 Microsoft 구현인 WMI(Windows Management Instrumentation)가 설정되어 있어야 합니다.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source>The computer must also have the Module Discovery WMI provider or an alternate WMI provider that has the same basic features.</source>
          <target state="translated">또한 컴퓨터에 모듈 검색 WMI 공급자나 동일한 기본 기능을 갖춘 대체 WMI 공급자가 있어야 합니다.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source>You can use the CIM session feature on computers that are not running a Windows operating system and on Windows computers that have Windows PowerShell, but do not have Windows PowerShell remoting enabled.</source>
          <target state="translated">CIM 세션 기능은 Windows 운영 체제를 실행하지 않는 컴퓨터 및 Windows PowerShell이 있지만 Windows PowerShell 원격 기능을 사용하도록 설정하지 않은 Windows 컴퓨터에서 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source>You can also use the CIM parameters to get CIM modules from computers that have Windows PowerShell remoting enabled, including the local computer.</source>
          <target state="translated">또한 CIM 매개 변수를 사용하면 로컬 컴퓨터를 포함하여 Windows PowerShell 원격 기능을 사용하도록 설정한 컴퓨터에서 CIM 모듈을 검색할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source>When you create a CIM session on the local computer, Windows PowerShell uses DCOM, instead of WMI, to create the session.</source>
          <target state="translated">로컬 컴퓨터에서 CIM 세션을 만드는 경우 Windows PowerShell은 WMI 대신 DCOM을 사용하여 세션을 만듭니다.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve">
          <source>RELATED LINKS</source>
          <target state="translated">관련된 링크</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source>Get-CimSession</source>
          <target state="translated">Get-CimSession</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source>New-CimSession</source>
          <target state="translated">New-CimSession</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source>about_Modules</source>
          <target state="translated">about_Modules</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve">
          <source>Get-PSSession</source>
          <target state="translated">Get-pssession</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve">
          <source>Import-Module</source>
          <target state="translated">Import-Module</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve">
          <source>Import-PSSession</source>
          <target state="translated">Import-PSSession</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve">
          <source>New-PSSession</source>
          <target state="translated">New-PSSession</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve">
          <source>Remove-Module</source>
          <target state="translated">Remove-Module</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>