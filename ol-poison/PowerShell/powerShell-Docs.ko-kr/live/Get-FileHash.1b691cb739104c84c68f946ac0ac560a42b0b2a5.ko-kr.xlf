<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ko-kr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-1c394fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">b2b6bc4d4e003e7531bfd38c44ac9dabf51e9e63</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">reference\4.0\Microsoft.PowerShell.Utility\Get-FileHash.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions" />
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d66071e4550513b33dbe78615db102e4575b0270</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">748f60fdcb46b049a2442a2ef67b969241820784</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>powershell, cmdlet</source>
          <target state="translated">powershell cmdlet</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Get-FileHash</source>
          <target state="translated">Get-filehash</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Get-FileHash</source>
          <target state="translated">Get-filehash</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>SYNOPSIS</source>
          <target state="translated">요약</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Computes the hash value for a file by using a specified hash algorithm.</source>
          <target state="translated">지정한 해시 알고리즘을 사용하여 파일에 대한 해시 값을 계산합니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>SYNTAX</source>
          <target state="translated">구문</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Path (Default)</source>
          <target state="translated">경로 (기본값)</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>LiteralPath</source>
          <target state="translated">LiteralPath</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Stream</source>
          <target state="translated">스트림</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>DESCRIPTION</source>
          <target state="translated">설명</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Get-FileHash computes the hash value for a file by using a specified hash algorithm.</source>
          <target state="translated">Get-FileHash는 지정한 해시 알고리즘을 사용하여 파일에 대한 해시 값을 계산합니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>A hash value is a unique value that corresponds to the content of the file.</source>
          <target state="translated">해시 값은 파일 내용에 해당하는 고유한 값입니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Rather than identifying the contents of a file by its file name, extension, or other designation, a hash assigns a unique value to the contents of a file.</source>
          <target state="translated">파일 이름, 확장명 또는 기타 지정으로 파일 내용을 식별하는 대신 해시는 파일 내용에 고유한 값을 할당합니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>File names and extensions can be changed without altering the content of the file, and without changing the hash value.</source>
          <target state="translated">파일 내용과 해시 값을 변경하지 않고 파일 이름과 확장명을 변경할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Similarly, the file's content can be changed without changing the name or extension.</source>
          <target state="translated">마찬가지로, 이름이 나 확장명을 변경 하지 않고 파일의 콘텐츠를 변경할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>However, changing even a single character in the contents of a file changes the hash value of the file.</source>
          <target state="translated">그러나 파일 내용에서 한 문자라도 변경하면 파일의 해시 값이 변경됩니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>The purpose of hash values is to provide a cryptographically-secure way to verify that the contents of a file have not been changed.</source>
          <target state="translated">해시 값은 파일 내용이 변경되지 않았음을 확인하는 암호화된 보안 방법을 제공합니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>While some hash algorithms, including MD5 and SHA1, are no longer considered secure against attack, the goal of a secure hash algorithm is to render it impossible to change the contents of a file-either by accident, or by malicious or unauthorized attempt-and maintain the same hash value.</source>
          <target state="translated">보안 해시 알고리즘의 목표 실수로 또는 악의적 이거나 권한 없는 시도에 파일 중의 내용을 변경할 수 없게 렌더링 하는 동안 MD5 및 s h a 1을 비롯 한 일부 해시 알고리즘은 공격 으로부터 안전 하지 않으므로,-및 동일한 해시 값을 유지 관리 합니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>You can also use hash values to determine if two different files have exactly the same content.</source>
          <target state="translated">해시 값을 사용하여 두 개의 파일 내용이 같은지 확인할 수도 있습니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>If the hash values of two files are identical, the contents of the files are also identical.</source>
          <target state="translated">두 파일의 해시 값이 같으면 파일 내용도 같습니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>By default, the Get-FileHash cmdlet uses the SHA256 algorithm, although any hash algorithm that is supported by the target operating system can be used.</source>
          <target state="translated">대상 운영 체제에서 지원하는 모든 해시 알고리즘을 사용할 수 있지만 기본적으로 Get-FileHash cmdlet은 SHA256 알고리즘을 사용합니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>EXAMPLES</source>
          <target state="translated">예제</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Example 1</source>
          <target state="translated">예제 1</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>This example uses the Get-FileHash cmdlet to compute the hash value for the <bpt id="p1">**</bpt>Powershell.exe<ept id="p1">**</ept> file.</source>
          <target state="translated">이 예제에서는 Get-filehash cmdlet를 사용 하 여에 대 한 해시 값을 계산 하는 <bpt id="p1">**</bpt>Powershell.exe<ept id="p1">**</ept> 파일입니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>The hash algorithm used is the default, SHA256.</source>
          <target state="translated">사용된 해시 알고리즘은 기본값인 SHA256입니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>The output is piped to the Format-List cmdlet to format the output as a list.</source>
          <target state="translated">출력 목록으로 출력의 서식을 Format-list cmdlet으로 파이프 됩니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Example 2</source>
          <target state="translated">예 2</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>This command uses the Get-FileHash cmdlet and the SHA384 algorithm to compute the hash value for an ISO file that an administrator has downloaded from the Internet.</source>
          <target state="translated">이 명령은 Get-FileHash cmdlet 및 SHA384 알고리즘을 사용하여 관리자가 인터넷에서 다운로드한 ISO 파일의 해시 값을 계산합니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>The output is piped to the Format-List cmdlet to format the output as a list.</source>
          <target state="translated">출력 목록으로 출력의 서식을 Format-list cmdlet으로 파이프 됩니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>PARAMETERS</source>
          <target state="translated">매개 변수</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>-Algorithm</source>
          <target state="translated">-알고리즘</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Specifies the cryptographic hash function to use for computing the hash value of the contents of the specified file.</source>
          <target state="translated">지정한 파일 내용의 해시 값을 계산하는 데 사용할 암호화 해시 함수를 지정합니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>A cryptographic hash function includes the property that it is not possible to find two distinct inputs that generate the same hash values.</source>
          <target state="translated">암호화 해시 함수에는 동일한 해시 값을 생성하는 두 가지 입력을 찾을 수 없는 속성이 있습니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Hash functions are commonly used with digital signatures and for data integrity.</source>
          <target state="translated">해시 함수는 디지털 서명과 함께 데이터 무결성에 주로 사용됩니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Valid values for this parameter are SHA1, SHA256, SHA384, SHA512, MACTripleDES, MD5, and RIPEMD160.</source>
          <target state="translated">이 매개 변수에 유효한 값은 SHA1, SHA256, SHA384, SHA512, MACTripleDES, MD5 및 RIPEMD160입니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>If no value is specified, or if the parameter is omitted, the default value is SHA256.</source>
          <target state="translated">값을 지정하지 않거나 매개 변수를 생략할 경우 기본값은 SHA256입니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>For security reasons, MD5 and SHA1, which are no longer considered secure, should only be used for simple change validation, and should not be used to generate hash values for files that require protection from attack or tampering.</source>
          <target state="translated">보안상, 더 이상 안전하지 않은 MD5 및 SHA1은 간단한 변경 유효성 검사에만 사용해야 하며 공격이나 조작으로부터 보호해야 하는 파일의 해시 값을 생성하는 데 사용하면 안 됩니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>-LiteralPath</source>
          <target state="translated">-LiteralPath</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Specifies the path to a file.</source>
          <target state="translated">파일의 경로를 지정합니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Unlike the Path parameter, the value of the LiteralPath parameter is used exactly as it is typed.</source>
          <target state="translated">Path 매개 변수와 달리 LiteralPath 매개 변수 값은 입력한 대로 사용됩니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>No characters are interpreted as wildcard characters.</source>
          <target state="translated">어떠한 문자도 와일드카드 문자로 해석되지 않습니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>If the path includes escape characters, enclose the path in single quotation marks.</source>
          <target state="translated">경로에 이스케이프 문자가 포함되어 있으면 경로를 작은따옴표로 묶습니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Single quotation marks instruct Windows PowerShell not to interpret characters as escape sequences.</source>
          <target state="translated">작은따옴표는 Windows PowerShell에서 문자가 이스케이프 시퀀스로 해석하지 않도록 합니다.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>-Path</source>
          <target state="translated">-Path</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Specifies the path to one or more files.</source>
          <target state="translated">하나 이상 파일의 경로를 지정합니다.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Wildcard characters are permitted.</source>
          <target state="translated">와일드카드 문자를 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>-InputStream</source>
          <target state="translated">-입력 스트림이</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>{{Fill InputStream Description}}</source>
          <target state="translated">{{입력 스트림이 설명 채우기}}</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>CommonParameters</source>
          <target state="translated">CommonParameters</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutVariable, -OutBuffer, -PipelineVariable, -Verbose, -WarningAction, and -WarningVariable.</source>
          <target state="translated">이 cmdlet은 공통 매개 변수:-디버그,-ErrorAction,-ErrorVariable,-InformationAction,-InformationVariable,-OutVariable,-OutBuffer,-PipelineVariable,-Verbose,-WarningAction 및-warningvariable을 지원 합니다.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>For more information, see about_CommonParameters (http://go.microsoft.com/fwlink/?LinkID=113216).</source>
          <target state="translated">자세한 내용은 about_CommonParameters (http://go.microsoft.com/fwlink/?LinkID=113216)를 참조 합니다.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>INPUTS</source>
          <target state="translated">입력</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>System.String</source>
          <target state="translated">System.String</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>You can pipe a string to the Get-FileHash cmdlet that contains a path to one or more files.</source>
          <target state="translated">하나 이상 파일의 경로가 포함된 문자열을 Get-FileHash cmdlet으로 파이프할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>OUTPUTS</source>
          <target state="translated">출력</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>Microsoft.Powershell.Utility.FileHash</source>
          <target state="translated">Microsoft.Powershell.Utility.FileHash</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Get-FileHash returns an object that represents the path to the specified file, the value of the computed hash, and the algorithm used to compute the hash.</source>
          <target state="translated">Get-FileHash는 지정한 파일의 경로, 계산된 해시 값 및 해시 계산에 사용된 알고리즘을 나타내는 개체를 반환합니다.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>NOTES</source>
          <target state="translated">참고 사항</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>RELATED LINKS</source>
          <target state="translated">관련된 링크</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>