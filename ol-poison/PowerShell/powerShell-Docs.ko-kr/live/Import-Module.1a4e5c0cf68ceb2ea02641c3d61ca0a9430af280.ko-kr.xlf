<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ko-kr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-1c394fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">41e75dbff59e54a025a7d9256c6cd8648caf119d</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">reference\5.0\Microsoft.PowerShell.Core\Import-Module.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions" />
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">2253a655f4f1d939f2938bcd7e894e0334ea3264</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1f3e30e9af1d411f00ad13f04c9d41d048cbd99c</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>powershell, cmdlet</source>
          <target state="translated">powershell cmdlet</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Import-Module</source>
          <target state="translated">Import-Module</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Import-Module</source>
          <target state="translated">Import-Module</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>SYNOPSIS</source>
          <target state="translated">요약</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Adds modules to the current session.</source>
          <target state="translated">현재 세션에 모듈을 추가합니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>SYNTAX</source>
          <target state="translated">구문</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Name (Default)</source>
          <target state="translated">이름 (기본값)</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>PSSession</source>
          <target state="translated">PSSession</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>CimSession</source>
          <target state="translated">CimSession</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>FullyQualifiedName</source>
          <target state="translated">FullyQualifiedName</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>FullyQualifiedNameAndPSSession</source>
          <target state="translated">FullyQualifiedNameAndPSSession</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Assembly</source>
          <target state="translated">어셈블리</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>ModuleInfo</source>
          <target state="translated">ModuleInfo</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>DESCRIPTION</source>
          <target state="translated">설명</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>Import-Module<ept id="p1">**</ept> cmdlet adds one or more modules to the current session.</source>
          <target state="translated"> <bpt id="p1">**</bpt>Import-module<ept id="p1">**</ept> cmdlet은 현재 세션에 하나 이상의 모듈을 추가 합니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>The modules that you import must be installed on the local computer or a remote computer.</source>
          <target state="translated">가져오는 모듈은 로컬 컴퓨터나 원격 컴퓨터에 설치해야 합니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Starting in Windows PowerShell 3.0, installed modules are automatically imported to the session when you use any commands or providers in the module.</source>
          <target state="translated">Windows PowerShell 3.0부터, 설치 된 모듈을 사용 하 여 임의의 명령이 나 공급자 모듈의 세션에 자동으로 가져옵니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>However, you can still use the <bpt id="p1">**</bpt>Import-Module<ept id="p1">**</ept> command to import a module and you can enable and disable automatic module importing by using the $PSModuleAutoloadingPreference preference variable.</source>
          <target state="translated">그러나 사용할 수 있습니다는 <bpt id="p1">**</bpt>Import-module<ept id="p1">**</ept> 모듈과 있습니다 가져오려면 명령을 사용 하 고 $PSModuleAutoloadingPreference 기본 설정 변수를 사용 하 여 자동 모듈 가져오기를 사용 하지 않도록 설정 합니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>For more information about modules, see about_Modules (http://go.microsoft.com/fwlink/?LinkID=144311).</source>
          <target state="translated">모듈에 대 한 자세한 내용은 about_Modules (http://go.microsoft.com/fwlink/?LinkID=144311)를 참조 하십시오.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>For more information about the $PSModuleAutoloadingPreference variable, see about_Preference_Variables (http://go.microsoft.com/fwlink/?LinkID=113248).</source>
          <target state="translated">$PSModuleAutoloadingPreference 변수에 대 한 자세한 내용은 about_Preference_Variables (http://go.microsoft.com/fwlink/?LinkID=113248)을 참조 하십시오.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>A module is a package that contains members that can be used in Windows PowerShell.</source>
          <target state="translated">모듈은 Windows PowerShell에서 사용할 수 있는 멤버를 포함 하는 패키지입니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Members include cmdlets, providers, scripts, functions, variables, and other tools and files.</source>
          <target state="translated">멤버는 cmdlet, 공급자, 스크립트, 함수, 변수 및 기타 도구 및 파일에 포함 됩니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>After a module is imported, you can use the module members in your session.</source>
          <target state="translated">모듈을 가져온 후 세션에서 해당 모듈 멤버를 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>To import a module, use the <bpt id="p1">*</bpt>Name<ept id="p1">*</ept>, <bpt id="p2">*</bpt>Assembly<ept id="p2">*</ept>, <bpt id="p3">*</bpt>ModuleInfo<ept id="p3">*</ept>, <bpt id="p4">*</bpt>MinimumVersion<ept id="p4">*</ept> and <bpt id="p5">*</bpt>RequiredVersion<ept id="p5">*</ept> parameters to identify the module to import.</source>
          <target state="translated">사용 하 여 모듈을 가져오려면는 <bpt id="p1">*</bpt>이름<ept id="p1">*</ept>, <bpt id="p2">*</bpt>어셈블리<ept id="p2">*</ept>, <bpt id="p3">*</bpt>ModuleInfo<ept id="p3">*</ept>, <bpt id="p4">*</bpt>MinimumVersion<ept id="p4">*</ept> 및 <bpt id="p5">*</bpt>RequiredVersion<ept id="p5">*</ept> 가져올 모듈을 식별 하는 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>By default, <bpt id="p1">**</bpt>Import-Module<ept id="p1">**</ept> imports all members that the module exports, but you can use the <bpt id="p2">*</bpt>Alias<ept id="p2">*</ept>, <bpt id="p3">*</bpt>Function<ept id="p3">*</ept>, <bpt id="p4">*</bpt>Cmdlet<ept id="p4">*</ept>, and <bpt id="p5">*</bpt>Variable<ept id="p5">*</ept> parameters to restrict the members that are imported.</source>
          <target state="translated">기본적으로 <bpt id="p1">**</bpt>모듈 가져오기<ept id="p1">**</ept> 은 모듈이 내보내는 멤버를 모두 가져오고 하지만 사용할 수는 <bpt id="p2">*</bpt>별칭<ept id="p2">*</ept>, <bpt id="p3">*</bpt>함수<ept id="p3">*</ept>, <bpt id="p4">*</bpt>Cmdlet<ept id="p4">*</ept>, 및 <bpt id="p5">*</bpt>변수<ept id="p5">*</ept> 가져온 멤버를 제한 하는 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>You can also use the <bpt id="p1">*</bpt>NoClobber<ept id="p1">*</ept> parameter to prevent <bpt id="p2">**</bpt>Import-Module<ept id="p2">**</ept> from importing members that have the same names as members in the current session.</source>
          <target state="translated">사용할 수도 있습니다는 <bpt id="p1">*</bpt>NoClobber<ept id="p1">*</ept> 동작 하도록 매개 변수 <bpt id="p2">**</bpt>Import-module<ept id="p2">**</ept> 에서 현재 세션의 멤버와 동일한 이름을 가진 멤버는 가져오지 합니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Import-Module<ept id="p1">**</ept> imports a module only into the current session.</source>
          <target state="translated"><bpt id="p1">**</bpt>모듈 가져오기<ept id="p1">**</ept> 만 현재 세션으로 모듈을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>To import the module into all sessions, add an <bpt id="p1">**</bpt>Import-Module<ept id="p1">**</ept> command to your Windows PowerShell profile.</source>
          <target state="translated">모든 세션으로 모듈을 가져오려면 추가 <bpt id="p1">**</bpt>Import-module<ept id="p1">**</ept> 명령을 Windows PowerShell 프로필에 있습니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>For more information about profiles, see about_Profiles (http://go.microsoft.com/fwlink/?LinkID=113729).</source>
          <target state="translated">프로필에 대 한 자세한 내용은 about_Profiles (http://go.microsoft.com/fwlink/?LinkID=113729)를 참조 하십시오.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Starting in Windows PowerShell 3.0, you can use <bpt id="p1">**</bpt>Import-Module<ept id="p1">**</ept> to import Common Information Model (CIM) modules, in which the cmdlets are defined in Cmdlet Definition XML (CDXML) files.</source>
          <target state="translated">사용할 수는 Windows PowerShell 3.0 부터는 <bpt id="p1">**</bpt>Import-module<ept id="p1">**</ept> 모델 CIM (Common Information) 모듈, Cmdlet 정의 XML (CDXML) 파일에 정의 되어 있는 cmdlet을 가져올 합니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>This feature allows you to use cmdlets that are implemented in non-managed code assemblies, such as those written in C++.</source>
          <target state="translated">이 기능을 사용하면 C++로 작성된 코드 어셈블리와 같은 비관리 코드 어셈블리에 구현된 cmdlet을 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>With these new features, <bpt id="p1">**</bpt>Import-Module<ept id="p1">**</ept> cmdlet becomes a primary tool for managing heterogeneous enterprises that include computers that run the Windows operating system and computers that are running other operating systems.</source>
          <target state="translated">이러한 새로운 기능 <bpt id="p1">**</bpt>Import-module<ept id="p1">**</ept> cmdlet Windows 운영 체제 및 컴퓨터를 실행 하는 컴퓨터를 포함 하는 여러 유형의 기업 환경을 관리는 다른 운영 체제를 실행 하는 기본 도구로 됩니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>To manage remote computers that run the Windows operating system that have Windows PowerShell and Windows PowerShell remoting enabled, create a <bpt id="p1">**</bpt>PSSession<ept id="p1">**</ept> on the remote computer and then use the <bpt id="p2">*</bpt>PSSession<ept id="p2">*</ept> parameter of <bpt id="p3">**</bpt>Get-Module<ept id="p3">**</ept> to get the Windows PowerShell modules in the <bpt id="p4">**</bpt>PSSession<ept id="p4">**</ept>.</source>
          <target state="translated">Windows PowerShell 및 Windows PowerShell 원격을 사용 하는 Windows 운영 체제를 실행 하는 원격 컴퓨터를 관리 하려면 만들기는 <bpt id="p1">**</bpt>PSSession<ept id="p1">**</ept> 사용 하 여 원격 컴퓨터에는 <bpt id="p2">*</bpt>PSSession<ept id="p2">*</ept> 의 매개 변수 <bpt id="p3">**</bpt>Get-module<ept id="p3">**</ept> 의 Windows PowerShell 모듈을 가져올 수는 <bpt id="p4">**</bpt>PSSession<ept id="p4">**</ept>합니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>When you import the modules, and then use the imported commands in the current session, the commands run implicitly in the <bpt id="p1">**</bpt>PSSession<ept id="p1">**</ept> on the remote computer.</source>
          <target state="translated">명령에서 암시적으로 실행 모듈을 가져오고 다음 가져온된 명령을 현재 세션에서 사용 하는 경우는 <bpt id="p1">**</bpt>PSSession<ept id="p1">**</ept> 원격 컴퓨터에 있습니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>You can use this strategy to manage the remote computer.</source>
          <target state="translated">이 전략을 사용하여 원격 컴퓨터를 관리할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>You can use a similar strategy to manage computers that do not have Windows PowerShell remoting enabled, including computers that are not running the Windows operating system, and Windows computers that have Windows PowerShell, but do not have Windows PowerShell remoting enabled.</source>
          <target state="translated">Windows 운영 체제를 실행 하지 않는 컴퓨터 및 Windows powershell이 있지만 Windows PowerShell 원격을 사용 하지 않은 Windows 컴퓨터를 포함 하 여 Windows PowerShell 원격을 사용 하지 않은 컴퓨터를 관리 하는 유사한 전략을 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Start by creating a CIM session on the remote computer, which is a connection to Windows Management Instrumentation (WMI) on the remote computer.</source>
          <target state="translated">원격 컴퓨터에서 Windows Management Instrumentation (WMI)에 연결 되어 있는 원격 컴퓨터에서 CIM 세션을 만들어 시작 합니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Then use the <bpt id="p1">*</bpt>CIMSession<ept id="p1">*</ept> parameter of <bpt id="p2">**</bpt>Import-Module<ept id="p2">**</ept> to import CIM modules from the remote computer.</source>
          <target state="translated">다음 사용 하 여는 <bpt id="p1">*</bpt>CIMSession<ept id="p1">*</ept> 의 매개 변수 <bpt id="p2">**</bpt>Import-module<ept id="p2">**</ept> 원격 컴퓨터에서 CIM 모듈을 가져올 수 있습니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>When you import a CIM module and then run the imported commands, the commands run implicitly on the remote computer.</source>
          <target state="translated">CIM 모듈을 가져온 다음 가져온 명령을 실행하면 이 명령은 원격 컴퓨터에서 암시적으로 실행됩니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>You can use this WMI and CIM strategy to manage the remote computer.</source>
          <target state="translated">이 WMI 및 CIM 전략을 사용하여 원격 컴퓨터를 관리할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>EXAMPLES</source>
          <target state="translated">예제</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Example 1: Import the members of a module into the current session</source>
          <target state="translated">예 1: 현재 세션으로 모듈의 멤버를 가져오기</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>This command imports the members of the <bpt id="p1">**</bpt>BitsTransfer<ept id="p1">**</ept> module into the current session.</source>
          <target state="translated">이 명령은의 멤버를 가져오고는 <bpt id="p1">**</bpt>BitsTransfer<ept id="p1">**</ept> 현재 세션으로 모듈입니다.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">*</bpt>Name<ept id="p1">*</ept> parameter name is optional and can be omitted.</source>
          <target state="translated"> <bpt id="p1">*</bpt>이름<ept id="p1">*</ept> 매개 변수 이름에는 선택 사항이 며 생략할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>By default, <bpt id="p1">**</bpt>Import-Module<ept id="p1">**</ept> does not generate any output when it imports a module.</source>
          <target state="translated">기본적으로 <bpt id="p1">**</bpt>Import-module<ept id="p1">**</ept> 모듈을 가져올 때 어떤 출력도 생성 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>To request output, use the <bpt id="p1">*</bpt>PassThru<ept id="p1">*</ept> or <bpt id="p2">*</bpt>AsCustomObject<ept id="p2">*</ept> parameter, or the <bpt id="p3">*</bpt>Verbose<ept id="p3">*</ept> common parameter.</source>
          <target state="translated">사용 하 여 출력을 요청 하려면는 <bpt id="p1">*</bpt>PassThru<ept id="p1">*</ept> 또는 <bpt id="p2">*</bpt>AsCustomObject<ept id="p2">*</ept> 매개 변수 또는 <bpt id="p3">*</bpt>Verbose<ept id="p3">*</ept> 일반 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Example 2: Import all modules specified by the module path</source>
          <target state="translated">예제 2: 모듈 경로로 지정 하는 모든 모듈 가져오기</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>This command imports all available modules in the path specified by the PSModulePath environment variable ($env:PSModulePath) into the current session.</source>
          <target state="translated">이 명령은 PSModulePath 환경 변수($env:psmodulepath)로 지정된 경로에서 사용 가능한 모든 모듈을 현재 세션으로 가져옵니다.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Example 3: Import the members of several modules into the current session</source>
          <target state="translated">예제 3: 현재 세션으로 여러 모듈의 멤버를 가져오기</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>These commands import the members of the <bpt id="p1">**</bpt>BitsTransfer<ept id="p1">**</ept> and <bpt id="p2">**</bpt>ServerManager<ept id="p2">**</ept> modules into the current session.</source>
          <target state="translated">이러한 명령은의 멤버를 가져오기는 <bpt id="p1">**</bpt>BitsTransfer<ept id="p1">**</ept> 및 <bpt id="p2">**</bpt>ServerManager<ept id="p2">**</ept> 현재 세션으로 모듈입니다.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>The first command uses the Get-Module cmdlet to get the <bpt id="p1">**</bpt>BitsTransfer<ept id="p1">**</ept> and <bpt id="p2">**</bpt>ServerManager<ept id="p2">**</ept> modules.</source>
          <target state="translated">첫 번째 명령은 Get-module cmdlet를 사용 하 여 가져오려는 <bpt id="p1">**</bpt>BitsTransfer<ept id="p1">**</ept> 및 <bpt id="p2">**</bpt>ServerManager<ept id="p2">**</ept> 모듈입니다.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>It saves the objects in the $m variable.</source>
          <target state="translated">$m 변수에 저장합니다.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">*</bpt>ListAvailable<ept id="p1">*</ept> parameter is required when you are getting modules that are not yet imported into the session.</source>
          <target state="translated"> <bpt id="p1">*</bpt>ListAvailable<ept id="p1">*</ept> 매개 변수는 세션에 아직 가져오지 않은 모듈 가져올 때 필요 합니다.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>The second command uses the <bpt id="p1">*</bpt>ModuleInfo<ept id="p1">*</ept> parameter of <bpt id="p2">**</bpt>Import-Module<ept id="p2">**</ept> to import the modules into the current session.</source>
          <target state="translated">두 번째 명령은 <bpt id="p1">*</bpt>ModuleInfo<ept id="p1">*</ept> 의 매개 변수 <bpt id="p2">**</bpt>Import-module<ept id="p2">**</ept> 현재 세션으로 모듈을 가져오려면 합니다.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>These commands are equivalent to using a pipeline operator (|) to send the output of a <bpt id="p1">**</bpt>Get-Module<ept id="p1">**</ept> command to <bpt id="p2">**</bpt>Import-Module<ept id="p2">**</ept>.</source>
          <target state="translated">이러한 주석은의 출력으로 보내려면 파이프라인 연산자 (|)를 사용 하는 <bpt id="p1">**</bpt>Get-module<ept id="p1">**</ept> 명령을 <bpt id="p2">**</bpt>Import-module<ept id="p2">**</ept>합니다.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>Example 4: Import all modules specified by a path</source>
          <target state="translated">예 4: 경로에서 지정 하는 모든 모듈 가져오기</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>This command uses an explicit path to identify the module to import.</source>
          <target state="translated">이 명령은 명시적 경로를 사용하여 가져올 모듈을 식별합니다.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>It also uses the <bpt id="p1">*</bpt>Verbose<ept id="p1">*</ept> common parameter to get a list of the items imported from the module.</source>
          <target state="translated">또한 사용 하 여는 <bpt id="p1">*</bpt>Verbose<ept id="p1">*</ept> 일반 매개 변수를 모듈에서 가져온 항목의 목록을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>Without the <bpt id="p1">*</bpt>Verbose<ept id="p1">*</ept>, <bpt id="p2">*</bpt>PassThru<ept id="p2">*</ept>, or <bpt id="p3">*</bpt>AsCustomObject<ept id="p3">*</ept> parameter, <bpt id="p4">**</bpt>Import-Module<ept id="p4">**</ept> does not generate any output when it imports a module.</source>
          <target state="translated">없이 <bpt id="p1">*</bpt>Verbose<ept id="p1">*</ept>, <bpt id="p2">*</bpt>PassThru<ept id="p2">*</ept>, 또는 <bpt id="p3">*</bpt>AsCustomObject<ept id="p3">*</ept> 매개 변수를 <bpt id="p4">**</bpt>Import-module<ept id="p4">**</ept> 모듈을 가져올 때 어떤 출력도 생성 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>Example 5: Restrict module members imported into a session</source>
          <target state="translated">예제 5: 세션으로 가져온 모듈 멤버를 제한 합니다.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>This example shows how to restrict the module members that are imported into the session and the effect of this command on the session.</source>
          <target state="translated">이 예제에서는 세션으로 가져오는 모듈 멤버를 제한하는 방법과 세션에 대한 이 명령의 영향을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>The first command imports only the <bpt id="p1">**</bpt>Add-BitsTransfer<ept id="p1">**</ept> and <bpt id="p2">**</bpt>Get-BitsTransfer<ept id="p2">**</ept> cmdlets from the <bpt id="p3">**</bpt>BitsTransfer<ept id="p3">**</ept> module.</source>
          <target state="translated">첫 번째 명령은 가져옵니다는 <bpt id="p1">**</bpt>Add-bitstransfer<ept id="p1">**</ept> 및 <bpt id="p2">**</bpt>Get-bitstransfer<ept id="p2">**</ept> 에서 cmdlet는 <bpt id="p3">**</bpt>BitsTransfer<ept id="p3">**</ept> 모듈입니다.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>The command uses the <bpt id="p1">*</bpt>Cmdlet<ept id="p1">*</ept> parameter to restrict the cmdlets that the module imports.</source>
          <target state="translated">이 명령은 사용는 <bpt id="p1">*</bpt>Cmdlet<ept id="p1">*</ept> 매개 변수를 가져오는 cmdlet을 제한 합니다.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>You can also use the <bpt id="p1">*</bpt>Alias<ept id="p1">*</ept>, <bpt id="p2">*</bpt>Variable<ept id="p2">*</ept>, and <bpt id="p3">*</bpt>Function<ept id="p3">*</ept> parameters to restrict other members that a module imports.</source>
          <target state="translated">사용할 수도 있습니다는 <bpt id="p1">*</bpt>별칭<ept id="p1">*</ept>, <bpt id="p2">*</bpt>변수<ept id="p2">*</ept>, 및 <bpt id="p3">*</bpt>함수<ept id="p3">*</ept> 모듈이 가져오는 다른 멤버를 제한 하는 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>The second command uses the Get-Module cmdlet to get the object that represents the <bpt id="p1">**</bpt>BitsTransfer<ept id="p1">**</ept> module.</source>
          <target state="translated">두 번째 명령은 Get-module cmdlet를 사용 하 여를 나타내는 개체를 가져와 <bpt id="p1">**</bpt>BitsTransfer<ept id="p1">**</ept> 모듈입니다.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>ExportedCmdlets<ept id="p1">**</ept> property lists all of the cmdlets that the module exports, even when they were not all imported.</source>
          <target state="translated"> <bpt id="p1">**</bpt>ExportedCmdlets<ept id="p1">**</ept> 속성은 가져오지 않은 경우에은 모듈이 내보내는 cmdlet의 모든 나열 합니다.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>The third command uses the <bpt id="p1">*</bpt>Module<ept id="p1">*</ept> parameter of the Get-Command cmdlet to get the commands that were imported from the <bpt id="p2">**</bpt>BitsTransfer<ept id="p2">**</ept> module.</source>
          <target state="translated">세 번째 명령은 <bpt id="p1">*</bpt>모듈<ept id="p1">*</ept> 에서 가져온 명령을 가져오려면 Get-command cmdlet의 매개 변수는 <bpt id="p2">**</bpt>BitsTransfer<ept id="p2">**</ept> 모듈입니다.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>The results confirm that only the <bpt id="p1">**</bpt>Add-BitsTransfer<ept id="p1">**</ept> and <bpt id="p2">**</bpt>Get-BitsTransfer<ept id="p2">**</ept> cmdlets were imported.</source>
          <target state="translated">결과 확인만 사용 하는 <bpt id="p1">**</bpt>Add-bitstransfer<ept id="p1">**</ept> 및 <bpt id="p2">**</bpt>Get-bitstransfer<ept id="p2">**</ept> cmdlet을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>Example 6: Import the members of a module and add a prefix</source>
          <target state="translated">예제 6: 모듈의 멤버를 가져오고 접두사를 추가 합니다.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>These commands import the <bpt id="p1">**</bpt>BitsTransfer<ept id="p1">**</ept> module into the current session, add a prefix to the member names, and then display the prefixed member names.</source>
          <target state="translated">이러한 명령은 <bpt id="p1">**</bpt>BitsTransfer<ept id="p1">**</ept> 모듈에서 현재 세션으로 멤버 이름에 접두사를 추가 하 고 다음 접두사가 지정 된 멤버 이름을 표시 합니다.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>The first command uses the <bpt id="p1">**</bpt>Import-Module<ept id="p1">**</ept> cmdlet to import the <bpt id="p2">**</bpt>BitsTransfer<ept id="p2">**</ept> module.</source>
          <target state="translated">첫 번째 명령은 <bpt id="p1">**</bpt>Import-module<ept id="p1">**</ept> cmdlet을는 <bpt id="p2">**</bpt>BitsTransfer<ept id="p2">**</ept> 모듈입니다.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>It uses the <bpt id="p1">*</bpt>Prefix<ept id="p1">*</ept> parameter to add the PS prefix to all members that are imported from the module and the <bpt id="p2">*</bpt>PassThru<ept id="p2">*</ept> parameter to return a module object that represents the imported module.</source>
          <target state="translated">사용 하 여는 <bpt id="p1">*</bpt>접두사<ept id="p1">*</ept> 매개 변수는 모듈에서 가져온 모든 멤버에 PS 접두사를 추가 하 고 <bpt id="p2">*</bpt>PassThru<ept id="p2">*</ept> 가져온된 모듈을 나타내는 모듈 개체를 반환 하려면 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>The second command uses the <bpt id="p1">**</bpt>Get-Command<ept id="p1">**</ept> cmdlet to get the members that have been imported from the module.</source>
          <target state="translated">두 번째 명령은 <bpt id="p1">**</bpt>Get-command<ept id="p1">**</ept> 모듈에서 가져온 멤버를 가져오는 cmdlet입니다.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>It uses the <bpt id="p1">*</bpt>Module<ept id="p1">*</ept> parameter to specify the module.</source>
          <target state="translated">사용 하 여는 <bpt id="p1">*</bpt>모듈<ept id="p1">*</ept> 매개 변수 모듈을 지정 합니다.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>The output shows that the module members were correctly prefixed.</source>
          <target state="translated">출력에는 모듈 멤버에 접두사가 올바르게 추가된 것으로 표시됩니다.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>The prefix that you use applies only to the members in the current session.</source>
          <target state="translated">사용하는 접두사는 현재 세션의 멤버에만 적용되고</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>It does not change the module.</source>
          <target state="translated">모듈을 변경하지는 않습니다.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>Example 7: Get and use a custom object</source>
          <target state="translated">예제 7: 가져오기 및 사용자 지정 개체를 사용 하 여</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>These commands demonstrate how to get and use the custom object that <bpt id="p1">**</bpt>Import-Module<ept id="p1">**</ept> returns.</source>
          <target state="translated">이러한 명령에 가져와 사용자 지정 개체를 사용 하는 방법을 보여 줍니다는 <bpt id="p1">**</bpt>Import-module<ept id="p1">**</ept> 를 반환 합니다.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>Custom objects include synthetic members that represent each of the imported module members.</source>
          <target state="translated">사용자 지정 개체에는 가져온 각각의 모듈 멤버를 나타내는 합성 멤버가 포함되어 있습니다.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>For example, the cmdlets and functions in a module are converted to script methods of the custom object.</source>
          <target state="translated">예를 들어 모듈의 함수와 cmdlet은 사용자 지정 개체의 스크립트 메서드로 변환됩니다.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>Custom objects are very useful in scripting.</source>
          <target state="translated">사용자 지정 개체는 스크립팅에 매우 유용합니다.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>They are also useful when several imported objects have the same names.</source>
          <target state="translated">또한 가져온 몇몇 개체의 이름이 같은 경우에도 유용합니다.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>Using the script method of an object is equivalent to specifying the fully qualified name of an imported member, including its module name.</source>
          <target state="translated">개체의 스크립트 메서드를 사용하는 것은 모듈 이름을 포함하여 가져온 멤버의 정규화된 이름을 지정하는 것과 동일합니다.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">*</bpt>AsCustomObject<ept id="p1">*</ept> parameter can be used only when importing a script module, so the first task is to determine which of the available modules is a script module.</source>
          <target state="translated"> <bpt id="p1">*</bpt>AsCustomObject<ept id="p1">*</ept> 경우에 사용 가능한 모듈 중 첫 번째 작업은 스크립트 모듈을 가져오는 스크립트 모듈 매개 변수를 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>The first command uses the Get-Module cmdlet to get the available modules.</source>
          <target state="translated">첫 번째 명령은 Get-module cmdlet를 사용 하 여 사용 가능한 모듈을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>The command uses a pipeline operator to pass the module objects to the Format-Table cmdlet, which lists the <bpt id="p1">**</bpt>Name<ept id="p1">**</ept> and <bpt id="p2">**</bpt>ModuleType<ept id="p2">**</ept> of each module in a table.</source>
          <target state="translated">이 명령은 파이프라인 연산자를 사용 하 여 모듈 개체를 나열 하는 Format-table cmdlet으로 전달 하는 <bpt id="p1">**</bpt>이름<ept id="p1">**</ept> 및 <bpt id="p2">**</bpt>ModuleType<ept id="p2">**</ept> 테이블의 각 모듈입니다.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>The second command uses the <bpt id="p1">**</bpt>Import-Module<ept id="p1">**</ept> cmdlet to import the <bpt id="p2">**</bpt>PSDiagnostics<ept id="p2">**</ept> script module.</source>
          <target state="translated">두 번째 명령은 <bpt id="p1">**</bpt>Import-module<ept id="p1">**</ept> cmdlet을는 <bpt id="p2">**</bpt>PSDiagnostics<ept id="p2">**</ept> 스크립트 모듈입니다.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>The command uses the <bpt id="p1">*</bpt>AsCustomObject<ept id="p1">*</ept> parameter to request a custom object and the <bpt id="p2">*</bpt>PassThru<ept id="p2">*</ept> parameter to return the object.</source>
          <target state="translated">명령을 사용 하 여는 <bpt id="p1">*</bpt>AsCustomObject<ept id="p1">*</ept> 매개 변수는 사용자 지정 개체를 요청 하 고 <bpt id="p2">*</bpt>PassThru<ept id="p2">*</ept> 매개 변수 개체를 반환 합니다.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>The command saves the resulting custom object in the $a variable.</source>
          <target state="translated">이 명령은 결과 사용자 지정 개체를 $a 변수에 저장합니다.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>The third command uses a pipeline operator to send the $a variable to the Get-Member cmdlet, which gets the properties and methods of the <bpt id="p1">**</bpt>PSCustomObject<ept id="p1">**</ept> in $a.</source>
          <target state="translated">세 번째 명령은 파이프라인 연산자를 사용 하 여 $a 변수를 Get-member cmdlet의 메서드와 속성은 보내려고는 <bpt id="p1">**</bpt>PSCustomObject<ept id="p1">**</ept> $에서는 합니다.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>The output shows a <bpt id="p1">**</bpt>Show-Calendar<ept id="p1">**</ept> script method.</source>
          <target state="translated">출력에 나와 있는 <bpt id="p1">**</bpt>Show-calendar<ept id="p1">**</ept> 스크립트 메서드.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>The last command uses the <bpt id="p1">**</bpt>Show-Calendar<ept id="p1">**</ept> script method.</source>
          <target state="translated">마지막 명령에서 사용 하 여 <bpt id="p1">**</bpt>Show-calendar<ept id="p1">**</ept> 스크립트 메서드.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>The method name must be enclosed in quotation marks, because it includes a hyphen.</source>
          <target state="translated">메서드 이름은 하이픈을 포함하므로 따옴표로 묶어야 합니다.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>Example 8: Re-import a module into the same session</source>
          <target state="translated">예 8: 동일한 세션으로 모듈을 다시 가져오기</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>This example shows how to use the <bpt id="p1">*</bpt>Force<ept id="p1">*</ept> parameter of <bpt id="p2">**</bpt>Import-Module<ept id="p2">**</ept> when you are re-importing a module into the same session.</source>
          <target state="translated">사용 하는 방법을 보여 주는이 예제는 <bpt id="p1">*</bpt>Force<ept id="p1">*</ept> 의 매개 변수 <bpt id="p2">**</bpt>Import-module<ept id="p2">**</ept> 동일한 세션으로 모듈을 다시 가져올 때입니다.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>The first command imports the <bpt id="p1">**</bpt>BitsTransfer<ept id="p1">**</ept> module.</source>
          <target state="translated">첫 번째 명령은 가져옵니다는 <bpt id="p1">**</bpt>BitsTransfer<ept id="p1">**</ept> 모듈입니다.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>The second command imports the module again, this time using the <bpt id="p1">*</bpt>Prefix<ept id="p1">*</ept> parameter.</source>
          <target state="translated">두 번째 명령은 모듈을 가져옵니다,이 시간 사용 하 여 다시는 <bpt id="p1">*</bpt>접두사<ept id="p1">*</ept> 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>The second command also includes the <bpt id="p1">*</bpt>Force<ept id="p1">*</ept> parameter, which removes the module and then imports it again.</source>
          <target state="translated">두 번째 명령은 포함 되어는 <bpt id="p1">*</bpt>Force<ept id="p1">*</ept> 매개 변수는 모듈을 제거 하 고 다음 다시 가져옵니다.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>Without this parameter, the session would include two copies of each <bpt id="p1">**</bpt>BitsTransfer<ept id="p1">**</ept> cmdlet, one with the standard name and one with the prefixed name.</source>
          <target state="translated">이 매개 변수가 없으면 세션에는 각각의 두 복사본이 포함 됩니다 <bpt id="p1">**</bpt>BitsTransfer<ept id="p1">**</ept> cmdlet, 표준 이름의 접두사가 지정 된 이름을 사용 합니다.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>Example 9: Run commands that have been hidden by imported commands</source>
          <target state="translated">가져온된 명령에서 숨겨져 있는 명령을 실행 하는 예 9:</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>This example shows how to run commands that have been hidden by imported commands.</source>
          <target state="translated">이 예제에서는 가져온 명령에서 숨긴 명령을 실행하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>The first command run the Get-Date cmdlet.</source>
          <target state="translated">첫 번째 명령은 Get-date cmdlet을 실행 합니다.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>It returns a <bpt id="p1">**</bpt>DateTime<ept id="p1">**</ept> object with the current date.</source>
          <target state="translated">반환 된 <bpt id="p1">**</bpt>DateTime<ept id="p1">**</ept> 개체는 현재 날짜입니다.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>The second command imports the <bpt id="p1">**</bpt>TestModule<ept id="p1">**</ept> module.</source>
          <target state="translated">두 번째 명령은 가져옵니다는 <bpt id="p1">**</bpt>TestModule<ept id="p1">**</ept> 모듈입니다.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>This module includes a function named <bpt id="p1">**</bpt>Get-Date<ept id="p1">**</ept> that returns the year and day of the year.</source>
          <target state="translated">명명 된 함수를 포함 하는이 모듈 <bpt id="p1">**</bpt>Get-date<ept id="p1">**</ept> 연도 및 연간 일자를 반환 합니다.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>The third command runs the <bpt id="p1">**</bpt>Get-Date<ept id="p1">**</ept> command again.</source>
          <target state="translated">세 번째 명령은 실행 되는 <bpt id="p1">**</bpt>Get-date<ept id="p1">**</ept> 명령을 다시 합니다.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>Because functions take precedence over cmdlets, the <bpt id="p1">**</bpt>Get-Date<ept id="p1">**</ept> function from the <bpt id="p2">**</bpt>TestModule<ept id="p2">**</ept> module runs, instead of the <bpt id="p3">**</bpt>Get-Date<ept id="p3">**</ept> cmdlet.</source>
          <target state="translated">함수가 cmdlet 보다 우선 하기 때문에 <bpt id="p1">**</bpt>Get-date<ept id="p1">**</ept> 에서 함수는 <bpt id="p2">**</bpt>TestModule<ept id="p2">**</ept> 모듈 실행 대신는 <bpt id="p3">**</bpt>Get-date<ept id="p3">**</ept> cmdlet입니다.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>The fourth command uses the <bpt id="p1">*</bpt>All<ept id="p1">*</ept> parameter of the <bpt id="p2">**</bpt>Get-Command<ept id="p2">**</ept> to get all of the Get-Date commands in the session.</source>
          <target state="translated">네 번째 명령은 <bpt id="p1">*</bpt>모든<ept id="p1">*</ept> 의 매개 변수는 <bpt id="p2">**</bpt>Get-command<ept id="p2">**</ept> 를 세션의 모든 Get-date 명령을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>The results show that there are two <bpt id="p1">**</bpt>Get-Date<ept id="p1">**</ept> commands in the session, a function from the <bpt id="p2">**</bpt>TestModule<ept id="p2">**</ept> module and a cmdlet from the <bpt id="p3">**</bpt>Microsoft.PowerShell.Utility<ept id="p3">**</ept> module.</source>
          <target state="translated">결과 표시 하는 두 <bpt id="p1">**</bpt>Get-date<ept id="p1">**</ept> 함수를 세션의 명령이 <bpt id="p2">**</bpt>TestModule<ept id="p2">**</ept> 모듈과의 cmdlet은 <bpt id="p3">**</bpt>Microsoft.PowerShell.Utility<ept id="p3">**</ept> 모듈입니다.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>The fifth command runs the hidden cmdlet by qualifying the command name with the module name.</source>
          <target state="translated">다섯 번째 명령은 모듈 이름으로 명령 이름을 정규화하여 숨겨진 cmdlet을 실행합니다.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>For more information about command precedence in Windows PowerShell, see about_Command_Precedence (http://go.microsoft.com/fwlink/?LinkID=113214).</source>
          <target state="translated">Windows PowerShell에서 명령 우선 순위에 대 한 자세한 내용은 about_Command_Precedence (http://go.microsoft.com/fwlink/?LinkID=113214)를 참조 하십시오.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>Example 10: Import a minimum version of a module</source>
          <target state="translated">예 10: 모듈의 최소 버전을 가져오기</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>This command imports the <bpt id="p1">**</bpt>PSWorkflow<ept id="p1">**</ept> module.</source>
          <target state="translated">이 명령은 가져옵니다는 <bpt id="p1">**</bpt>PSWorkflow<ept id="p1">**</ept> 모듈입니다.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>It uses the <bpt id="p1">*</bpt>MinimumVersion<ept id="p1">*</ept> parameter of <bpt id="p2">**</bpt>Import-Module<ept id="p2">**</ept> to import only version 3.0.0.0 or greater of the module.</source>
          <target state="translated">사용 하 여는 <bpt id="p1">*</bpt>MinimumVersion<ept id="p1">*</ept> 의 매개 변수 <bpt id="p2">**</bpt>Import-module<ept id="p2">**</ept> 버전 3.0.0.0 가져올 모듈의 큰 합니다.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>You can also use the <bpt id="p1">*</bpt>RequiredVersion<ept id="p1">*</ept> parameter to import a particular version of a module, or use the <bpt id="p2">*</bpt>Module<ept id="p2">*</ept> and <bpt id="p3">*</bpt>Version<ept id="p3">*</ept> parameters of the <bpt id="p4">**</bpt>#Requires<ept id="p4">**</ept> keyword to require a particular version of a module in a script.</source>
          <target state="translated">사용할 수도 있습니다는 <bpt id="p1">*</bpt>RequiredVersion<ept id="p1">*</ept> 모듈의 특정 버전을 가져오거나 사용 하 여 매개 변수는 <bpt id="p2">*</bpt>모듈<ept id="p2">*</ept> 및 <bpt id="p3">*</bpt>버전<ept id="p3">*</ept> 의 매개 변수는 <bpt id="p4">**</bpt>#Requires<ept id="p4">**</ept> 키워드는 스크립트에서 모듈의 특정 버전을 요구 하도록 합니다.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>Example 11: Import a module from a remote computer</source>
          <target state="translated">예 11: 원격 컴퓨터에서 모듈을 가져오기</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>This example shows how to use the <bpt id="p1">**</bpt>Import-Module<ept id="p1">**</ept> cmdlet to import a module from a remote computer.</source>
          <target state="translated">사용 하는 방법을 보여 주는이 예제는 <bpt id="p1">**</bpt>Import-module<ept id="p1">**</ept> cmdlet을 원격 컴퓨터에서 모듈을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>This command uses the Implicit Remoting feature of Windows PowerShell.</source>
          <target state="translated">이 명령은 Windows PowerShell의 암시적 원격 기능을 사용합니다.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>When you import modules from another session, you can use the cmdlets in the current session.</source>
          <target state="translated">다른 세션에서 모듈을 가져오면 현재 세션에서 해당 cmdlet을 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>However, commands that use the cmdlets actually run in the remote session.</source>
          <target state="translated">그러나 cmdlet을 사용하는 명령은 실제로 원격 세션에서 실행됩니다.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>Example 12: Manage storage on a remote computer without the Windows operating system</source>
          <target state="translated">Windows 운영 체제 없이 원격 컴퓨터에서 저장소를 관리 하는 예 12:</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>The commands in this example enable you to manage the storage systems of a remote computer that is not running the Windows operating system.</source>
          <target state="translated">이 예의 명령은 사용 하는 Windows 운영 체제를 실행 하지 않는 원격 컴퓨터의 저장소 시스템을 관리할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>In this example, because the administrator of the computer has installed the Module Discovery WMI provider, the CIM commands can use the default values, which are designed for the provider.</source>
          <target state="translated">이 예제에서는 컴퓨터의 관리자가 모듈 검색 WMI 공급자를 설치했으므로 CIM 명령은 공급자용으로 설계된 기본값을 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>PARAMETERS</source>
          <target state="translated">매개 변수</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>-Alias</source>
          <target state="translated">별칭</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>Specifies the aliases that this cmdlet imports from the module into the current session.</source>
          <target state="translated">이 cmdlet이 모듈은 현재 세션으로 가져오는 별칭을 지정 합니다.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>Enter a comma-separated list of aliases.</source>
          <target state="translated">쉼표로 구분된 별칭 목록을 입력하세요.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>Wildcard characters are permitted.</source>
          <target state="translated">와일드카드 문자를 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>Some modules automatically export selected aliases into your session when you import the module.</source>
          <target state="translated">모듈을 가져올 때 선택된 별칭을 해당 세션으로 자동으로 내보내는 모듈도 있습니다.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>This parameter lets you select from among the exported aliases.</source>
          <target state="translated">이 매개 변수를 사용하면 내보내는 별칭 중에서 선택할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>-ArgumentList</source>
          <target state="translated">-ArgumentList</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>Specifies an array of arguments, or parameter values, that are passed to a script module during the <bpt id="p1">**</bpt>Import-Module<ept id="p1">**</ept> command.</source>
          <target state="translated">인수 또는 동안 스크립트 모듈에 전달 되는 매개 변수 값의 배열을 지정는 <bpt id="p1">**</bpt>Import-module<ept id="p1">**</ept> 명령입니다.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>This parameter is valid only when you are importing a script module.</source>
          <target state="translated">이 매개 변수는 스크립트 모듈을 가져오는 경우에만 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>You can also refer to the <bpt id="p1">*</bpt>ArgumentList<ept id="p1">*</ept> parameter by its alias, <bpt id="p2">*</bpt>args<ept id="p2">*</ept>.</source>
          <target state="translated">참조할 수 있습니다는 <bpt id="p1">*</bpt>ArgumentList<ept id="p1">*</ept> 해당 별칭으로 매개 변수 <bpt id="p2">*</bpt>args<ept id="p2">*</ept>합니다.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>For more information, see about_Aliases.</source>
          <target state="translated">자세한 내용은 about_Aliases를 참조하세요.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>-AsCustomObject</source>
          <target state="translated">-AsCustomObject</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>Indicates that this cmdlet returns a custom object with members that represent the imported module members.</source>
          <target state="translated">이 cmdlet에 가져온된 모듈 멤버를 나타내는 멤버가 포함 된 사용자 지정 개체를 반환 하는지 나타냅니다.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>This parameter is valid only for script modules.</source>
          <target state="translated">이 매개 변수는 스크립트 모듈에만 유효합니다.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>When you use the <bpt id="p1">*</bpt>AsCustomObject<ept id="p1">*</ept> parameter, <bpt id="p2">**</bpt>Import-Module<ept id="p2">**</ept> imports the module members into the session and then returns a <bpt id="p3">**</bpt>PSCustomObject<ept id="p3">**</ept> object instead of a <bpt id="p4">**</bpt>PSModuleInfo<ept id="p4">**</ept> object.</source>
          <target state="translated">사용 하는 경우는 <bpt id="p1">*</bpt>AsCustomObject<ept id="p1">*</ept> 매개 변수를 <bpt id="p2">**</bpt>Import-module<ept id="p2">**</ept> 세션으로 모듈 멤버를 가져오고 다음 반환을 <bpt id="p3">**</bpt>PSCustomObject<ept id="p3">**</ept> 개체 대신는 <bpt id="p4">**</bpt>PSModuleInfo<ept id="p4">**</ept> 개체입니다.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>You can save the custom object in a variable and use dot notation to invoke the members.</source>
          <target state="translated">사용자 지정 개체를 변수에 저장하고 점 표기법을 사용하여 멤버를 호출할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source>-Assembly</source>
          <target state="translated">-어셈블리</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source>Specifies an array of assembly objects.</source>
          <target state="translated">어셈블리 개체의 배열을 지정합니다.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source>This cmdlet imports the cmdlets and providers implemented in the specified assembly objects.</source>
          <target state="translated">이 cmdlet는 지정 된 어셈블리 개체에서 구현 되는 공급자와 cmdlet을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source>Enter a variable that contains assembly objects or a command that creates assembly objects.</source>
          <target state="translated">어셈블리 개체가 포함된 변수나 어셈블리 개체를 만드는 명령을 입력하세요.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source>You can also pipe an assembly object to <bpt id="p1">**</bpt>Import-Module<ept id="p1">**</ept>.</source>
          <target state="translated">또한 어셈블리 개체를 파이프할 수 있습니다 <bpt id="p1">**</bpt>Import-module<ept id="p1">**</ept>합니다.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source>When you use this parameter, only the cmdlets and providers implemented by the specified assemblies are imported.</source>
          <target state="translated">이 매개 변수를 사용하면 지정된 어셈블리에서 구현한 cmdlet과 공급자만 가져옵니다.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve">
          <source>If the module contains other files, they are not imported, and you might be missing important members of the module.</source>
          <target state="translated">모듈에 다른 파일이 포함되어 있는 경우 이러한 파일은 가져오지 않으므로 모듈의 중요한 멤버를 빠뜨릴 수도 있습니다.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source>Use this parameter for debugging and testing the module, or when you are instructed to use it by the module author.</source>
          <target state="translated">모듈을 디버깅하고 테스트하는 경우나 모듈 작성자가 지시한 경우 이 매개 변수를 사용합니다.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source>-CimNamespace</source>
          <target state="translated">-CimNamespace</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source>Specifies the namespace of an alternate CIM provider that exposes CIM modules.</source>
          <target state="translated">CIM 모듈을 표시하는 대체 CIM 공급자의 네임스페이스를 지정합니다.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve">
          <source>The default value is the namespace of the Module Discovery WMI provider.</source>
          <target state="translated">기본값은 모듈 검색 WMI 공급자의 네임스페이스입니다.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve">
          <source>Use this parameter to import CIM modules from computers and devices that are not running a Windows operating system.</source>
          <target state="translated">이 매개 변수를 사용하여 Windows 운영 체제를 실행하지 않는 컴퓨터 및 장치에서 CIM 모듈을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve">
          <source>This parameter was introduced in Windows PowerShell 3.0.</source>
          <target state="translated">이 매개 변수는 Windows PowerShell 3.0에서 도입 되었습니다.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve">
          <source>-CimResourceUri</source>
          <target state="translated">-CimResourceUri</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve">
          <source>Specifies an alternate location for CIM modules.</source>
          <target state="translated">CIM 모듈의 대체 위치를 지정합니다.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve">
          <source>The default value is the resource URI of the Module Discovery WMI provider on the remote computer.</source>
          <target state="translated">기본값은 원격 컴퓨터에서 모듈 검색 WMI 공급자의 리소스 URI입니다.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve">
          <source>Use this parameter to import CIM modules from computers and devices that are not running a Windows operating system.</source>
          <target state="translated">이 매개 변수를 사용하여 Windows 운영 체제를 실행하지 않는 컴퓨터 및 장치에서 CIM 모듈을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve">
          <source>This parameter was introduced in Windows PowerShell 3.0.</source>
          <target state="translated">이 매개 변수는 Windows PowerShell 3.0에서 도입 되었습니다.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve">
          <source>-CimSession</source>
          <target state="translated">-CimSession</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve">
          <source>Specifies a CIM session on the remote computer.</source>
          <target state="translated">원격 컴퓨터에서 CIM 세션을 지정합니다.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve">
          <source>Enter a variable that contains the CIM session or a command that gets the CIM session, such as a Get-CIMSessionhttp://go.microsoft.com/fwlink/?LinkId=227966 command.</source>
          <target state="translated">예: Get CIMSessionhttp://go.microsoft.com/fwlink/?LinkId=227966 명령 CIM 세션을 가져오는 명령 또는 CIM 세션을 포함 하는 변수를 입력 합니다.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Import-Module<ept id="p1">**</ept> uses the CIM session connection to import modules from the remote computer into the current session.</source>
          <target state="translated"><bpt id="p1">**</bpt>모듈 가져오기<ept id="p1">**</ept> CIM 세션 연결을 사용 하 여 현재 세션으로 원격 컴퓨터에서 모듈을 가져올 수 있습니다.</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve">
          <source>When you use the commands from the imported module in the current session, the commands actually run on the remote computer.</source>
          <target state="translated">현재 세션에서 가져온 모듈의 명령을 사용하면 명령이 실제로 원격 컴퓨터에서 실행됩니다.</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve">
          <source>You can use this parameter to import modules from computers and devices that are not running the Windows operating system, and Windows computers that have Windows PowerShell, but do not have Windows PowerShell remoting enabled.</source>
          <target state="translated">이 매개 변수를 사용 하 여 컴퓨터 및 Windows 운영 체제를 실행 하지 않는 장치 및 Windows powershell이 있지만 Windows PowerShell 원격을 사용 하지 않은 Windows 컴퓨터에서 모듈을 가져올 수 있습니다.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve">
          <source>This parameter was introduced in Windows PowerShell 3.0.</source>
          <target state="translated">이 매개 변수는 Windows PowerShell 3.0에서 도입 되었습니다.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve">
          <source>-Cmdlet</source>
          <target state="translated">-Cmdlet</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve">
          <source>Specifies an array of cmdlets that this cmdlet imports from the module into the current session.</source>
          <target state="translated">이 cmdlet이 모듈은 현재 세션으로 가져오는 cmdlet의 배열을 지정 합니다.</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve">
          <source>Wildcard characters are permitted.</source>
          <target state="translated">와일드카드 문자를 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve">
          <source>Some modules automatically export selected cmdlets into your session when you import the module.</source>
          <target state="translated">모듈을 가져올 때 선택된 cmdlet을 해당 세션으로 자동으로 내보내는 모듈도 있습니다.</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve">
          <source>This parameter lets you select from among the exported cmdlets.</source>
          <target state="translated">이 매개 변수를 사용하면 내보내는 cmdlet 중에서 선택할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve">
          <source>-DisableNameChecking</source>
          <target state="translated">-DisableNameChecking</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve">
          <source>Indicates that this cmdlet suppresses the message that warns you when you import a cmdlet or function whose name includes an unapproved verb or a prohibited character.</source>
          <target state="translated">이 cmdlet는 cmdlet 또는 함수 중 이름에는 승인 되지 않은 동사 나 금지 된 문자를 가져올 때이 경고 메시지를 표시 하지 않습니다 있는지를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve">
          <source>By default, when a module that you import exports cmdlets or functions that have unapproved verbs in their names, Windows PowerShell displays the following warning message:</source>
          <target state="translated">기본적으로 가져오는 모듈 cmdlet 또는 있는 함수를 내보내는 경우 승인 되지 않은 동사 이름에 Windows PowerShell 경고 메시지를 표시 합니다.</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve">
          <source>"WARNING: Some imported command names include unapproved verbs which might make them less discoverable.</source>
          <target state="translated">"경고: 가져온 일부 명령 이름 수 하는 검색 성능이 떨어지는 승인 되지 않은 동사를 포함 합니다.</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve">
          <source>Use the Verbose parameter for more detail or type Get-Verb to see the list of approved verbs."</source>
          <target state="translated">자세한 내용을 보려면 Verbose 매개 변수를 사용하거나 승인된 동사 목록을 보려면 Get-Verb를 입력하세요."</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve">
          <source>This message is only a warning.</source>
          <target state="translated">이 메시지는 경고일 뿐입니다.</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve">
          <source>The complete module is still imported, including the non-conforming commands.</source>
          <target state="translated">비준수 명령을 포함하여 전체 모듈을 계속 가져옵니다.</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve">
          <source>Although the message is displayed to module users, the naming problem should be fixed by the module author.</source>
          <target state="translated">메시지가 모듈 사용자에게 표시되더라도 명명 문제는 모듈 작성자가 수정해야 합니다.</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve">
          <source>-Force</source>
          <target state="translated">-Force</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve">
          <source>Indicates that this cmdlet re-imports a module and its members, even if the module or its members have an access mode of read-only.</source>
          <target state="translated">경우에 모듈 또는 해당 멤버의 읽기 전용 액세스 모드는이 cmdlet 모듈 및 해당 멤버를 다시 가져오는 나타냅니다.</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve">
          <source>-FullyQualifiedName</source>
          <target state="translated">-FullyQualifiedName</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve">
          <source>Specifies the fully qualified name of the module specification.</source>
          <target state="translated">모듈 지정의 정규화 된 이름을 지정합니다.</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve">
          <source>-Function</source>
          <target state="translated">함수</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve">
          <source>Specifies an array of functions that this cmdlet imports from the module into the current session.</source>
          <target state="translated">이 cmdlet이 모듈은 현재 세션으로 가져오는 함수의 배열을 지정 합니다.</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve">
          <source>Wildcard characters are permitted.</source>
          <target state="translated">와일드카드 문자를 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve">
          <source>Some modules automatically export selected functions into your session when you import the module.</source>
          <target state="translated">모듈을 가져올 때 선택된 함수를 해당 세션으로 자동으로 내보내는 모듈도 있습니다.</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve">
          <source>This parameter lets you select from among the exported functions.</source>
          <target state="translated">이 매개 변수를 사용하면 내보내는 함수 중에서 선택할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve">
          <source>-Global</source>
          <target state="translated">-전역</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve">
          <source>Indicates that this cmdlet imports modules into the global session state so they are available to all commands in the session.</source>
          <target state="translated">이 cmdlet 모듈을 가져오는 전역 세션 상태로 세션의 모든 명령에 사용할 수 있도록 나타냅니다.</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve">
          <source>By default, the commands in a module, including commands from nested modules, are imported into the caller's session state.</source>
          <target state="translated">기본적으로 중첩 모듈의 명령을 포함하여 모듈의 명령을 호출자의 세션 상태로 가져옵니다.</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve">
          <source>To restrict the commands that a module exports, use an Export-ModuleMember command in the script module.</source>
          <target state="translated">모듈이 내보내는 명령을 제한 하려면 스크립트 모듈에서 Export-modulemember 명령을 사용 합니다.</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">*</bpt>Global<ept id="p1">*</ept> parameter is equivalent to the <bpt id="p2">*</bpt>Scope<ept id="p2">*</ept> parameter with a value of Global.</source>
          <target state="translated"> <bpt id="p1">*</bpt>Global<ept id="p1">*</ept> 매개 변수는 해당 하는 <bpt id="p2">*</bpt>범위<ept id="p2">*</ept> 매개 변수는 전역 값입니다.</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve">
          <source>-MinimumVersion</source>
          <target state="translated">-MinimumVersion</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve">
          <source>Specifies a minimum version.</source>
          <target state="translated">최소 버전을 지정합니다.</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve">
          <source>This cmdlet imports only a version of the module that is greater than or equal to the specified value.</source>
          <target state="translated">이 cmdlet은 지정된 된 값 보다 크거나 같은 경우에 모듈의 버전을만 가져옵니다.</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve">
          <source>If no version qualifies, <bpt id="p1">**</bpt>Import-Module<ept id="p1">**</ept> generates an error.</source>
          <target state="translated">버전이 정규화 되어 있지 경우 <bpt id="p1">**</bpt>Import-module<ept id="p1">**</ept> 오류가 발생 합니다.</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve">
          <source>By default, <bpt id="p1">**</bpt>Import-Module<ept id="p1">**</ept> imports the module without checking the version number.</source>
          <target state="translated">기본적으로 <bpt id="p1">**</bpt>Import-module<ept id="p1">**</ept> 버전 번호를 확인 하지 않고 모듈을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve">
          <source>Use the <bpt id="p1">*</bpt>MinimumVersion<ept id="p1">*</ept> parameter name or its alias, Version.</source>
          <target state="translated">사용 된 <bpt id="p1">*</bpt>MinimumVersion<ept id="p1">*</ept> 매개 변수 이름 또는 별칭 버전입니다.</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve">
          <source>To specify an exact version, use the <bpt id="p1">*</bpt>RequiredVersion<ept id="p1">*</ept> parameter.</source>
          <target state="translated">사용 된 정확한 버전을 지정 하려면는 <bpt id="p1">*</bpt>RequiredVersion<ept id="p1">*</ept> 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve">
          <source>You can also use the <bpt id="p1">*</bpt>Module<ept id="p1">*</ept> and <bpt id="p2">*</bpt>Version<ept id="p2">*</ept> parameters of the <bpt id="p3">**</bpt>#Requires<ept id="p3">**</ept> keyword to require a specific version of a module in a script.</source>
          <target state="translated">사용할 수도 있습니다는 <bpt id="p1">*</bpt>모듈<ept id="p1">*</ept> 및 <bpt id="p2">*</bpt>버전<ept id="p2">*</ept> 의 매개 변수는 <bpt id="p3">**</bpt>#Requires<ept id="p3">**</ept> 키워드는 스크립트에서 모듈의 최신 버전입니다.</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve">
          <source>This parameter was introduced in Windows PowerShell 3.0.</source>
          <target state="translated">이 매개 변수는 Windows PowerShell 3.0에서 도입 되었습니다.</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve">
          <source>-ModuleInfo</source>
          <target state="translated">-ModuleInfo</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve">
          <source>Specifies an array of module objects to import.</source>
          <target state="translated">가져올 모듈 개체의 배열을 지정 합니다.</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve">
          <source>Enter a variable that contains the module objects, or a command that gets the module objects, such as the following command: <ph id="ph1">`Get-Module -ListAvailable`</ph>.</source>
          <target state="translated">다음 명령 같은 모듈 개체를 가져오는 명령 또는 모듈 개체를 포함 하는 변수를 입력: <ph id="ph1">`Get-Module -ListAvailable`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve">
          <source>You can also pipe module objects to <bpt id="p1">**</bpt>Import-Module<ept id="p1">**</ept>.</source>
          <target state="translated">또한 모듈 개체를 파이프할 수 있습니다 <bpt id="p1">**</bpt>Import-module<ept id="p1">**</ept>합니다.</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve">
          <source>-Name</source>
          <target state="translated">-Name</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve">
          <source>Specifies the names of the modules to import.</source>
          <target state="translated">가져올 모듈의 이름을 지정합니다.</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve">
          <source>Enter the name of the module or the name of a file in the module, such as a .psd1, .psm1, .dll, or ps1 file.</source>
          <target state="translated">모듈의 이름이나 모듈에 있는 파일의 이름을 입력하세요(예: psd1, .psm1, .dll 또는 ps1 파일).</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve">
          <source>File paths are optional.</source>
          <target state="translated">파일 경로 선택 사항입니다.</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve">
          <source>Wildcard characters are not permitted.</source>
          <target state="translated">와일드카드 문자는 사용할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve">
          <source>You can also pipe module names and file names to <bpt id="p1">**</bpt>Import-Module<ept id="p1">**</ept>.</source>
          <target state="translated">모듈 이름 및 파일 이름을로 파이프할 수도 있습니다 <bpt id="p1">**</bpt>Import-module<ept id="p1">**</ept>합니다.</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve">
          <source>If you omit a path, <bpt id="p1">**</bpt>Import-Module<ept id="p1">**</ept> looks for the module in the paths saved in the PSModulePath environment variable ($env:PSModulePath).</source>
          <target state="translated">경로 생략 하면 <bpt id="p1">**</bpt>Import-module<ept id="p1">**</ept> PSModulePath 환경 변수에 저장 된 경로에서 모듈을 찾습니다 ($env: PSModulePath).</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve">
          <source>Specify only the module name whenever possible.</source>
          <target state="translated">가능하면 항상 모듈 이름만 지정하세요.</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve">
          <source>When you specify a file name, only the members that are implemented in that file are imported.</source>
          <target state="translated">파일 이름을 지정하는 경우 해당 파일에 구현된 멤버만 가져옵니다.</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve">
          <source>If the module contains other files, they are not imported, and you might be missing important members of the module.</source>
          <target state="translated">모듈에 다른 파일이 포함되어 있는 경우 이러한 파일은 가져오지 않으므로 모듈의 중요한 멤버를 빠뜨릴 수도 있습니다.</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve">
          <source>-NoClobber</source>
          <target state="translated">-NoClobber</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve">
          <source>Indicates that this cmdlet does not import commands that have the same names as existing commands in the current session.</source>
          <target state="translated">이 cmdlet은 현재 세션의 기존 명령과 이름이 같은 명령을 가져오지 않습니다 나타냅니다.</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve">
          <source>By default, <bpt id="p1">**</bpt>Import-Module<ept id="p1">**</ept> imports all exported module commands.</source>
          <target state="translated">기본적으로 <bpt id="p1">**</bpt>Import-module<ept id="p1">**</ept> 내보낸된 모든 모듈 명령을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve">
          <source>Commands that have the same names can hide or replace commands in the session.</source>
          <target state="translated">이름이 같은 명령을 숨기 거 나 세션의 명령을 대체할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve">
          <source>To avoid command name conflicts in a session, use the <bpt id="p1">*</bpt>Prefix<ept id="p1">*</ept> or <bpt id="p2">*</bpt>NoClobber<ept id="p2">*</ept> parameters.</source>
          <target state="translated">세션에서 명령 이름 충돌을 방지 하려면 사용 된 <bpt id="p1">*</bpt>접두사<ept id="p1">*</ept> 또는 <bpt id="p2">*</bpt>NoClobber<ept id="p2">*</ept> 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve">
          <source>For more information about name conflicts and command precedence, see "Modules and Name Conflicts" in about_Modules and about_Command_Precedence.</source>
          <target state="translated">이름 충돌 및 명령 우선 순위에 대 한 자세한 내용은 about_Modules 및 about_Command_Precedence "모듈 및 이름 충돌"을 참조 하십시오.</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve">
          <source>This parameter was introduced in Windows PowerShell 3.0.</source>
          <target state="translated">이 매개 변수는 Windows PowerShell 3.0에서 도입 되었습니다.</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve">
          <source>-PSSession</source>
          <target state="translated">-PSSession</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve">
          <source>Specifies a Windows PowerShell user-managed session (<bpt id="p1">**</bpt>PSSession<ept id="p1">**</ept>) from which this cmdlet import modules into the current session.</source>
          <target state="translated">Windows PowerShell 사용자 관리 세션을 지정 합니다 (<bpt id="p1">**</bpt>PSSession<ept id="p1">**</ept>)이이 cmdlet을 현재 세션으로 모듈 가져오기입니다.</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve">
          <source>Enter a variable that contains a <bpt id="p1">**</bpt>PSSession<ept id="p1">**</ept> or a command that gets a <bpt id="p2">**</bpt>PSSession<ept id="p2">**</ept>, such as a Get-PSSession command.</source>
          <target state="translated">포함 된 변수를 입력 한 <bpt id="p1">**</bpt>PSSession<ept id="p1">**</ept> 가져오는 명령 또는 <bpt id="p2">**</bpt>PSSession<ept id="p2">**</ept>, 예: Get-pssession 명령입니다.</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve">
          <source>When you import a module from a different session into the current session, you can use the cmdlets from the module in the current session, just as you would use cmdlets from a local module.</source>
          <target state="translated">다른 세션에서 현재 세션으로 모듈을 가져오면 로컬 모듈의 cmdlet을 사용할 때와 마찬가지로 현재 세션에서 해당 모듈의 cmdlet을 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve">
          <source>Commands that use the remote cmdlets actually run in the remote session, but the remoting details are managed in the background by Windows PowerShell.</source>
          <target state="translated">원격 cmdlet을 사용하는 명령은 실제로 원격 세션에서 실행되지만 원격 기능 세부 정보는 Windows PowerShell에 의해 백그라운드에서 관리됩니다.</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve">
          <source>This parameter uses the Implicit Remoting feature of Windows PowerShell.</source>
          <target state="translated">이 매개 변수는 Windows PowerShell의 암시적 원격 기능을 사용합니다.</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve">
          <source>It is equivalent to using the Import-PSSession cmdlet to import particular modules from a session.</source>
          <target state="translated">Import-pssession cmdlet을 사용 하 여 세션에서 특정 모듈을 가져올 같습니다.</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Import-Module<ept id="p1">**</ept> cannot import Windows PowerShell Core modules from another session.</source>
          <target state="translated"><bpt id="p1">**</bpt>모듈 가져오기<ept id="p1">**</ept> 다른 세션에서 Windows PowerShell 핵심 모듈을 가져올 수 없습니다.</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve">
          <source>The Windows PowerShell Core modules have names that begin with Microsoft.PowerShell.</source>
          <target state="translated">Windows PowerShell 핵심 모듈의 이름은 Microsoft.PowerShell로 시작합니다.</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve">
          <source>This parameter was introduced in Windows PowerShell 3.0.</source>
          <target state="translated">이 매개 변수는 Windows PowerShell 3.0에서 도입 되었습니다.</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve">
          <source>-PassThru</source>
          <target state="translated">-PassThru</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve">
          <source>Returns an object representing the item with which you are working.</source>
          <target state="translated">작업 중인 항목을 나타내는 개체를 반환합니다.</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve">
          <source>By default, this cmdlet does not generate any output.</source>
          <target state="translated">기본적으로 이 cmdlet은 출력을 생성하지 않습니다.</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve">
          <source>-Prefix</source>
          <target state="translated">접두사</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve">
          <source>Specifies a prefix that this cmdlet adds to the nouns in the names of imported module members.</source>
          <target state="translated">이 cmdlet은 가져온된 모듈 멤버의 이름에 명사에 추가 하는 접두사를 지정 합니다.</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve">
          <source>Use this parameter to avoid name conflicts that might occur when different members in the session have the same name.</source>
          <target state="translated">세션에 있는 서로 다른 멤버의 이름이 동일한 경우 발생할 수 있는 이름 충돌을 방지하려면 이 매개 변수를 사용합니다.</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve">
          <source>This parameter does not change the module, and it does not affect files that the module imports for its own use.</source>
          <target state="translated">이 매개 변수 모듈을 바꾸지 않으며 자체 용도 대 한 파일을 사용 하는 모듈을 가져오는 영향을 주지 않습니다.</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve">
          <source>These are known as nested modules.</source>
          <target state="translated">이러한 중첩된 모듈 이라고 합니다.</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve">
          <source>This cmdlet affects only the names of members in the current session.</source>
          <target state="translated">이 cmdlet은 현재 세션에서 멤버의 이름에만 적용 됩니다.</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve">
          <source>For example, if you specify the prefix UTC and then import a Get-Date cmdlet, the cmdlet is known in the session as <bpt id="p1">**</bpt>Get-UTCDate<ept id="p1">**</ept>, and it is not confused with the original <bpt id="p2">**</bpt>Get-Date<ept id="p2">**</ept> cmdlet.</source>
          <target state="translated">예를 들어 UTC 접두사를 지정 하 고 다음 Get-date cmdlet을 가져올 경우 cmdlet에서에서 알 수 있는 세션으로 <bpt id="p1">**</bpt>Get-utcdate<ept id="p1">**</ept>, 원래과 혼동 되지 않습니다 및 <bpt id="p2">**</bpt>Get-date<ept id="p2">**</ept> cmdlet입니다.</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve">
          <source>The value of this parameter takes precedence over the <bpt id="p1">**</bpt>DefaultCommandPrefix<ept id="p1">**</ept> property of the module, which specifies the default prefix.</source>
          <target state="translated">이 매개 변수 값 우선는 <bpt id="p1">**</bpt>DefaultCommandPrefix<ept id="p1">**</ept> 기본 접두사를 지정 하는 모듈의 속성입니다.</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve">
          <source>-RequiredVersion</source>
          <target state="translated">-RequiredVersion</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve">
          <source>Specifies a version of the module that this cmdlet imports.</source>
          <target state="translated">이 cmdlet을 가져오는 모듈의 버전을 지정 합니다.</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve">
          <source>If the version is not installed, <bpt id="p1">**</bpt>Import-Module<ept id="p1">**</ept> generates an error.</source>
          <target state="translated">버전이 설치 되어 있지 않으면 <bpt id="p1">**</bpt>Import-module<ept id="p1">**</ept> 오류가 발생 합니다.</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve">
          <source>By default, <bpt id="p1">**</bpt>Import-Module<ept id="p1">**</ept> imports the module without checking the version number.</source>
          <target state="translated">기본적으로 <bpt id="p1">**</bpt>Import-module<ept id="p1">**</ept> 버전 번호를 확인 하지 않고 모듈을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve">
          <source>To specify a minimum version, use the <bpt id="p1">*</bpt>MinimumVersion<ept id="p1">*</ept> parameter.</source>
          <target state="translated">최소 버전을 지정 하려면 사용 된 <bpt id="p1">*</bpt>MinimumVersion<ept id="p1">*</ept> 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve">
          <source>You can also use the <bpt id="p1">*</bpt>Module<ept id="p1">*</ept> and <bpt id="p2">*</bpt>Version<ept id="p2">*</ept> parameters of the <bpt id="p3">**</bpt>#Requires<ept id="p3">**</ept> keyword to require a specific version of a module in a script.</source>
          <target state="translated">사용할 수도 있습니다는 <bpt id="p1">*</bpt>모듈<ept id="p1">*</ept> 및 <bpt id="p2">*</bpt>버전<ept id="p2">*</ept> 의 매개 변수는 <bpt id="p3">**</bpt>#Requires<ept id="p3">**</ept> 키워드는 스크립트에서 모듈의 최신 버전입니다.</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve">
          <source>This parameter was introduced in Windows PowerShell 3.0.</source>
          <target state="translated">이 매개 변수는 Windows PowerShell 3.0에서 도입 되었습니다.</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve">
          <source>Scripts that use <bpt id="p1">*</bpt>RequiredVersion<ept id="p1">*</ept> to import modules that are included with existing releases of the Windows operating system do not automatically run in future releases of the Windows operating system.</source>
          <target state="translated">스크립트는 <bpt id="p1">*</bpt>RequiredVersion<ept id="p1">*</ept> 기존 버전의 Windows에 포함 된 모듈을 가져올 운영 체제 않으면 자동으로 실행 되지 이후 버전의 Windows 운영 체제입니다.</target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve">
          <source>This is because Windows PowerShell module version numbers in future releases of the Windows operating system are higher than module version numbers in existing releases of the Windows operating system.</source>
          <target state="translated">향후 버전의 Windows 운영 체제에서 제공되는 Windows PowerShell 모듈 버전 번호가 기존 버전의 Windows 운영 체제에서 제공되는 모듈 버전 번호보다 높기 때문입니다.</target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve">
          <source>-Scope</source>
          <target state="translated">범위</target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve">
          <source>Specifies a scope into which this cmdlet imports the module.</source>
          <target state="translated">이 cmdlet에는 모듈을 가져오는 범위를 지정 합니다.</target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve">
          <source>The acceptable values for this parameter are:</source>
          <target state="translated">이 매개 변수에 허용되는 값은 다음과 같습니다.</target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Global<ept id="p1">**</ept>.</source>
          <target state="translated"><bpt id="p1">**</bpt>전역<ept id="p1">**</ept>합니다.</target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve">
          <source>Available to all commands in the session.</source>
          <target state="translated">세션의 모든 명령에서 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve">
          <source>Equivalent to the <bpt id="p1">*</bpt>Global<ept id="p1">*</ept> parameter.</source>
          <target state="translated">에 해당 하는 <bpt id="p1">*</bpt>Global<ept id="p1">*</ept> 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Local<ept id="p1">**</ept>.</source>
          <target state="translated"><bpt id="p1">**</bpt>로컬<ept id="p1">**</ept>합니다.</target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve">
          <source>Available only in the current scope.</source>
          <target state="translated">현재 범위에서만 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve">
          <source>By default, the module is imported into the current scope, which could be a script or module.</source>
          <target state="translated">기본적으로, 스크립트나 모듈과 같은 현재 범위로 모듈을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve">
          <source>This parameter was introduced in Windows PowerShell 3.0.</source>
          <target state="translated">이 매개 변수는 Windows PowerShell 3.0에서 도입 되었습니다.</target>       </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve">
          <source>-Variable</source>
          <target state="translated">변수</target>       </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve">
          <source>Specifies an array of variables that this cmdlet imports from the module into the current session.</source>
          <target state="translated">이 cmdlet이 모듈은 현재 세션으로 가져오는 변수 배열을 지정 합니다.</target>       </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve">
          <source>Enter a list of variables.</source>
          <target state="translated">변수의 목록을 입력하세요.</target>       </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve">
          <source>Wildcard characters are permitted.</source>
          <target state="translated">와일드카드 문자를 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve">
          <source>Some modules automatically export selected variables into your session when you import the module.</source>
          <target state="translated">모듈을 가져올 때 선택된 변수를 해당 세션으로 자동으로 내보내는 모듈도 있습니다.</target>       </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve">
          <source>This parameter lets you select from among the exported variables.</source>
          <target state="translated">이 매개 변수를 사용하면 내보내는 변수 중에서 선택할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve">
          <source>CommonParameters</source>
          <target state="translated">CommonParameters</target>       </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve">
          <source>This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutVariable, -OutBuffer, -PipelineVariable, -Verbose, -WarningAction, and -WarningVariable.</source>
          <target state="translated">이 cmdlet은 공통 매개 변수:-디버그,-ErrorAction,-ErrorVariable,-InformationAction,-InformationVariable,-OutVariable,-OutBuffer,-PipelineVariable,-Verbose,-WarningAction 및-warningvariable을 지원 합니다.</target>       </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve">
          <source>For more information, see about_CommonParameters (http://go.microsoft.com/fwlink/?LinkID=113216).</source>
          <target state="translated">자세한 내용은 about_CommonParameters (http://go.microsoft.com/fwlink/?LinkID=113216)를 참조 합니다.</target>       </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve">
          <source>INPUTS</source>
          <target state="translated">입력</target>       </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve">
          <source>System.String, System.Management.Automation.PSModuleInfo, System.Reflection.Assembly</source>
          <target state="translated">System.String, System.Management.Automation.PSModuleInfo, System.Reflection.Assembly</target>       </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve">
          <source>You can pipe a module name, module object, or assembly object to this cmldet.</source>
          <target state="translated">모듈 이름, 모듈 개체 또는이 cmldet 어셈블리 개체를 파이프할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve">
          <source>OUTPUTS</source>
          <target state="translated">출력</target>       </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve">
          <source>None, System.Management.Automation.PSModuleInfo, or System.Management.Automation.PSCustomObject</source>
          <target state="translated">없음, System.Management.Automation.PSModuleInfo, 또는 System.Management.Automation.PSCustomObject</target>       </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve">
          <source>This cmdlet returns a <bpt id="p1">**</bpt>PSModuleInfo<ept id="p1">**</ept> or <bpt id="p2">**</bpt>PSCustomObject<ept id="p2">**</ept>.</source>
          <target state="translated">이 cmdlet은 반환 된 <bpt id="p1">**</bpt>PSModuleInfo<ept id="p1">**</ept> 또는 <bpt id="p2">**</bpt>PSCustomObject<ept id="p2">**</ept>합니다.</target>       </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve">
          <source>By default, <bpt id="p1">**</bpt>Import-Module<ept id="p1">**</ept> does not generate any output.</source>
          <target state="translated">기본적으로 <bpt id="p1">**</bpt>Import-module<ept id="p1">**</ept> 어떠한 출력도 생성 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve">
          <source>If you specify the <bpt id="p1">*</bpt>PassThru<ept id="p1">*</ept> parameter, the cmldet generates a <bpt id="p2">**</bpt>System.Management.Automation.PSModuleInfo<ept id="p2">**</ept> object that represents the module.</source>
          <target state="translated">지정 하는 경우는 <bpt id="p1">*</bpt>PassThru<ept id="p1">*</ept> cmldet 생성 매개 변수는 <bpt id="p2">**</bpt>System.Management.Automation.PSModuleInfo<ept id="p2">**</ept> 모듈을 나타내는 개체입니다.</target>       </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve">
          <source>If you specify the <bpt id="p1">*</bpt>AsCustomObject<ept id="p1">*</ept> parameter, it generates a <bpt id="p2">**</bpt>PSCustomObject<ept id="p2">**</ept> object.</source>
          <target state="translated">지정 하는 경우는 <bpt id="p1">*</bpt>AsCustomObject<ept id="p1">*</ept> 생성 매개 변수는 <bpt id="p2">**</bpt>PSCustomObject<ept id="p2">**</ept> 개체입니다.</target>       </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve">
          <source>NOTES</source>
          <target state="translated">참고 사항</target>       </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve">
          <source>Before you can import a module, the module must be installed on the local computer.</source>
          <target state="translated">모듈을 가져오기 전에 모듈을 로컬 컴퓨터에 설치 되어야 합니다.</target>       </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve">
          <source>That is, the module directory must be copied to a directory that is accessible to your local computer.</source>
          <target state="translated">즉, 로컬 컴퓨터에 액세스할 수 있는 디렉터리로 모듈 디렉터리를 복사 해야 합니다.</target>       </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve">
          <source>For more information, see about_Modules (http://go.microsoft.com/fwlink/?LinkID=144311).</source>
          <target state="translated">자세한 내용은 about_Modules (http://go.microsoft.com/fwlink/?LinkID=144311)를 참조 하십시오.</target>       </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve">
          <source>You can also use the <bpt id="p1">*</bpt>PSSession<ept id="p1">*</ept> and <bpt id="p2">*</bpt>CIMSession<ept id="p2">*</ept> parameters to import modules that are installed on remote computers.</source>
          <target state="translated">사용할 수도 있습니다는 <bpt id="p1">*</bpt>PSSession<ept id="p1">*</ept> 및 <bpt id="p2">*</bpt>CIMSession<ept id="p2">*</ept> 원격 컴퓨터에 설치 된 모듈을 가져오려면 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve">
          <source>However, commands that use the cmdlets in these modules actually run in the remote session on the remote computer.</source>
          <target state="translated">하지만 이러한 모듈의 cmdlet을 사용하는 명령은 실제로 원격 컴퓨터의 원격 세션에서 실행됩니다.</target>       </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve">
          <source>If you import members with the same name and the same type into your session, Windows PowerShell uses the member imported last by default.</source>
          <target state="translated">이름과 형식이 같은 멤버를 해당 세션으로 가져오는 경우 Windows PowerShell은 기본적으로 마지막으로 가져온 멤버를 사용합니다.</target>       </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve">
          <source>Variables and aliases are replaced, and the originals are not accessible.</source>
          <target state="translated">변수와 별칭은 대체되고 원래 변수와 별칭에는 액세스할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve">
          <source>Functions, cmdlets and providers are merely shadowed by the new members.</source>
          <target state="translated">함수, cmdlet 및 공급자는 새 멤버에 의해 숨겨지지 단순히 합니다.</target>       </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve">
          <source>They can be accessed by qualifying the command name with the name of its snap-in, module, or function path.</source>
          <target state="translated">해당 스냅인, 모듈 또는 함수 경로의 이름으로 명령 이름을 정규화 하 여 액세스할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve">
          <source>To update the formatting data for commands that have been imported from a module, use the Update-FormatData cmdlet.</source>
          <target state="translated">모듈에서 가져온 명령에 대 한 형식 지정 데이터를 업데이트 하려면 Update-formatdata cmdlet을 사용 합니다.</target>       </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Update-FormatData<ept id="p1">**</ept> also updates the formatting data for commands in the session that were imported from modules.</source>
          <target state="translated"><bpt id="p1">**</bpt>Update-formatdata<ept id="p1">**</ept> 도 모듈에서 가져온 세션에서 명령에 대 한 형식 지정 데이터를 업데이트 합니다.</target>       </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve">
          <source>If the formatting file for a module changes, you can run an <bpt id="p1">**</bpt>Update-FormatData<ept id="p1">**</ept> command to update the formatting data for imported commands.</source>
          <target state="translated">실행할 수는 모듈에 대 한 형식 지정 파일이 변경 되 면는 <bpt id="p1">**</bpt>Update-formatdata<ept id="p1">**</ept> 명령을 가져온에 대 한 형식 지정 데이터를 업데이트 하는 명령입니다.</target>       </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve">
          <source>You do not need to import the module again.</source>
          <target state="translated">모듈을 다시 가져올 필요는 없습니다.</target>       </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve">
          <source>Starting in Windows PowerShell 3.0, the core commands that are installed with Windows PowerShell are packaged in modules.</source>
          <target state="translated">Windows PowerShell 3.0 부터는 Windows PowerShell과 함께 설치 된 핵심 명령이 모듈에 패키지 됩니다.</target>       </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve">
          <source>In Windows PowerShell 2.0, and in host programs that create older-style sessions in later versions of Windows PowerShell, the core commands are packaged in snap-ins (<bpt id="p1">**</bpt>PSSnapins<ept id="p1">**</ept>).</source>
          <target state="translated">핵심 명령은 스냅인에 패키지 된 Windows PowerShell 2.0 및 이후 버전의 Windows PowerShell에서 이전 스타일의 세션을 만드는 호스트 프로그램 (<bpt id="p1">**</bpt>PSSnapins<ept id="p1">**</ept>).</target>       </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve">
          <source>The exception is <bpt id="p1">**</bpt>Microsoft.PowerShell.Core<ept id="p1">**</ept>, which is always a snap-in.</source>
          <target state="translated">예외는 <bpt id="p1">**</bpt>Microsoft.PowerShell.Core<ept id="p1">**</ept>, 는 항상의 스냅인입니다.</target>       </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve">
          <source>Also, remote sessions, such as those started by the New-PSSession cmdlet, are older-style sessions that include core snap-ins.</source>
          <target state="translated">또한 New-pssession cmdlet에 의해 시작 된 원격 세션은 핵심 스냅인을 포함 하는 이전 스타일의 세션입니다.</target>       </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve">
          <source>For information about the <bpt id="p1">**</bpt>CreateDefault2<ept id="p1">**</ept> method that creates newer-style sessions with core modules, see "CreateDefault2 Methodhttp://msdn.microsoft.com/en-us/library/windows/desktop/system.management.automation.runspaces.initialsessionstate.createdefault2(v=VS.85).aspx (http://msdn.microsoft.com/en-us/library/windows/desktop/system.management.automation.runspaces.initialsessionstate.createdefault2(v=VS.85).aspx) in the Microsoft Developer Network (MSDN) library.</source>
          <target state="translated">에 대 한 내용은 <bpt id="p1">**</bpt>CreateDefault2<ept id="p1">**</ept> 핵심 모듈을 사용 하 여 최신 스타일 세션을 만듭니다 메서드 참조 "CreateDefault2 Methodhttp://msdn.microsoft.com/en-us/library/windows/desktop/system.management.automation.runspaces.initialsessionstate.createdefault2 (v=VS.85).aspx (Microsoft Developer Network (MSDN) 라이브러리 http://msdn.microsoft.com/en-us/library/windows/desktop/system.management.automation.runspaces.initialsessionstate.createdefault2 (v=VS.85).aspx).</target>       </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Import-Module<ept id="p1">**</ept> cannot import Windows PowerShell Core modules from another session.</source>
          <target state="translated"><bpt id="p1">**</bpt>모듈 가져오기<ept id="p1">**</ept> 다른 세션에서 Windows PowerShell 핵심 모듈을 가져올 수 없습니다.</target>       </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve">
          <source>The Windows PowerShell Core modules have names that begin with Microsoft.PowerShell.</source>
          <target state="translated">Windows PowerShell 핵심 모듈의 이름은 Microsoft.PowerShell로 시작합니다.</target>       </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve">
          <source>In Windows PowerShell 2.0, some of the property values of the module object, such as the <bpt id="p1">**</bpt>ExportedCmdlets<ept id="p1">**</ept> and <bpt id="p2">**</bpt>NestedModules<ept id="p2">**</ept> property values, were not populated until the module was imported and were not available on the module object that the <bpt id="p3">*</bpt>PassThru<ept id="p3">*</ept> parameter returns.</source>
          <target state="translated">Windows PowerShell 2.0에서 모듈의 속성 값 중 일부와 같은 개체를 <bpt id="p1">**</bpt>ExportedCmdlets<ept id="p1">**</ept> 및 <bpt id="p2">**</bpt>NestedModules<ept id="p2">**</ept> 속성 값을 때까지 채워지지 하 여 모듈을 가져온 모듈 개체에 사용할 수 없었습니다 하는 <bpt id="p3">*</bpt>PassThru<ept id="p3">*</ept> 매개 변수를 반환 합니다.</target>       </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve">
          <source>In Windows PowerShell 3.0, all module property values are populated.</source>
          <target state="translated">Windows PowerShell 3.0에서 모든 모듈 속성 값은 채워집니다.</target>       </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve">
          <source>If you attempt to import a module that contains mixed-mode assemblies that are not compatible with Windows PowerShell 3.0, <bpt id="p1">**</bpt>Import-Module<ept id="p1">**</ept> returns an error message like the following one.</source>
          <target state="translated">Windows PowerShell 3.0와 호환 되지 않는 혼합 모드 어셈블리를 포함 하는 모듈을 가져오려고 <bpt id="p1">**</bpt>Import-module<ept id="p1">**</ept> 다음과 같은 오류 메시지를 반환 합니다.</target>       </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve">
          <source>This error occurs when a module that is designed for Windows PowerShell 2.0 contains at least one mixed-module assembly, that is, an assembly that includes both managed and non-managed code, such as C++ and C#.</source>
          <target state="translated">이 오류는 Windows PowerShell 2.0 용으로 만들어진 모듈에는 c + + 및 C#와 같은 관리 및 비관리 코드를 포함 하는 어셈블리, 즉 하나 이상의 혼합 모듈 어셈블리를 포함 하는 경우에 발생 합니다.</target>       </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve">
          <source>To import a module that contains mixed-mode assemblies, start Windows PowerShell 2.0 by using the following command, and then try the <bpt id="p1">**</bpt>Import-Module<ept id="p1">**</ept> command again.</source>
          <target state="translated">혼합 모드 어셈블리를 포함 하는 모듈을 가져오려면 다음 명령을 사용 하 여 Windows PowerShell 2.0을 시작 했다가 <bpt id="p1">**</bpt>Import-module<ept id="p1">**</ept> 명령을 다시 합니다.</target>       </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve">
          <source>To use the CIM session feature, the remote computer must have WS-Management remoting and Windows Management Instrumentation (WMI), which is the Microsoft implementation of the Common Information Model (CIM) standard.</source>
          <target state="translated">CIM 세션 기능을 사용하려면 원격 컴퓨터에 WS-Management 원격 기능과 CIM(Common Information Model) 표준에 대한 Microsoft 구현인 WMI(Windows Management Instrumentation)가 설정되어 있어야 합니다.</target>       </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve">
          <source>The computer must also have the Module Discovery WMI provider or an alternate CIM provider that has the same basic features.</source>
          <target state="translated">컴퓨터에도 모듈 검색 WMI 공급자 또는 동일한 기본 기능을 갖춘 대체 CIM 공급자가 있어야 합니다.</target>       </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve">
          <source>You can use the CIM session feature on computers that are not running a Windows operating system and on Windows computers that have Windows PowerShell, but do not have Windows PowerShell remoting enabled.</source>
          <target state="translated">CIM 세션 기능은 Windows 운영 체제를 실행하지 않는 컴퓨터 및 Windows PowerShell이 있지만 Windows PowerShell 원격 기능을 사용하도록 설정하지 않은 Windows 컴퓨터에서 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve">
          <source>You can also use the CIM parameters to get CIM modules from computers that have Windows PowerShell remoting enabled, including the local computer.</source>
          <target state="translated">또한 CIM 매개 변수를 사용하면 로컬 컴퓨터를 포함하여 Windows PowerShell 원격 기능을 사용하도록 설정한 컴퓨터에서 CIM 모듈을 검색할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="412" translate="yes" xml:space="preserve">
          <source>When you create a CIM session on the local computer, Windows PowerShell uses DCOM, instead of WMI, to create the session.</source>
          <target state="translated">로컬 컴퓨터에서 CIM 세션을 만드는 경우 Windows PowerShell은 WMI 대신 DCOM을 사용하여 세션을 만듭니다.</target>       </trans-unit>
        <trans-unit id="413" translate="yes" xml:space="preserve">
          <source>RELATED LINKS</source>
          <target state="translated">관련된 링크</target>       </trans-unit>
        <trans-unit id="414" translate="yes" xml:space="preserve">
          <source>Export-ModuleMember</source>
          <target state="translated">Export-ModuleMember</target>       </trans-unit>
        <trans-unit id="415" translate="yes" xml:space="preserve">
          <source>Get-Module</source>
          <target state="translated">Get-Module</target>       </trans-unit>
        <trans-unit id="416" translate="yes" xml:space="preserve">
          <source>New-Module</source>
          <target state="translated">New-Module</target>       </trans-unit>
        <trans-unit id="417" translate="yes" xml:space="preserve">
          <source>Remove-Module</source>
          <target state="translated">Remove-Module</target>       </trans-unit>
        <trans-unit id="418" translate="yes" xml:space="preserve">
          <source>Get-Verb</source>
          <target state="translated">Get-Verb</target>       </trans-unit>
        <trans-unit id="419" translate="yes" xml:space="preserve">
          <source>about_Modules</source>
          <target state="translated">about_Modules</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>