<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ko-kr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-1c394fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">759726bb6778b202252d7b585fd40f18df2514dc</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">reference\4.0\Microsoft.PowerShell.Utility\ConvertTo-Json.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions" />
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">38039ae7b88eb260f833dbc4af3357231ced59ef</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d46897838a1255f7a98df4842cba84c95075de6e</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>powershell, cmdlet</source>
          <target state="translated">powershell cmdlet</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>ConvertTo-Json</source>
          <target state="translated">ConvertTo-Json</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>ConvertTo-Json</source>
          <target state="translated">ConvertTo-Json</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>SYNOPSIS</source>
          <target state="translated">요약</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Converts an object to a JSON-formatted string</source>
          <target state="translated">개체를 JSON 형식의 문자열로 변환합니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>SYNTAX</source>
          <target state="translated">구문</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>DESCRIPTION</source>
          <target state="translated">설명</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>ConvertTo-Json<ept id="p1">**</ept> cmdlet converts any object to a string in JavaScript Object Notation (JSON) format.</source>
          <target state="translated"> <bpt id="p1">**</bpt>Convertto-json<ept id="p1">**</ept> cmdlet 모든 개체는 문자열 개체 JSON (JavaScript Notation) 형식으로 변환 합니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>The properties are converted to field names, the field values are converted to property values, and the methods are removed.</source>
          <target state="translated">속성은 필드 이름으로 변환되고, 필드 값은 속성 값으로 변환되고, 메서드는 제거됩니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>You can then use the ConvertFrom-Json cmdlet to convert a JSON-formatted string to a JSON object, which is easily managed in Windows PowerShell.</source>
          <target state="translated">그런 다음 Windows PowerShell에서 쉽게 관리 되는 JSON 개체를 JSON 형식 문자열을 변환 하려면 Convertfrom-json cmdlet을 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Many web sites use JSON instead of XML to serialize data for communication between servers and web-based apps.</source>
          <target state="translated">많은 웹 사이트에서는 XML이 아닌 JSON을 사용하여 서버와 웹 기반 앱 간의 통신 데이터를 직렬화합니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>This cmdlet is introduced in Windows PowerShell 3.0.</source>
          <target state="translated">이 cmdlet은 Windows PowerShell 3.0에서 도입되었습니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>EXAMPLES</source>
          <target state="translated">예제</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Example 1</source>
          <target state="translated">예제 1</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>This command uses the <bpt id="p1">**</bpt>ConvertTo-Json<ept id="p1">**</ept> cmdlet to convert a GregorianCalendar object to a JSON-formatted string.</source>
          <target state="translated">이 명령을 사용 하는 <bpt id="p1">**</bpt>Convertto-json<ept id="p1">**</ept> GregorianCalendar 개체를 JSON 형식 문자열로 변환 하는 cmdlet입니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Example 2</source>
          <target state="translated">예 2</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>This command shows the effect of using the Compress parameter of <bpt id="p1">**</bpt>ConvertTo-Json<ept id="p1">**</ept>.</source>
          <target state="translated">이 명령은의 Compress 매개 변수를 사용 하 여 결과 보여 줍니다. <bpt id="p1">**</bpt>Convertto-json<ept id="p1">**</ept>합니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>The compression affects only the appearance of the string, not its validity.</source>
          <target state="translated">비교는 문자열의 모양에만 영향을 줄 뿐 유효성에는 영향을 주지 않습니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Example 3</source>
          <target state="translated">예제 3</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>This command shows how to use the ConvertTo-Json and ConvertFrom-Json cmdlet to convert an object to a JSON string and a JSON object.</source>
          <target state="translated">이 명령은 ConvertTo-Json 및 ConvertFrom-Json cmdlet을 사용하여 개체를 JSON 문자열 및 JSON 개체로 변환하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Example 4</source>
          <target state="translated">예제 4</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>This command uses the <bpt id="p1">**</bpt>ConvertTo-Json<ept id="p1">**</ept> cmdlet to convert a Windows PowerShell help file from XML format to JSON format.</source>
          <target state="translated">이 명령을 사용 하는 <bpt id="p1">**</bpt>Convertto-json<ept id="p1">**</ept> Windows PowerShell 도움말 파일을 XML 형식에서 JSON 형식으로 변환 하는 cmdlet입니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>You can use a command like this to use the help topic content in a web service application.</source>
          <target state="translated">이와 같은 명령을 사용하여 웹 서비스 응용 프로그램에서 도움말 항목 내용을 쉽게 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>PARAMETERS</source>
          <target state="translated">매개 변수</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>-Compress</source>
          <target state="translated">-압축</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Omits white space and indented formatting in the output string.</source>
          <target state="translated">출력 문자열에서 공백과 들여쓰기 서식을 생략합니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>-Depth</source>
          <target state="translated">방어</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Specifies how many levels of contained objects are included in the JSON representation.</source>
          <target state="translated">JSON 표시에 포함되는 포함 개체의 수준을 지정합니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>The default value is 2.</source>
          <target state="translated">기본값은 2입니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>-InputObject</source>
          <target state="translated">-InputObject</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Specifies the objects to convert to JSON format.</source>
          <target state="translated">JSON 형식으로 변환할 개체를 지정합니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Enter a variable that contains the objects, or type a command or expression that gets the objects.</source>
          <target state="translated">개체를 포함하는 변수를 입력하거나 개체를 가져오는 명령 또는 식을 입력하세요.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>You can also pipe an object to <bpt id="p1">**</bpt>ConvertTo-Json<ept id="p1">**</ept>.</source>
          <target state="translated">개체를 파이프할 수도 있습니다 <bpt id="p1">**</bpt>Convertto-json<ept id="p1">**</ept>합니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>InputObject<ept id="p1">**</ept> parameter is required, but its value can be null ($null) or an empty string.</source>
          <target state="translated"> <bpt id="p1">**</bpt>InputObject<ept id="p1">**</ept> 매개 변수는 필수 이지만 해당 값 ($null) null 또는 빈 문자열이 될 수 있습니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>When the input object is $null, <bpt id="p1">**</bpt>ConvertTo-Json<ept id="p1">**</ept> does not generate any output.</source>
          <target state="translated">입력된 개체가 있으면 $null, <bpt id="p1">**</bpt>Convertto-json<ept id="p1">**</ept> 어떠한 출력도 생성 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>When the input object is an empty string, <bpt id="p1">**</bpt>ConvertTo-Json<ept id="p1">**</ept> returns an empty string.</source>
          <target state="translated">입력된 개체가 빈 문자열인 경우 <bpt id="p1">**</bpt>Convertto-json<ept id="p1">**</ept> 빈 문자열을 반환 합니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>CommonParameters</source>
          <target state="translated">CommonParameters</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutVariable, -OutBuffer, -PipelineVariable, -Verbose, -WarningAction, and -WarningVariable.</source>
          <target state="translated">이 cmdlet은 공통 매개 변수:-디버그,-ErrorAction,-ErrorVariable,-InformationAction,-InformationVariable,-OutVariable,-OutBuffer,-PipelineVariable,-Verbose,-WarningAction 및-warningvariable을 지원 합니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>For more information, see about_CommonParameters (http://go.microsoft.com/fwlink/?LinkID=113216).</source>
          <target state="translated">자세한 내용은 about_CommonParameters (http://go.microsoft.com/fwlink/?LinkID=113216)를 참조 합니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>INPUTS</source>
          <target state="translated">입력</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>System.Object</source>
          <target state="translated">System.Object</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>You can pipe any object to <bpt id="p1">**</bpt>ConvertTo-Json<ept id="p1">**</ept>.</source>
          <target state="translated">모든 개체를 파이프할 수 있습니다 <bpt id="p1">**</bpt>Convertto-json<ept id="p1">**</ept>합니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>OUTPUTS</source>
          <target state="translated">출력</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>System.String</source>
          <target state="translated">System.String</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>NOTES</source>
          <target state="translated">참고 사항</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>ConvertTo-Json<ept id="p1">**</ept> cmdlet is implemented by using the <bpt id="p2">**</bpt>JavaScriptSerializer<ept id="p2">**</ept> class (http://msdn.microsoft.com/library/system.web.script.serialization.javascriptserializer(VS.100).aspx).</source>
          <target state="translated"> <bpt id="p1">**</bpt>Convertto-json<ept id="p1">**</ept> cmdlet를 사용 하 여 구현 되는 <bpt id="p2">**</bpt>JavaScriptSerializer<ept id="p2">**</ept> 클래스 (http://msdn.microsoft.com/library/system.web.script.serialization.javascriptserializer (vs.100).aspx).</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>RELATED LINKS</source>
          <target state="translated">관련된 링크</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>An Introduction to JavaScript Object Notation (JSON) in JavaScript and .NET</source>
          <target state="translated">JavaScript 및.NET에서 JavaScript Object Notation (JSON)에 대 한 소개</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>ConvertFrom-Json</source>
          <target state="translated">ConvertFrom-Json</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Invoke-WebRequest</source>
          <target state="translated">Invoke-WebRequest</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Invoke-RestMethod</source>
          <target state="translated">Invoke-RestMethod</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>