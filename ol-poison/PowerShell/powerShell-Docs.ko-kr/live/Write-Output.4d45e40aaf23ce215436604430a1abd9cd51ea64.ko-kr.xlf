<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ko-kr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-1c394fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f91db2a57cd050668f9a204c0a81234070e203ee</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">reference\5.0\Microsoft.PowerShell.Utility\Write-Output.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions" />
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">0ff10254e803a1074f3e3e42d044e967ff5f09d8</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">62711af96463f1bd4c90b3a485076cb0a660e7e5</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>powershell, cmdlet</source>
          <target state="translated">powershell cmdlet</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Write-Output</source>
          <target state="translated">Write-Output</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Write-Output</source>
          <target state="translated">Write-Output</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>SYNOPSIS</source>
          <target state="translated">요약</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Sends the specified objects to the next command in the pipeline.</source>
          <target state="translated">지정된 개체를 파이프라인의 다음 명령으로 보냅니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>If the command is the last command in the pipeline, the objects are displayed in the console.</source>
          <target state="translated">명령이 파이프라인에서 마지막 명령인 경우 개체가 콘솔에 표시됩니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>SYNTAX</source>
          <target state="translated">구문</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>DESCRIPTION</source>
          <target state="translated">설명</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>Write-Output<ept id="p1">**</ept> cmdlet sends the specified object down the pipeline to the next command.</source>
          <target state="translated"> <bpt id="p1">**</bpt>Write-output<ept id="p1">**</ept> cmdlet는 다음 명령에 지정된 된 개체를 파이프라인으로 보냅니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>If the command is the last command in the pipeline, the object is displayed in the console.</source>
          <target state="translated">명령이 파이프라인에서 마지막 명령인 경우 개체가 콘솔에 표시됩니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Write-Output<ept id="p1">**</ept> sends objects down the primary pipeline, also known as the "output stream" or the "success pipeline."</source>
          <target state="translated"><bpt id="p1">**</bpt>쓰기 출력<ept id="p1">**</ept> "출력 스트림" 또는 "성공 파이프라인입니다." 라고도 하는 기본 파이프라인 개체 보냅니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>To send error objects down the error pipeline, use Write-Error.</source>
          <target state="translated">오류 개체를 오류 파이프라인으로 보내려면 Write-Error를 사용하세요.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>This cmdlet is typically used in scripts to display strings and other objects on the console.</source>
          <target state="translated">이 cmdlet은 대개 콘솔에 문자열 및 다른 개체를 표시하기 위해 스크립트에 사용됩니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>However, because the default behavior is to display the objects at the end of a pipeline, it is generally not necessary to use the cmdlet.</source>
          <target state="translated">하지만 파이프라인이 끝나면 개체를 표시하는 것이 기본 동작이므로 대개 이 cmdlet을 사용할 필요는 없습니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>For instance, <ph id="ph1">`Get-Process | Write-Output`</ph> is equivalent to <ph id="ph2">`Get-Process`</ph>.</source>
          <target state="translated">예를 들어, <ph id="ph1">`Get-Process | Write-Output`</ph> 같습니다 <ph id="ph2">`Get-Process`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>EXAMPLES</source>
          <target state="translated">예제</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Example 1: Get objects and write them to the console</source>
          <target state="translated">예제 1: 개체를 가져오고 콘솔에 쓰기</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>The first command gets processes running on the computer and stores them in the $P variable.</source>
          <target state="translated">첫 번째 명령은 컴퓨터에서 실행 중인 프로세스를 가져오고 $P 변수에 저장 합니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>The second and third commands display the process objects in $P on the console.</source>
          <target state="translated">두 번째 및 세 번째 명령은 콘솔에 $P에서 프로세스 개체를 표시 합니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Example 2: Pass output to another cmdlet</source>
          <target state="translated">예제 2: 출력을 다른 cmdlet에 전달</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>This command pipes the "test output" string to the Get-Member cmdlet, which displays the members of the <bpt id="p1">**</bpt>System.String<ept id="p1">**</ept> class, demonstrating that the string was passed along the pipeline.</source>
          <target state="translated">이 명령은 "출력을 테스트 합니다." 문자열의 멤버를 표시 하는 Get-member cmdlet에 파이프는 <bpt id="p1">**</bpt>System.String<ept id="p1">**</ept> 클래스, 파이프라인을 따라 전달 된는 문자열을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Example 3: Suppress enumeration in output</source>
          <target state="translated">예제 3: 열거형 출력에 표시 안 함</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>This command adds the <bpt id="p1">*</bpt>NoEnumerate<ept id="p1">*</ept> parameter to treat a collection or array as a single object through the pipeline.</source>
          <target state="translated">이 명령은 추가 <bpt id="p1">*</bpt>NoEnumerate<ept id="p1">*</ept> 컬렉션이 나 배열의 파이프라인을 통해 단일 개체로 처리 하는 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>PARAMETERS</source>
          <target state="translated">매개 변수</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>-InputObject</source>
          <target state="translated">-InputObject</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Specifies the objects to send down the pipeline.</source>
          <target state="translated">파이프라인으로 보낼 개체를 지정합니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Enter a variable that contains the objects, or type a command or expression that gets the objects.</source>
          <target state="translated">개체를 포함하는 변수를 입력하거나 개체를 가져오는 명령 또는 식을 입력하세요.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>-NoEnumerate</source>
          <target state="translated">-NoEnumerate</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>By default, the <bpt id="p1">**</bpt>Write-Output<ept id="p1">**</ept> cmdlet always enumerates its output.</source>
          <target state="translated">기본적으로는 <bpt id="p1">**</bpt>Write-output<ept id="p1">**</ept> cmdlet은 항상 해당 출력을 열거 합니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">*</bpt>NoEnumerate<ept id="p1">*</ept> parameter suppresses the default behavior, and prevents <bpt id="p2">**</bpt>Write-Output<ept id="p2">**</ept> from enumerating output.</source>
          <target state="translated"> <bpt id="p1">*</bpt>NoEnumerate<ept id="p1">*</ept> 매개 변수는 기본 동작을 억제 하 고 방지 <bpt id="p2">**</bpt>Write-output<ept id="p2">**</ept> 에서 출력을 열거 합니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">*</bpt>NoEnumerate<ept id="p1">*</ept> parameter has no effect on collections that were created by wrapping commands in parentheses, because the parentheses force enumeration.</source>
          <target state="translated"> <bpt id="p1">*</bpt>NoEnumerate<ept id="p1">*</ept> 매개 변수는 괄호는 열거를 강제 하므로, 명령을 괄호로 둘러싸 생성 하는 컬렉션에는 영향을 주지 않습니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>CommonParameters</source>
          <target state="translated">CommonParameters</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutVariable, -OutBuffer, -PipelineVariable, -Verbose, -WarningAction, and -WarningVariable.</source>
          <target state="translated">이 cmdlet은 공통 매개 변수:-디버그,-ErrorAction,-ErrorVariable,-InformationAction,-InformationVariable,-OutVariable,-OutBuffer,-PipelineVariable,-Verbose,-WarningAction 및-warningvariable을 지원 합니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>For more information, see about_CommonParameters (http://go.microsoft.com/fwlink/?LinkID=113216).</source>
          <target state="translated">자세한 내용은 about_CommonParameters (http://go.microsoft.com/fwlink/?LinkID=113216)를 참조 합니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>INPUTS</source>
          <target state="translated">입력</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>System.Management.Automation.PSObject</source>
          <target state="translated">System.Management.Automation.PSObject</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>You can pipe objects to <bpt id="p1">**</bpt>Write-Output<ept id="p1">**</ept>.</source>
          <target state="translated">개체를 파이프할 수 <bpt id="p1">**</bpt>Write-output<ept id="p1">**</ept>합니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>OUTPUTS</source>
          <target state="translated">출력</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>System.Management.Automation.PSObject</source>
          <target state="translated">System.Management.Automation.PSObject</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Write-Output<ept id="p1">**</ept> returns the objects that are submitted as input.</source>
          <target state="translated"><bpt id="p1">**</bpt>쓰기 출력<ept id="p1">**</ept> 입력으로 전송 되는 개체를 반환 합니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>NOTES</source>
          <target state="translated">참고 사항</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>RELATED LINKS</source>
          <target state="translated">관련된 링크</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Tee-Object</source>
          <target state="translated">Tee-object는 개체</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Write-Debug</source>
          <target state="translated">Write-Debug</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Write-Error</source>
          <target state="translated">Write-Error</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Write-EventLog</source>
          <target state="translated">Write-EventLog</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Write-Host</source>
          <target state="translated">Write-Host</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Write-Information</source>
          <target state="translated">정보 쓰기</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Write-Progress</source>
          <target state="translated">Write-Progress</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Write-Verbose</source>
          <target state="translated">Write-Verbose</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Write-Warning</source>
          <target state="translated">Write-Warning</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>