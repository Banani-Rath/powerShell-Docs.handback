<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ko-kr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-1c394fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">69f56cea389f098833d17c19f1aa4fbe77875224</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">reference\5.0\Microsoft.PowerShell.Utility\Update-TypeData.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions" />
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">163da7fbabd34cdbc9c3f9b9740ed0bb69e61bab</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">0603ad451e66f134c242885aad378e51119079d6</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>powershell, cmdlet</source>
          <target state="translated">powershell cmdlet</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Update-TypeData</source>
          <target state="translated">Update-TypeData</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Update-TypeData</source>
          <target state="translated">Update-TypeData</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>SYNOPSIS</source>
          <target state="translated">요약</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Updates the extended type data in the session.</source>
          <target state="translated">세션에 있는 확장 유형 데이터를 업데이트합니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>SYNTAX</source>
          <target state="translated">구문</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>FileSet (Default)</source>
          <target state="translated">FileSet (기본값)</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>DynamicTypeSet</source>
          <target state="translated">DynamicTypeSet</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>TypeDataSet</source>
          <target state="translated">TypeDataSet</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>DESCRIPTION</source>
          <target state="translated">설명</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>Update-TypeData<ept id="p1">**</ept> cmdlet updates the extended type data in the session by reloading the Types.ps1xml files into memory and adding new extended type data.</source>
          <target state="translated"> <bpt id="p1">**</bpt>Update-typedata<ept id="p1">**</ept> cmdlet Types.ps1xml 파일을 메모리에 다시 로드 하 여 세션에서 확장된 유형 데이터를 업데이트 하 고 확장 유형 데이터를 새로 추가 합니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>By default, Windows PowerShell loads extended type data as it is needed.</source>
          <target state="translated">기본적으로 Windows PowerShell은 필요에 따라 확장 유형 데이터를 로드합니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Without parameters, <bpt id="p1">**</bpt>Update-TypeData<ept id="p1">**</ept> reloads all of the Types.ps1xml files that it has loaded in the session, including any type files that you added.</source>
          <target state="translated">매개 변수 없이 <bpt id="p1">**</bpt>Update-typedata<ept id="p1">**</ept> 의 모든 사용자가 추가한 모든 유형 파일을 포함 하 여 세션에서 로드 하는 Types.ps1xml 파일을 다시 로드 합니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>You can use the parameters of <bpt id="p1">**</bpt>Update-TypeData<ept id="p1">**</ept> to add new type files and add and replace extended type data.</source>
          <target state="translated">매개 변수를 사용 하면 <bpt id="p1">**</bpt>Update-typedata<ept id="p1">**</ept> 새 유형 파일을 추가 하 고 추가 하 고 바꿀 확장된 유형 데이터입니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>Update-TypeData<ept id="p1">**</ept> cmdlet can be used to preload all type data.</source>
          <target state="translated"> <bpt id="p1">**</bpt>Update-typedata<ept id="p1">**</ept> 모든 유형 데이터를 미리 로드 하려면 cmdlet을 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>This feature is particularly useful when you are developing types and want to load those new types for testing purposes.</source>
          <target state="translated">이 기능은 유형을 개발하는 도중에 테스트를 위해 이러한 새 유형을 로드하려는 경우에 특히 유용합니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Beginning in Windows PowerShell 3.0, you can use <bpt id="p1">**</bpt>Update-TypeData<ept id="p1">**</ept> to add and replace extended type data in the session without using a Types.ps1xml file.</source>
          <target state="translated">Windows PowerShell 3.0부터 사용할 수 있습니다 <bpt id="p1">**</bpt>Update-typedata<ept id="p1">**</ept> 추가 하 고 Types.ps1xml 파일을 사용 하지 않고 세션에서 확장된 유형 데이터를 바꿉니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Type data that is added dynamically, that is, without a file, is added only to the current session.</source>
          <target state="translated">파일 없이 동적으로 추가된 유형 데이터는 현재 세션에만 추가됩니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>To add the type data to all sessions, add an <bpt id="p1">**</bpt>Update-TypeData<ept id="p1">**</ept> command to your Windows PowerShell profile.</source>
          <target state="translated">모든 세션에 유형 데이터를 추가 하려면 추가 <bpt id="p1">**</bpt>Update-typedata<ept id="p1">**</ept> 명령을 Windows PowerShell 프로필에 있습니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>For more information, see about_Profiles (http://go.microsoft.com/fwlink/?LinkID=113729).</source>
          <target state="translated">자세한 내용은 about_Profiles (http://go.microsoft.com/fwlink/?LinkID=113729)를 참조 하십시오.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Also, beginning in Windows PowerShell 3.0, you can use the Get-TypeData cmdlet to get the extended types in the current session and the Remove-TypeData cmdlet to delete extended types from the current session.</source>
          <target state="translated">또한 Windows PowerShell 3.0부터 사용할 수 있습니다 Get-typedata cmdlet을 현재 세션 및 Remove-typedata cmdlet은 현재 세션에서 확장된 유형을 삭제할 수 있는 확장된 유형을 가져오고.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Exceptions that occur in properties, or from adding properties to an <bpt id="p1">**</bpt>Update-TypeData<ept id="p1">**</ept> command, do not report errors to StdErr.</source>
          <target state="translated">속성에서 또는 속성을 추가할 발생 하는 예외는 <bpt id="p1">**</bpt>Update-typedata<ept id="p1">**</ept> 명령, StdErr에 오류를 보고 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>This is to suppress exceptions that would occur in many common types during formatting and outputting.</source>
          <target state="translated">이는 형식 지정 및 출력 중 많은 일반 유형에서 발생하는 예외를 표시하지 않기 위한 것입니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>If you are getting .NET Framework properties, you can work around the suppression of exceptions by using method syntax instead, as shown in the following example:</source>
          <target state="translated">.NET Framework 속성을 가져오는 경우 다음 예제와 같이 메서드 구문을 대신 사용하여 예외를 표시하지 않을 수 있습니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Note that method syntax can only be used with .NET Framework properties.</source>
          <target state="translated">메서드 구문은 .NET Framework 속성에만 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Properties that are added by running the <bpt id="p1">**</bpt>Update-TypeData<ept id="p1">**</ept> cmdlet cannot use method syntax.</source>
          <target state="translated">실행 하 여 추가 된 속성에는 <bpt id="p1">**</bpt>Update-typedata<ept id="p1">**</ept> cmdlet 메서드 구문을 사용할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>For more information about the *types.ps1xml files in Windows PowerShell, see about_Types.ps1xml (http://technet.microsoft.com/library/hh847881.aspx).</source>
          <target state="translated">Windows PowerShell의 * types.ps1xml 파일에 대 한 자세한 내용은 about_Types.ps1xml (http://technet.microsoft.com/library/hh847881.aspx)을 참조 하세요.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>EXAMPLES</source>
          <target state="translated">예제</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Example 1: Update extended types</source>
          <target state="translated">예제 1: 확장 된 형식 업데이트</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>This command updates the extended type configuration from the *.types.ps1xml files that have already been used in the session.</source>
          <target state="translated">이 명령은 이미 세션에서 사용된 *.types.ps1xml 파일의 확장 유형 구성을 업데이트합니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Example 2: Update types multiple times</source>
          <target state="translated">예제 2: 여러 번 형식 업데이트</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>This example shows how to update the types in a type file multiple times in the same session.</source>
          <target state="translated">이 예제에서는 동일한 세션에서 여러 번 형식 파일의 형식을 업데이트 하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Example 3: Add a script property to DateTime objects</source>
          <target state="translated">DateTime 개체에 있는 스크립트 속성을 추가 하는 예제 3:</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>This example uses <bpt id="p1">**</bpt>Update-TypeData<ept id="p1">**</ept> to add the Quarter script property to <bpt id="p2">**</bpt>System.DateTime<ept id="p2">**</ept> objects in the current session, such as those returned by the Get-Date cmdlet.</source>
          <target state="translated">이 예에서는 <bpt id="p1">**</bpt>Update-typedata<ept id="p1">**</ept> 분기 스크립트 속성을 추가할 <bpt id="p2">**</bpt>System.DateTime<ept id="p2">**</ept> Get-date cmdlet에서 반환 된 것과 같은 현재 세션에 있는 개체입니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>Update-TypeData<ept id="p1">**</ept> command uses the <bpt id="p2">*</bpt>TypeName<ept id="p2">*</ept> parameter to specify <bpt id="p3">**</bpt>the System.DateTime<ept id="p3">**</ept> type, the <bpt id="p4">*</bpt>MemberName<ept id="p4">*</ept> parameter to specify a name for the new property, the MemberType property to specify the ScriptProperty type, and the <bpt id="p5">*</bpt>Value<ept id="p5">*</ept> parameter to specify the script that determines the annual quarter.</source>
          <target state="translated"> <bpt id="p1">**</bpt>Update-typedata<ept id="p1">**</ept> 명령을 사용 하 여는 <bpt id="p2">*</bpt>TypeName<ept id="p2">*</ept> 매개 변수를 지정 <bpt id="p3">**</bpt>는 System.DateTime<ept id="p3">**</ept> 형식에는 <bpt id="p4">*</bpt>MemberName<ept id="p4">*</ept> 새 속성을 ScriptProperty 유형을 지정 하려면 MemberType 속성에 대 한 이름을 지정 하려면 매개 변수 및 <bpt id="p5">*</bpt>값<ept id="p5">*</ept> 연간 분기를 결정 하는 스크립트를 지정 하는 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>The value of the Value property is a script that calculates the current annual quarter.</source>
          <target state="translated">Value 속성의 값은 현재 연간 분기를 계산 하는 스크립트.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>The script block uses the $this automatic variable to represent the current instance of the object and the In operator to determine whether the month value appears in each integer array.</source>
          <target state="translated">스크립트 블록을 사용 하 여 $this 자동 변수는 개체와 각 정수 배열에 월 값을 표시할지 여부를 결정 하는 In 연산자의 현재 인스턴스를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>For more information about the In operator, see about_Comparison_Operators (http://go.microsoft.com/fwlink/?LinkID=113217).</source>
          <target state="translated">In 연산자에 대 한 자세한 내용은 about_Comparison_Operators (http://go.microsoft.com/fwlink/?LinkID=113217)를 참조 하십시오.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>The second command gets the new Quarter property of the current date.</source>
          <target state="translated">두 번째 명령은 현재 날짜의 새 Quarter 속성을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Example 4: Update a type that displays in lists by default</source>
          <target state="translated">예 4: 기본적으로 목록에 표시 되는 형식 업데이트</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>This example shows how to set the properties of a type that displays in lists by default, that is, when no properties are specified.</source>
          <target state="translated">이 예제에 표시 하는 목록에 기본적으로, 즉, 속성이 지정 되지 않은 경우 형식의 속성을 설정 하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Because the type data is not specified in a Types.ps1xml file, it is effective only in the current session.</source>
          <target state="translated">Types.ps1xml 파일에서 유형이 지정되지 않았으므로 현재 세션에서만 적용됩니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>The first command uses the <bpt id="p1">**</bpt>Update-TypeData<ept id="p1">**</ept> cmdlet to set the default list properties for the <bpt id="p2">**</bpt>System.DateTime<ept id="p2">**</ept> type.</source>
          <target state="translated">첫 번째 명령은 <bpt id="p1">**</bpt>Update-typedata<ept id="p1">**</ept> cmdlet는 기본 목록 속성을 설정 하는 <bpt id="p2">**</bpt>System.DateTime<ept id="p2">**</ept> 유형입니다.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>The command uses the <bpt id="p1">*</bpt>TypeName<ept id="p1">*</ept> parameter to specify the type and the <bpt id="p2">*</bpt>DefaultDisplayPropertySet<ept id="p2">*</ept> parameter to specify the default properties for a list.</source>
          <target state="translated">명령을 사용 하 여는 <bpt id="p1">*</bpt>TypeName<ept id="p1">*</ept> 매개 변수 형식을 지정 하 고 <bpt id="p2">*</bpt>DefaultDisplayPropertySet<ept id="p2">*</ept> 매개 변수를 목록에 대 한 기본 속성을 지정 합니다.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>The selected properties include the new Quarter script property that was added in a previous example.</source>
          <target state="translated">선택한 속성에는 앞의 예제에서 추가한 새 Quarter 스크립트 속성이 포함됩니다.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>The second command uses the Get-Date cmdlet to get a <bpt id="p1">**</bpt>System.DateTime<ept id="p1">**</ept> object that represents the current date.</source>
          <target state="translated">두 번째 명령은 Get-date cmdlet를 사용 하 여 가져오려는 <bpt id="p1">**</bpt>System.DateTime<ept id="p1">**</ept> 현재 날짜를 나타내는 개체입니다.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>The command uses a pipeline operator (|) to send the <bpt id="p1">**</bpt>DateTime<ept id="p1">**</ept> object to the Format-List cmdlet.</source>
          <target state="translated">이 명령은 파이프라인 연산자 (|)를 사용 하 여는 <bpt id="p1">**</bpt>DateTime<ept id="p1">**</ept> 개체를 Format-list cmdlet입니다.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Because the <bpt id="p1">**</bpt>Format-List<ept id="p1">**</ept> command does not specify the properties to display in the list, Windows PowerShell uses the default values that were established by the <bpt id="p2">**</bpt>Update-TypeData<ept id="p2">**</ept> command.</source>
          <target state="translated">때문에 <bpt id="p1">**</bpt>Format-list<ept id="p1">**</ept> 목록에 표시할 속성을 지정 하지 않으므로, Windows PowerShell 사용 하 여 설정 된 기본값의 <bpt id="p2">**</bpt>Update-typedata<ept id="p2">**</ept> 명령.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Example 5: Update type data for a piped object</source>
          <target state="translated">예제 5: 파이프 된 개체에 대 한 유형 데이터 업데이트</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>This example demonstrates that when you pipe an object to <bpt id="p1">**</bpt>Update-TypeData<ept id="p1">**</ept>, <bpt id="p2">**</bpt>Update-TypeData<ept id="p2">**</ept> adds extended type data for the object type.</source>
          <target state="translated">이 예제에서는 개체를 파이프 하면 <bpt id="p1">**</bpt>Update-typedata<ept id="p1">**</ept>, <bpt id="p2">**</bpt>Update-typedata<ept id="p2">**</ept> 개체 유형에 대 한 확장된 유형 데이터를 추가 합니다.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>This technique is quicker than using the Get-Member cmdlet or the <bpt id="p1">**</bpt>Get-Type<ept id="p1">**</ept> method to get the object type.</source>
          <target state="translated">이 방법은 Get-member cmdlet을 사용 하 여 보다 빠르게 또는 <bpt id="p1">**</bpt>Get-type<ept id="p1">**</ept> 메서드를 개체 유형을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>However, if you pipe a collection of objects to <bpt id="p1">**</bpt>Update-TypeData<ept id="p1">**</ept>, it updates the type data of the first object type and then returns an error for all other objects in the collection because the member is already defined on the type.</source>
          <target state="translated">그러나 개체의 컬렉션을 파이프 하면 <bpt id="p1">**</bpt>Update-typedata<ept id="p1">**</ept>, 첫 번째 개체 유형의 유형 데이터를 업데이트 하 고 다음 멤버가 유형에 이미 정의 되어 있으므로 컬렉션의 다른 모든 개체에 대 한 오류를 반환 합니다.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>The first command uses the Get-Module cmdlet to get the PSScheduledJob module.</source>
          <target state="translated">첫 번째 명령은 Get-module cmdlet를 사용 하 여 PSScheduledJob 모듈을 가져와야 합니다.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>The command pipes the module object to the <bpt id="p1">**</bpt>Update-TypeData<ept id="p1">**</ept> cmdlet, which updates the type data for the <bpt id="p2">**</bpt>System.Management.Automation.PSModuleInfo<ept id="p2">**</ept> type and the types derived from it, such as the ModuleInfoGrouping type that <bpt id="p3">**</bpt>Get-Module<ept id="p3">**</ept> returns when you use the <bpt id="p4">*</bpt>ListAvailable<ept id="p4">*</ept> parameter in the command.</source>
          <target state="translated">명령은 모듈 개체를 파이프는 <bpt id="p1">**</bpt>Update-typedata<ept id="p1">**</ept> cmdlet에 대 한 유형 데이터를 업데이트 하는 <bpt id="p2">**</bpt>System.Management.Automation.PSModuleInfo<ept id="p2">**</ept> 하는 ModuleInfoGrouping 형식을 같은 형식 및 형식에서 파생 <bpt id="p3">**</bpt>Get-module<ept id="p3">**</ept> 사용 하는 경우 반환는 <bpt id="p4">*</bpt>ListAvailable<ept id="p4">*</ept> 명령에 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>Update-TypeData<ept id="p1">**</ept> commands adds the <bpt id="p2">**</bpt>SupportsUpdatableHelp<ept id="p2">**</ept> script property to all imported modules.</source>
          <target state="translated"> <bpt id="p1">**</bpt>Update-typedata<ept id="p1">**</ept> 명령을 추가 하는 <bpt id="p2">**</bpt>SupportsUpdatableHelp<ept id="p2">**</ept> 스크립트 속성을 가져온된 모든 모듈입니다.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>The value of the <bpt id="p1">*</bpt>Value<ept id="p1">*</ept> parameter is a script that returns $True if the HelpInfoUri property of the module is populated and $False otherwise.</source>
          <target state="translated">값은 <bpt id="p1">*</bpt>값<ept id="p1">*</ept> 매개 변수는 모듈의 HelpInfoUri 속성 값이 입력 $True 및 $False 그렇지 않으면 반환 하는 스크립트입니다.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>The second command pipes the module objects from <bpt id="p1">**</bpt>Get-Module<ept id="p1">**</ept> to the <bpt id="p2">**</bpt>Format-Table<ept id="p2">**</ept> cmdlet, which displays the Name and SupportsUpdatableHelp properties of all modules in a list.</source>
          <target state="translated">두 번째 명령은 모듈 개체를 파이프 <bpt id="p1">**</bpt>Get-module<ept id="p1">**</ept> 에 <bpt id="p2">**</bpt>Format-table<ept id="p2">**</ept> 목록에서 모든 모듈의 이름 및 SupportsUpdatableHelp 속성을 표시 하는 cmdlet입니다.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>PARAMETERS</source>
          <target state="translated">매개 변수</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>-AppendPath</source>
          <target state="translated">-AppendPath</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>Specifies the path to optional .ps1xml files.</source>
          <target state="translated">선택적 .ps1xml 파일의 경로를 지정합니다.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>The specified files are loaded in the order that they are listed after the built-in files are loaded.</source>
          <target state="translated">지정한 파일은 기본 제공 파일이 로드된 후 나열된 순서대로 로드됩니다.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>You can also pipe an <bpt id="p1">**</bpt>AppendPath<ept id="p1">**</ept> value to <bpt id="p2">**</bpt>Update-TypeData<ept id="p2">**</ept>.</source>
          <target state="translated">또한 사용자는 <bpt id="p1">**</bpt>AppendPath<ept id="p1">**</ept> 값을 <bpt id="p2">**</bpt>Update-typedata<ept id="p2">**</ept>합니다.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>-Confirm</source>
          <target state="translated">-Confirm</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>Prompts you for confirmation before running the cmdlet.Prompts you for confirmation before running the cmdlet.</source>
          <target state="translated">이 cmdlet을 실행 하기 전에 확인 하면 메시지를 표시 합니다. 이 cmdlet을 실행 하기 전에 확인 하면 메시지를 표시 합니다.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>-DefaultDisplayProperty</source>
          <target state="translated">-DefaultDisplayProperty</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>Specifies the property of the type that is displayed by the Format-Wide cmdlet when no other properties are specified.</source>
          <target state="translated">다른 속성이 지정 되지 않은 경우 Format-wide cmdlet에 의해 표시 되는 형식의 속성을 지정 합니다.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>Type the name of a standard or extended property of the type.</source>
          <target state="translated">유형의 표준 또는 확장 속성 이름을 입력합니다.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>The value of this parameter can be the name of a type that is added in the same command.</source>
          <target state="translated">이 매개 변수 값은 동일한 명령에서 추가된 유형의 이름일 수 있습니다.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>This value is effective only when there are no wide views defined for the type in a Format.ps1xml file.</source>
          <target state="translated">이 값은 Format.ps1xml 파일에서 유형에 대해 정의된 와이드 뷰가 없는 경우에만 적용됩니다.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>This parameter was introduced in Windows PowerShell 3.0.</source>
          <target state="translated">이 매개 변수는 Windows PowerShell 3.0에서 도입 되었습니다.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>-DefaultDisplayPropertySet</source>
          <target state="translated">-DefaultDisplayPropertySet</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>Specifies one or more properties of the type.</source>
          <target state="translated">유형의 속성을 하나 이상 지정합니다.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>These properties are displayed by the Format-List cmdlet when no other properties are specified.</source>
          <target state="translated">이러한 속성은 다른 속성이 지정 되지 않은 경우 Format-list cmdlet으로 표시 됩니다.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>Type the names of standard or extended properties of the type.</source>
          <target state="translated">유형의 표준 또는 확장 속성 이름을 입력합니다.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>The value of this parameter can be the names of types that are added in the same command.</source>
          <target state="translated">이 매개 변수 값은 동일한 명령에서 추가된 유형의 이름일 수 있습니다.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>This value is effective only when there are no list views defined for the type in a Format.ps1xml file.</source>
          <target state="translated">이 값은 Format.ps1xml 파일에서 유형에 대해 정의된 목록 뷰가 없는 경우에만 적용됩니다.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>This parameter was introduced in Windows PowerShell 3.0.</source>
          <target state="translated">이 매개 변수는 Windows PowerShell 3.0에서 도입 되었습니다.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>-DefaultKeyPropertySet</source>
          <target state="translated">-DefaultKeyPropertySet</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>Specifies one or more properties of the type.</source>
          <target state="translated">유형의 속성을 하나 이상 지정합니다.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>These properties are used by the Group-Object and Sort-Object cmdlets when no other properties are specified.</source>
          <target state="translated">이러한 속성은 다른 속성이 지정 되지 않은 경우 그룹 개체 및 Sort-object cmdlet에서 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>Type the names of standard or extended properties of the type.</source>
          <target state="translated">유형의 표준 또는 확장 속성 이름을 입력합니다.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>The value of this parameter can be the names of types that are added in the same command.</source>
          <target state="translated">이 매개 변수 값은 동일한 명령에서 추가된 유형의 이름일 수 있습니다.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>This parameter was introduced in Windows PowerShell 3.0.</source>
          <target state="translated">이 매개 변수는 Windows PowerShell 3.0에서 도입 되었습니다.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>-Force</source>
          <target state="translated">-Force</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>Indicates that the cmdlet uses the specified type data, even if type data has already been specified for that type.</source>
          <target state="translated">유형 데이터를 해당 형식에 대해 이미 지정 하는 경우에 cmdlet은 지정한 유형 데이터를 사용 하 여 있는지를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>This parameter was introduced in Windows PowerShell 3.0.</source>
          <target state="translated">이 매개 변수는 Windows PowerShell 3.0에서 도입 되었습니다.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>-InheritPropertySerializationSet</source>
          <target state="translated">-InheritPropertySerializationSet</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>Indicates whether the set of properties that are serialized is inherited.</source>
          <target state="translated">Serialize 되는 속성 집합이 상속 되는지 여부를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>The default value is $Null.</source>
          <target state="translated">기본값은 $Null 합니다.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>The acceptable values for this parameter are:</source>
          <target state="translated">이 매개 변수에 허용되는 값은 다음과 같습니다.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>$True.</source>
          <target state="translated">$True 합니다.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>The property set is inherited.</source>
          <target state="translated">속성 집합이 상속됩니다.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>$False.</source>
          <target state="translated">$False 합니다.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>The property set is not inherited.</source>
          <target state="translated">속성 집합이 상속되지 않습니다.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>$Null.</source>
          <target state="translated">$Null 합니다.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>Inheritance is not defined.</source>
          <target state="translated">상속이 정의되지 않습니다.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>This parameter is valid only when the value of the <bpt id="p1">*</bpt>SerializationMethod<ept id="p1">*</ept> parameter is SpecificProperties.</source>
          <target state="translated">이 매개 변수는 경우에만 유효 값은 <bpt id="p1">*</bpt>SerializationMethod<ept id="p1">*</ept> 매개 변수는 SpecificProperties 합니다.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>When the value of this parameter is $False, the <bpt id="p1">*</bpt>PropertySerializationSet<ept id="p1">*</ept> parameter is required.</source>
          <target state="translated">이 매개 변수의 값이 $False는 <bpt id="p1">*</bpt>PropertySerializationSet<ept id="p1">*</ept> 매개 변수는 필수입니다.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>This parameter was introduced in Windows PowerShell 3.0.</source>
          <target state="translated">이 매개 변수는 Windows PowerShell 3.0에서 도입 되었습니다.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>-MemberName</source>
          <target state="translated">-MemberName</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>Specifies the name of a property or method.</source>
          <target state="translated">속성 또는 메서드의 이름을 지정합니다.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>Use this parameter with the <bpt id="p1">*</bpt>TypeName<ept id="p1">*</ept>, <bpt id="p2">*</bpt>MemberType<ept id="p2">*</ept>, <bpt id="p3">*</bpt>Value<ept id="p3">*</ept> and <bpt id="p4">*</bpt>SecondValue<ept id="p4">*</ept> parameters to add or change a property or method of a type.</source>
          <target state="translated">이 매개 변수를 사용 하는 <bpt id="p1">*</bpt>TypeName<ept id="p1">*</ept>, <bpt id="p2">*</bpt>MemberType<ept id="p2">*</ept>, <bpt id="p3">*</bpt>값<ept id="p3">*</ept> 및 <bpt id="p4">*</bpt>SecondValue<ept id="p4">*</ept> 매개 변수를 추가 하거나 형식의 메서드나 속성을 변경 합니다.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>This parameter was introduced in Windows PowerShell 3.0.</source>
          <target state="translated">이 매개 변수는 Windows PowerShell 3.0에서 도입 되었습니다.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>-MemberType</source>
          <target state="translated">-MemberType</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>Specifies the type of the member to add or change.</source>
          <target state="translated">추가하거나 변경할 멤버의 유형을 지정합니다.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>Use this parameter with the <bpt id="p1">*</bpt>TypeName<ept id="p1">*</ept>, <bpt id="p2">*</bpt>MemberType<ept id="p2">*</ept>, <bpt id="p3">*</bpt>Value<ept id="p3">*</ept> and <bpt id="p4">*</bpt>SecondValue<ept id="p4">*</ept> parameters to add or change a property or method of a type.</source>
          <target state="translated">이 매개 변수를 사용 하는 <bpt id="p1">*</bpt>TypeName<ept id="p1">*</ept>, <bpt id="p2">*</bpt>MemberType<ept id="p2">*</ept>, <bpt id="p3">*</bpt>값<ept id="p3">*</ept> 및 <bpt id="p4">*</bpt>SecondValue<ept id="p4">*</ept> 매개 변수를 추가 하거나 형식의 메서드나 속성을 변경 합니다.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>The acceptable values for this parameter are:</source>
          <target state="translated">이 매개 변수에 허용되는 값은 다음과 같습니다.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>AliasProperty</source>
          <target state="translated">AliasProperty</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>CodeMethod</source>
          <target state="translated">CodeMethod</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>CodeProperty</source>
          <target state="translated">CodeProperty</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>Noteproperty</source>
          <target state="translated">Noteproperty</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>ScriptMethod</source>
          <target state="translated">ScriptMethod</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>ScriptProperty</source>
          <target state="translated">ScriptProperty</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>For information about these values, see PSMemberTypes Enumerationhttp://msdn.microsoft.com/en-us/library/windows/desktop/system.management.automation.psmembertypes(v=vs.85).aspx (http://msdn.microsoft.com/en-us/library/windows/desktop/system.management.automation.psmembertypes(v=vs.85).aspx) in MSDN.</source>
          <target state="translated">이러한 값에 대 한 내용은 참조 PSMemberTypes Enumerationhttp://msdn.microsoft.com/en-us/library/windows/desktop/system.management.automation.psmembertypes (v=vs.85).aspx (http://msdn.microsoft.com/en-us/library/windows/desktop/system.management.automation.psmembertypes (v=vs.85).aspx) MSDN에 있습니다.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>This parameter was introduced in Windows PowerShell 3.0.</source>
          <target state="translated">이 매개 변수는 Windows PowerShell 3.0에서 도입 되었습니다.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>-PrependPath</source>
          <target state="translated">-PrependPath</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>Specifies the path to the optional .ps1xml files.</source>
          <target state="translated">선택적 .ps1xml 파일의 경로를 지정합니다.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>The specified files are loaded in the order that they are listed before the built-in files are loaded.</source>
          <target state="translated">지정한 파일은 기본 제공 파일이 로드되기 전에 나열된 순서대로 로드됩니다.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>-PropertySerializationSet</source>
          <target state="translated">-PropertySerializationSet</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>Specifies the names of properties that are serialized.</source>
          <target state="translated">직렬화된 속성의 이름을 지정합니다.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>Use this parameter when the value of the <bpt id="p1">*</bpt>SerializationMethod<ept id="p1">*</ept> parameter is <bpt id="p2">**</bpt>SpecificProperties<ept id="p2">**</ept>.</source>
          <target state="translated">이 매개 변수를 사용 하 여 때의 값은 <bpt id="p1">*</bpt>SerializationMethod<ept id="p1">*</ept> 매개 변수는 <bpt id="p2">**</bpt>SpecificProperties<ept id="p2">**</ept>합니다.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>-SecondValue</source>
          <target state="translated">-SecondValue</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>Specifies additional values for <bpt id="p1">**</bpt>AliasProperty<ept id="p1">**</ept>, <bpt id="p2">**</bpt>ScriptProperty<ept id="p2">**</ept>, <bpt id="p3">**</bpt>CodeProperty<ept id="p3">**</ept>, or <bpt id="p4">**</bpt>CodeMethod<ept id="p4">**</ept> members.</source>
          <target state="translated">에 대 한 추가 값을 지정 <bpt id="p1">**</bpt>AliasProperty<ept id="p1">**</ept>, <bpt id="p2">**</bpt>ScriptProperty<ept id="p2">**</ept>, <bpt id="p3">**</bpt>CodeProperty<ept id="p3">**</ept>, 또는 <bpt id="p4">**</bpt>CodeMethod<ept id="p4">**</ept> 멤버입니다.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>Use this parameter with the <bpt id="p1">*</bpt>TypeName<ept id="p1">*</ept>, <bpt id="p2">*</bpt>MemberType<ept id="p2">*</ept>, <bpt id="p3">*</bpt>Value<ept id="p3">*</ept>, and <bpt id="p4">*</bpt>SecondValue<ept id="p4">*</ept> parameters to add or change a property or method of a type.</source>
          <target state="translated">이 매개 변수를 사용 하는 <bpt id="p1">*</bpt>TypeName<ept id="p1">*</ept>, <bpt id="p2">*</bpt>MemberType<ept id="p2">*</ept>, <bpt id="p3">*</bpt>값<ept id="p3">*</ept>, 및 <bpt id="p4">*</bpt>SecondValue<ept id="p4">*</ept> 매개 변수를 추가 하거나 형식의 메서드나 속성을 변경 합니다.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>When the value of the <bpt id="p1">*</bpt>MemberType<ept id="p1">*</ept> parameter is AliasProperty, the value of the <bpt id="p2">*</bpt>SecondValue<ept id="p2">*</ept> parameter must be a data type.</source>
          <target state="translated">때의 값은 <bpt id="p1">*</bpt>MemberType<ept id="p1">*</ept> 매개 변수는 AliasProperty의 값은 <bpt id="p2">*</bpt>SecondValue<ept id="p2">*</ept> 매개 변수는 데이터 형식 이어야 합니다.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>Windows PowerShell converts (that is, casts) the value of the alias property to the specified type.</source>
          <target state="translated">Windows PowerShell 변환 (캐스트)를 지정 된 형식에서 별칭 속성의 값입니다.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>For example, if you add an alias property that provides an alternate name for a string property, you can also specify a <bpt id="p1">**</bpt>SecondValue<ept id="p1">**</ept> of System.Int32 to convert the aliased string value to an integer.</source>
          <target state="translated">예를 들어 문자열 속성에 대 한 대체 이름을 제공 하는 별칭 속성을 추가 하는 경우 지정할 수도 있습니다는 <bpt id="p1">**</bpt>SecondValue<ept id="p1">**</ept> 별칭 문자열 값을 정수로 변환 하는 i n t 32입니다.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>When the value of the <bpt id="p1">*</bpt>MemberType<ept id="p1">*</ept> parameter is ScriptProperty, you can use the <bpt id="p2">*</bpt>SecondValue<ept id="p2">*</ept> parameter to specify an additional script block.</source>
          <target state="translated">때의 값은 <bpt id="p1">*</bpt>MemberType<ept id="p1">*</ept> 매개 변수가 ScriptProperty를 사용할 수 있습니다는 <bpt id="p2">*</bpt>SecondValue<ept id="p2">*</ept> 매개 변수를 추가 스크립트 블록을 지정 합니다.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>The script block in the value of the <bpt id="p1">*</bpt>Value<ept id="p1">*</ept> parameter gets the value of a variable.</source>
          <target state="translated">값에 있는 스크립트 블록은 <bpt id="p1">*</bpt>값<ept id="p1">*</ept> 매개 변수의 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>The script block in the value of the <bpt id="p1">*</bpt>SecondValue<ept id="p1">*</ept> parameter set the value of the variable.</source>
          <target state="translated">값에 있는 스크립트 블록은 <bpt id="p1">*</bpt>SecondValue<ept id="p1">*</ept> 매개 변수의 값을 설정 합니다.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>This parameter was introduced in Windows PowerShell 3.0.</source>
          <target state="translated">이 매개 변수는 Windows PowerShell 3.0에서 도입 되었습니다.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>-SerializationDepth</source>
          <target state="translated">-SerializationDepth</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>Specifies how many levels of type objects are serialized as strings.</source>
          <target state="translated">문자열로 직렬화되는 유형 개체의 수준 수를 지정합니다.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>The default value, 1, serializes the object and its properties.</source>
          <target state="translated">기본값 1은 개체와 해당 속성을 직렬화합니다.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>A value of 0 serializes the object, but not its properties.</source>
          <target state="translated">값 0은 개체만 직렬화하고 해당 속성은 직렬화하지 않습니다.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>A value of 2 serializes the object, its properties, and any objects in property values.</source>
          <target state="translated">값 2는 개체, 해당 속성 및 속성 값에 있는 모든 개체를 직렬화합니다.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>This parameter was introduced in Windows PowerShell 3.0.</source>
          <target state="translated">이 매개 변수는 Windows PowerShell 3.0에서 도입 되었습니다.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>-SerializationMethod</source>
          <target state="translated">-SerializationMethod</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>Specifies a serialization method for the type.</source>
          <target state="translated">유형의 직렬화 메서드를 지정합니다.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>A serialization method determines which properties of the type are serialized and the technique that is used to serialize them.</source>
          <target state="translated">직렬화 메서드는 직렬화되는 유형의 속성과 직렬화에 사용되는 기술을 결정합니다.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>The acceptable values for this parameter are:</source>
          <target state="translated">이 매개 변수에 허용되는 값은 다음과 같습니다.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source>AllPublicProperties.</source>
          <target state="translated">AllPublicProperties 합니다.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source>Serialize all public properties of the type.</source>
          <target state="translated">유형의 모든 공용 속성을 직렬화합니다.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source>You can use the <bpt id="p1">**</bpt>SerializationDepth<ept id="p1">**</ept> parameter to determine whether child properties are serialized.</source>
          <target state="translated">사용할 수는 <bpt id="p1">**</bpt>SerializationDepth<ept id="p1">**</ept> 매개 변수를 자식 속성을 직렬화할지 여부를 확인 합니다.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source>String.</source>
          <target state="translated">문자열입니다.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source>Serialize the type as a string.</source>
          <target state="translated">유형을 문자열로 직렬화합니다.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source>You can use the <bpt id="p1">**</bpt>StringSerializationSource<ept id="p1">**</ept> to specify a property of the type to use as the serialization result.</source>
          <target state="translated">사용할 수는 <bpt id="p1">**</bpt>StringSerializationSource<ept id="p1">**</ept> 직렬화 결과로 사용할 유형의 속성을 지정 합니다.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve">
          <source>Otherwise, the type is serialized by using the <bpt id="p1">**</bpt>ToString<ept id="p1">**</ept> method of the object.</source>
          <target state="translated">형식을 사용 하 여 serialize 되는 그렇지 않은 경우는 <bpt id="p1">**</bpt>ToString<ept id="p1">**</ept> 는 예제입니다.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source>SpecificProperties.</source>
          <target state="translated">SpecificProperties 합니다.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source>Serialize only the specified properties of this type.</source>
          <target state="translated">이 형식의 지정된 된 속성만 serialize 합니다.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source>Use the <bpt id="p1">*</bpt>PropertySerializationSet<ept id="p1">*</ept> parameter to specify the properties of the type that are serialized.</source>
          <target state="translated">사용 된 <bpt id="p1">*</bpt>PropertySerializationSet<ept id="p1">*</ept> 매개 변수를 serialize 되는 형식의 속성을 지정 합니다.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve">
          <source>You can also use the <bpt id="p1">*</bpt>InheritPropertySerializationSet<ept id="p1">*</ept> parameter to determine whether the property set is inherited and the <bpt id="p2">*</bpt>SerializationDepth<ept id="p2">*</ept> parameter to determine whether child properties are serialized.</source>
          <target state="translated">사용할 수도 있습니다는 <bpt id="p1">*</bpt>InheritPropertySerializationSet<ept id="p1">*</ept> 매개 변수 속성 집합이 상속 되는지 여부를 확인 하 고 <bpt id="p2">*</bpt>SerializationDepth<ept id="p2">*</ept> 매개 변수를 자식 속성을 직렬화할지 여부를 확인 합니다.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve">
          <source>In Windows PowerShell, serialization methods are stored in <bpt id="p1">**</bpt>PSStandardMembers<ept id="p1">**</ept> internal objects.</source>
          <target state="translated">Windows PowerShell에서 직렬화 메서드는에 저장 됩니다 <bpt id="p1">**</bpt>PSStandardMembers<ept id="p1">**</ept> 내부 개체입니다.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve">
          <source>This parameter was introduced in Windows PowerShell 3.0.</source>
          <target state="translated">이 매개 변수는 Windows PowerShell 3.0에서 도입 되었습니다.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve">
          <source>-StringSerializationSource</source>
          <target state="translated">-StringSerializationSource</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve">
          <source>Specifies the name of a property of the type.</source>
          <target state="translated">유형의 속성 이름을 지정합니다.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve">
          <source>The value of specified property is used as the serialization result.</source>
          <target state="translated">지정한 속성 값은 직렬화 결과로 사용됩니다.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve">
          <source>This parameter is valid only when the value of the <bpt id="p1">*</bpt>SerializationMethod<ept id="p1">*</ept> parameter is String.</source>
          <target state="translated">이 매개 변수는 경우에만 유효 값은 <bpt id="p1">*</bpt>SerializationMethod<ept id="p1">*</ept> 매개 변수는 문자열입니다.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve">
          <source>-TargetTypeForDeserialization</source>
          <target state="translated">-TargetTypeForDeserialization</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve">
          <source>Specifies the type to which object of this type are converted when they are deserialized.</source>
          <target state="translated">역직렬화 시 이 유형의 개체가 변환되는 유형을 지정합니다.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve">
          <source>This parameter was introduced in Windows PowerShell 3.0.</source>
          <target state="translated">이 매개 변수는 Windows PowerShell 3.0에서 도입 되었습니다.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve">
          <source>-TypeAdapter</source>
          <target state="translated">-TypeAdapter</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve">
          <source>Specifies the type of a type adapter, such as <bpt id="p1">**</bpt>Microsoft.PowerShell.Cim.CimInstanceAdapter<ept id="p1">**</ept>.</source>
          <target state="translated">와 같은 유형 어댑터 유형을 지정 <bpt id="p1">**</bpt>Microsoft.PowerShell.Cim.CimInstanceAdapter<ept id="p1">**</ept>합니다.</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve">
          <source>A type adapter enables Windows PowerShell to get the members of a type.</source>
          <target state="translated">유형 어댑터를 사용하면 Windows PowerShell이 유형의 멤버를 가져올 수 있습니다.</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve">
          <source>This parameter was introduced in Windows PowerShell 3.0.</source>
          <target state="translated">이 매개 변수는 Windows PowerShell 3.0에서 도입 되었습니다.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve">
          <source>-TypeConverter</source>
          <target state="translated">-TypeConverter</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve">
          <source>Specifies a type converter to convert values between different types.</source>
          <target state="translated">유형 간에 값을 변환할 유형 변환기를 지정합니다.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve">
          <source>If a type converter is defined for a type, an instance of the type converter is used for the conversion.</source>
          <target state="translated">유형에 대한 유형 변환기를 정의하면 유형 변환기 인스턴스가 변환에 사용됩니다.</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve">
          <source>Enter a <bpt id="p1">**</bpt>System.Type<ept id="p1">**</ept> value that is derived from the <bpt id="p2">**</bpt>System.ComponentModel.TypeConverter<ept id="p2">**</ept> or <bpt id="p3">**</bpt>System.Management.Automation.PSTypeConverter<ept id="p3">**</ept> classes.</source>
          <target state="translated">입력 한 <bpt id="p1">**</bpt>System.Type<ept id="p1">**</ept> 값에서 파생 되는 <bpt id="p2">**</bpt>System.ComponentModel.TypeConverter<ept id="p2">**</ept> 또는 <bpt id="p3">**</bpt>System.Management.Automation.PSTypeConverter<ept id="p3">**</ept> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve">
          <source>This parameter was introduced in Windows PowerShell 3.0.</source>
          <target state="translated">이 매개 변수는 Windows PowerShell 3.0에서 도입 되었습니다.</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve">
          <source>-TypeData</source>
          <target state="translated">-TypeData</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve">
          <source>Specifies an array of type data that this cmdlet adds to the session.</source>
          <target state="translated">이 cmdlet은 세션에 추가 하는 데이터 형식의 배열을 지정 합니다.</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve">
          <source>Enter a variable that contains a <bpt id="p1">**</bpt>TypeData<ept id="p1">**</ept> object or a command that gets a <bpt id="p2">**</bpt>TypeData<ept id="p2">**</ept> object, such as a Get-TypeData command.</source>
          <target state="translated">포함 된 변수를 입력 한 <bpt id="p1">**</bpt>TypeData<ept id="p1">**</ept> 개체 또는 가져오는 명령은 <bpt id="p2">**</bpt>TypeData<ept id="p2">**</ept> Get-typedata 명령 등의 개체입니다.</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve">
          <source>You can also pipe a <bpt id="p1">**</bpt>TypeData<ept id="p1">**</ept> object to <bpt id="p2">**</bpt>Update-TypeData<ept id="p2">**</ept>.</source>
          <target state="translated">또한 사용자는 <bpt id="p1">**</bpt>TypeData<ept id="p1">**</ept> 개체를 <bpt id="p2">**</bpt>Update-typedata<ept id="p2">**</ept>.</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve">
          <source>This parameter was introduced in Windows PowerShell 3.0.</source>
          <target state="translated">이 매개 변수는 Windows PowerShell 3.0에서 도입 되었습니다.</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve">
          <source>-TypeName</source>
          <target state="translated">-TypeName</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve">
          <source>Specifies the name of the type to extend.</source>
          <target state="translated">확장할 유형의 이름을 지정합니다.</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve">
          <source>For types in the <bpt id="p1">**</bpt>System<ept id="p1">**</ept> namespace, enter the short name.</source>
          <target state="translated">형식에 대 한는 <bpt id="p1">**</bpt>시스템<ept id="p1">**</ept> 네임 스페이스를 짧은 이름을 입력 합니다.</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve">
          <source>Otherwise, the full type name is required.</source>
          <target state="translated">그러지 않으면 전체 유형 이름이 필요합니다.</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve">
          <source>Wildcards are not supported.</source>
          <target state="translated">와일드카드는 지원되지 않습니다.</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve">
          <source>You can pipe type names to <bpt id="p1">**</bpt>Update-TypeData<ept id="p1">**</ept>.</source>
          <target state="translated">형식 이름을 파이프할 수 <bpt id="p1">**</bpt>Update-typedata<ept id="p1">**</ept>합니다.</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve">
          <source>When you pipe an object to <bpt id="p1">**</bpt>Update-TypeData<ept id="p1">**</ept>, <bpt id="p2">**</bpt>Update-TypeData<ept id="p2">**</ept> gets the type name of the object and type data to the object type.</source>
          <target state="translated">개체를 파이프 하면 <bpt id="p1">**</bpt>Update-typedata<ept id="p1">**</ept>, <bpt id="p2">**</bpt>Update-typedata<ept id="p2">**</ept> 개체 유형과 개체와 형식 데이터의 형식 이름을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve">
          <source>Use this parameter with the <bpt id="p1">*</bpt>MemberName<ept id="p1">*</ept>, <bpt id="p2">*</bpt>MemberType<ept id="p2">*</ept>, <bpt id="p3">*</bpt>Value<ept id="p3">*</ept> and <bpt id="p4">*</bpt>SecondValue<ept id="p4">*</ept> parameters to add or change a property or method of a type.</source>
          <target state="translated">이 매개 변수를 사용 하는 <bpt id="p1">*</bpt>MemberName<ept id="p1">*</ept>, <bpt id="p2">*</bpt>MemberType<ept id="p2">*</ept>, <bpt id="p3">*</bpt>값<ept id="p3">*</ept> 및 <bpt id="p4">*</bpt>SecondValue<ept id="p4">*</ept> 매개 변수를 추가 하거나 형식의 메서드나 속성을 변경 합니다.</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve">
          <source>This parameter was introduced in Windows PowerShell 3.0.</source>
          <target state="translated">이 매개 변수는 Windows PowerShell 3.0에서 도입 되었습니다.</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve">
          <source>-Value</source>
          <target state="translated">-값</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve">
          <source>Specifies the value of the property or method.</source>
          <target state="translated">속성 또는 메서드의 값을 지정합니다.</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve">
          <source>If you add an AliasProperty, CodeProperty, ScriptProperty, or CodeMethod member, you can use the <bpt id="p1">*</bpt>SecondValue<ept id="p1">*</ept> parameter to add additional information.</source>
          <target state="translated">AliasProperty, CodeProperty, ScriptProperty, 또는 CodeMethod 멤버를 추가 하는 경우 사용할 수 있습니다는 <bpt id="p1">*</bpt>SecondValue<ept id="p1">*</ept> 매개 변수 추가 정보를 추가 합니다.</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve">
          <source>Use this parameter with the <bpt id="p1">*</bpt>MemberName<ept id="p1">*</ept>, <bpt id="p2">*</bpt>MemberType<ept id="p2">*</ept>, <bpt id="p3">*</bpt>Value<ept id="p3">*</ept> and <bpt id="p4">*</bpt>SecondValue<ept id="p4">*</ept> parameters to add or change a property or method of a type.</source>
          <target state="translated">이 매개 변수를 사용 하는 <bpt id="p1">*</bpt>MemberName<ept id="p1">*</ept>, <bpt id="p2">*</bpt>MemberType<ept id="p2">*</ept>, <bpt id="p3">*</bpt>값<ept id="p3">*</ept> 및 <bpt id="p4">*</bpt>SecondValue<ept id="p4">*</ept> 매개 변수를 추가 하거나 형식의 메서드나 속성을 변경 합니다.</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve">
          <source>This parameter was introduced in Windows PowerShell 3.0.</source>
          <target state="translated">이 매개 변수는 Windows PowerShell 3.0에서 도입 되었습니다.</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve">
          <source>-WhatIf</source>
          <target state="translated">-WhatIf</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve">
          <source>Shows what would happen if the cmdlet runs.</source>
          <target state="translated">cmdlet이 실행될 경우 결과 동작을 표시합니다.</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve">
          <source>The cmdlet is not run.Shows what would happen if the cmdlet runs.</source>
          <target state="translated">Cmdlet은 실행 되지 않습니다. Cmdlet이 실행 되 면 어떻게 되는지를 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve">
          <source>The cmdlet is not run.</source>
          <target state="translated">cmdlet이 실행되지 않습니다.</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve">
          <source>CommonParameters</source>
          <target state="translated">CommonParameters</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve">
          <source>This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutVariable, -OutBuffer, -PipelineVariable, -Verbose, -WarningAction, and -WarningVariable.</source>
          <target state="translated">이 cmdlet은 공통 매개 변수:-디버그,-ErrorAction,-ErrorVariable,-InformationAction,-InformationVariable,-OutVariable,-OutBuffer,-PipelineVariable,-Verbose,-WarningAction 및-warningvariable을 지원 합니다.</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve">
          <source>For more information, see about_CommonParameters (http://go.microsoft.com/fwlink/?LinkID=113216).</source>
          <target state="translated">자세한 내용은 about_CommonParameters (http://go.microsoft.com/fwlink/?LinkID=113216)를 참조 합니다.</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve">
          <source>INPUTS</source>
          <target state="translated">입력</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve">
          <source>System.String</source>
          <target state="translated">System.String</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve">
          <source>You can pipe a string that contains the values of the <bpt id="p1">*</bpt>AppendPath<ept id="p1">*</ept>, <bpt id="p2">*</bpt>TypeName<ept id="p2">*</ept>, or <bpt id="p3">*</bpt>TypeData<ept id="p3">*</ept> parameters to <bpt id="p4">**</bpt>Update-TypeData<ept id="p4">**</ept>.</source>
          <target state="translated">값을 포함 하는 문자열을 파이프할 수는 <bpt id="p1">*</bpt>AppendPath<ept id="p1">*</ept>, <bpt id="p2">*</bpt>TypeName<ept id="p2">*</ept>, 또는 <bpt id="p3">*</bpt>TypeData<ept id="p3">*</ept> 매개 변수를 <bpt id="p4">**</bpt>Update-typedata<ept id="p4">**</ept>합니다.</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve">
          <source>OUTPUTS</source>
          <target state="translated">출력</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve">
          <source>None</source>
          <target state="translated">없음</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve">
          <source>This cmdlet does not return any output.</source>
          <target state="translated">이 cmdlet은 어떠한 출력도 반환되지 않습니다.</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve">
          <source>NOTES</source>
          <target state="translated">참고 사항</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve">
          <source>RELATED LINKS</source>
          <target state="translated">관련된 링크</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve">
          <source>about_Types.ps1xml</source>
          <target state="translated">about_Types.ps1xml</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve">
          <source>Get-TypeData</source>
          <target state="translated">Get-TypeData</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve">
          <source>Remove-TypeData</source>
          <target state="translated">Remove-TypeData</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>