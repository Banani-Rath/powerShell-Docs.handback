<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ko-kr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-1c394fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">49fbac8fd558f377b08585bbe12fbdf8237b9fec</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">reference\5.0\Microsoft.PowerShell.Utility\Format-List.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions" />
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">88be8797f0c9b014e9d0a2f956540d30ed0ce325</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f09b33d9657afbf17ea1e04a308e9ae107c8ef2e</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>powershell, cmdlet</source>
          <target state="translated">powershell cmdlet</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Format-List</source>
          <target state="translated">Format-List</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Format-List</source>
          <target state="translated">Format-List</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>SYNOPSIS</source>
          <target state="translated">요약</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Formats the output as a list of properties in which each property appears on a new line.</source>
          <target state="translated">출력의 형식을 각 속성이 새 줄에 표시되는 속성 목록으로 지정합니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>SYNTAX</source>
          <target state="translated">구문</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>DESCRIPTION</source>
          <target state="translated">설명</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>Format-List<ept id="p1">**</ept> cmdlet formats the output of a command as a list of properties in which each property is displayed on a separate line.</source>
          <target state="translated"> <bpt id="p1">**</bpt>Format-list<ept id="p1">**</ept> cmdlet는 각 속성은 별도 줄에 표시 되는 속성 목록으로 명령 출력의 형식을 지정 합니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>You can use <bpt id="p1">**</bpt>Format-List<ept id="p1">**</ept> to format and display all or selected properties of an object as a list (format-list *).</source>
          <target state="translated">사용할 수 있습니다 <bpt id="p1">**</bpt>Format-list<ept id="p1">**</ept> 서식을 지정 하 고 모두 표시 하려면 또는 선택한 개체의 속성을 목록으로 (서식 목록 *).</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Because more space is available for each item in a list than in a table, Windows PowerShell displays more properties of the object in the list, and the property values are less likely to be truncated.</source>
          <target state="translated">각 항목에 사용 가능한 공간이 테이블보다 목록에서 더 크기 때문에 Windows PowerShell은 목록에서 개체 속성을 더 많이 표시하고 속성 값도 덜 잘립니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>EXAMPLES</source>
          <target state="translated">예제</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Example 1: Format computer services</source>
          <target state="translated">예제 1: 형식 컴퓨터 서비스</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>This command formats information about services on the computer as a list.</source>
          <target state="translated">이 명령은 컴퓨터의 서비스에 대한 정보를 목록 형식으로 지정합니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>By default, the services are formatted as a table.</source>
          <target state="translated">기본적으로 서비스는 테이블 형식으로 지정됩니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>The Get-Service cmdlet gets objects representing the services on the computer.</source>
          <target state="translated">Get-Service cmdlet아 컴퓨터의 서비스를 나타내는 개체를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>The pipeline operator (|) passes the results through the pipeline to <bpt id="p1">**</bpt>Format-List<ept id="p1">**</ept>.</source>
          <target state="translated">다음 파이프라인을 통해 결과 전달 하는 파이프라인 연산자 (|) <bpt id="p1">**</bpt>Format-list<ept id="p1">**</ept>합니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Then, the <bpt id="p1">**</bpt>Format-List<ept id="p1">**</ept> command formats the service information in a list and sends it to the default output cmdlet for display.</source>
          <target state="translated">그런 다음, <bpt id="p1">**</bpt>Format-list<ept id="p1">**</ept> 명령 목록에는 서비스 정보를 포맷 하 고 표시 하기 위해 기본 출력 cmdlet으로 보냅니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Example 2: Format PS1XML files</source>
          <target state="translated">예제 2: 형식 PS1XML 파일</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>These commands display information about the PS1XML files in the Windows PowerShell directory as a list.</source>
          <target state="translated">이 명령은 Windows PowerShell 디렉터리에 있는 PS1XML 파일에 대한 정보를 목록으로 표시합니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>The first command gets the objects representing the files and stores them in the $A variable.</source>
          <target state="translated">첫 번째 명령은 파일을 나타내는 개체를 가져오고 $A 변수에 저장 합니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>The second command uses <bpt id="p1">**</bpt>Format-List<ept id="p1">**</ept> to format information about objects stored in $A.</source>
          <target state="translated">두 번째 명령은 <bpt id="p1">**</bpt>Format-list<ept id="p1">**</ept> $A.에 저장 된 개체에 대 한 형식 정보</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>This command uses the <bpt id="p1">*</bpt>InputObject<ept id="p1">*</ept> parameter to pass the variable to <bpt id="p2">**</bpt>Format-List<ept id="p2">**</ept>, which then sends the formatted output to the default output cmdlet for display.</source>
          <target state="translated">이 명령을 사용 하는 <bpt id="p1">*</bpt>InputObject<ept id="p1">*</ept> 변수를 전달할 매개 변수를 <bpt id="p2">**</bpt>Format-list<ept id="p2">**</ept>, 디스플레이 대 한 cmdlet 출력 그 다음 기본 형식이 지정 된 출력을 보냅니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Example 3: Format process properties by name</source>
          <target state="translated">예제 3: 형식 프로세스 속성 이름으로</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>This command displays the name, base priority, and priority class of each process on the computer.</source>
          <target state="translated">이 명령은 컴퓨터에 있는 각 프로세스의 이름, 기본 우선 순위 및 우선 순위 클래스를 표시합니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>It uses the Get-Process cmdlet to get an object representing each process.</source>
          <target state="translated">Get-Process cmdlet을 사용하여 각 프로세스를 나타내는 개체를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>The pipeline operator (|) passes the process objects through the pipeline to <bpt id="p1">**</bpt>Format-List<ept id="p1">**</ept>.</source>
          <target state="translated">파이프라인 연산자 (|) 파이프라인을 통해 프로세스 개체를 전달 합니다. <bpt id="p1">**</bpt>Format-list<ept id="p1">**</ept>합니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Format-List<ept id="p1">**</ept> formats the processes as a list of the specified properties.</source>
          <target state="translated"><bpt id="p1">**</bpt>Format-list<ept id="p1">**</ept> 형식이 지정된 된 속성의 목록으로 지정 하는 프로세스입니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">*</bpt>Property<ept id="p1">*</ept> parameter name is optional, so you can omit it.</source>
          <target state="translated"> <bpt id="p1">*</bpt>속성<ept id="p1">*</ept> 매개 변수 이름은 선택 사항 이므로 생략할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Example 4: Format all properties for a process</source>
          <target state="translated">예 4: 프로세스에 대 한 모든 속성 형식</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>This command displays all of the properties of the Winlogon process.</source>
          <target state="translated">이 명령은 Winlogon 프로세스의 모든 속성을 표시합니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>It uses the Get-Process cmdlet to get an object representing the Winlogon process.</source>
          <target state="translated">Get-Process cmdlet을 사용하여 Winlogon 프로세스를 나타내는 개체를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>The pipeline operator (|) passes the Winlogon process object through the pipeline to <bpt id="p1">**</bpt>Format-List<ept id="p1">**</ept>.</source>
          <target state="translated">파이프라인 연산자 (|) 파이프라인을 통해 Winlogon 프로세스 개체를 전달 합니다. <bpt id="p1">**</bpt>Format-list<ept id="p1">**</ept>합니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>The command uses the <bpt id="p1">*</bpt>Property<ept id="p1">*</ept> parameter to specify the properties and the <bpt id="p2">*</bpt> to indicate all properties. Because the name of the <ept id="p2">*</ept>Property<bpt id="p3">*</bpt> parameter is optional, you can omit it and type the command as <ph id="ph1">`format-list *`</ph>. <ept id="p3">*</ept><bpt id="p4">*</bpt>Format-List<ept id="p4">*</ept>* automatically sends the results to the default output cmdlet for display.</source>
          <target state="translated">명령을 사용 하 여는 <bpt id="p1">*</bpt>속성<ept id="p1">*</ept> 매개 변수 속성을 지정 하 고 <bpt id="p2">*</bpt> 모든 속성을 나타냅니다. 때문에 이름을 <ept id="p2">*</ept>속성<bpt id="p3">*</bpt> 매개 변수는 선택 사항, 생략할 수 있으며 명령을 <ph id="ph1">`format-list *`</ph>합니다. <ept id="p3">*</ept><bpt id="p4">*</bpt>Format-list<ept id="p4">*</ept>* 자동으로 결과 표시 하기 위해 기본 출력 cmdlet으로 보냅니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>PARAMETERS</source>
          <target state="translated">매개 변수</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>-DisplayError</source>
          <target state="translated">-DisplayError</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Indicates that this cmdlet displays errors at the command line.</source>
          <target state="translated">이 cmdlet은 명령줄에서 오류를 표시를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>This parameter is rarely used, but can be used as a debugging aid when you are formatting expressions in a <bpt id="p1">**</bpt>Format-List<ept id="p1">**</ept> command, and the expressions do not appear to be working.</source>
          <target state="translated">이 매개 변수는 거의 사용 되지 않지만 식에 형식을 지정 하는 경우 디버깅 도구로 사용할 수는 <bpt id="p1">**</bpt>Format-list<ept id="p1">**</ept> 명령 및 식 작업 표시 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>The following shows an example of the results of adding the <bpt id="p1">*</bpt>DisplayError<ept id="p1">*</ept> parameter with an expression.</source>
          <target state="translated">다음에 추가 하는 결과의 예가 나와 <bpt id="p1">*</bpt>DisplayError<ept id="p1">*</ept> 하는 식으로 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>PS <ph id="ph1">\&gt;</ph> Get-Date | Format-List DayOfWeek,{ $<bpt id="p1">_</bpt> / $null } -ShowError DayOfWeek  $<ept id="p1">_</ept> / $null</source>
          <target state="translated">PS <ph id="ph1">\&gt;</ph> Get-date | Format-list DayOfWeek {$<bpt id="p1">_</bpt> / $null}-ShowError DayOfWeek $<ept id="p1">_</ept> / $null</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Wednesday #ERR</source>
          <target state="translated">수요일 #ERR</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>-Expand</source>
          <target state="translated">-확장</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Specifies the formatted collection object, as well as the objects in the collection.</source>
          <target state="translated">컬렉션의 개체와 함께 서식이 지정 된 컬렉션 개체를 지정합니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>This parameter is designed to format objects that support the ICollection (System.Collections) interface.</source>
          <target state="translated">이 매개 변수는 ICollection(System.Collections) 인터페이스를 지원하는 개체의 형식을 지정할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>The default value is EnumOnly.</source>
          <target state="translated">기본값은 EnumOnly입니다.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>The acceptable values for this parameter are:</source>
          <target state="translated">이 매개 변수에 허용되는 값은 다음과 같습니다.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>EnumOnly.</source>
          <target state="translated">EnumOnly입니다.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Displays the properties of the objects in the collection.</source>
          <target state="translated">컬렉션에 있는 개체의 속성을 표시합니다.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>CoreOnly.</source>
          <target state="translated">CoreOnly 합니다.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Displays the properties of the collection object.</source>
          <target state="translated">컬렉션 개체의 속성을 표시합니다.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Both.</source>
          <target state="translated">둘 다.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Displays the properties of the collection object and the properties of objects in the collection.</source>
          <target state="translated">컬렉션 개체의 속성과 컬렉션에 있는 개체의 속성을 표시합니다.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>-Force</source>
          <target state="translated">-Force</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Directs the cmdlet to display all of the error information.</source>
          <target state="translated">cmdlet에 모든 오류 정보를 표시하도록 지정합니다.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Use with the <bpt id="p1">*</bpt>DisplayError<ept id="p1">*</ept> or <bpt id="p2">*</bpt>ShowError<ept id="p2">*</ept> parameter.</source>
          <target state="translated">와 함께 사용 된 <bpt id="p1">*</bpt>DisplayError<ept id="p1">*</ept> 또는 <bpt id="p2">*</bpt>ShowError<ept id="p2">*</ept> 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>By default, when an error object is written to the error or display streams, only some of the error information is displayed.</source>
          <target state="translated">기본적으로 오류 또는 표시 스트림에 오류 개체를 쓰는 경우 일부 오류 정보만 표시됩니다.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>-GroupBy</source>
          <target state="translated">-GroupBy</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Specifies the output in groups based on a shared property or value.</source>
          <target state="translated">공유 속성이 나 값에 따라 그룹의 출력을 지정 합니다.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Enter an expression or a property of the output.</source>
          <target state="translated">출력의 식이나 속성을 입력하세요.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>The value of the <bpt id="p1">*</bpt>GroupBy<ept id="p1">*</ept> parameter can be a new calculated property.</source>
          <target state="translated">값은 <bpt id="p1">*</bpt>GroupBy<ept id="p1">*</ept> 매개 변수는 새로 계산 된 속성 일 수 있습니다.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>To create a calculated, property, use a hash table.</source>
          <target state="translated">계산된 속성을 만들려면 해시 테이블을 사용하세요.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>Valid keys are:</source>
          <target state="translated">유효한 키는 다음과 같습니다.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>Name (or Label) <ph id="ph1">\&lt;</ph>string</source>
          <target state="translated">이름 (또는 레이블) <ph id="ph1">\&lt;</ph>문자열</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>Expression <ph id="ph1">\&lt;</ph>string<ph id="ph2">\&gt;</ph> or <ph id="ph3">\&lt;</ph>script block</source>
          <target state="translated">식 <ph id="ph1">\&lt;</ph>문자열<ph id="ph2">\&gt;</ph> 또는 <ph id="ph3">\&lt;</ph>스크립트 블록</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>FormatString <ph id="ph1">\&lt;</ph>string</source>
          <target state="translated">FormatString <ph id="ph1">\&lt;</ph>문자열</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>-InputObject</source>
          <target state="translated">-InputObject</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>Specifies the objects to be formatted.</source>
          <target state="translated">형식을 지정할 개체를 지정합니다.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>Enter a variable that contains the objects or type a command or expression that gets the objects.</source>
          <target state="translated">개체를 포함하는 변수를 입력하거나 개체를 가져오는 명령 또는 식을 입력하세요.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>-Property</source>
          <target state="translated">-속성</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>Specifies an array of object properties that appear in the display and the order in which they appear.</source>
          <target state="translated">디스플레이 및 표시 되는 순서에 표시 되는 개체 속성의 배열을 지정 합니다.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>Wildcards are permitted.</source>
          <target state="translated">와일드카드가 지원됩니다.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>If you omit this parameter, the properties that appear in the display depend on the object being displayed.</source>
          <target state="translated">이 매개 변수를 생략할 경우 표시에 나타나는 속성은 표시되는 개체에 따라 달라집니다.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>The parameter name (<bpt id="p1">*</bpt>Property<ept id="p1">*</ept>) is optional.</source>
          <target state="translated">매개 변수 이름 (<bpt id="p1">*</bpt>속성<ept id="p1">*</ept>)은 선택 사항입니다.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>You cannot use the <bpt id="p1">*</bpt>Property<ept id="p1">*</ept> and <bpt id="p2">*</bpt>View<ept id="p2">*</ept> parameters in the same command.</source>
          <target state="translated">사용할 수 없습니다는 <bpt id="p1">*</bpt>속성<ept id="p1">*</ept> 및 <bpt id="p2">*</bpt>보기<ept id="p2">*</ept> 동일한 명령에 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>The value of the <bpt id="p1">*</bpt>Property<ept id="p1">*</ept> parameter can be a new calculated property.</source>
          <target state="translated">값은 <bpt id="p1">*</bpt>속성<ept id="p1">*</ept> 매개 변수는 새로 계산 된 속성 일 수 있습니다.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>To create a calculated property, use a hash table.</source>
          <target state="translated">계산된 속성을 만들려면 해시 테이블을 사용하세요.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>Valid keys are:</source>
          <target state="translated">유효한 키는 다음과 같습니다.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>Expression <ph id="ph1">\&lt;</ph>string<ph id="ph2">\&gt;</ph> or <ph id="ph3">\&lt;</ph>script block</source>
          <target state="translated">식 <ph id="ph1">\&lt;</ph>문자열<ph id="ph2">\&gt;</ph> 또는 <ph id="ph3">\&lt;</ph>스크립트 블록</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>Depth <ph id="ph1">\&lt;</ph>int32</source>
          <target state="translated">깊이 <ph id="ph1">\&lt;</ph>int32</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>-ShowError</source>
          <target state="translated">-ShowError</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>Indicates that the cmdlet sends errors through the pipeline.</source>
          <target state="translated">Cmdlet은 전송 파이프라인을 통해 오류를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>This parameter is rarely used, but can be used as a debugging aid when you are formatting expressions in a Format-List command, and the expressions do not appear to be working.</source>
          <target state="translated">이 매개 변수는 거의 사용되지 않지만 Format-List 명령에서 식의 형식을 지정할 때 식이 작동하지 않는 것처럼 보일 경우 디버그에 도움이 될 수 있습니다.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>The following shows an example of the results of adding the <bpt id="p1">*</bpt>ShowError<ept id="p1">*</ept> parameter with an expression.</source>
          <target state="translated">다음에 추가 하는 결과의 예가 나와 <bpt id="p1">*</bpt>ShowError<ept id="p1">*</ept> 하는 식으로 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>PS <ph id="ph1">\&gt;</ph> Get-Date | Format-List DayOfWeek,{ $<bpt id="p1">_</bpt> / $null } -ShowError DayOfWeek  $<ept id="p1">_</ept> / $null</source>
          <target state="translated">PS <ph id="ph1">\&gt;</ph> Get-date | Format-list DayOfWeek {$<bpt id="p1">_</bpt> / $null}-ShowError DayOfWeek $<ept id="p1">_</ept> / $null</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>Wednesday</source>
          <target state="translated">수요일</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>Failed to evaluate expression " $_ / $null ".</source>
          <target state="translated">" $_ / $null " 식을 평가하지 못했습니다.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>+ CategoryInfo          : InvalidArgument: (10/30/2013 2:28:07 PM:PSObject) <ph id="ph1">\[\]</ph>, RuntimeException + FullyQualifiedErrorId : mshExpressionError</source>
          <target state="translated">+ CategoryInfo: 인수: (10/30/2013 2시 28분: 07 PM:PSObject) <ph id="ph1">\[\]</ph>, RuntimeException + FullyQualifiedErrorId: mshExpressionError</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>-View</source>
          <target state="translated">-보기</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>Specifies the name of an alternate list format or view.</source>
          <target state="translated">대체 목록 형식 또는 보기의 이름을 지정합니다.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>You cannot use the <bpt id="p1">*</bpt>Property<ept id="p1">*</ept> and <bpt id="p2">*</bpt>View<ept id="p2">*</ept> parameters in the same command.</source>
          <target state="translated">사용할 수 없습니다는 <bpt id="p1">*</bpt>속성<ept id="p1">*</ept> 및 <bpt id="p2">*</bpt>보기<ept id="p2">*</ept> 동일한 명령에 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>CommonParameters</source>
          <target state="translated">CommonParameters</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutVariable, -OutBuffer, -PipelineVariable, -Verbose, -WarningAction, and -WarningVariable.</source>
          <target state="translated">이 cmdlet은 공통 매개 변수:-디버그,-ErrorAction,-ErrorVariable,-InformationAction,-InformationVariable,-OutVariable,-OutBuffer,-PipelineVariable,-Verbose,-WarningAction 및-warningvariable을 지원 합니다.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>For more information, see about_CommonParameters (http://go.microsoft.com/fwlink/?LinkID=113216).</source>
          <target state="translated">자세한 내용은 about_CommonParameters (http://go.microsoft.com/fwlink/?LinkID=113216)를 참조 합니다.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>INPUTS</source>
          <target state="translated">입력</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>System.Management.Automation.PSObject</source>
          <target state="translated">System.Management.Automation.PSObject</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>You can pipe any object to <bpt id="p1">**</bpt>Format-List<ept id="p1">**</ept>.</source>
          <target state="translated">모든 개체를 파이프할 수 있습니다 <bpt id="p1">**</bpt>Format-list<ept id="p1">**</ept>합니다.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>OUTPUTS</source>
          <target state="translated">출력</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>Microsoft.PowerShell.Commands.Internal.Format</source>
          <target state="translated">Microsoft.PowerShell.Commands.Internal.Format</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Format-List<ept id="p1">**</ept> returns the format objects that represent the list.</source>
          <target state="translated"><bpt id="p1">**</bpt>Format-list<ept id="p1">**</ept> 목록을 나타내는 형식 개체를 반환 합니다.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>NOTES</source>
          <target state="translated">참고 사항</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>You can also refer to <bpt id="p1">**</bpt>Format-List<ept id="p1">**</ept> by its built-in alias, FL.</source>
          <target state="translated">참조할 수 있습니다 <bpt id="p1">**</bpt>Format-list<ept id="p1">**</ept> 해당 기본 제공 별칭, FL.로</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>For more information, see about_Aliases.</source>
          <target state="translated">자세한 내용은 about_Aliases를 참조하세요.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>The format cmdlets, such as <bpt id="p1">**</bpt>Format-List<ept id="p1">**</ept>, arrange the data to be displayed but do not display it.</source>
          <target state="translated">형식 cmdlet은 같은 <bpt id="p1">**</bpt>Format-list<ept id="p1">**</ept>, 표시할 데이터를 정렬 하지만 표시 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>The data is displayed by the output features of Windows PowerShell and by the cmdlets that contain the Out verb (the Out cmdlets), such as Out-Host, Out-File, and Out-Printer.</source>
          <target state="translated">데이터는 Windows PowerShell의 출력 기능 및 Out-Host, Out-File, Out-Printer와 같은 Out 동사를 포함하는 cmdlet(Out cmdlet)을 통해 표시됩니다.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>If you do not use a format cmdlet, Windows PowerShell applies that default format for each object that it displays.</source>
          <target state="translated">형식 cmdlet을 사용하지 않을 경우 Windows PowerShell은 표시하는 각 개체에 대해 기본 형식을 적용합니다.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">*</bpt>GroupBy<ept id="p1">*</ept> parameter assumes that the objects are sorted.</source>
          <target state="translated"> <bpt id="p1">*</bpt>GroupBy<ept id="p1">*</ept> 매개 변수는 개체가 정렬 되어 있다고 가정 합니다.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>Before using <bpt id="p1">**</bpt>Format-Custom<ept id="p1">**</ept> to group the objects, use Sort-Object to sort them.</source>
          <target state="translated">사용 하기 전에 <bpt id="p1">**</bpt>Format-custom<ept id="p1">**</ept> 개체를 그룹화 사용 하 여 정렬 개체를 정렬 합니다.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">*</bpt>View<ept id="p1">*</ept> parameter lets you specify an alternate format for the table.</source>
          <target state="translated"> <bpt id="p1">*</bpt>보기<ept id="p1">*</ept> 매개 변수는 테이블에 대 한 대체 형식을 지정할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>You can use the views defined in the *.format.PS1XML files in the Windows PowerShell directory, or you can create your own views in new PS1XML files and use the Update-FormatData cmdlet to include them in Windows PowerShell.</source>
          <target state="translated">Windows PowerShell 디렉터리의 *.format.PS1XML 파일에 정의된 보기를 사용하거나 새 PS1XML 파일에서 고유한 보기를 만든 다음 Update-FormatData cmdlet을 사용하여 Windows PowerShell에 포함할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>The alternate view for the View parameter must use the list format; if not, the command fails.</source>
          <target state="translated">View 매개 변수의 대체 보기는 목록 형식을 사용해야 합니다. 그러지 않으면 명령이 실패합니다.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>If the alternate view is a table, use Format-Table.</source>
          <target state="translated">대체 보기가 테이블인 경우 Format-Table을 사용합니다.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>If the alternate view is neither a list nor a table, use Format-Custom.</source>
          <target state="translated">대체 뷰가 목록이나 테이블이 아니면 Format-Custom을 사용합니다.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>RELATED LINKS</source>
          <target state="translated">관련된 링크</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>Format-Custom</source>
          <target state="translated">Format-Custom</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>Format-Hex</source>
          <target state="translated">Format-Hex</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>Format-Table</source>
          <target state="translated">Format-Table</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>Format-Wide</source>
          <target state="translated">Format-Wide</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>