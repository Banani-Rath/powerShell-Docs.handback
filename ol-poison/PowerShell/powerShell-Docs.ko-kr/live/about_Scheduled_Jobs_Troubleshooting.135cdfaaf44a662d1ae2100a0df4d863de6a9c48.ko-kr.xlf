<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ko-kr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-1c394fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">7815a1030389745ad53eeb81b3393e67b5719d11</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">reference\4.0\PSScheduledJob\About\about_Scheduled_Jobs_Troubleshooting.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions" />
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">50bc04b7e8e0c42fac5ff8cbe94faedda19dfed9</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">17dcbb7fd096fcb76047e8bdc8ee1c9e3153a13a</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>about_Scheduled_Jobs_Troubleshooting</source>
          <target state="translated">about_Scheduled_Jobs_Troubleshooting</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>powershell, cmdlet</source>
          <target state="translated">powershell cmdlet</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>About Scheduled Jobs Troubleshooting</source>
          <target state="translated">예약 된 작업 문제 해결 정보</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>about_Scheduled_Jobs_Troubleshooting</source>
          <target state="translated">about_Scheduled_Jobs_Troubleshooting</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>about_Scheduled_Jobs_Troubleshooting</source>
          <target state="translated">about_Scheduled_Jobs_Troubleshooting</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>SHORT DESCRIPTION</source>
          <target state="translated">간단한 설명</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Explains how to resolve problems with scheduled jobs</source>
          <target state="translated">예약 된 작업으로 문제를 해결 하는 방법에 설명</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>LONG DESCRIPTION</source>
          <target state="translated">자세한 설명</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>This section describes some of the problems that you might encounter when using the scheduled job features of Windows PowerShell and it suggests solutions to these problems.</source>
          <target state="translated">이 섹션에서는 일부의 Windows PowerShell의 예약 된 작업 기능을 사용 하는 경우 발생할 수 있는 문제를 설명 하 고 이러한 문제에 대 한 솔루션을 제안 합니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Before using Windows PowerShell scheduled jobs, see about_Scheduled_Jobs and the related scheduled jobs about topics.</source>
          <target state="translated">Windows PowerShell을 사용 하기 전에 예약 된 작업에는 about_Scheduled_Jobs 및 관련된 된 예약 된 작업 항목에 대 한 참조 하십시오.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>This topic contains the following sections: --  CANNOT FIND JOB RESULTS --  SCHEDULED JOB DOES NOT RUN --  CANNOT GET SCHEDULED JOB : SCHEDULED JOB IS CORRUPTED --  JOB CMDLETS CANNOT CONSISTENTLY FIND SCHEDULED JOBS</source>
          <target state="translated">이 항목의 다음 섹션에서는:-찾을 수 없습니다 작업 결과-예약 된 작업은 아닙니다 실행-예약 된 작업 가져올 수 없습니다: 예약 된 작업은 손상-작업 CMDLET 없습니다 일관 되 게 찾기 예약 된 작업</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>CANNOT FIND JOB RESULTS</source>
          <target state="translated">작업 결과 찾을 수 없습니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>-- Basic method for getting job results in Windows PowerShell</source>
          <target state="translated">-Windows PowerShell에서 작업 결과 가져오기 위한 기본 방법</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>When a scheduled job runs, it creates an "instance" of the scheduled job.</source>
          <target state="translated">예약 된 작업을 실행 하는 경우 예약된 된 작업의 "인스턴스"를 만듭니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>To view, manage, and  get the results of scheduled job instances, use the Job cmdlets.</source>
          <target state="translated">보고, 관리, 예약 된 작업 인스턴스 결과 얻을, Job cmdlet을 사용 합니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>NOTE: To use the Job cmdlets on instances of scheduled jobs, the PSScheduledJob module must be imported into the session.</source>
          <target state="translated">참고: Job cmdlet을 사용 하 여 예약 된 작업의 인스턴스에서 PSScheduledJob 모듈 세션으로 가져오지 해야 합니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>To import the PSScheduledJob module, type "Import-Module PSScheduledJob" (without quotation marks) or use any Scheduled Job cmdlet, such as Get-ScheduledJob.</source>
          <target state="translated">PSScheduledJob 모듈을 가져오려면 (따옴표 제외) "PSScheduledJob 모듈 가져오기"를 입력 하거나 Get-scheduledjob와 같은 모든 예약 된 작업 cmdlet을 사용 합니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>To get a list of all instances of a scheduled job, use the Get-Job cmdlet.</source>
          <target state="translated">예약된 된 작업의 모든 인스턴스 목록을 Get-job cmdlet을 사용 합니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>PS C:&gt; Import-Module PSScheduledJob PS C:&gt; Get-Job ProcessJob</source>
          <target state="translated">PS c: &gt; Import-module PSScheduledJob PS c: &gt; Get-job ProcessJob</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Id     Name         PSJobTypeName   State         HasMoreData     Location</source>
          <target state="translated">Id 이름 PSJobTypeName 상태 HasMoreData 위치</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>43     ProcessJob   PSScheduledJob  Completed     False           localhost 44     ProcessJob   PSScheduledJob  Completed     False           localhost 45     ProcessJob   PSScheduledJob  Completed     False           localhost 46     ProcessJob   PSScheduledJob  Completed     False           localhost 47     ProcessJob   PSScheduledJob  Completed     False           localhost 48     ProcessJob   PSScheduledJob  Completed     False           localhost 49     ProcessJob   PSScheduledJob  Completed     False           localhost 50     ProcessJob   PSScheduledJob  Completed     False           localhost</source>
          <target state="translated">43 ProcessJob PSScheduledJob 완료 False localhost 44 ProcessJob PSScheduledJob 완료 False localhost 45 ProcessJob PSScheduledJob 완료 False localhost 46 ProcessJob PSScheduledJob 완료 False localhost 47 ProcessJob PSScheduledJob 완료 False localhost 48 ProcessJob PSScheduledJob 완료 False localhost 49 ProcessJob PSScheduledJob 완료 False localhost 50 ProcessJob PSScheduledJob 완료 False localhost</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>The following command uses the Format-Table cmdlet to display the Name, ID, and PSBeginTime properties of a scheduled job instance in a table.</source>
          <target state="translated">다음 명령은 Format-table cmdlet를 사용 하 여 테이블에는 예약 된 작업 인스턴스의 이름, ID 및 PSBeginTime 속성을 표시 합니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>PS C:&gt; Get-Job ProcessJob | Format-Table -Property Name, ID, PSBeginTime -Auto</source>
          <target state="translated">PS c: &gt; Get-job ProcessJob | Format-table-속성 이름, ID, PSBeginTime-자동</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Name       Id PSBeginTime</source>
          <target state="translated">이름 Id PSBeginTime</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>ProcessJob 43 11/2/2011 3:00:02 AM ProcessJob 44 11/3/2011 3:00:02 AM ProcessJob 45 11/4/2011 3:00:02 AM ProcessJob 46 11/5/2011 3:00:02 AM ProcessJob 47 11/6/2011 3:00:02 AM ProcessJob 48 11/7/2011 12:00:01 AM ProcessJob 49 11/7/2011 3:00:02 AM ProcessJob 50 11/8/2011 3:00:02 AM</source>
          <target state="translated">ProcessJob 43 11/2/2011 오전 3시: 02 ProcessJob 44 11/3/2011 오전 3시: 02 ProcessJob 45 11/4/2011 오전 3시: 02 ProcessJob 46 11/5/2011 오전 3시: 02 ProcessJob 47 11/6/2011 ProcessJob 48 11/7/2011 오전 3시: 02 오전 12시: 01 ProcessJob 49 11/7/2011 오전 3시: 02 ProcessJob 50 11/8/2011 오전 3시: 02</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>To get the results of an instance of a scheduled job, use the Receive-Job cmdlet.</source>
          <target state="translated">예약된 된 작업 인스턴스 결과 가져오려면 Receive-job cmdlet을 사용 합니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>The following command gets the results of the newest instance of the ProcessJob (ID = 50).</source>
          <target state="translated">다음 명령은 최신는 ProcessJob 인스턴스의 결과 가져옵니다 (ID = 50).</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>PS C:&gt; Receive-Job -ID 50</source>
          <target state="translated">PS c: &gt; Receive-job ID 50</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>--  Basic method for finding job results on disk</source>
          <target state="translated">-디스크에 작업 결과 찾기 위한 기본적인 방법</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>To manage scheduled jobs, use the Job cmdlets, such as Get-Job and Receive-Job.</source>
          <target state="translated">예약 된 작업을 관리 하려면 Job cmdlet의 예: Get-job 및 Receive-job을 사용 합니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>If Get-Job does not get the job instance or Receive-Job does not get the job results, you can search the execution history files for the job on disk.</source>
          <target state="translated">Get-job 작업 인스턴스를 가져오지 않습니다 Receive-job 작업 결과 얻지 못하는 경우에 디스크에는 작업에 대 한 실행 기록 파일을 검색할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>The execution history contains a record of all triggered job instances.</source>
          <target state="translated">실행 기록이 트리거된 작업의 모든 인스턴스에 대 한 레코드를 포함 합니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Verify that there is a timestamp-named directory in the directory for a scheduled job in the following path:</source>
          <target state="translated">다음 경로에 예약된 된 작업에 대 한 디렉터리에 타임 스탬프 라는 디렉터리 인지 확인 합니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>$home\AppData\Local\Microsoft\Windows\PowerShell\ScheduledJob <ph id="ph1">&lt;ScheduledJobName&gt;</ph>\Output</source>
          <target state="translated">$home\AppData\Local\Microsoft\Windows\PowerShell\ScheduledJob <ph id="ph1">&lt;ScheduledJobName&gt;</ph>\Output</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Typically: C:\Users<ph id="ph1">&lt;UserName&gt;</ph>\AppData\Local\Microsoft\Windows\PowerShell\ScheduledJob <ph id="ph2">&lt;ScheduledJobName&gt;</ph>\Output</source>
          <target state="translated">일반적으로: C:\Users<ph id="ph1">&lt;UserName&gt;</ph>\AppData\Local\Microsoft\Windows\PowerShell\ScheduledJob <ph id="ph2">&lt;ScheduledJobName&gt;</ph>\Output</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>For example, the following command gets the on-disk execution history of the ProcessJob scheduled job.</source>
          <target state="translated">예를 들어 다음 명령은 ProcessJob 예약 된 작업의 디스크에 실행 기록을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>PS C:&gt; dir $home\AppData\Local\Microsoft\Windows\PowerShell \ScheduledJobs\ProcessJob\Output</source>
          <target state="translated">PS c: &gt; dir $home\AppData\Local\Microsoft\Windows\PowerShell \ScheduledJobs\ProcessJob\Output</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Directory: C:\Users\User01\AppData\Local\Microsoft\Windows\PowerShell \ScheduledJobs\ProcessJob\Output</source>
          <target state="translated">디렉터리: C:\Users\User01\AppData\Local\Microsoft\Windows\PowerShell \ScheduledJobs\ProcessJob\Output</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Mode                LastWriteTime     Length Name</source>
          <target state="translated">Mode                LastWriteTime     Length Name</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>d----         11/2/2011   3:00 AM            20111102-030002-260 d----         11/3/2011   3:00 AM            20111103-030002-277 d----         11/4/2011   3:00 AM            20111104-030002-209 d----         11/5/2011   3:00 AM            20111105-030002-251 d----         11/6/2011   3:00 AM            20111106-030002-174 d----         11/7/2011  12:00 AM            20111107-000001-914 d----         11/7/2011   3:00 AM            20111107-030002-376</source>
          <target state="translated">d---11/2/2011 오전 3시 20111102-030002-260 d---2011 년 11 월 3 일 오전 3시 20111103-030002-277 d---2011 년 11 월 4 일 오전 3시 20111104-030002-209 d---2011 년 11 월 5 일 오전 3시 251-030002 20111105-d---2011 년 11 월 6 일 오전 3시 20111106-030002-174 d---2011 년 11 월 7 일 오전 12시 20111107-000001-914 d---2011 년 11 월 7 오전 3시 20111107-030002-376</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Each timestamp-named directory represents a job instance.</source>
          <target state="translated">각 타임 스탬프 라는 디렉터리 작업 인스턴스를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>The results of each job instance are saved in a Results.xml file in the timestamp-named directory.</source>
          <target state="translated">각 작업 인스턴스 결과 타임 스탬프 라는 디렉터리에 있는 Results.xml 파일에 저장 됩니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>For example, the following command gets the Results.xml files for every saved instance of the ProcessJob scheduled job.</source>
          <target state="translated">예를 들어 다음 명령은 ProcessJob 예약 된 작업의 저장 된 모든 인스턴스에 대해 Results.xml 파일을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>PS C:&gt; dir $home\AppData\Local\Microsoft\Windows\PowerShell\ScheduledJobs \ProcessJob\Output<ph id="ph1">\*</ph>\Results.xml</source>
          <target state="translated">PS c: &gt; dir $home\AppData\Local\Microsoft\Windows\PowerShell\ScheduledJobs \ProcessJob\Output<ph id="ph1">\*</ph>\Results.xml</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Directory: C:\Users\User01\Appdata\Local\Microsoft\Windows\PowerShell \ScheduledJobs\ProcessJob\Output</source>
          <target state="translated">디렉터리: C:\Users\User01\Appdata\Local\Microsoft\Windows\PowerShell \ScheduledJobs\ProcessJob\Output</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>If the Results.xml file is missing, Windows PowerShell cannot return or display the job results.</source>
          <target state="translated">Results.xml 파일 누락 되 면 Windows PowerShell을 반환 하거나 작업 결과 표시할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>-- The Job cmdlet might not be able to get scheduled job instances or their results because the PSScheduledJob module is not imported into the session.</source>
          <target state="translated">--Job cmdlet PSScheduledJob 모듈을 세션으로 가져오지 않은 때문에 예약 된 작업 인스턴스 또는 해당 결과 얻기 위해 못할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>NOTE:   Before using a Job cmdlet on scheduled job instances, verify that the PSScheduledJob module is included in the session.</source>
          <target state="translated">참고: 예약 된 작업 인스턴스를 Job cmdlet을 사용 하기 전에 확인 PSScheduledJob 모듈의 세션에 포함 되어 있는지 합니다.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Without the module, the Job cmdlets cannot get scheduled job instances or their results.</source>
          <target state="translated">모듈을 하지 않고 작업 cmdlet는 예약 된 작업 인스턴스 또는 해당 결과 가져올 수 없습니다.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>To import the PSScheduledJob module, type:</source>
          <target state="translated">PSScheduledJob 모듈을 가져오려면 다음을 입력 합니다.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Import-Module PSScheduledJob</source>
          <target state="translated">PSScheduledJob 모듈 가져오기</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>-- The Receive-Job cmdlet might already have returned the results in the current session.</source>
          <target state="translated">--Receive-job cmdlet 수 이미 결과에 반환한 현재 세션입니다.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>If Receive-Job does not return job instance results, it might be because a Receive-Job command has been run for that job instance in the current session without the Keep parameter.</source>
          <target state="translated">Receive-job 작업 인스턴스 결과 반환 하지 않으면 경우 Keep 매개 변수 없이 현재 세션에서 Receive-job 명령을 해당 작업 인스턴스에 대 한 실행 때문일 수 있습니다.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>When you use Receive-Job without the Keep parameter, Receive-Job returns the job results and sets the HasMoreData property of the job instance to False to indicate that it returned all of the results for the job instance and has no more results to return.</source>
          <target state="translated">Keep 매개 변수 없이 수신 작업을 사용 하는 경우 작업에서 발생 하 고 작업 인스턴스의 HasMoreData 속성을 나타내는 모든 작업 인스턴스의 결과 반환 하 고 반환할 결과가 더 이상 False로 설정 수신 작업을 반환 합니다.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>This setting is appropriate for standard background jobs, but not for instances of scheduled jobs, which are saved to disk.</source>
          <target state="translated">이 설정은 표준 백그라운드 작업에 적합 하지 않는 저장 되는 예약 된 작업의 인스턴스 디스크에 있습니다.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>To get the job instance results again, start a new Windows PowerShell session (type "PowerShell" without quotation marks), import the PSScheduledJob module, and try the Receive-Job command again.</source>
          <target state="translated">작업 인스턴스 결과 다시 (따옴표 없이 "PowerShell" 유형) 새 Windows PowerShell 세션을 시작, PSScheduledJob 모듈을 가져올를 가져오고 Receive-job 명령을 다시 시도 하십시오.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>PS C:&gt; Receive-Job -ID 50 PS C:&gt;                     #No results PS C:&gt; PowerShell</source>
          <target state="translated">PS c: &gt; Receive-job-ID 50 PS c: &gt; #No 결과 PS &gt; PowerShell</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Windows PowerShell Copyright (C) 2012 Microsoft Corporation.</source>
          <target state="translated">Windows PowerShell Copyright (C) 2012 Microsoft Corporation.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>All rights reserved.</source>
          <target state="translated">All rights reserved.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>PS C:&gt; Import-Module PSScheduledJob PS C:&gt; Receive-Job -ID 50</source>
          <target state="translated">PS c: &gt; Import-module PSScheduledJob PS c: &gt; Receive-job ID 50</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>Handles  NPM(K)    PM(K)      WS(K) VM(M)   CPU(s)     Id ProcessName</source>
          <target state="translated">NPM(K) PM(K) WS(K) VM(M) CPU(s) Id ProcessName 처리</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>1213      33    12348      21676    88    25.71   1608 CcmExec 29       4     1168       2920    43     0.02    748 conhost 46       6     2208       4612    45     0.03   1640 conhost</source>
          <target state="translated">1213 33 12348 21676 88 25.71 1608 CcmExec 29 4 1168 2920 43 0.02 748 conhost 46 6 2208 4612 45 0.03 1640 conhost</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>...</source>
          <target state="translated">...</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>To get the result of a job instance more than one time in a session, use the Keep parameter of the Receive-Job cmdlet.</source>
          <target state="translated">작업 인스턴스 결과 세션에서 한 번을 가져오려면 Receive-job cmdlet의 Keep 매개 변수를 사용 합니다.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>PS C:&gt; Import-Module PSScheduledJob PS C:&gt; Receive-Job -ID 50 -Keep</source>
          <target state="translated">PS c: &gt; Import-module PSScheduledJob PS c: &gt; Receive-job ID 50-유지</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>Handles  NPM(K)    PM(K)      WS(K) VM(M)   CPU(s)     Id ProcessName</source>
          <target state="translated">NPM(K) PM(K) WS(K) VM(M) CPU(s) Id ProcessName 처리</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>1213      33    12348      21676    88    25.71   1608 CcmExec 29       4     1168       2920    43     0.02    748 conhost 46       6     2208       4612    45     0.03   1640 conhost</source>
          <target state="translated">1213 33 12348 21676 88 25.71 1608 CcmExec 29 4 1168 2920 43 0.02 748 conhost 46 6 2208 4612 45 0.03 1640 conhost</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>PS C:&gt; Receive-Job -ID 50 -Keep</source>
          <target state="translated">PS c: &gt; Receive-job ID 50-유지</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>Handles  NPM(K)    PM(K)      WS(K) VM(M)   CPU(s)     Id ProcessName</source>
          <target state="translated">NPM(K) PM(K) WS(K) VM(M) CPU(s) Id ProcessName 처리</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>1213      33    12348      21676    88    25.71   1608 CcmExec 29       4     1168       2920    43     0.02    748 conhost 46       6     2208       4612    45     0.03   1640 conhost</source>
          <target state="translated">1213 33 12348 21676 88 25.71 1608 CcmExec 29 4 1168 2920 43 0.02 748 conhost 46 6 2208 4612 45 0.03 1640 conhost</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>-- The scheduled job might be corrupted.</source>
          <target state="translated">--예약 된 작업 손상 되었을 수 있습니다.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>If a scheduled job becomes corrupted, Windows PowerShell deletes the corrupted scheduled job and its results.</source>
          <target state="translated">예약 된 작업을 손상 된 경우 Windows PowerShell에서 손상 된 예약 된 작업 및 그 결과 삭제 합니다.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>You cannot recover the results of a corrupted scheduled job.</source>
          <target state="translated">손상 된 예약 된 작업의 결과 복구할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>To determine if a scheduled job still exists, use the Get-ScheduledJob cmdlet.</source>
          <target state="translated">예약 된 작업을 아직 있는지를 확인 하려면 Get-scheduledjob cmdlet을 사용 합니다.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>PS C:&gt; Get-ScheduledJob</source>
          <target state="translated">PS c: &gt; Get-scheduledjob</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>-- The number of results might have exceeded the ExecutionHistoryLength of the scheduled job.</source>
          <target state="translated">-예약된 된 작업의 ExecutionHistoryLength 결과의 수를 초과 있을 수 있습니다.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>The ExecutionHistoryLength property of a scheduled job determines how many job instances, and their results, are saved to disk.</source>
          <target state="translated">예약된 된 작업의 ExecutionHistoryLength 속성 작업 인스턴스 개수 및 결과 확인, 저장 된 디스크에 있습니다.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>The default value is 32.</source>
          <target state="translated">기본값은 32입니다.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>When the number of instances of a scheduled job exceeds this value, Windows PowerShell deletes the oldest job instance to make room for each new job instance.</source>
          <target state="translated">예약된 된 작업의 인스턴스 수가이 값을 초과 하는 경우 Windows PowerShell 새 작업 인스턴스 각각에 대 한 공간을 만들기 위해 가장 오래 된 작업 인스턴스를 삭제 합니다.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>To get the value of the ExecutionHistoryLength property of a scheduled job, use the following command format:</source>
          <target state="translated">예약된 된 작업의 ExecutionHistoryLength 속성의 값을 가져오려면 다음 명령 형식을 사용 합니다.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>(Get-ScheduledJob <ph id="ph1">&lt;JobName&gt;</ph>).ExecutionHistoryLength</source>
          <target state="translated">(Get-scheduledjob <ph id="ph1">&lt;JobName&gt;</ph>). ExecutionHistoryLength</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>For example, the following command gets the value of the ExecutionHistoryLength property of the ProcessJob scheduled job.</source>
          <target state="translated">예를 들어 다음 명령은 ProcessJob 예약된 된 작업의 ExecutionHistoryLength 속성의 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>PS C:&gt; (Get-ScheduledJob ProcessJob).ExecutionHistoryLength</source>
          <target state="translated">PS c: &gt; (Get-scheduledjob ProcessJob). ExecutionHistoryLength</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>To set or change the value of the ExecutionHistoryLength property, use the MaxResultCount parameter of the Register-ScheduledJob and Set-ScheduledJob cmdlets.</source>
          <target state="translated">를 설정 하거나 ExecutionHistoryLength 속성의 값을 변경 하려면 Register-scheduledjob 및 Set-scheduledjob cmdlet의 MaxResultCount 매개 변수를 사용 합니다.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>The following command increases the value of the ExecutionHistoryLength property to 50.</source>
          <target state="translated">다음 명령은 50 ExecutionHistoryLength 속성의 값을 증가합니다.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>PS C:&gt; Get-ScheduledJob ProcessJob | Set-ScheduledJob -MaxResultCount 50</source>
          <target state="translated">PS c: &gt; Get-scheduledjob ProcessJob | Set-scheduledjob-MaxResultCount 50</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>-- The job instance results might have been deleted</source>
          <target state="translated">--작업 인스턴스 결과 삭제</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>The ClearExecutionHistory parameter of the Set-ScheduledJob cmdlet deletes the execution history of a job.</source>
          <target state="translated">Set-scheduledjob cmdlet의 ClearExecutionHistory 매개 변수는 작업의 실행 기록을 삭제합니다.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>You can use this feature to free up disk space or delete results that are not needed, or already used, analyzed or saved in a different location.</source>
          <target state="translated">디스크 공간을 확보 하거나은 없는 필요 또는 이미 사용 되는, 분석 또는 다른 위치에 저장 하는 결과 삭제 하려면이 기능을 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>To delete the execution history of a scheduled job, use the ClearExecutionHistory parameter of the scheduled job.</source>
          <target state="translated">예약된 된 작업의 ClearExecutionHistory 매개 변수를 사용 하는 예약 된 작업의 실행 기록을 삭제 합니다.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>The following command deletes the execution history of the ProcessJob scheduled job.</source>
          <target state="translated">다음 명령은 ProcessJob 예약 된 작업의 실행 기록을 삭제 합니다.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>PS C:&gt; Get-ScheduledJob ProcessJob | Set-ScheduledJob -ClearExecutionHistory</source>
          <target state="translated">PS c: &gt; Get-scheduledjob ProcessJob | Set-scheduledjob ClearExecutionHistory</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>Also, the Remove-Job cmdlet deletes job results.</source>
          <target state="translated">또한 Remove-job cmdlet 작업 결과 삭제합니다.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>When you use Remove-Job to delete a scheduled job, it deletes all instances of the job on disk, including the execution history and all job results.</source>
          <target state="translated">Remove-job를 사용 하 여 예약된 된 작업을 삭제 하는 작업 실행 기록과 모든 작업 결과 포함 하 여 디스크의 모든 인스턴스를 삭제 합니다.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>-- Jobs started by using the Start-Job cmdlet are not saved to disk.</source>
          <target state="translated">-Start-job cmdlet을 사용 하 여 시작 된 작업은 저장 되지 않습니다 디스크에 있습니다.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>When you use Start-Job to start a scheduled job, instead of using a job trigger, Start-Job starts a standard background job.</source>
          <target state="translated">작업 트리거를 사용 하는 대신 예약 된 작업을 시작 하려면 시작 작업을 사용할 때 Start-job 표준 백그라운드 작업을 시작 합니다.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>The background job and its results are not stored in the execution history of the job on disk.</source>
          <target state="translated">백그라운드 작업 및 그 결과 디스크에 있는 작업 실행 기록에 저장 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>You can use the Get-Job cmdlet to get the job and the Receive-Job cmdlet to get the job results, but the results are available only until you receive them, unless you use the Keep parameter of the Receive-Job cmdlet.</source>
          <target state="translated">작업 및 작업 결과를 얻으려면 Receive-job cmdlet을 가져오는 Get-job cmdlet을 사용할 수 있지만 결과 사용할 수를 받을 때까지 Receive-job cmdlet의 Keep 매개 변수를 사용 하지 않는 경우.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>Also, background jobs and their results are session-specific; they exist only in the session in which they are created.</source>
          <target state="translated">또한, 백그라운드 작업 및 그 결과 세션으로 적용 됩니다. 생성 되는 세션에만 존재 합니다.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>If you delete the job (Remove-Job), close the session or close Windows PowerShell, the job instance and its results are deleted.</source>
          <target state="translated">작업 (Job)을 삭제 하면 세션 닫거나 닫기 Windows PowerShell, 작업 인스턴스 및 그 결과 삭제 됩니다.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>SCHEDULED JOB DOES NOT RUN</source>
          <target state="translated">예약 된 작업이 실행 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>-- Scheduled jobs do not run automatically if the job triggers or the scheduled job are disabled.</source>
          <target state="translated">-예약 된 작업에서 예약 된 작업 또는 작업 트리거를 해제 하면 자동으로 실행 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>Use the Get-ScheduledJob cmdlet to get the scheduled job.</source>
          <target state="translated">Get-scheduledjob cmdlet을 사용 하 여 예약 된 작업을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>Verify that the value of the Enabled property of the scheduled job is True ($true).</source>
          <target state="translated">예약된 된 작업의 Enabled 속성의 값이 True ($true) 인지 확인 합니다.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>PS C:&gt; Get-ScheduledJob ProcessJob</source>
          <target state="translated">PS c: &gt; Get-scheduledjob ProcessJob</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>Id         Name            Triggers        Command         Enabled</source>
          <target state="translated">Id 이름 트리거 명령 사용</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>4          ProcessJob      {1, 2}          Get-Process     True</source>
          <target state="translated">{1, 2} 4 ProcessJob Get-process True</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>PS C:&gt; (Get-ScheduledJob ProcessJob).Enabled True</source>
          <target state="translated">PS c: &gt; (Get-scheduledjob ProcessJob). True 사용</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>Use the Get-JobTrigger cmdlet to get the job triggers of the scheduled job.</source>
          <target state="translated">Get-jobtrigger cmdlet을 사용 하 여 예약된 된 작업의 작업 트리거를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>Verify that the value of the Enabled property of the job trigger is True ($true)</source>
          <target state="translated">작업 트리거의 Enabled 속성의 값이 True ($true) 인지 확인</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>PS C:&gt; Get-ScheduledJob ProcessJob | Get-JobTrigger</source>
          <target state="translated">PS c: &gt; Get-scheduledjob ProcessJob | Get-jobtrigger</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>Id         Frequency       Time                   DaysOfWeek              Enabled</source>
          <target state="translated">Id 주파수 시간 DaysOfWeek 사용</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>1          Weekly          11/7/2011 5:00:00 AM   {Monday, Thursday}      True 2          Daily           11/7/2011 3:00:00 PM                           True</source>
          <target state="translated">1 주 11/7/2011 5시: 00 AM {월요일, 목요일} True 2 매일 11/7/2011 오후 3시: 00 True</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>PS C:&gt; Get-ScheduledJob ProcessJob | Get-JobTrigger | Format-Table ID, Enabled -Auto</source>
          <target state="translated">PS c: &gt; Get-scheduledjob ProcessJob | Get-jobtrigger | 형식 테이블 ID, 사용-자동</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>Id Enabled</source>
          <target state="translated">Id를 사용 하도록 설정</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>1    True 2    True</source>
          <target state="translated">1 2 true True</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>-- Scheduled jobs do not run automatically if the job triggers are invalid.</source>
          <target state="translated">-예약 된 작업의 작업 트리거 유효 하지 않은 경우에 자동으로 실행 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>For example, a job trigger might specify a date in the past or a date that does not occur, such as the 5th Monday of the month.</source>
          <target state="translated">예를 들어 과거에서 날짜 또는 날짜를 월 5 일 월요일 같은 발생 하지 않습니다 작업 트리거 지정할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>-- Scheduled jobs do not run automatically if the conditions of the job trigger or the job options are not satisfied.</source>
          <target state="translated">-예약 된 작업의 작업 트리거 또는 작업 옵션 조건을 만족 하지 않으면 자동으로 실행 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>For example, a scheduled job that runs only when a particular user logs on to the computer will not run if that user does not log on or only connects remotely.</source>
          <target state="translated">예를 들어 특정 사용자 컴퓨터에 로그온 하는 경우에 실행 되는 예약 된 작업에 로그온 하지 않으면 사용자나만 원격으로 연결 하는 경우에 실행 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>Examine the options of the scheduled job and make sure that they are satisfied.</source>
          <target state="translated">예약된 된 작업 옵션을 확인 하 고 만족 하는지 확인 합니다.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>For example, a scheduled job that requires that the computer be idle or requires a network connection, or has a long IdleDuration or a brief IdleTimeout might never run.</source>
          <target state="translated">예를 들어 컴퓨터 되도록 요구 하는 예약 된 작업은 네트워크 연결이 필요 또는 긴 IdleDuration가 유휴 상태 또는 간단한 IdleTimeout 실행 되지 않을 수 있습니다.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>Use the Get-ScheduledJobOption cmdlet to examine the job options and their values.</source>
          <target state="translated">작업 옵션 및 해당 값을 검사 하려면 Get-scheduledjoboption cmdlet을 사용 합니다.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>PS C:&gt; Get-ScheduledJob -Name ProcessJob</source>
          <target state="translated">PS c: &gt; Get-scheduledjob-ProcessJob 이름 지정</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>StartIfOnBatteries     : False StopIfGoingOnBatteries : True WakeToRun              : True StartIfNotIdle         : True StopIfGoingOffIdle     : False RestartOnIdleResume    : False IdleDuration           : 00:10:00 IdleTimeout            : 01:00:00 ShowInTaskScheduler    : True RunElevated            : False RunWithoutNetwork      : True DoNotAllowDemandStart  : False MultipleInstancePolicy : IgnoreNew JobDefinition          : Microsoft.PowerShell.ScheduledJob.ScheduledJobDefinition</source>
          <target state="translated">StartIfOnBatteries: False StopIfGoingOnBatteries: WakeToRun True: StartIfNotIdle True: StopIfGoingOffIdle True: False RestartOnIdleResume: False IdleDuration: IdleTimeout 00시 10분: 00: 01시: 00 ShowInTaskScheduler: True RunElevated: False RunWithoutNetwork: DoNotAllowDemandStart True: False MultipleInstancePolicy: IgnoreNew JobDefinition: Microsoft.PowerShell.ScheduledJob.ScheduledJobDefinition</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>For descriptions of the scheduled job options, see the help topic for the New-ScheduledJobOption cmdlet (http://go.microsoft.com/fwlink/?LinkID=223919).</source>
          <target state="translated">예약 된 작업 옵션의 설명은 New-scheduledjoboption cmdlet (http://go.microsoft.com/fwlink/?LinkID=223919)에 대 한 도움말 항목을 참조 하십시오.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>-- The scheduled job instance might have failed.</source>
          <target state="translated">--예약 된 작업 인스턴스 실패 했을 수 있습니다.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>If a scheduled job command fails, Windows PowerShell reports it immediately by generating an error message.</source>
          <target state="translated">예약 된 작업 명령이 실패 하면 Windows PowerShell 바로 하 여 보고 오류 메시지를 생성 합니다.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>However, if the job fails when Task Scheduler tries to run it, the error is not available to Windows PowerShell.</source>
          <target state="translated">그러나 작업 스케줄러가 실행하려고 할 때 작업이 실패한 경우 Windows PowerShell에서 오류를 사용할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>Use the following methods to detect and correct job failures.</source>
          <target state="translated">다음 메서드를 사용 하 여 검색 하 고 작업 오류를 수정 합니다.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>-- Check the Task Scheduler event log for errors.</source>
          <target state="translated">--작업 스케줄러 이벤트 로그에서 오류를 확인 합니다.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>To check the log, use Event Viewer or a Windows PowerShell command such as the following:</source>
          <target state="translated">로그를 확인 하려면 이벤트 뷰어 또는 다음과 같은 Windows PowerShell 명령을 사용 합니다.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>Get-WinEvent -LogName Microsoft-Windows-TaskScheduler/Operational | Where {$_.Message -like "fail"}</source>
          <target state="translated">Get-winevent-LogName Microsoft-Windows-TaskScheduler/Operational | 여기서 {$_입니다. "실패"와 같은 message}</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>-- Check the job record in Task Scheduler.</source>
          <target state="translated">--작업 스케줄러의 작업 레코드를 확인 합니다.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>Windows PowerShell scheduled jobs are stored in the following Task Scheduled folder:</source>
          <target state="translated">Windows PowerShell 예약 된 작업은 다음 예약 된 작업 폴더에 저장 됩니다.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>Task Scheduler Library\Microsoft\Windows\PowerShell\ScheduledJobs</source>
          <target state="translated">작업 스케줄러 Library\Microsoft\Windows\PowerShell\ScheduledJobs</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>-- The scheduled job might not run because of insuffienct permission.</source>
          <target state="translated">--예약 된 작업 insuffienct 권한으로 인해 실행 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>Scheduled jobs run with the permissions of the user who created the job or the permissions of the user who is specified by the Credential parameter in the Register-ScheduledJob or Set-ScheduledJob command.</source>
          <target state="translated">예약 된 작업의 작업을 만든 사용자의 권한 또는 Register-scheduledjob 또는 Set-scheduledjob 명령에 Credential 매개 변수로 지정 된 사용자의 권한으로 실행 합니다.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>If that user does not have permission to run the commands or scripts, the job fails.</source>
          <target state="translated">해당 사용자에 명령 또는 스크립트를 실행할 수 있는 권한이 없는 경우 작업이 실패 합니다.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>CANNOT GET SCHEDULED JOB : SCHEDULED JOB IS CORRUPTED</source>
          <target state="translated">예약 수 없는 작업: 예약 된 작업은 손상</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>On rare occasions, scheduled jobs can become corrupted or contain internal contradictions that cannot be resolved.</source>
          <target state="translated">경우에 따라 예약 된 작업 손상 될 수 있습니다 하거나 확인할 수 없는 내부 모순이 포함 합니다.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source>Typically, this happens when the XML files for the scheduled job are manually edited, resulting in invalid XML.</source>
          <target state="translated">일반적으로이 예외는 예약 된 작업에 대 한 XML 파일을 수동으로 편집 잘못 된 xml에서 결과입니다.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source>When a scheduled job is corrupted, Windows PowerShell attempts to delete the scheduled job, its execution history, and its results from disk.</source>
          <target state="translated">예약 된 작업을 손상 된 경우 Windows PowerShell에서는 디스크에서 예약된 된 작업, 실행 기록 및 결과 삭제 하려고 합니다.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source>If it cannot remove the scheduled job, you will get a corrupted job error message each time you run the Get-ScheduledJob cmdlet.</source>
          <target state="translated">예약된 된 작업을 제거할 수 없습니다 Get-scheduledjob cmdlet을 실행할 때마다 손상된 작업 오류 메시지를 가져올 됩니다.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source>To remove a corrupted scheduled job, use either one of the following methods.</source>
          <target state="translated">손상 된 예약 된 작업을 제거 하려면 다음 방법 중 하나를 사용 합니다.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source>-- Delete the <ph id="ph1">&lt;ScheduledJobName&gt;</ph> directory for the scheduled job.</source>
          <target state="translated">--삭제 된 <ph id="ph1">&lt;ScheduledJobName&gt;</ph> 예약된 된 작업에 대 한 디렉터리입니다.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source>Do not delete the ScheduledJob directory.</source>
          <target state="translated">ScheduledJob 디렉터리를 삭제 하지 마십시오.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve">
          <source>The directory is located at $env:UserProfile\AppData\Local\Microsoft\Windows\PowerShell \ScheduledJobs</source>
          <target state="translated">디렉터리는 $env: UserProfile\AppData\Local\Microsoft\Windows\PowerShell \ScheduledJobs</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source>Typically: C:\Users<ph id="ph1">&lt;UserName&gt;</ph>\AppData\Local\Microsoft\Windows\PowerShell \ScheduledJobs<ph id="ph2">&lt;ScheduledJobName&gt;</ph>.</source>
          <target state="translated">일반적으로: C:\Users<ph id="ph1">&lt;UserName&gt;</ph>\AppData\Local\Microsoft\Windows\PowerShell \ScheduledJobs<ph id="ph2">&lt;ScheduledJobName&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source>-- Use Task Scheduler to delete the scheduled job.</source>
          <target state="translated">-예약 된 작업을 삭제 하려면 작업 스케줄러를 사용 합니다.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source>Windows PowerShell scheduled tasks appear in the following Task Scheduler path:</source>
          <target state="translated">Windows PowerShell 예약 된 작업은 다음 작업 스케줄러 경로에 표시 됩니다.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve">
          <source>Task Scheduler Library\Microsoft\Windows\PowerShell\ScheduledJobs</source>
          <target state="translated">작업 스케줄러 Library\Microsoft\Windows\PowerShell\ScheduledJobs</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve">
          <source>-- JOB CMDLETS CANNOT CONSISTENTLY FIND SCHEDULED JOBS</source>
          <target state="translated">-JOB CMDLET 예약 된 작업을 일관 되 게 찾을 수 없습니다.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve">
          <source>When the PSScheduledJob module is not in the current session, the Job cmdlets cannot get scheduled jobs, start them, or get their results.</source>
          <target state="translated">PSScheduledJob 모듈은 현재 세션에 없을 때 Job cmdlet 예약 된 작업 가져오기,를 시작 하거나 가져올 수 없습니다 그 결과입니다.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve">
          <source>To import the PSScheduledJob module, type "Import-Module PSScheduledJob" or run or get any cmdlet in the module, such as the Get-ScheduledJob cmdlet.</source>
          <target state="translated">PSScheduledJob 모듈을 가져오려면 "PSScheduledJob 모듈 가져오기"를 입력 하거나 실행 또는 Get-scheduledjob cmdlet와 같은 모듈에서 cmdlet을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve">
          <source>Beginning in Windows PowerShell 3.0, modules are imported automatically when you get or use any cmdlet in the module.</source>
          <target state="translated">Windows PowerShell 3.0 부터는 모듈을 가져올 자동으로 가져오거나 모듈에서 cmdlet을 사용 하는 경우.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve">
          <source>When the PSScheduledJob cmdlet is not in the current session, the following command sequence is possible.</source>
          <target state="translated">PSScheduledJob cmdlet은 현재 세션에 없을 때에 다음 명령 시퀀스 불가능 합니다.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve">
          <source>PS C:&gt; Get-Job ProcessJob</source>
          <target state="translated">PS c: &gt; Get-job ProcessJob</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve">
          <source>Get-Job : The command cannot find the job because the job name ProcessJob was not found.</source>
          <target state="translated">Get-job:이 명령은 없어 찾을 수 없습니다 작업을 작업 이름을 ProcessJob 찾을 수 없습니다.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve">
          <source>Verify the value of the Name parameter, and then try the command again.</source>
          <target state="translated">Name 매개 변수 값을 확인 하 고 명령을 다시 시도 합니다.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve">
          <source>CategoryInfo          : ObjectNotFound: (ProcessJob:String) [Get-Job], PSArgumentException</source>
          <target state="translated">CategoryInfo: ObjectNotFound: (ProcessJob:String) [Get-job] PSArgumentException</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve">
          <source>FullyQualifiedErrorId : JobWithSpecifiedNameNotFound,Microsoft.PowerShell.</source>
          <target state="translated">FullyQualifiedErrorId: JobWithSpecifiedNameNotFound,Microsoft.PowerShell 합니다.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve">
          <source>Commands.GetJobCommand</source>
          <target state="translated">Commands.GetJobCommand</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve">
          <source>PS C:&gt; Get-Job PS C:&gt; Get-ScheduledJob ProcessJob</source>
          <target state="translated">PS c: &gt; Get-job PS c: &gt; Get-scheduledjob ProcessJob</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve">
          <source>Id         Name            Triggers        Command      Enabled</source>
          <target state="translated">Id 이름 트리거 명령 사용</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve">
          <source>4          ProcessJob      {1}             Get-Process  True</source>
          <target state="translated">4 ProcessJob \ {1 \ Get-process True</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve">
          <source>PS C:&gt; Get-Job ProcessJob</source>
          <target state="translated">PS c: &gt; Get-job ProcessJob</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve">
          <source>Id     Name         PSJobTypeName   State       HasMoreData     Location</source>
          <target state="translated">Id 이름 PSJobTypeName 상태 HasMoreData 위치</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve">
          <source>43     ProcessJob   PSScheduledJob  Completed   True            localhost 44     ProcessJob   PSScheduledJob  Completed   True            localhost 45     ProcessJob   PSScheduledJob  Completed   True            localhost 46     ProcessJob   PSScheduledJob  Completed   True            localhost 47     ProcessJob   PSScheduledJob  Completed   True            localhost 48     ProcessJob   PSScheduledJob  Completed   True            localhost 49     ProcessJob   PSScheduledJob  Completed   True            localhost 50     ProcessJob   PSScheduledJob  Completed   True            localhost</source>
          <target state="translated">43 ProcessJob PSScheduledJob 완료 True localhost 44 ProcessJob PSScheduledJob 완료 True localhost 45 ProcessJob PSScheduledJob 완료 True localhost 46 ProcessJob PSScheduledJob 완료 True localhost 47 ProcessJob PSScheduledJob 완료 True localhost 48 ProcessJob PSScheduledJob 완료 True localhost 49 ProcessJob PSScheduledJob 완료 True localhost 50 ProcessJob PSScheduledJob 완료 True localhost</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve">
          <source>This behavior occurs because the Get-ScheduledJob command automatically imports the PSScheduledJob module, and then runs the command.</source>
          <target state="translated">이 동작은 Get-scheduledjob 명령을 자동으로 PSScheduledJob 모듈을 가져오고 다음 명령을 실행 하기 때문에 발생 합니다.</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve">
          <source>SEE ALSO</source>
          <target state="translated">참고 항목</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve">
          <source>about_Scheduled_Jobs about_Scheduled_Jobs_Basics about_Scheduled_Jobs_Advanced</source>
          <target state="translated">about_Scheduled_Jobs about_Scheduled_Jobs_Basics about_Scheduled_Jobs_Advanced</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>