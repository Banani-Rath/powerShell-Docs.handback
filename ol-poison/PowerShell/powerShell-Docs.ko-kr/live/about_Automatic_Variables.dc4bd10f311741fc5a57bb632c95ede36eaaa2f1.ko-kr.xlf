<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ko-kr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-1c394fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">24035e735a7777e9b14ba02236bb4d25078cbd6b</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">reference\4.0\Microsoft.PowerShell.Core\About\about_Automatic_Variables.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions" />
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">a2bfea9dbc2122c75071b91be049cf56f5a5231c</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ac51d372fdcb5db1813c2b80569d01f27093e8cf</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>about_Automatic_Variables</source>
          <target state="translated">about_Automatic_Variables</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>powershell, cmdlet</source>
          <target state="translated">powershell cmdlet</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>About Automatic Variables</source>
          <target state="translated">자동 변수에 대 한</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>about_Automatic_Variables</source>
          <target state="translated">about_Automatic_Variables</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>about_Automatic_Variables</source>
          <target state="translated">about_Automatic_Variables</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>SHORT DESCRIPTION</source>
          <target state="translated">간단한 설명</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Describes variables that store state information for  Windows PowerShell�.</source>
          <target state="translated">Windows PowerShell에 대 한 상태 정보를 저장 하는 변수를 설명 합니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>These variables are created and maintained by  Windows PowerShell.</source>
          <target state="translated">이러한 변수는 생성 및 Windows PowerShell에서 유지 관리 됩니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>LONG DESCRIPTION</source>
          <target state="translated">자세한 설명</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Here is a list of the automatic variables in  Windows PowerShell:</source>
          <target state="translated">Windows PowerShell에서 자동 변수 목록은 다음과 같습니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Contains the last token in the last line received by the session.</source>
          <target state="translated">세션에서 수신 하는 마지막 줄에서 마지막 토큰을 포함 합니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>$?</source>
          <target state="translated">$?</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Contains the execution status of the last operation.</source>
          <target state="translated">마지막 작업의 실행 상태를 포함합니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>It contains TRUE if the last operation succeeded and FALSE if it failed.</source>
          <target state="translated">실패 한 경우 마지막 작업이 성공한 경우 TRUE 및 FALSE 포함 됩니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Contains the first token in the last line received by the session.</source>
          <target state="translated">세션에서 수신 하는 마지막 줄에서 첫 번째 토큰에 포함 되어 있습니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>$_</source>
          <target state="translated">$_</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Same as $PSItem.</source>
          <target state="translated">$PSItem와 동일 합니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Contains the current object in the pipeline object.</source>
          <target state="translated">파이프라인 개체의 현재 개체를 포함합니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>You can use this variable in commands that perform an action on every object or on selected objects in a pipeline.</source>
          <target state="translated">이 변수는 파이프라인에서 선택한 개체 또는 모든 개체에 작업을 수행 하는 명령에 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>$ARGS</source>
          <target state="translated">$ARGS</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Contains an array of the undeclared parameters and<ph id="ph1">\/</ph>or parameter values that are passed to a function, script, or script block.</source>
          <target state="translated">선언 되지 않은 매개 변수 배열을 포함 하 고<ph id="ph1">\/</ph>또는 함수, 스크립트 또는 스크립트 블록에 전달 되는 매개 변수 값입니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>When you create a function, you can declare the parameters by using the param keyword or by adding a comma-separated list of parameters in parentheses after the function name.</source>
          <target state="translated">함수를 만들 때 param 키워드를 사용 하 여 또는 함수 이름 뒤 괄호 안에 쉼표로 구분 된 목록이 매개 변수를 추가 하 여 매개 변수를 선언할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>In an event action, the $Args variable contains objects that represent the event arguments of the event that is being processed.</source>
          <target state="translated">이벤트의 작업을 $Args 변수는 처리 중인 이벤트의 이벤트 인수를 나타내는 개체를 포함 합니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>This variable is populated only within the Action block of an event registration command.</source>
          <target state="translated">이 변수는 이벤트 등록 명령을 작업 블록 내 에서만 채워집니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>The value of this variable can also be found in the SourceArgs property of the PSEventArgs object (System.Management.Automation.PSEventArgs) that Get-Event returns.</source>
          <target state="translated">이 변수의 값 Get-event 반환 하는 PSEventArgs 개체 (System.Management.Automation.PSEventArgs)의 SourceArgs 속성에서 찾을 수 있습니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>$CONSOLEFILENAME</source>
          <target state="translated">$CONSOLEFILENAME</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Contains the path of the console file (.psc1) that was most recently used in the session.</source>
          <target state="translated">세션에서 가장 최근에 사용 된 콘솔 파일 (.psc1)의 경로 포함 합니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>This variable is populated when you start  Windows PowerShell with the PSConsoleFile parameter or when you use the Export-Console cmdlet to export snap-in names to a console file.</source>
          <target state="translated">이 변수는 PSConsoleFile 매개 변수 또는 스냅인 이름을 콘솔 파일로 내보낼 Export-console cmdlet을 사용 하면 Windows PowerShell을 시작할 때 채워집니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>When you use the Export-Console cmdlet without parameters, it automatically updates the console file that was most recently used in the session.</source>
          <target state="translated">매개 변수 없이 Export-console cmdlet을 사용 하면 자동으로 세션에서 가장 최근에 사용 된 콘솔 파일을 업데이트 합니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>You can use this automatic variable to determine which file will be updated.</source>
          <target state="translated">파일은 업데이트할지 결정이 자동 변수를 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>$ERROR</source>
          <target state="translated">$ERROR</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Contains an array of error objects that represent the most recent errors.</source>
          <target state="translated">가장 최근 오류를 나타내는 error 개체의 배열을 포함 합니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>The most recent error is the first error object in the array ($Error[0]).</source>
          <target state="translated">가장 최근의 오류 ($Error[0]) 배열에서 첫 번째 오류 개체는.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>To prevent an error from being added to the $Error array, use the ErrorAction common parameter with a value of Ignore.</source>
          <target state="translated">$Error 배열에 추가 되는 오류를 방지 하려면 ErrorAction 일반 매개 변수를 사용 하 여 값이 무시 됩니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>For more information, see about_CommonParameters (http:<ph id="ph1">\/\/</ph>go.microsoft.com<ph id="ph2">\/</ph>fwlink<ph id="ph3">\/</ph>?LinkID<ph id="ph4">\=</ph>113216).</source>
          <target state="translated">자세한 내용은 about_CommonParameters를 참조 하십시오. (http:<ph id="ph1">\/\/</ph>이 포트는 go.microsoft.com<ph id="ph2">\/</ph>fwlink<ph id="ph3">\/</ph>? LinkID<ph id="ph4">\=</ph>113216).</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>$EVENT</source>
          <target state="translated">$EVENT</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Contains a PSEventArgs object that represents the event that is being processed.</source>
          <target state="translated">처리 중인 이벤트를 나타내는 PSEventArgs 개체를 포함 합니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>This variable is populated only within the Action block of an event registration command, such as Register-ObjectEvent.</source>
          <target state="translated">이 변수는 이벤트 등록 명령을 Register-objectevent 같은 작업 블록 내 에서만 채워집니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>The value of this variable is the same object that the Get-Event cmdlet returns.</source>
          <target state="translated">이 변수의 값은 Get-event cmdlet에서 반환 하는 동일한 개체입니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Therefore, you can use the properties of the $Event variable, such as $Event.TimeGenerated , in an Action script block.</source>
          <target state="translated">따라서는 Action 스크립트 블록에서 $Event.TimeGenerated, 같은 $Event 변수의 속성을 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>$EVENTARGS</source>
          <target state="translated">$EVENTARGS</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Contains an object that represents the first event argument that derives from EventArgs of the event that is being processed.</source>
          <target state="translated">처리 중인 이벤트의 EventArgs에서 파생 되는 첫 번째 이벤트 인수를 나타내는 개체를 포함 합니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>This variable is populated only within the Action block of an event registration command.</source>
          <target state="translated">이 변수는 이벤트 등록 명령을 작업 블록 내 에서만 채워집니다.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>The value of this variable can also be found in the SourceEventArgs property  of the PSEventArgs (System.Management.Automation.PSEventArgs) object that Get-Event returns.</source>
          <target state="translated">Get-event 반환 하는 (System.Management.Automation.PSEventArgs) PSEventArgs 개체의 SourceEventArgs 속성에이 변수 값을 찾을 수 있습니다.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>$EVENTSUBSCRIBER</source>
          <target state="translated">$EVENTSUBSCRIBER</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Contains a PSEventSubscriber object that represents the event subscriber of the event that is being processed.</source>
          <target state="translated">처리 중인 이벤트의 이벤트 구독자를 나타내는 PSEventSubscriber 개체를 포함 합니다.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>This variable is populated only within the Action block of an event registration command.</source>
          <target state="translated">이 변수는 이벤트 등록 명령을 작업 블록 내 에서만 채워집니다.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>The value of this variable is the same object that the Get-EventSubscriber cmdlet returns.</source>
          <target state="translated">이 변수의 값은 Get-eventsubscriber cmdlet에서 반환 하는 동일한 개체입니다.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>$EXECUTIONCONTEXT</source>
          <target state="translated">$EXECUTIONCONTEXT</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Contains an EngineIntrinsics object that represents the execution context of the  Windows PowerShell host.</source>
          <target state="translated">Windows PowerShell 호스트의 실행 컨텍스트를 나타내는 EngineIntrinsics 개체를 포함 합니다.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>You can use this variable to find the execution objects that are available to cmdlets.</source>
          <target state="translated">이 변수를 사용 하 여 cmdlet을 사용할 수 있는 실행 개체를 찾을 수 있습니다.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>$FALSE</source>
          <target state="translated">$FALSE</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Contains FALSE.</source>
          <target state="translated">FALSE를 포함합니다.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>You can use this variable to represent FALSE in commands and scripts instead of using the string "false".</source>
          <target state="translated">이 변수는 명령 및 문자열 "false"를 사용 하는 대신 스크립트에서 FALSE를 나타내는 데 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>The string can be interpreted as TRUE if it is converted to a non-empty string or to a non-zero integer.</source>
          <target state="translated">0이 아닌 정수 또는 비어 있지 않은 문자열로 변환 된 경우 TRUE로 문자열을 해석할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>$FOREACH</source>
          <target state="translated">$FOREACH</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Contains the enumerator (not the resulting values) of a ForEach loop.</source>
          <target state="translated">ForEach 루프의 열거자 (결과 값이 아닌)를 포함합니다.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>You can use the properties and methods of enumerators on the value of the $ForEach variable.</source>
          <target state="translated">$ForEach 변수의 값에서 열거자의 메서드와 속성을 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>This variable exists only while the ForEach loop is running; it is deleted after the loop is completed.</source>
          <target state="translated">이 변수는 ForEach 루프; 실행 하는 동안에 존재 루프가 완료 된 후 삭제 됩니다.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>For detailed information, see about_ForEach.</source>
          <target state="translated">자세한 내용은 about_ForEach를 참조 하십시오.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>$HOME</source>
          <target state="translated">$HOME</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>Contains the full path of the user's home directory.</source>
          <target state="translated">사용자의 홈 디렉터리의 전체 경로 포함합니다.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>This variable is the equivalent of the %homedrive%%homepath% environment variables, typically C:\Users<ph id="ph1">\&lt;</ph>UserName&gt;.</source>
          <target state="translated">이 변수는 해당 하는 %homedrive% %homepath% 환경 변수, 일반적으로 C:\Users<ph id="ph1">\&lt;</ph>사용자 이름 &gt;.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>$HOST</source>
          <target state="translated">$HOST</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>Contains an object that represents the current host application for  Windows PowerShell.</source>
          <target state="translated">Windows PowerShell에 대 한 현재 호스트 응용 프로그램을 나타내는 개체를 포함 합니다.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>You can use this variable to represent the current host in commands or to display or change the properties of the host, such as $Host.version or $Host.CurrentCulture, or $host.ui.rawui.setbackgroundcolor("Red").</source>
          <target state="translated">명령에서 현재 호스트를 나타내는 또는 표시 하거나 $Host.version 또는 $Host.CurrentCulture, $host.ui.rawui.setbackgroundcolor("Red") 같은 호스트의 속성을 변경 하려면이 변수를 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>$INPUT</source>
          <target state="translated">$INPUT</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>Contains an enumerator that enumerates all input that is passed to a function.</source>
          <target state="translated">함수에 전달 되는 모든 입력을 열거 하는 열거자를 포함 합니다.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>The $input variable is available only to functions and script blocks (which are unnamed functions).</source>
          <target state="translated">$Input 변수는 함수 및 스크립트 블록에만 사용할 수 (조각인 함수 이름을 지정 하지 않는).</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>In the Process block of a function, the $input variable enumerates the object that is currently in the pipeline.</source>
          <target state="translated">함수의 Process 블록을 $input 변수는 현재 파이프라인에 있는 개체를 열거 합니다.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>When the Process block  completes, there are no objects left in the pipeline, so the $input variable enumerates an empty collection.</source>
          <target state="translated">Process 블록에 완료 되 면 파이프라인에 남아 있는 $input 변수는 빈 컬렉션을 열거 하도록 없는 개체가 있습니다.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>If the function does not have a Process block, then in the End block, the $input variable enumerates the collection of all input to the function.</source>
          <target state="translated">함수는 Process 블록에 없는 경우 다음 End 블록의 $input 변수 컬렉션을 열거의 모든 함수에 입력 합니다.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>$LASTEXITCODE</source>
          <target state="translated">$LASTEXITCODE</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>Contains the exit code of the last Windows-based program that was run.</source>
          <target state="translated">실행 된 마지막 Windows 기반 프로그램의 종료 코드를 포함 합니다.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>$MATCHES</source>
          <target state="translated">$MATCHES</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>The $Matches variable works with the -match and -notmatch operators.</source>
          <target state="translated">$Matches 변수-일치 하 고-notmatch 연산자와 함께 작동합니다.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>When you submit scalar input to the -match or -notmatch operator, and either one detects a match, they return a Boolean value and populate the $Matches automatic variable with a hash table of any string values that were matched.</source>
          <target state="translated">-또는-notmatch 일치 연산자 및 각 입력 스칼라 제출할 때 하나에 일치 하는 검색, 부울 값을 반환 하며 일치 된 모든 문자열 값의 해시 테이블을 사용 하 여 $Matches 자동 변수를 채웁니다.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>For more information about the -match operator, see about_comparison_operators.</source>
          <target state="translated">자세한 내용은 참조 about_comparison_operators,-match 연산자에 대 한 합니다.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>$MYINVOCATION</source>
          <target state="translated">$MYINVOCATION</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>Contains an information about the current command, such as the name, parameters, parameter values, and information about how the command was started, called, or "invoked," such as the name of the script that called the current command.</source>
          <target state="translated">이름, 매개 변수, 매개 변수 값 및 명령이 시작, 호출 되거나 현재 명령을 호출 하는 스크립트의 이름과 같은 "호출" 하는 방법에 대 한 정보 같은 현재 명령에 대 한 정보가 포함 되어 있습니다.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>$MyInvocation is populated only for scripts, function, and script blocks.</source>
          <target state="translated">$MyInvocation은 스크립트, 함수 및 스크립트 블록에 대해서만 채워집니다.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>You can use the information in the System.Management.Automation.InvocationInfo object that $MyInvocation returns in the current script, such as the path and file name of the script ($MyInvocation.MyCommand.Path) or the name of a function ($MyInvocation.MyCommand.Name) to identify the current command.</source>
          <target state="translated">$MyInvocation ($MyInvocation.MyCommand.Path) 스크립트의 경로 파일 이름 또는 현재 명령을 식별 하는 함수 ($MyInvocation.MyCommand.Name)의 이름과 같은 현재 스크립트에서 반환 하는 System.Management.Automation.InvocationInfo 개체에서 정보를 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>This is particularly useful for finding the name of the current script.</source>
          <target state="translated">현재 스크립트의 이름을 찾는 데 특히 유용 합니다.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>Beginning in  Windows PowerShell 3.0, $MyInvocation has the following new properties.</source>
          <target state="translated">Windows PowerShell 3.0 부터는 $MyInvocation은 다음과 같은 새 속성에 있습니다.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>-- PSScriptRoot: Contains the full path to the script that invoked the current command.</source>
          <target state="translated">-PSScriptRoot: 전체 경로 현재 명령을 호출 하는 스크립트를 포함 합니다.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>The value of this property is populated only when the caller is a script.</source>
          <target state="translated">이 속성의 값은 호출자에 게는 스크립트 하는 경우에 채워집니다.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>-- PSCommandPath: Contains the full path and file name of the script that invoked the current command.</source>
          <target state="translated">-PSCommandPath: 현재 명령을 호출 하는 스크립트의 전체 경로 파일 이름을 포함 합니다.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>The value of this property is populated only when the caller is a script.</source>
          <target state="translated">이 속성의 값은 호출자에 게는 스크립트 하는 경우에 채워집니다.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>Unlike the $PSScriptRoot and $PSCommandPath automatic variables, the PSScriptRoot and PSCommandPath properties of the $MyInvocation automatic variable contain information about the invoker or calling script, not the current script.</source>
          <target state="translated">$PSScriptRoot 및 $PSCommandPath 자동 변수와 달리 $MyInvocation 자동 변수의 PSScriptRoot 및 PSCommandPath 속성 호출자 또는 호출 스크립트로 하지 현재 스크립트에 대 한 정보를 포함 합니다.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>$NESTEDPROMPTLEVEL</source>
          <target state="translated">$NESTEDPROMPTLEVEL</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>Contains the current prompt level.</source>
          <target state="translated">현재 프롬프트 수준을 포함합니다.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>A value of 0 indicates the original prompt level.</source>
          <target state="translated">값이 0에는 원래 프롬프트 수준을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>The value is incremented when you enter a nested level and decremented when you exit it.</source>
          <target state="translated">중첩된 수준 늘어나고 경우를 입력 하면 값이 증가 하기를 종료 합니다.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>For example,  Windows PowerShell presents a nested command prompt when you use the $Host.EnterNestedPrompt method.</source>
          <target state="translated">예를 들어, Windows PowerShell $Host.EnterNestedPrompt 메서드를 사용 하는 경우 중첩 된 명령 프롬프트를 표시 합니다.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>Windows PowerShell also presents a nested command prompt when you reach a breakpoint in the  Windows PowerShell debugger.</source>
          <target state="translated">Windows PowerShell도 Windows PowerShell 디버거는 중단점에 도달 하면 중첩 된 명령 프롬프트를 표시 합니다.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>When you enter a nested prompt,  Windows PowerShell pauses the current command, saves the execution context, and increments the value of the $NestedPromptLevel variable.</source>
          <target state="translated">중첩 된 프롬프트를 입력 하면 Windows PowerShell 현재 명령을 일시 중지, 실행 컨텍스트를 저장 및 $NestedPromptLevel 변수의 값을 증가 시킵니다.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>To create additional nested command prompts (up to 128 levels) or to return to the original command prompt, complete the command, or type "exit".</source>
          <target state="translated">추가 중첩 된 명령 프롬프트 (최대 128 개의 수준)를 만들거나 원래 명령 프롬프트로 돌아가서에서 명령을 완료 하거나 "exit"를 입력 합니다.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>The $NestedPromptLevel variable helps you track the prompt level.</source>
          <target state="translated">$NestedPromptLevel 변수를 사용 하 여 프롬프트 수준을 추적할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>You can create an alternative  Windows PowerShell command prompt that includes this value so that it is always visible.</source>
          <target state="translated">이 항상 표시 되도록이 값을 포함 하는 다른 Windows PowerShell 명령 프롬프트를 만들 수 있습니다.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>$NULL</source>
          <target state="translated">$NULL</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>$null is an automatic variable that contains a NULL or empty value.</source>
          <target state="translated">$null은 NULL이 포함 되어 있는 자동 변수 또는 빈 값입니다.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>You can use this variable to represent an absent or undefined value in commands and scripts.</source>
          <target state="translated">이 변수를 사용 하 여 명령 및 스크립트에는 없거나 정의 되지 않은 값을 나타낼 수 있습니다.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>Windows PowerShell treats $null as an object with a value, that is, as an explicit placeholder, so you can use $null to represent an empty value in a series of values.</source>
          <target state="translated">Windows PowerShell 처리 $null 값, 개체, 즉는 명시적 개체 틀으로 $null 일련의 값에 빈 값을 나타내는 데 사용할 수 있도록 합니다.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>For example, when $null is included in a collection, it is counted as one of the objects.</source>
          <target state="translated">예를 들어 $null 컬렉션에 포함 되어 있는 개체 중 하나로 계산 됩니다.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>If you pipe the $null variable to the ForEach-Object cmdlet, it generates a value for $null, just as it does for the other objects</source>
          <target state="translated">다른 개체와 마찬가지로 $null에 대 한 값을 생성 $null 변수를 Foreach-object cmdlet으로 파이프 하면</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>As a result, you cannot use $null to mean "no parameter value."</source>
          <target state="translated">결과적으로, "매개 변수 값이 없습니다.."의 의미로 $null을 사용할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>A parameter value of $null overrides the default parameter value.</source>
          <target state="translated">$Null의 매개 변수 값을 기본 매개 변수 값을 재정의합니다.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>However, because  Windows PowerShell treats the $null variable as a placeholder, you can use it scripts like the following one, which would not work if $null were ignored.</source>
          <target state="translated">그러나 $null 변수 자리 표시자로 처리 하는 Windows PowerShell, 때문에 사용할 수 있습니다 $null 무시 된 경우 작동 하지 않습니다 하면 다음 예와 같은 스크립트입니다.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>$OFS</source>
          <target state="translated">$OFS</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>$OFS is a special variable that stores a string that you want to use as an output field separator.</source>
          <target state="translated">$OFS에는 출력 필드 구분 기호로 사용 하 여 원하는 문자열을 저장 하는 특수 변수입니다.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>Use this variable when you are converting an array to a string.</source>
          <target state="translated">배열을 문자열로 변환 하는 경우에이 변수를 사용 합니다.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>By default, the value of $OFS is " ", but you can change the value of $OFS in your session, by typing $OFS<ph id="ph1">\=</ph>"<ph id="ph2">&lt;value&gt;</ph>".</source>
          <target state="translated">기본적으로 $OFS의 값은 "", $OFS를 입력 하 여 사용자 세션에서 $OFS의 값을 변경할 수 있지만<ph id="ph1">\=</ph>"<ph id="ph2">&lt;value&gt;</ph>"입니다.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>If you are expecting the default value of " " in your script, module, or configuration output, be careful that the $OFS default value has not been changed elsewhere in your code.</source>
          <target state="translated">기본값을 예상 하는 경우 "" 프로그램 스크립트, 모듈 또는 구성 출력에서 $OFS 기본 값이 변경 되지 않았는지 다른 곳에서 코드에 특히 주의 해야 합니다.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>$PID</source>
          <target state="translated">$PID</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>Contains the process identifier (PID) of the process that is hosting the current  Windows PowerShell session.</source>
          <target state="translated">현재 Windows PowerShell 세션을 호스팅하는 프로세스의 프로세스 식별자 (PID)를 포함 합니다.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>$PROFILE</source>
          <target state="translated">$PROFILE</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>Contains the full path of the  Windows PowerShell profile for the current user and the current host application.</source>
          <target state="translated">현재 사용자와 현재 호스트 응용 프로그램에 대 한 Windows PowerShell 프로필의 전체 경로 포함합니다.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>You can use this variable to represent the profile in commands.</source>
          <target state="translated">명령에서 프로필 표시이 변수를 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>For example, you can use it in a command to determine whether a profile has been created:</source>
          <target state="translated">예를 들어 프로필이 생성 되었는지 여부를 결정 하는 명령에 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>Or, you can use it in a command to create a profile:</source>
          <target state="translated">또는 프로필을 만드는 명령에서 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>You can also use it in a command to open the profile in Notepad:</source>
          <target state="translated">또한 프로 파일을 메모장으로 엽니다 하는 명령에 사용할 수도:</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>$PSBOUNDPARAMETERS</source>
          <target state="translated">$PSBOUNDPARAMETERS</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>Contains a dictionary of the parameters that are passed to a script or function and their current values.</source>
          <target state="translated">스크립트 또는 함수 및 현재 값으로 전달 되는 매개 변수 사전을 포함 되어 있습니다.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>This variable has a value only in a scope where parameters are declared, such as a script or function.</source>
          <target state="translated">이 변수는 범위 매개 변수를 선언 하는 위치에, 스크립트 또는 함수와 같은 값을 갖습니다.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>You can use it to display or change the current values of parameters or to pass parameter values to another script or function.</source>
          <target state="translated">표시 하거나 매개 변수의 현재 값을 변경 하거나 다른 스크립트 또는 함수에 매개 변수 값을 전달 하 여 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>For example:</source>
          <target state="translated">예:</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>$PSCMDLET</source>
          <target state="translated">$PSCMDLET</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>Contains an object that represents the cmdlet or advanced function that is being run.</source>
          <target state="translated">Cmdlet 또는 실행 되는 고급 함수를 나타내는 개체를 포함 합니다.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>You can use the properties and methods of the object in your cmdlet or function code to respond to the conditions of use.</source>
          <target state="translated">사용 조건에 응답 하도록 cmdlet 또는 함수 코드에서 개체의 메서드와 속성을 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>For example, the ParameterSetName property contains the name of the parameter set that is being used, and the ShouldProcess method adds the WhatIf and Confirm parameters to the cmdlet dynamically.</source>
          <target state="translated">예를 들어 ParameterSetName 속성에 사용 되는 매개 변수 집합의 이름을 포함 하 고 ShouldProcess 메서드 WhatIf 및 Confirm 매개 변수를 cmdlet에 동적으로 추가 합니다.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>For more information about the $PSCmdlet automatic variable, see about_Functions_Advanced.</source>
          <target state="translated">$PSCmdlet 자동 변수에 대 한 자세한 내용은 about_Functions_Advanced를 참조 하십시오.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>$PSCOMMANDPATH</source>
          <target state="translated">$PSCOMMANDPATH</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>Contains the full path and file name of the script that is being run.</source>
          <target state="translated">실행 되는 스크립트의 전체 경로 파일 이름을 포함 합니다.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>This variable is valid in all scripts.</source>
          <target state="translated">이 변수는 모든 스크립트에서 유효 합니다.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>$PSCULTURE</source>
          <target state="translated">$PSCULTURE</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>Contains the name of the culture currently in use in the operating system.</source>
          <target state="translated">운영 체제에서 사용 중인 현재 문화권의 이름을 포함합니다.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>The culture determines the display format of items such as numbers, currrency, and dates.</source>
          <target state="translated">Culture에 따라 숫자, currrency, 날짜와 같은 항목의 표시 형식을 결정 합니다.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>This is the value of the System.Globalization.CultureInfo.CurrentCulture.Name property of the system.</source>
          <target state="translated">시스템의 System.Globalization.CultureInfo.CurrentCulture.Name 속성의 값입니다.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>To get the System.Globalization.CultureInfo object for the system, use the Get-Culture cmdlet.</source>
          <target state="translated">시스템에 대 한 System.Globalization.CultureInfo 개체를 가져오려는 Get-culture cmdlet을 사용 합니다.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>$PSDEBUGCONTEXT</source>
          <target state="translated">$PSDEBUGCONTEXT</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>While debugging, this variable contains information about the debugging environment.</source>
          <target state="translated">디버깅 하는 동안이 변수를 사용 하면 디버깅 환경에 대 한 정보가 있습니다.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source>Otherwise, it contains a NULL value.</source>
          <target state="translated">그렇지 않으면 NULL 값을 포함 합니다.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source>As a result, you can use it to indicate whether the debugger has control.</source>
          <target state="translated">결과적으로, 디버거 제어에 있는지 여부를 나타내는 데 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source>When populated, it contains a PsDebugContext object that has Breakpoints and InvocationInfo properties.</source>
          <target state="translated">채워진 중단점 및 InvocationInfo PsDebugContext 개체 포함 속성입니다.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source>The InvocationInfo property has several useful properties, including the Location property.</source>
          <target state="translated">InvocationInfo 속성이 위치 속성을 포함 하는 몇 가지 유용한 속성.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source>The Location property indicates the path of the script that is being debugged.</source>
          <target state="translated">Location 속성 디버깅 하는 스크립트의 경로 나타냅니다.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source>$PSHOME</source>
          <target state="translated">$PSHOME</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve">
          <source>Contains the full path of the installation directory for  Windows PowerShell, typically, %windir%\System32\ Windows PowerShell\v1.0.</source>
          <target state="translated">Windows PowerShell 용 일반적으로 Windows PowerShell\v1.0 %windir%\System32\ 설치 디렉터리의 전체 경로 포함합니다.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source>You can use this variable in the paths of  Windows PowerShell files.</source>
          <target state="translated">Windows PowerShell 파일의 경로에이 변수를 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source>For example, the following command searches the conceptual Help topics for the word "variable":</source>
          <target state="translated">예를 들어 다음 명령은 "변수" 라는 단어에 대 한 개념 도움말 항목을 검색합니다.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source>$PSITEM</source>
          <target state="translated">$PSITEM</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve">
          <source>Same as $_.</source>
          <target state="translated">$_와 동일 합니다.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve">
          <source>Contains the current object in the pipeline object.</source>
          <target state="translated">파이프라인 개체의 현재 개체를 포함합니다.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve">
          <source>You can use this variable in commands that perform an action on every object or on selected objects in a pipeline.</source>
          <target state="translated">이 변수는 파이프라인에서 선택한 개체 또는 모든 개체에 작업을 수행 하는 명령에 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve">
          <source>$PSSCRIPTROOT</source>
          <target state="translated">$PSSCRIPTROOT</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve">
          <source>Contains the directory from which a script is being run.</source>
          <target state="translated">스크립트를 실행 하는 디렉터리를 포함 합니다.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve">
          <source>In  Windows PowerShell 2.0, this variable is valid only in script modules (.psm1).</source>
          <target state="translated">Windows PowerShell 2.0에서이 변수는 스크립트 모듈 (.psm1)에 유효 합니다.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve">
          <source>Beginning in  Windows PowerShell 3.0, it is valid in all scripts.</source>
          <target state="translated">Windows PowerShell 3.0부터는 모든 스크립트 에서입니다.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve">
          <source>$PSSENDERINFO</source>
          <target state="translated">$PSSENDERINFO</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve">
          <source>Contains information about the user who started the PSSession, including  the user identity and the time zone of the originating computer.</source>
          <target state="translated">사용자 id와 원래 컴퓨터의 표준 시간대를 포함 하 여 PSSession을 시작한 사용자에 대 한 정보를 포함 합니다.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve">
          <source>This variable is available only in PSSessions.</source>
          <target state="translated">이 변수는 Pssession에만 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve">
          <source>The $PSSenderInfo variable includes a user-configurable property, ApplicationArguments, which, by default, contains only the $PSVersionTable from the originating session.</source>
          <target state="translated">$PSSenderInfo 변수 ApplicationArguments 기본적으로 원래 세션에서 $PSVersionTable만 포함 하는 사용자 구성 가능 속성을 포함 합니다.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve">
          <source>To add data to the ApplicationArguments property, use the ApplicationArguments parameter of the New-PSSessionOption cmdlet.</source>
          <target state="translated">데이터 ApplicationArguments 속성을 추가 하려면 New-pssessionoption cmdlet의 ApplicationArguments 매개 변수를 사용 합니다.</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve">
          <source>$PSUICULTURE</source>
          <target state="translated">$PSUICULTURE</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve">
          <source>Contains the name of the user interface (UI) culture that is currently in use in the operating system.</source>
          <target state="translated">현재 사용 중인 운영 체제에서 사용자 인터페이스 (UI) 문화권의 이름을 포함 합니다.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve">
          <source>The UI culture determines which text strings are used for user interface elements, such as menus and messages.</source>
          <target state="translated">UI 문화권에 따라 메뉴, 메시지 등의 사용자 인터페이스 요소에 사용되는 텍스트 문자열이 결정됩니다.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve">
          <source>This is the value of the System.Globalization.CultureInfo.CurrentUICulture.Name property of the system.</source>
          <target state="translated">시스템의 System.Globalization.CultureInfo.CurrentUICulture.Name 속성의 값입니다.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve">
          <source>To get the System.Globalization.CultureInfo object for the system, use the Get-UICulture cmdlet.</source>
          <target state="translated">시스템에 대 한 System.Globalization.CultureInfo 개체를 가져오려는 Get-uiculture cmdlet을 사용 합니다.</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve">
          <source>$PSVERSIONTABLE</source>
          <target state="translated">$PSVERSIONTABLE</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve">
          <source>Contains a read-only hash table that displays details about the version of  Windows PowerShell that is running in the current session.</source>
          <target state="translated">현재 세션에서 실행 되는 Windows PowerShell의 버전에 대 한 세부 정보를 표시 하는 읽기 전용 해시 테이블을 포함 합니다.</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve">
          <source>The table includes the following items:</source>
          <target state="translated">테이블에는 다음 항목이 포함 됩니다.</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve">
          <source>$PWD</source>
          <target state="translated">$PWD</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve">
          <source>Contains a path object that represents the full path of the current directory.</source>
          <target state="translated">현재 디렉터리의 전체 경로 나타내는 경로 개체를 포함 합니다.</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve">
          <source>$REPORTERRORSHOWEXCEPTIONCLASS</source>
          <target state="translated">$REPORTERRORSHOWEXCEPTIONCLASS</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve">
          <source>$REPORTERRORSHOWINNEREXCEPTION</source>
          <target state="translated">$REPORTERRORSHOWINNEREXCEPTION</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve">
          <source>$REPORTERRORSHOWSOURCE</source>
          <target state="translated">$REPORTERRORSHOWSOURCE</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve">
          <source>$REPORTERRORSHOWSTACKTRACE</source>
          <target state="translated">$REPORTERRORSHOWSTACKTRACE</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve">
          <source>The "ReportErrorShow" variables are defined in  Windows PowerShell, but they are not implemented.</source>
          <target state="translated">"ReportErrorShow" 변수는 Windows PowerShell에 정의 되어 있지만 구현 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve">
          <source>Get-Variable gets them, but they do not contain valid data.</source>
          <target state="translated">Get-variable를 가져오지만 유효한 데이터를 포함 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve">
          <source>$SENDER</source>
          <target state="translated">$SENDER</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve">
          <source>Contains the object that generated this event.</source>
          <target state="translated">이 이벤트를 생성 하는 개체를 포함 합니다.</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve">
          <source>This variable is populated only within the Action block of an event registration command.</source>
          <target state="translated">이 변수는 이벤트 등록 명령을 작업 블록 내 에서만 채워집니다.</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve">
          <source>The value of this variable can also be found in the Sender property of the PSEventArgs (System.Management.Automation.PSEventArgs) object that Get-Event returns.</source>
          <target state="translated">Get-event 반환 하는 (System.Management.Automation.PSEventArgs) PSEventArgs 개체의 보낸 사람 속성에이 변수 값을 찾을 수 있습니다.</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve">
          <source>$SHELLID</source>
          <target state="translated">$SHELLID</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve">
          <source>Contains the identifier of the current shell.</source>
          <target state="translated">현재 셸의 식별자를 포함 합니다.</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve">
          <source>$STACKTRACE</source>
          <target state="translated">$STACKTRACE</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve">
          <source>Contains a stack trace for the most recent error.</source>
          <target state="translated">가장 최근의 오류에 대 한 스택 추적을 포함합니다.</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve">
          <source>$THIS</source>
          <target state="translated">$가</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve">
          <source>In a script block that defines a script property or script method, the $This variable refers to the object that is being extended.</source>
          <target state="translated">스크립트 속성 또는 스크립트 메서드를 정의 하는 스크립트 블록을이 변수는 $ 확장 되는 개체를 참조 합니다.</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve">
          <source>$TRUE</source>
          <target state="translated">$TRUE</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve">
          <source>Contains TRUE.</source>
          <target state="translated">TRUE를 포함합니다.</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve">
          <source>You can use this variable to represent TRUE in commands and scripts.</source>
          <target state="translated">이 변수를 사용 하 여 명령 및 스크립트에 TRUE를 나타낼 수 있습니다.</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve">
          <source>SEE ALSO</source>
          <target state="translated">참고 항목</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve">
          <source>about_Hash_Tables</source>
          <target state="translated">about_Hash_Tables</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve">
          <source>about_Preference_Variables</source>
          <target state="translated">about_Preference_Variables</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve">
          <source>about_Variables</source>
          <target state="translated">about_Variables</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>