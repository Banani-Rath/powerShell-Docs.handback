<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ko-kr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-56a7a5e" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">56aa32d40d8e5e61f5328d5a373ca5a1bd7ca6e3</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">scripting\getting-started\fundamental\Object-Pipeline.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions" />
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">636b8f0faf48a975f9d312208da4792ff37d16e5</xliffext:olskeletonhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Object Pipeline</source>
          <target state="translated">개체 파이프라인</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>powershell,cmdlet</source>
          <target state="translated">powershell,cmdlet</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Object Pipeline</source>
          <target state="translated">개체 파이프라인</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Pipelines act like a series of connected segments of pipe.</source>
          <target state="translated">파이프라인은 일련의 파이프 세그먼트가 연결된 것처럼 동작합니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Items moving along the pipeline pass through each segment.</source>
          <target state="translated">파이프라인을 따라 이동하는 항목은 각 세그먼트를 통과합니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>To create a pipeline in Windows PowerShell, you connect commands together with the pipe operator "|".</source>
          <target state="translated">Windows PowerShell에서 파이프라인을 만들려면 여러 명령을 파이프 연산자 "|"로 연결합니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>The output of each command is used as input to the next command.</source>
          <target state="translated">그러면 각 명령의 출력이 그 다음 명령의 입력으로 사용됩니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Pipelines are arguably the most valuable concept used in command<ph id="ph1">\-</ph>line interfaces.</source>
          <target state="translated">파이프라인은 명령줄 인터페이스에 사용되는 가장 중요한 개념이라고 할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Properly used, pipelines not only reduce the effort involved in entering complex commands, but also make it easier to see the flow of work in the commands.</source>
          <target state="translated">파이프라인을 올바로 사용하면 복잡한 명령을 보다 쉽게 입력할 수 있을 뿐 아니라 명령의 작업 흐름도 보다 쉽게 확인할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>A related useful characteristic of pipelines is that because they operate on each item separately, you do not have to modify them based on whether you will have zero, one, or many items in the pipeline.</source>
          <target state="translated">또한 파이프라인은 각 항목에 대해 개별적으로 작동하기 때문에 파이프라인에 있는 항목 수에 따라 파이프라인을 수정하지 않아도 된다는 이점이 있습니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Furthermore, each command in a pipeline (called a pipeline element) usually passes its output to the next command in the pipeline item<ph id="ph1">\-</ph>by<ph id="ph2">\-</ph>item.</source>
          <target state="translated">게다가 파이프라인에 있는 각 명령(파이프라인 요소)은 해당 출력을 파이프라인에 있는 다음 명령에 항목 단위로 전달하므로</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>This usually reduces the resource demand of complex commands and allows you to begin getting the output immediately.</source>
          <target state="translated">복잡한 명령의 리소스 수요를 줄이고 출력을 즉시 볼 수 있게 해줍니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>In this chapter, we will describe how the Windows PowerShell pipeline differs from the pipelines of most popular shells, and then demonstrate some basic tools that you can use to help control pipeline output and also to see how the pipeline operates.</source>
          <target state="translated">이 장에서는 Windows PowerShell 파이프라인과 가장 보편적으로 사용되는 셸 파이프라인의 차이점에 대해 설명한 다음 파이프라인 출력을 제어하고 파이프라인의 작동 방법을 확인하는 데 사용할 수 있는 몇 가지 기본 도구를 보여 줍니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>