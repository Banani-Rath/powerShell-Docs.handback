<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ko-kr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-1c394fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">5c3c5b7bdd0e478e8ab19cf67260f8f8c174085a</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">reference\5.0\Microsoft.PowerShell.Utility\Select-String.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions" />
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">c358da2d9d9b8479467113a2de169f81a829340f</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">12fc95fed3a6aee8b0a46b7605518170fe283e9b</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>powershell, cmdlet</source>
          <target state="translated">powershell cmdlet</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Select-String</source>
          <target state="translated">Select-string</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Select-String</source>
          <target state="translated">Select-string</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>SYNOPSIS</source>
          <target state="translated">요약</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Finds text in strings and files.</source>
          <target state="translated">문자열 및 파일에서 텍스트를 찾습니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>SYNTAX</source>
          <target state="translated">구문</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>File (Default)</source>
          <target state="translated">File (기본값)</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Object</source>
          <target state="translated">개체</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>LiteralFile</source>
          <target state="translated">LiteralFile</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>DESCRIPTION</source>
          <target state="translated">설명</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>Select-String<ept id="p1">**</ept> cmdlet searches for text and text patterns in input strings and files.</source>
          <target state="translated"> <bpt id="p1">**</bpt>Select-string<ept id="p1">**</ept> cmdlet 텍스트와 입력된 문자열 및 파일에 텍스트 패턴을 검색 합니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>You can use it like Grep in UNIX and Findstr in Windows.</source>
          <target state="translated">이 cmdlet을 UNIX의 Grep 및 Windows의 Findstr처럼 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>You can type <ph id="ph1">`Select-String`</ph> or its alias, <ph id="ph2">`sls`</ph>.</source>
          <target state="translated">입력할 수 있습니다 <ph id="ph1">`Select-String`</ph> 또는 해당 별칭인 <ph id="ph2">`sls`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Select-String<ept id="p1">**</ept> is based on lines of text.</source>
          <target state="translated"><bpt id="p1">**</bpt>Select-string<ept id="p1">**</ept> 줄의 텍스트를 기반으로 합니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>By default, <bpt id="p1">**</bpt>Select-String<ept id="p1">**</ept> finds the first match in each line and, for each match, it displays the file name, line number, and all text in the line containing the match.</source>
          <target state="translated">기본적으로 <bpt id="p1">**</bpt>Select-string<ept id="p1">**</ept> 일치 항목이 있는 줄에 있는 파일 이름, 줄 번호 및 텍스트를 모두 표시, 각각의 첫 번째 일치 항목이 줄 고, 각각에 대해 일치를 찾습니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>However, you can direct it to detect multiple matches per line, display text before and after the match, or display only a Boolean value (True or False) that indicates whether a match is found.</source>
          <target state="translated">그러나 그 줄에 하나씩 여러 명의 일치 항목을 검색, 일치 항목 앞뒤 텍스트를 표시 하거나 (True 또는 False)는 부울 값만을 표시 하려면 일치 하는 항목이 있는지 여부를 나타내는 리디렉션할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Select-String<ept id="p1">**</ept> uses regular expression matching, but it can also perform a simple match that searches the input for the text that you specify.</source>
          <target state="translated"><bpt id="p1">**</bpt>Select-string<ept id="p1">**</ept> 사용 하 여 정규식 일치 하지만 지정 된 텍스트에 대 한 입력을 검색 하는 단순 일치를 수행할 수도 있습니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Select-String<ept id="p1">**</ept> can display all of the text matches or stop after the first match in each input file.</source>
          <target state="translated"><bpt id="p1">**</bpt>Select-string<ept id="p1">**</ept> 모든 텍스트 결과 표시 하거나 각 입력된 파일에서 첫 번째 일치 항목 뒤 중지할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>It can also display all text that does not match the specified pattern.</source>
          <target state="translated">지정된 패턴과 일치하지 않는 모든 텍스트를 표시할 수도 있습니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>You can also specify that <bpt id="p1">**</bpt>Select-String<ept id="p1">**</ept> should expect a particular character encoding, such as when you are searching files of Unicode text.</source>
          <target state="translated">지정할 수 <bpt id="p1">**</bpt>Select-string<ept id="p1">**</ept> 특정 문자 인코딩을 검색 하는 경우 유니코드 텍스트 파일을 같은 것을 예상 해야 합니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>EXAMPLES</source>
          <target state="translated">예제</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Example 1: Find a case-sensitive match</source>
          <target state="translated">예 1: 대/소문자를 찾기</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>This command performs a case-sensitive match of the text that was piped to the <bpt id="p1">**</bpt>Select-String<ept id="p1">**</ept> command.</source>
          <target state="translated">이 명령으로 파이프 된 텍스트의 대/소문자 구분 일치를 수행 된 <bpt id="p1">**</bpt>Select-string<ept id="p1">**</ept> 명령입니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>As a result, <bpt id="p1">**</bpt>Select-String<ept id="p1">**</ept> finds only "HELLO", because "Hello" does not match.</source>
          <target state="translated">결과적으로, <bpt id="p1">**</bpt>Select-string<ept id="p1">**</ept> 찾습니다만 "HELLO", "Hello" 일치 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Because each of the quoted strings is treated as a line, without the <bpt id="p1">*</bpt>CaseSensitive<ept id="p1">*</ept> parameter, <bpt id="p2">**</bpt>Select-String<ept id="p2">**</ept> would recognize both of the strings as matches.</source>
          <target state="translated">각 따옴표 붙은 문자열 처리 되기 때문에 줄을 하지 않고는 <bpt id="p1">*</bpt>CaseSensitive<ept id="p1">*</ept> 매개 변수를 <bpt id="p2">**</bpt>Select-string<ept id="p2">**</ept> 두 문자열 모두를 일치 항목으로 인식 합니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Example 2: Find matches in XML files only</source>
          <target state="translated">예제 2: XML 파일에만에 일치 항목 찾기</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>This command searches through all files with the .xml file name extension in the current directory and displays the lines in those files that include the string "the the".</source>
          <target state="translated">이 명령은 현재 디렉터리에서 파일 이름 확장명이 .xml인 모든 파일을 검색하고 해당 파일에서 "the the" 문자열이 포함된 줄을 표시합니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Example 3: Find a pattern match</source>
          <target state="translated">예 3: 패턴 일치를 찾기</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>This command searches the Windows PowerShell conceptual Help files (about_*.txt) for information about the use of the at sign (@).</source>
          <target state="translated">이 명령은 Windows PowerShell 개념 도움말 파일(about_*.txt)에서 @ 기호 사용에 대한 정보를 검색합니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>To indicate the path, this command uses the value of the $pshome automatic variable, which stores the path to the Windows PowerShell installation directory.</source>
          <target state="translated">경로를 나타내기 위해 이 명령은 Windows PowerShell 설치 디렉터리 경로를 저장하는 $pshome 자동 변수의 값을 사용합니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>In this example, the command searches the en-US subdirectory, which contains the English (US) language Help files for Windows PowerShell.</source>
          <target state="translated">이 예제에서는 Windows PowerShell에 대한 영어(미국) 언어 도움말 파일이 포함된 en-US 하위 디렉터리를 검색합니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Example 4: Use Select-String in a function</source>
          <target state="translated">예 4: 사용 하 여 Select-string 함수</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>This simple function uses the <bpt id="p1">**</bpt>Select-String<ept id="p1">**</ept> cmdlet to search the Windows PowerShell Help files for a particular string.</source>
          <target state="translated">이 간단한 함수를 사용 하는 <bpt id="p1">**</bpt>Select-string<ept id="p1">**</ept> 특정 문자열에 대 한 Windows PowerShell 도움말 파일을 검색 하는 cmdlet입니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>In this example, the function searches the "en-US" subdirectory for English-United States language files.</source>
          <target state="translated">이 예제에서는 "en-US" 하위 디렉터리에서 영어-미국 언어 파일을 검색합니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>To use the function to find a string, such as "psdrive", type <ph id="ph1">`search-help psdrive`</ph>.</source>
          <target state="translated">함수를 사용 하 여 "psdrive"와 같은 문자열을 찾는 입력 <ph id="ph1">`search-help psdrive`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>To use this function in any Windows PowerShell console, change the path to point to the Windows PowerShell Help files on your system, and then paste the function in your Windows PowerShell profile.</source>
          <target state="translated">Windows PowerShell 콘솔에서 이 함수를 사용하려면 시스템의 Windows PowerShell 도움말 파일을 가리키도록 경로를 변경한 다음 함수를 Windows PowerShell 프로필에 붙여넣습니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Example 5: Search for a string in the Application log</source>
          <target state="translated">예제 5: 응용 프로그램 로그에 문자열 검색</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>This example searches for the string "failed" in the 100 newest events in the Application log in Event Viewer.</source>
          <target state="translated">이 예제에서는 이벤트 뷰어 응용 프로그램 로그의 최신 이벤트 100개에서 문자열 "failed"를 검색합니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>The first command uses the Get-EventLog cmdlet to get the 100 most recent events from the Application event log.</source>
          <target state="translated">첫 번째 명령은 Get-EventLog cmdlet을 사용하여 응용 프로그램 이벤트 로그에서 최신 이벤트 100개를 가져와</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Then it stores the events in the $Events variable.</source>
          <target state="translated">그런 다음 이벤트 $Events 변수에 저장 합니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>The second command uses a pipeline operator (|) to send the objects in the $Events variable to <bpt id="p1">**</bpt>Select-String<ept id="p1">**</ept>.</source>
          <target state="translated">두 번째 명령은를 사용 하 여 파이프라인 연산자 (|)를 $Events 변수에 개체를 보내도록 <bpt id="p1">**</bpt>Select-string<ept id="p1">**</ept>합니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>It uses the <bpt id="p1">*</bpt>InputObject<ept id="p1">*</ept> parameter to represent the input from the $Events variable.</source>
          <target state="translated">사용 하 여는 <bpt id="p1">*</bpt>InputObject<ept id="p1">*</ept> $Events 변수에서 입력을 나타내는 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>The value of the <bpt id="p1">*</bpt>InputObject<ept id="p1">*</ept> parameter is the Message property of each object as it travels through the pipeline.</source>
          <target state="translated">값은 <bpt id="p1">*</bpt>InputObject<ept id="p1">*</ept> 파이프라인을 통해 이동할 때 매개 변수는 각 개체의 메시지 속성입니다.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>The current object is represented by the $_ symbol.</source>
          <target state="translated">현재 개체는 $_ 기호로 표시됩니다.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>As each event arrives in the pipeline, <bpt id="p1">**</bpt>Select-String<ept id="p1">**</ept> searches the value of its Message property for the "failed" string, and then displays any lines that include a match.</source>
          <target state="translated">각 이벤트 파이프라인에 도착 하면 <bpt id="p1">**</bpt>Select-string<ept id="p1">**</ept> "failed" 문자열을 해당 Message 속성의 값을 검색 한 다음 일치 하는 항목을 포함 하는 모든 줄을 표시 합니다.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Example 6: Find a string in subdirectories</source>
          <target state="translated">예제 6: 하위 디렉터리에는 문자열을 찾으려면</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>This command examines all files in the subdirectories of C:\Windows\System32 with the .txt file name extension and searches for the string "Microsoft".</source>
          <target state="translated">이 명령은 C:\Windows\System32의 하위 디렉터리에서 파일 이름 확장명이 .txt인 모든 파일을 검토하여 "Microsoft"라는 문자열을 검색합니다.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">*</bpt>CaseSensitive<ept id="p1">*</ept> parameter indicates that the "M" in "Microsoft" must be capitalized and that the rest of the characters must be lowercase for <bpt id="p2">**</bpt>Select-String<ept id="p2">**</ept> to find a match.</source>
          <target state="translated"> <bpt id="p1">*</bpt>CaseSensitive<ept id="p1">*</ept> 매개 변수를 "Microsoft"에서 "M"을 표시 해야 하 고 나머지 문자는 소문자 여야 나타냅니다 <bpt id="p2">**</bpt>Select-string<ept id="p2">**</ept> 일치 항목을 찾습니다.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Example 7: Find strings that do not match a pattern</source>
          <target state="translated">예제 7: 패턴 일치 하지 않는 문자열 찾기</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>This command finds lines of text in the Process.txt file that do not include the words "idle" or "svchost".</source>
          <target state="translated">이 명령은 Process.txt 파일에서 "idle" 또는 "svchost"라는 단어가 포함되지 않은 텍스트 줄을 찾습니다.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Example 8: Find lines before and after a match</source>
          <target state="translated">예 8: 일치 하는 항목 앞뒤에 줄을 찾아</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>The first command searches the Audit.Log file for the phrase "logon failed."</source>
          <target state="translated">첫 번째 명령은 Audit.Log 파일에서 "logon failed"라는 구를 검색합니다.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>It uses the <bpt id="p1">*</bpt>Context<ept id="p1">*</ept> parameter to capture 2 lines before the match and 3 lines after the match.</source>
          <target state="translated">사용 하 여는 <bpt id="p1">*</bpt>컨텍스트<ept id="p1">*</ept> 매개 변수를 일치 항목 뒤 일치 항목 앞의 2 줄 및 3 줄을 캡처합니다.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>The second command uses the Count property of object arrays to display the number of matches found, in this case, 2.</source>
          <target state="translated">두 번째 명령은 개체 배열의 Count 속성을 사용하여 찾은 일치의 수(이 경우 2)를 표시합니다.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>The third command displays the lines stored in the Context property of the first <bpt id="p1">**</bpt>MatchInfo<ept id="p1">**</ept> object.</source>
          <target state="translated">첫 번째의 컨텍스트 속성에 저장 된 줄을 표시 하는 세 번째 명령은 <bpt id="p1">**</bpt>MatchInfo<ept id="p1">**</ept> 개체입니다.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>It uses array notation to indicate the first match (match 0 in a zero-based array), and it uses the Format-List cmdlet to display the value of the Context property as a list.</source>
          <target state="translated">배열 표기법을 사용 하 여 첫 번째 일치 항목 (일치 항목 0 0부터 시작 하는 배열)을 나타내기 위해를 사용 하 여 Format-list cmdlet 컨텍스트 속성의 값을 목록으로 표시 합니다.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>The output consists of two MatchInfo objects, one for each match detected.</source>
          <target state="translated">출력은 각각 검색된 일치 항목에 해당하는 두 개의 MatchInfo 개체로 구성됩니다.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>The context lines are stored in the Context property of the <bpt id="p1">**</bpt>MatchInfo<ept id="p1">**</ept> object.</source>
          <target state="translated">컨텍스트 줄의 컨텍스트 속성에 저장 되는 <bpt id="p1">**</bpt>MatchInfo<ept id="p1">**</ept> 개체입니다.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>Example 9: Find all pattern matches</source>
          <target state="translated">예 9: 모든 패턴 일치 항목을 찾기</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>This example demonstrates the effect of the <bpt id="p1">*</bpt>AllMatches<ept id="p1">*</ept> parameter of <bpt id="p2">**</bpt>Select-String<ept id="p2">**</ept>.</source>
          <target state="translated">효과 보여 주는이 예제는 <bpt id="p1">*</bpt>AllMatches<ept id="p1">*</ept> 의 매개 변수 <bpt id="p2">**</bpt>Select-string<ept id="p2">**</ept>합니다.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source><bpt id="p1">*</bpt>AllMatches<ept id="p1">*</ept> finds all pattern matches in a line, instead of just finding the first match in each line.</source>
          <target state="translated"><bpt id="p1">*</bpt>AllMatches<ept id="p1">*</ept> 각 줄에서 첫 번째 일치 항목을 찾는 대신 줄에서 모든 패턴 일치 항목을 찾습니다.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>The first command in the example searches the Windows PowerShell conceptual Help files ("about" Help) for instances of the word "transcript".</source>
          <target state="translated">예의 첫 번째 명령은 Windows PowerShell 개념 도움말 파일("about" 도움말)에서 "transcript"라는 단어를 찾습니다.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>The output of the first command is saved in the $A variable.</source>
          <target state="translated">첫 번째 명령의 출력은 $A 변수에 저장 됩니다.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>The second command is identical, except that it uses the <bpt id="p1">*</bpt>AllMatches<ept id="p1">*</ept> parameter.</source>
          <target state="translated">두 번째 명령은 동일 하며, 사용 한다는 점을 제외 하 고는 <bpt id="p1">*</bpt>AllMatches<ept id="p1">*</ept> 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>The output of the second command is saved in the $B variable.</source>
          <target state="translated">두 번째 명령의 출력은 $B 변수에 저장 됩니다.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>When you display the value of the variables, the default display is identical, as shown in the example output.</source>
          <target state="translated">변수 값을 표시하면 기본 표시는 예의 출력에서 보듯이 동일합니다.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>However, the fifth and sixth commands display the value of the Matches property of each object.</source>
          <target state="translated">하지만 다섯 번째 및 여섯 번째 명령은 각 개체의 Matches 속성 값을 표시합니다.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>The Matches property of the first command contains just one match (that is, one <bpt id="p1">**</bpt>System.Text.RegularExpressions.Match<ept id="p1">**</ept> object), whereas the Matches property of the second command contains objects for both of the matches in the line.</source>
          <target state="translated">하나의 일치 항목을 포함 하는 첫 번째 명령의 Matches 속성 (즉, <bpt id="p1">**</bpt>System.Text.RegularExpressions.Match<ept id="p1">**</ept> 개체) 반면 두 번째 명령의 Matches 속성 모두 줄에서 일치 하는 항목에 대 한 개체를 포함 합니다.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>PARAMETERS</source>
          <target state="translated">매개 변수</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>-AllMatches</source>
          <target state="translated">-AllMatches</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>Indicates that the cmdlet searches for more than one match in each line of text.</source>
          <target state="translated">각 텍스트 줄에서 둘 이상의 일치 항목을 검색 하는 cmdlet을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>Without this parameter, <bpt id="p1">**</bpt>Select-String<ept id="p1">**</ept> finds only the first match in each line of text.</source>
          <target state="translated">이 매개 변수가 없으면 <bpt id="p1">**</bpt>Select-string<ept id="p1">**</ept> 텍스트의 각 줄에서 첫 번째 일치 항목을 찾습니다.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>When <bpt id="p1">**</bpt>Select-String<ept id="p1">**</ept> finds more than one match in a line of text, it still emits only one <bpt id="p2">**</bpt>MatchInfo<ept id="p2">**</ept> object for the line, but the Matches property of the object contains all of the matches.</source>
          <target state="translated">때 <bpt id="p1">**</bpt>Select-string<ept id="p1">**</ept> 텍스트 줄에서 일치 하는 파일이 둘 이상 발견, 여전히 내보냅니다 하나만 <bpt id="p2">**</bpt>MatchInfo<ept id="p2">**</ept> 일치 하는 항목의 모든 줄을 하지만 개체의 Matches 속성에 대 한 개체 포함 합니다.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>-CaseSensitive</source>
          <target state="translated">-CaseSensitive</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>Indicates that the cmdlet makes matches case-sensitive.</source>
          <target state="translated">cmdlet를 사용 하면 일치 대/소문자 구분을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>By default, matches are not case-sensitive.</source>
          <target state="translated">기본적으로 일치는 대/소문자를 구분하지 않습니다.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>-Context</source>
          <target state="translated">컨텍스트</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>Captures the specified number of lines before and after the line with the match.</source>
          <target state="translated">일치하는 항목이 있는 줄 앞뒤로 지정된 개수의 줄을 캡처합니다.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>This allows you to view the match in context.</source>
          <target state="translated">이렇게 하면 일치 항목을 컨텍스트에서 볼 수 있습니다.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>If you enter one number as the value of this parameter, that number determines the number of lines captured before and after the match.</source>
          <target state="translated">이 매개 변수 값으로 하나의 숫자를 입력하면 해당 숫자가 일치하는 항목이 있는 줄 앞뒤로 캡처할 줄 수를 결정합니다.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>If you enter two numbers as the value, the first number determines the number of lines before the match and the second number determines the number of lines after the match.</source>
          <target state="translated">값으로 숫자를 두 개 입력하면 첫 번째 숫자는 일치 항목 앞의 줄 수를 결정하고 두 번째 숫자는 일치 항목 뒤의 줄 수를 결정합니다.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>In the default display, lines with a match are indicated by a right angle bracket (ASCII 62) in the first column of the display.</source>
          <target state="translated">기본 표시에서 일치하는 항목이 있는 줄에는 표시의 첫 번째 열에 오른쪽 꺾쇠괄호(ASCII 62)가 표시됩니다.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>Unmarked lines are the context.</source>
          <target state="translated">표시되지 않은 줄은 컨텍스트입니다.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>This parameter does not change the number of objects generated by <bpt id="p1">**</bpt>Select-String<ept id="p1">**</ept>.</source>
          <target state="translated">이 매개 변수에서 생성 된 개체의 수를 변경 되지 않습니다 <bpt id="p1">**</bpt>Select-string<ept id="p1">**</ept>합니다.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Select-String<ept id="p1">**</ept> generates one <bpt id="p2">**</bpt>MatchInfo<ept id="p2">**</ept> (<bpt id="p3">**</bpt>Microsoft.PowerShell.Commands.MatchInfo<ept id="p3">**</ept>) object for each match.</source>
          <target state="translated"><bpt id="p1">**</bpt>Select-string<ept id="p1">**</ept> 생성 <bpt id="p2">**</bpt>MatchInfo<ept id="p2">**</ept> (<bpt id="p3">**</bpt>Microsoft.PowerShell.Commands.MatchInfo<ept id="p3">**</ept>) 각 일치 항목에 대 한 개체입니다.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>The context is stored as an array of strings in the Context property of the object.</source>
          <target state="translated">컨텍스트는 개체의 컨텍스트 속성에 문자열 배열로 저장됩니다.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>When you pipe the output of a <bpt id="p1">**</bpt>Select-String<ept id="p1">**</ept> command to another <bpt id="p2">**</bpt>Select-String<ept id="p2">**</ept> command, the receiving command searches only the text in the matched line (the value of the Line property of the <bpt id="p3">**</bpt>MatchInfo<ept id="p3">**</ept> object), not the text in the context lines.</source>
          <target state="translated">출력을 파이프 하면는 <bpt id="p1">**</bpt>Select-string<ept id="p1">**</ept> 다른 명령을 <bpt id="p2">**</bpt>Select-string<ept id="p2">**</ept> 명령을 받는 명령은 일치 하는 줄의 텍스트만 검색 (의 Line 속성의 값은 <bpt id="p3">**</bpt>MatchInfo<ept id="p3">**</ept> 개체), 컨텍스트 줄에 있는 텍스트가 아니라 합니다.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>As a result, the <bpt id="p1">*</bpt>Context<ept id="p1">*</ept> parameter is not valid on the receiving <bpt id="p2">**</bpt>Select-String<ept id="p2">**</ept> command.</source>
          <target state="translated">결과적으로 <bpt id="p1">*</bpt>컨텍스트<ept id="p1">*</ept> 에 매개 변수가 올바르지 <bpt id="p2">**</bpt>Select-string<ept id="p2">**</ept> 명령입니다.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>When the context includes a match, the <bpt id="p1">**</bpt>MatchInfo<ept id="p1">**</ept> object for each match includes all of the context lines, but the overlapping lines appear only once in the display.</source>
          <target state="translated">컨텍스트에 일치 하는 항목을 포함 하는 경우는 <bpt id="p1">**</bpt>MatchInfo<ept id="p1">**</ept> 각 일치 항목에는 모든 컨텍스트 라인이 포함 되지만 디스플레이에 중복 된 줄은 한 번만 나타날에 대 한 개체입니다.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>-Encoding</source>
          <target state="translated">인코딩</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>Specifies the character encoding that <bpt id="p1">**</bpt>Select-String<ept id="p1">**</ept> should assume when searching the file.</source>
          <target state="translated">문자 인코딩을 지정 <bpt id="p1">**</bpt>Select-string<ept id="p1">**</ept> 파일을 검색할 때 가정해 야 합니다.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>The default is UTF8.</source>
          <target state="translated">기본값은 UTF8입니다.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>The acceptable values for this parameter are:</source>
          <target state="translated">이 매개 변수에 허용되는 값은 다음과 같습니다.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>Unicode</source>
          <target state="translated">유니코드</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>UTF7</source>
          <target state="translated">UTF7</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>UTF8</source>
          <target state="translated">UTF8</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>UTF32</source>
          <target state="translated">UTF32</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>ASCII</source>
          <target state="translated">ASCII</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>BigEndianUnicode</source>
          <target state="translated">BigEndianUnicode</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>Default</source>
          <target state="translated">Default</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>OEM</source>
          <target state="translated">OEM</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>Default is the encoding of the system's current ANSI code page.</source>
          <target state="translated">기본값은 시스템의 현재 ANSI 코드 페이지의 인코딩입니다.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>OEM is the current original equipment manufacturer code page identifier for the operating system.</source>
          <target state="translated">OEM은 운영 체제에 대 한 현재 주문자 코드 페이지 식별자입니다.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>-Exclude</source>
          <target state="translated">-제외</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>Specifies an array of items that the cmdlet excludes from the operation.</source>
          <target state="translated">Cmdlet이 작업을 제외 하는 항목의 배열을 지정 합니다.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>The value of this parameter qualifies the <bpt id="p1">*</bpt>Path<ept id="p1">*</ept> parameter.</source>
          <target state="translated">이 매개 변수 값 한정 된 <bpt id="p1">*</bpt>경로<ept id="p1">*</ept> 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>Enter a path element or pattern, such as *.txt.</source>
          <target state="translated">경로 요소 또는 *.txt 등의 패턴을 입력 합니다.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>Wildcards are permitted.</source>
          <target state="translated">와일드카드가 지원됩니다.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>-Include</source>
          <target state="translated">-포함</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>Specifies an array of items that the cmdlet uses in the operation.</source>
          <target state="translated">작업에서 cmdlet을 사용 하는 항목의 배열을 지정 합니다.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>The value of this parameter qualifies the <bpt id="p1">*</bpt>Path<ept id="p1">*</ept> parameter.</source>
          <target state="translated">이 매개 변수 값 한정 된 <bpt id="p1">*</bpt>경로<ept id="p1">*</ept> 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>Enter a path element or pattern, such as *.txt.</source>
          <target state="translated">경로 요소 또는 *.txt 등의 패턴을 입력 합니다.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>Wildcards are permitted.</source>
          <target state="translated">와일드카드가 지원됩니다.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>-InputObject</source>
          <target state="translated">-InputObject</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>Specifies the text to be searched.</source>
          <target state="translated">검색할 텍스트를 지정합니다.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>Enter a variable that contains the text, or type a command or expression that gets the text.</source>
          <target state="translated">텍스트가 포함된 변수를 입력하거나 텍스트를 가져오는 명령 또는 식을 입력하세요.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>Using the <bpt id="p1">*</bpt>InputObject<ept id="p1">*</ept> parameter is not the same as piping strings to <bpt id="p2">**</bpt>Select-String<ept id="p2">**</ept>.</source>
          <target state="translated">사용 하는 <bpt id="p1">*</bpt>InputObject<ept id="p1">*</ept> 매개 변수는 같지는 않습니다 파이핑 문자열을 <bpt id="p2">**</bpt>Select-string<ept id="p2">**</ept>합니다.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>The differences are as follows:</source>
          <target state="translated">차이점은 다음과 같습니다.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>When you pipe more than one string (a collection) to <bpt id="p1">**</bpt>Select-String<ept id="p1">**</ept>, <bpt id="p2">**</bpt>Select-String<ept id="p2">**</ept> searches for the specified text in each string and returns each string that contains the search text.</source>
          <target state="translated">둘 이상의 문자열 (컬렉션)에 파이프 하면 <bpt id="p1">**</bpt>Select-string<ept id="p1">**</ept>, <bpt id="p2">**</bpt>Select-string<ept id="p2">**</ept> 각 문자열에서 지정 된 텍스트를 검색 하 고 검색 텍스트가 포함 된 각 문자열을 반환 합니다.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>When you use the <bpt id="p1">*</bpt>InputObject<ept id="p1">*</ept> parameter to submit a collection of strings, <bpt id="p2">**</bpt>Select-String<ept id="p2">**</ept> treats the collection as a single combined string and returns the strings as a unit if it finds the search text in any string.</source>
          <target state="translated">사용 하는 경우는 <bpt id="p1">*</bpt>InputObject<ept id="p1">*</ept> 매개 변수는 문자열 컬렉션을 제출 하려면 <bpt id="p2">**</bpt>Select-string<ept id="p2">**</ept> 문자열을 결합 하 고 검색 텍스트 문자열에서 발견 되 면 하나의 단위로 문자열을 반환 하는 단일 컬렉션을 처리 합니다.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>-List</source>
          <target state="translated">-목록</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>Indicates that the cmdlet returns only the first match in each input file.</source>
          <target state="translated">Cmdlet은 각 입력된 파일에서 첫 번째 일치 항목을 반환 하는 것을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>By default, <bpt id="p1">**</bpt>Select-String<ept id="p1">**</ept> returns a <bpt id="p2">**</bpt>MatchInfo<ept id="p2">**</ept> object for each match it finds.</source>
          <target state="translated">기본적으로 <bpt id="p1">**</bpt>Select-string<ept id="p1">**</ept> 반환는 <bpt id="p2">**</bpt>MatchInfo<ept id="p2">**</ept> 개체 각각에 대해 발견 된 일치 항목입니다.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>-LiteralPath</source>
          <target state="translated">-LiteralPath</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>Specifies the path to the files to be searched.</source>
          <target state="translated">검색할 파일의 경로를 지정합니다.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>Unlike <bpt id="p1">**</bpt>Path<ept id="p1">**</ept>, the value of the <bpt id="p2">**</bpt>LiteralPath<ept id="p2">**</ept> parameter is used exactly as it is typed.</source>
          <target state="translated">와 달리 <bpt id="p1">**</bpt>경로<ept id="p1">**</ept>, 의 값은 <bpt id="p2">**</bpt>LiteralPath<ept id="p2">**</ept> 매개 변수는 입력 된 대로 정확 하 게 사용 합니다.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>No characters are interpreted as wildcards.</source>
          <target state="translated">어떠한 문자도 와일드카드로 해석되지 않습니다.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>If the path includes escape characters, enclose it in single quotation marks.</source>
          <target state="translated">이스케이프 문자가 포함된 경로는 작은따옴표로 묶으세요.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>Single quotation marks tell Windows PowerShell not to interpret any characters as escape sequences.</source>
          <target state="translated">작은따옴표는 Windows PowerShell이 어떤 문자도 이스케이프 시퀀스로 해석하지 않도록 지시합니다.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>-NotMatch</source>
          <target state="translated">-NotMatch</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>Indicates that the cmdlet finds text that does not match the specified pattern.</source>
          <target state="translated">Cmdlet은 지정된 된 패턴과 일치 하지 않는 텍스트를 찾아 있는지를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>-Path</source>
          <target state="translated">-Path</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>Specifies the path to the files to search.</source>
          <target state="translated">검색할 파일의 경로를 지정 합니다.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>Wildcards are permitted.</source>
          <target state="translated">와일드카드가 지원됩니다.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>The default location is the local directory.</source>
          <target state="translated">기본 위치는 로컬 디렉터리입니다.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>Specify files in the directory, such as log1.txt, <bpt id="p1">*</bpt>.doc, or <ept id="p1">*</ept>.*.</source>
          <target state="translated">Log1.txt와 같은 디렉터리에 파일을 지정 <bpt id="p1">*</bpt>.doc 또는 <ept id="p1">*</ept>. *.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>If you specify only a directory, the command fails.</source>
          <target state="translated">디렉터리만 지정하면 명령이 실패합니다.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>-Pattern</source>
          <target state="translated">-패턴</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>Specifies the text to find.</source>
          <target state="translated">찾을 텍스트를 지정합니다.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>Type a string or regular expression.</source>
          <target state="translated">문자열 또는 정규식을 입력합니다.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>If you type a string, use the <bpt id="p1">*</bpt>SimpleMatch<ept id="p1">*</ept> parameter.</source>
          <target state="translated">사용 하 여 문자열을 입력 하는 경우는 <bpt id="p1">*</bpt>SimpleMatch<ept id="p1">*</ept> 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source>To learn about regular expressions, see about_Regular_Expressions.</source>
          <target state="translated">정규식에 대한 자세한 내용을 보려면 about_Regular_Expressions를 참조하세요.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source>-Quiet</source>
          <target state="translated">-자동</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source>Indicates that the cmdlet returns a Boolean value (True or False), instead of a <bpt id="p1">**</bpt>MatchInfo<ept id="p1">**</ept> object.</source>
          <target state="translated">Cmdlet는 부울 값 (True 또는 False)를 반환 하도록 대신 나타냅니다는 <bpt id="p1">**</bpt>MatchInfo<ept id="p1">**</ept> 개체입니다.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source>The value is True if the pattern is found; otherwise, the value is False.</source>
          <target state="translated">값이 True 패턴이 발견 되 고, 그렇지 않으면 값은 False입니다.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source>-SimpleMatch</source>
          <target state="translated">-SimpleMatch</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source>Indicates that the cmdlet uses a simple match rather than a regular expression match.</source>
          <target state="translated">정규식 일치를 사용 하는 것이 아니라 단순 일치 하는 cmdlet을 사용 함을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve">
          <source>In a simple match, <bpt id="p1">**</bpt>Select-String<ept id="p1">**</ept> searches the input for the text in the <bpt id="p2">*</bpt>Pattern<ept id="p2">*</ept> parameter.</source>
          <target state="translated">단순 일치에 <bpt id="p1">**</bpt>Select-string<ept id="p1">**</ept> 검색 텍스트에 대 한 입력은 <bpt id="p2">*</bpt>패턴<ept id="p2">*</ept> 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source>It does not interpret the value of the <bpt id="p1">*</bpt>Pattern<ept id="p1">*</ept> parameter as a regular expression statement.</source>
          <target state="translated">값을 해석 하지는 않습니다는 <bpt id="p1">*</bpt>패턴<ept id="p1">*</ept> 정규식 문으로 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source>CommonParameters</source>
          <target state="translated">CommonParameters</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source>This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutVariable, -OutBuffer, -PipelineVariable, -Verbose, -WarningAction, and -WarningVariable.</source>
          <target state="translated">이 cmdlet은 공통 매개 변수:-디버그,-ErrorAction,-ErrorVariable,-InformationAction,-InformationVariable,-OutVariable,-OutBuffer,-PipelineVariable,-Verbose,-WarningAction 및-warningvariable을 지원 합니다.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve">
          <source>For more information, see about_CommonParameters (http://go.microsoft.com/fwlink/?LinkID=113216).</source>
          <target state="translated">자세한 내용은 about_CommonParameters (http://go.microsoft.com/fwlink/?LinkID=113216)를 참조 합니다.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve">
          <source>INPUTS</source>
          <target state="translated">입력</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve">
          <source>System.Management.Automation.PSObject</source>
          <target state="translated">System.Management.Automation.PSObject</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve">
          <source>You can pipe any object that has a ToString method to <bpt id="p1">**</bpt>Select-String<ept id="p1">**</ept>.</source>
          <target state="translated">ToString 메서드를가 있는 모든 개체를 파이프할 수 <bpt id="p1">**</bpt>Select-string<ept id="p1">**</ept>합니다.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve">
          <source>OUTPUTS</source>
          <target state="translated">출력</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve">
          <source>Microsoft.PowerShell.Commands.MatchInfo or System.Boolean</source>
          <target state="translated">Microsoft.PowerShell.Commands.MatchInfo 또는 System.Boolean</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve">
          <source>By default, the output is a set of <bpt id="p1">**</bpt>MatchInfo<ept id="p1">**</ept> objects, one for each match found.</source>
          <target state="translated">기본적으로 출력은 집합이 <bpt id="p1">**</bpt>MatchInfo<ept id="p1">**</ept> 개체, 찾은 각 일치 항목에 대 한 합니다.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve">
          <source>If you use the <bpt id="p1">*</bpt>Quiet<ept id="p1">*</ept> parameter, the output is a Boolean value indicating whether the pattern was found.</source>
          <target state="translated">사용 하는 경우는 <bpt id="p1">*</bpt>Quiet<ept id="p1">*</ept> 매개 변수, 출력은 패턴을 찾았는지 여부를 나타내는 부울 값입니다.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve">
          <source>NOTES</source>
          <target state="translated">참고 사항</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Select-String<ept id="p1">**</ept> is like the Grep command in UNIX and the FindStr command in Windows.</source>
          <target state="translated"><bpt id="p1">**</bpt>Select-string<ept id="p1">**</ept> UNIX의 Grep 명령 및 Windows의 FindStr 명령과 비슷합니다.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>sst<ept id="p1">**</ept> alias for the <bpt id="p2">**</bpt>Select-String<ept id="p2">**</ept> cmdlet was introduced in Windows PowerShell 3.0.</source>
          <target state="translated"> <bpt id="p1">**</bpt>sst<ept id="p1">**</ept> 별칭을 <bpt id="p2">**</bpt>Select-string<ept id="p2">**</ept> cmdlet은 Windows PowerShell 3.0에서 도입 되었습니다.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve">
          <source>To use <bpt id="p1">**</bpt>Select-String<ept id="p1">**</ept>, type the text that you want to find as the value of the <bpt id="p2">*</bpt>Pattern<ept id="p2">*</ept> parameter.</source>
          <target state="translated">사용 하 여 <bpt id="p1">**</bpt>Select-string<ept id="p1">**</ept>, 의 값으로 찾을 텍스트를 입력는 <bpt id="p2">*</bpt>패턴<ept id="p2">*</ept> 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve">
          <source>To specify the text to be searched, do the following:</source>
          <target state="translated">검색할 텍스트를 지정하려면 다음을 수행합니다.</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve">
          <source>Type the text in a quoted string, and then pipe it to <bpt id="p1">**</bpt>Select-String<ept id="p1">**</ept>.</source>
          <target state="translated">따옴표 붙은 문자열에 텍스트를 입력 한 다음에 파이프 <bpt id="p1">**</bpt>Select-string<ept id="p1">**</ept>합니다.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve">
          <source>Store a text string in a variable, and then specify the variable as the value of the <bpt id="p1">*</bpt>InputObject<ept id="p1">*</ept> parameter.</source>
          <target state="translated">텍스트 문자열을 변수에 저장 한 후의 값으로 변수를 지정 된 <bpt id="p1">*</bpt>InputObject<ept id="p1">*</ept> 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve">
          <source>If the text is stored in files, use the <bpt id="p1">*</bpt>Path<ept id="p1">*</ept> parameter to specify the path to the files.</source>
          <target state="translated">사용 하 여 텍스트 파일에 저장 된 경우는 <bpt id="p1">*</bpt>경로<ept id="p1">*</ept> 매개 변수는 파일의 경로를 지정할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve">
          <source>By default, <bpt id="p1">**</bpt>Select-String<ept id="p1">**</ept> interprets the value of the <bpt id="p2">*</bpt>Pattern<ept id="p2">*</ept> parameter as a regular expression.</source>
          <target state="translated">기본적으로 <bpt id="p1">**</bpt>Select-string<ept id="p1">**</ept> 값을 해석 하는 <bpt id="p2">*</bpt>패턴<ept id="p2">*</ept> 정규식으로 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve">
          <source>(For more information, see about_Regular_Expressions.) However, you can use the <bpt id="p1">*</bpt>SimpleMatch<ept id="p1">*</ept> parameter to override the regular expression matching.</source>
          <target state="translated">자세한 내용은 about_Regular_Expressions를 참조하세요. 그러나 사용할 수는 <bpt id="p1">*</bpt>SimpleMatch<ept id="p1">*</ept> 정규식 일치를 재정의 하는 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">*</bpt>SimpleMatch<ept id="p1">*</ept> parameter finds instances of the value of the <bpt id="p2">*</bpt>Pattern<ept id="p2">*</ept> parameter in the input.</source>
          <target state="translated"> <bpt id="p1">*</bpt>SimpleMatch<ept id="p1">*</ept> 매개 변수 값의 인스턴스를 찾고는 <bpt id="p2">*</bpt>패턴<ept id="p2">*</ept> 입력에 대 한 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve">
          <source>The default output of <bpt id="p1">**</bpt>Select-String<ept id="p1">**</ept> is a <bpt id="p2">**</bpt>MatchInfo<ept id="p2">**</ept> object, which includes detailed information about the matches.</source>
          <target state="translated">기본 출력 <bpt id="p1">**</bpt>Select-string<ept id="p1">**</ept> 는 <bpt id="p2">**</bpt>MatchInfo<ept id="p2">**</ept> 일치 하는 항목에 대 한 자세한 정보를 포함 하는 개체입니다.</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve">
          <source>The information in the object is useful when you are searching for text in files, because <bpt id="p1">**</bpt>MatchInfo<ept id="p1">**</ept> objects have properties such as Filename and Line.</source>
          <target state="translated">개체의 정보 되므로 유용 파일에서 텍스트를 검색할 때 <bpt id="p1">**</bpt>MatchInfo<ept id="p1">**</ept> 개체에는 Filename 및 Line 등 속성이 있습니다.</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve">
          <source>When the input is not from the file, the value of these parameters is InputStream.</source>
          <target state="translated">입력이 파일에서 이러한 매개 변수 값은 입력 스트림이 합니다.</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve">
          <source>If you do not need the information in the <bpt id="p1">**</bpt>MatchInfo<ept id="p1">**</ept> object, use the <bpt id="p2">*</bpt>Quiet<ept id="p2">*</ept> parameter, which returns a Boolean value (True or False) to indicate whether it found a match, instead of a <bpt id="p3">**</bpt>MatchInfo<ept id="p3">**</ept> object.</source>
          <target state="translated">정보는 필요 하지 않은 경우는 <bpt id="p1">**</bpt>MatchInfo<ept id="p1">**</ept> 개체를 사용 하 여는 <bpt id="p2">*</bpt>Quiet<ept id="p2">*</ept> 대신 (True 또는 False)를 일치 하는 항목을 찾을 수 있는지 여부를 나타내는 부울 값을 반환 하는 매개 변수는 <bpt id="p3">**</bpt>MatchInfo<ept id="p3">**</ept> 개체입니다.</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve">
          <source>When matching phrases, <bpt id="p1">**</bpt>Select-String<ept id="p1">**</ept> uses the current culture that is set for the system.</source>
          <target state="translated">구 일치 시킬 때 <bpt id="p1">**</bpt>Select-string<ept id="p1">**</ept> 시스템에 대해 설정 된 현재 문화권을 사용 합니다.</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve">
          <source>To find the current culture, use the Get-Culture cmdlet.</source>
          <target state="translated">현재 문화권을 찾으려면 Get-culture cmdlet을 사용 합니다.</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve">
          <source>To find the properties of a <bpt id="p1">**</bpt>MatchInfo<ept id="p1">**</ept> object, type the following:</source>
          <target state="translated">속성을 찾기 위해는 <bpt id="p1">**</bpt>MatchInfo<ept id="p1">**</ept> 개체에 다음을 입력 합니다.</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve">
          <source>RELATED LINKS</source>
          <target state="translated">관련된 링크</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve">
          <source>about_Comparison_Operators</source>
          <target state="translated">about_comparison_operators</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve">
          <source>about_Regular_Expressions</source>
          <target state="translated">about_Regular_Expressions</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>