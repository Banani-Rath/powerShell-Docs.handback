<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ko-kr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-1c394fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">a99c4288aba49f39cab8a0e2d09b982dacb6db64</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">reference\4.0\Microsoft.PowerShell.Core\About\about_PSSessions.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions" />
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">edb900f713e679fba69c56041795ca20b8ef5aae</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ace5129ffa0be1cd47d1a6ba00239ff7b303a4b5</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>about_PSSessions</source>
          <target state="translated">about_PSSessions</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>powershell, cmdlet</source>
          <target state="translated">powershell cmdlet</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>About PSSessions</source>
          <target state="translated">Pssession에 대 한</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>about_PSSessions</source>
          <target state="translated">about_PSSessions</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>about_PSSessions</source>
          <target state="translated">about_PSSessions</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>SHORT DESCRIPTION</source>
          <target state="translated">간단한 설명</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Describes  Windows PowerShell� sessions (PSSessions) and explains how to establish a persistent connection to a remote computer.</source>
          <target state="translated">Windows PowerShell 세션 (Pssession) 및 원격 컴퓨터에 영구 연결을 설정 하는 방법을 설명 합니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>LONG DESCRIPTION</source>
          <target state="translated">자세한 설명</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>To run  Windows PowerShell commands on a remote computer, you can use the ComputerName parameter of a cmdlet, or you can create a  Windows PowerShell session (PSSession) and run commands in the PSSession.</source>
          <target state="translated">원격 컴퓨터에서 Windows PowerShell 명령을 실행 하는 cmdlet의 ComputerName 매개 변수를 사용 하거나 Windows PowerShell 세션 (PSSession)을 만들고 PSSession에서 명령을 실행할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>When you create a PSSession,  Windows PowerShell establishes a persistent connection to the remote computer.</source>
          <target state="translated">PSSession을 만들 때 Windows PowerShell 원격 컴퓨터에 영구 연결을 설정 합니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Use a PSSession to run a series of related commands on a remote computer.</source>
          <target state="translated">원격 컴퓨터에서 일련의 관련된 명령 실행 하려면 PSSession을 사용 합니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Commands that run in the same PSSession can share data, such as the values of variables, aliases, and functions.</source>
          <target state="translated">동일한 PSSession에서 실행 되는 명령 변수, 별칭 및 함수의 값과 같은 데이터를 공유할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>You can also create a PSSession on the local computer and run commands in it.</source>
          <target state="translated">로컬 컴퓨터에 PSSession을 만들 수 있고 것에서 명령을 실행할 수도 있습니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>A local PSSession uses the  Windows PowerShell remoting infrastructure to create and maintain the PSSession.</source>
          <target state="translated">로컬 PSSession은 Windows PowerShell 원격 인프라를 사용 하 여 만들고 PSSession을 유지 관리 합니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Beginning in  Windows PowerShell 3.0, PSSessions are independent of the sessions in which they are created.</source>
          <target state="translated">Windows PowerShell 3.0 부터는 Pssession은 생성 된 세션의 독립적입니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Active PSSessions are maintained on the remote computer (or the computer at the remote end or "server-side" of the connection).</source>
          <target state="translated">원격 컴퓨터 (또는 "서버 쪽" 연결의 원격 끝에 컴퓨터)에 대 한 활성 Pssession 유지 됩니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>As a result, you can disconnect from the PSSession and reconnect to it at a later time from the same computer or from a different computer.</source>
          <target state="translated">결과적으로 PSSession에서 연결을 끊을 수 있으며 동일한 컴퓨터 또는 다른 컴퓨터에서 나중에에 다시 연결.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>This topic explains how to create, use, get, and delete PSSessions.</source>
          <target state="translated">이 항목에서는 사용 하 여, get, 만들고, Pssession을 삭제 하는 방법을 설명 합니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>For more advanced information, see about_PSSession_Details.</source>
          <target state="translated">고급 내용은 about_PSSession_Details를 참조 하십시오.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Note: PSSessions use the Windows PowerShell remoting infrastructure.</source>
          <target state="translated">참고: Pssession은 Windows PowerShell 원격 인프라를 사용 합니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>To use PSSessions, the local and remote computers must be configured for remoting.</source>
          <target state="translated">Pssession을 사용 하려면 원격 서비스에 대 한 로컬 및 원격 컴퓨터를 구성 합니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>For more information, see about_Remote_Requirements.</source>
          <target state="translated">자세한 내용은 about_Remote_Requirements를 참조하세요.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>In Windows Vista and later versions of Windows, to create a PSSession on a local computer, you must start  Windows PowerShell with the "Run as administrator" option.</source>
          <target state="translated">Windows Vista 및 이후 버전의 Windows에서 PSSession을 만들려면 로컬 컴퓨터에서 PowerShell을 시작 해야 Windows "관리자 권한으로 실행" 옵션을 사용 합니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>WHAT IS A SESSION?</source>
          <target state="translated">세션 이란?</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>A session is an environment in which  Windows PowerShell runs.</source>
          <target state="translated">세션에는 Windows PowerShell 실행 환경입니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Each time you start  Windows PowerShell, a session is created for you, and you can run commands in the session.</source>
          <target state="translated">Windows PowerShell을 시작할 때마다 세션이 자동으로 생성 되 고 세션에서 명령을 실행할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>You can also add items to your session, such as modules and snap-ins, and you can create items, such as variables, functions, and aliases.</source>
          <target state="translated">모듈 및 스냅인과 같은 세션에 항목을 추가할 수도 및 변수, 함수 및 별칭과 같은 항목을 만들 수 있습니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>These items exist only in the session and are deleted when the session ends.</source>
          <target state="translated">이러한 항목은 세션에만 존재 하 고는 세션이 종료 될 때 삭제 됩니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>You can also create user-managed sessions, known as " Windows PowerShell sessions" or "PSSessions," on the local computer or on a remote computer.</source>
          <target state="translated">또한 로컬 컴퓨터 또는 원격 컴퓨터에서 "Windows PowerShell 세션" 또는 "PSSessions"로 알려진 사용자 관리 세션을 만들 수 있습니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Like the default session, you can run commands in a PSSession and add and create items.</source>
          <target state="translated">기본 세션 처럼 있습니다 PSSession에서 명령을 실행 및 추가할 수 있으며 항목을 만듭니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>However, unlike the session that starts automatically, you can control the PSSessions that you create.</source>
          <target state="translated">그러나 자동으로 시작 되는 세션을 달리 만든 Pssession을 제어할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>You can get, create, configure, and remove them, disconnect and reconnect to them, and run multiple commands in the same PSSession.</source>
          <target state="translated">있습니다 수 가져오기, 만들기, 구성 및 제거, 분리 및,에 다시 연결 및 같은 PSSession에서 여러 명령을 실행 합니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>The PSSession remains available until you delete it or it times out.</source>
          <target state="translated">디렉터리를 삭제 하거나 시간이 초과 될 때까지 PSSession 계속 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Typically, you create a PSSession to run a series of related commands on a remote computer.</source>
          <target state="translated">일반적으로, 원격 컴퓨터에서 일련의 관련된 명령 실행 하려면 PSSession를 만듭니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>When you create a PSSession on a remote computer, Windows PowerShell establishes a persistent connection to the remote computer to support the session.</source>
          <target state="translated">원격 컴퓨터에서 PSSession을 만들 때 Windows PowerShell 세션을 지원 하기 위해 원격 컴퓨터에 영구 연결을 설정 합니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>If you use the ComputerName parameter of the Invoke-Command or Enter-PSSession cmdlet to run a remote command or to start an interactive session,  Windows PowerShell creates a temporary session on the remote computer and closes the session as soon as the command is complete or as soon as the interactive session ends.</source>
          <target state="translated">대화형 세션을 시작 하거나 원격 명령 실행 하도록 Enter-pssession 또는 Invoke-command cmdlet의 ComputerName 매개 변수를 사용 하면 Windows PowerShell 원격 컴퓨터에서 임시 세션을 만듭니다 고 명령이 완료 되는 즉시 또는 대화형 세션이 종료 되는 즉시 세션을 닫습니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>You cannot control these temporary sessions, and you cannot use them for more than a single command or a single interactive session.</source>
          <target state="translated">이러한 임시 세션을 제어할 수 없는 및 보다는 단일 명령 또는 단일 대화형 세션을 사용할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>In Windows PowerShell, the "current session" is the session that you are working in.</source>
          <target state="translated">Windows PowerShell에서 "현재 세션"은 세션에서 작업 하는으로 합니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>The "current session" can refer to any session, including a temporary session or a PSSession.</source>
          <target state="translated">"현재 세션"는 임시 세션이 나 PSSession을 포함 하 여 모든 세션을 참조할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>WHY USE A PSSESSION?</source>
          <target state="translated">PSSESSION을 사용 하는 이유</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Use a PSSession when you need a persistent connection to a remote computer.</source>
          <target state="translated">원격 컴퓨터에 영구 연결 해야 하는 경우에 PSSession을 사용 합니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>With a PSSession, you can run a series of commands that share data, such as the value of variables, the contents of a function, or the definition of an alias.</source>
          <target state="translated">PSSession에서 일련의 변수, 함수의 내용 또는 별칭에 대 한 정의의 값과 같은 데이터를 공유 하는 명령 실행할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>You can run remote commands without creating a PSSession.</source>
          <target state="translated">원격 명령을 PSSession을 만들지 않고 실행할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Use the ComputerName parameter of remote-enabled cmdlets to run a single command or a series of unrelated commands on one or many computers.</source>
          <target state="translated">원격을 사용 하는 cmdlet의 ComputerName 매개 변수를 사용 하 여 하나 또는 여러 컴퓨터에는 하나의 명령 또는 일련의 관련 되지 않은 명령 실행 합니다.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>When you use the ComputerName parameter of Invoke-Command or Enter-PSSession,  Windows PowerShell establishes a temporary connection to the remote computer and then closes the connection as soon as the command is complete.</source>
          <target state="translated">Enter-pssession 또는 Invoke-command의 ComputerName 매개 변수를 사용 하면 Windows PowerShell에서 원격 컴퓨터에 임시 연결을 설정 하 고 명령이 완료 되는 즉시 다음 연결을 닫습니다.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Any data elements that you create are lost when the connection is closed.</source>
          <target state="translated">연결이 닫힐 때 만든 데이터 요소는 모두 손실 됩니다.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Other cmdlets that have a ComputerName parameter, such as Get-Eventlog and Get-WmiObject, use different remoting technologies to gather data.</source>
          <target state="translated">Get-eventlog 등 Get-wmiobject, ComputerName 매개 변수가 있는 다른 cmdlet에서는 다른 원격 기술을 사용 하 여 데이터를 수집 합니다.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>None create a persistent connection like a PSSession.</source>
          <target state="translated">None PSSession 같은 영구 연결을 만듭니다.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>HOW TO CREATE A PSSESSION</source>
          <target state="translated">PSSESSION을 만드는 방법</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>To create a PSSession, use the New-PSSession cmdlet.</source>
          <target state="translated">PSSession을 만들려면 New-PSSession cmdlet을 사용합니다.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>To create the PSSession on a remote computer, use the ComputerName parameter of the New-PSSession cmdlet.</source>
          <target state="translated">원격 컴퓨터에서 PSSession을 만들려면 New-pssession cmdlet의 ComputerName 매개 변수를 사용 합니다.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>For example, the following command creates a new PSSession on the Server01 computer.</source>
          <target state="translated">예를 들어 다음 명령은 Server01 컴퓨터에 새 PSSession을 만듭니다.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>When you submit the command, New-PSSession creates the PSSession and returns an object that represents the PSSession.</source>
          <target state="translated">명령을 제출할 때 New-pssession PSSession을 만들고 PSSession을 나타내는 개체를 반환 합니다.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>You can save the object in a variable when you create the PSSession, or you can use a Get-PSSession command to get the PSSession at a later time.</source>
          <target state="translated">PSSession을 만들거나 Get-pssession 명령을 사용 하 여 나중에 PSSession을 가져올 때 개체를 변수에 저장할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>For example, the following command creates a new PSSession on the Server01 computer and saves the resulting object in the $ps variable.</source>
          <target state="translated">예를 들어 다음 명령은 Server01 컴퓨터에 새 PSSession을 만듭니다 및 $ps 변수에 결과 개체를 저장 합니다.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>HOW TO CREATE PSSESSIONS ON MULTIPLE COMPUTERS</source>
          <target state="translated">여러 컴퓨터에서 PSSESSION을 만드는 방법</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>To create PSSessions on multiple computers, use the ComputerName parameter of the New-PSSession cmdlet.</source>
          <target state="translated">여러 컴퓨터에서 Pssession을 만들려면 New-pssession cmdlet의 ComputerName 매개 변수를 사용 합니다.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Type the names of the remote computers in a comma-separated list.</source>
          <target state="translated">쉼표로 구분 된 목록에서 원격 컴퓨터의 이름을 입력 합니다.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>For example, to create PSSessions on the Server01, Server02, and Server03 computers, type:</source>
          <target state="translated">예를 들어 Server01, Server02 및 Server03 컴퓨터에서 Pssession을 만들려면 다음을 입력 합니다.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>New-PSSession creates one PSSession on each of the remote computers.</source>
          <target state="translated">새 PSSession 각 원격 컴퓨터에서 하나의 PSSession을 만듭니다.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>HOW TO GET PSSESSIONS</source>
          <target state="translated">PSSESSIONS를 가져오는 방법</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>To get the PSSessions that were created in your current session, use the Get-PSSession cmdlet without the ComputerName parameter.</source>
          <target state="translated">현재 세션에서 만들어진 Pssession의 ComputerName 매개 변수 없이 Get-pssession cmdlet을 사용 합니다.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>Get-PSSession returns the same type of object that New-PSSession returns.</source>
          <target state="translated">Get-pssession 동일한 유형의 New-pssession 반환 하는 개체를 반환 합니다.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>The following command gets all the PSSessions that were created in the current session.</source>
          <target state="translated">다음 명령은 현재 세션에서 만들어진 모든 Pssession을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>The default display of the PSSessions shows their ID and a default display name.</source>
          <target state="translated">Pssession의 기본 표시에서는 자신의 ID와 기본 표시 이름을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>You can assign an alternate display name when you create the session.</source>
          <target state="translated">세션을 만들 때에 다른 표시 이름을 할당할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>You can also save the PSSessions in a variable.</source>
          <target state="translated">또한 변수에 Pssession을 저장할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>The following command gets the PSSessions and saves them in the $ps123 variable.</source>
          <target state="translated">다음 명령은 Pssession을 가져오고 $ps123 변수에 저장 합니다.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>When using the PSSession cmdlets, you can refer to a PSSession by its ID, by its name, or by its instance ID (a GUID).</source>
          <target state="translated">PSSession cmdlet을 사용 하는 경우에 해당 ID로, 해당 이름 또는 해당 인스턴스의 인스턴스 ID (GUID)은 PSSession에 참조할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>The following command gets a PSSession by its ID and saves it in the $ps01 variable.</source>
          <target state="translated">다음 명령은 해당 ID로 PSSession을 가져오고 $ps01 변수에 저장 합니다.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>Beginning in  Windows PowerShell 3.0, PSSessions are maintained on the remote computer.</source>
          <target state="translated">Windows PowerShell 3.0 부터는 Pssession 원격 컴퓨터에서 유지 됩니다.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>To get PSSessions that you created on particular remote computers, use the ComputerName parameter of the Get-PSSession cmdlet.</source>
          <target state="translated">특정 원격 컴퓨터에서 만든 Pssession Get-pssession cmdlet의 ComputerName 매개 변수를 사용 하십시오.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>The following command gets the PSSessions that you created on the Server01 remote computer.</source>
          <target state="translated">다음 명령은 Server01 원격 컴퓨터에서 만든 Pssession을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>This includes PSSessions created in the current session and in other sessions on the local computer or other computers.</source>
          <target state="translated">현재 세션에서 및 로컬 컴퓨터 또는 다른 컴퓨터에 다른 세션에서 생성 된 Pssession에 포함 됩니다.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>In  Windows PowerShell 2.0, Get-PSSession gets only the PSSessions that were created in the current session.</source>
          <target state="translated">Windows PowerShell 2.0 Get-pssession 현재 세션에서 만들어진 Pssession을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>It does not get PSSessions that were created in other sessions or on other computers, even if the sessions are connected to and are running commands on the local computer.</source>
          <target state="translated">세션에 연결 하 고 로컬 컴퓨터에서 명령을 실행 하는 경우에 다른 세션에서 또는 다른 컴퓨터에서 생성 된 Pssession을 가져오지 않습니다.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>HOW TO RUN COMMANDS IN A PSSESSION</source>
          <target state="translated">PSSESSION에서 명령을 실행 하는 방법</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>To run a command in one or more PSSessions, use the Invoke-Command cmdlet.</source>
          <target state="translated">하나 이상의 Pssession에서 명령을 실행 하려면 Invoke-command cmdlet을 사용 합니다.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>Use the Session parameter to specify the PSSessions and the ScriptBlock parameter to specify the command.</source>
          <target state="translated">Session 매개 변수를 사용 하 여 명령을 지정 하려면 Pssession 및 ScriptBlock 매개 변수를 지정 합니다.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>For example, to run a Get-ChildItem ("dir") command in each of the three PSSessions saved in the $ps123 variable, type:</source>
          <target state="translated">예를 들어는 Get-childitem을 실행 하려면 각 Pssession 3 개 ("dir") 명령은 변수에 저장 된 $ps123, 유형:</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>HOW TO DELETE PSSESSIONS</source>
          <target state="translated">PSSESSION을 삭제 하는 방법</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>When you are finished with the PSSession, use the Remove-PSSession cmdlet to delete the PSSession and to release the resources that it was using.</source>
          <target state="translated">PSSession이 끝나면 PSSession을 삭제 하 고 사용 하 던 리소스를 해제 Remove-pssession cmdlet을 사용 합니다.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>or -</source>
          <target state="translated">또는-</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>To remove a PSSession from a remote computer, use the ComputerName parameter of the Remove-PSSession cmdlet.</source>
          <target state="translated">원격 컴퓨터에서 PSSession을 제거 하려면 Remove-pssession cmdlet의 ComputerName 매개 변수를 사용 합니다.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>If you do not delete the PSSession, the PSSession remains available for use until it times out.</source>
          <target state="translated">PSSession을 삭제 하지 않으면 시간이 초과 될 때까지 PSSession 계속 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>You can also use the IdleTimeout parameter of the New-PSSessionOption cmdlet to set an expiration time for an idle PSSession.</source>
          <target state="translated">또한는 유휴 PSSession에 대 한 만료 시간을 설정 하려면 New-pssessionoption cmdlet의 IdleTimeout 매개 변수를 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>For more information, see New-PSSessionOption.</source>
          <target state="translated">자세한 내용은 New-pssessionoption를 참조 하십시오.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>THE PSSESSION CMDLETS</source>
          <target state="translated">PSSESSION CMDLET</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>For a list of PSSession cmdlets, type:</source>
          <target state="translated">PSSession cmdlet 목록은 다음을 입력 합니다.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>FOR MORE INFORMATION</source>
          <target state="translated">상세 설명</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>For more information about PSSessions, see about_PSSession_Details.</source>
          <target state="translated">Pssession에 대 한 자세한 내용은 about_PSSession_Details를 참조 하십시오.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>SEE ALSO</source>
          <target state="translated">참고 항목</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>about_Remote</source>
          <target state="translated">about_Remote</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>about_Remote_Disconnected_Sessions</source>
          <target state="translated">about_Remote_Disconnected_Sessions</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>about_Remote_Requirements</source>
          <target state="translated">about_Remote_Requirements</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>Connect-PSSession</source>
          <target state="translated">Connect-PSSession</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>Disconnect-PSSession</source>
          <target state="translated">Disconnect-PSSession</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>Enter-PSSession</source>
          <target state="translated">Enter-PSSession</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>Exit-PSSession</source>
          <target state="translated">Exit-PSSession</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>Get-PSSession</source>
          <target state="translated">Get-pssession</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>Invoke-Command</source>
          <target state="translated">Invoke-Command</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>New-PSSession</source>
          <target state="translated">New-PSSession</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>Remove-PSSession</source>
          <target state="translated">Remove-PSSession</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>