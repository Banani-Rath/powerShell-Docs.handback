<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ko-kr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-1c394fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">748eedd94490fb2c7d9529b1fa0f125ee3a25c01</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">reference\5.0\Microsoft.PowerShell.Core\About\about_Special_Characters.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions" />
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">8d52e73cfc091b7e0a127f33e4aa84328cbefded</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">9d6fa30357ace71c2c591357785833273e70da00</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>about_Special_Characters</source>
          <target state="translated">about_Special_Characters</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>powershell, cmdlet</source>
          <target state="translated">powershell cmdlet</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>About Special Characters</source>
          <target state="translated">특수 문자에 대 한</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>about_Special_Characters</source>
          <target state="translated">about_Special_Characters</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>TOPIC</source>
          <target state="translated">항목</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>about_Special_Characters</source>
          <target state="translated">about_Special_Characters</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>SHORT DESCRIPTION</source>
          <target state="translated">간단한 설명</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Describes the special characters that you can use to control how Windows PowerShell interprets the next character in a command or parameter.</source>
          <target state="translated">Windows PowerShell 명령 또는 매개 변수에서 다음 문자를 해석 하는 방법을 제어 하는 데 사용할 수 있는 특수 문자에 설명 합니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>LONG DESCRIPTION</source>
          <target state="translated">자세한 설명</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Windows PowerShell supports a set of special character sequences that are used to represent characters that are not part of the standard character set.</source>
          <target state="translated">Windows PowerShell 표준 문자 집합의 일부분이 아닌 문자를 나타내기 위해 사용 되는 특수 문자 시퀀스의 집합을 지원 합니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>The special characters in Windows PowerShell begin with the backtick character, also known as the grave accent (ASCII 96).</source>
          <target state="translated">Windows PowerShell의 특수 문자 억음 문자, 라고도 억음 악센트 기호 (ASCII 96)로 시작합니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>The following special characters are recognized by Windows PowerShell:</source>
          <target state="translated">Windows PowerShell에서 다음과 같은 특수 문자 인식 됩니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>a    Alert <ph id="ph1">`b    Backspace
`</ph>f    Form feed <ph id="ph2">`n    New line
`</ph>r    Carriage return <ph id="ph3">`t    Horizontal tab
`</ph>v    Vertical tab --%   Stop parsing</source>
          <target state="translated">경고를 <ph id="ph1">`b    Backspace
`</ph>f 폼 피드 <ph id="ph2">`n    New line
`</ph>r 캐리지 리턴 <ph id="ph3">`t    Horizontal tab
`</ph>세로 탭-%v 구문 분석을 중지</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>These characters are case-sensitive.</source>
          <target state="translated">이러한 문자 대/소문자를 구분 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>NULL (`0)</source>
          <target state="translated">NULL ('0)</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Windows PowerShell recognizes a null special character (`0) and represents it with a character code of 0.</source>
          <target state="translated">Windows PowerShell는 null 특수 문자 ('0)를 인식 하 고 0 문자 코드를 사용 하 여이 나타냅니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>It appears as an empty space in the Windows PowerShell output.</source>
          <target state="translated">Windows PowerShell 출력에 빈 공간으로 나타납니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>This allows you to use Windows PowerShell to read and process text files that use null characters, such as string termination or record termination indicators.</source>
          <target state="translated">읽기를 Windows PowerShell을 사용 하 고 문자열 종료 또는 레코드 종료 표시기 등의 null 문자를 사용 하는 프로세스 텍스트 파일 있습니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>The null special character is not equivalent to the $null variable, which stores a value of NULL.</source>
          <target state="translated">Null 특수 문자를 NULL 값을 저장 하는 $null 변수에 같습니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>ALERT (<ph id="ph1">`a)
The alert (`</ph>a) character sends a beep signal to the computer's speaker.</source>
          <target state="translated">경고 (<ph id="ph1">`a)
The alert (`</ph>는) 문자는 컴퓨터의 스피커를 경고음 신호를 보냅니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>You can use this to warn a user about an impending action.</source>
          <target state="translated">이 발생할 수 있는 작업에 대 한 사용자에 게 경고를 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>The following command sends two beep signals to the local computer's speaker:</source>
          <target state="translated">다음 명령은 로컬 컴퓨터의 스피커를 두 개의 경고음 신호를 보냅니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>for ($i = 0; $i -le 1; $i++){"`a"}</source>
          <target state="translated">에 대 한 ($i = 0; $i-le 1; $i + +) {"'는"}</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>BACKSPACE (<ph id="ph1">`b)
The backspace character (`</ph>b) moves the cursor back one character, but it does not delete any characters.</source>
          <target state="translated">백스페이스 (<ph id="ph1">`b)
The backspace character (`</ph>b) 커서를 한 문자를 이동 하지만 모든 문자를 삭제 하지는 않습니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>The following command writes the word "backup", moves the cursor back twice, and then writes the word "out" (preceded by a space and starting at the new position):</source>
          <target state="translated">다음 명령은 씁니다 단어 "백업" 커서 다시 두 번 이동한 다음 (앞에 공백이 및 새 위치에서 시작) "out" 라는 단어를 씁니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>"backup<ph id="ph1">`b`</ph>b out"</source>
          <target state="translated">"백업<ph id="ph1">`b`</ph>아웃 b"</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>The output from this command is as follows:</source>
          <target state="translated">이 명령의 출력에에서는 다음과 같습니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>back out</source>
          <target state="translated">철회</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>FORM FEED (<ph id="ph1">`f)
The form feed character (`</ph>f) is a print instruction that ejects the current page and continues printing on the next page.</source>
          <target state="translated">용지 공급 (<ph id="ph1">`f)
The form feed character (`</ph>f)에서는 현재 페이지의 다음 페이지에 인쇄를 계속 하는 인쇄 명령입니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>This character affects printed documents only; it does not affect screen output.</source>
          <target state="translated">이 문자는 인쇄 된 문서를 영향을 줍니다. 화면 출력에는 영향을 주지 않습니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>NEW LINE (<ph id="ph1">`n)
The new line character (`</ph>n) inserts a line break immediately after the character.</source>
          <target state="translated">새 줄 (<ph id="ph1">`n)
The new line character (`</ph>n) 문자 바로 다음 줄 바꿈을 삽입 합니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>The following example shows how to use the new line character in a Write-Host command:</source>
          <target state="translated">다음 예제에서는 Write-host 명령에서 줄 바꿈 문자를 사용 하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>"There are two line breaks<ph id="ph1">`n`</ph>nhere."</source>
          <target state="translated">"두 줄 바꿈이<ph id="ph1">`n`</ph>nhere."</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>The output from this command is as follows:</source>
          <target state="translated">이 명령의 출력에에서는 다음과 같습니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>There are two line breaks</source>
          <target state="translated">두 줄 바꿈이</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>here.</source>
          <target state="translated">여기 있습니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>CARRIAGE RETURN (<ph id="ph1">`r)
The carriage return character (`</ph>r) eliminates the entire line prior to the `r character, as though the prior text were on a different line.</source>
          <target state="translated">캐리지 리턴 (<ph id="ph1">`r)
The carriage return character (`</ph>r) 이전에 전체 줄을 제거는 ' 다른 줄에는 이전 텍스트 것 처럼 r 문자입니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>For example:</source>
          <target state="translated">예:</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Write-Host "Let's not move`rDelete everything before this point."</source>
          <target state="translated">Write-host "보겠습니다 하지 move'rDelete이이 지점 앞에 나오는 모든."</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>The output from this command is:</source>
          <target state="translated">이 명령의 출력이 됩니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Delete everything before this point.</source>
          <target state="translated">이 시점 전에 모든 내용을 삭제 합니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>HORIZONTAL TAB (<ph id="ph1">`t)
The horizontal tab character (`</ph>t) advances to the next tab stop and continues writing at that point.</source>
          <target state="translated">가로 탭 (<ph id="ph1">`t)
The horizontal tab character (`</ph>t) 다음 탭 정지를 이동 하 고 해당 지점에서 작성을 계속 합니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>By default, the Windows PowerShell console has a tab stop at every eighth space.</source>
          <target state="translated">기본적으로 Windows PowerShell 콘솔에는 모든 여덟 번째 공간에서 실행을 중단 하는 탭을 있습니다.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>For example, the following command inserts two tabs between each column.</source>
          <target state="translated">예를 들어 다음 명령은 각 열 사이 두 개의 탭을 삽입합니다.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>"Column1<ph id="ph1">`t`</ph>tColumn2<ph id="ph2">`t`</ph>tColumn3"</source>
          <target state="translated">"Column1<ph id="ph1">`t`</ph>tColumn2<ph id="ph2">`t`</ph>tColumn3"</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>The output from this command is:</source>
          <target state="translated">이 명령의 출력이 됩니다.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Column1         Column2         Column3</source>
          <target state="translated">Column1 Column2 열 3</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>VERTICAL TAB (<ph id="ph1">`v)
The horizontal tab character (`</ph>t) advances to the next vertical tab stop and writes all subsequent output beginning at that point.</source>
          <target state="translated">세로 탭 (<ph id="ph1">`v)
The horizontal tab character (`</ph>t) 다음 세로 탭 정지를 이동 하 고 해당 지점에서 시작 하는 모든 후속 출력을 씁니다.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>This character affects printed documents only.</source>
          <target state="translated">이 문자는 인쇄 된 문서를만 영향을 줍니다.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>It does not affect screen output.</source>
          <target state="translated">화면 출력에는 영향을 주지 않습니다.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>STOP PARSING  (--%) The stop-parsing symbol (--%) prevents Windows PowerShell from interpreting arguments in program calls as Windows PowerShell commands and expressions.</source>
          <target state="translated">구문 분석을 중지 (-%) Stop 구문 분석 기호 (-%) Windows PowerShell에서 Windows PowerShell 명령 및 식으로 프로그램 호출에 인수를 해석할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Place the stop-parsing symbol after the program name and before program arguments that might cause errors.</source>
          <target state="translated">프로그램 이름 뒤와 오류가 발생할 수 있는 프로그램 인수 앞 중지 구문 분석 기호를 배치 합니다.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>For example, the following Icacls command uses the stop-parsing symbol.</source>
          <target state="translated">예를 들어, 다음 Icacls 명령을 중지 구문 분석 기호를 사용합니다.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>icacls X:\VMS --% /grant Dom\HVAdmin:(CI)(OI)F</source>
          <target state="translated">icacls X:\VMS-% /grant Dom\HVAdmin:(CI) (OI) F</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Windows PowerShell sends the following command to Icacls.</source>
          <target state="translated">Windows PowerShell에서 다음 명령을 Icacls 보냅니다.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>X:\VMS /grant Dom\HVAdmin:(CI)(OI)F</source>
          <target state="translated">X:\VMS /grant Dom\HVAdmin:(CI) (OI) F</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>For more information about the stop-parsing symbol, see about_Parsing.</source>
          <target state="translated">Stop 구문 분석 기호에 대 한 자세한 내용은 about_Parsing를 참조 하십시오.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>KEYWORDS</source>
          <target state="translated">키워드</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>about_Punctuation about_Symbols</source>
          <target state="translated">about_Punctuation about_Symbols</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>SEE ALSO</source>
          <target state="translated">참고 항목</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>about_Quoting_Rules about_Escape_Characters</source>
          <target state="translated">about_Quoting_Rules about_Escape_Characters</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>