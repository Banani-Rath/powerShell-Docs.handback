<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ko-kr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-1c394fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">91d9189de6404f4c16c8daf64a012a819bdc53d9</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">reference\4.0\Microsoft.PowerShell.Core\About\about_Session_Configuration_Files.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions" />
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">2cca03d3200e0ae1b86a55dc01f4f8ec0280d6ad</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">37d2a0e4d96681c399683c736bdb1a3d3be96c66</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>about_Session_Configuration_Files</source>
          <target state="translated">about_Session_Configuration_Files</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>powershell, cmdlet</source>
          <target state="translated">powershell cmdlet</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>About Session Configuration Files</source>
          <target state="translated">세션 구성 파일에 대 한</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>about_Session_Configuration_Files</source>
          <target state="translated">about_Session_Configuration_Files</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>about_Session_Configuration_Files</source>
          <target state="translated">about_Session_Configuration_Files</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>SHORT DESCRIPTION</source>
          <target state="translated">간단한 설명</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Describes session configuration files, which are used in a session configuration (also known as an "endpoint") to define the environment of sessions that use the session configuration.</source>
          <target state="translated">세션 구성을 사용 하는 세션의 환경을 정의 하는 세션 구성 (라고도 "끝점")에 사용 되는 세션 구성 파일에 설명 합니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>LONG DESCRIPTION</source>
          <target state="translated">자세한 설명</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>A "session configuration file" is a text file with a .pssc file name extension that contains a hash table of session configuration properties and values.</source>
          <target state="translated">"세션 구성 파일"은 세션 구성 속성 및 값의 해시 테이블을 포함 하는.pssc 파일 이름 확장명을 가진 텍스트 파일입니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>You can use a session configuration file to set the properties of a session configuration.</source>
          <target state="translated">세션 구성의 속성을 설정 하는 세션 구성 파일을 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Doing so defines the environment of any Windows PowerShell sessions that use that session configuration.</source>
          <target state="translated">그러면 해당 세션 구성을 사용 하는 모든 Windows PowerShell 세션의 환경을 정의 합니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Session configuration files make it easy to create custom session configurations without using complex C# assemblies or scripts.</source>
          <target state="translated">세션 구성 파일을 사용 하면 쉽게 복잡 한 C# 어셈블리 또는 스크립트를 사용 하지 않고 사용자 지정 세션 구성을 만들 수 있도록 합니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>A "session configuration" or "endpoint" is a collection of local computer settings that determine such things as which users can create sessions on the computer; which commands users can run in those sessions; and whether the session should run as a privileged virtual account.</source>
          <target state="translated">"세션 구성을" 또는 "끝점" 등의 작업을 결정 하는 로컬 컴퓨터 설정의 컬렉션은 컴퓨터에 세션 만들 수 있는 사용자로 이러한 세션;에서 실행할 수 있는 사용자는 명령 및 세션 권한의 가상 계정으로 실행할지 여부입니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>For more information about session configurations, see about_Session_Configurations (http://go.microsoft.com/fwlink/?LinkID=145152).</source>
          <target state="translated">세션 구성에 대한 자세한 내용은 about_Session_Configurations(http://go.microsoft.com/fwlink/?LinkID=145152)를 참조하세요.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Session configurations were introduced in Windows PowerShell 2.0, and session configuration files were introduced in Windows PowerShell 3.0.</source>
          <target state="translated">세션 구성 Windows PowerShell 2.0에 도입 된 및 세션 구성 파일은 Windows PowerShell 3.0에서 도입 되었습니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>You must use Windows PowerShell 3.0 to include a session configuration file in a session configuration.</source>
          <target state="translated">Windows PowerShell 3.0을 사용 하 여 세션 구성 파일을 세션 구성에 포함 해야 합니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>However, users of Windows PowerShell 2.0 (and later) are affected by the settings in the session configuration.</source>
          <target state="translated">그러나 Windows PowerShell 2.0의 (이상) 사용자가 세션 구성의 설정에 의해 영향 을지 않습니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Creating Custom Sessions You can customize many features of a Windows PowerShell session by specifying session properties in a session configuration.</source>
          <target state="translated">만든 사용자 지정 세션 세션 구성에서 세션 속성을 지정 하 여 다양 한 기능을 Windows PowerShell 세션을 사용자 지정할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>You can customize a session by writing a C# program that defines a custom runspace, or you can use a session configuration file to define the properties of sessions created by using the session configuration.</source>
          <target state="translated">세션 구성 파일을 사용 하 여 세션 구성을 사용 하 여 만들어진 세션의 속성을 정의 또는 사용자 지정 runspace를 정의 하는 C# 프로그램을 작성 하 여 세션을 지정할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>As a general rule, it is easier to use the session configuration file than to write a C# program.</source>
          <target state="translated">일반적으로 C# 프로그램을 작성 하 보다 세션 구성 파일을 사용 하 여 쉽습니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>You can use a session configuration file to create items such as fully-functioning sessions for highly trusted users; locked-down sessions that allow minimal access; sessions designed for particular and that contain only the modules required for those tasks; and sessions where unprivileged users can only run specific commands as a privileged account.</source>
          <target state="translated">세션 구성 파일을 사용 하 여 완전히 신뢰할 수 있는 사용자;에 대 한 완전 한 기능 세션과 같은 항목을 만드는 최소한의 액세스를 허용 하는 잠금 세션 특정 및 설계 세션; 해당 작업에 필요한 모듈에만 포함 및 세션 권한 없는 사용자가 권한 있는 계정으로 특정 명령을 실행할만 수 있습니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>In addition to that, you can manage whether users of the session can use Windows PowerShell language elements such as script blocks, or whether they can only run commands.</source>
          <target state="translated">이 외에, 아니면 명령을 실행할 수 있습니다 사용자 세션의 스크립트 블록을 같은 Windows PowerShell 언어 요소를 사용할 수 있는지 여부를 관리할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>You can manage the version of Windows PowerShell users can run in the session; manage which modules are imported into the session; and manage which cmdlets, functions, and aliases session users can run.</source>
          <target state="translated">사용자는 세션에서 실행할 수는 Windows PowerShell의 버전을 관리할 수 있습니다. 세션;에 있는 모듈을 가져온 관리 및는 cmdlet, 함수 및 사용자가 실행할 수는 별칭 세션을 관리 합니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>When using the RoleDefinitions field, you can give users different capabilities in the session based on group membership.</source>
          <target state="translated">RoleDefinitions 필드를 사용 하는 경우에 제공할 수 있습니다 사용자가 다양 한 기능 그룹 구성원 자격에 따라 세션.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>For more information about RoleDefinitions and how to define this Value, see the help topic for the New-PSRoleCapabilityFile Cmdlet.</source>
          <target state="translated">RoleDefinitions 및이 값을 정의 하는 방법에 대 한 자세한 내용은 새로 PSRoleCapabilityFile Cmdlet에 대 한 도움말 항목을 참조 합니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Creating a Session Configuration File The easiest way to create a session configuration file is by using the New-PSSessionConfigurationFile cmdlet.</source>
          <target state="translated">New-pssessionconfigurationfile cmdlet을 사용 하 여은 세션 구성 파일을 만드는 가장 쉬운 방법은 세션 구성 파일을 만듭니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>This cmdlet generates a file that uses the correct syntax and format, and that automatically verifies many of the configuration file property values.</source>
          <target state="translated">이 cmdlet는 올바른 구문 및 형식으로 사용 하 고 사용자가 자동으로 대부분의 구성 파일 속성 값 확인 하는 파일을 생성 합니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>For detailed descriptions of the properties that you can set in a session configuration file, see the help topic for the New-PSSessionConfigurationFile cmdlet.</source>
          <target state="translated">세션 구성 파일에서 설정할 수 있는 속성의 자세한 설명, New-pssessionconfigurationfile cmdlet에 대 한 도움말 항목을 참조 하십시오.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>The following command creates a session configuration file that uses the default values.</source>
          <target state="translated">다음 명령은 기본 값을 사용 하는 세션 구성 파일을 만듭니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>The resulting configuration file uses only the default values because no parameters other than the Path parameter (which specifies the file path) are included:</source>
          <target state="translated">에서는 결과 구성 파일 (파일 경로 지정) 함 Path 매개 변수 이외의 매개 변수 없이 포함 되어 있으므로 기본값만 사용 합니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>PS C:&gt; New-PSSessionConfigurationFile -Path .\Defaults.pssc</source>
          <target state="translated">PS c: &gt; New-pssessionconfigurationfile-경로.\Defaults.pssc</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>To view the new configuration file in your default text editor, use the following command:</source>
          <target state="translated">기본 텍스트 편집기에서 새 구성 파일을 보려면 다음 명령을 사용 합니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>PS C:&gt; Invoke-Item -Path .\Defaults.pssc</source>
          <target state="translated">PS c: &gt; Invoke-item-경로.\Defaults.pssc</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>To create a session configuration for sessions in which user can run commands, but not use other elements of the Windows PowerShell language, type:</source>
          <target state="translated">세션을 만들려면 사용자의 세션에 대 한 구성 명령을 실행 수 있지만 Windows PowerShell 언어에서 종류의 다른 요소를 사용 하지.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>PS C:&gt; New-PSSessionConfigurationFile -LanguageMode NoLanguage -Path .\NoLanguage.pssc</source>
          <target state="translated">PS c: &gt; New-pssessionconfigurationfile-LanguageMode NoLanguage-경로.\NoLanguage.pssc</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>In the preceding command, setting the LanguageMode parameter to NoLanguage prevents users from doing such things as writing or running scripts, or using variables.</source>
          <target state="translated">이전 명령에서 NoLanguage를 LanguageMode 매개 변수를 설정으로 작성 하거나 스크립트를 실행 하거나 변수를 사용 하 여 이러한 작업을 할 수가 없습니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>To create a session configuration for sessions in which users can use only Get cmdlets, type:</source>
          <target state="translated">사용자만 Get cmdlet을 사용 하는 세션에 대 한 세션 구성을 만들려면 다음을 입력 합니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>PS C:&gt; New-PSSessionConfigurationFile -VisibleCmdlets Get-* -Path .\GetSessions.pssc</source>
          <target state="translated">PS c: &gt; New-pssessionconfigurationfile-VisibleCmdlets Get-*-경로.\GetSessions.pssc</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>In the preceding example, setting the VisibleCmdlets parameter to Get-* limits users to cmdlets that have names that start with the string value "Get-".</source>
          <target state="translated">위의 예제에서는 Get-VisibleCmdlets 매개 변수를 설정 * 이름이 문자열 값 "Get-"로 시작 하는 cmdlet에 사용자를 제한 합니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>To create a session configuration for sessions that run under a privileged virtual account instead of the user's credentials, type:</source>
          <target state="translated">사용자의 자격 증명 대신 권한 있는 가상 계정에서 실행 되는 세션에 대 한 세션 구성을 만들려면 다음을 입력 합니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>PS C:&gt; New-PSSessionConfigurationFile -RunAsVirtualAccount -Path .\VirtualAccount.pssc</source>
          <target state="translated">PS c: &gt; New-pssessionconfigurationfile RunAsVirtualAccount-경로.\VirtualAccount.pssc</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>To create a session configuration for sessions in which the commands visible to the user are specified in a role capabilities file, type:</source>
          <target state="translated">사용자에 게 표시 되는 명령을 역할 기능 파일에 지정 하는 세션에 대 한 세션 구성을 만들려면 다음을 입력 합니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>PS C:&gt; New-PSSessionConfigurationFile -RoleDefinitions @{ 'CONTOSO\User' = @{ RoleCapabilities = 'Maintenance' }} -Path .\Maintenance.pssc</source>
          <target state="translated">PS c: &gt; New-pssessionconfigurationfile RoleDefinitions @{'CONTOSO\User' = @{RoleCapabilities = '유지 관리'}}-경로.\Maintenance.pssc</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Using a Session Configuration File You can include a session configuration file when you create a session configuration or add you can add a file to the session configuration at a later time.</source>
          <target state="translated">세션 구성 파일 수를 사용 하 여 세션 구성을 만드는 하거나 나중에 세션 구성에 파일을 추가할 수를 추가할 때 세션 구성 파일을 포함할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>To include a session configuration file when creating a session configuration, use the Path parameter of the Register-PSSessionConfiguration cmdlet.</source>
          <target state="translated">세션 구성 파일을 세션 구성을 만들 때를 포함 하려면 Register-pssessionconfiguration cmdlet의 Path 매개 변수를 사용 합니다.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>For example, the following command uses the NoLanguage.pssc file when it creates a NoLanguage session configuration.</source>
          <target state="translated">예를 들어 다음 명령은 NoLanguage 세션 구성을 만들 때 NoLanguage.pssc 파일을 사용 합니다.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>PS C:&gt; Register-PSSessionConfiguration -Name NoLanguage -Path .\NoLanguage.pssc</source>
          <target state="translated">PS c: &gt; Register-pssessionconfiguration-NoLanguage 이름-경로.\NoLanguage.pssc</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>When a new NoLanguage session starts, users will only have access to Windows PowerShell commands.</source>
          <target state="translated">새 NoLanguage 세션을 시작 하는 경우 사용자에는 Windows PowerShell 명령에 액세스할을 수만 있습니다.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>To add a session configuration file to an existing session configuration, use the Set-PSSessionConfiguration cmdlet and the Path parameter.</source>
          <target state="translated">세션 구성 파일을 기존 세션 구성에를 추가 하려면 Set-pssessionconfiguration cmdlet 및 Path 매개 변수를 사용 합니다.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>This affects any new sessions created with the specified session configuration.</source>
          <target state="translated">이 지정한 세션 구성을 사용 하 여 만든 모든 새 세션을 영향을 줍니다.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Note that the Set-PSSessionConfiguration cmdlet changes the session itself and does not modify the session configuration file.</source>
          <target state="translated">참고 Set-pssessionconfiguration cmdlet은 세션을 변경 하 고 세션 구성 파일을 수정 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>For example, the following command adds the NoLanguage.pssc file to the LockedDown session configuration.</source>
          <target state="translated">예를 들어 다음 명령은 LockedDown 세션 구성에 NoLanguage.pssc 파일을 추가합니다.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>PS C:&gt; Set-PSSessionConfiguration -Name LockedDown -Path .\NoLanguage.pssc</source>
          <target state="translated">PS c: &gt; Set-pssessionconfiguration-LockedDown 이름-경로.\NoLanguage.pssc</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>When users use the LockedDown session configuration to create a session, they will be able to run cmdlets but they will not be able to create or use variables, assign values, or use other Windows PowerShell language elements.</source>
          <target state="translated">사용자 세션을 만드는 LockedDown 세션 구성을 사용 하는 경우 cmdlet을 실행할 수 있지만 또는 변수를 사용 하 여, 값을 할당 하거나 다른 Windows PowerShell 언어 요소를 사용할 수 없게 됩니다.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>The following command uses the New-PSSession cmdlet to create a session on the computer Srv01 that uses the LockedDown session configuration, saving an object reference to the session in the $s variable.</source>
          <target state="translated">다음 명령은 New-pssession cmdlet를 사용 하 여 $s 변수에 저장 하는 세션에 대 한 개체 참조가 LockedDown 세션 구성을 사용 하 여 Srv01 컴퓨터에서 세션을 만들 수 있습니다.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>The ACL (access control list) of the session configuration determines who can use it to create a session.</source>
          <target state="translated">세션 구성의 ACL (액세스 제어 목록) 사용 하 여 세션을 만들 수 있는 것을 결정 합니다.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>PS C:&gt; $s = New-PSSession -ComputerName Srv01 -ConfigurationName LockedDown</source>
          <target state="translated">C: &gt; $s PS = New-pssession-ComputerName s r v 01-ConfigurationName LockedDown</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Because the NoLanguage constraints were added to the LockedDown session configuration, users in LockedDown sessions will only be able to run Windows PowerShell commands and cmdlets.</source>
          <target state="translated">LockedDown 세션 구성에 추가 된 NoLanguage 제약 조건 때문에 LockedDown 세션에 있는 사용자만 Windows PowerShell 명령 및 cmdlet을 실행할 수 없게 됩니다.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>For example, the following two commands use the Invoke-Command cmdlet to run commands in the session referenced in the $s variable.</source>
          <target state="translated">예를 들어 다음 두 명령은 Invoke-command cmdlet를 사용 하 여 $s 변수에 참조 된 세션에서 명령을 실행 합니다.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>The first command, which runs the Get-UICulture cmdlet and does not use any variables, succeeds.</source>
          <target state="translated">Get-uiculture cmdlet을 실행 하는 변수를 사용 하지 않는 첫 번째 명령은 성공 합니다.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>The second command, which gets the value of the $PSUICulture variable, fails.</source>
          <target state="translated">$PSUICulture 변수의 값을 가져오는, 두 번째 명령은 실패 합니다.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>PS C:&gt; Invoke-Command -Session $s {Get-UICulture} en-US</source>
          <target state="translated">PS c: &gt; Invoke-command-세션 $s {Get-uiculture} EN-US</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>PS C:&gt; Invoke-Command -Session $s {$PSUICulture} The syntax is not supported by this runspace.</source>
          <target state="translated">PS c: &gt; Invoke-command-세션 $s {$PSUICulture} 구문은이 runspace에서 지원 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>This might be because it is in no-language mode.</source>
          <target state="translated">비언어 모드에 있기 때문일 수 있습니다.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>CategoryInfo          : ParserError: ($PSUICulture:String) [], ParseException</source>
          <target state="translated">CategoryInfo: ParserError: ($PSUICulture: 문자열), ParseException</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>FullyQualifiedErrorId : ScriptsNotAllowed</source>
          <target state="translated">FullyQualifiedErrorId: ScriptsNotAllowed</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>Editing a Session Configuration File All settings in a session configuration except for RunAsVirtualAccount and RunAsVirtualAccountGroups can be modified by editing the session configuration file used by the session configuration.</source>
          <target state="translated">편집 된 세션 구성 파일 모두 RunAsVirtualAccount 및 RunAsVirtualAccountGroups 제외 하 고 세션 구성에서 설정에서 세션 구성을 사용 하는 세션 구성 파일을 편집 하 여 수정할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>To do this, begin by locating the active copy of the session configuration file.</source>
          <target state="translated">이 작업을 수행 하려면 세션 구성 파일의 활성 복사본을 배치 하 여 시작 합니다.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>When you use a session configuration file in a session configuration, Windows PowerShell creates an active copy of the session configuration file and stores it in the $pshome\SessionConfig directory on the local computer.</source>
          <target state="translated">세션 구성에서 세션 구성 파일을 사용 하 여 Windows PowerShell 세션 구성 파일의 활성 복사본을 만들고 로컬 컴퓨터에서 $pshome\SessionConfig 디렉터리에 저장 합니다.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>The location of the active copy of a session configuration file is stored in the ConfigFilePath property of the session configuration object.</source>
          <target state="translated">세션 구성 파일의 활성 복사본의 위치는 세션 구성 개체의 ConfigFilePath 속성에 저장 됩니다.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>The following command gets the location of the session configuration file for the NoLanguage session configuration.</source>
          <target state="translated">다음 명령은 NoLanguage 세션 구성에 대 한 세션 구성 파일의 위치를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>PS C:&gt; (Get-PSSessionConfiguration -Name NoLanguage).ConfigFilePath</source>
          <target state="translated">PS c: &gt; (Get-pssessionconfiguration-NoLanguage 이름 지정). ConfigFilePath</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>That command returns a file path similar to the following:</source>
          <target state="translated">해당 명령은 다음과 유사 하 게 파일 경로를 반환합니다.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>C:\WINDOWS\System32\WindowsPowerShell\v1.0\SessionConfig\</source>
          <target state="translated">C:\WINDOWS\System32\WindowsPowerShell\v1.0\SessionConfig\</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>NoLanguage_0c115179-ff2a-4f66-a5eb-e56e5692ba22.pssc</source>
          <target state="translated">NoLanguage_0c115179-ff2a-4f66-a5eb-e56e5692ba22.pssc</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>You can edit the .pssc file in any text editor.</source>
          <target state="translated">임의의 텍스트 편집기에서.pssc 파일을 편집할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>After the file is saved it will be employed by any new sessions that use the session configuration.</source>
          <target state="translated">파일을 저장 한 후 세션 구성을 사용 하는 모든 새 세션에서 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>If you need to modify the RunAsVirtualAccount or the RunAsVirtualAccountGroups settings, you must un-register the session configuration and re-register a session configuration file that includes the edited values.</source>
          <target state="translated">RunAsVirtualAccount 또는 RunAsVirtualAccountGroups 설정을 수정 해야 할 경우 세션 구성을 등록 해제 해야 하 고 편집 된 값을 포함 하는 세션 구성 파일을 다시 등록 합니다.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>Testing a Session Configuration File Use the Test-PSSessionConfigurationFile cmdlet to test manually edited session configuration files.</source>
          <target state="translated">Test-pssessionconfigurationfile cmdlet을 수동으로 테스트를 테스트 세션 구성 파일 사용 세션 구성 파일을 편집 합니다.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>That's important: if the file syntax and values are not valid users will not be able to use the session configuration to create a session.</source>
          <target state="translated">이 중요: 사용자가 세션 구성을 사용 하 여 세션을 만들 수 수 파일 구문 및 값이 유효 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>For example, the following command tests the active session configuration file of the NoLanguage session configuration.</source>
          <target state="translated">예를 들어 다음 명령은 NoLanguage 세션 구성의 활성 세션 구성 파일을 테스트합니다.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>PS C:&gt; Test-PSSessionConfigurationFile -Path C:\WINDOWS\System32\</source>
          <target state="translated">PS c: &gt; Test-pssessionconfigurationfile-경로 C:\WINDOWS\System32\</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>WindowsPowerShell\v1.0\SessionConfig\</source>
          <target state="translated">WindowsPowerShell\v1.0\SessionConfig\</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>NoLanguage_0c115179-ff2a-4f66-a5eb-e56e5692ba22.pssc</source>
          <target state="translated">NoLanguage_0c115179-ff2a-4f66-a5eb-e56e5692ba22.pssc</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>If the syntax and values in the configuration file are valid Test-PSSessionConfigurationFile returns True.</source>
          <target state="translated">구문 및 구성 파일의 값은 유효한 Test-pssessionconfigurationfile True를 반환 합니다.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>If the syntax and values are not valid then the cmdlet returns False.</source>
          <target state="translated">구문 및 값이 유효 하지 cmdlet는 False를 반환 합니다.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>You can use Test-PSSessionConfigurationFile to test any session configuration file, including files that the New-PSSessionConfiguration cmdlet creates.</source>
          <target state="translated">새로 만들기-PSSessionConfiguration cmdlet에서 만든 파일을 포함 하 여 모든 세션 구성 파일을 테스트 하려면 Test-pssessionconfigurationfile를 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>For more information, see the help topic for the Test-PSSessionConfigurationFile cmdlet.</source>
          <target state="translated">자세한 내용은 Test-pssessionconfigurationfile cmdlet에 대 한 도움말 항목을 참조 하십시오.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>Removing a Session Configuration File You cannot remove a session configuration file from a session configuration.</source>
          <target state="translated">제거 하 여 세션 구성 파일 열 수는 세션 구성에서 세션 구성 파일을 제거할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>However, you can replace the file with a new file that uses the default settings.</source>
          <target state="translated">그러나 새 파일의 기본 설정을 사용 하는 파일을 바꿀 수 있습니다.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>This effectively cancels the settings used by the original configuration file.</source>
          <target state="translated">이 원래 구성 파일에서 사용한 설정을 효과적으로 취소 됩니다.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>To replace a session configuration file, create a new session configuration file that uses the default settings, then use the Set-PSSessionConfiguration cmdlet to replace the custom session configuration file with the new file.</source>
          <target state="translated">세션 구성 파일을 대체 하려면 기본 설정을 사용 하 여 새 세션 구성 파일을 만드는 다음 Set-pssessionconfiguration cmdlet을 사용 하 여 사용자 지정 세션 구성 파일을 새 파일로 대체 합니다.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>For example, the following commands create a Default session configuration file and then replace the active session configuration file in the NoLanguage session configuration.</source>
          <target state="translated">예를 들어, 다음 명령을 기본 세션 구성 파일을 만들고 NoLanguage 세션 구성에서 활성 세션 구성 파일을 바꿉니다.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>PS C:&gt; New-PSSessionConfigurationFile -Path .\Default.pssc PS C:&gt; Set-PSSessionConfiguration -Name NoLanguage -Path .\Default.pssc</source>
          <target state="translated">PS c: &gt; New-pssessionconfigurationfile-Path.\Default.pssc PS c: &gt; Set-pssessionconfiguration-NoLanguage 이름-경로.\Default.pssc</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>When these commands finish, the NoLanguage session configuration will actually provide full language support (the default setting) for all sessions created with that session configuration.</source>
          <target state="translated">이러한 명령은 마치면 NoLanguage 세션 구성을 해당 세션 구성을 사용 하 여 만든 모든 세션에 대 한 전체 언어 지원 (기본 설정)를 실제로 제공 합니다.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>Viewing the Properties of a Session Configuration The session configuration objects that represent session configurations using session configuration files have additional properties that make it easy to discover and analyze the session configuration.</source>
          <target state="translated">구성 파일을 검색 하 고 분석 세션 구성을 쉽게 만드는 추가 속성을가지고 세션을 사용 하 여 세션 구성을 나타내는 세션 구성 개체 세션 구성의 속성을 확인 합니다.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>(Note that the type name shown below includes a formatted view definition.) You can view the properties by running the Get-PSSessionConfiguration cmdlet and piping the returned data to the Get-Member cmdlet:</source>
          <target state="translated">(아래 표시 된 형식 이름에 서식이 지정 된 뷰 정의 포함 되도록 참고). Get-pssessionconfiguration cmdlet을 실행 하 고 반환된 된 데이터를 Get-member cmdlet으로 파이프 하 여 속성을 볼 수 있습니다.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>PS C:&gt; Get-PSSessionConfiguration NoLanguage | Get-Member TypeName: Microsoft.PowerShell.Commands.PSSessionConfigurationCommands</source>
          <target state="translated">PS c: &gt; Get-pssessionconfiguration NoLanguage | Get-member TypeName: Microsoft.PowerShell.Commands.PSSessionConfigurationCommands</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>PSSessionConfiguration</source>
          <target state="translated">PSSessionConfiguration</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>Name                          MemberType     Definition</source>
          <target state="translated">MemberType 정의 이름</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>Equals                        Method         bool Equals(System.O... GetHashCode                   Method         int GetHashCode() GetType                       Method         type GetType() ToString                      Method         string ToString() Architecture                  NoteProperty   System.String Archit... Author                        NoteProperty   System.String Author... AutoRestart                   NoteProperty   System.String AutoRe... Capability                    NoteProperty   System.Object[] Capa... CompanyName                   NoteProperty   System.String Compan... configfilepath                NoteProperty   System.String config... Copyright                     NoteProperty   System.String Copyri... Enabled                       NoteProperty   System.String Enable... ExactMatch                    NoteProperty   System.String ExactM... ExecutionPolicy               NoteProperty   System.String Execut... Filename                      NoteProperty   System.String Filena... GUID                          NoteProperty   System.String GUID=0... ProcessIdleTimeoutSec         NoteProperty   System.String Proces... IdleTimeoutms                 NoteProperty   System.String IdleTi... lang                          NoteProperty   System.String lang=e... LanguageMode                  NoteProperty   System.String Langua... MaxConcurrentCommandsPerShell NoteProperty   System.String MaxCon... MaxConcurrentUsers            NoteProperty   System.String MaxCon... MaxIdleTimeoutms              NoteProperty   System.String MaxIdl... MaxMemoryPerShellMB           NoteProperty   System.String MaxMem... MaxProcessesPerShell          NoteProperty   System.String MaxPro... MaxShells                     NoteProperty   System.String MaxShells MaxShellsPerUser              NoteProperty   System.String MaxShe... Name                          NoteProperty   System.String Name=N... PSVersion                     NoteProperty   System.String PSVersion ResourceUri                   NoteProperty   System.String Resour... RunAsPassword                 NoteProperty   System.String RunAsP... RunAsUser                     NoteProperty   System.String RunAsUser SchemaVersion                 NoteProperty   System.String Schema... SDKVersion                    NoteProperty   System.String SDKVer... OutputBufferingMode           NoteProperty   System.String Output... SessionType                   NoteProperty   System.String Sessio... UseSharedProcess              NoteProperty   System.String UseSha... SupportsOptions               NoteProperty   System.String Suppor... xmlns                         NoteProperty   System.String xmlns=... XmlRenderingType              NoteProperty   System.String XmlRen... Permission                    ScriptProperty System.Object Permis...</source>
          <target state="translated">Equals 메서드 bool Equals (System.O... GetHashCode 메서드 int gethashcode () GetType 메서드 형식 gettype ()에 대 한 Tostring 문자열 tostring () 아키텍처 NoteProperty System.String 아키 텍... 작성자 NoteProperty System.String 저자 중... AutoRestart NoteProperty System.String AutoRe... 기능 NoteProperty System.Object Capa... CompanyName NoteProperty System.String Compan... configfilepath NoteProperty System.String 구성... 저작권 NoteProperty System.String Copyri... 활성화 된 NoteProperty System.String 사용... ExactMatch NoteProperty System.String ExactM... ExecutionPolicy NoteProperty System.String Execut... Filename NoteProperty System.String Filena... GUID NoteProperty System.String GUID = 0... ProcessIdleTimeoutSec NoteProperty System.String 프로세스 중... IdleTimeoutms NoteProperty System.String IdleTi... lang NoteProperty System.String lang = e... LanguageMode NoteProperty System.String Langua... MaxConcurrentCommandsPerShell NoteProperty System.String MaxCon... MaxConcurrentUsers NoteProperty System.String MaxCon... MaxIdleTimeoutms NoteProperty System.String MaxIdl... MaxMemoryPerShellMB NoteProperty System.String MaxMem... MaxProcessesPerShell NoteProperty System.String MaxPro... MaxShells NoteProperty System.String MaxShells MaxShellsPerUser NoteProperty System.String MaxShe... 이름을 NoteProperty System.String 이름 = N... PSVersion NoteProperty System.String PSVersion ResourceUri NoteProperty System.String 및... {1&gt;runaspassword NoteProperty System.String RunAsP... RunAsUser NoteProperty System.String RunAsUser SchemaVersion NoteProperty System.String 스키마 중... SDKVersion NoteProperty System.String SDKVer... OutputBufferingMode NoteProperty System.String 출력 중... SessionType NoteProperty System.String 세션 중... UseSharedProcess NoteProperty System.String UseSha... SupportsOptions NoteProperty System.String 지원... xmlns NoteProperty System.String xmlns =... XmlRenderingType NoteProperty System.String XmlRen... 사용 권한 ScriptProperty System.Object Permis...</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>These properties make it easy to search for specific session configurations.</source>
          <target state="translated">이러한 속성을 사용 하면 쉽게 특정 세션 구성을 검색할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>For example, you can use the ExecutionPolicy property to find a session configuration that supports sessions with the RemoteSigned execution policy.</source>
          <target state="translated">예를 들어 ExecutionPolicy 속성을 사용 하 여 RemoteSigned 실행 정책과 함께 세션을 지 원하는 세션 구성을 찾을 수 있습니다.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>Note that, because the ExecutionPolicy property exists only on sessions that use session configuration files, the command might not return all qualifying session configurations.</source>
          <target state="translated">Note, ExecutionPolicy 속성은 세션 구성 파일을 사용 하는 세션에만 있으므로 명령 수를 반환 하지 않음을 조건에 맞는 모든 세션 구성 합니다.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>PS C:&gt; Get-PSSessionConfiguration | where {$_.ExecutionPolicy -eq "RemoteSigned"}</source>
          <target state="translated">PS c: &gt; Get-pssessionconfiguration | 여기서 {$_입니다. ExecutionPolicy-eq "RemoteSigned"}</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>The following command gets session configurations in which the RunAsUser is the Exchange administrator.</source>
          <target state="translated">다음 명령은 RunAsUser 인 Exchange 관리자가 세션 구성을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>PS C:&gt;  Get-PSSessionConfiguration | where {$_.RunAsUser -eq "Exchange01\Admin01"}</source>
          <target state="translated">PS c: &gt; Get-pssessionconfiguration | 여기서 {$_입니다. RunAsUser-eq "Exchange01\Admin01"}</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>To view information about the role definitions associated with a configuration use the Get-PSSessionCapability cmdlet.</source>
          <target state="translated">역할 정의 대 한 정보를 보려면 구성 사용 하 여 Get PSSessionCapability cmdlet과 연관 된 합니다.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>This cmdlet enables you to determine the commands and environment available to specific users in specific endpoints.</source>
          <target state="translated">이 cmdlet을 사용 하면 명령 및 특정 사용자에 게 특정 끝점에 사용할 수 있는 환경을 확인할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>NOTES</source>
          <target state="translated">참고 사항</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>Session configurations also support a type of session known as an "empty" session.</source>
          <target state="translated">세션 구성에는 또한 "empty"는 세션 이라고 하는 세션의 유형을 지원 합니다.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>An Empty session type enables you to create custom sessions with selected commands.</source>
          <target state="translated">빈 세션 종류를 사용 하면 선택한 명령을 사용 하 여 사용자 지정 세션을 만들 수 있습니다.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>If you do not add modules, functions, or scripts to an empty session, the session is limited to expressions and might not be of any practical use.</source>
          <target state="translated">빈 세션에 모듈, 함수 또는 스크립트를 추가 하지 않으면 세션이 식으로 제한 되며 모든 실제 사용 되지 않을 수도 있습니다.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>The SessionType property tells you whether or not you are working with an empty session.</source>
          <target state="translated">SessionType 속성은 빈 세션을 사용 하 여 작업할 여부를 알려 줍니다.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>SEE ALSO</source>
          <target state="translated">참고 항목</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>about_Session_Configurations New-PSSession Disable-PSSessionConfiguration Enable-PSSessionConfiguration Get-PSSessionConfiguration New-PSSessionConfigurationFile Register-PSSessionConfiguration Set-PSSessionConfiguration Test-PSSessionConfigurationFile Unregister-PSSessionConfiguration Get-PSSessionCapability New-PSRoleCapabilityFile</source>
          <target state="translated">New-pssession Disable-pssessionconfiguration Enable-pssessionconfiguration Get-pssessionconfiguration New-pssessionconfigurationfile Register-pssessionconfiguration Set-pssessionconfiguration Test-pssessionconfigurationfile Unregister-pssessionconfiguration Get PSSessionCapability 새로 만들기-PSRoleCapabilityFile about_Session_Configurations</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>