<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ko-kr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-1c394fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">80701c82d4c42202dede7e15138e384576140469</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">reference\3.0\Microsoft.PowerShell.Core\About\about_Format.ps1xml.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions" />
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">88e1e981bae3ccc8b97d81d69fafb3b01526dbd3</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">adf62eef9eb6cf074cf98d17169209ed74a5eb98</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>about_Format.ps1xml</source>
          <target state="translated">about_Format.ps1xml</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>powershell, cmdlet</source>
          <target state="translated">powershell cmdlet</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>About Format.ps1xml</source>
          <target state="translated">Format.ps1xml에 대 한</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>about_Format.ps1xml</source>
          <target state="translated">about_Format.ps1xml</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>about_Format.ps1xml</source>
          <target state="translated">about_Format.ps1xml</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>SHORT DESCRIPTION</source>
          <target state="translated">간단한 설명</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>The Format.ps1xml files in Windows PowerShell define the default display of objects in the Windows PowerShell console.</source>
          <target state="translated">Windows PowerShell의 Format.ps1xml 파일 Windows PowerShell 콘솔에서 개체의 기본 표시를 정의합니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>You can create your own Format.ps1xml files to change the display of objects or to define default displays for new object types that you create in Windows PowerShell.</source>
          <target state="translated">기본값을 정의 하려면 Windows PowerShell에서 만든 새 개체 형식에 대 한 표시 또는 개체의 표시를 변경 하려면 직접 Format.ps1xml 파일을 만들 수 있습니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>LONG DESCRIPTION</source>
          <target state="translated">자세한 설명</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The Format.ps1xml files in Windows PowerShell define the default display of objects in Windows PowerShell.</source>
          <target state="translated">Windows PowerShell의 Format.ps1xml 파일 Windows PowerShell에서 개체의 기본 표시를 정의합니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>You can create your own Format.ps1xml files to change the display of objects or to define default displays for new object types that you create in Windows PowerShell.</source>
          <target state="translated">기본값을 정의 하려면 Windows PowerShell에서 만든 새 개체 형식에 대 한 표시 또는 개체의 표시를 변경 하려면 직접 Format.ps1xml 파일을 만들 수 있습니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>When Windows PowerShell displays an object, it uses the data in structured formatting files to determine the default display of the object.</source>
          <target state="translated">Windows PowerShell 개체를 표시 하는 경우 데이터를 사용 구조적된 형식 지정 파일에는 개체의 기본 표시를 확인 하려면.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>The data in the formatting files determines whether the object is rendered in a table or in a list, and it determines which properties are displayed by default.</source>
          <target state="translated">서식 파일의에서 데이터를 결정 개체가 테이블 또는 목록으로 렌더링 됩니다 기본적으로 표시 되는 속성을 결정 합니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>The formatting affects the display only.</source>
          <target state="translated">서식 지정 디스플레이만 영향을 줍니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>It does not affect which object properties are passed down the pipeline or how they are passed.</source>
          <target state="translated">개체 속성은 파이프라인을 전달 하거나 전달 하는 방법을 영향을 주지 않습니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Format.ps1xml files cannot be used to customize the output format for hashtables.</source>
          <target state="translated">해시 테이블에 대 한 출력 형식을 사용자 지정 하려면 Format.ps1xml 파일을 사용할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Windows PowerShell includes seven formatting files.</source>
          <target state="translated">Windows PowerShell에는 7 개의 서식 파일이 포함 되어 있습니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>These files are located in the installation directory ($pshome).</source>
          <target state="translated">이러한 파일은 설치 디렉터리 ($pshome)에 있습니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Each file defines the display of a group of Microsoft .NET Framework objects:</source>
          <target state="translated">각 파일 그룹을 Microsoft.NET Framework 개체의 표시를 정의합니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Certificate.Format.ps1xml Objects in the Certificate store, such as X.509 certificates and certificate stores.</source>
          <target state="translated">인증서 저장소의 X.509 인증서, 인증서 저장소 등의 Certificate.Format.ps1xml 개체입니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>DotNetTypes.Format.ps1xml Other .NET Framework types, such as CultureInfo, FileVersionInfo, and EventLogEntry objects.</source>
          <target state="translated">DotNetTypes.Format.ps1xml 다른.NET Framework 형식, 예: CultureInfo, FileVersionInfo, 및 EventLogEntry 개체.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>FileSystem.Format.ps1xml File system objects, such as files and directories.</source>
          <target state="translated">FileSystem.Format.ps1xml 파일 시스템 개체, 파일 및 디렉터리 등입니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Help.Format.ps1xml Help views, such as detailed and full views, parameters, and examples.</source>
          <target state="translated">상세 하 고 전체 뷰, 매개 변수 및 예제 같은 Help.Format.ps1xml 도움말 보기</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>PowerShellCore.format.ps1xml Objects generated by Windows PowerShell core cmdlets, such as Get-Member and Get-History.</source>
          <target state="translated">Windows PowerShell 핵심 cmdlet 같은 Get-member 및 Get-history에 의해 생성 된 PowerShellCore.format.ps1xml 개체입니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>PowerShellTrace.format.ps1xml Trace objects, such as those generated by the Trace-Command cmdlet.</source>
          <target state="translated">Trace-command cmdlet에 의해 생성 된 것과 같은 PowerShellTrace.format.ps1xml 추적 개체</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Registry.format.ps1xml Registry objects, such as keys and entries.</source>
          <target state="translated">Registry.format.ps1xml 같은 레지스트리 개체 키와 항목입니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>A formatting file can define four different views of each object: table, list, wide, and custom.</source>
          <target state="translated">형식 지정 파일의 각 개체의 네 가지 뷰를 정의할 수 있습니다: 테이블, 목록, 차원 및 사용자 지정 합니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>For example, when the output of a Get-ChildItem command is piped to a Format-List command, Format-List uses the view in the FileSystem.format.ps1xml file to determine how to display the file and folder objects as a list.</source>
          <target state="translated">예를 들어 Get-childitem 명령의 출력은 Format-list 명령으로 파이프 됩니다 때 Format-list를 사용 하 여 보기 FileSystem.format.ps1xml 파일의 파일 및 폴더 개체 목록으로 표시 하는 방법을 결정 합니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>When a formatting file includes more than one view of an object, Windows PowerShell applies the first view that it finds.</source>
          <target state="translated">개체의 둘 이상의 뷰를 포함 하는 서식 파일을 발견 하는 첫 번째 보기 Windows PowerShell에 적용 됩니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>In a Format.ps1xml file, a view is defined by a set of XML tags that describe the name of the view, the type of object to which it can be applied, the column headers, and the properties that are displayed in the body of the view.</source>
          <target state="translated">Format.ps1xml 파일에서 뷰 정의한 뷰의 개체의 형식 이름을 설명 하는 XML 태그 집합인은 적용할 수, 열 머리글 및 보기의 본문에 표시 되는 속성입니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>The format in Format.ps1xml files is applied just before the data is presented to the user.</source>
          <target state="translated">데이터는 사용자에 게 표시 되는 바로 전에 Format.ps1xml 파일에 서식 적용 됩니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Creating New Format.ps1xml Files</source>
          <target state="translated">새로운 Format.ps1xml 파일 만들기</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>The .ps1xml files that are installed with Windows PowerShell are digitally signed to prevent tampering because the formatting can include script blocks.</source>
          <target state="translated">Windows PowerShell과 함께 설치 된.ps1xml 파일 서식을 스크립트 블록을 포함할 수 있으므로 변조를 방지 하기 위해 디지털로 서명 됩니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Therefore, to change the display format of an existing object view, or to add views for new objects, create your own Format.ps1xml files, and then add them to your Windows PowerShell session.</source>
          <target state="translated">따라서 기존 개체 뷰의 표시 형식을 변경 하거나 새 개체에 대 한 보기를 추가 하려면 직접 Format.ps1xml 파일을 만들고 Windows PowerShell 세션에 추가 합니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>To create a new file, copy an existing Format.ps1xml file.</source>
          <target state="translated">새 파일을 만들려면 기존 Format.ps1xml 파일을 복사 합니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>The new file can have any name, but it must have a .ps1xml file name extension.</source>
          <target state="translated">새 파일 이름을 가질 수 있지만.ps1xml 파일 이름 확장명이 있어야 합니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>You can place the new file in any directory that is accessible to Windows PowerShell, but it is useful to place the files in the Windows PowerShell installation directory ($pshome) or in a subdirectory of the installation directory.</source>
          <target state="translated">Windows PowerShell에 액세스할 수 있는 모든 디렉터리에서 새 파일을 배치할 수 있지만 Windows PowerShell 설치 디렉터리 ($pshome) 또는 설치 디렉터리의 하위 디렉터리에 파일을 추가 하는 것이 유용 합니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>To change the formatting of a current view, locate the view in the formatting file, and then use the tags to change the view.</source>
          <target state="translated">현재 보기의 서식 지정을 변경 하려면 서식 파일에서 뷰를 찾습니다 하 고 태그를 사용 하 여 뷰를 변경 합니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>To create a view for a new object type, create a new view, or use an existing view as a model.</source>
          <target state="translated">새 개체 유형에 대 한 뷰를 만들려면 새 보기를 만들거나 모델로 기존 보기를 사용 합니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>(The tags are described in the next section of this topic.) You can then delete all the other views in the file so that the changes are obvious to anyone examining the file.</source>
          <target state="translated">(태그는이 항목의 다음 섹션에서 설명 합니다.) 그런 다음 변경 내용이 파일을 검사 하는 모든 사용자에 게 명백 하 게 되도록 파일의 다른 모든 뷰를 삭제할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>When you have saved the changes, use the Update-FormatData cmdlet to add the new file to your Windows PowerShell session.</source>
          <target state="translated">변경 내용의 저장 하는 경우 Update-formatdata cmdlet을 사용 하 여 Windows PowerShell 세션에 새 파일을 추가 합니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>If you want your view to take precedence over a view defined in the built-in files, use the PrependData parameter of Update-FormatData.</source>
          <target state="translated">기본 제공 파일에서 정의 된 뷰에 보다 우선 하도록 보기를 원하는 경우 Update-formatdata의 PrependData 매개 변수를 사용 합니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Update-FormatData affects only the current session.</source>
          <target state="translated">Update-formatdata는 현재 세션을만 영향을 줍니다.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>To make the change to all future sessions, add the Update-FormatData command to your Windows PowerShell profile.</source>
          <target state="translated">이후의 모든 세션을 변경 하려면 Update-formatdata 명령을 Windows PowerShell 프로필에 추가 합니다.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Example: Adding Calendar Data to Culture Objects</source>
          <target state="translated">예: 일정 데이터 문화권 개체 추가</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>This example shows how to change the formatting of the culture objects (System.Globalization.CultureInfo) generated by the Get-Culture cmdlet.</source>
          <target state="translated">이 예제에는 Get-culture cmdlet에 의해 생성 된 (System.Globalization.CultureInfo) 문화권 개체의 서식을 변경 하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>The commands in the example add the calendar property to the default table view display of culture objects.</source>
          <target state="translated">예제의 명령은 문화권 개체의 기본 테이블 뷰 표시에 calendar 속성을 추가합니다.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>The first step is to find the Format.ps1xml file that contains the current view of the culture objects.</source>
          <target state="translated">첫 번째 단계는 문화권 개체의 현재 보기를 포함 하는 Format.ps1xml 파일을 찾는 것입니다.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>The following Select-String command finds the file:</source>
          <target state="translated">다음 Select-string 명령 파일을 찾습니다.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>select-string -path $pshome<ph id="ph1">\*</ph>format.ps1xml ` -pattern System.Globalization.CultureInfo</source>
          <target state="translated">선택-문자열-경로 $pshome<ph id="ph1">\*</ph>format.ps1xml '-System.Globalization.CultureInfo 패턴</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>This command reveals that the definition is in the DotNetTypes.Format.ps1xml file.</source>
          <target state="translated">이 명령은 DotNetTypes.Format.ps1xml 파일에는 정의 알 수 있습니다.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>The next command copies the file contents to a new file, MyDotNetTypes.Format.ps1xml.</source>
          <target state="translated">다음 명령은 파일의 내용을 MyDotNetTypes.Format.ps1xml 새 파일을 복사합니다.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>copy-item DotNetTypes.Format.ps1xml MyDotNetTypes.Format.ps1xml</source>
          <target state="translated">DotNetTypes.Format.ps1xml MyDotNetTypes.Format.ps1xml 항목 복사</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Next, open the MyDotNetTypes.Format.ps1xml file in any XML or text editor, such as Notepad.</source>
          <target state="translated">다음으로, XML 또는 텍스트 편집기, 메모장과 같은에서 MyDotNetTypes.Format.ps1xml 파일을 엽니다.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Find the System.Globalization.CultureInfo object section.</source>
          <target state="translated">System.Globalization.CultureInfo 개체 섹션을 찾습니다.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>The following XML defines the views of the CultureInfo object.</source>
          <target state="translated">다음 XML CultureInfo 개체의 뷰를 정의합니다.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>The object has only a TableControl view.</source>
          <target state="translated">개체에만 TableControl 보기.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>System.Globalization.CultureInfo<ph id="ph1">&lt;/Name&gt;
&lt;ViewSelectedBy&gt;
&lt;TypeName&gt;</ph>Deserialized.System.Globalization.CultureInfo<ph id="ph2">&lt;/TypeName&gt;
&lt;TypeName&gt;</ph>System.Globalization.CultureInfo</source>
          <target state="translated">System.Globalization.CultureInfo<ph id="ph1">&lt;/Name&gt;
&lt;ViewSelectedBy&gt;
&lt;TypeName&gt;</ph>Deserialized.System.Globalization.CultureInfo<ph id="ph2">&lt;/TypeName&gt;
&lt;TypeName&gt;</ph>System.Globalization.CultureInfo</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>16<ph id="ph1">&lt;/Width&gt;
&lt;/TableColumnHeader&gt;
&lt;TableColumnHeader&gt;
&lt;Width&gt;</ph>16<ph id="ph2">&lt;/Width&gt;
&lt;/TableColumnHeader&gt;
&lt;TableColumnHeader/&gt;
&lt;/TableHeaders&gt;
&lt;TableRowEntries&gt;
&lt;TableRowEntry&gt;
&lt;TableColumnItems&gt;
&lt;TableColumnItem&gt;
&lt;PropertyName&gt;</ph>LCID<ph id="ph3">&lt;/PropertyName&gt;
&lt;/TableColumnItem&gt;
&lt;TableColumnItem&gt;
&lt;PropertyName&gt;</ph>Name<ph id="ph4">&lt;/PropertyName&gt;
&lt;/TableColumnItem&gt;
&lt;TableColumnItem&gt;
&lt;PropertyName&gt;</ph>DisplayName</source>
          <target state="translated">16<ph id="ph1">&lt;/Width&gt;
&lt;/TableColumnHeader&gt;
&lt;TableColumnHeader&gt;
&lt;Width&gt;</ph>16<ph id="ph2">&lt;/Width&gt;
&lt;/TableColumnHeader&gt;
&lt;TableColumnHeader/&gt;
&lt;/TableHeaders&gt;
&lt;TableRowEntries&gt;
&lt;TableRowEntry&gt;
&lt;TableColumnItems&gt;
&lt;TableColumnItem&gt;
&lt;PropertyName&gt;</ph>LCID<ph id="ph3">&lt;/PropertyName&gt;
&lt;/TableColumnItem&gt;
&lt;TableColumnItem&gt;
&lt;PropertyName&gt;</ph>이름<ph id="ph4">&lt;/PropertyName&gt;
&lt;/TableColumnItem&gt;
&lt;TableColumnItem&gt;
&lt;PropertyName&gt;</ph>DisplayName</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>Delete the remainder of the file, except for the opening &lt;?XML&gt;, <ph id="ph1">&lt;Configuration&gt;</ph>, and <ph id="ph2">&lt;ViewDefinitions&gt;</ph> tags and the closing <ph id="ph3">&lt;ViewDefintions&gt;</ph> and <ph id="ph4">&lt;Configuration&gt;</ph> tags.</source>
          <target state="translated">열기를 제외 하 고 파일의 나머지 부분을 삭제 합니다. &lt;? XML &gt;, <ph id="ph1">&lt;Configuration&gt;</ph>, 및 <ph id="ph2">&lt;ViewDefinitions&gt;</ph> 태그와 닫는 <ph id="ph3">&lt;ViewDefintions&gt;</ph> 및 <ph id="ph4">&lt;Configuration&gt;</ph> 태그입니다.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>You must also delete the digital signature whenever you change the file.</source>
          <target state="translated">파일을 변경할 때마다 디지털 서명을 삭제 해야 합니다.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>System.Globalization.CultureInfo<ph id="ph1">&lt;/Name&gt;
&lt;ViewSelectedBy&gt;
&lt;TypeName&gt;</ph>Deserialized.System.Globalization.CultureInfo<ph id="ph2">&lt;/TypeName&gt;
&lt;TypeName&gt;</ph>System.Globalization.CultureInfo<ph id="ph3">&lt;/TypeName&gt;
&lt;/ViewSelectedBy&gt;

&lt;TableControl&gt;
&lt;TableHeaders&gt;
&lt;TableColumnHeader&gt;
&lt;Width&gt;</ph>16<ph id="ph4">&lt;/Width&gt;
&lt;/TableColumnHeader&gt;
&lt;TableColumnHeader&gt;
&lt;Width&gt;</ph>16<ph id="ph5">&lt;/Width&gt;
&lt;/TableColumnHeader&gt;
&lt;TableColumnHeader/&gt;
&lt;/TableHeaders&gt;
&lt;TableRowEntries&gt;
&lt;TableRowEntry&gt;
&lt;TableColumnItems&gt;
&lt;TableColumnItem&gt;
&lt;PropertyName&gt;</ph>LCID<ph id="ph6">&lt;/PropertyName&gt;
&lt;/TableColumnItem&gt;
&lt;TableColumnItem&gt;
&lt;PropertyName&gt;</ph>Name<ph id="ph7">&lt;/PropertyName&gt;
&lt;/TableColumnItem&gt;
&lt;TableColumnItem&gt;
&lt;PropertyName&gt;</ph>DisplayName</source>
          <target state="translated">System.Globalization.CultureInfo<ph id="ph1">&lt;/Name&gt;
&lt;ViewSelectedBy&gt;
&lt;TypeName&gt;</ph>Deserialized.System.Globalization.CultureInfo<ph id="ph2">&lt;/TypeName&gt;
&lt;TypeName&gt;</ph>System.Globalization.CultureInfo<ph id="ph3">&lt;/TypeName&gt;
&lt;/ViewSelectedBy&gt;

&lt;TableControl&gt;
&lt;TableHeaders&gt;
&lt;TableColumnHeader&gt;
&lt;Width&gt;</ph>16<ph id="ph4">&lt;/Width&gt;
&lt;/TableColumnHeader&gt;
&lt;TableColumnHeader&gt;
&lt;Width&gt;</ph>16<ph id="ph5">&lt;/Width&gt;
&lt;/TableColumnHeader&gt;
&lt;TableColumnHeader/&gt;
&lt;/TableHeaders&gt;
&lt;TableRowEntries&gt;
&lt;TableRowEntry&gt;
&lt;TableColumnItems&gt;
&lt;TableColumnItem&gt;
&lt;PropertyName&gt;</ph>LCID<ph id="ph6">&lt;/PropertyName&gt;
&lt;/TableColumnItem&gt;
&lt;TableColumnItem&gt;
&lt;PropertyName&gt;</ph>이름<ph id="ph7">&lt;/PropertyName&gt;
&lt;/TableColumnItem&gt;
&lt;TableColumnItem&gt;
&lt;PropertyName&gt;</ph>DisplayName</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>Next, create a new column for the Calendar property by adding a new set of <ph id="ph1">&lt;TableColumnHeader&gt;</ph> tags.</source>
          <target state="translated">다음으로, 새 집합을 추가 하 여 일정 속성에 대 한 새 열을 만듭니다 <ph id="ph1">&lt;TableColumnHeader&gt;</ph> 태그입니다.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>The value of the Calendar property can be long, so a value of 45 characters is used, as follows:</source>
          <target state="translated">일정 속성의 값 길이 수 있으므로 45 문자의 값을 다음과 같이 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>16<ph id="ph1">&lt;/Width&gt;
&lt;/TableColumnHeader&gt;
&lt;TableColumnHeader&gt;
&lt;Width&gt;</ph>16</source>
          <target state="translated">16<ph id="ph1">&lt;/Width&gt;
&lt;/TableColumnHeader&gt;
&lt;TableColumnHeader&gt;
&lt;Width&gt;</ph>16</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>45</source>
          <target state="translated">45</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>Now, add a new column item in the table rows, as follows:</source>
          <target state="translated">다음과 같이 테이블 행에 새 열 항목을 추가.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>LCID<ph id="ph1">&lt;/PropertyName&gt;
&lt;/TableColumnItem&gt;
&lt;TableColumnItem&gt;
&lt;PropertyName&gt;</ph>Name</source>
          <target state="translated">LCID<ph id="ph1">&lt;/PropertyName&gt;
&lt;/TableColumnItem&gt;
&lt;TableColumnItem&gt;
&lt;PropertyName&gt;</ph>이름</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>Calendar</source>
          <target state="translated">일정</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>DisplayName</source>
          <target state="translated">DisplayName</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>After saving the file and closing it, use an Update-FormatData command, such as the following command, to add the new format file to the current session.</source>
          <target state="translated">파일을 저장 하 고 닫은 후 현재 세션에 새 서식 파일을 추가 하려면 다음 명령과 같이 Update-formatdata 명령을 사용 하 여.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>The command uses the PrependData parameter to place the new file in a higher precedence order than the original file.</source>
          <target state="translated">이 명령은 원본 파일 보다 더 높은 우선 순위 순서에 새 파일을 배치 PrependData 매개 변수를 사용 합니다.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>(For more information about Update-FormatData, type "get-help update-formatdata".)</source>
          <target state="translated">(Update-formatdata에 대 한 자세한 내용은 "get-help 업데이트 formatdata" 입력).</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>update-formatdata -prependpath $pshome\MyDotNetTypes.format.ps1xml</source>
          <target state="translated">업데이트 formatdata-prependpath $pshome\MyDotNetTypes.format.ps1xml</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>To test the change, type "get-culture", and then review the output, which includes the Calendar property.</source>
          <target state="translated">변경 내용을 테스트 합니다 "get-culture"를 입력 한 다음 일정 속성을 포함 하는 출력을 검토 합니다.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>C:\PS&gt; get-culture</source>
          <target state="translated">C:\PS &gt; get 문화권</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>LCID Name  Calendar                               DisplayName</source>
          <target state="translated">LCID 이름 달력 DisplayName</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>1033 en-US System.Globalization.GregorianCalendar English (United States)</source>
          <target state="translated">1033 EN-US System.Globalization.GregorianCalendar 영어 (미국)</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>The XML in Format.ps1xml Files</source>
          <target state="translated">Format.ps1xml 파일에서 XML</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>The ViewDefinitions section of each Format.ps1xml file contains the <ph id="ph1">&lt;View&gt;</ph> tags that define each view.</source>
          <target state="translated">각 Format.ps1xml 파일의 섹션에는 ViewDefinitions 포함는 <ph id="ph1">&lt;View&gt;</ph> 각 보기를 정의 하는 태그입니다.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>A typical <ph id="ph1">&lt;View&gt;</ph> tag includes the following tags:</source>
          <target state="translated">일반적인 <ph id="ph1">&lt;View&gt;</ph> 태그는 다음과 같은 태그를 포함 합니다.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;Name&gt;</ph> tag identifies the name of the view.</source>
          <target state="translated"> <ph id="ph1">&lt;Name&gt;</ph> 태그 보기의 이름을 식별 합니다.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;ViewSelectedBy&gt;</ph> tag specifies the object type or types to which the view applies.</source>
          <target state="translated"> <ph id="ph1">&lt;ViewSelectedBy&gt;</ph> 태그 개체 형식을 지정 하거나 뷰에 적용 되는 형식입니다.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;GroupBy&gt;</ph> tag specifies how items in the view will be combined in groups.</source>
          <target state="translated"> <ph id="ph1">&lt;GroupBy&gt;</ph> 태그 보기의 항목 그룹에 결합 하는 방법을 지정 합니다.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>These tags contain the tags that specify how each item will be displayed.</source>
          <target state="translated">이러한 태그는 각 항목을 표시 하는 방법을 지정 하는 태그를 포함 합니다.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;ViewSelectedBy&gt;</ph> tag can contain a <ph id="ph2">&lt;TypeName&gt;</ph> tag for each object type to which the view applies.</source>
          <target state="translated"> <ph id="ph1">&lt;ViewSelectedBy&gt;</ph> 태그에 포함 될 수는 <ph id="ph2">&lt;TypeName&gt;</ph> 뷰에 적용 되는 각 개체 유형에 대 한 태그입니다.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>Or, it can contain a <ph id="ph1">&lt;SelectionSetName&gt;</ph> tag that references a selection set that is defined elsewhere by using a <ph id="ph2">&lt;SelectionSet&gt;</ph> tag.</source>
          <target state="translated">또는 포함할 수는 <ph id="ph1">&lt;SelectionSetName&gt;</ph> 참조 집합을 선택 하는 태그를 사용 하 여 다른 곳에서 정의 <ph id="ph2">&lt;SelectionSet&gt;</ph> 태그입니다.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;GroupBy&gt;</ph> tag contains a <ph id="ph2">&lt;PropertyName&gt;</ph> tag that specifies the object property by which items are to be grouped.</source>
          <target state="translated"> <ph id="ph1">&lt;GroupBy&gt;</ph> 태그를 포함 한 <ph id="ph2">&lt;PropertyName&gt;</ph> 그룹화 할 항목은 개체 속성을 지정 하는 태그입니다.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>It also contains either a <ph id="ph1">&lt;Label&gt;</ph> tag that specifies a string to be used as a label for each group or a <ph id="ph2">&lt;CustomControlName&gt;</ph> tag that references a custom control defined elsewhere using a <ph id="ph3">&lt;Control&gt;</ph> tag.</source>
          <target state="translated">또한 포함 하거나는 <ph id="ph1">&lt;Label&gt;</ph> 각 그룹에 대 한 레이블로 사용할 문자열을 지정 하는 태그 또는 <ph id="ph2">&lt;CustomControlName&gt;</ph> 사용 하 여 다른 곳에서 정의 하는 사용자 지정 컨트롤을 참조 하는 태그는 <ph id="ph3">&lt;Control&gt;</ph> 태그입니다.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;Control&gt;</ph> tag contains a <ph id="ph2">&lt;Name&gt;</ph> tag and a <ph id="ph3">&lt;CustomControl&gt;</ph> tag.</source>
          <target state="translated"> <ph id="ph1">&lt;Control&gt;</ph> 태그를 포함 한 <ph id="ph2">&lt;Name&gt;</ph> 태그 및 <ph id="ph3">&lt;CustomControl&gt;</ph> 태그입니다.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;TableControl&gt;</ph> tag typically contains <ph id="ph2">&lt;TableHeaders&gt;</ph> and <ph id="ph3">&lt;TableRowEntries&gt;</ph> tags that define the formatting for the table's heads and rows.</source>
          <target state="translated"> <ph id="ph1">&lt;TableControl&gt;</ph> 태그는 일반적으로 포함 <ph id="ph2">&lt;TableHeaders&gt;</ph> 및 <ph id="ph3">&lt;TableRowEntries&gt;</ph> 테이블의 헤드 및 행에 대 한 서식을 정의 하는 태그입니다.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;TableHeaders&gt;</ph> tag typically contains <ph id="ph2">&lt;TableColumnHeader&gt;</ph> tags that contain <ph id="ph3">&lt;Label&gt;</ph>, <ph id="ph4">&lt;Width&gt;</ph>, and <ph id="ph5">&lt;Alignment&gt;</ph> tags.</source>
          <target state="translated"> <ph id="ph1">&lt;TableHeaders&gt;</ph> 태그는 일반적으로 포함 <ph id="ph2">&lt;TableColumnHeader&gt;</ph> 태그를 포함 하는 <ph id="ph3">&lt;Label&gt;</ph>, <ph id="ph4">&lt;Width&gt;</ph>, 및 <ph id="ph5">&lt;Alignment&gt;</ph> 태그입니다.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;TableRowEntries&gt;</ph> tag contains <ph id="ph2">&lt;TableRowEntry&gt;</ph> tags for each row in the table.</source>
          <target state="translated"> <ph id="ph1">&lt;TableRowEntries&gt;</ph> 태그가 포함 <ph id="ph2">&lt;TableRowEntry&gt;</ph> 테이블의 각 행에 대 한 태그입니다.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;TableRowEntry&gt;</ph> tag contains a <ph id="ph2">&lt;TableColumnItems&gt;</ph> tag that contains a <ph id="ph3">&lt;TableColumnItem&gt;</ph> tag for each column in the row.</source>
          <target state="translated"> <ph id="ph1">&lt;TableRowEntry&gt;</ph> 태그를 포함 한 <ph id="ph2">&lt;TableColumnItems&gt;</ph> 태그를 포함 하는 <ph id="ph3">&lt;TableColumnItem&gt;</ph> 행의 각 열에 대 한 태그입니다.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>Typically, the <ph id="ph1">&lt;TableColumnItem&gt;</ph> tag contains either a <ph id="ph2">&lt;PropertyName&gt;</ph> tag that identifies the object property to be displayed in the defined location, or a <ph id="ph3">&lt;ScriptBlock&gt;</ph> tag that contains script code that calculates a result that is to be displayed in the location.</source>
          <target state="translated">일반적으로 <ph id="ph1">&lt;TableColumnItem&gt;</ph> 태그를 포함 하거나 한 <ph id="ph2">&lt;PropertyName&gt;</ph> 정의 된 위치에 표시 되는 개체 속성을 식별 하는 태그 또는 <ph id="ph3">&lt;ScriptBlock&gt;</ph> 위치에 표시 되는 결과 계산 하는 스크립트 코드를 포함 하는 태그입니다.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>Note: Script blocks can also be used elsewhere in locations where calculated results can be useful.</source>
          <target state="translated">참고: 스크립트 블록 수도 다른 곳에서 위치에서 사용할 수 계산된 결과 유용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;TableColumnItem&gt;</ph> tag can also contain a <ph id="ph2">&lt;FormatString&gt;</ph> tag that specifies how the property or the calculated results will be displayed.</source>
          <target state="translated"> <ph id="ph1">&lt;TableColumnItem&gt;</ph> 태그도 포함 될 수는 <ph id="ph2">&lt;FormatString&gt;</ph> 속성 또는 계산 된 결과 표시 되는 방식을 지정 하는 태그입니다.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;ListControl&gt;</ph> tag typically contains a <ph id="ph2">&lt;ListEntries&gt;</ph> tag.</source>
          <target state="translated"> <ph id="ph1">&lt;ListControl&gt;</ph> 태그는 일반적으로 포함 된 <ph id="ph2">&lt;ListEntries&gt;</ph> 태그입니다.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;ListEntries&gt;</ph> tag contains a <ph id="ph2">&lt;ListItems&gt;</ph> tag.</source>
          <target state="translated"> <ph id="ph1">&lt;ListEntries&gt;</ph> 태그를 포함 한 <ph id="ph2">&lt;ListItems&gt;</ph> 태그입니다.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;ListItems&gt;</ph> tag contains <ph id="ph2">&lt;ListItem&gt;</ph> tags, which contain <ph id="ph3">&lt;PropertyName&gt;</ph> tags.</source>
          <target state="translated"> <ph id="ph1">&lt;ListItems&gt;</ph> 태그가 포함 <ph id="ph2">&lt;ListItem&gt;</ph> 포함 되어 있는 태그 <ph id="ph3">&lt;PropertyName&gt;</ph> 태그입니다.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;PropertyName&gt;</ph> tags specify the object property to be displayed at the specified location in the list.</source>
          <target state="translated"> <ph id="ph1">&lt;PropertyName&gt;</ph> 태그 목록에서 지정된 된 위치에 표시 되는 개체 속성을 지정 합니다.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>If the view selection is defined using a selection set, the <ph id="ph1">&lt;ListControl&gt;</ph> tag can also contain an <ph id="ph2">&lt;EntrySelectedBy&gt;</ph> tag that contains one or more <ph id="ph3">&lt;TypeName&gt;</ph> tags.</source>
          <target state="translated">뷰 선택을 선택 집합을 사용 하 여 정의 된 경우는 <ph id="ph1">&lt;ListControl&gt;</ph> 태그도 포함 될 수는 <ph id="ph2">&lt;EntrySelectedBy&gt;</ph> 하나 이상 포함 된 태그 <ph id="ph3">&lt;TypeName&gt;</ph> 태그입니다.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>These <ph id="ph1">&lt;TypeName&gt;</ph> tags specify the object type that the <ph id="ph2">&lt;ListControl&gt;</ph> tag is intended to display.</source>
          <target state="translated">이러한 <ph id="ph1">&lt;TypeName&gt;</ph> 태그 개체 형식 지정은 <ph id="ph2">&lt;ListControl&gt;</ph> 태그가 표시 됩니다.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;WideControl&gt;</ph> tag typically contains a <ph id="ph2">&lt;WideEntries&gt;</ph> tag.</source>
          <target state="translated"> <ph id="ph1">&lt;WideControl&gt;</ph> 태그는 일반적으로 포함 된 <ph id="ph2">&lt;WideEntries&gt;</ph> 태그입니다.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;WideEntries&gt;</ph> tag contains one or more <ph id="ph2">&lt;WideEntry&gt;</ph> tags.</source>
          <target state="translated"> <ph id="ph1">&lt;WideEntries&gt;</ph> 태그 하나 이상 포함 <ph id="ph2">&lt;WideEntry&gt;</ph> 태그입니다.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;WideEntry&gt;</ph> tag typically contains a <ph id="ph2">&lt;PropertyName&gt;</ph> tag that specifies the property to be displayed at the specified location in the view.</source>
          <target state="translated">A <ph id="ph1">&lt;WideEntry&gt;</ph> 태그는 일반적으로 포함 된 <ph id="ph2">&lt;PropertyName&gt;</ph> 보기에서 지정된 된 위치에 표시 되는 속성을 지정 하는 태그입니다.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;PropertyName&gt;</ph> tag can contain a <ph id="ph2">&lt;FormatString&gt;</ph> tag that specifies how the property is to be displayed.</source>
          <target state="translated"> <ph id="ph1">&lt;PropertyName&gt;</ph> 태그에 포함 될 수는 <ph id="ph2">&lt;FormatString&gt;</ph> 속성 표시를 하는 방법을 지정 하는 태그입니다.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;CustomControl&gt;</ph> tag lets you use a script block to define a format.</source>
          <target state="translated"> <ph id="ph1">&lt;CustomControl&gt;</ph> 태그를 사용 하면 스크립트 블록을 사용 하 여 형식을 정의 합니다.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;CustomControl&gt;</ph> tag typically contains a <ph id="ph2">&lt;CustomEntries&gt;</ph> tag that contains multiple <ph id="ph3">&lt;CustomEntry&gt;</ph> tags.</source>
          <target state="translated">A <ph id="ph1">&lt;CustomControl&gt;</ph> 태그는 일반적으로 포함 된 <ph id="ph2">&lt;CustomEntries&gt;</ph> 여러 개 포함 된 태그 <ph id="ph3">&lt;CustomEntry&gt;</ph> 태그입니다.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>Each <ph id="ph1">&lt;CustomEntry&gt;</ph> tag contains a <ph id="ph2">&lt;CustomItem&gt;</ph> tags that can contain a variety of tags that specify contents and formatting of the specified location in the view, including <ph id="ph3">&lt;Text&gt;</ph>, <ph id="ph4">&lt;Indentation&gt;</ph>, <ph id="ph5">&lt;ExpressionBinding&gt;</ph>, and <ph id="ph6">&lt;NewLine&gt;</ph> tags.</source>
          <target state="translated">각 <ph id="ph1">&lt;CustomEntry&gt;</ph> 태그를 포함 한 <ph id="ph2">&lt;CustomItem&gt;</ph> 다양 한 내용을 지정 하는 태그와 서식을 보기에서 지정된 된 위치를 포함할 수 있는 태그 포함 하 여 <ph id="ph3">&lt;Text&gt;</ph>, <ph id="ph4">&lt;Indentation&gt;</ph>, <ph id="ph5">&lt;ExpressionBinding&gt;</ph>, 및 <ph id="ph6">&lt;NewLine&gt;</ph> 태그입니다.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>Update-FormatData</source>
          <target state="translated">Update-FormatData</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>To load your Format.ps1xml files into a Windows PowerShell session, use the Update-FormatData cmdlet.</source>
          <target state="translated">Windows PowerShell 세션으로 Format.ps1xml 파일을 로드 하려면 Update-formatdata cmdlet을 사용 합니다.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>If you want the views in your file to take precedence over the views in the built-in Format.ps1xml file, use the PrependData parameter of Update-FormatData.</source>
          <target state="translated">기본 제공 Format.ps1xml 파일에는 보기 보다 우선 하기 위해 파일에는 보기를 원하는 경우 Update-formatdata의 PrependData 매개 변수를 사용 합니다.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>Update-FormatData affects only the current session.</source>
          <target state="translated">Update-formatdata는 현재 세션을만 영향을 줍니다.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>To make the change to all future sessions, add the Update-FormatData command to your Windows PowerShell profile.</source>
          <target state="translated">이후의 모든 세션을 변경 하려면 Update-formatdata 명령을 Windows PowerShell 프로필에 추가 합니다.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>Default Displays in Types.ps1xml</source>
          <target state="translated">Types.ps1xml의 기본 표시</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>The default displays of some basic object types are defined in the Types.ps1xml file in the $pshome directory.</source>
          <target state="translated">기본 형식 $pshome 디렉터리에서 Types.ps1xml 파일에 정의 된 몇 가지 기본 개체의 표시 합니다.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>The nodes are named PsStandardMembers, and the subnodes use one of the following tags:</source>
          <target state="translated">노드 이름은 PsStandardMembers, 및 하위 노드는 다음과 같은 태그 중 하나를 사용 합니다.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>For more information, type the following command:</source>
          <target state="translated">자세한 내용은 다음 명령을 입력 합니다.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>get-help about_types.ps1xml</source>
          <target state="translated">도움말 얻기 about_types.ps1xml</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>Tracing Format.ps1xml File Use</source>
          <target state="translated">Format.ps1xml 파일 사용 추적</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>To detect errors in the loading or application of Format.ps1xml files, use the Trace-Command cmdlet with any of the following format components as the value of the Name parameter:</source>
          <target state="translated">로드 또는 응용 프로그램의 Format.ps1xml 파일에서 오류를 감지 하려면 Name 매개 변수 값으로 다음과 같은 형식 구성 요소를 사용 하 여 Trace-command cmdlet을 사용 합니다.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>FormatFileLoading UpdateFormatData FormatViewBinding</source>
          <target state="translated">FormatFileLoading UpdateFormatData FormatViewBinding</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>For more information, type the following commands:</source>
          <target state="translated">자세한 내용은 다음 명령을 입력 합니다.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>get-help trace-command get-help get-tracesource</source>
          <target state="translated">도움말 얻기 추적 명령 get tracesource 도움말 얻기</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>Signing a Format.ps1xml File</source>
          <target state="translated">Format.ps1xml 파일에 서명</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>To protect the users of your Format.ps1xml file, sign the file using a digital signature.</source>
          <target state="translated">Format.ps1xml 파일의 사용자를 보호 하려면 디지털 서명을 사용 하 여 파일에 서명 합니다.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>For more information, type:</source>
          <target state="translated">더 자세한 내용을 보려면 다음을 입력하십시오.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>get-help about_signing</source>
          <target state="translated">about_signing 도움말 얻기</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>SEE ALSO</source>
          <target state="translated">참고 항목</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>Update-FormatData Trace-Command Get-TraceSource</source>
          <target state="translated">Update-formatdata 추적-Get-tracesource 명령</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>