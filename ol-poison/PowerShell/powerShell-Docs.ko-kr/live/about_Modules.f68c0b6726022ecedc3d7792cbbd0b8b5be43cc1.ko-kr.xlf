<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ko-kr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-1c394fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">6859da195a06a136a10703b5b1a81069cfbffe34</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">reference\3.0\Microsoft.PowerShell.Core\About\about_Modules.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions" />
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fc42907ddbacfe86005507d1034495ed40c5430d</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f9126be4df788fc8d45d6a96d585cd1094154506</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>about_Modules</source>
          <target state="translated">about_Modules</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>powershell, cmdlet</source>
          <target state="translated">powershell cmdlet</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>About Modules</source>
          <target state="translated">모듈 정보</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>about_Modules</source>
          <target state="translated">about_Modules</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>about_Modules</source>
          <target state="translated">about_Modules</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>SHORT DESCRIPTION</source>
          <target state="translated">간단한 설명</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Explains how to install, import, and use Windows PowerShell modules.</source>
          <target state="translated">Windows PowerShell 모듈을 설치하고, 가져오고, 사용하는 방법에 대해 설명합니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>LONG DESCRIPTION</source>
          <target state="translated">자세한 설명</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>A module is a package that contains Windows PowerShell commands, such as cmdlets, providers, functions, workflows, variables, and aliases.</source>
          <target state="translated">모듈은 cmdlet, 공급자, 함수, 변수 및 별칭과 같은 Windows PowerShell 명령을 포함하는 패키지입니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>People who write commands can use modules to organize their commands and share them with others.</source>
          <target state="translated">명령을 작성하는 사용자는 모듈을 사용하여 자신의 명령을 구성하고 다른 사용자와 공유할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>People who receive modules can add the commands in the modules to their Windows PowerShell sessions and use them just like the built-in commands.</source>
          <target state="translated">모듈을 받는 사용자는 자신의 Windows PowerShell 세션에 모듈의 명령을 추가하여 기본 제공 명령처럼 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>This topic explains how to use Windows PowerShell modules.</source>
          <target state="translated">이 항목에서는 Windows PowerShell 모듈을 사용하는 방법에 대해 설명합니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>For information about how to write Windows PowerShell modules, see "Writing a Windows PowerShell Module" in the MSDN (Microsoft Developer Network) library at http://go.microsoft.com/fwlink/?LinkId=144916.</source>
          <target state="translated">Windows PowerShell 모듈을 작성하는 방법에 대한 자세한 내용은 MSDN(Microsoft Developer Network) 라이브러리의 "Windows PowerShell 모듈 작성"(http://go.microsoft.com/fwlink/?LinkId=144916)(영문)을 참조하세요.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>WHAT IS A MODULE?</source>
          <target state="translated">모듈이란?</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>A module is a package of commands.</source>
          <target state="translated">모듈은 명령의 패키지입니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>All cmdlets and providers in your session are added by a module or a snap-in.</source>
          <target state="translated">모든 세션의 공급자 및 cmdlet은 모듈 또는 스냅인으로 추가 됩니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>WHAT'S NEW IN MODULES: Module Auto-Loading Beginning in Windows PowerShell 3.0, Windows PowerShell imports modules automatically the first time that you run any command in an installed module.</source>
          <target state="translated">모듈의 새로운 란: Windows PowerShell 3.0에서 Windows PowerShell 모듈 자동 로드 시작 모듈 자동으로 설치 된 모듈의 모든 명령을 실행 하는 처음으로 가져옵니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>You can now use the commands in a module without any set-up or profile configuration, so there's no need to manage modules after you install them on your computer.</source>
          <target state="translated">이제는 설정 및 프로필 구성 없이도 모듈의 명령을 사용할 수 있으므로 컴퓨터에 모듈을 설치한 후에 모듈을 관리할 필요가 없습니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>The commands in a module are also easier to find.</source>
          <target state="translated">또한 모듈의 명령이 보다 쉽게 찾을 수 있습니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>The Get-Command cmdlet now gets all commands in all installed modules, even if they are not yet in the session, so you can find a command and use it without importing.</source>
          <target state="translated">Get-Command cmdlet은 현재 세션에 있지 않더라도 설치된 모든 모듈의 모든 명령을 가져오므로 가져오지 않고도 명령을 찾아서 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Any of the following commands will import a module into your session.</source>
          <target state="translated">다음 명령을 실행하면 모듈이 세션으로 들어옵니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Run the command</source>
          <target state="translated">명령을 실행 합니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Get-Mailbox –Identity Chris</source>
          <target state="translated">Get-mailbox-Identity Chris</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Get the command</source>
          <target state="translated">명령 가져오기</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Get-Command Get-Mailbox</source>
          <target state="translated">Get-Command Get-Mailbox</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Get help for the command</source>
          <target state="translated">명령에 대 한 도움말을 보려면</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Get-Help Get-Mailbox</source>
          <target state="translated">Get-Help Get-Mailbox</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Get-Command commands that include a wildcard character (*) are considered to be for discovery, not use, and do not import any modules.</source>
          <target state="translated">와일드 카드 문자 (*)가 포함 된 Get-command 명령을 검색을 사용 하지 않는 것으로 간주 됩니다 하 고 모든 모듈을 가져올 수 없습니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Only modules that are stored in the location specified by the PSModulePath environment variable are automatically imported.</source>
          <target state="translated">PSModulePath 환경 변수에서 지정한 위치에 저장 된 유일한 모듈 자동으로 가져와집니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Modules in other locations must be imported by running the Import-Module cmdlet.</source>
          <target state="translated">다른 위치의 모듈은 Import-module cmdlet을 실행 하 여 가져와야 합니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Also, commands that use Windows PowerShell providers do not automatically import a module.</source>
          <target state="translated">또한 Windows PowerShell 공급자를 사용하는 명령은 모듈을 자동으로 가져오지 않습니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>For example, if you use a command that requires the WSMan: drive, such as the Get-PSSessionConfiguration cmdlet, you might need to run the Import-Module cmdlet to import the Microsoft.WSMan.Management module that includes the WSMan: drive.</source>
          <target state="translated">예를 들어 명령을 사용 하면 필요한 경우 WSMan: 드라이브를 Get-pssessionconfiguration cmdlet 같은 WSMan 포함 된 Microsoft.WSMan.Management 모듈을 가져오기 위한 Import-module cmdlet을 실행 해야 할 수 있습니다: 드라이브입니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>You can still run the Import-Module command to import a module and use the $PSModuleAutoloadingPreference variable to enable, disable and configure automatic importing of modules.</source>
          <target state="translated">여전히 Import-module 명령은 모듈을 가져오고 설정, 해제 및 모듈 자동 가져오기를 구성 $PSModuleAutoloadingPreference 변수를 사용 하 여 실행할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>For more information, see about_Preference_Variables.</source>
          <target state="translated">자세한 내용은 about_preference_variables를 참조하세요.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>HOW TO USE A MODULE</source>
          <target state="translated">모듈 사용 방법</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>To use a module, perform the following tasks:</source>
          <target state="translated">모듈을 사용하려면 다음 작업을 수행합니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Install the module.</source>
          <target state="translated">모듈을 설치합니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>(This is often done for you.)</source>
          <target state="translated">대부분의 경우 이 작업은 자동으로 수행됩니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Find the commands that the module added.</source>
          <target state="translated">모듈에서 추가한 명령을 찾습니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Use the commands that the module added.</source>
          <target state="translated">모듈에서 추가한 명령을 사용합니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>This topic explains how to perform these tasks.</source>
          <target state="translated">항목에서는 이러한 작업을 수행하는 방법에 대해 설명합니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>It also includes other useful information about managing modules.</source>
          <target state="translated">또한 모듈 관리에 대한 유용한 정보를 제공합니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>HOW TO INSTALL A MODULE</source>
          <target state="translated">모듈 설치 방법</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>If you receive a module as a folder with files in it, you need to install it on your computer before you can use it in Windows PowerShell.</source>
          <target state="translated">파일에 모듈 폴더로 나타나면 Windows PowerShell에서 사용 하려면 먼저 컴퓨터에 설치 해야 합니다.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Most modules are installed for you.</source>
          <target state="translated">대부분의 모듈은 자동으로 설치됩니다.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Windows PowerShell comes with several preinstalled modules, sometimes called the "core" modules.</source>
          <target state="translated">Windows PowerShell "핵심" 모듈 라고도 몇 가지 사전 설치 된 모듈을 함께 제공 됩니다.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>On Windows-based computers, if features that are included with the operating system have cmdlets to manage them, those modules are preinstalled.</source>
          <target state="translated">Windows 기반 컴퓨터에 운영 체제에 포함 된 기능에는 cmdlet를 관리 하는 경우 이러한 모듈은 사전 설치 됩니다.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>When you install a Windows feature, by using, for example, the Add Roles and Features Wizard in Server Manager, or the Turn Windows features on or off dialog box in Control Panel, any Windows PowerShell modules that are part of the feature are installed.</source>
          <target state="translated">Windows 기능을 사용 하 여 설치한, 예를 들어, 역할 및 추가 기능 마법사 서버 관리자에서 또는 Windows 기능 대화 상자에서 제어판을 켜거나 기능의 일부인 모든 Windows PowerShell 모듈이 설치 됩니다.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Many other modules come in an installer or Setup program that installs the module.</source>
          <target state="translated">다른 대부분의 모듈은 모듈을 설치하는 설치 관리자나 설치 프로그램에 함께 제공됩니다.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>To install a module folder:</source>
          <target state="translated">모듈 폴더를 설치하려면:</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Create a Modules directory for the current user if one does not exist.</source>
          <target state="translated">현재 사용자에 대해 Modules 디렉터리가 아직 없으면 새로 만듭니다.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>To create a Modules directory, type:</source>
          <target state="translated">Modules 디렉터리를 만들려면 다음을 입력합니다.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>New-Item -Type Directory -Path $home\Documents\WindowsPowerShell\Modules</source>
          <target state="translated">New-Item -Type Directory -Path $home\Documents\WindowsPowerShell\Modules</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Copy the entire module folder into the Modules directory.</source>
          <target state="translated">전체 모듈 폴더를 Modules 디렉터리에 복사합니다.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>You can use any method to copy the folder, including Windows Explorer and Cmd.exe, as well as Windows PowerShell.</source>
          <target state="translated">Windows 탐색기 및 Cmd.exe은 물론 Windows PowerShell을 비롯한 여러 가지 방법으로 폴더를 복사할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>In Windows PowerShell use the Copy-Item cmdlet.</source>
          <target state="translated">Windows PowerShell에서 Copy-Item cmdlet을 사용합니다.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>For example, to copy the MyModule folder from C:\ps-test\MyModule to the Modules directory, type:</source>
          <target state="translated">예를 들어 C:\ps-test\MyModule에서 Modules 디렉터리로 MyModule 폴더를 복사하려면 다음을 입력합니다.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Copy-Item -Path c:\ps-test\MyModule -Destination $home\Documents\WindowsPowerShell\Modules</source>
          <target state="translated">Copy-Item -Path c:\ps-test\MyModule -Destination $home\Documents\WindowsPowerShell\Modules</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>You can install a module in any location, but installing your modules in a default module location makes them easier to manage.</source>
          <target state="translated">원하는 어떤 위치에도 모듈을 설치할 수 있지만 기본 모듈 위치에 모듈을 설치하면 관리하기가 더 쉽습니다.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>For more information about the default module locations, see the "MODULE AND DSC RESOURCE LOCATIONS, AND PSMODULEPATH" section.</source>
          <target state="translated">기본 모듈 위치에 대 한 자세한 내용은 "모듈 및 DSC 리소스 위치 및 PSMODULEPATH" 섹션을 참조 하십시오.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>HOW TO FIND INSTALLED MODULES</source>
          <target state="translated">설치된 모듈을 찾는 방법</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>To find modules that are installed in a default module location, but not yet imported into your session, type:</source>
          <target state="translated">기본 모듈 위치에 설치되었으나 세션에 아직 가져오지 않은 모듈을 찾으려면 다음과 같이 입력하세요.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>Get-Module -ListAvailable</source>
          <target state="translated">Get-Module -ListAvailable</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>To find the modules that have already been imported into your session, at the Windows PowerShell prompt, type:</source>
          <target state="translated">현재 세션으로 가져온 모듈을 찾으려면 Windows PowerShell 프롬프트에서 다음을 입력합니다.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>Get-Module</source>
          <target state="translated">Get-Module</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>For more information about the Get-Module cmdlet, see Get-Module.</source>
          <target state="translated">Get-Module cmdlet에 대한 자세한 내용은 Get-Module을 참조하세요.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>HOW TO FIND THE COMMANDS IN A MODULE</source>
          <target state="translated">모듈의 명령을 찾는 방법</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>Use the Get-Command cmdlet to find all available commands.</source>
          <target state="translated">Get-Command cmdlet을 사용하여 사용 가능한 명령을 모두 찾습니다.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>You can use the parameters of the Get-Command cmdlet to filter commands such as by module, name, and noun.</source>
          <target state="translated">Get-Command cmdlet의 매개 변수를 사용하여 모듈, 이름 및 명사 등의 기준으로 명령을 필터링할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>To find all commands in a module, type: Get-Command -Module &lt;module-name&gt;</source>
          <target state="translated">모듈의 모든 명령을 찾으려면를 입력: Get-command-모듈 &lt; 모듈 이름 &gt;</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>For example, to find the commands in the BitsTransfer module, type: Get-Command -Module BitsTransfer</source>
          <target state="translated">예를 들어 BitsTransfer 모듈에서 명령을 찾으려면 다음을 입력: Get-command-BitsTransfer 모듈</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>For more information about the Get-Command cmdlet, see Get-Command.</source>
          <target state="translated">Get-Command cmdlet에 대한 자세한 내용은 Get-Command를 참조하세요.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>HOW TO GET HELP FOR THE COMMANDS IN A MODULE</source>
          <target state="translated">모듈의 명령에 대한 도움말을 보는 방법</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>If the module contains Help files for the commands that it exports, the Get-Help cmdlet will display the Help topics.</source>
          <target state="translated">모듈이 내보내는 명령에 대한 도움말 파일을 모듈에 포함되어 있는 경우 Get-Help cmdlet을 사용하여 도움말 항목을 표시할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>Use the same Get-Help command format that you would use to get help for any command in Windows PowerShell.</source>
          <target state="translated">Windows PowerShell에서 명령에 대한 도움말을 표시할 때 사용하는 것과 동일한 Get-Help 명령을 사용합니다.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>Beginning in Windows PowerShell 3.0, you can download Help files for a module and download updates to the Help files so they are never obsolete.</source>
          <target state="translated">Windows PowerShell 3.0부터, 모듈에 대한 도움말 파일을 다운로드하고 도움말 파일에 업데이트를 다운로드하여 도움말 파일을 최신 상태로 유지할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>To get help for a commands in a module, type:</source>
          <target state="translated">모듈의 명령에 대한 도움말을 보려면 다음과 같이 입력하세요.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>Get-Help &lt;command-name&gt;</source>
          <target state="translated">도움말 얻기 &lt; 명령 이름 &gt;</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>To get help online for command in a module, type: Get-Help &lt;command-name&gt; -Online</source>
          <target state="translated">모듈의 명령에 대 한 온라인 도움말을 보려면 입력: Get-help &lt; 명령 이름 &gt;-온라인</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>To download and install the help files for the commands in a module, type: Update-Help –Module &lt;module-name&gt;</source>
          <target state="translated">을 다운로드 하 여 모듈에는 명령에 대 한 도움말 파일을 설치 하려면 다음을 입력: Update-help – 모듈 &lt; 모듈 이름 &gt;</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>For more information, see Get-Help and Update-Help.</source>
          <target state="translated">자세한 내용은 Get-help 및 Update-help를 참조 하십시오.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>HOW TO IMPORT A MODULE</source>
          <target state="translated">모듈을 가져오는 방법</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>You might have to import a module or import a module file.</source>
          <target state="translated">모듈을 가져오거나 모듈 파일을 가져와야 할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>Importing is required when a module is not installed in the locations specified by the PSModulePath environment variable ($env:PSModulePath), or the module consists of file, such as a .dll or .psm1 file, instead of typical module that is delivered as a folder.</source>
          <target state="translated">모듈이 PSModulePath 환경 변수($env:PSModulePath)로 지정된 위치에 설치되어 있지 않거나 모듈이 폴더로 전달되는 일반적인 모듈 대신 파일(예: .dll 또는 .psm1 파일)로 구성되어 있을 때 가져오기가 필요합니다.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>You might also choose to import a module so that you can use the parameters of the Import-Module command, such as the Prefix parameter, which adds a distinctive prefix to the noun names of all imported commands, or the NoClobber parameter, which prevents the module from adding commands that would hide or replace existing commands in the session.</source>
          <target state="translated">Import-Module 명령의 매개 변수(예: 가져온 모든 명령의 명사 이름에 고유한 접두사를 추가하는 Prefix 매개 변수 또는 모듈이 세션의 기존 명령을 숨기거나 바꾸는 명령을 추가하지 못하게 하는 NoClobber 매개 변수)를 사용할 수 있게 모듈을 가져오도록 선택할 수도 있습니다.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>To import modules, use the Import-Module cmdlet.</source>
          <target state="translated">모듈을 가져오려면 Import-Module cmdlet을 사용합니다.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>To import modules in a PSModulePath location into the current session, use the following command format.</source>
          <target state="translated">PSModulePath 위치의 모듈을 현재 세션으로 가져오려면 다음 명령 형식을 사용합니다.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>Import-Module &lt;module-name&gt;</source>
          <target state="translated">모듈 가져오기 &lt; 모듈 이름 &gt;</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>For example, the following command imports the BitsTransfer module into the current session.</source>
          <target state="translated">예를 들어 다음 명령은 현재 세션으로 BitsTransfer 모듈을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>Import-Module BitsTransfer</source>
          <target state="translated">BitsTransfer 모듈 가져오기</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>To import a module that is not in a default module location, use the fully qualified path to the module folder in the command.</source>
          <target state="translated">기본 모듈 위치에 없는 모듈을 가져오려면 명령에서 모듈 폴더에 대한 정규화된 경로를 사용합니다.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>For example, to add the TestCmdlets module in the C:\ps-test directory to your session, type:</source>
          <target state="translated">예를 들어 C:\ps-test 디렉터리에 있는 TestCmdlets 모듈을 현재 세션에 추가하려면 다음을 입력하세요.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>Import-Module c:\ps-test\TestCmdlets</source>
          <target state="translated">Import-Module c:\ps-test\TestCmdlets</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>To import a module file that is not contained in a module folder, use the fully qualified path to the module file in the command.</source>
          <target state="translated">모듈 폴더에 없는 모듈 파일을 가져오려면 명령에 모듈 파일에 대한 정규화된 경로를 사용합니다.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>For example, to add the TestCmdlets.dll module in the C:\ps-test directory to your session, type:</source>
          <target state="translated">예를 들어 C:\ps-test 디렉터리의 TestCmdlets.dll 모듈을 세션에 추가하려면 다음을 입력하세요.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>Import-Module c:\ps-test\TestCmdlets.dll</source>
          <target state="translated">Import-Module c:\ps-test\TestCmdlets.dll</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>For more information about adding modules to your session, see Import-Module.</source>
          <target state="translated">세션에 모듈을 추가하는 방법에 대한 자세한 내용은 Import-Module을 참조하세요.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>HOW TO IMPORT A MODULE INTO EVERY SESSION</source>
          <target state="translated">모듈을 모든 세션으로 가져오는 방법</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>The Import-Module command imports modules into your current Windows PowerShell session.</source>
          <target state="translated">Import-Module 명령은 모듈을 현재 Windows PowerShell 세션으로 가져옵니다.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>This command affects only the current session.</source>
          <target state="translated">이 명령은 현재 세션에만 적용됩니다.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>To import a module into every Windows PowerShell session that you start, add the Import-Module command to your Windows PowerShell profile.</source>
          <target state="translated">시작한 모든 Windows PowerShell 세션으로 모듈을 가져오려면 Windows PowerShell 프로필에 Import-Module 명령을 추가합니다.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>For more information about profiles, see about_Profiles.</source>
          <target state="translated">프로필에 대한 자세한 내용은 about_Profiles를 참조하세요.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>HOW TO REMOVE A MODULE</source>
          <target state="translated">모듈을 제거하는 방법</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>When you remove a module, the commands that the module added are deleted from the session.</source>
          <target state="translated">모듈을 제거하면 모듈에서 추가한 명령이 세션에서 삭제됩니다.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>To remove a module from your session, use the following command format.</source>
          <target state="translated">세션에서 모듈을 제거 하려면 다음 명령 형식을 사용 합니다.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>remove-module &lt;module-name&gt;</source>
          <target state="translated">제거-모듈 &lt; 모듈 이름 &gt;</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>For example, the following command removes the BitsTransfer module from the current session.</source>
          <target state="translated">예를 들어 다음 명령은 현재 세션에서 BitsTransfer 모듈을 제거합니다.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>remove-module BitsTransfer</source>
          <target state="translated">BitsTransfer 모듈 제거</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>Removing a module reverses the operation of importing a module.</source>
          <target state="translated">모듈을 제거하는 작업은 모듈을 가져오는 작업과 반대입니다.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>Removing a module does not uninstall the module.</source>
          <target state="translated">모듈을 제거해도 모듈이 제거되지는 않습니다.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>For more information about the Remove-Module cmdlet, see Remove-Module.</source>
          <target state="translated">Remove-Module cmdlet에 대한 자세한 내용은 Remove-Module를 참조하세요.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>MODULE AND DSC RESOURCE LOCATIONS, AND PSMODULEPATH</source>
          <target state="translated">모듈 및 DSC 리소스 위치 및 PSMODULEPATH</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>The following are default locations for Windows PowerShell modules.</source>
          <target state="translated">Windows PowerShell 모듈에 대 한 기본 위치는 다음과 같습니다.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>Starting in Windows PowerShell 4.0, with the introduction of DSC, a new default module and DSC resource folder was introduced.</source>
          <target state="translated">DSC, 새 기본 모듈 및 DSC 리소스 폴더의 도입으로 Windows PowerShell 4.0부터 도입 되었습니다.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>For more information about DSC, see about_DesiredStateConfiguration.</source>
          <target state="translated">DSC에 대 한 자세한 내용은 about_DesiredStateConfiguration를 참조 하십시오.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>System:        $pshome\Modules (%windir%\System32\WindowsPowerShell\v1.0\Modules) System modules are those that ship with Windows and Windows PowerShell.</source>
          <target state="translated">시스템: $pshome\Modules (%windir%\System32\WindowsPowerShell\v1.0\Modules) 시스템 모듈은 Windows 및 Windows PowerShell과 함께 제공 되는 것입니다.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>Starting in Windows Powershell 4.0, when Windows PowerShell Desired State Configuration (DSC) was introduced, DSC resources that are included with Windows PowerShell are also stored in $pshome\Modules, in the $pshome\Modules\PSDesiredStateConfiguration\DSCResources folder.</source>
          <target state="translated">Windows PowerShell 원하는 상태 구성 (DSC)가 도입 되었을 때 Windows Powershell 4.0부터, Windows PowerShell에 포함 되어 있는 DSC 리소스도에 저장 됩니다 $pshome\Modules $pshome\Modules\PSDesiredStateConfiguration\DSCResources 폴더에 있습니다.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>Current user:  $home\Documents\WindowsPowerShell\Modules (%UserProfile%\Documents\WindowsPowerShell\Modules)</source>
          <target state="translated">현재 사용자: $home\Documents\WindowsPowerShell\Modules (UserProfile%\Documents\WindowsPowerShell\Modules %)</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>or -</source>
          <target state="translated">또는-</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>$home\My Documents\WindowsPowerShell\Modules (%UserProfile%\My Documents\WindowsPowerShell\Modules) This is the location for user-added modules prior to Windows PowerShell 4.0.</source>
          <target state="translated">$home\My Documents\WindowsPowerShell\Modules (%UserProfile%\My Documents\WindowsPowerShell\Modules) Windows PowerShell 4.0 하기 전에 사용자가 추가한 모듈에 대 한 위치입니다.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>In Windows PowerShell 4.0 and later releases of Windows PowerShell, user-added modules and DSC resources are stored in C:\Program Files\WindowsPowerShell\Modules.</source>
          <target state="translated">Windows PowerShell 4.0 이상 버전의 Windows PowerShell에 사용자 추가 모듈 및 DSC 리소스 C:\Program Files\WindowsPowerShell\Modules에 저장 됩니다.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>Modules and DSC resources in this location are accessible by all users of the computer.</source>
          <target state="translated">모듈 및이 위치에 있는 DSC 리소스는 컴퓨터의 모든 사용자가 액세스할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>This change was required because the DSC engine runs as local system, and could not access user-specific paths, such as $home\Documents\WindowsPowerShell\Modules.</source>
          <target state="translated">로컬 시스템으로 실행 되는 DSC 엔진 이므로 $home\Documents\WindowsPowerShell\Modules 같은 사용자의 특정 경로 액세스할 수 없습니다이 변경은 필요 했습니다.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>Starting in Windows PowerShell 5.0, with the addition of the PowerShellGet module, and the PowerShell Gallery of community- and Microsoft-created resources (https://www.powershellgallery.com), the Install-Module command installs modules and DSC resources to C:\Program Files\WindowsPowerShell\Modules by default.</source>
          <target state="translated">PowerShellGet 모듈을 추가 및 PowerShell 갤러리 커뮤니티 및 Microsoft가 만든 리소스 (https://www.powershellgallery.com)를 사용 하 여 Windows PowerShell 5.0의 시작 모듈 설치 명령 모듈 및 DSC 리소스 C:\Program Files\WindowsPowerShell\Modules를 기본적으로 설치 합니다.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>Note: To add or change files in the %Windir%\System32 directory, start Windows PowerShell with the "Run as administrator" option.</source>
          <target state="translated">참고:를 추가 하거나 %Windir%\System32 디렉터리에서 파일을 변경 하려면 Windows PowerShell을 시작 "관리자 권한으로 실행" 옵션을 사용 합니다.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>You can change the default module locations on your system by changing the value of the PSModulePath environment variable ($Env:PSModulePath).</source>
          <target state="translated">PSModulePath 환경 변수 값($Env:PSModulePath)을 변경하여 시스템에서 기본 모듈 위치를 변경할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>The PSModulePath environment variable is modeled on the Path environment variable and has the same format.</source>
          <target state="translated">PSModulePath 환경 변수는 Path 환경 변수를 기반으로 모델링되며 형식은 동일합니다.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>To view the default module locations, type: $env:psmodulepath</source>
          <target state="translated">기본 모듈 위치를 보려면 입력: $env: psmodulepath</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>To add a default module location, use the following command format.</source>
          <target state="translated">기본 모듈 위치를 추가하려면 다음 명령 형식을 사용합니다.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>$env:psmodulepath = $env:psmodulepath + ";<ph id="ph1">&lt;path&gt;</ph>"</source>
          <target state="translated">$env:psmodulepath = $env:psmodulepath + ";<ph id="ph1">&lt;path&gt;</ph>"</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>The semi-colon (;) in the command separates the new path from the path that precedes it in the list.</source>
          <target state="translated">명령의 세미콜론(;)은 목록에서 앞에 나오는 경로와 새 경로를 구분해줍니다.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>For example, to add the "C:\ps-test\Modules" directory, type: $env:psmodulepath + ";c:\ps-test\Modules"</source>
          <target state="translated">예를 들어 "C:\ps-test\Modules" 디렉터리를 추가 하려면 입력: $env: psmodulepath + "; c:\ps-test\Modules"</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>When you add a path to PSModulePath, Get-Module and Import-Module commands include modules in that path.</source>
          <target state="translated">PSModulePath에 경로를 추가하면 Get-Module 및 Import-Module 명령에는 해당 경로의 모듈이 포함됩니다.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>The value that you set affects only the current session.</source>
          <target state="translated">설정한 값은 현재 세션에만 적용됩니다.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>To make the change persistent, add the command to your Windows PowerShell profile or use System in Control Panel to change the value of the PSModulePath environment variable in the registry.</source>
          <target state="translated">변경 내용을 영구적으로 적용하려면 Windows PowerShell 프로필에 명령을 추가하거나 제어판의 시스템을 사용하여 레지스트리에서 PSModulePath 환경 변수의 값을 변경합니다.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>Also, to make the change persistent, you can also use the SetEnvironmentVariable method of the System.Environment class to add a Path to the PSModulePath environment variable.</source>
          <target state="translated">또한 변경 내용을 영구적으로 적용하기 위해 System.Environment 클래스의 SetEnvironmentVariable 메서드를 사용하여 PSModulePath 환경 변수에 대한 경로를 추가할 수도 있습니다.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>For more information about the PSModulePath variable, see about_Environment_Variables.</source>
          <target state="translated">PSModulePath 변수에 대한 자세한 내용은 about_Environment_Variables를 참조하세요.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>MODULES AND NAME CONFLICTS</source>
          <target state="translated">모듈 및 이름 충돌</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>Name conflicts occur when more than one command in the session has the same name.</source>
          <target state="translated">세션에 이름이 동일한 명령이 두 개 이상 있을 경우 이름이 충돌합니다.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>Importing a module causes a name conflict when commands in the module have the same names as commands or items in the session.</source>
          <target state="translated">모듈의 명령이 세션의 명령 또는 항목과 동일한 이름을 가질 경우 모듈을 가져올 때 이름 충돌을 발생합니다.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>Name conflicts can result in commands being hidden or replaced.</source>
          <target state="translated">이름 충돌로 인해 명령이 숨겨지거나 바뀔 수 있습니다.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source>-- Hidden.</source>
          <target state="translated">-- 숨겨질 경우.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source>A command is hidden when it is not the command that runs when you type the command name, but you can run it by using another method, such as by qualifying the command name with the name of the module or snap-in in which it originated.</source>
          <target state="translated">명령 이름을 입력할 때 실행되는 명령이 아니고 명령을 시작한 모듈이나 스냅인의 이름으로 명령 이름을 정규화하는 것과 같은 기타 방법을 사용하여 실행할 수 있을 때 명령은 숨겨집니다.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source>-- Replaced.</source>
          <target state="translated">-- 바뀔 경우.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source>A command is replaced when you cannot run it because it has been overwritten by a command with the same name.</source>
          <target state="translated">동일한 이름의 명령 파일로 덮어쓰였으므로 명령을 실행할 수 없는 경우 명령이 바뀝니다.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source>Even when you remove the module that caused the conflict, you cannot run a replaced command unless you restart the session.</source>
          <target state="translated">충돌을 유발한 모듈을 제거하더라도 세션을 다시 시작해야만 바뀐 명령을 실행할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source>Import-Module might add commands that hide and replace commands in the current session.</source>
          <target state="translated">Import-Module은 현재 세션의 명령을 숨기고 바꾸는 명령을 추가할 수도 있습니다.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve">
          <source>Also, commands in your session can hide commands that the module added.</source>
          <target state="translated">또한 세션의 명령이 모듈에서 추가한 명령을 숨길 수 있습니다.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source>To detect name conflicts, use the All parameter of the Get-Command cmdlet.</source>
          <target state="translated">이름 충돌이 감지하려면 Get-Command cmdlet의 All 매개 변수를 사용하세요.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source>Beginning in Windows PowerShell 3.0, Get-Command gets only that commands that run when you type the command name.</source>
          <target state="translated">Windows PowerShell 3.0부터, Get-Command은 사용자가 명령 이름을 입력할 때 실행되는 명령만 가져옵니다.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source>The All parameter gets all commands with the specific name in the session.</source>
          <target state="translated">All 매개 변수를 사용하면 세션에서 특정 이름의 명령을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve">
          <source>To prevent name conflicts, use the NoClobber or Prefix parameters of the Import-Module cmdlet.</source>
          <target state="translated">이름 충돌을 방지하려면 Import-Module cmdlet의 NoClobber 또는 Prefix 매개 변수를 사용합니다.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve">
          <source>The Prefix parameter adds a prefix to the names of imported commands so that they are unique in the session.</source>
          <target state="translated">Prefix 매개 변수를 사용하면 세션에서 명령이 고유해지도록 가져온 명령 이름에 접두사가 추가됩니다.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve">
          <source>The NoClobber parameter does not import any commands that would hide or replace existing commands in the session.</source>
          <target state="translated">NoClobber 매개 변수를 사용하면 세션의 기존 명령을 숨기거나 바꾸는 명령은 가져오지 않습니다.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve">
          <source>You can also use the Alias, Cmdlet, Function, and Variable parameters of Import-Module to select only the commands that you want to import, and you can exclude commands that cause name conflicts in your session.</source>
          <target state="translated">Import-Module의 Alias, Cmdlet, Function 및 Variable 매개 변수를 사용하여 가져오려는 명령만 선택하고 세션에서 이름 충돌을 유발하는 명령은 제외할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve">
          <source>Module authors can prevent name conflicts by using the DefaultCommandPrefix property of the module manifest to add a default prefix to all command names.</source>
          <target state="translated">모듈 작성자는 모듈 매니페스트의 DefaultCommandPrefix 속성을 사용하여 모든 명령 이름에 기본 접두사를 추가함으로써 이름 충돌을 방지할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve">
          <source>The value of the Prefix parameter takes precedence over the value of DefaultCommandPrefix.</source>
          <target state="translated">Prefix 매개 변수 값은 DefaultCommandPrefix 값보다 우선합니다.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve">
          <source>Even if a command is hidden, you can run it by qualifying the command name with the name of the module or snap-in in which it originated.</source>
          <target state="translated">명령이 숨겨지더라도 명령을 시작한 모듈이나 스냅인의 이름으로 명령 이름을 정규화하여 명령을 실행할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve">
          <source>The Windows PowerShell command precedence rules determine which command runs when the session includes commands with the same name.</source>
          <target state="translated">Windows PowerShell 명령 우선 순위 규칙은 세션에 같은 이름의 명령이 있을 경우 실행할 명령을 결정합니다.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve">
          <source>For example, when a session includes a function and a cmdlet with the same name, Windows PowerShell runs the function by default.</source>
          <target state="translated">예를 들어 세션에 이름이 같은 함수 및 cmdlet이 포함되어 있으면 Windows PowerShell은 기본적으로 함수를 실행합니다.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve">
          <source>When the session includes commands of the same type with the same name, such as two cmdlets with the same name, by default, it runs the most recently added command.</source>
          <target state="translated">세션에 이름과 형식이 같은 명령이 포함된 경우(예: 이름이 같은 두 개의 cmdlet) 기본적으로 가장 최근에 추가한 명령이 실행됩니다.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve">
          <source>For more information, including an explanation of the precedence rules and instructions for running hidden commands, see about_Command_Precedence.</source>
          <target state="translated">우선 순위 규칙에 대한 설명 및 숨겨진 명령 실행에 대한 지침을 비롯한 자세한 내용은 about_Command_Precedence를 참조하세요.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve">
          <source>MODULES AND SNAP-INS</source>
          <target state="translated">모듈 및 스냅인</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve">
          <source>You can add commands to your session from modules and snap-ins.</source>
          <target state="translated">모듈 및 스냅인으로부터 세션에 명령을 추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve">
          <source>Modules can add all types of commands, including cmdlets, providers, and functions, and items, such as variables, aliases, and Windows PowerShell drives.</source>
          <target state="translated">모듈은 cmdlet, 공급자 및 함수를 비롯한 모든 유형의 명령과 변수, 별칭 및 Windows PowerShell 드라이브와 같은 항목을 추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve">
          <source>Snap-ins can add only cmdlets and providers.</source>
          <target state="translated">스냅인에서는 cmdlet과 공급자만 추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve">
          <source>Before removing a module or snap-in from your session, use the following commands to determine which commands will be removed.</source>
          <target state="translated">사용자 세션에서 모듈이나 스냅인을 제거하기 전에 다음 명령을 사용하여 제거할 명령을 결정합니다.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve">
          <source>To find the source of a cmdlet in your session, use the following command format:</source>
          <target state="translated">세션에서 cmdlet의 소스를 찾으려면 다음 명령 형식을 사용 합니다.</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve">
          <source>get-command &lt;cmdlet-name&gt; | format-list -property verb, noun, pssnapin, module</source>
          <target state="translated">get 명령 &lt; cmdlet 이름 &gt; | 형식 목록-속성 verb, noun, pssnapin, 모듈</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve">
          <source>For example, to find the source of the Get-Date cmdlet, type:</source>
          <target state="translated">예를 들어 Get-date cmdlet의 소스를 찾으려면 다음을 입력 합니다.</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve">
          <source>get-command get-date | format-list -property verb, noun, pssnapin, module</source>
          <target state="translated">get 명령 구하는 get-date | 형식 목록-속성 verb, noun, pssnapin, 모듈</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve">
          <source>For more information about Windows PowerShell snap-ins, see about_PSSnapins.</source>
          <target state="translated">Windows PowerShell 스냅인에 대한 자세한 내용은 about_PSSnapins를 참조하세요.</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve">
          <source>MODULE-RELATED WARNINGS AND ERRORS</source>
          <target state="translated">모듈 관련 경고 및 오류</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve">
          <source>The commands that a module exports should follow the Windows PowerShell command naming rules.</source>
          <target state="translated">모듈이 내보내는 명령은 Windows PowerShell 명령 명명 규칙을 준수 해야 합니다.</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve">
          <source>If the module that you import exports cmdlets or functions that have unapproved verbs in their names, the Import-Module cmdlet displays the following warning message.</source>
          <target state="translated">가져오는 모듈이 이름에 승인되지 않은 동사가 포함된 cmdlet 또는 함수를 내보내는 경우 Import-Module cmdlet은 다음 경고 메시지를 표시합니다.</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve">
          <source>WARNING: Some imported command names include unapproved verbs which might make them less discoverable.</source>
          <target state="translated">경고: 가져온 일부 명령 이름 수 하는 검색 성능이 떨어지는 승인 되지 않은 동사를 포함 합니다.</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve">
          <source>Use the Verbose parameter for more detail or type Get-Verb to see the list of approved verbs.</source>
          <target state="translated">자세한 내용을 보려면 Verbose 매개 변수를 사용하거나 승인된 동사 목록을 보려면 Get-Verb를 입력하세요.</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve">
          <source>This message is only a warning.</source>
          <target state="translated">이 메시지는 경고일 뿐입니다.</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve">
          <source>The complete module is still imported, including the non-conforming commands.</source>
          <target state="translated">비준수 명령을 포함하여 전체 모듈을 계속 가져옵니다.</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve">
          <source>Although the message is displayed to module users, the naming problem should be fixed by the module author.</source>
          <target state="translated">메시지가 모듈 사용자에게 표시되더라도 명명 문제는 모듈 작성자가 수정해야 합니다.</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve">
          <source>To suppress the warning message, use the DisableNameChecking parameter of the Import-Module cmdlet.</source>
          <target state="translated">경고 메시지를 표시하지 않으려면 Import-Module cmdlet의 DisableNameChecking 매개 변수를 사용하세요.</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve">
          <source>BUILT-IN MODULES AND SNAP-INS</source>
          <target state="translated">기본 제공 모듈 및 스냅인</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve">
          <source>In Windows PowerShell 2.0 and in older-style host programs in Windows PowerShell 3.0 and later, the core commands that are installed with Windows PowerShell are packaged in snap-ins that are added automatically to every Windows PowerShell session.</source>
          <target state="translated">Windows PowerShell 2.0과 Windows PowerShell 3.0 이상의 이전 스타일 호스트 프로그램에서 Windows PowerShell과 함께 설치되는 핵심 명령은 모든 Windows PowerShell 세션에 자동으로 추가되는 스냅인에 패키지됩니다.</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve">
          <source>Beginning in Windows PowerShell 3.0, in newer-style host programs -- those that implement the InitialSessionState.CreateDefault2 initial session state API -- the core commands are packaged in modules.</source>
          <target state="translated">Windows PowerShell 3.0부터 InitialSessionState.CreateDefault2 초기 세션 상태 API를 구현하는 최신 스타일 호스트 프로그램에서 핵심 명령은 모듈에 패키지됩니다.</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve">
          <source>The default is Microsoft.PowerShell.Core, which is always a snap-in.</source>
          <target state="translated">기본값은 Microsoft.PowerShell.Core, 항상의 스냅인입니다.</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve">
          <source>The Microsoft.PowerShell.Core snap-in is added to every session by default.</source>
          <target state="translated">Microsoft.PowerShell.Core 스냅인을 사용 하는 모든 세션에 기본적으로 추가 됩니다.</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve">
          <source>Modules are loaded automatically on first-use.</source>
          <target state="translated">모듈은 처음 사용할 때 자동으로 로드됩니다.</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve">
          <source>NOTE: Remote sessions, including sessions that are started by using the New-PSSession cmdlet, are older-style sessions in which the built-in commands are packaged in snap-ins.</source>
          <target state="translated">참고: New-pssession cmdlet을 사용 하 여 시작 된 세션을 포함 하 여 원격 세션에는 이전 스타일의 세션은 기본 제공 명령은 스냅인에 패키지 됩니다.</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve">
          <source>The following modules (or snap-ins) are installed with Windows PowerShell.</source>
          <target state="translated">다음 모듈(또는 스냅인)은 Windows PowerShell과 함께 설치됩니다.</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve">
          <source>Microsoft.PowerShell.Archive Microsoft.PowerShell.Core Microsoft.PowerShell.Diagnostics Microsoft.PowerShell.Host Microsoft.PowerShell.Management Microsoft.PowerShell.ODataUtils Microsoft.PowerShell.Security Microsoft.PowerShell.Utility Microsoft.WSMan.Management OneGet PowerShellGet PSDesiredStateConfiguration PSScheduledJob PSWorkflow PSWorkflowUtility</source>
          <target state="translated">Microsoft.PowerShell.Archive Microsoft.PowerShell.Core Microsoft.PowerShell.Diagnostics Microsoft.PowerShell.Host Microsoft.PowerShell.Management Microsoft.PowerShell.ODataUtils Microsoft.PowerShell.Security Microsoft.PowerShell.Utility Microsoft.WSMan.Management OneGet PowerShellGet PSDesiredStateConfiguration PSScheduledJob PSWorkflow PSWorkflowUtility</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve">
          <source>ISE</source>
          <target state="translated">ISE</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve">
          <source>LOGGING MODULE EVENTS</source>
          <target state="translated">모듈 이벤트 로깅</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve">
          <source>Beginning in Windows PowerShell 3.0, you can record execution events for the cmdlets and functions in Windows PowerShell modules and snap-ins by setting the LogPipelineExecutionDetails property of modules and snap-ins to $True.</source>
          <target state="translated">Windows PowerShell 3.0부터 Windows PowerShell 모듈 및 스냅인의 LogPipelineExecutionDetails 속성을 $True로 설정하여 모듈 및 스냅인에 cmdlet 및 함수에 대한 실행 이벤트를 기록할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve">
          <source>You can also use a Group Policy setting, Turn on Module Logging, to enable module logging in all Windows PowerShell sessions.</source>
          <target state="translated">또한 그룹 정책 설정을 사용하고, 모듈 로깅을 켜서 모든 Windows PowerShell 세션에서 모듈 로깅을 사용하도록 설정할 수도 있습니다.</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve">
          <source>For more information, see about_EventLogs (http://go.microsoft.com/fwlink/?LinkID=113224) and about_Group_Policy_Settings (http://go.microsoft.com/fwlink/?LinkID=251696).</source>
          <target state="translated">자세한 내용은 about_EventLogs(http://go.microsoft.com/fwlink/?LinkID=113224) 및 about_Group_Policy_Settings(http://go.microsoft.com/fwlink/?LinkID=251696)를 참조하세요.</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve">
          <source>SEE ALSO</source>
          <target state="translated">참고 항목</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve">
          <source>about_Command_Precedence about_DesiredStateConfiguration about_EventLogs about_Group_Policy_Settings about_PSSnapins Get-Command Get-Help Get-Module Import-Module Remove-Module</source>
          <target state="translated">about_Command_Precedence about_DesiredStateConfiguration about_EventLogs about_Group_Policy_Settings about_PSSnapins Get-command Get-help Get-module Import-module Remove-module</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>