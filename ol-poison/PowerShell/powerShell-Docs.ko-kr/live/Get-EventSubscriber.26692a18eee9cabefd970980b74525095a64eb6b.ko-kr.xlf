<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ko-kr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-1c394fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">98e5f79ebe75e96e243b2a3add350173ab09f557</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">reference\4.0\Microsoft.PowerShell.Utility\Get-EventSubscriber.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions" />
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">5e0750d1279442327964626c47908b91cd252928</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">c2f7e9235476e2b7f445efd792448621f5a434dd</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>powershell, cmdlet</source>
          <target state="translated">powershell cmdlet</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Get-EventSubscriber</source>
          <target state="translated">Get-eventsubscriber</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Get-EventSubscriber</source>
          <target state="translated">Get-eventsubscriber</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>SYNOPSIS</source>
          <target state="translated">요약</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Gets the event subscribers in the current session.</source>
          <target state="translated">현재 세션의 이벤트 구독자를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>SYNTAX</source>
          <target state="translated">구문</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>BySource (Default)</source>
          <target state="translated">BySource (기본값)</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>ById</source>
          <target state="translated">ById</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>DESCRIPTION</source>
          <target state="translated">설명</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The Get-EventSubscriber cmdlet gets the event subscribers in the current session.</source>
          <target state="translated">Get-EventSubscriber cmdlet은 현재 세션의 이벤트 구독자를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>When you subscribe to an event by using a Register event cmdlet, an event subscriber is added to your Windows PowerShell session, and the events to which you subscribed are added to your event queue whenever they are raised.</source>
          <target state="translated">Register event cmdlet을 사용하여 이벤트에 가입하는 경우 이벤트 구독자는 Windows PowerShell 세션에 추가되고 가입한 이벤트는 발생할 때마다 이벤트 큐에 추가됩니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>To cancel an event subscription, delete the event subscriber by using the Unregister-Event cmdlet.</source>
          <target state="translated">이벤트 구독을 취소하려면 Unregister-Event cmdlet을 사용하여 이벤트 구독자를 삭제합니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>EXAMPLES</source>
          <target state="translated">예제</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>-------------------------- EXAMPLE 1 --------------------------</source>
          <target state="translated">-------------------------- 예제 1 --------------------------</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>This example uses a Get-EventSubscriber command to get the event subscriber for a timer event.</source>
          <target state="translated">이 예제에서는 Get-EventSubscriber 명령을 사용하여 타이머 이벤트에 대한 이벤트 구독자를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>The first command uses the New-Object cmdlet to create an instance of a timer object.</source>
          <target state="translated">첫 번째 명령은 New-Object cmdlet을 사용하여 타이머 개체의 인스턴스를 만든 다음</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>It saves the new timer object in the $timer variable.</source>
          <target state="translated">새 타이머 개체를 $timer 변수에 저장합니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>The second command uses the Get-Member cmdlet to display the events that are available for timer objects.</source>
          <target state="translated">두 번째 명령은 Get-Member cmdlet을 사용하여 타이머 이벤트에 대해 사용할 수 있는 이벤트를 표시합니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>The command uses the Type parameter of the Get-Member cmdlet with a value of Event.</source>
          <target state="translated">이 명령은 Get-Member cmdlet의 Type 매개 변수를 Event 값과 함께 사용합니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>The third command uses the Register-ObjectEvent cmdlet to register for the Elapsed event on the timer object.</source>
          <target state="translated">세 번째 명령은 Register-ObjectEvent cmdlet을 사용하여 타이머 개체의 Elapsed 이벤트를 등록합니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>The fourth command uses the Get-EventSubscriber cmdlet to get the event subscriber for the Elapsed event.</source>
          <target state="translated">네 번째 명령은 Get-EventSubscriber cmdlet을 사용하여 Elapsed 이벤트에 대한 이벤트 구독자를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>-------------------------- EXAMPLE 2 --------------------------</source>
          <target state="translated">-------------------------- EXAMPLE 2 --------------------------</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>This example shows how to use the dynamic module in the PSEventJob object in the Action property of the event subscriber.</source>
          <target state="translated">이 예제에서는 이벤트 구독자의 Action 속성에서 PSEventJob 개체의 동적 모듈을 사용하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>The first command uses the New-Object cmdlet to create a timer object.</source>
          <target state="translated">첫 번째 명령은 New-Object cmdlet을 사용하여 타이머 개체를 만들고</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>The second command sets the interval of the timer to 500 (milliseconds).</source>
          <target state="translated">두 번째 명령은 타이머 간격을 500(밀리초)으로 설정합니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>The third command uses the Register-ObjectEvent cmdlet to register the Elapsed event of the timer object.</source>
          <target state="translated">세 번째 명령은 Register-ObjectEvent cmdlet을 사용하여 타이머 개체의 Elapsed 이벤트를 등록합니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>The command includes an action that handles the event.</source>
          <target state="translated">이 명령에는 이벤트를 처리하는 작업이 포함됩니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Whenever the timer interval elapses, an event is raised and the commands in the action run.</source>
          <target state="translated">타이머 간격이 지날 때마다 이벤트가 발생하고 작업의 명령이 실행됩니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>In this case, the Get-Random cmdlet generates a random number between 0 and 100 and saves it in the $random variable.</source>
          <target state="translated">이 경우 Get-Random cmdlet은 0부터 100 사이의 임의의 숫자를 생성하여 $random 변수에 저장합니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>The source identifier of the event is Timer.Random.</source>
          <target state="translated">이벤트의 소스 식별자는 Timer.Random입니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>When you use an Action parameter in a Register-ObjectEvent command, the command returns a PSEventJob object that represents the action.</source>
          <target state="translated">Register-ObjectEvent 명령에서 Action 매개 변수를 사용할 경우 명령은 작업을 나타내는 PSEventJob 개체를 반환합니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>The fourth command enables the timer.</source>
          <target state="translated">네 번째 명령은 타이머를 설정합니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>The fifth command uses the Get-EventSubscriber cmdlet to get the event subscriber of the Timer.Random event.</source>
          <target state="translated">다섯 번째 명령은 Get-EventSubscriber cmdlet을 사용하여 Timer.Random 이벤트의 이벤트 구독자를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>It saves the event subscriber object in the $subscriber variable.</source>
          <target state="translated">이벤트 구독자 개체를 $subscriber 변수에 저장합니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>The sixth command shows that the Action property of the event subscriber object contains a PSEventJob object.</source>
          <target state="translated">여섯 번째 명령은 이벤트 구독자 개체의 Action 속성에 PSEventJob 개체가 포함되어 있음을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>In fact, it contains the same PSEventJob object that the Register-ObjectEvent command returned.</source>
          <target state="translated">실제로 이 속성에는 Register-ObjectEvent 명령에서 반환한 것과 동일한 PSEventJob 개체가 포함되어 있습니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>The seventh command uses the Format-List cmdlet to display all of the properties of the PSEventJob object in the Action property in a list.</source>
          <target state="translated">일곱 번째 명령은 Format-List cmdlet을 사용하여 Action 속성의 PSEventJob 개체에 대한 모든 속성을 목록으로 표시합니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>The result reveal that the PSEventJob object has a Module property that contains a dynamic script module that implements the action.</source>
          <target state="translated">그 결과 PSEventJob 개체에 작업을 구현하는 동적 스크립트 모듈이 포함된 Module 속성이 있음을 알 수 있습니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>The remaining commands use the call operator (&amp;) to invoke the command in the module and display the value of the $random variable.</source>
          <target state="translated">나머지 명령은 호출 연산자(&amp;)를 사용하여 모듈의 명령을 호출하고 $random 변수 값을 표시합니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>You can use the call operator to invoke any command in a module, including commands that are not exported.</source>
          <target state="translated">호출 연산자를 사용하면 내보내지 않은 명령을 포함하여 모듈의 어떠한 명령도 호출할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>In this case, the commands show the random number that is being generated when the Elapsed event occurs.</source>
          <target state="translated">이 경우 명령에는 Elapsed 이벤트가 발생할 때 생성된 임의의 숫자가 표시됩니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>For more information about modules, see about_Modules.</source>
          <target state="translated">모듈에 대한 자세한 내용은 about_Modules를 참조하세요.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>PARAMETERS</source>
          <target state="translated">매개 변수</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>-Force</source>
          <target state="translated">-Force</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Gets all event subscribers, including subscribers for events that are hidden by using the SupportEvent parameter of Register-ObjectEvent, Register-WmiEvent, and Register-EngineEvent.</source>
          <target state="translated">Register-ObjectEvent, Register-WmiEvent 및 Register-EngineEvent의 SupportEvent 매개 변수를 사용하여 숨긴 이벤트에 대한 가입자를 포함하여 모든 이벤트 구독자를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>-SourceIdentifier</source>
          <target state="translated">-SourceIdentifier</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Gets only the event subscribers with the specified SourceIdentifier property value.</source>
          <target state="translated">지정된 SourceIdentifier 속성 값을 가진 이벤트 구독자만 가져옵니다.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>By default, Get-EventSubscriber gets all event subscribers in the session.</source>
          <target state="translated">기본적으로 Get-EventSubscriber는 세션의 모든 이벤트 구독자를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Wildcards are not permitted.</source>
          <target state="translated">와일드카드는 사용할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>This parameter is case-sensitive.</source>
          <target state="translated">이 매개 변수는 대/소문자를 구분합니다.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>-SubscriptionId</source>
          <target state="translated">-구독 Id</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Gets only the specified subscription identifier.</source>
          <target state="translated">지정한 가입 ID를 가진 PSSession만 가져옵니다.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>By default, Get-EventSubscriber gets all event subscribers in the session.</source>
          <target state="translated">기본적으로 Get-EventSubscriber는 세션의 모든 이벤트 구독자를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>CommonParameters</source>
          <target state="translated">CommonParameters</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutVariable, -OutBuffer, -PipelineVariable, -Verbose, -WarningAction, and -WarningVariable.</source>
          <target state="translated">이 cmdlet은 공통 매개 변수:-디버그,-ErrorAction,-ErrorVariable,-InformationAction,-InformationVariable,-OutVariable,-OutBuffer,-PipelineVariable,-Verbose,-WarningAction 및-warningvariable을 지원 합니다.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>For more information, see about_CommonParameters (http://go.microsoft.com/fwlink/?LinkID=113216).</source>
          <target state="translated">자세한 내용은 about_CommonParameters (http://go.microsoft.com/fwlink/?LinkID=113216)를 참조 합니다.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>INPUTS</source>
          <target state="translated">입력</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>None</source>
          <target state="translated">없음</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>You cannot pipe input to this cmdlet.</source>
          <target state="translated">이 cmdlet에 입력을 파이프할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>OUTPUTS</source>
          <target state="translated">출력</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>System.Management.Automation.PSEventSubscriber</source>
          <target state="translated">System.Management.Automation.PSEventSubscriber</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>Get-EventSubscriber returns an object that represents each event subscriber.</source>
          <target state="translated">Get-EventSubscriber는 각 이벤트 구독자를 나타내는 개체를 반환합니다.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>NOTES</source>
          <target state="translated">참고 사항</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>The New-Event cmdlet, which creates a custom event, does not generate a subscriber.</source>
          <target state="translated">사용자 지정 이벤트를 만드는 New-Event cmdlet은 가입자를 생성하지 않습니다.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>Therefore, the Get-EventSubscriber cmdlet will not find a subscriber object for these events.</source>
          <target state="translated">따라서 Get-EventSubscriber cmdlet은 이러한 이벤트에 대한 가입자 개체를 찾지 않습니다.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>However, if you use the Register-EngineEvent cmdlet to subscribe to a custom event (in order to forward the event or to specify an action), Get-EventSubscriber will find the subscriber that Register-EngineEvent generates.</source>
          <target state="translated">하지만 이벤트를 전달하거나 작업을 지정하기 위해 Register-EngineEvent cmdlet을 사용하여 사용자 지정 이벤트에 가입한 경우 Get-EventSubscriber는 Register-EngineEvent가 생성하는 가입자를 찾습니다.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>Events, event subscriptions, and the event queue exist only in the current session.</source>
          <target state="translated">이벤트, 이벤트 구독 및 이벤트 큐는 현재 세션에만 있습니다.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>If you close the current session, the event queue is discarded and the event subscription is canceled.</source>
          <target state="translated">현재 세션을 닫으면 이벤트 큐가 삭제되고 이벤트 구독이 취소됩니다.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>RELATED LINKS</source>
          <target state="translated">관련된 링크</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>Get-Event</source>
          <target state="translated">Get-Event</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>New-Event</source>
          <target state="translated">New-Event</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>Register-EngineEvent</source>
          <target state="translated">Register-engineevent</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>Register-ObjectEvent</source>
          <target state="translated">Register-objectevent</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>Register-WmiEvent</source>
          <target state="translated">Register-wmievent</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>Remove-Event</source>
          <target state="translated">제거 이벤트</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>Unregister-Event</source>
          <target state="translated">이벤트 등록 취소</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>Wait-Event</source>
          <target state="translated">이벤트 대기</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>