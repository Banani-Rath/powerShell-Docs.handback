<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ko-kr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-1c394fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">c44720ed42006eae0ae573c94a0ddef6fef6f34c</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">reference\4.0\Microsoft.PowerShell.Core\About\about_Remote.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions" />
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d303a58d0b38fc76cc12ba9e313545dcc83f1bf4</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">20c3932b94ef0a7e076fc49348f5abb516bfdad1</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>about_Remote</source>
          <target state="translated">about_Remote</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>powershell, cmdlet</source>
          <target state="translated">powershell cmdlet</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>About Remote</source>
          <target state="translated">원격 정보</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>about_Remote</source>
          <target state="translated">about_Remote</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>TOPIC</source>
          <target state="translated">항목</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>about_Remote</source>
          <target state="translated">about_Remote</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>SHORT DESCRIPTION</source>
          <target state="translated">간단한 설명</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Describes how to run remote commands in Windows PowerShell.</source>
          <target state="translated">Windows PowerShell에서 원격 명령을 실행 하는 방법에 설명 합니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>LONG DESCRIPTION</source>
          <target state="translated">자세한 설명</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>You can run remote commands on a single computer or on multiple computers by using a temporary or persistent connection.</source>
          <target state="translated">임시 또는 영구 연결을 사용 하 여 원격 명령을 단일 컴퓨터 또는 여러 컴퓨터에서 실행할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>You can also start an interactive session with a single remote computer.</source>
          <target state="translated">또한 단일 원격 컴퓨터와 대화형 세션을 시작할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>This topic provides a series of examples to show you how to run different types of remote command.</source>
          <target state="translated">이 항목에서는 일련의 다양 한 유형의 원격 명령 실행 하는 방법을 보여 주는 예제를 제공 합니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>After you try these basic commands, read the Help topics that describe each cmdlet that is used in these commands.</source>
          <target state="translated">이러한 기본 명령을 했는데도 이러한 명령에 사용 되는 각 cmdlet에 설명 하는 도움말 항목을 읽습니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>The topics provide the details and explain how you can modify the commands to meet your needs.</source>
          <target state="translated">항목 세부 정보를 제공 하 고 필요에 맞게 명령을 수정 하는 방법을 설명 합니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Note: To use Windows PowerShell remoting, the local and remote computers must be configured for remoting.</source>
          <target state="translated">참고: Windows PowerShell 원격을 사용 하 여, 로컬 및 원격 컴퓨터 원격 연결을 위해 구성 합니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>For more information, see about_Remote_Requirements.</source>
          <target state="translated">자세한 내용은 about_Remote_Requirements를 참조하세요.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>HOW TO START AN INTERACTIVE SESSION (ENTER-PSSESSION)</source>
          <target state="translated">(ENTER-PSSESSION) 대화형 세션을 시작 하는 방법</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>The easiest way to run remote commands is to start an interactive session with a remote computer.</source>
          <target state="translated">원격 명령을 실행 하는 가장 쉬운 방법은 원격 컴퓨터와 대화형 세션을 시작 하는 합니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>When the session starts, the commands that you type run on the remote computer, just as though you typed them directly on the remote computer.</source>
          <target state="translated">세션이 시작 될 때 처럼 원격 컴퓨터에 직접 입력 한 명령을 입력 하는 원격 컴퓨터에서 실행 합니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>You can connect to only one computer in each interactive session.</source>
          <target state="translated">각 대화형 세션에만 한 컴퓨터에 연결할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>To start an interactive session, use the Enter-PSSession cmdlet.</source>
          <target state="translated">대화형 세션을 시작 하려면 Enter-pssession cmdlet을 사용 합니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>The following command starts an interactive session with the Server01 computer:</source>
          <target state="translated">다음 명령은 Server01 컴퓨터와 대화형 세션을 시작 합니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Enter-PSSession Server01</source>
          <target state="translated">Enter-pssession Server01</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>The command prompt changes to indicate that you are connected to the Server01 computer.</source>
          <target state="translated">명령 프롬프트 변경 Server01 컴퓨터에 연결 되어 있는지를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Server01\PS&gt;</source>
          <target state="translated">Server01\PS &gt;</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Now, you can type commands on the Server01 computer.</source>
          <target state="translated">이제 Server01 컴퓨터에서 명령을 입력할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>To end the interactive session, type:</source>
          <target state="translated">대화형 세션을 종료하려면 다음을 입력합니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Exit-PSSession</source>
          <target state="translated">Exit-PSSession</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>For more information, see Enter-PSSession.</source>
          <target state="translated">자세한 내용은 Enter-pssession을 참조 하십시오.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>HOW TO USE CMDLETS THAT HAVE A COMPUTERNAME PARAMETER TO GET REMOTE DATA</source>
          <target state="translated">GET 원격 데이터에 COMPUTERNAME 매개 변수가 있는 CMDLET 사용 하 여 하는 방법</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Several cmdlets have a ComputerName parameter that lets you get objects from remote computers.</source>
          <target state="translated">원격 컴퓨터에서 개체를 얻을 수 있도록 하는 ComputerName 매개 변수를 포함 하는 여러 cmdlet.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Because these cmdlets do not use WS-Management-based Windows PowerShell remoting, you can use the ComputerName parameter of these cmdlets on any computer that is running Windows PowerShell.</source>
          <target state="translated">이러한 cmdlet WS 관리 기반 Windows PowerShell 원격을 사용 하지 않으므로, Windows PowerShell을 실행 하는 컴퓨터에서 이러한 cmdlet의 ComputerName 매개 변수를 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>The computers do not have to be configured for Windows PowerShell remoting, and the computers do not have to meet the system requirements for remoting.</source>
          <target state="translated">컴퓨터 Windows PowerShell 원격 기능에 대해 구성할 수 없고 컴퓨터를 원격 서비스에 대 한 시스템 요구 사항을 충족 필요가 없습니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>The following cmdlets have a ComputerName parameter:</source>
          <target state="translated">다음 cmdlet에 ComputerName 매개를 변수가 있습니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Clear-EventLog    Limit-EventLog Get-Counter       New-EventLog Get-EventLog      Remove-EventLog Get-HotFix        Restart-Computer Get-Process       Show-EventLog Get-Service       Stop-Computer Get-WinEvent      Test-Connection Get-WmiObject     Write-EventLog</source>
          <target state="translated">Clear-eventlog 제한-EventLog Get-counter New-eventlog Get-EventLog Remove-eventlog Get-핫픽스 Restart-computer Get-process Show-eventlog Get-Stop-computer Get-winevent 테스트 서비스-연결 Get-wmiobject 쓰기-이벤트 로그</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>For example, the following command gets the services on the Server01 remote computer:</source>
          <target state="translated">예를 들어 다음 명령은 Server01 원격 컴퓨터에서 서비스를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Get-Service -ComputerName Server01</source>
          <target state="translated">Get-service ComputerName Server01</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Typically, cmdlets that support remoting without special configuration have a ComputerName parameter and do not have a Session parameter.</source>
          <target state="translated">일반적으로 특별한 구성 없이 원격 작업을 지원하는 cmdlet에는 ComputerName 매개 변수는 있지만 Session 매개 변수는 없습니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>To find these cmdlets in your session, type:</source>
          <target state="translated">세션에서 이러한 cmdlet을 찾으려면 다음과 같이 입력합니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Get-Command | where { $.Parameters.Keys -contains "ComputerName" -and $.Parameters.Keys -NotContains "Session"}</source>
          <target state="translated">Get-command | 여기서 {$입니다. Parameters.Keys-포함 "ComputerName"-및 $입니다. Parameters.Keys-NotContains "세션"을 (를)</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>HOW TO RUN A REMOTE COMMAND</source>
          <target state="translated">원격 명령을 실행 하는 방법</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>To run other commands on remote computers, use the Invoke-Command cmdlet.</source>
          <target state="translated">원격 컴퓨터를 다른 명령을 실행 하려면 Invoke-command cmdlet을 사용 합니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>To run a single command or a few unrelated commands, use the ComputerName parameter of Invoke-Command to specify the remote computers.</source>
          <target state="translated">단일 명령 또는 몇 가지 관련 되지 않은 명령을 실행 하려면 Invoke-command의 ComputerName 매개 변수를 사용 하 여 원격 컴퓨터를 지정 합니다.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Use the ScriptBlock parameter to specify the command.</source>
          <target state="translated">ScriptBlock 매개 변수를 사용 하 여 명령을 지정 합니다.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>For example, the following command runs a Get-Culture command on the Server01 computer.</source>
          <target state="translated">예를 들어 다음 명령은 Server01 컴퓨터에서 Get-culture 명령을 실행합니다.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Invoke-Command -ComputerName Server01 -ScriptBlock {Get-Culture}</source>
          <target state="translated">Invoke-command-ComputerName Server01-ScriptBlock {Get-culture}</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>The ComputerName parameter is designed for situation in which you run a single command or several unrelated commands on one or many computers.</source>
          <target state="translated">ComputerName 매개 변수는 하나 또는 여러 컴퓨터에서 명령 중 하나 또는 여러 관련 없는 명령을 실행 하는 상황을 위해 설계 되었습니다.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>To establish a persistent connection to a remote computer, use the Session parameter.</source>
          <target state="translated">원격 컴퓨터에 영구 연결을 설정 하려면 세션 매개 변수를 사용 합니다.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>HOW TO CREATE A PERSISTENT CONNECTION (PSSESSION)</source>
          <target state="translated">영구 연결 (PSSESSION)을 만드는 방법</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>When you use the ComputerName parameter of the Invoke-Command cmdlet, Windows PowerShell establishes a connection just for the command.</source>
          <target state="translated">이 명령은 Invoke-command cmdlet의 ComputerName 매개 변수를 사용 하면 Windows PowerShell 명령에 바로 연결을 만듭니다.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Then, it closes the connection when the command is complete.</source>
          <target state="translated">명령이 완료될 때 연결을 닫습니다.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Any variables or functions that are defined in the command are lost.</source>
          <target state="translated">모든 변수 또는 명령에 정의 된 함수를 손실 됩니다.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>To create a persistent connection to a remote computer, use the New-PSSession cmdlet.</source>
          <target state="translated">원격 컴퓨터에 영구 연결을 만들려면 New-pssession cmdlet을 사용 합니다.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>For example, the following command creates PSSessions on the Server01 and Server02 computers and then saves the PSSessions in the $s variable.</source>
          <target state="translated">예를 들어, 다음 명령을 Server01 및 Server02 컴퓨터에서 Pssession을 만든 및 다음 $s 변수에 저장 합니다.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>$s = New-PSSession -ComputerName Server01, Server02</source>
          <target state="translated">$s = New-pssession-ComputerName Server01, Server02</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>HOW TO RUN COMMANDS IN A PSSESSION</source>
          <target state="translated">PSSESSION에서 명령을 실행 하는 방법</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>With a PSSession, you can run a series of remote commands that share data, like functions, aliases, and the values of variables.</source>
          <target state="translated">PSSession에서 일련의 함수, 별칭 및 변수 값을 같은 데이터를 공유 하는 원격 명령 실행할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>To run commands in a PSSession, use the Session parameter of the Invoke-Command cmdlet.</source>
          <target state="translated">명령을 PSSession을 실행 하려면 Invoke-command cmdlet의 세션 매개 변수를 사용 합니다.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>For example, the following command uses the Invoke-Command cmdlet to run a Get-Process command in the PSSessions on the Server01 and Server02 computers.</source>
          <target state="translated">예를 들어 다음 명령은 Invoke-command cmdlet를 사용 하 여 Server01 및 Server02 컴퓨터에서 Pssession에서 Get-process 명령을 실행 합니다.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>The command saves the processes in a $p variable in each PSSession.</source>
          <target state="translated">프로세스 각 PSSession에서 $p 변수에 저장 합니다.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>Invoke-Command -Session $s -ScriptBlock {$p = Get-Process}</source>
          <target state="translated">Invoke-command-세션 $s-ScriptBlock {$p Get-process =}</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>Because the PSSession uses a persistent connection, you can run another command in the same PSSession that uses the $p variable.</source>
          <target state="translated">PSSession에 영구 연결을 사용 하므로 $p 변수를 사용 하는 동일한 PSSession에서 다른 명령을 실행할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>The following command counts the number of processes saved in $p.</source>
          <target state="translated">다음 명령은 $p에 저장 하는 프로세스의 수를 계산 합니다.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>Invoke-Command -Session $s -ScriptBlock {$p.count}</source>
          <target state="translated">Invoke-command-세션 $s-ScriptBlock {$p.count}</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>HOW TO RUN A REMOTE COMMAND ON MULTIPLE COMPUTERS</source>
          <target state="translated">여러 컴퓨터에서 원격 명령을 실행 하는 방법</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>To run a remote command on multiple computers, type all of the computer names in the value of the ComputerName parameter of Invoke-Command.</source>
          <target state="translated">여러 컴퓨터에서 원격 명령을 실행 하려면 Invoke-command의 ComputerName 매개 변수 값의 모든 컴퓨터 이름을 입력 합니다.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>Separate the names with commas.</source>
          <target state="translated">쉼표로 이름을 구분 합니다.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>For example, the following command runs a Get-Culture command on three computers:</source>
          <target state="translated">예를 들어 다음 명령은 Get-culture 명령은 세 대의 컴퓨터에서 실행 됩니다.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>Invoke-Command -ComputerName S1, S2, S3 -ScriptBlock {Get-Culture}</source>
          <target state="translated">Invoke-command-ComputerName S1, S2, S3-ScriptBlock {Get-culture}</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>You can also run a command in multiple PSSessions.</source>
          <target state="translated">또한 여러 Pssession에서 명령을 실행할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>The following commands create PSSessions on the Server01, Server02, and Server03 computers and then run a Get-Culture command in each of the PSSessions.</source>
          <target state="translated">다음 명령을 Server01, Server02 및 Server03 컴퓨터에서 Pssession를 만들고 각 Pssession에서 Get-culture 명령을 실행 합니다.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>$s = New-PSSession -ComputerName S1, S2, S3 Invoke-Command -Session $s -ScriptBlock {Get-Culture}</source>
          <target state="translated">$s = New-pssession-ComputerName S1, S2, S3 Invoke-command-세션 $s-ScriptBlock {Get-culture}</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>To include the local computer list of computers, type the name of the local computer, type a dot (.), or type  "localhost".</source>
          <target state="translated">컴퓨터의 로컬 컴퓨터 목록에 포함 하려면 로컬 컴퓨터의 이름을 입력 하, 점 (.)를 입력 하거나 "localhost"를 입력 합니다.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>Invoke-Command -ComputerName S1, S2, S3, localhost -ScriptBlock {Get-Culture}</source>
          <target state="translated">Invoke-command-ComputerName S1, S2, S3, localhost-ScriptBlock {Get-culture}</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>HOW TO RUN A SCRIPT ON REMOTE COMPUTERS</source>
          <target state="translated">원격 컴퓨터에서 스크립트를 실행 하는 방법</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>To run a local script on remote computers, use the FilePath parameter of Invoke-Command.</source>
          <target state="translated">원격 컴퓨터에서 로컬 스크립트를 실행 하려면 Invoke-command의 FilePath 매개 변수를 사용 합니다.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>For example, the following command runs the Sample.ps1 script on the S1 and S2 computers:</source>
          <target state="translated">예를 들어 다음 명령은 S1 및 S2 컴퓨터에서 Sample.ps1 스크립트를 실행 합니다.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>Invoke-Command -ComputerName S1, S2 -FilePath C:\Test\Sample.ps1</source>
          <target state="translated">Invoke-command-ComputerName S1, S2-FilePath C:\Test\Sample.ps1</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>The results of the script are returned to the local computer.</source>
          <target state="translated">스크립트의 결과 로컬 컴퓨터에 반환 됩니다.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>You do not need to copy any files.</source>
          <target state="translated">모든 파일을 복사할 필요가 없습니다.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>HOW TO STOP A REMOTE COMMAND</source>
          <target state="translated">원격 명령 중지 하는 방법</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>To interrupt a command, press CTRL+C.</source>
          <target state="translated">명령을 중단 하려면 CTRL + C를 누릅니다.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>The interrupt request is passed to the remote computer where it terminates the remote command.</source>
          <target state="translated">인터럽트 요청 원격 명령 종료 위치에서 원격 컴퓨터에 전달 됩니다.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>FOR MORE INFORMATION</source>
          <target state="translated">상세 설명</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>-- For information about the system requirements for remoting, see about_Remote_Requirements.</source>
          <target state="translated">-원격 서비스에 대 한 시스템 요구 사항에 대 한 내용은 about_Remote_Requirements를 참조 하세요.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>-- For help in formatting remote output, see about_Remote_Output.</source>
          <target state="translated">-원격 출력 서식 지정에 대 한 도움말을 위한 about_Remote_Output를 참조 하십시오.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>-- For information about how remoting works, how to manage remote data, special configurations, security issues, and other frequently asked questions, see about_Remote_FAQ.</source>
          <target state="translated">-원격 작동 방식, 원격 데이터, 특별 한 구성, 보안 문제 및 기타 질문과 대답을 관리 하는 방법에 대 한 정보를 about_Remote_FAQ를 참조 하십시오.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>-- For help in resolving remoting errors, see about_Remote_Troubleshooting.</source>
          <target state="translated">-에 대 한 도움말 원격 오류를 해결 about_Remote_Troubleshooting를 참조 하십시오.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>-- For information about PSSessions and persistent connections, see about_PSSessions.</source>
          <target state="translated">-Pssession 및 영구 연결에 대 한 정보를 참조 about_pssessions를 참조 하세요.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>-- For information about Windows PowerShell background jobs, see about_Jobs.</source>
          <target state="translated">-Windows PowerShell 백그라운드 작업에 대 한 내용은 about_Jobs를 참조 합니다.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>KEYWORDS</source>
          <target state="translated">키워드</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>about_Remoting</source>
          <target state="translated">about_Remoting</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>SEE ALSO</source>
          <target state="translated">참고 항목</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>about_PSSessions about_Remote_Disconnected_Sessions about_Remote_Requirements about_Remote_FAQ about_Remote_TroubleShooting about_Remote_Variables Enter-PSSession Invoke-Command New-PSSession</source>
          <target state="translated">about_PSSessions about_Remote_Disconnected_Sessions about_Remote_Requirements about_Remote_FAQ about_Remote_TroubleShooting about_Remote_Variables Enter-pssession Invoke-command New-pssession</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>