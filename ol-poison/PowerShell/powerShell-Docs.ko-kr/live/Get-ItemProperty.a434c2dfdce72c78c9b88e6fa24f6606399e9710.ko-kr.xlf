<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ko-kr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-1c394fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1ceb0abe515a737baf588872e49ba3ce0f0de5d2</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">reference\3.0\Microsoft.PowerShell.Management\Get-ItemProperty.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions" />
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">18fa4d966ec131cada7e483cb32aae7cc30c2ae5</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">4cbe98c0206d0b27c62c66384855d3018477cae8</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>powershell, cmdlet</source>
          <target state="translated">powershell cmdlet</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Get-ItemProperty</source>
          <target state="translated">Get-itemproperty</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Get-ItemProperty</source>
          <target state="translated">Get-itemproperty</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>SYNOPSIS</source>
          <target state="translated">요약</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Gets the properties of a specified item.</source>
          <target state="translated">지정된 항목의 속성을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>SYNTAX</source>
          <target state="translated">구문</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Path (Default)</source>
          <target state="translated">경로 (기본값)</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>LiteralPath</source>
          <target state="translated">LiteralPath</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>DESCRIPTION</source>
          <target state="translated">설명</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The Get-ItemProperty cmdlet gets the properties of the specified items.</source>
          <target state="translated">Get-ItemProperty cmdlet은 지정된 항목의 속성을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>For example, you can use Get-ItemProperty to get the value of the LastAccessTime property of a file object.</source>
          <target state="translated">예를 들어 Get-ItemProperty를 사용하여 파일 개체의 LastAccessTime 속성 값을 가져올 수 있습니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>You can also use Get-ItemProperty to view registry entries and their values.</source>
          <target state="translated">Get-ItemProperty를 사용하여 레지스트리 항목과 해당 값을 볼 수도 있습니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>EXAMPLES</source>
          <target state="translated">예제</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>-------------------------- EXAMPLE 1 --------------------------</source>
          <target state="translated">-------------------------- 예제 1 --------------------------</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>This command gets information about the C:\Windows directory.</source>
          <target state="translated">이 명령은 C:\Windows 디렉터리에 대한 정보를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>-------------------------- EXAMPLE 2 --------------------------</source>
          <target state="translated">-------------------------- EXAMPLE 2 --------------------------</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>This command gets the properties of the C:\Test\Weather.xls file.</source>
          <target state="translated">이 명령은 C:\Test\Weather.xls 파일의 속성을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>The result is piped to the Format-List cmdlet to display the output as a list.</source>
          <target state="translated">결과를 Format-List cmdlet으로 파이프하여 출력을 목록으로 표시합니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>-------------------------- EXAMPLE 3 --------------------------</source>
          <target state="translated">-------------------------- EXAMPLE 3 --------------------------</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>This command displays the value name and data of each of the registry entries contained in the CurrentVersion registry subkey.</source>
          <target state="translated">이 명령은 CurrentVersion 레지스트리 하위 키에 포함된 각 레지스트리 항목의 값 이름과 데이터를 표시합니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Note that the command requires that there is a Windows PowerShell drive named HKLM: that is mapped to the HKEY_LOCAL_MACHINE hive of the registry.</source>
          <target state="translated">이 명령을 사용하려면 레지스트리의 HKEY_LOCAL_MACHINE 하이브에 매핑된 HKLM:이라는 Windows PowerShell 드라이브가 있어야 합니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>A drive with that name and mapping is available in Windows PowerShell by default.</source>
          <target state="translated">Windows PowerShell에서 기본적으로 해당 이름과 매핑을 가진 드라이브를 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Alternatively, the path to this registry subkey can be specified by using the following alternative path that begins with the provider name followed by two colons:</source>
          <target state="translated">또는 공급자 이름으로 시작되고 그 뒤에 두 개의 콜론이 오는 대체</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Registry::HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion.</source>
          <target state="translated">경로(Registry::HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion)를 사용하여 이 레지스트리 하위 키의 경로를 지정할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>-------------------------- EXAMPLE 4 --------------------------</source>
          <target state="translated">-------------------------- EXAMPLE 4 --------------------------</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>This command gets the value name and data of the ProgramFilesDir registry entry in the CurrentVersion registry subkey.</source>
          <target state="translated">이 명령은 CurrentVersion 레지스트리 하위 키에 있는 ProgramFilesDir 레지스트리 항목의 값 이름과 데이터를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>The command uses the Path parameter to specify the subkey and the Name parameter to specify the value name of the entry.</source>
          <target state="translated">Path 매개 변수를 사용하여 하위 키를 지정하고 Name 매개 변수를 사용하여 항목의 값 이름을 지정합니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>The command uses a back tick or "grave accent" (<ph id="ph1">\`</ph>), the Windows PowerShell continuation character, to continue the command on the second line.</source>
          <target state="translated">역 따옴표 또는 "강 악센트 기호" 명령을 사용 하 여 (<ph id="ph1">\`</ph>), Windows PowerShell 연속 문자를 두 번째 줄에서 명령을 계속 합니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>-------------------------- EXAMPLE 5 --------------------------</source>
          <target state="translated">-------------------------- EXAMPLE 5 --------------------------</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>This command gets the value names and data of the registry entries in the PowerShellEngine registry key.</source>
          <target state="translated">이 명령은 PowerShellEngine 레지스트리 키에 있는 레지스트리 항목의 값 이름과 데이터를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>The results are shown in the following sample output.</source>
          <target state="translated">결과는 다음과 같은 샘플 출력에 표시됩니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>-------------------------- EXAMPLE 6 --------------------------</source>
          <target state="translated">-------------------------- EXAMPLE 6 --------------------------</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>This example shows how to format the output of a Get-ItemProperty command in a list to make it easy to see the registry values and data and to make it easy to interpret the results.</source>
          <target state="translated">이 예제에서는 Get-ItemProperty 명령의 출력을 목록 형식으로 지정하여 레지스트리 값과 데이터를 알아보기 쉽게 표시하고 결과를 쉽게 해석하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>The first command uses the Get-ItemProperty cmdlet to get the registry entries in the Microsoft.PowerShell subkey.</source>
          <target state="translated">첫 번째 명령은 Get-ItemProperty cmdlet을 사용하여 Microsoft.PowerShell 하위 키에 있는 레지스트리 항목을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>This subkey stores options for the default shell for Windows PowerShell.</source>
          <target state="translated">이 하위 키는 Windows PowerShell의 기본 셸에 대한 옵션을 저장합니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>The results are shown in the following sample output.</source>
          <target state="translated">결과는 다음과 같은 샘플 출력에 표시됩니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>The output shows that there are two registry entries, Path and ExecutionPolicy.</source>
          <target state="translated">출력은 Path와 ExecutionPolicy라는 두 개의 레지스트리 항목이 있음을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>When a registry key contains fewer than five entries, by default it is displayed in a table, but it is often easier to view in a list.</source>
          <target state="translated">레지스트리 키에 포함된 항목이 5개보다 적을 경우 기본적으로 테이블 형식으로 표시되지만 대체로 목록으로 보기가 더 쉽습니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>The second command uses the same Get-ItemProperty command.</source>
          <target state="translated">두 번째 명령은 동일한 Get-ItemProperty 명령을 사용하지만</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>However, this time, the command uses a pipeline operator (|) to send the results of the command to the Format-List cmdlet.</source>
          <target state="translated">이번에는 파이프라인 연산자(|)를 사용하여 명령의 결과를 Format-List cmdlet으로 보냅니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>The Format-List command uses the Property parameter with a value of * (all) to display all of the properties of the objects in a list.</source>
          <target state="translated">Format-List 명령은 *(모두) 값으로 Property 매개 변수를 사용하여 개체의 모든 속성을 목록으로 표시합니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>The results are shown in the following sample output.</source>
          <target state="translated">결과는 다음과 같은 샘플 출력에 표시됩니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>The resulting display shows the Path and ExecutionPolicy registry entries, along with several less familiar properties of the registry key object.</source>
          <target state="translated">결과 표시는 Path 및 ExecutionPolicy 레지스트리 항목과 덜 익숙한 여러 레지스트리 키 개체 속성을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>The other properties, prefixed with "PS", are properties of Windows PowerShell custom objects, such as the objects that represent the registry keys.</source>
          <target state="translated">앞에 "PS"가 붙은 다른 속성은 레지스트리 키를 나타내는 개체와 같은 Windows PowerShell 사용자 지정 개체의 속성입니다.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>PARAMETERS</source>
          <target state="translated">매개 변수</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>-Credential</source>
          <target state="translated">-Credential</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Specifies a user account that has permission to perform this action.</source>
          <target state="translated">이 작업을 수행할 권한이 있는 사용자 계정을 지정합니다.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>The default is the current user.</source>
          <target state="translated">기본값은 현재 사용자입니다.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Type a user name, such as "User01" or "Domain01\User01", or enter a PSCredential object, such as one generated by the Get-Credential cmdlet.</source>
          <target state="translated">사용자 이름(예: "User01" 또는 "Domain01\User01")을 입력하거나 Get-Credential cmdlet에서 생성된 개체와 같은 PSCredential 개체를 입력합니다.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>If you type a user name, you will be prompted for a password.</source>
          <target state="translated">사용자 이름을 입력하면 암호를 입력하라는 메시지가 표시됩니다.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>This parameter is not supported by any providers installed with Windows PowerShell.</source>
          <target state="translated">이 매개 변수는 Windows PowerShell과 함께 설치된 모든 공급자에서 지원되지 않습니다.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>-Exclude</source>
          <target state="translated">-제외</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Omits the specified items.</source>
          <target state="translated">지정된 항목을 생략합니다.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Wildcards are permitted.</source>
          <target state="translated">와일드카드가 지원됩니다.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>-Filter</source>
          <target state="translated">필터</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>Specifies a filter in the provider's format or language.</source>
          <target state="translated">공급자의 형식 또는 언어에 필터를 지정합니다.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>The value of this parameter qualifies the Path parameter.</source>
          <target state="translated">이 매개 변수 값은 Path 매개 변수를 한정합니다.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>The syntax of the filter, including the use of wildcards, depends on the provider.</source>
          <target state="translated">와일드카드 사용을 포함한 필터 구문은 공급자에 따라 달라집니다.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>Filters are more efficient than other parameters, because the provider applies them when retrieving the objects rather than having Windows PowerShell filter the objects after they are retrieved.</source>
          <target state="translated">공급자가 개체를 검색한 후 Windows PowerShell을 통해 해당 개체를 필터링하는 대신 개체를 검색할 때 필터를 적용하기 때문에 필터는 다른 매개 변수보다 더 효율적입니다.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>-Include</source>
          <target state="translated">-포함</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>Includes the specified items.</source>
          <target state="translated">지정한 항목을 포함합니다.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>-LiteralPath</source>
          <target state="translated">-LiteralPath</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>Specifies a path to the item property.</source>
          <target state="translated">항목 속성의 경로를 지정합니다.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>The value of LiteralPath is used exactly as it is typed.</source>
          <target state="translated">LiteralPath 값은 입력한 대로 사용됩니다.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>No characters are interpreted as wildcards.</source>
          <target state="translated">어떠한 문자도 와일드카드로 해석되지 않습니다.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>If the path includes escape characters, enclose it in single quotation marks.</source>
          <target state="translated">이스케이프 문자가 포함된 경로는 작은따옴표로 묶으세요.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>Single quotation marks tell Windows PowerShell not to interpret any characters as escape sequences.</source>
          <target state="translated">작은따옴표는 Windows PowerShell이 어떤 문자도 이스케이프 시퀀스로 해석하지 않도록 지시합니다.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>-Name</source>
          <target state="translated">-Name</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>Specifies the name of the property or properties to retrieve.</source>
          <target state="translated">검색할 속성의 이름을 지정합니다.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>-Path</source>
          <target state="translated">-Path</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>Specifies the path to the item or items.</source>
          <target state="translated">항목의 경로를 지정합니다.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>-UseTransaction</source>
          <target state="translated">-UseTransaction</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>Includes the command in the active transaction.</source>
          <target state="translated">활성 트랜잭션에 명령을 포함합니다.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>This parameter is valid only when a transaction is in progress.</source>
          <target state="translated">이 매개 변수는 트랜잭션이 진행 중인 경우에만 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>For more information, see Includes the command in the active transaction.</source>
          <target state="translated">자세한 내용은 활성 트랜잭션에 명령을 포함 합니다.를 참조 하십시오.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>This parameter is valid only when a transaction is in progress.</source>
          <target state="translated">이 매개 변수는 트랜잭션이 진행 중인 경우에만 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>For more information, see</source>
          <target state="translated">자세한 내용은  항목을 참조하세요.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>CommonParameters</source>
          <target state="translated">CommonParameters</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutVariable, -OutBuffer, -PipelineVariable, -Verbose, -WarningAction, and -WarningVariable.</source>
          <target state="translated">이 cmdlet은 공통 매개 변수:-디버그,-ErrorAction,-ErrorVariable,-InformationAction,-InformationVariable,-OutVariable,-OutBuffer,-PipelineVariable,-Verbose,-WarningAction 및-warningvariable을 지원 합니다.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>For more information, see about_CommonParameters (http://go.microsoft.com/fwlink/?LinkID=113216).</source>
          <target state="translated">자세한 내용은 about_CommonParameters (http://go.microsoft.com/fwlink/?LinkID=113216)를 참조 합니다.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>INPUTS</source>
          <target state="translated">입력</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>System.String</source>
          <target state="translated">System.String</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>You can pipe a string that contains a path to Get-ItemProperty.</source>
          <target state="translated">경로가 포함된 문자열을 Get-ItemProperty로 파이프할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>OUTPUTS</source>
          <target state="translated">출력</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>System.Boolean, System.String, System.DateTime</source>
          <target state="translated">예, System.String, System.DateTime</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>Get-ItemProperty returns an object for each item property that it gets.</source>
          <target state="translated">Get-ItemProperty는 가져오는 각 항목 속성에 대한 개체를 반환합니다.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>The object type depends on the object that is retrieved.</source>
          <target state="translated">개체 유형은 검색된 개체에 따라 달라집니다.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>For example, in a file system drive, it might return a file or folder.</source>
          <target state="translated">예를 들어 파일 시스템 드라이브에서는 파일 또는 폴더가 반환될 수 있습니다.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>NOTES</source>
          <target state="translated">참고 사항</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>The Get-ItemProperty cmdlet is designed to work with the data exposed by any provider.</source>
          <target state="translated">Get-ItemProperty cmdlet은 모든 공급자가 제공하는 데이터에 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>To list the providers available in your session, type "Get-PSProvider".</source>
          <target state="translated">세션에서 사용할 수 있는 공급자를 나열하려면 "Get-PsProvider"를 입력합니다.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>For more information, see about_Providers.</source>
          <target state="translated">자세한 내용은 About_Providers를 참조하세요.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>RELATED LINKS</source>
          <target state="translated">관련된 링크</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>Clear-ItemProperty</source>
          <target state="translated">Clear-itemproperty</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>Copy-ItemProperty</source>
          <target state="translated">Copy-itemproperty</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>Move-ItemProperty</source>
          <target state="translated">Move-itemproperty</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>New-ItemProperty</source>
          <target state="translated">New-itemproperty</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>Remove-ItemProperty</source>
          <target state="translated">Remove-itemproperty</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>Rename-ItemProperty</source>
          <target state="translated">Rename-itemproperty</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>Set-ItemProperty</source>
          <target state="translated">Set-ItemProperty</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>about_Providers</source>
          <target state="translated">about_Providers</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>