<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ko-kr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-1c394fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">2ee63fca69353951e6de30c92e187603f303b51e</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">reference\5.0\PSReadline\Set-PSReadlineKeyHandler.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions" />
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">eda42eee523c3d668f4efaeb15212a5ea0c7f400</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">c5660b185e912a8065e6c255cb3e011a005f0ab2</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>powershell, cmdlet</source>
          <target state="translated">powershell cmdlet</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Set-PSReadlineKeyHandler</source>
          <target state="translated">집합 PSReadlineKeyHandler</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Set-PSReadlineKeyHandler</source>
          <target state="translated">집합 PSReadlineKeyHandler</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>SYNOPSIS</source>
          <target state="translated">요약</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Binds keys to user-defined or PSReadline-provided key handlers.</source>
          <target state="translated">사용자 정의 또는 PSReadline가 제공한 키 처리기에 키를 바인딩합니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>SYNTAX</source>
          <target state="translated">구문</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>ScriptBlock</source>
          <target state="translated">스크립트 블록</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Function</source>
          <target state="translated">기능</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>DESCRIPTION</source>
          <target state="translated">설명</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>Set-PSReadlineKeyHandler<ept id="p1">**</ept> cmdlet customizes the result when a particular key or sequence of keys is pressed while PSReadline is reading input.</source>
          <target state="translated"> <bpt id="p1">**</bpt>집합 PSReadlineKeyHandler<ept id="p1">**</ept> 때 특정 키 해당 결과 사용자 지정 cmdlet 또는 시퀀스 키를 누른 채로 PSReadline 입력을 읽기는 합니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>By using user-defined key bindings, you can do almost anything that is possible from within a Windows PowerShell script.</source>
          <target state="translated">키 바인딩 사용자 정의 사용 하 여 Windows PowerShell 스크립트 내에서 수행할 수 있는 거의 모든 요소를 수행할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Typically, you might modify the command line in a new way, but because the handlers are just Windows PowerShell scripts, you can do interesting things such as change directories or open applications.</source>
          <target state="translated">일반적으로 명령줄을 새로운 방식으로 수정할 수 있습니다 하지만 처리기만 Windows PowerShell 스크립트는 이기 때문에 수행와 같은 흥미로운 사실이 디렉터리를 변경 하거나 있습니다 열려 있는 응용 프로그램.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>EXAMPLES</source>
          <target state="translated">예제</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Example 1: Bind the arrow key to a function</source>
          <target state="translated">예제 1: 함수에 화살표 키 바인딩</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>This command binds the up arrow key to the function HistorySearchBackward, which uses the currently-entered command line as the start of the search string when it is searching through command history.</source>
          <target state="translated">이 명령은 HistorySearchBackward 때 명령 기록을 통해 검색 하는 것 검색 문자열의 시작으로 현재 입력 한 명령줄을 사용 하 여 함수에 위쪽 화살표 키를 바인딩합니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Example 2: Bind a key to a script block</source>
          <target state="translated">예 2: 스크립트 블록에는 키를 바인딩</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>This command binds the key Ctrl+Shift+B to a script block that clears the line, inserts the word build, and then accepts the line.</source>
          <target state="translated">이 명령은 줄 지웁니다 빌드 라는 단어를 삽입 하 고 다음 줄을 수락 하는 스크립트 블록을 Ctrl + Shift + B 키를 바인딩합니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>The example shows how a single key can be used to run a command.</source>
          <target state="translated">명령을 실행 하는 단일 키를 사용할 수 있는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>PARAMETERS</source>
          <target state="translated">매개 변수</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>-BriefDescription</source>
          <target state="translated">-BriefDescription</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>A brief description of the key binding.</source>
          <target state="translated">키 바인딩의 간략 한 설명입니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>You can get this from the output of the Get-PSReadlineKeyHandler cmdlet.</source>
          <target state="translated">Get PSReadlineKeyHandler cmdlet의 출력에서이 데이터를 가져올 수 있습니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>-Chord</source>
          <target state="translated">-현</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Specifies an array of keys or sequences of keys to be bound to a function or script block.</source>
          <target state="translated">키의 배열 또는 함수 또는 스크립트 블록에 바인딩될 수 있는 키의 순서를 지정 합니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Use a single string to specify a single binding.</source>
          <target state="translated">단일 문자열을 사용 하 여 단일 바인딩을 지정 합니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>If the binding is a sequence of keys, separate the keys by a comma, as in the following example:</source>
          <target state="translated">바인딩이 키의 시퀀스인 경우 키를 다음 예제와 같이 쉼표를 구분 합니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>"Ctrl+X,Ctrl+L"</source>
          <target state="translated">"Ctrl + X, Ctrl + L"</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>This parameter accepts multiple strings.</source>
          <target state="translated">이 매개 변수는 여러 문자열을 허용합니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Each string is a separate binding, not a sequence of keys for a single binding.</source>
          <target state="translated">각 문자열은 바인딩, 단일 바인딩에 대 한 키의 시퀀스가 아니라 별도입니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>-Description</source>
          <target state="translated">-Description</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Specifies a more detailed description of the key binding that is visible in the output of the <bpt id="p1">**</bpt>Get-PSReadlineKeyHandler<ept id="p1">**</ept> cmdlet.</source>
          <target state="translated">출력에 표시 되는 키 바인딩에 대 한 보다 자세한 설명을 지정는 <bpt id="p1">**</bpt>Get PSReadlineKeyHandler<ept id="p1">**</ept> cmdlet입니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>-Function</source>
          <target state="translated">함수</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Specifies the name of an existing key handler provided by PSReadline.</source>
          <target state="translated">PSReadline에서 제공 하는 기존 키 처리기의 이름을 지정 합니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>This parameter lets you rebind existing key bindings, or bind a handler that is provided by PSReadline and is currently unbound.</source>
          <target state="translated">이 매개 변수를 사용 하 여 기존 키 바인딩 바인딩하거나 PSReadline에서 제공 하는 현재 인바운드 처리기를 바인딩할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>By adding the <bpt id="p1">*</bpt>ScriptBlock<ept id="p1">*</ept> parameter, you can get equivalent functionality by calling the method directly from the script block.</source>
          <target state="translated">추가 하 여는 <bpt id="p1">*</bpt>ScriptBlock<ept id="p1">*</ept> 매개 변수를 스크립트 블록에서 직접 메서드를 호출 하 여 해당 하는 기능을 얻을 수 있습니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>This parameter is the preferred method, however, because the results make it easier to determine which functions are bound and unbound.</source>
          <target state="translated">그러나이 매개 변수를 결과를 쉽게 함수 바인딩되며 바인딩 해제를 결정 하기 때문에 선호 되는 방법,는.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>To see a complete list of these values, type <ph id="ph1">`Get-Help Set-PSReadlineKeyHandler -Full`</ph>.</source>
          <target state="translated">이러한 값의 전체 목록을 보려면 <ph id="ph1">`Get-Help Set-PSReadlineKeyHandler -Full`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>-ScriptBlock</source>
          <target state="translated">-ScriptBlock</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Specifies a script block value that is called when the chord is entered.</source>
          <target state="translated">현이 입력 될 때 호출 되는 스크립트 블록 값을 지정 합니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>The script block is passed one, or sometimes two, arguments.</source>
          <target state="translated">스크립트 블록에는 인수 하나, 또는 경우에 따라 두 개가 전달 됩니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>The first argument is the key pressed, a <bpt id="p1">**</bpt>ConsoleKeyInfo<ept id="p1">**</ept> object..</source>
          <target state="translated">첫 번째 인수는 키를 누른 상태는 <bpt id="p1">**</bpt>ConsoleKeyInfo<ept id="p1">**</ept> 개체...</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>The second argument could be any object depending on the context.</source>
          <target state="translated">두 번째 인수는 컨텍스트에 따라 모든 개체 수 있습니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>CommonParameters</source>
          <target state="translated">CommonParameters</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutVariable, -OutBuffer, -PipelineVariable, -Verbose, -WarningAction, and -WarningVariable.</source>
          <target state="translated">이 cmdlet은 공통 매개 변수:-디버그,-ErrorAction,-ErrorVariable,-InformationAction,-InformationVariable,-OutVariable,-OutBuffer,-PipelineVariable,-Verbose,-WarningAction 및-warningvariable을 지원 합니다.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>For more information, see about_CommonParameters (http://go.microsoft.com/fwlink/?LinkID=113216).</source>
          <target state="translated">자세한 내용은 about_CommonParameters (http://go.microsoft.com/fwlink/?LinkID=113216)를 참조 합니다.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>INPUTS</source>
          <target state="translated">입력</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>You cannot pipe objects to this cmdlet.</source>
          <target state="translated">이 cmdlet에 개체를 파이프할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>OUTPUTS</source>
          <target state="translated">출력</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>NOTES</source>
          <target state="translated">참고 사항</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>RELATED LINKS</source>
          <target state="translated">관련된 링크</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Get-PSReadlineKeyHandler</source>
          <target state="translated">Get PSReadlineKeyHandler</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Remove-PSReadlineKeyHandler</source>
          <target state="translated">PSReadlineKeyHandler 제거</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Get-PSReadlineOption</source>
          <target state="translated">Get PSReadlineOption</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Set-PSReadlineOption</source>
          <target state="translated">집합 PSReadlineOption</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>