<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ko-kr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-1c394fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">b6588410945555d1d020b2efec1e731c3a301080</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">reference\5.0\Microsoft.PowerShell.Core\About\about_Throw.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions" />
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">7f0003f76b3735c9c2b223003bb0904085e4c3e7</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">4ed9d03e93b0ebb02cae207fb1c5c0e4c03c702a</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>about_Throw</source>
          <target state="translated">about_Throw</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>powershell, cmdlet</source>
          <target state="translated">powershell cmdlet</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>About Throw</source>
          <target state="translated">Throw 하는 방법에 대 한</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>about_Throw</source>
          <target state="translated">about_Throw</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>TOPIC</source>
          <target state="translated">항목</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>about_Throw</source>
          <target state="translated">about_Throw</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>SHORT DESCRIPTION</source>
          <target state="translated">간단한 설명</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Describes the Throw keyword, which generates a terminating error.</source>
          <target state="translated">종료 오류를 생성 하는 Throw 키워드를 설명 합니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>LONG DESCRIPTION</source>
          <target state="translated">자세한 설명</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The Throw keyword causes a terminating error.</source>
          <target state="translated">Throw 키워드 종료 오류가 발생 합니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>You can use the Throw keyword to stop the processing of a command, function, or script.</source>
          <target state="translated">명령, 함수 또는 스크립트의 처리를 중지 Throw 키워드를 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>For example, you can use the Throw keyword in the script block of an If statement to respond to a condition or in the Catch block of a Try-Catch-Finally statement.</source>
          <target state="translated">예를 들어 If의 스크립트 블록에서 Throw 키워드를 사용할 수 있습니다 Try – Catch – Finally 문의 Catch 블록에서 또는 조건에 응답 하는 문입니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>You can also use the Throw keyword in a parameter declaration to make a function parameter mandatory.</source>
          <target state="translated">함수 매개 변수를 필수로 매개 변수 선언에서 Throw 키워드를 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>The Throw keyword can throw any object, such as a user message string or the object that caused the error.</source>
          <target state="translated">Throw 키워드 사용자 메시지 문자열 또는 오류를 발생 시킨 개체와 같은 모든 개체를 throw 할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>SYNTAX</source>
          <target state="translated">구문</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>The syntax of the Throw keyword is as follows:</source>
          <target state="translated">Throw 키워드의 구문은 다음과 같습니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>throw [<ph id="ph1">&lt;expression&gt;</ph>]</source>
          <target state="translated">throw [<ph id="ph1">&lt;expression&gt;</ph>]</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>The expression in the Throw syntax is optional.</source>
          <target state="translated">Throw 구문에서 식을 선택 사항입니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>When the Throw statement does not appear in a Catch block, and it does not include an expression, it generates a ScriptHalted error.</source>
          <target state="translated">Throw 문은 Catch 블록에 표시 되지 않습니다. 식이 포함 되지 않습니다를 ScriptHalted 오류를 생성 합니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>C:\PS&gt; throw</source>
          <target state="translated">C:\PS &gt; throw</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>ScriptHalted At line:1 char:6</source>
          <target state="translated">ScriptHalted에서 줄: 1 문자: 6</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>throw &lt;&lt;&lt;&lt;</source>
          <target state="translated">throw &lt;&lt;&lt;&lt;</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>CategoryInfo          : OperationStopped: (:) [], RuntimeException</source>
          <target state="translated">CategoryInfo: OperationStopped: (:) RuntimeException]</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>FullyQualifiedErrorId : ScriptHalted</source>
          <target state="translated">FullyQualifiedErrorId: ScriptHalted</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>If the Throw keyword is used in a Catch block without an expression, it throws the current RuntimeException again.</source>
          <target state="translated">Throw 키워드를 식이 없는 Catch 블록에서 사용 하는 경우 현재 RuntimeException 다시 throw 합니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>For more information, see about_Try_Catch_Finally.</source>
          <target state="translated">자세한 내용은 about_Try_Catch_Finally를 참조 하십시오.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>THROWING A STRING</source>
          <target state="translated">문자열로 THROW합니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>The optional expression in a Throw statement can be a string, as shown in the following example:</source>
          <target state="translated">Throw 문은 선택적 식입니다. 다음 예제와 같이 문자열로 수: 있습니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>C:\PS&gt; throw "This is an error."</source>
          <target state="translated">C:\PS &gt; "는 오류입니다."를 throw 합니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>This is an error.</source>
          <target state="translated">이 오류가 발생 합니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>At line:1 char:6</source>
          <target state="translated">줄: 1 문자: 6</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>throw &lt;&lt;&lt;&lt;  "This is an error."</source>
          <target state="translated">throw &lt;&lt;&lt;&lt; "오류입니다."</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>CategoryInfo          : OperationStopped: (This is an error.:String) [], RuntimeException</source>
          <target state="translated">CategoryInfo: OperationStopped: (이것이 오류.: 문자열), RuntimeException</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>FullyQualifiedErrorId : This is an error.</source>
          <target state="translated">FullyQualifiedErrorId: 오류입니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>THROWING OTHER OBJECTS</source>
          <target state="translated">다른 개체를 THROW합니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>The expression can also be an object that throws the object that represents the PowerShell process, as shown in the following example:</source>
          <target state="translated">식은 다음 예와에서 같이 PowerShell 프로세스를 나타내는 개체를 throw 하는 개체를 실행할 수도 있습니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>C:\PS&gt; throw (get-process PowerShell)</source>
          <target state="translated">C:\PS &gt; (get 프로세스 PowerShell)를 throw 합니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>System.Diagnostics.Process (PowerShell) At line:1 char:6</source>
          <target state="translated">줄: 1 문자: 6 System.Diagnostics.Process (PowerShell)</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>throw &lt;&lt;&lt;&lt;  (get-process PowerShell)</source>
          <target state="translated">throw &lt;&lt;&lt;&lt; (get 프로세스 PowerShell)</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>CategoryInfo          : OperationStopped: (System.Diagnostics.Process (PowerShell):Process) [], RuntimeException</source>
          <target state="translated">CategoryInfo: OperationStopped: (System.Diagnostics.Process (PowerShell): 프로세스), RuntimeException</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>FullyQualifiedErrorId : System.Diagnostics.Process (PowerShell)</source>
          <target state="translated">FullyQualifiedErrorId: System.Diagnostics.Process (PowerShell)</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>You can use the TargetObject property of  the ErrorRecord object in the $error automatic variable to examine the error.</source>
          <target state="translated">오류를 검사할 수 $error 자동 변수에 ErrorRecord 개체의 TargetObject 속성을 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>C:\PS&gt; $error[0].targetobject</source>
          <target state="translated">C:\PS &gt; $error [0].targetobject</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Handles  NPM(K)    PM(K)      WS(K) VM(M)   CPU(s)     Id ProcessName</source>
          <target state="translated">NPM(K) PM(K) WS(K) VM(M) CPU(s) Id ProcessName 처리</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>319      26    61016      70864   568     3.28   5548 PowerShell</source>
          <target state="translated">319 26 61016 70864 568 3.28 5548 PowerShell</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>You can also throw an ErrorRecord object or a Microsoft .NET Framework exception.</source>
          <target state="translated">ErrorRecord 개체 또는 Microsoft.NET Framework 예외를 throw 할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>The following example uses the Throw keyword to throw a System.FormatException object.</source>
          <target state="translated">다음 예제에서는 Throw 키워드를 사용 하 여 System.FormatException 개체를 throw 합니다.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>C:\PS&gt; $formatError = new-object system.formatexception</source>
          <target state="translated">C:\PS &gt; $formatError = 새 개체 system.formatexception</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>C:\PS&gt; throw $formatError</source>
          <target state="translated">C:\PS &gt; $formatError를 throw 합니다.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>One of the identified items was in an invalid format.</source>
          <target state="translated">식별 된 항목 중 하나가 형식이 잘못 되었습니다.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>At line:1 char:6</source>
          <target state="translated">줄: 1 문자: 6</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>throw &lt;&lt;&lt;&lt;  $formatError</source>
          <target state="translated">throw &lt;&lt;&lt;&lt; $formatError</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>CategoryInfo          : OperationStopped: (:) [], FormatException</source>
          <target state="translated">CategoryInfo: OperationStopped: (:) , FormatException</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>FullyQualifiedErrorId : One of the identified items was in an invalid format.</source>
          <target state="translated">FullyQualifiedErrorId:는 식별 된 항목 중 하나에 형식이 잘못 되었습니다.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>RESULTING ERROR</source>
          <target state="translated">결과 오류</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>The Throw keyword can generate an ErrorRecord object.</source>
          <target state="translated">Throw 키워드는 ErrorRecord 개체를 생성할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>The Exception property of the ErrorRecord object contains a RuntimeException object.</source>
          <target state="translated">ErrorRecord 개체의 예외 속성 RuntimeException 개체를 포함합니다.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>The remainder of the ErrorRecord object and the RuntimeException object vary with the object that the Throw keyword throws.</source>
          <target state="translated">Throw 키워드를 throw 하는 개체 ErrorRecord 개체와 RuntimeException 개체의 나머지 부분에 따라 다릅니다.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>The RunTimeException object is wrapped in an ErrorRecord object, and the ErrorRecord object is automatically saved in the $Error automatic variable.</source>
          <target state="translated">RunTimeException 개체와 ErrorRecord 개체에 래핑되고 ErrorRecord 개체 $Error 자동 변수에 자동으로 저장 됩니다.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>USING THROW TO CREATE A MANDATORY PARAMETER</source>
          <target state="translated">THROW를 사용 하 여 필수 매개 변수를 만들려면</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>You can use the Throw keyword to make a function parameter mandatory.</source>
          <target state="translated">함수 매개 변수를 필수로 Throw 키워드를 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>This is an alternative to using the Mandatory parameter of the Parameter keyword.</source>
          <target state="translated">매개 변수 키워드의 필수 매개 변수를 사용 하는 대신입니다.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>When you use the Mandatory parameter, the system prompts the user for the required parameter value.</source>
          <target state="translated">필수 매개 변수를 사용 하면 사용자에 게 필요한 매개 변수 값이 표시 됩니다.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>When you use the Throw keyword, the command stops and displays the error record.</source>
          <target state="translated">Throw 키워드를 사용 하면 명령이 중지 하 고 오류 레코드가 표시 됩니다.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>For example, the Throw keyword in the parameter subexpression makes the Path parameter a required parameter in the function.</source>
          <target state="translated">예를 들어, 매개 변수 하위 식에서 Throw 키워드 사용 하면 Path 매개 변수는 필수 매개 변수는 함수에 있습니다.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>In this case, the Throw keyword throws a message string, but it is the presence of the Throw keyword that generates the terminating error if the Path parameter is not specified.</source>
          <target state="translated">이 경우에 Throw 키워드 throw 메시지 문자열, 이지만 Path 매개 변수를 지정 하지 않으면 종료 오류를 생성 하는 Throw 키워드의 존재 있습니다.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>The expression that follows Throw is optional.</source>
          <target state="translated">Throw 뒤에 오는 식은 선택 사항입니다.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>function Get-XMLFiles { param ($path = $(throw "The Path parameter is required.")) dir -path $path<ph id="ph1">\*</ph>.xml -recurse | sort lastwritetime | ft lastwritetime, attributes, name  -auto }</source>
          <target state="translated">Get XMLFiles 함수 {param ($path = $(throw "경로 매개 변수는 필수입니다.")) dir-경로 $path<ph id="ph1">\*</ph>.xml-recurse | lastwritetime 정렬 | ft lastwritetime, 특성, name-자동}</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>SEE ALSO</source>
          <target state="translated">참고 항목</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>about_Break about_Continue about_Scope about_Trap about_Try_Catch_Finally</source>
          <target state="translated">about_Break about_continue를 참조 하세요 about_Scope about_Trap about_Try_Catch_Finally</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>