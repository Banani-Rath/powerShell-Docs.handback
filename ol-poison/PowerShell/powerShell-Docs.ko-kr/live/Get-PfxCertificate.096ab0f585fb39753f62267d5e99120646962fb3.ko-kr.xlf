<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ko-kr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-1c394fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d2489da1264620081c81392a871d8623e435fd26</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">reference\5.0\Microsoft.PowerShell.Security\Get-PfxCertificate.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions" />
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">c05183318bfb2ea16f20dc7f77d477b5f9b89349</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">64858a46fb39625928d3a03e91df0a64fbbf58f6</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>powershell, cmdlet</source>
          <target state="translated">powershell cmdlet</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Get-PfxCertificate</source>
          <target state="translated">Get-PfxCertificate</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Get-PfxCertificate</source>
          <target state="translated">Get-PfxCertificate</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>SYNOPSIS</source>
          <target state="translated">요약</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Gets information about .pfx certificate files on the computer.</source>
          <target state="translated">컴퓨터의 .pfx 인증서 파일 정보를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>SYNTAX</source>
          <target state="translated">구문</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>ByPath (Default)</source>
          <target state="translated">ByPath (기본값)</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>ByLiteralPath</source>
          <target state="translated">ByLiteralPath</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>DESCRIPTION</source>
          <target state="translated">설명</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>Get-PfxCertificate<ept id="p1">**</ept> cmdlet gets an object representing each specified .pfx certificate file.</source>
          <target state="translated"> <bpt id="p1">**</bpt>Get-pfxcertificate<ept id="p1">**</ept> cmdlet 각 지정 된.pfx 인증서 파일을 나타내는 개체를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>A .pfx file includes both the certificate and a private key.</source>
          <target state="translated">.pfx 파일에는 인증서와 개인 키가 둘 다 포함되어 있습니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>EXAMPLES</source>
          <target state="translated">예제</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Example 1: Get a .pfx certificate</source>
          <target state="translated">예제 1:.pfx 인증서 가져오기</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>This command gets information about the Test.pfx certificate on the system.</source>
          <target state="translated">이 명령은 시스템의 Test.pfx 인증서 정보를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Example 2: Get a .pfx certificate from a remote computer</source>
          <target state="translated">예제 2: 원격 컴퓨터에서.pfx 인증서 가져오기</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>This command gets a .pfx certificate file from the Server01 remote computer.</source>
          <target state="translated">이 명령은 Server01 원격 컴퓨터에서 .pfx 인증서 파일을 가져오며</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>It uses Invoke-Command to run a <bpt id="p1">**</bpt>Get-PfxCertificate<ept id="p1">**</ept> command remotely.</source>
          <target state="translated">Invoke-command를 사용 하 여 실행 하는 <bpt id="p1">**</bpt>Get-pfxcertificate<ept id="p1">**</ept> 명령을 원격으로 합니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>When the .pfx certificate file is not password-protected, the value of the <bpt id="p1">*</bpt>Authentication<ept id="p1">*</ept> parameter of <bpt id="p2">**</bpt>Invoke-Command<ept id="p2">**</ept> must be CredSSP.</source>
          <target state="translated">때.pfx 인증서 파일이 없습니다 암호로 보호 되어의 값은 <bpt id="p1">*</bpt>인증<ept id="p1">*</ept> 의 매개 변수 <bpt id="p2">**</bpt>Invoke-command<ept id="p2">**</ept> CredSSP 여야 합니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>PARAMETERS</source>
          <target state="translated">매개 변수</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>-FilePath</source>
          <target state="translated">-파일 경로</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Specifies the full path to the .pfx file of the secured file.</source>
          <target state="translated">보안된 파일의.pfx 파일에 전체 경로 지정합니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>If you specify a value for this parameter, it is not necessary to type <ph id="ph1">`-FilePath`</ph> at the command line.</source>
          <target state="translated">입력 필요가 없을 경우이 매개 변수 값을 지정 하면 <ph id="ph1">`-FilePath`</ph> 명령줄에서.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>-LiteralPath</source>
          <target state="translated">-LiteralPath</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>The full path to the .pfx file of the secured file.</source>
          <target state="translated">보안 파일의 .pfx 파일에 대한 전체 경로입니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Unlike <bpt id="p1">*</bpt>FilePath<ept id="p1">*</ept>, the value of the <bpt id="p2">*</bpt>LiteralPath<ept id="p2">*</ept> parameter is used exactly as it is typed.</source>
          <target state="translated">와 달리 <bpt id="p1">*</bpt>FilePath<ept id="p1">*</ept>, 의 값은 <bpt id="p2">*</bpt>LiteralPath<ept id="p2">*</ept> 매개 변수는 입력 된 대로 정확 하 게 사용 합니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>No characters are interpreted as wildcards.</source>
          <target state="translated">어떠한 문자도 와일드카드로 해석되지 않습니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>If the path includes escape characters, enclose it in single quotation marks.</source>
          <target state="translated">이스케이프 문자가 포함된 경로는 작은따옴표로 묶으세요.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Single quotation marks tell Windows PowerShell not to interpret any characters as escape sequences.</source>
          <target state="translated">작은따옴표는 Windows PowerShell이 어떤 문자도 이스케이프 시퀀스로 해석하지 않도록 지시합니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>CommonParameters</source>
          <target state="translated">CommonParameters</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutVariable, -OutBuffer, -PipelineVariable, -Verbose, -WarningAction, and -WarningVariable.</source>
          <target state="translated">이 cmdlet은 공통 매개 변수:-디버그,-ErrorAction,-ErrorVariable,-InformationAction,-InformationVariable,-OutVariable,-OutBuffer,-PipelineVariable,-Verbose,-WarningAction 및-warningvariable을 지원 합니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>For more information, see about_CommonParameters (http://go.microsoft.com/fwlink/?LinkID=113216).</source>
          <target state="translated">자세한 내용은 about_CommonParameters (http://go.microsoft.com/fwlink/?LinkID=113216)를 참조 합니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>INPUTS</source>
          <target state="translated">입력</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>System.String</source>
          <target state="translated">System.String</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>You can pipe a string that contains a file path to <bpt id="p1">**</bpt>Get-PfxCertificate<ept id="p1">**</ept>.</source>
          <target state="translated">파일 경로를 포함 하는 문자열을 파이프할 수 <bpt id="p1">**</bpt>Get-pfxcertificate<ept id="p1">**</ept>합니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>OUTPUTS</source>
          <target state="translated">출력</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>System.Security.Cryptography.X509Certificates.X509Certificate2</source>
          <target state="translated">System.Security.Cryptography.X509Certificates.X509Certificate2</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Get-PfxCertificate<ept id="p1">**</ept> returns an object for each certificate that it gets.</source>
          <target state="translated"><bpt id="p1">**</bpt>Get-pfxcertificate<ept id="p1">**</ept> 는 가져오는 각 인증서에 대 한 개체를 반환 합니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>NOTES</source>
          <target state="translated">참고 사항</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>When using the Invoke-Command cmdlet to run a <bpt id="p1">**</bpt>Get-PfxCertificate<ept id="p1">**</ept> command remotely, and the .pfx certificate file is not password protected, the value of the <bpt id="p2">*</bpt>Authentication<ept id="p2">*</ept> parameter of <bpt id="p3">**</bpt>Invoke-Command<ept id="p3">**</ept> must be CredSSP.</source>
          <target state="translated">Invoke-command cmdlet을 사용 하 여 실행 하는 <bpt id="p1">**</bpt>Get-pfxcertificate<ept id="p1">**</ept> 명령을 원격으로 아니며.pfx 인증서 파일이 암호로 보호의 값은 <bpt id="p2">*</bpt>인증<ept id="p2">*</ept> 의 매개 변수 <bpt id="p3">**</bpt>Invoke-command<ept id="p3">**</ept> CredSSP 여야 합니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>RELATED LINKS</source>
          <target state="translated">관련된 링크</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Get-AuthenticodeSignature</source>
          <target state="translated">Get-AuthenticodeSignature</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Set-AuthenticodeSignature</source>
          <target state="translated">Set-AuthenticodeSignature</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>about_Signing</source>
          <target state="translated">about_Signing</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>