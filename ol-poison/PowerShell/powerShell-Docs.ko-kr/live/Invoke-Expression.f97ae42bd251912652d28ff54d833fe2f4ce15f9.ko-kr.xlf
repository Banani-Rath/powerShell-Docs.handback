<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ko-kr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-1c394fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">a1cd21b0dc35874d947a0167d4442162d67ee428</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">reference\5.0\Microsoft.PowerShell.Utility\Invoke-Expression.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions" />
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f92192fd2d7446dcfd5cf67e63ff87dc8bb86db0</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">70437a5a81cd1458d4a33638620a044880e20b97</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>powershell, cmdlet</source>
          <target state="translated">powershell cmdlet</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Invoke-Expression</source>
          <target state="translated">호출 식</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Invoke-Expression</source>
          <target state="translated">호출 식</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>SYNOPSIS</source>
          <target state="translated">요약</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Runs commands or expressions on the local computer.</source>
          <target state="translated">로컬 컴퓨터에서 명령 또는 식을 실행합니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>SYNTAX</source>
          <target state="translated">구문</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>DESCRIPTION</source>
          <target state="translated">설명</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>Invoke-Expression<ept id="p1">**</ept> cmdlet evaluates or runs a specified string as a command and returns the results of the expression or command.</source>
          <target state="translated"> <bpt id="p1">**</bpt>Invoke-expression<ept id="p1">**</ept> cmdlet 평가 또는 지정된 된 문자열을 명령으로 실행 하 고 식 또는 명령의 결과 반환 합니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Without <bpt id="p1">**</bpt>Invoke-Expression<ept id="p1">**</ept>, a string submitted at the command line would be returned (echoed) unchanged.</source>
          <target state="translated">없이 <bpt id="p1">**</bpt>Invoke-expression<ept id="p1">**</ept>, 명령줄에서 제출 하는 문자열 (표시) 반환 됩니다 변경 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>EXAMPLES</source>
          <target state="translated">예제</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Example 1: Evaluate an expression</source>
          <target state="translated">예제 1: 식 계산</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>This example demonstrates the use of <bpt id="p1">**</bpt>Invoke-Expression<ept id="p1">**</ept> to evaluate an expression.</source>
          <target state="translated">이 예제에서는 <bpt id="p1">**</bpt>Invoke-expression<ept id="p1">**</ept> 식을 계산 하려면.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Without <bpt id="p1">**</bpt>Invoke-Expression<ept id="p1">**</ept>, the expression is printed, but not evaluated.</source>
          <target state="translated">없이 <bpt id="p1">**</bpt>Invoke-expression<ept id="p1">**</ept>, 식은 인쇄만 되 고 평가 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>The first command assigns a value of Get-Process (a string) to the $Command variable.</source>
          <target state="translated">첫 번째 명령은 Get-process (문자열)의 값은 $Command 변수에 할당합니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>The second command shows the effect of typing the variable name at the command line.</source>
          <target state="translated">두 번째 명령은 명령줄에 변수 이름을 입력하는 경우의 효과를 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Windows PowerShell echoes the string.</source>
          <target state="translated">이렇게 하면 문자열이 표시됩니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>The third command uses <bpt id="p1">**</bpt>Invoke-Expression<ept id="p1">**</ept> to evaluate the string.</source>
          <target state="translated">세 번째 명령은 <bpt id="p1">**</bpt>Invoke-expression<ept id="p1">**</ept> 여 문자열을 계산 합니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Example 2: Run a script on the local computer</source>
          <target state="translated">예제 2: 로컬 컴퓨터에서 스크립트를 실행합니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>These commands use <bpt id="p1">**</bpt>Invoke-Expression<ept id="p1">**</ept> to run a script, TestScript.ps1, on the local computer.</source>
          <target state="translated">이러한 명령을 사용 하 여 <bpt id="p1">**</bpt>Invoke-expression<ept id="p1">**</ept> 로컬 컴퓨터에서 TestScript.ps1 스크립트를 실행 합니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>The two commands are equivalent.</source>
          <target state="translated">두 명령은 서로 동일합니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>The first uses the <bpt id="p1">*</bpt>Command<ept id="p1">*</ept> parameter to specify the command to run.</source>
          <target state="translated">사용 하는 첫 번째는 <bpt id="p1">*</bpt>명령<ept id="p1">*</ept> 매개 변수를 실행할 명령을 지정 합니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>The second uses a pipeline operator (|) to send the command string to <bpt id="p1">**</bpt>Invoke-Expression<ept id="p1">**</ept>.</source>
          <target state="translated">두 번째를 사용 하 여 파이프라인 연산자 (|) 명령 문자열을 보내는 <bpt id="p1">**</bpt>Invoke-expression<ept id="p1">**</ept>합니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Example 3: Run a command in a variable</source>
          <target state="translated">변수에 명령을 실행 하는 예제 3:</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>This example runs a command string that is saved in the $Command variable.</source>
          <target state="translated">이 예제에서는 $Command 변수에 저장되는 명령 문자열을 실행합니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>The command string is enclosed in single quotation marks because it includes a variable, $<bpt id="p1">_</bpt>, which represents the current object. If it were enclosed in double quotation marks, the $<ept id="p1">_</ept> variable would be replaced by its value before it was saved in the $Command variable.</source>
          <target state="translated">변수를 $를 포함 하기 때문에 명령 문자열 단일 따옴표 안에<bpt id="p1">_</bpt>, 을 현재 개체를 나타냅니다. 이중 인용 부호로 $ 묶을 경우<ept id="p1">_</ept> $Command 변수에 저장 되기 전에 변수 값으로 대체 됩니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Example 4: Get and run a cmdlet Help example</source>
          <target state="translated">예 4: 가져오고 cmdlet 도움말 예제 실행</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>This command retrieves and runs the first example in the Get-EventLog cmdlet Help topic.</source>
          <target state="translated">이 명령은 검색 하 고 Get-eventlog cmdlet 도움말 항목의 첫 번째 예제를 실행 합니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>To run an example of a different cmdlet, change the value of the $Cmdlet_name variable to the name of the cmdlet.</source>
          <target state="translated">다른 cmdlet의 예를 실행 하려면 $Cmdlet_name 변수 값을 cmdlet의 이름으로 변경 합니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>And, change the $Example_number variable to the example number you want to run.</source>
          <target state="translated">실행 하려면 예제 번호 $Example_number 변수를 변경 합니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>The command will fail if the example number is not valid.</source>
          <target state="translated">예 번호가 잘못된 경우 명령이 실패합니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>PARAMETERS</source>
          <target state="translated">매개 변수</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>-Command</source>
          <target state="translated">-Command</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Specifies the command or expression to run.</source>
          <target state="translated">실행할 명령 또는 식을 지정합니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Type the command or expression or enter a variable that contains the command or expression.</source>
          <target state="translated">명령 또는 식을 입력하거나 명령 또는 식이 포함된 변수를 입력합니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">*</bpt>Command<ept id="p1">*</ept> parameter is required.</source>
          <target state="translated"> <bpt id="p1">*</bpt>명령<ept id="p1">*</ept> 매개 변수는 필수입니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>CommonParameters</source>
          <target state="translated">CommonParameters</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutVariable, -OutBuffer, -PipelineVariable, -Verbose, -WarningAction, and -WarningVariable.</source>
          <target state="translated">이 cmdlet은 공통 매개 변수:-디버그,-ErrorAction,-ErrorVariable,-InformationAction,-InformationVariable,-OutVariable,-OutBuffer,-PipelineVariable,-Verbose,-WarningAction 및-warningvariable을 지원 합니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>For more information, see about_CommonParameters (http://go.microsoft.com/fwlink/?LinkID=113216).</source>
          <target state="translated">자세한 내용은 about_CommonParameters (http://go.microsoft.com/fwlink/?LinkID=113216)를 참조 합니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>INPUTS</source>
          <target state="translated">입력</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>System.String or PSObject</source>
          <target state="translated">System.String 또는 PSObject</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>You can pipe an object that represents the command to <bpt id="p1">**</bpt>Invoke-Expression<ept id="p1">**</ept>.</source>
          <target state="translated">명령을 나타내는 개체를 파이프할 수 <bpt id="p1">**</bpt>Invoke-expression<ept id="p1">**</ept>합니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Use the $Input automatic variable to represent the input objects in the command.</source>
          <target state="translated">$Input 자동 변수를 사용 하 여 명령에서 입력된 개체를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>OUTPUTS</source>
          <target state="translated">출력</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>PSObject</source>
          <target state="translated">PSObject</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Returns the output that is generated by the invoked command (the value of the <bpt id="p1">*</bpt>Command<ept id="p1">*</ept> parameter).</source>
          <target state="translated">호출된 된 명령을 통해 생성 되는 출력을 반환 합니다 (의 값은 <bpt id="p1">*</bpt>명령<ept id="p1">*</ept> 매개 변수).</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>NOTES</source>
          <target state="translated">참고 사항</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>An expression is a statement that can be evaluated and produces a result, such as a Windows PowerShell command.</source>
          <target state="translated">식은 계산 될 수 하 고 Windows PowerShell 명령 등의 결과 생성 하는 문입니다.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Take reasonable precautions when using the <bpt id="p1">**</bpt>Invoke-Expression<ept id="p1">**</ept> cmdlet in scripts.</source>
          <target state="translated">사용 하는 경우 적절 한 예방 조치는 <bpt id="p1">**</bpt>Invoke-expression<ept id="p1">**</ept> 스크립트에는 cmdlet입니다.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>When using <bpt id="p1">**</bpt>Invoke-Expression<ept id="p1">**</ept> to run a command that the user enters, verify that the command is safe to run before running it.</source>
          <target state="translated">사용 하는 경우 <bpt id="p1">**</bpt>Invoke-expression<ept id="p1">**</ept> 사용자가 입력 하는 명령을 실행 하려면 명령을 실행 하기 전에 실행 하기에 안전한 지를 확인 합니다.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>In general, it is best to design your script with predefined input options, rather than allowing freeform input.</source>
          <target state="translated">일반적으로는 자유 형태 입력을 허용하는 것보다 미리 정의된 입력 옵션을 사용하여 스크립트를 디자인하는 것이 가장 좋습니다.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>RELATED LINKS</source>
          <target state="translated">관련된 링크</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Invoke-Command</source>
          <target state="translated">Invoke-Command</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Where-Object</source>
          <target state="translated">Where-Object</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>