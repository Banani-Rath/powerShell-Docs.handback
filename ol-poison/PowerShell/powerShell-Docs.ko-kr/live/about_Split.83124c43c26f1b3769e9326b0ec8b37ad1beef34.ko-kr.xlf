<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ko-kr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-1c394fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">9d30cc68076844c95172cd17cee919f17415caa1</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">reference\4.0\Microsoft.PowerShell.Core\About\about_Split.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions" />
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">4e24da57e65b4f3ac1b9caff01d863000cf3ce59</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fba4bd3a743b20011d38d7384e1b1d6701f571a6</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>about_Split</source>
          <target state="translated">about_Split</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>powershell, cmdlet</source>
          <target state="translated">powershell cmdlet</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>About Split</source>
          <target state="translated">분할에 대 한</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>about_Split</source>
          <target state="translated">about_Split</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>about_Split</source>
          <target state="translated">about_Split</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>SHORT DESCRIPTION</source>
          <target state="translated">간단한 설명</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Explains how to use the Split operator to split one or more strings into substrings.</source>
          <target state="translated">하나 이상의 문자열로 문자열을 부분 문자열로 분할 하는 분할 연산자를 사용 하는 방법에 설명 합니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>LONG DESCRIPTION</source>
          <target state="translated">자세한 설명</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>The Split operator splits one or more strings into substrings.</source>
          <target state="translated">분할 연산자는 하나 이상의 문자열 문자열을 부분 문자열로 분할합니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>You can change the following elements of the Split operation:</source>
          <target state="translated">분할 작업의 다음 요소를 변경할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>-- Delimiter.</source>
          <target state="translated">-구분 기호입니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>The default is whitespace, but you can specify characters, strings, patterns, or script blocks that specify the delimiter.</source>
          <target state="translated">기본값은 공백, 하지만 문자, 문자열, 패턴 또는 구분 기호를 지정 하는 스크립트 블록을 지정할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>The Split operator in Windows PowerShell uses a regular expression in the delimiter, rather than a simple character.</source>
          <target state="translated">Windows PowerShell에서 나누기 연산자는 간단한 문자 대신 구분 기호에 정규식을 사용 합니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>-- Maximum number of substrings.</source>
          <target state="translated">-부분 문자열의 최대 수입니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>The default is to return all substrings.</source>
          <target state="translated">기본값은 모든 부분 문자열을 반환 합니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>If you specify a number less than the number of substrings, the remaining substrings are concatenated in the last substring.</source>
          <target state="translated">수의 부분 문자열 보다 작은 숫자를 지정 하면 나머지 부분 문자열이 마지막 부분 문자열에 연결 됩니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>-- Options that specify the conditions under which the delimiter is matched, such as SimpleMatch and Multiline.</source>
          <target state="translated">-는 구분 기호와 일치 하면 SimpleMatch 등 여러 줄로 된 조건을 지정 하는 옵션입니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>SYNTAX</source>
          <target state="translated">구문</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>The following diagram shows the syntax for the -split operator.</source>
          <target state="translated">다음 다이어그램에서는 구문을-분할 연산자에 대 한 합니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>The parameter names do not appear in the command.</source>
          <target state="translated">명령에 매개 변수 이름이 표시 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Include only the parameter values.</source>
          <target state="translated">매개 변수 값만 포함 됩니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>The values must appear in the order specified in the syntax diagram.</source>
          <target state="translated">값이 구문 다이어그램에 지정 된 순서로 나타나야 합니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>-Split</source>
          <target state="translated">-분할</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>-Split <ph id="ph1">&lt;Delimiter&gt;</ph>[,&lt;Max-substrings&gt;[,"<ph id="ph2">&lt;Options&gt;</ph>"]]</source>
          <target state="translated">-분할 <ph id="ph1">&lt;Delimiter&gt;</ph>[, &lt; 최대 부분 문자열 &gt; [,"<ph id="ph2">&lt;Options&gt;</ph>"]]</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>-Split {<ph id="ph1">&lt;ScriptBlock&gt;</ph>} [,&lt;Max-substrings&gt;]</source>
          <target state="translated">-분할 {<ph id="ph1">&lt;ScriptBlock&gt;</ph>} [, &lt; 최대 부분 문자열 &gt;]</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>You can substitute -iSplit or -cSplit for -split in any binary Split statement (a Split statement that includes a delimiter or script block).</source>
          <target state="translated">이진 분할 문 (구분 기호 또는 스크립트 블록을 포함 하는 분할 문)으로 분할-iSplit 또는--cSplit 대체할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>The -iSplit and -split operators are case-insensitive.</source>
          <target state="translated">-ISplit 및-분할 연산자 대/소문자를 구분 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>The -cSplit operator is case-sensitive, meaning that case is considered when the delimiter rules are applied.</source>
          <target state="translated">-CSplit 연산자가 대/소문자 구분, 대/소문자 구분 규칙이 적용 되는 경우 고려 되지 않음을 의미 합니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>PARAMETERS</source>
          <target state="translated">매개 변수</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Specifies one or more strings to be split.</source>
          <target state="translated">분할 하려면 하나 이상의 문자열을 지정 합니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>If you submit multiple strings, all the strings are split using the same delimiter rules.</source>
          <target state="translated">여러 문자열을 제출 하는 경우 동일한 구분 기호 규칙을 사용 하는 모든 문자열 분할 됩니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Example:</source>
          <target state="translated">예:</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>-split "red yellow blue green" red yellow blue green</source>
          <target state="translated">-"빨간색 노란색 blue 녹색" 분할 빨간색 노란색 청록색</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>The characters that identify the end of a substring.</source>
          <target state="translated">부분 문자열의 끝을 식별 하는 문자입니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>The default delimiter is whitespace, including spaces and non-printable characters, such as newline (<ph id="ph1">`n) and tab (`</ph>t).</source>
          <target state="translated">기본 구분 기호는 공백, 공백 및 줄 바꿈 같은 인쇄할 수 없는 문자를 포함 하 여 (<ph id="ph1">`n) and tab (`</ph>t).</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>When the strings are split, the delimiter is omitted from all the substrings.</source>
          <target state="translated">문자열을 분할 하 고, 모든 부분 문자열에서 구분 기호 생략 됩니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Example:</source>
          <target state="translated">예:</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>"Lastname:FirstName:Address" -split ":" Lastname FirstName Address</source>
          <target state="translated">"Lastname:FirstName:Address"-분할 ":" Lastname FirstName 주소</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>By default, the delimiter is omitted from the results.</source>
          <target state="translated">기본적으로 결과에서 구분 기호는 생략 됩니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>To preserve all or part of the delimiter, enclose in parentheses the part that you want to preserve.</source>
          <target state="translated">구분 기호로의 전체 또는 일부를 유지 하려면 유지 하려는 부분을 괄호로 묶습니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>If the &lt;Max-substrings&gt; parameter is added, this takes precedence when your command splits up the collection.</source>
          <target state="translated">&lt; 최대 부분 문자열 &gt; 매개 변수를 추가 하는 경우이 될 때 우선 컬렉션을 분할 하는 명령입니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>If you opt to include a delimiter as part of the output, the command returns the delimiter as part of the output; however, splitting the string to return the delimiter as part of output does not count as a split.</source>
          <target state="translated">명령 출력의 일부로 구분 기호를 반환 출력의 일부로 구분 기호를 포함 하려는 경우 그러나 출력의 일부로 구분 기호를 반환 하는 문자열을 분할로 분할을 계산 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>.Examples:</source>
          <target state="translated">. 예제:</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>"Lastname:FirstName:Address" -split "(:)" Lastname</source>
          <target state="translated">"Lastname:FirstName:Address"-"(:)"를 분할 합니다. Lastname</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>:</source>
          <target state="translated">:</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>FirstName</source>
          <target state="translated">FirstName</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>:</source>
          <target state="translated">:</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Address</source>
          <target state="translated">주소</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>"Lastname/:/FirstName/:/Address" -split "/(:)/" Lastname</source>
          <target state="translated">"Lastname /: / FirstName /: 주소"-분할 "/ (:) /" Lastname</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>:</source>
          <target state="translated">:</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>FirstName</source>
          <target state="translated">FirstName</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>:</source>
          <target state="translated">:</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Address</source>
          <target state="translated">주소</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>In the following example, &lt;Max-substrings&gt; is set to 3.</source>
          <target state="translated">다음 예제에서는 &lt; 최대 부분 문자열 &gt;에서 3으로 설정 합니다.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>This results in three splits of the string values, but a total of five strings in the resulting output; the delimiter is included after the splits, until the maximum of three substrings is reached.</source>
          <target state="translated">이 인해 문자열 값의 세 가지 분할 하지만 결과 출력;에 5 개 문자열의 전체 구분 기호는 세 개의 부분 문자열로 이루어진 최대값에 도달할 때까지 분할 후 포함 합니다.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>Additional delimiters in the final substring become part of the substring.</source>
          <target state="translated">추가 구분 기호는 마지막 부분 문자열의 부분 문자열의 일부가 됩니다.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>'Chocolate-Vanilla-Strawberry-Blueberry' -split '(-)', 3;</source>
          <target state="translated">' 초콜릿-바닐라-딸기-Blueberry'-'(-)' 분할 3;</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Chocolate</source>
          <target state="translated">초콜릿</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>Vanilla</source>
          <target state="translated">바닐라</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>Strawberry-Blueberry</source>
          <target state="translated">딸기 Blueberry</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>&lt;Max-substrings&gt; Specifies the maximum number of times that a string is split.</source>
          <target state="translated">&lt; 최대 부분 문자열 &gt;는 문자열을 분할 하는 최대 횟수를 지정 합니다.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>The default is all the substrings split by the delimiter.</source>
          <target state="translated">기본값은 모든 부분 문자열 구분 기호를 기준으로 분할 합니다.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>If there are more substrings, they are concatenated to the final substring.</source>
          <target state="translated">더 많은 부분 문자열의 경우 마지막 부분 문자열에 연결 합니다.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>If there are fewer substrings, all the substrings are returned.</source>
          <target state="translated">더 적은 수의 부분 문자열의 경우 모든 부분 문자열이 반환 됩니다.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>A value of 0 and negative values return all the substrings.</source>
          <target state="translated">0 값을 음수 값의 모든 부분 문자열을 반환합니다.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>Max-substrings does not specify the maximum number of objects that are returned; its value equals the maximum number of times that a string is split.</source>
          <target state="translated">최대 문자열; 반환 되는 개체의 최대 수를 지정 하지 않습니다. 해당 값에는 문자열을 분할 하는 최대 횟수를 같습니다.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>If you submit more than one string (an array of strings) to the Split operator , the Max-substrings limit is applied to each string separately.</source>
          <target state="translated">분할 연산자를 둘 이상의 문자열 (문자열의 배열)을 제출 하는 경우 최대 부분 문자열도 개별적으로 각 문자열에 적용 됩니다.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>Example:</source>
          <target state="translated">예:</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>$c = "Mercury,Venus,Earth,Mars,Jupiter,Saturn,Uranus,Neptune" $c -split ",", 5 Mercury Venus Earth Mars Jupiter,Saturn,Uranus,Neptune</source>
          <target state="translated">$c = "Mercury, 금성, 지구, Mars, 목성, 토성, 천왕성, 해왕성" $c-분할 ",", 5 Mercury 목성, 토성, 천왕성, 해왕성 금성 지구 한층 다가가기</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>An expression that specifies rules for applying the delimiter.</source>
          <target state="translated">구분 기호를 적용 하기 위한 규칙을 지정 하는 식입니다.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>The expression must evaluate to $true or $false.</source>
          <target state="translated">$True 또는 $false 식은 되어야 합니다.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>Enclose the script block in braces.</source>
          <target state="translated">스크립트 블록을 중괄호로 묶습니다.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>Example:</source>
          <target state="translated">예:</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>$c = "Mercury,Venus,Earth,Mars,Jupiter,Saturn,Uranus,Neptune" $c -split {$-eq "e" -or $-eq "p"}</source>
          <target state="translated">$c = "Mercury, 금성, 지구, Mars, 목성, 토성, 천왕성, 해왕성" $c-분할 {$-eq "e"-또는 $-eq "p"}</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>M</source>
          <target state="translated">M</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>rcury,V nus,Earth,Mars,Ju it r,Saturn,Uranus,N</source>
          <target state="translated">rcury, V 누 지구, Mars, Ju 것 r, 토성, 천왕성, N</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>tun</source>
          <target state="translated">사용 하 여</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>Enclose the option name in quotation marks.</source>
          <target state="translated">옵션 이름을 따옴표로 묶습니다.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>Options are valid only when the &lt;Max-substrings&gt; parameter is used in the statement.</source>
          <target state="translated">옵션은 &lt; 최대 부분 문자열 &gt; 매개 변수 문에 사용 되는 경우에 유효 합니다.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>The syntax for the Options parameter is:</source>
          <target state="translated">Options 매개 변수 구문은 다음과 같습니다.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>"SimpleMatch [,IgnoreCase]"</source>
          <target state="translated">"SimpleMatch [, IgnoreCase]"</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>"[RegexMatch] [,IgnoreCase] [,CultureInvariant] [,IgnorePatternWhitespace] [,ExplicitCapture] [,Singleline | ,Multiline]"</source>
          <target state="translated">"[RegexMatch] [, IgnoreCase] [, CultureInvariant] [, IgnorePatternWhitespace] [, ExplicitCapture] [, 한 줄 | 여러 줄,]"</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>The SimpleMatch options are:</source>
          <target state="translated">SimpleMatch 옵션이 있습니다.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>-- SimpleMatch: Use simple string comparison when evaluating the delimiter.</source>
          <target state="translated">-SimpleMatch: 구분 기호를 평가할 때 간단한 문자열 비교를 사용 합니다.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>Cannot be used with RegexMatch.</source>
          <target state="translated">RegexMatch 함께 사용할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>-- IgnoreCase: Forces case-insensitive matching, even if the -cSplit operator is specified.</source>
          <target state="translated">-IgnoreCase: 강제로 대/소문자 구분 일치,-cSplit 연산자가 지정 하는 경우에 있습니다.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>The RegexMatch options are:</source>
          <target state="translated">RegexMatch 옵션이 있습니다.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>-- RegexMatch: Use regular expression matching to evaluate the delimiter.</source>
          <target state="translated">-RegexMatch: 구분 기호를 평가 하는 일치 하는 정규식을 사용 합니다.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>This is the default behavior.</source>
          <target state="translated">이것이 기본 동작입니다.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>Cannot be used with SimpleMatch.</source>
          <target state="translated">SimpleMatch 함께 사용할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>-- IgnoreCase: Forces case-insensitive matching, even if the -cSplit operator is specified.</source>
          <target state="translated">-IgnoreCase: 강제로 대/소문자 구분 일치,-cSplit 연산자가 지정 하는 경우에 있습니다.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>-- CultureInvariant: Ignores cultural differences in language when evaluting the delimiter.</source>
          <target state="translated">-CultureInvariant: 언어의 문화적 차이 무시 하면 evaluting 구분 기호입니다.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>Valid only with RegexMatch.</source>
          <target state="translated">RegexMatch에만 유효 합니다.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>-- IgnorePatternWhitespace: Ignores unescaped whitespace and comments marked with the number sign (#).</source>
          <target state="translated">-IgnorePatternWhitespace: 이스케이프 되지 않은 공백, 숫자 기호 표시 된 주석을 무시 (#).</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>Valid only with RegexMatch.</source>
          <target state="translated">RegexMatch에만 유효 합니다.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>-- Multiline: Multiline mode recognizes the start and end of lines and strings.</source>
          <target state="translated">-여러 줄: 시작 및 끝 줄 및 문자열의 여러 줄 모드를 인식 합니다.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>Valid only with RegexMatch.</source>
          <target state="translated">RegexMatch에만 유효 합니다.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>Singleline is the default.</source>
          <target state="translated">한 줄에는 기본값입니다.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>-- Singleline: Singleline mode recognizes only the start and end of strings.</source>
          <target state="translated">-한 줄: 한 줄 모드에서 시작 및 문자열의 끝을 인식 합니다.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>Valid only with RegexMatch.</source>
          <target state="translated">RegexMatch에만 유효 합니다.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>Singleline is the default.</source>
          <target state="translated">한 줄에는 기본값입니다.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>-- ExplicitCapture: Ignores non-named match groups so that only explicit capture groups are returned in the result list.</source>
          <target state="translated">-ExplicitCapture: 결과 목록에만 명시적 캡처 그룹이 반환 되도록 일치 명명 되지 않은 그룹을 무시 합니다.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>Valid only with RegexMatch.</source>
          <target state="translated">RegexMatch에만 유효 합니다.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>UNARY and BINARY SPLIT OPERATORS</source>
          <target state="translated">단항 및 이항 분할 연산자</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>The unary split operator (-split <ph id="ph1">&lt;string&gt;</ph>) has higher precedence than a comma.</source>
          <target state="translated">단항 연산자를 분할 (-분할 <ph id="ph1">&lt;string&gt;</ph>) 쉼표 보다 우선 순위가 높습니다.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>As a result, if you submit a comma-separated list of strings to the unary split operator, only the first string (before the first comma) is split.</source>
          <target state="translated">결과적으로, 단항 연산자를 분할 하는 문자열의 쉼표로 구분 된 목록이 제출 하면 첫 번째 쉼표) (전 첫 번째 문자열에만 분할 됩니다.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>To split more than one string, use the binary split operator (<ph id="ph1">&lt;string&gt;</ph> -split <ph id="ph2">&lt;delimiter&gt;</ph>).</source>
          <target state="translated">둘 이상의 문자열을 분할 하는 이진 분할 연산자를 사용 하 여 (<ph id="ph1">&lt;string&gt;</ph> -분할 <ph id="ph2">&lt;delimiter&gt;</ph>).</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>Enclose all the strings in parentheses, or store the strings in a variable, and then submit the variable to the split operator.</source>
          <target state="translated">모든 문자열이 괄호로 하 또는 문자열을 변수에 저장 한 다음 변수 분할 연산자를를 제출 합니다.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>Consider the following example:</source>
          <target state="translated">다음 예제를 살펴보세요.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>-split "1 2", "a b"</source>
          <target state="translated">-분할 "1 2", "b"</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>1</source>
          <target state="translated">1</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>2</source>
          <target state="translated">2</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>a b</source>
          <target state="translated">b</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>"1 2", "a b" -split " "</source>
          <target state="translated">"1 2", "b"-a 분할 ""</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>1</source>
          <target state="translated">1</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>2</source>
          <target state="translated">2</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>a b</source>
          <target state="translated">b</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>-split ("1 2", "a b")</source>
          <target state="translated">-분할 ("1 2", "b")</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>1</source>
          <target state="translated">1</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>2</source>
          <target state="translated">2</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>a b</source>
          <target state="translated">b</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>$a = "1 2", "a b" -split $a</source>
          <target state="translated">$a = "1 2", "b"-a $분할는</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>1</source>
          <target state="translated">1</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>2</source>
          <target state="translated">2</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>a b</source>
          <target state="translated">b</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>EXAMPLES</source>
          <target state="translated">예제</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>The following statement splits the string at whitespace.</source>
          <target state="translated">다음 문은 공백에서 문자열을 분할 합니다.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>C:\PS&gt; -split "Windows PowerShell 2.0`nWindows PowerShell with remoting"</source>
          <target state="translated">C:\PS &gt;-"Windows PowerShell 2.0' 통신 PowerShell remoting과 함께" 분할</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>Windows PowerShell</source>
          <target state="translated">Windows PowerShell</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>2.0</source>
          <target state="translated">2.0</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>Windows PowerShell with remoting</source>
          <target state="translated">Windows PowerShell 원격 기능 사용</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>The following statement splits the string at any comma.</source>
          <target state="translated">다음 문은 모든 쉼표에서 문자열을 분할 합니다.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>C:\PS&gt; "Mercury,Venus,Earth,Mars,Jupiter,Saturn,Uranus,Neptune" -split ','</source>
          <target state="translated">C:\PS &gt; "Mercury, 금성, 지구, Mars, 목성, 토성, 천왕성, 해왕성"-분할 ','</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>Mercury Venus Earth Mars Jupiter Saturn Uranus Neptune</source>
          <target state="translated">Mercury 금성 지구 Mar 목성 토성 천왕성 해왕성</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>The following statement splits the string at the pattern "er".</source>
          <target state="translated">다음 문은 분할 패턴에서 문자열 "어"입니다.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>C:\PS&gt;"Mercury,Venus,Earth,Mars,Jupiter,Saturn,Uranus,Neptune" -split 'er'</source>
          <target state="translated">C:\PS &gt; "Mercury, 금성, 지구, Mars, 목성, 토성, 천왕성, 해왕성"-빈 칸 분할 '</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>M</source>
          <target state="translated">M</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>cury,Venus,Earth,Mars,Jupit ,Saturn,Uranus,Neptune</source>
          <target state="translated">cury, 금성, 지구, Mars, Jupit, 토성, 천왕성, 해왕성</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>The following statement performs a case-sensitive split at the letter "N".</source>
          <target state="translated">다음 문은 분할 된 한 대/소문자 구분 문자 "N"을 수행합니다.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>C:\PS&gt; "Mercury,Venus,Earth,Mars,Jupiter,Saturn,Uranus,Neptune" -cSplit 'N'</source>
          <target state="translated">C:\PS &gt; "Mercury, 금성, 지구, Mars, 목성, 토성, 천왕성, 해왕성"-cSplit ' n '</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>Mercury,Venus,Earth,Mars,Jupiter,Saturn,Uranus, eptune</source>
          <target state="translated">Mercury, 금성, 지구, Mars, 목성, 토성, 천왕성, eptune</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source>The following statement splits the string at "e" and "t".</source>
          <target state="translated">다음 문은 "e" 및 "t"에서 문자열을 분할 합니다.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source>C:\PS&gt; "Mercury,Venus,Earth,Mars,Jupiter,Saturn,Uranus,Neptune" -split '[et]'</source>
          <target state="translated">C:\PS &gt; "Mercury, 금성, 지구, Mars, 목성, 토성, 천왕성, 해왕성"-분할 [et]</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source>M</source>
          <target state="translated">M</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source>rcury,V nus, ar h,Mars,Jupi</source>
          <target state="translated">rcury, V 누를, ar h, Mars, Jupi</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source>r,Sa urn,Uranus,N p un</source>
          <target state="translated">r, Sa urn 천왕성, N p 취소</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source>The following statement splits the string at "e" and "r", but limits the resulting substrings to six substrings.</source>
          <target state="translated">다음 문은 "e" 및 "r"에서 문자열을 분할 하기 쉽지만 6 개의 부분 문자열에 부분 문자열 결과.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve">
          <source>C:\PS&gt; "Mercury,Venus,Earth,Mars,Jupiter,Saturn,Uranus,Neptune" -split '[er]', 6</source>
          <target state="translated">C:\PS &gt; "Mercury, 금성, 지구, Mars, 목성, 토성, 천왕성, 해왕성"-분할 '[어]', 6</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source>M</source>
          <target state="translated">M</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source>cu y,V nus, arth,Mars,Jupiter,Saturn,Uranus,Neptune</source>
          <target state="translated">cu y, V 누를, arth, Mars, 목성, 토성, 천왕성, 해왕성</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source>The following statement splits a string into three substrings.</source>
          <target state="translated">다음 문은 3 개의 문자열을 부분 문자열로 문자열을 분할합니다.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve">
          <source>C:\PS&gt; "a,b,c,d,e,f,g,h" -split ",", 3</source>
          <target state="translated">C:\PS &gt; "a, b, c, d, e, f, g, h"-분할 ",", 3</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve">
          <source>a b c,d,e,f,g,h</source>
          <target state="translated">b c, d, e, f, g, h</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve">
          <source>The following statement splits two strings into three substrings.</source>
          <target state="translated">다음 문을 두 문자열을 세 개의 문자열을 부분 문자열로 분할합니다.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve">
          <source>(The limit is applied to each string independently.)</source>
          <target state="translated">(도 각 문자열에 독립적으로 적용 합니다.)</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve">
          <source>C:\PS&gt; "a,b,c,d", "e,f,g,h" -split ",", 3</source>
          <target state="translated">C:\PS &gt; "a, b, c, d", "e, f, g, h"-분할 ",", 3</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve">
          <source>a b c,d e f g,h</source>
          <target state="translated">b c, d e f g, h</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve">
          <source>The following statement splits each line in the here-string at the first digit.</source>
          <target state="translated">다음 문은 첫 번째 숫자에서 여기 문자열의 각 줄을 분할합니다.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve">
          <source>It uses the Multiline option to recognize the beginning of each line and string.</source>
          <target state="translated">각 줄 및 문자열의 시작 부분을 인식 하도록 여러 줄 옵션을 사용 합니다.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve">
          <source>The 0 represents the "return all" value of the Max-substrings parameter.</source>
          <target state="translated">0 최대 부분 문자열 매개 변수 "모두 반환" 값을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve">
          <source>You can use options, such as Multiline, only when the Max-substrings value is specified.</source>
          <target state="translated">최대 부분 문자열 값을 지정 하는 경우에 여러 행을 같은 옵션을 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve">
          <source>C:\PS&gt; $a = @' 1The first line.</source>
          <target state="translated">C:\PS &gt; $는 = @' 1The 첫 번째 줄.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve">
          <source>2The second line.</source>
          <target state="translated">2The 두 번째 줄입니다.</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve">
          <source>3The third of three lines.</source>
          <target state="translated">3The 세 줄의 세 번째입니다.</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve">
          <source>'@</source>
          <target state="translated">'@</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve">
          <source>C:\PS&gt; $a -split "^\d", 0, "multiline"</source>
          <target state="translated">C:\PS &gt; $a-분할 "^ \d", 0, "여러 줄"</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve">
          <source>The first line.</source>
          <target state="translated">첫 번째 줄입니다.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve">
          <source>The second line.</source>
          <target state="translated">두 번째 줄입니다.</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve">
          <source>The third of three lines.</source>
          <target state="translated">세 줄의 세 번째입니다.</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve">
          <source>The following statement uses the SimpleMatch option to direct the -split operator to interpret the dot (.) delimiter literally.</source>
          <target state="translated">다음 문을 사용 하 여 SimpleMatch 옵션-분할 연산자 점 (.) 구분 기호를 문자 그대로 해석 합니다.</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve">
          <source>With the default, RegexMatch, the dot enclosed in quotation marks (".") is interpreted to match any character except for a newline character.</source>
          <target state="translated">따옴표로 묶인 점 RegexMatch, 기본값 (".")는 줄 바꿈 문자를 제외 하 고 임의의 문자와 일치 하도록 해석 됩니다.</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve">
          <source>As a result, the Split statement returns a blank line for every character except newline.</source>
          <target state="translated">결과적으로, Split 문은 새 행을 제외한 모든 문자에 대해 빈 줄을 반환합니다.</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve">
          <source>The 0 represents the "return all" value of the Max-substrings parameter.</source>
          <target state="translated">0 최대 부분 문자열 매개 변수 "모두 반환" 값을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve">
          <source>You can use options, such as SimpleMatch, only when the Max-substrings value is specified.</source>
          <target state="translated">최대 부분 문자열 값을 지정 하는 경우에 SimpleMatch, 등의 옵션을 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve">
          <source>C:\PS&gt; "This.is.a.test" -split ".", 0, "simplematch"</source>
          <target state="translated">C:\PS &gt; "This.is.a.test"-분할 ".", 0, "simplematch"</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve">
          <source>This is a test</source>
          <target state="translated">테스트입니다.</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve">
          <source>The following statement splits the string at one of two delimiters, depending on the value of a variable.</source>
          <target state="translated">다음 문은 변수의 값에 따라 두 개의 구분 기호 중 하나에서 문자열을 분할 합니다.</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve">
          <source>C:\PS&gt; $i = 1 C:\PS&gt; $c = "LastName, FirstName; Address, City, State, Zip" C:\PS&gt; $c -split {if ($i -lt 1) {$-eq ","} else {$-eq ";"}}</source>
          <target state="translated">&gt; $I C:\PS 1 C:\PS &gt; $c = = "성, 이름입니다. 주소, City, State, Zip"&gt; $c C:\PS-분할 {경우 (1 $i-lt) {$-eq","} else {$-eq";"}}</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve">
          <source>LastName, FirstName Address, City, State, Zip</source>
          <target state="translated">LastName, FirstName 주소, 도시, 상태, 우편 번호</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve">
          <source>The following split statements split an XML file first at the angle bracket and then at the semicolon.</source>
          <target state="translated">다음 문은 분할 꺾쇠 괄호에 먼저 한 다음 세미콜론 XML 파일을 분할 합니다.</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve">
          <source>The result is a readable version of the XML file.</source>
          <target state="translated">결과 XML 파일의 읽을 수 있는 버전입니다.</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve">
          <source>C:\PS&gt; get-process PowerShell | export-clixml ps.xml C:\PS&gt; $x = import-clixml ps.xml C:\PS&gt; $x = $x -split "&lt;" C:\PS&gt; $x = $x -split ";"</source>
          <target state="translated">C:\PS &gt; 가져오기 프로세스 PowerShell | 내보내기 clixml ps.xml C:\PS &gt; $x 가져오기 clixml ps.xml C:\PS &gt; $x = $x =-분할 "&lt;" &gt; $x C:\PS $x =-분할 ";"</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve">
          <source>To display the result, type "$x".</source>
          <target state="translated">결과 표시 하려면 "$x"를 입력 합니다.</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve">
          <source>C:\PS&gt; $x</source>
          <target state="translated">&gt; $X C:\PS</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve">
          <source>@{__NounName=Process Name=PowerShell Handles=428</source>
          <target state="translated">@{__NounName 프로세스 이름 = PowerShell 핸들 = 428 =</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve">
          <source>VM=150081536</source>
          <target state="translated">VM 150081536 =</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve">
          <source>WS=34840576</source>
          <target state="translated">WS 34840576 =</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve">
          <source>PM=36253696</source>
          <target state="translated">PM 36253696 =</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve">
          <source>...</source>
          <target state="translated">...</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve">
          <source>SEE ALSO</source>
          <target state="translated">참고 항목</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve">
          <source>Split-Path about_Operators about_Comparison_Operators about_Join</source>
          <target state="translated">Split-path about_Operators about_Comparison_Operators about_Join</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>