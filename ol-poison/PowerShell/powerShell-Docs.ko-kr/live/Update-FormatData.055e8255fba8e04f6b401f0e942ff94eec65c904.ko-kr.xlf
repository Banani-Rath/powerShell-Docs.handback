<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ko-kr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-1c394fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">eff40d7ded792249e8fb83372f54b18944f3aa9d</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">reference\3.0\Microsoft.PowerShell.Utility\Update-FormatData.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions" />
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">979dcb31885e5f9fda3da4b88f9c1c2daab443ec</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">168eb7b4391b5a0678517084303550464521d34e</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>powershell, cmdlet</source>
          <target state="translated">powershell cmdlet</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Update-FormatData</source>
          <target state="translated">Update-FormatData</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Update-FormatData</source>
          <target state="translated">Update-FormatData</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>SYNOPSIS</source>
          <target state="translated">요약</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Updates the formatting data in the current session.</source>
          <target state="translated">현재 세션에 있는 형식 지정 데이터를 업데이트합니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>SYNTAX</source>
          <target state="translated">구문</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>DESCRIPTION</source>
          <target state="translated">설명</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>The Update-FormatData cmdlet reloads the formatting data from formatting files into the current session.</source>
          <target state="translated">Update-FormatData cmdlet은 형식 지정 파일의 형식 지정 데이터를 현재 세션으로 다시 로드합니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>This cmdlet lets you update the formatting data without restarting Windows PowerShell.</source>
          <target state="translated">이 cmdlet을 사용하면 Windows PowerShell을 다시 시작하지 않고도 형식 지정 데이터를 업데이트할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Without parameters, Update-FormatData reloads the formatting files that it loaded previously.</source>
          <target state="translated">매개 변수를 지정하지 않으면 Update-FormatData는 이전에 로드한 형식 지정 파일을 다시 로드합니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>You can use the parameters of Update-FormatData to add new formatting files to the session.</source>
          <target state="translated">Update-FormatData의 매개 변수를 사용하여 세션에 새 형식 지정 파일을 추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Formatting files are text files in XML format with the format.ps1xml file name extension.</source>
          <target state="translated">형식 지정 파일은 파일 확장명이 format.ps1xml인 XML 형식의 텍스트 파일입니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>The formatting data in the files defines the display of Microsoft .NET Framework objects in the session.</source>
          <target state="translated">이 파일의 형식 지정 데이터는 세션에서 Microsoft .NET Framework 개체의 표시를 정의합니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>When Windows PowerShell starts, it loads the format data from the formatting files in the Windows PowerShell installation directory ($pshome) into the session.</source>
          <target state="translated">Windows PowerShell이 시작될 때 Windows PowerShell 설치 디렉터리($pshome)에 있는 형식 지정 파일의 형식 데이터가 세션으로 로드됩니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>You can use Update-FormatData to reload the formatting data into the current session without restarting Windows PowerShell.</source>
          <target state="translated">Update-FormatData를 사용하면 Windows PowerShell을 시작하지 않고도 형식 지정 데이터를 현재 세션으로 다시 로드할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>This is useful when you have added or changed a formatting file, but do not want to interrupt the session.</source>
          <target state="translated">이 방법은 형식 지정 파일을 추가하거나 변경했지만 세션을 중단하지 않으려는 경우에 유용합니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>For more information about formatting files in Windows PowerShell, see about_Format.ps1xml.</source>
          <target state="translated">Windows PowerShell의 형식 지정 파일에 대한 자세한 내용은 about_Format.ps1xml을 참조하세요.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>EXAMPLES</source>
          <target state="translated">예제</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>-------------------------- EXAMPLE 1 --------------------------</source>
          <target state="translated">-------------------------- 예제 1 --------------------------</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>This command reloads the formatting files that it loaded previously.</source>
          <target state="translated">이 명령은 이전에 로드한 형식 지정 파일을 다시 로드합니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>-------------------------- EXAMPLE 2 --------------------------</source>
          <target state="translated">-------------------------- EXAMPLE 2 --------------------------</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>This command reloads the formatting files into the session, including two new files, Trace.format.ps1xml and Log.format.ps1xml.</source>
          <target state="translated">이 명령은 두 개의 새 파일 Trace.format.ps1xml 및 Log.format.ps1xml을 비롯한 형식 지정 파일을 세션으로 다시 로드합니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Because the command uses the AppendPath parameter, the formatting data in the new files is loaded after the formatting data from the built-in files.</source>
          <target state="translated">이 명령은 AppendPath 매개 변수를 사용하므로 기본 제공 파일의 형식 지정 데이터 이후에 새 파일의 형식 지정 데이터가 로드됩니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>The AppendPath parameter is used because the new files contain formatting data for objects that are not referenced in the built-in files.</source>
          <target state="translated">새 파일에 기본 제공 파일에서 참조되지 않은 개체에 대한 형식 지정 데이터가 포함되어 있으므로 AppendPath 매개 변수를 사용합니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>-------------------------- EXAMPLE 3 --------------------------</source>
          <target state="translated">-------------------------- EXAMPLE 3 --------------------------</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>This example shows how to reload a formatting file after you have edited it.</source>
          <target state="translated">이 예제에서는 형식 지정 파일을 편집한 후 다시 로드하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>The first command adds the NewFiles.format.ps1xml file to the session.</source>
          <target state="translated">첫 번째 명령은 NewFiles.format.ps1xml 파일을 세션에 추가합니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>It uses the PrependPath parameter because the file contains formatting data for objects that are referenced in the built-in files.</source>
          <target state="translated">이 파일에는 기본 제공 파일에서 참조된 개체에 대한 형식 지정 데이터가 포함되어 있으므로 PrependPath 매개 변수를 사용합니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>After adding the NewFiles.format.ps1xml file and testing it in these session, the author edits the file.</source>
          <target state="translated">작성자는 이러한 세션에서 NewFiles.format.ps1xml 파일을 추가하고 테스트한 후 파일을 편집합니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>The second command uses the Update-FormatData cmdlet to reload the formatting files.</source>
          <target state="translated">두 번째 명령은 Update-FormatData cmdlet을 사용하여 형식 지정 파일을 다시 로드합니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Because the NewFiles.format.ps1xml file was previously loaded, Update-FormatData automatically reloads it without using parameters.</source>
          <target state="translated">NewFiles.format.ps1xml 파일이 이미 로드되어 있으므로 Update-FormatData는 매개 변수를 사용하지 않고 이 파일을 자동으로 다시 로드합니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>PARAMETERS</source>
          <target state="translated">매개 변수</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>-AppendPath</source>
          <target state="translated">-AppendPath</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Adds the specified formatting files to the session.</source>
          <target state="translated">지정된 형식 지정 파일을 세션에 추가합니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>The files are loaded after Windows PowerShell loads the built-in formatting files.</source>
          <target state="translated">이 파일은 Windows PowerShell에서 기본 제공 형식 지정 파일을 로드한 이후에 로드됩니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>When formatting .NET objects, Windows PowerShell uses the first formatting definition that it finds for each .NET type.</source>
          <target state="translated">.NET 개체의 형식을 지정할 때 Windows PowerShell에서는 각 .NET 유형에 대해 찾은 첫 번째 형식 지정 정의를 사용합니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>If you use the AppendPath parameter, Windows PowerShell searches the data from the built-in files before it encounters the formatting data that you are adding.</source>
          <target state="translated">AppendPath 매개 변수를 사용하는 경우 Windows PowerShell은 기본 제공 파일의 데이터를 검색한 다음 사용자가 추가하는 형식 지정 데이터를 처리합니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Use this parameter to add a file that formats a .NET object that is not referenced in the built-in formatting files.</source>
          <target state="translated">이 매개 변수를 사용하면 기본 형식 지정 파일에서 참조되지 않는 .NET 개체의 형식을 지정하는 파일을 추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>-PrependPath</source>
          <target state="translated">-PrependPath</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Adds the specified formatting files to the session.</source>
          <target state="translated">지정된 형식 지정 파일을 세션에 추가합니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>The files are loaded before Windows PowerShell loads the built-in formatting files.</source>
          <target state="translated">이 파일은 Windows PowerShell에서 기본 제공 형식 지정 파일을 로드하기 전에 로드됩니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>When formatting .NET objects, Windows PowerShell uses the first formatting definition that it finds for each .NET type.</source>
          <target state="translated">.NET 개체의 형식을 지정할 때 Windows PowerShell에서는 각 .NET 유형에 대해 찾은 첫 번째 형식 지정 정의를 사용합니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>If you use the PrependPath parameter, Windows PowerShell searches the data from the files that you are adding before it encounters the formatting data from the built-in files.</source>
          <target state="translated">PrependPath 매개 변수를 사용하는 경우 Windows PowerShell은 사용자가 추가하는 파일에서 데이터를 검색한 다음 기본 제공 파일의 형식 지정 데이터를 처리합니다.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Use this parameter to add a file that formats a .NET object that is also referenced in the built-in formatting files.</source>
          <target state="translated">이 매개 변수를 사용하면 기본 형식 지정 파일에서도 참조되는 .NET 개체의 형식을 지정하는 파일을 추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>-Confirm</source>
          <target state="translated">-Confirm</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Prompts you for confirmation before running the cmdlet.Prompts you for confirmation before running the cmdlet.</source>
          <target state="translated">이 cmdlet을 실행 하기 전에 확인 하면 메시지를 표시 합니다. 이 cmdlet을 실행 하기 전에 확인 하면 메시지를 표시 합니다.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>-WhatIf</source>
          <target state="translated">-WhatIf</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Shows what would happen if the cmdlet runs.</source>
          <target state="translated">cmdlet이 실행될 경우 결과 동작을 표시합니다.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>The cmdlet is not run.Shows what would happen if the cmdlet runs.</source>
          <target state="translated">Cmdlet은 실행 되지 않습니다. Cmdlet이 실행 되 면 어떻게 되는지를 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>The cmdlet is not run.</source>
          <target state="translated">cmdlet이 실행되지 않습니다.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>CommonParameters</source>
          <target state="translated">CommonParameters</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutVariable, -OutBuffer, -PipelineVariable, -Verbose, -WarningAction, and -WarningVariable.</source>
          <target state="translated">이 cmdlet은 공통 매개 변수:-디버그,-ErrorAction,-ErrorVariable,-InformationAction,-InformationVariable,-OutVariable,-OutBuffer,-PipelineVariable,-Verbose,-WarningAction 및-warningvariable을 지원 합니다.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>For more information, see about_CommonParameters (http://go.microsoft.com/fwlink/?LinkID=113216).</source>
          <target state="translated">자세한 내용은 about_CommonParameters (http://go.microsoft.com/fwlink/?LinkID=113216)를 참조 합니다.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>INPUTS</source>
          <target state="translated">입력</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>System.String</source>
          <target state="translated">System.String</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>You can pipe a string that contains the append path to Update-FormatData.</source>
          <target state="translated">추가 경로가 포함된 문자열을 Update-FormatData로 파이프할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>OUTPUTS</source>
          <target state="translated">출력</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>None</source>
          <target state="translated">없음</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>The cmdlet does not return any output.</source>
          <target state="translated">이 cmdlet은 어떠한 출력도 반환되지 않습니다.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>NOTES</source>
          <target state="translated">참고 사항</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>Update-FormatData also updates the formatting data for commands in the session that were imported from modules.</source>
          <target state="translated">Update-FormatData는 모듈에서 가져온 세션 내 명령에 대한 형식 지정 데이터도 업데이트합니다.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>If the formatting file for a module changes, you can run an Update-FormatData command to update the formatting data for imported commands.</source>
          <target state="translated">모듈에 대한 형식 지정 파일이 변경되는 경우 Update-FormatData 명령을 실행하여 가져온 명령에 대한 형식 지정 데이터를 업데이트할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>You do not need to import the module again.</source>
          <target state="translated">모듈을 다시 가져올 필요는 없습니다.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>RELATED LINKS</source>
          <target state="translated">관련된 링크</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>