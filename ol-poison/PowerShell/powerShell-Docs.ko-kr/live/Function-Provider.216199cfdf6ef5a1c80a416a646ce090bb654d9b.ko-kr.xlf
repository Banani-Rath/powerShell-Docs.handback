<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ko-kr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-1c394fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">e443841031efc1b3d0c4e1e7a7ae0e219690daea</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">reference\3.0\Microsoft.PowerShell.Core\Providers\Function-Provider.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions" />
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">4be6b619efbda8755cd846ec9e14e3c53d7cb4cb</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">23556e73a6576861144141284e27ec5d5c659875</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Function Provider</source>
          <target state="translated">함수 공급자</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Function Provider</source>
          <target state="translated">함수 공급자</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>PROVIDER NAME</source>
          <target state="translated">공급자 이름</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Function</source>
          <target state="translated">기능</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>DRIVES</source>
          <target state="translated">드라이브</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Function:</source>
          <target state="translated">함수:</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>SHORT DESCRIPTION</source>
          <target state="translated">간단한 설명</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Provides access to the functions defined in Windows PowerShell.</source>
          <target state="translated">Windows PowerShell에 정의된 함수에 대한 액세스를 제공합니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>DETAILED DESCRIPTION</source>
          <target state="translated">자세한 설명</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The Windows PowerShell Function provider lets you get, add, change, clear, and delete the functions and filters in Windows PowerShell.</source>
          <target state="translated">Windows PowerShell 함수 공급자를 통해 Windows PowerShell에서 함수 및 필터를 가져오고 추가, 변경 및 삭제할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>A function is a named block of code that performs an action.</source>
          <target state="translated">함수는 작업을 수행하는 명명된 코드 블록입니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>When you type the function name, the code in the function runs.</source>
          <target state="translated">함수 이름을 입력하면 함수 내의 코드가 실행됩니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>A filter is a named block of code that establishes conditions for an action.</source>
          <target state="translated">필터는 작업 조건을 설정하는 명명된 코드 블록입니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>You can type the name of the filter in place of the condition, such as in a <bpt id="p1">[</bpt>Where<ph id="ph1">\-</ph>Object &amp;#91;m2&amp;#93;<ept id="p1">](assetId:///f4c69467-d5ce-4da2-87d5-d2ae74be8acb)</ept> command.</source>
          <target state="translated">같이 조건 대신 필터의 이름을 입력할 수 있습니다는 <bpt id="p1">[</bpt>여기서<ph id="ph1">\-</ph>개체 &amp;#91; m2 &amp;#93;<ept id="p1">](assetId:///f4c69467-d5ce-4da2-87d5-d2ae74be8acb)</ept> 명령입니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>In the Function: drive, functions are preceded by the label "Function" and filters are preceded by the label "Filter", but they operate properly when used in the correct context regardless of the label.</source>
          <target state="translated">Function: 드라이브에서는 함수 앞에 "Function"이라는 레이블이 있고 필터 앞에 "Filter"라는 레이블이 있지만 레이블에 관계없이 올바른 컨텍스트에서 사용해야 이러한 함수와 필터가 제대로 작동합니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>The Function provider is a flat namespace that contains only the function and filter objects.</source>
          <target state="translated">함수 공급자는 함수 및 필터 개체만 포함된 단일 구조 네임스페이스입니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Neither functions nor filters have child items.</source>
          <target state="translated">함수와 필터에는 둘 다 하위 항목이 없습니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Each function is an instance of the System.Management.Automation.FunctionInfo class.</source>
          <target state="translated">각 함수는 System.Management.Automation.FunctionInfo 클래스의 인스턴스이고,</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Each filter is an instance of the System.Management.Automation.FilterInfo class.</source>
          <target state="translated">각 필터는 System.Management.Automation.FilterInfo 클래스의 인스턴스입니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>The examples in this section show how to manage functions, but the same methods can be used with filters.</source>
          <target state="translated">이 섹션의 예에서는 함수를 관리하는 방법을 보여 줍니다. 이와 동일한 방법으로 필터를 관리할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>The Function provider exposes its data store in the Function: drive.</source>
          <target state="translated">함수 공급자는 Function: 드라이브에 해당 데이터 저장소를 표시합니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>To work with functions, you can change your location to the Function: drive <ph id="ph1">\(</ph>"set<ph id="ph2">\-</ph>location function:"<ph id="ph3">\)</ph>.</source>
          <target state="translated">함수를 사용 하려면 함수에 사용자의 위치를 변경할 수 있습니다: 드라이브 <ph id="ph1">\(</ph>"설정<ph id="ph2">\-</ph>위치 함수:"<ph id="ph3">\)</ph>합니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Or, you can work from another Windows PowerShell drive.</source>
          <target state="translated">또는 다른 Windows PowerShell 드라이브에서 작업할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>To reference a function from another location, use the drive name <ph id="ph1">\(</ph>Function:<ph id="ph2">\)</ph> in the path.</source>
          <target state="translated">다른 위치에서 함수를 참조 하려면 드라이브 이름을 사용 하 여 <ph id="ph1">\(</ph>함수:<ph id="ph2">\)</ph> 경로에 있습니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>The Function provider supports all of the cmdlets whose names contain the Item noun <ph id="ph1">\(</ph>the Item cmdlets<ph id="ph2">\)</ph>, except for <bpt id="p1">[</bpt>Invoke<ph id="ph3">\-</ph>Item &amp;#91;m2&amp;#93;<ept id="p1">](assetId:///38a9887b-ce1a-4bde-be4e-98012efae204)</ept>.</source>
          <target state="translated">함수 공급자가 지 원하는 모든 이름에 Item 명사가 포함 cmdlet <ph id="ph1">\(</ph>Item cmdlet<ph id="ph2">\)</ph>, 를 제외 하 고 <bpt id="p1">[</bpt>Invoke<ph id="ph3">\-</ph>항목 &amp;#91; m2 &amp;#93;<ept id="p1">](assetId:///38a9887b-ce1a-4bde-be4e-98012efae204)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>And, it supports the <bpt id="p1">[</bpt>Get<ph id="ph1">\-</ph>Content &amp;#91;m2&amp;#93;<ept id="p1">](assetId:///86d8b4af-af2c-4a27-9519-2c9fd420be3d)</ept> and <bpt id="p2">[</bpt>Set<ph id="ph2">\-</ph>Content &amp;#91;m2&amp;#93;<ept id="p2">](assetId:///6fff9b86-86df-4440-b7b7-8124b22088fc)</ept> cmdlets.</source>
          <target state="translated">지원 및는 <bpt id="p1">[</bpt>가져오기<ph id="ph1">\-</ph>콘텐츠 &amp;#91; m2 &amp;#93;<ept id="p1">](assetId:///86d8b4af-af2c-4a27-9519-2c9fd420be3d)</ept> 및 <bpt id="p2">[</bpt>설정<ph id="ph2">\-</ph>콘텐츠 &amp;#91; m2 &amp;#93;<ept id="p2">](assetId:///6fff9b86-86df-4440-b7b7-8124b22088fc)</ept> cmdlet입니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>However, it does not support the cmdlets whose names contain the ItemProperty noun <ph id="ph1">\(</ph>the ItemProperty cmdlets<ph id="ph2">\)</ph>, and it does not support the Filter parameter in any cmdlet.</source>
          <target state="translated">그러나 이름 ItemProperty 명사가 포함 된 cmdlet를 지원 하지 않는 <ph id="ph1">\(</ph>ItemProperty cmdlet<ph id="ph2">\)</ph>, 모든 cmdlet에서 Filter 매개 변수를 지원 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>All changes to the functions affect the current console only.</source>
          <target state="translated">함수에 대한 모든 변경 내용은 현재 콘솔에만 영향을 줍니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>To save the changes, add the function to the Windows PowerShell profile, or use <bpt id="p1">[</bpt>Export<ph id="ph1">\-</ph>Console &amp;#91;m2&amp;#93;<ept id="p1">](assetId:///0858eece-ddcb-4525-89d1-4732c5f54c48)</ept> to save the current console.</source>
          <target state="translated">변경 내용을 저장 하려면 Windows PowerShell 프로필에 함수를 추가 하거나 사용 <bpt id="p1">[</bpt>내보내기<ph id="ph1">\-</ph>콘솔 &amp;#91; m2 &amp;#93;<ept id="p1">](assetId:///0858eece-ddcb-4525-89d1-4732c5f54c48)</ept> 현재 콘솔을 저장 합니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>CAPABILITIES</source>
          <target state="translated">기능</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>ShouldProcess</source>
          <target state="translated">ShouldProcess</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>EXAMPLES</source>
          <target state="translated">예제</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Getting to the Function: Drive</source>
          <target state="translated">Function: 드라이브</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>EXAMPLE 1</source>
          <target state="translated">예제 1</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Changes the current location to the Function: drive.</source>
          <target state="translated">현재 위치를 Function: 드라이브로 변경합니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>You can use this command from any drive in Windows PowerShell.</source>
          <target state="translated">Windows PowerShell의 모든 드라이브에서 이 명령을 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>To return to a file system drive, type the drive name.</source>
          <target state="translated">파일 시스템 드라이브로 돌아가려면 드라이브 이름을 입력합니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>For example, type "set<ph id="ph1">\-</ph>location c:".</source>
          <target state="translated">예를 들어, 입력 "설정<ph id="ph1">\-</ph>위치 c:".</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Getting Functions</source>
          <target state="translated">함수 가져오기</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>EXAMPLE 1</source>
          <target state="translated">예제 1</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>This command gets the list of all the functions in the current session.</source>
          <target state="translated">이 명령은 현재 세션의 모든 함수 목록을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>You can use this command from any Windows PowerShell drive.</source>
          <target state="translated">모든 Windows PowerShell 드라이브에서 이 명령을 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>EXAMPLE 2</source>
          <target state="translated">예제 2</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>This command gets the "man" function from the Function: drive.</source>
          <target state="translated">이 명령은 Function: 드라이브에서 "man" 함수를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>It uses the Get<ph id="ph1">\-</ph>Item cmdlet to get the function.</source>
          <target state="translated">Get을 사용 하 여<ph id="ph1">\-</ph>함수를 가져오려는 항목 cmdlet입니다.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>The pipeline operator <ph id="ph1">\(</ph>&amp;#124;<ph id="ph2">\)</ph> sends the result to Format<ph id="ph3">\-</ph>Table.</source>
          <target state="translated">파이프라인 연산자 <ph id="ph1">\(</ph>&amp;#124;<ph id="ph2">\)</ph> 형식으로 결과 보냅니다<ph id="ph3">\-</ph>테이블입니다.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>The Wrap parameter directs text that does not fit on the line onto the next line.</source>
          <target state="translated">Wrap 매개 변수는 줄을 벗어나는 텍스트를 다음 줄로 보냅니다.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>The Autosize parameter resizes the table columns to accommodate the text.</source>
          <target state="translated">Autosize 매개 변수는 텍스트에 맞게 테이블 열의 크기를 조정합니다.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>If you are in a different drive, add the drive name <ph id="ph1">\(</ph>Function:<ph id="ph2">\)</ph> to the path.</source>
          <target state="translated">다른 드라이브에 있는 경우 드라이브 이름을 추가 <ph id="ph1">\(</ph>함수:<ph id="ph2">\)</ph> 경로에 있습니다.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>EXAMPLE 3</source>
          <target state="translated">예제 3</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>These commands both get the function named "c:".</source>
          <target state="translated">이들 명령은 둘 다 "c:"이라는 함수를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>The first command can be used in any drive.</source>
          <target state="translated">첫 번째 명령은 모든 드라이브에서 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>The second command is used in the Function: drive.</source>
          <target state="translated">두 번째 명령은 Function: 드라이브에서 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Because the name ends in a colon, which is the syntax for a drive, you must qualify the path with the drive name.</source>
          <target state="translated">이름이 드라이브의 구문인 콜론으로 끝나기 때문에 드라이브 이름으로 경로를 한정해야 합니다.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Within the Function: drive, you can use either format.</source>
          <target state="translated">Function: 드라이브 내에서 두 형식 중 하나를 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>In the second command, the dot <ph id="ph1">\(</ph>.</source>
          <target state="translated">두 번째 명령에서 점 <ph id="ph1">\(</ph>합니다.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>represents the current location.</source>
          <target state="translated">현재 위치를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Creating a Function</source>
          <target state="translated">함수 만들기</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>EXAMPLE 1</source>
          <target state="translated">예제 1</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>This command uses the New<ph id="ph1">\-</ph>Item cmdlet to create a function called "HKLM:".</source>
          <target state="translated">이 명령은 새로 만들기를 사용 하 여<ph id="ph1">\-</ph>함수를 만들려면 항목 cmdlet을 호출 "HKLM:"입니다.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>The expression in braces is the script block that is represented by the function name.</source>
          <target state="translated">괄호로 묶은 식은 함수 이름으로 표시되는 스크립트 블록입니다.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>You can also create a function by typing it at the Windows PowerShell command line.</source>
          <target state="translated">Windows PowerShell 명령줄에 함수를 입력하여 함수를 만들 수도 있습니다.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>For example, tpe "function:hklm: {set<ph id="ph1">\-</ph>location hklm:}".</source>
          <target state="translated">예를 들어, tpe "함수: hklm: {설정<ph id="ph1">\-</ph>위치 hklm:}"입니다.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>If you are in the Function: drive, you can omit the drive name.</source>
          <target state="translated">현재 위치가 Function: 드라이브인 경우 드라이브 이름을 생략할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>Because you cannot specify the "Filter" label in New<ph id="ph1">\-</ph>Item, filters are labeled as functions, but they operate properly with any label.</source>
          <target state="translated">새에서 "Filter" 레이블을 지정할 수 없으므로<ph id="ph1">\-</ph>항목, 함수, 필터 레이블이 지정 되지만 레이블에 관계 없이 올바르게 작동 합니다.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>To create a filter with the "Filter" label, type the filter at the command line.</source>
          <target state="translated">"Filter" 레이블이 있는 필터를 만들려면 명령줄에 필터를 입력합니다.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>For example, type "filter:Running {$<ph id="ph1">\_</ph>.Status <ph id="ph2">\-</ph>eq "Running"}".</source>
          <target state="translated">예를 들어, 입력 "filter: Running {$<ph id="ph1">\_</ph>합니다. 상태 <ph id="ph2">\-</ph>eq "Running"} "입니다.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>EXAMPLE 2</source>
          <target state="translated">예제 2</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>This command uses the New<ph id="ph1">\-</ph>Item cmdlet to create a function called Csrss.</source>
          <target state="translated">이 명령은 새로 만들기를 사용 하 여<ph id="ph1">\-</ph>Csrss 라는 함수를 만드는 cmdlet입니다.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>It uses the Options dynamic parameter to specify a value of ReadOnly for the Options property of the function.</source>
          <target state="translated">이 함수는 Options 동적 매개 변수를 사용하여 함수의 Options 속성 값을 ReadOnly로 지정합니다.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>This command works from any location.</source>
          <target state="translated">이 명령은 모든 위치에서 작동합니다.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>If you are in the Function: drive, you can use a dot <ph id="ph1">\(</ph>.</source>
          <target state="translated">함수에 있으면: 드라이브를 점을 사용할 수 있습니다 <ph id="ph1">\(</ph>합니다.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>to specify the path.</source>
          <target state="translated">경로를 지정 합니다.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>The dot represents the current location.</source>
          <target state="translated">점은 현재 위치를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>Deleting a Function</source>
          <target state="translated">함수 삭제</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>EXAMPLE 1</source>
          <target state="translated">예제 1</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>This command deletes the "hklm:" function from the current session.</source>
          <target state="translated">이 명령은 현재 세션에서 "hklm:" 함수를 삭제합니다.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>EXAMPLE 2</source>
          <target state="translated">예제 2</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>This command deletes all the functions from the current session except for the functions whose Options property has a value of Constant.</source>
          <target state="translated">이 명령은 Options 속성 값이 Constant인 함수를 제외하고 현재 세션에서 모든 함수를 삭제합니다.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>Without the Force parameter, the command does not delete functions whose Options property has a value of ReadOnly.</source>
          <target state="translated">Force 매개 변수가 없는 경우 Options 속성 값이 ReadOnly인 함수는 삭제되지 않습니다.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>When you delete all the functions, the command prompt changes because the prompt function, which defines the content of the command prompt, is deleted.</source>
          <target state="translated">함수를 삭제하면 명령 프롬프트의 내용을 정의하는 프롬프트 함수가 삭제되므로 명령 프롬프트가 변경됩니다.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>Displaying the Properties and Methods of Functions</source>
          <target state="translated">함수의 속성 및 메서드 표시</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>EXAMPLE 1</source>
          <target state="translated">예제 1</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>This command uses the Get<ph id="ph1">\-</ph>Item cmdlet to get all the functions.</source>
          <target state="translated">이 명령은 Get을 사용 하 여<ph id="ph1">\-</ph>항목 cmdlet 모든 기능을 사용 합니다.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>The pipeline operator sends the results to the Get<ph id="ph1">\-</ph>Member cmdlet, which displays the methods and the properties of the object.</source>
          <target state="translated">파이프라인 연산자는 결과를 보냅니다.<ph id="ph1">\-</ph>메서드와 개체의 속성을 표시 하는 멤버 cmdlet입니다.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>When you pipe a collection of objects <ph id="ph1">\(</ph>such as the collection of functions in the Function: drive<ph id="ph2">\)</ph> to Get<ph id="ph3">\-</ph>Member, Get<ph id="ph4">\-</ph>Member evaluates each object in the collection separately and returns information about each object type that it finds.</source>
          <target state="translated">개체의 컬렉션을 파이프 하면 <ph id="ph1">\(</ph>함수에서 함수 컬렉션 등: 드라이브<ph id="ph2">\)</ph> Get에<ph id="ph3">\-</ph>멤버 가져오기<ph id="ph4">\-</ph>멤버는 컬렉션의 각 개체를 개별적으로 평가 하 고 발견 된 각 개체 유형에 대 한 정보를 반환 합니다.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>If all of the objects are of the same type, it returns information about the single object type.</source>
          <target state="translated">이 경우 모든 개체가 같은 유형이면 단일 개체 형식에 대한 정보를 반환합니다.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>In this case, all of the functions are FunctionInfo objects.</source>
          <target state="translated">이 예에서는 모든 함수가 FunctionInfo 개체입니다.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>To get information about the collection of FunctionInfo objects, use the InputObject parameter of Get<ph id="ph1">\-</ph>Member.</source>
          <target state="translated">FunctionInfo 개체의 컬렉션에 대 한 정보를 가져오려면 Get의 InputObject 매개 변수를 사용 하 여<ph id="ph1">\-</ph>멤버입니다.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>For example, type "get<ph id="ph1">\-</ph>member <ph id="ph2">\-</ph>InputObject <ph id="ph3">\(</ph>get<ph id="ph4">\-</ph>item function:<ph id="ph5">\*\)</ph>".</source>
          <target state="translated">예를 들어, 입력 "get<ph id="ph1">\-</ph>멤버 <ph id="ph2">\-</ph>InputObject <ph id="ph3">\(</ph>가져오기<ph id="ph4">\-</ph>함수 항목:<ph id="ph5">\*\)</ph>"입니다.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>When you use the InputObject parameter, Get<ph id="ph1">\-</ph>Member evaluates the collection, not the objects in the collection.</source>
          <target state="translated">InputObject 매개 변수를 사용 하는 경우 Get<ph id="ph1">\-</ph>멤버 컬렉션의 개체가 아니라 컬렉션을 평가 합니다.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>EXAMPLE 2</source>
          <target state="translated">예제 2</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>This command lists the values of the properties of the "prompt" function.</source>
          <target state="translated">이 명령은 "prompt" 함수의 속성 값을 나열합니다.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>It uses the Get<ph id="ph1">\-</ph>Item cmdlet to get an object that represents the "prompt" function.</source>
          <target state="translated">Get을 사용 하 여<ph id="ph1">\-</ph>cmdlet "prompt" 함수를 나타내는 개체를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>The pipeline operator <ph id="ph1">\(</ph>&amp;#124;<ph id="ph2">\)</ph> sends the results to the Format<ph id="ph3">\-</ph>List command.</source>
          <target state="translated">파이프라인 연산자 <ph id="ph1">\(</ph>&amp;#124;<ph id="ph2">\)</ph> 형식으로 결과 보냅니다.<ph id="ph3">\-</ph>명령을 나열 합니다.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>The Format<ph id="ph1">\-</ph>List command uses the Property parameter with a wildcard character <ph id="ph2">\(\*\)</ph> to format and to display the values of all of the properties of the "prompt" function.</source>
          <target state="translated">형식<ph id="ph1">\-</ph>목록 명령은 Property 매개 변수를 사용 하 여 와일드 카드 문자로 <ph id="ph2">\(\*\)</ph> 서식을 지정 하 고 모든 "prompt" 함수의 속성의 값을 표시할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>Changing the Properties of a Function</source>
          <target state="translated">함수의 속성 변경</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>EXAMPLE 1</source>
          <target state="translated">예제 1</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>You can use the Set<ph id="ph1">\-</ph>Item cmdlet with the Options dynamic parameter to change the value of the Options property of a function.</source>
          <target state="translated">집합을 사용할 수<ph id="ph1">\-</ph>함수의 Options 속성 값을 변경 하려면 Options 동적 매개 변수를 사용 하 여 항목 cmdlet입니다.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>This command sets the AllScope and ReadOnly options for the "prompt" function.</source>
          <target state="translated">이 명령은 "prompt" 함수에 대한 AllScope 및 ReadOnly 옵션을 설정합니다.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>This command uses the Options dynamic parameter of the Set<ph id="ph1">\-</ph>Item cmdlet.</source>
          <target state="translated">이 명령은 Options 동적 매개 변수 집합을 사용 하 여<ph id="ph1">\-</ph>cmdlet입니다.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>The Options parameter is available in Set<ph id="ph1">\-</ph>Item only when you use it with the Alias or Function provider.</source>
          <target state="translated">옵션 매개 변수는 집합에서 사용할 수 있는<ph id="ph1">\-</ph>별칭 또는 함수 공급자와 함께 사용 하는 경우에 항목입니다.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>EXAMPLE 2</source>
          <target state="translated">예제 2</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>This command uses the Set<ph id="ph1">\-</ph>Item cmdlet to change the "prompt" function so that it displays the time before the path.</source>
          <target state="translated">이 명령은 집합을 사용 하 여<ph id="ph1">\-</ph>항목 cmdlet을 "prompt" 함수를 경로 앞에 시간을 표시 합니다.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>The change affects both the Definition and ScriptBlock properties of the FunctionInfo object.</source>
          <target state="translated">변경 내용은 FunctionInfo 개체의 Definition 및 ScriptBlock 속성에 모두 영향을 줍니다.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>To see the effect of the change, type "get<ph id="ph1">\-</ph>item <ph id="ph2">\-</ph>path function:prompt &amp;#124; format<ph id="ph3">\-</ph>list <ph id="ph4">\-</ph>property <ph id="ph5">\*</ph>".</source>
          <target state="translated">변경의 결과 보려면 "get<ph id="ph1">\-</ph>항목 <ph id="ph2">\-</ph>경로 함수: 프롬프트 &amp;#124; 형식<ph id="ph3">\-</ph>목록 <ph id="ph4">\-</ph>속성 <ph id="ph5">\*</ph>"입니다.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>EXAMPLE 3</source>
          <target state="translated">예제 3</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>This command uses the Rename<ph id="ph1">\-</ph>Item cmdlet to change the name of the "help" function to "gh".</source>
          <target state="translated">이 명령은 이름 바꾸기를 사용 하 여<ph id="ph1">\-</ph>cmdlet "help" 함수의 이름을 "gh"로 변경 합니다.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>Copying a Function</source>
          <target state="translated">함수 복사</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>EXAMPLE 1</source>
          <target state="translated">예제 1</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>This command copies the "prompt" function to "oldPrompt", effectively creating a new name for the script block that is associated with the prompt function.</source>
          <target state="translated">이 명령은 "prompt" 함수를 "oldPrompt"로 복사하여 프롬프트 함수와 연결된 스크립트 블록의 새 이름을 쉽게 만들 수 있도록 합니다.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>You can use this to save the original prompt function if you plan to change it.</source>
          <target state="translated">프롬프트 함수를 변경하려는 경우 이 명령을 사용하여 원래 프롬프트 함수를 저장할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>The Options property of the new function has a value of None.</source>
          <target state="translated">새 함수의 Options 속성 값은 None입니다.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>To change the value of the Options property, use Set<ph id="ph1">\-</ph>Item.</source>
          <target state="translated">Options 속성 값을 변경 하려면 Set을 사용 하 여<ph id="ph1">\-</ph>항목입니다.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>DYNAMIC PARAMETERS</source>
          <target state="translated">동적 매개 변수</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>Dynamic parameters are cmdlet parameters that are added by a Windows PowerShell provider and are available only when the cmdlet is being used in the provider<ph id="ph1">\-</ph>enabled drive.</source>
          <target state="translated">동적 매개 변수는 cmdlet이 공급자에서 사용 되는 경우에 Windows PowerShell 공급자 및 사용할 수에 추가 된 cmdlet 매개 변수는<ph id="ph1">\-</ph>드라이브를 사용 하도록 설정 합니다.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>Options <ph id="ph1">\&lt;</ph>System.Management.Automation.ScopedItemOptions</source>
          <target state="translated">옵션 <ph id="ph1">\&lt;</ph>System.Management.Automation.ScopedItemOptions</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>Determines the value of the Options property of a function.</source>
          <target state="translated">함수의 Options 속성 값을 결정합니다.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>Value</source>
          <target state="translated">Value</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>Description</source>
          <target state="translated">설명</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>None</source>
          <target state="translated">없음</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>No options.</source>
          <target state="translated">옵션이 없습니다.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>"None" is the default.</source>
          <target state="translated">"None"이 기본값입니다.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>Constant</source>
          <target state="translated">상수</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>The function cannot be deleted, and its properties cannot be changed.</source>
          <target state="translated">함수가 삭제되지 않고 해당 속성도 변경되지 않습니다.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>Constant is available only when you are creating a function.</source>
          <target state="translated">Constant는 함수를 만드는 동안에만 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>You cannot change the option of an existing function to Constant.</source>
          <target state="translated">기존 함수의 옵션을 Constant로 변경할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>Private</source>
          <target state="translated">개인</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>The function is visible only in the current scope <ph id="ph1">\(</ph>not in child scopes<ph id="ph2">\)</ph>.</source>
          <target state="translated">함수는 현재 범위에만 표시 <ph id="ph1">\(</ph>하위 범위에 없는<ph id="ph2">\)</ph>합니다.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>ReadOnly</source>
          <target state="translated">ReadOnly</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>The properties of the function cannot be changed except by using the Force parameter.</source>
          <target state="translated">Force 매개 변수를 사용하지 않으면 함수의 속성을 변경할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>You can use <bpt id="p1">[</bpt>Remove<ph id="ph1">\-</ph>Item &amp;#91;m2&amp;#93;<ept id="p1">](assetId:///f98b4219-60df-408b-bdc8-994f920fc7bd)</ept> to delete the function.</source>
          <target state="translated">사용할 수 있습니다 <bpt id="p1">[</bpt>제거<ph id="ph1">\-</ph>항목 &amp;#91; m2 &amp;#93;<ept id="p1">](assetId:///f98b4219-60df-408b-bdc8-994f920fc7bd)</ept> 함수를 삭제 합니다.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>AllScope</source>
          <target state="translated">AllScope</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>The function is copied to any new scopes that are created.</source>
          <target state="translated">함수를 새로 만든 범위로 복사합니다.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>Cmdlets supported:</source>
          <target state="translated">지원되는 cmdlet:</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>New<ph id="ph1">\-</ph>Item &amp;#91;m2&amp;#93;</source>
          <target state="translated">새<ph id="ph1">\-</ph>항목 &amp;#91; m2 &amp;#93;</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>Set<ph id="ph1">\-</ph>Item &amp;#91;m2&amp;#93;</source>
          <target state="translated">설정<ph id="ph1">\-</ph>항목 &amp;#91; m2 &amp;#93;</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>See Also</source>
          <target state="translated">참고 항목</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>about<ph id="ph1">\_</ph>Functions &amp;#91;m2&amp;#93;</source>
          <target state="translated">에 대 한<ph id="ph1">\_</ph>함수 &amp;#91; m2 &amp;#93;</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>about<ph id="ph1">\_</ph>Providers</source>
          <target state="translated">에 대 한<ph id="ph1">\_</ph>공급자</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>