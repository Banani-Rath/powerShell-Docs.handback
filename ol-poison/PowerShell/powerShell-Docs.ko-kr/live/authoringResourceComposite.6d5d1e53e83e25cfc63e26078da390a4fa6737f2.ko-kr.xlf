<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ko-kr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-56a7a5e" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">6631d60d7d82e71c315c26a0196aa3e4c1b60b15</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">dsc\authoringResourceComposite.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions" />
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f3e4f6822ef9c98cc52902ebd3cdc5aad9d483e9</xliffext:olskeletonhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>title:   Composite resources: Using a DSC configuration as a resource ms.date:  2016-05-16 keywords:  powershell,DSC description:</source>
          <target state="translated">title:   Composite resources: Using a DSC configuration as a resource ms.date:  2016-05-16 keywords:  powershell,DSC description:</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>ms.topic:  article author:  eslesar manager:  dongill ms.prod:  powershell</source>
          <target state="translated">ms.topic:  article author:  eslesar manager:  dongill ms.prod:  powershell</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Composite resources: Using a DSC configuration as a resource</source>
          <target state="translated">복합 리소스: DSC 구성을 자원으로 사용</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Applies To: Windows PowerShell 4.0, Windows PowerShell 5.0</source>
          <target state="translated">적용 대상: Windows PowerShell 4.0, Windows PowerShell 5.0</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>In real-world situations, configurations can become long and complex, calling many different resources and setting a vast number of properties.</source>
          <target state="translated">실제 상황에서, 구성은 다양 한 리소스를 호출하고 무수한 속성을 설정하므로 길고 복잡해질 수 있습니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>To help address this complexity, you can use a Windows PowerShell Desired State Configuration (DSC) configuration as a resource for other configurations.</source>
          <target state="translated">이러한 복잡성을 해결하는 데 도움이 되도록 Windows PowerShell DSC(필요한 상태 구성) 구성을 다른 구성에 대한 리소스로 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>We call this a composite resource.</source>
          <target state="translated">이것을 복합 리소스라고 합니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>A composite resource is a DSC configuration that takes parameters.</source>
          <target state="translated">복합 리소스는 매개 변수를 사용하는 DSC 구성입니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>The parameters of the configuration act as the properties of the resource.</source>
          <target state="translated">구성의 매개 변수는 리소스의 속성으로서 작동합니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The configuration is saved as a file with a <bpt id="p1">**</bpt>.schema.psm1<ept id="p1">**</ept> extension, and takes the place of both the MOF schema and the resource script in a typical DSC resource (for more information about DSC resources, see <bpt id="p2">[</bpt>Windows PowerShell Desired State Configuration Resources<ept id="p2">](resources.md)</ept>.</source>
          <target state="translated">구성은 <bpt id="p1">**</bpt>.schema.psm1<ept id="p1">**</ept> 확장으로 저장되며, 일반적인 DSC 리소스에서 MOF 스키마와 리소스 스크립트 모두를 대신합니다(DSC 리소스에 대한 자세한 내용은 <bpt id="p2">[</bpt>Windows PowerShell 필요한 상태 구성 리소스<ept id="p2">](resources.md)</ept> 참조).</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Creating the composite resource</source>
          <target state="translated">복합 리소스 만들기</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>In our example, we create a configuration that invokes a number of existing resources to configure virtual machines.</source>
          <target state="translated">이 예제에서는 다양한 기존 리소스를 호출하여 가상 컴퓨터를 구성하는 구성을 만듭니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Instead of specifying the values to be set in configuration blocks, the configuration takes a number of parameters that are then used in the configuration blocks.</source>
          <target state="translated">구성 블록에서 설정되는 값을 지정하는 대신 구성에서는 많은 매개 변수를 가져와서 구성 블록에 사용합니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Saving the configuration as a composite resource</source>
          <target state="translated">구성을 복합 리소스로서 저장</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>To use the parameterized configuration as a DSC resource, save it in a directory structure like that of any other MOF-based resource, and name it with a <bpt id="p1">**</bpt>.schema.psm1<ept id="p1">**</ept> extension.</source>
          <target state="translated">매개 변수가 있는 구성을 DSC 리소스로 사용하려면, 이 구성을 다른 MOF 기반 리소스의 디렉터리 구조과 같은 디렉터리 구조에 저장하고 이름을 <bpt id="p1">**</bpt>.schema.psm1<ept id="p1">**</ept> 확장으로 지정합니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>For this example, we’ll name the file <bpt id="p1">**</bpt>xVirtualMachine.schema.psm1<ept id="p1">**</ept>.</source>
          <target state="translated">이 예의 경우에는 파일의 이름을 <bpt id="p1">**</bpt>xVirtualMachine.schema.psm1<ept id="p1">**</ept>로 지정하겠습니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>You also need to create a manifest named <bpt id="p1">**</bpt>xVirtualMachine.psd1<ept id="p1">**</ept> that contains the following line.</source>
          <target state="translated">다음 줄을 포함하는 <bpt id="p1">**</bpt>xVirtualMachine.psd1<ept id="p1">**</ept>이라는 매니페스트도 만들어야 합니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Note that this is in addition to <bpt id="p1">**</bpt>MyDscResources.psd1<ept id="p1">**</ept>, the module manifest for all resources under the <bpt id="p2">**</bpt>MyDscResources<ept id="p2">**</ept> folder.</source>
          <target state="translated">이것은 <bpt id="p2">**</bpt>MyDscResources<ept id="p2">**</ept> 폴더 아래의 모든 리소스에 대한 모듈 매니페스트인 <bpt id="p1">**</bpt>MyDscResources.psd1<ept id="p1">**</ept> 이 외의 추가적인 매니페스트입니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>When you are done, the folder structure should be as follows.</source>
          <target state="translated">완료되면 폴더 구조는 다음과 같아야 합니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>The resource is now discoverable by using the Get-DscResource cmdlet, and its properties are discoverable by either that cmdlet or by using <bpt id="p1">**</bpt>Ctrl+Space<ept id="p1">**</ept> auto-complete in the Windows PowerShell ISE.</source>
          <target state="translated">이제 리소스는 Get-DscResource cmdlet을 사용하여 검색할 수 있으며, 해당 속성은 해당 cmdlet이나, Windows PowerShell ISE에서 <bpt id="p1">**</bpt>Ctrl+Space<ept id="p1">**</ept> 자동 완성을 사용하여 검색할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Using the composite resource</source>
          <target state="translated">복합 리소스 사용</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Next we create a configuration that calls the composite resource.</source>
          <target state="translated">다음으로 복합 리소스를 호출하는 구성을 만듭니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>This configuration calls the xVirtualMachine composite resource to create a virtual machine, and then calls the <bpt id="p1">**</bpt>xComputer<ept id="p1">**</ept> resource to rename it.</source>
          <target state="translated">이 구성은 xVirtualMachine 복합 리소스를 호출하여 가상 컴퓨터를 만든 다음, <bpt id="p1">**</bpt>xComputer<ept id="p1">**</ept> 리소스를 호출하여 이름을 변경합니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>See Also</source>
          <target state="translated">참고 항목</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Concepts</source>
          <target state="translated">개념</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Writing a custom DSC resource with MOF</source>
          <target state="translated">MOF를 사용하여 사용자 지정 DSC 리소스 작성</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Get Started with Windows PowerShell Desired State Configuration</source>
          <target state="translated">Windows PowerShell 필요한 상태 구성 시작</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>