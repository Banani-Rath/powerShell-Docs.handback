<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ko-kr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-1c394fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">faaf7811a14ef14e4a988ca9e5c47404aa70530c</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">reference\5.0\Microsoft.PowerShell.Utility\New-Object.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions" />
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">006e2dedf4394e2dc690f5c225f78f889157374a</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">a45676c207e041e395d8fdf07e49d80dff9c5d19</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>powershell, cmdlet</source>
          <target state="translated">powershell cmdlet</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>New-Object</source>
          <target state="translated">새 개체</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>New-Object</source>
          <target state="translated">새 개체</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>SYNOPSIS</source>
          <target state="translated">요약</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Creates an instance of a Microsoft .NET Framework or COM object.</source>
          <target state="translated">Microsoft .NET Framework 또는 COM 개체의 인스턴스를 만듭니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>SYNTAX</source>
          <target state="translated">구문</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Net (Default)</source>
          <target state="translated">Net (기본값)</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Com</source>
          <target state="translated">Com</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>DESCRIPTION</source>
          <target state="translated">설명</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>New-Object<ept id="p1">**</ept> cmdlet creates an instance of a .NET Framework or COM object.</source>
          <target state="translated"> <bpt id="p1">**</bpt>New-object<ept id="p1">**</ept> cmdlet은.NET Framework 또는 COM 개체의 인스턴스를 만듭니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>You can specify either the type of a .NET Framework class or a ProgID of a COM object.</source>
          <target state="translated">COM 개체의 ProgID(프로그래밍 ID)나 .NET Framework 클래스의 유형을 지정할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>By default, you type the fully qualified name of a .NET Framework class and the cmdlet returns a reference to an instance of that class.</source>
          <target state="translated">기본적으로 .NET Framework 클래스의 정규화된 이름을 입력하면 cmdlet은 해당 클래스의 인스턴스에 대한 참조를 반환합니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>To create an instance of a COM object, use the <bpt id="p1">*</bpt>ComObject<ept id="p1">*</ept> parameter and specify the ProgID of the object as its value.</source>
          <target state="translated">COM 개체의 인스턴스를 만들려면 사용은 <bpt id="p1">*</bpt>ComObject<ept id="p1">*</ept> 매개 변수 값으로 개체의 ProgID를 지정 합니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>EXAMPLES</source>
          <target state="translated">예제</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Example 1: Create a System.Version object</source>
          <target state="translated">예제 1: System.Version 개체를 만듭니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>This command creates a <bpt id="p1">**</bpt>System.Version<ept id="p1">**</ept> object.</source>
          <target state="translated">이 명령은 만듭니다는 <bpt id="p1">**</bpt>System.Version<ept id="p1">**</ept> 개체입니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>It uses a 1.2.3.4 string as the constructor.</source>
          <target state="translated">1.2.3.4 사용 하 여 문자열을 생성자로 합니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Example 2: Create an Internet Explorer COM object</source>
          <target state="translated">예제 2: Internet Explorer COM 개체를 만듭니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>This command creates an instance of the COM object that represents the Internet Explorer application.</source>
          <target state="translated">이 명령은 Internet Explorer 응용 프로그램을 나타내는 COM 개체의 인스턴스를 만들고</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>The value of the <bpt id="p1">*</bpt>Property<ept id="p1">*</ept> parameter is a hash table that calls the <bpt id="p2">**</bpt>Navigate2<ept id="p2">**</ept> method and sets the <bpt id="p3">**</bpt>Visible<ept id="p3">**</ept> property of the object to $True to make the application visible.</source>
          <target state="translated">값은 <bpt id="p1">*</bpt>속성<ept id="p1">*</ept> 매개 변수는 호출 하는 해시 테이블은 <bpt id="p2">**</bpt>Navigate2<ept id="p2">**</ept> 메서드 집합과 <bpt id="p3">**</bpt>Visible<ept id="p3">**</ept> $True 응용 프로그램을 표시 하려면 개체의 속성입니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>This command is the equivalent of the following:</source>
          <target state="translated">이 명령은 다음과 동일합니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Example 3: Use the Strict parameter to generate a non-terminating error</source>
          <target state="translated">종료 되지 않는 오류를 생성 하려면 엄격한 매개 변수를 사용 하는 예제 3:</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>This command demonstrates that adding the <bpt id="p1">*</bpt>Strict<ept id="p1">*</ept> parameter causes the <bpt id="p2">**</bpt>New-Object<ept id="p2">**</ept> cmdlet to generate a non-terminating error when the COM object uses an interop assembly.</source>
          <target state="translated">이 명령을 추가 하는 방법을 보여 줍니다는 <bpt id="p1">*</bpt>Strict<ept id="p1">*</ept> 매개 변수는 <bpt id="p2">**</bpt>New-object<ept id="p2">**</ept> COM 개체에서 interop 어셈블리를 사용 하는 경우 종료 되지 않는 오류를 생성 하는 cmdlet입니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Example 4: Create a COM object to manage Windows desktop</source>
          <target state="translated">예 4: Windows 바탕 화면을 관리 하는 COM 개체 만들기</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>This example shows how to create and use a COM object to manage your Windows desktop.</source>
          <target state="translated">이 예제에서는 COM 개체를 만들고 사용하여 Windows 바탕 화면을 관리하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>PARAMETERS</source>
          <target state="translated">매개 변수</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>-ArgumentList</source>
          <target state="translated">-ArgumentList</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Specifies a list of arguments to pass to the constructor of the .NET Framework class.</source>
          <target state="translated">.NET Framework 클래스의 생성자로 전달할 인수 목록을 지정합니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Separate elements in the list by using commas (,).</source>
          <target state="translated">쉼표(,)를 사용하여 목록의 요소를 구분합니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>The alias for <bpt id="p1">*</bpt>ArgumentList<ept id="p1">*</ept> is <bpt id="p2">*</bpt>Args<ept id="p2">*</ept>.</source>
          <target state="translated">에 대 한 별칭 <bpt id="p1">*</bpt>ArgumentList<ept id="p1">*</ept> 는 <bpt id="p2">*</bpt>Args<ept id="p2">*</ept>합니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>-ComObject</source>
          <target state="translated">-ComObject</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Specifies the programmatic identifier (ProgID) of the COM object.</source>
          <target state="translated">COM 개체의 ProgID(프로그래밍 ID)를 지정합니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>-Property</source>
          <target state="translated">-속성</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Specifies property values and invokes methods of the new object.</source>
          <target state="translated">속성 값을 지정 하 고 새 개체의 메서드를 호출 합니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Enter a hash table in which the keys are the names of properties or methods and the values are property values or method arguments.</source>
          <target state="translated">키가 속성 또는 메서드의 이름이고 값이 속성 값이나 메서드 인수인 해시 테이블을 입력합니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>New-Object<ept id="p1">**</ept> creates the object and sets each property value and invokes each method in the order that they appear in the hash table.</source>
          <target state="translated"><bpt id="p1">**</bpt>새 개체<ept id="p1">**</ept> 는 개체를 만들고 각 속성 값을 설정 하 고 해시 테이블에 나타나는 순서 대로 각 메서드를 호출 합니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>If the new object is derived from the <bpt id="p1">**</bpt>PSObject<ept id="p1">**</ept> class, and you specify a property that does not exist on the object, <bpt id="p2">**</bpt>New-Object<ept id="p2">**</ept> adds the specified property to the object as a NoteProperty.</source>
          <target state="translated">새 개체에서 파생 되는 <bpt id="p1">**</bpt>PSObject<ept id="p1">**</ept> 클래스 및 개체에 존재 하지 않는 속성을 지정 하면 <bpt id="p2">**</bpt>New-object<ept id="p2">**</ept> NoteProperty로 개체에 지정된 된 속성을 추가 합니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>If the object is not a <bpt id="p1">**</bpt>PSObject<ept id="p1">**</ept>, the command generates a non-terminating error.</source>
          <target state="translated">개체가 없는 경우는 <bpt id="p1">**</bpt>PSObject<ept id="p1">**</ept>, 명령은 종료 되지 않는 오류를 생성 합니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>-Strict</source>
          <target state="translated">Strict</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Indicates that the cmdlet generates a non-terminating error when a COM object that you attempt to create uses an interop assembly.</source>
          <target state="translated">만들려고 하는 COM 개체에서 interop 어셈블리를 사용 하는 경우 cmdlet은 종료 되지 않는 오류를 생성을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>This feature distinguishes actual COM objects from .NET Framework objects with COM-callable wrappers.</source>
          <target state="translated">이 기능은 실제 COM 개체를 COM 호출 가능 래퍼를 사용하는 .NET Framework 개체와 구분합니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>-TypeName</source>
          <target state="translated">-TypeName</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Specifies the fully qualified name of the .NET Framework class.</source>
          <target state="translated">.NET Framework 클래스의 정규화된 이름을 지정합니다.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>You cannot specify both the <bpt id="p1">*</bpt>TypeName<ept id="p1">*</ept> parameter and the <bpt id="p2">*</bpt>ComObject<ept id="p2">*</ept> parameter.</source>
          <target state="translated">모두를 지정할 수 없습니다는 <bpt id="p1">*</bpt>TypeName<ept id="p1">*</ept> 매개 변수 및 <bpt id="p2">*</bpt>ComObject<ept id="p2">*</ept> 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>CommonParameters</source>
          <target state="translated">CommonParameters</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutVariable, -OutBuffer, -PipelineVariable, -Verbose, -WarningAction, and -WarningVariable.</source>
          <target state="translated">이 cmdlet은 공통 매개 변수:-디버그,-ErrorAction,-ErrorVariable,-InformationAction,-InformationVariable,-OutVariable,-OutBuffer,-PipelineVariable,-Verbose,-WarningAction 및-warningvariable을 지원 합니다.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>For more information, see about_CommonParameters (http://go.microsoft.com/fwlink/?LinkID=113216).</source>
          <target state="translated">자세한 내용은 about_CommonParameters (http://go.microsoft.com/fwlink/?LinkID=113216)를 참조 합니다.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>INPUTS</source>
          <target state="translated">입력</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>None</source>
          <target state="translated">없음</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>You cannot pipe input to this cmdlet.</source>
          <target state="translated">이 cmdlet에 입력을 파이프할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>OUTPUTS</source>
          <target state="translated">출력</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Object</source>
          <target state="translated">개체</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>New-Object<ept id="p1">**</ept> returns the object that is created.</source>
          <target state="translated"><bpt id="p1">**</bpt>새 개체<ept id="p1">**</ept> 만들어진 개체를 반환 합니다.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>NOTES</source>
          <target state="translated">참고 사항</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>New-Object<ept id="p1">**</ept> provides the most commonly-used functionality of the VBScript CreateObject function.</source>
          <target state="translated"><bpt id="p1">**</bpt>새 개체<ept id="p1">**</ept> 는 VBScript CreateObject 함수의 가장 자주 사용 하는 기능을 제공 합니다.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>A statement like <ph id="ph1">`Set objShell = CreateObject("Shell.Application")`</ph> in VBScript can be translated to <ph id="ph2">`$objShell = New-Object -COMObject "Shell.Application"`</ph> in Windows PowerShell.</source>
          <target state="translated">문이 같은 <ph id="ph1">`Set objShell = CreateObject("Shell.Application")`</ph> VBScript에서 변환할 수 있는 <ph id="ph2">`$objShell = New-Object -COMObject "Shell.Application"`</ph> Windows PowerShell에서.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>New-Object<ept id="p1">**</ept> expands upon the functionality available in the Windows Script Host environment by making it easy to work with .NET Framework objects from the command line and within scripts.</source>
          <target state="translated"><bpt id="p1">**</bpt>새 개체<ept id="p1">**</ept> .NET Framework 개체에서 명령줄 이나 스크립트 내 작업을 쉽게 만들어 Windows 스크립트 호스트 환경에서 사용할 수 있는 기능에 따라 확장 합니다.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>RELATED LINKS</source>
          <target state="translated">관련된 링크</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>Compare-Object</source>
          <target state="translated">Compare-Object</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>ForEach-Object</source>
          <target state="translated">ForEach-Object</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>Group-Object</source>
          <target state="translated">Group-Object</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>Measure-Object</source>
          <target state="translated">Measure-Object</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>Select-Object</source>
          <target state="translated">Select-Object</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>Sort-Object</source>
          <target state="translated">Sort-Object</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>Tee-Object</source>
          <target state="translated">Tee-object는 개체</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>Where-Object</source>
          <target state="translated">Where-Object</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>