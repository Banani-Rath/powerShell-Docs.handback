<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ko-kr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-1c394fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">97a798a059b2b47ddb5962a44fd63fa8861c3f10</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">reference\5.0\Microsoft.PowerShell.Core\About\about_Preference_Variables.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions" />
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">7bf1bc756437879d16c15eb18d20e6d3b2171d87</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">c1444f805dcb7dd038ddb0f6eaaadbf1defaf60f</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>about_Preference_Variables</source>
          <target state="translated">about_Preference_Variables</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>powershell, cmdlet</source>
          <target state="translated">powershell cmdlet</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>About Preference Variables</source>
          <target state="translated">기본 설정 변수에 대 한</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>about_preference_variables</source>
          <target state="translated">about_preference_variables를 참조 하세요</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>SHORT DESCRIPTION</source>
          <target state="translated">간단한 설명</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Variables that customize the behavior of Windows PowerShell</source>
          <target state="translated">Windows PowerShell의 동작을 사용자 지정 하는 변수</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>LONG DESCRIPTION</source>
          <target state="translated">자세한 설명</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Windows PowerShell includes a set of variables that enable you to customize its behavior.</source>
          <target state="translated">Windows PowerShell에는 동작을 사용자 지정할 수 있도록 하는 변수 집합이 포함 되어 있습니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>These "preference variables" work like the options in GUI-based systems.</source>
          <target state="translated">이러한 "기본 설정 변수"는 옵션 처럼 GUI 기반 시스템에서 작동합니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The preference variables affect the Windows PowerShell operating environment and all commands run in the environment.</source>
          <target state="translated">기본 설정 변수는 Windows PowerShell 운영 환경에 영향을 줄 및 환경에서 모든 명령을 실행 합니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>In many cases, the cmdlets have parameters that you can use to override the preference behavior for a specific command.</source>
          <target state="translated">대부분의 경우에는 cmdlet가 특정 명령에 대 한 기본 동작을 재정의 하는 데 사용할 수 있는 매개 변수.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>The following table lists the preference variables and their default values.</source>
          <target state="translated">다음 표에서 기본 설정 변수 및 해당 기본값을 나열합니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Variable                             Default Value</source>
          <target state="translated">기본 변수 값</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>$ConfirmPreference                   High $DebugPreference                     SilentlyContinue $ErrorActionPreference               Continue $ErrorView                           NormalView $FormatEnumerationLimit              4 $InformationPreference               SilentlyContinue $LogCommandHealthEvent               False (not logged) $LogCommandLifecycleEvent            False (not logged) $LogEngineHealthEvent                True (logged) $LogEngineLifecycleEvent             True (logged) $LogProviderLifecycleEvent           True (logged) $LogProviderHealthEvent              True (logged) $MaximumAliasCount                   4096 $MaximumDriveCount                   4096 $MaximumErrorCount                   256 $MaximumFunctionCount                4096 $MaximumHistoryCount                 4096 $MaximumVariableCount                4096 $OFS                                 (Space character (" ")) $OutputEncoding                      ASCIIEncoding object $ProgressPreference                  Continue $PSDefaultParameterValues            (None - empty hash table) $PSEmailServer                       (None) $PSModuleAutoLoadingPreference       All $PSSessionApplicationName            WSMAN $PSSessionConfigurationName          http://schemas.microsoft.com/PowerShell/microsoft.PowerShell $PSSessionOption                     (See below) $VerbosePreference                   SilentlyContinue $WarningPreference                   Continue $WhatIfPreference                    0</source>
          <target state="translated">$ConfirmPreference 높음 $ SilentlyContinue $DebugPreference 계속 $ErrorActionPreference ErrorView NormalView $FormatEnumerationLimit 4 $InformationPreference SilentlyContinue $ False (기록된 되지 않습니다) $LogCommandLifecycleEvent False (로깅되지) $LogCommandHealthEvent LogEngineHealthEvent True (기록) $LogEngineLifecycleEvent (기록) True $LogProviderLifecycleEvent True (기록) $LogProviderHealthEvent True (기록) $MaximumAliasCount 4096 $MaximumDriveCount 4096 $MaximumErrorCount 256 $MaximumFunctionCount 4096 $MaximumHistoryCount 4096 $MaximumVariableCount 4096 $OFS (공백 문자 ("")) $OutputEncoding ASCIIEncoding $ProgressPreference 개체                  계속 (없음-빈 해시 테이블) $PSDefaultParameterValues (없음) $PSEmailServer $PSModuleAutoLoadingPreference 모든 $PSSessionApplicationName WSMAN $PSSessionConfigurationName http://schemas.microsoft.com/PowerShell/microsoft.PowerShell $PSSessionOption (아래 참조) $VerbosePreference SilentlyContinue $WarningPreference 계속 $WhatIfPreference 0</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Windows PowerShell also includes the following environment variables that store user preferences.</source>
          <target state="translated">Windows PowerShell에는 사용자 기본 설정을 저장 하는 다음과 같은 환경 변수가 포함 되어 있습니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>For more information about these environment variables, see about_Environment_Variables.</source>
          <target state="translated">이러한 환경 변수가 대 한 자세한 내용은 about_Environment_Variables를 참조 합니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Variable</source>
          <target state="translated">변수</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>PSExecutionPolicyPreference PSModulePath</source>
          <target state="translated">PSExecutionPolicyPreference PSModulePath</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>WORKING WITH PREFERENCE VARIABLES</source>
          <target state="translated">기본 설정 변수 작업</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>This document describes each of the preference variables.</source>
          <target state="translated">이 문서는 기본 설정 변수에 대해 설명합니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>To display the current value of a specific preference variable, type the name of the variable.</source>
          <target state="translated">특정 기본 설정 변수의 현재 값을 표시 하려면 변수 이름을 입력 합니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>In response, Windows PowerShell provides the value.</source>
          <target state="translated">Windows PowerShell 응답으로 값을 제공 합니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>For example, the following command displays the value of the $ConfirmPreference variable.</source>
          <target state="translated">예를 들어 다음 명령은 $ConfirmPreference 변수의 값을 표시 합니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>PS&gt; $ConfirmPreference High</source>
          <target state="translated">PS &gt; $ConfirmPreference 높음</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>To change the value of a variable, use an assignment statement.</source>
          <target state="translated">변수 값을 변경 하려면는 대입문을 사용 합니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>For example, the following statement assigns the value "Medium" to the $ConfirmPreference variable.</source>
          <target state="translated">예를 들어 다음 문은 $ConfirmPreference 변수에 "보통" 값을 할당합니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>PS&gt; $ConfirmPreference = "Medium"</source>
          <target state="translated">&gt; $ConfirmPreference PS = "보통"</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Like all variables, the values that you set are specific to the current Windows PowerShell session.</source>
          <target state="translated">모든 변수를 같은 값으로 현재 Windows PowerShell 세션에 관련이 있습니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>To make them effective in all Windows PowerShell session, add them to your Windows PowerShell profile.</source>
          <target state="translated">적용 하려면 모든 Windows PowerShell 세션에서 Windows PowerShell 프로필에 추가 합니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>For more information, see about_Profiles.</source>
          <target state="translated">자세한 내용은 about_Profiles를 참조하세요.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>WORKING REMOTELY</source>
          <target state="translated">원격으로 작업</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>When you run commands on a remote computer, the remote commands are subject only to the preferences set in the Windows PowerShell client on the remote computer.</source>
          <target state="translated">원격 컴퓨터에서 실행 하는 명령을 원격 명령을 원격 컴퓨터에서 Windows PowerShell 클라이언트에 설정 하 여 기본 설정에만 있습니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>For example, when you run a remote command, the value of the $DebugPreference variable on remote computer determines how Windows PowerShell responds to debugging messages.</source>
          <target state="translated">예를 들어 원격 명령을 실행 하면 원격 컴퓨터에서 $DebugPreference 변수 값을 Windows PowerShell 디버거 메시지에 응답 하는 방법을 결정 합니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>For more information about remote commands, see about_remote.</source>
          <target state="translated">원격 명령에 대 한 자세한 내용은 about_remote를 참조 하십시오.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>$ConfirmPreference Determines whether Windows PowerShell automatically prompts you for confirmation before running a cmdlet or function.</source>
          <target state="translated">$ConfirmPreference 있는지 여부를 Windows PowerShell 자동으로 묻는 cmdlet 또는 함수를 실행 하기 전에 확인을 결정 합니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>When the value of the $ConfirmPreference variable (High, Medium, Low) is less than or equal to the risk assigned to the cmdlet or function (High, Medium, Low), Windows PowerShell automatically prompts you for confirmation before running the cmdlet or function.</source>
          <target state="translated">(높음, 중간, 낮음) $ConfirmPreference 변수 값을 cmdlet 또는 함수 (높음, 중간, 낮음)에 할당 하는 위험 보다 적은 경우 Windows PowerShell 자동으로 묻는 cmdlet 또는 함수를 실행 하기 전에 확인 합니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>If the value of the $ConfirmPreference variable is None, Windows PowerShell never automatically prompts you before running a cmdlet or function.</source>
          <target state="translated">$ConfirmPreference 변수의 값이 None 인 경우 Windows PowerShell 자동으로 묻는 cmdlet 또는 함수를 실행 하기 전에 합니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>To change the confirming behavior for all cmdlets and functions in the session, change the value of the $ConfirmPreference variable.</source>
          <target state="translated">세션의 모든 cmdlet 및 함수에 대 한 확인 상자 동작을 변경 하려면 $ConfirmPreference 변수의 값을 변경 합니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>To override the $ConfirmPreference for a single command, use the Confirm parameter of the cmdlet or function.</source>
          <target state="translated">단일 명령에 대 한 $ConfirmPreference를 재정의 하려면 cmdlet 또는 함수 Confirm 매개 변수를 사용 합니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>To request confirmation, use -Confirm.</source>
          <target state="translated">확인을 요청 하려면 다음을 사용-확인 합니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>To suppress confirmation, use -Confirm:$false</source>
          <target state="translated">확인을 표시 하지 않으려면, 사용-확인: $false</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Valid values of $ConfirmPreference:</source>
          <target state="translated">$ConfirmPreference의 유효한 값:</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>None:    Windows PowerShell does not prompt automatically.</source>
          <target state="translated">None: Windows PowerShell에서 표시 되지 않습니다 자동으로 합니다.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>To request confirmation of a particular command, use the Confirm parameter of the cmdlet or function.</source>
          <target state="translated">특정 명령에 대 한 확인을 요청 하려면 cmdlet 또는 함수 Confirm 매개 변수를 사용 합니다.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Low:     Windows PowerShell prompts for confirmation before running cmdlets or functions with a low, medium, or high risk.</source>
          <target state="translated">낮음: Windows PowerShell cmdlet 또는 함수를 낮음, 보통 또는 높은 위험 수준으로 실행 하기 전에 확인 메시지가 표시 됩니다.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Medium:  Windows PowerShell prompts for confirmation before running cmdlets or functions with a medium, or high risk.</source>
          <target state="translated">보통: Windows PowerShell cmdlet 또는 함수를 보통 또는 높은 위험 수준으로 실행 하기 전에 확인 메시지가 표시 됩니다.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>High:    Windows PowerShell prompts for confirmation before running cmdlets or functions with a high risk.</source>
          <target state="translated">높음: Windows PowerShell cmdlet 또는 함수를 높은 위험으로 실행 하기 전에 확인 묻습니다.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>DETAILED EXPLANATION</source>
          <target state="translated">자세한 내용</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>When the actions of a cmdlet or function significantly affect the system, such as those that delete data or use a significant amount of system resources, Windows PowerShell can automatically prompt you for confirmation before performing the action.</source>
          <target state="translated">Cmdlet 또는 함수 작업 데이터를 삭제 하거나 상당한 양의 시스템 리소스를 사용 하는 것과 같은 시스템에 크게 영향을 줄 때 Windows PowerShell 수 묻는 메시지가 자동 작업을 수행 하기 전에 확인 합니다.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>For example,</source>
          <target state="translated">예:</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>PS&gt; remove-item file.txt</source>
          <target state="translated">PS &gt; file.txt 항목 제거</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Confirm Are you sure you want to perform this action?</source>
          <target state="translated">확인이 작업을 수행 하 시겠습니까?</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Performing operation "Remove File" on Target "C:\file.txt".</source>
          <target state="translated">대상 "C:\file.txt"에서 "파일 제거" 작업을 수행 합니다.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>[Y] Yes  [A] Yes to All  [N] No  [L] No to All  [S] Suspend  [?] Help (default is "Y"):</source>
          <target state="translated">[Y] 예 [A] 예 [n] 모든 모든 [S]에 더 없습니다 [L] 일시 중단 [?] 도움말 (기본값은 "Y"):</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>The estimate of the risk is an attribute of the cmdlet or function known as its "ConfirmImpact".</source>
          <target state="translated">예상 되는 위험은 특성 cmdlet 또는 해당 "ConfirmImpact" 라고 하는 함수입니다.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>Users cannot change it.</source>
          <target state="translated">사용자가 변경할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Cmdlets and functions that might pose a risk to the system have a Confirm parameter that you can use to request or suppress confirmation for a single command.</source>
          <target state="translated">Cmdlet 및 시스템에 문제를 일으킬 수 있는 함수는 요청 하거나 단일 명령에 대 한 확인을 표시 하는 데 사용할 수 있는 Confirm 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Because most cmdlets and functions use the default risk value (ConfirmImpact) of Medium, and the default value of $ConfirmPreference is High, automatic confirmation rarely occurs.</source>
          <target state="translated">미디어의 기본 위험 값 (ConfirmImpact)를 사용 하 여 대부분의 cmdlet 및 함수 및 기본 $ConfirmPreference 가치가 높은, 자동 확인 거의 때문에 발생 합니다.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>However, you can activate automatic confirmation by changing the value of $ConfirmPreference to Medium or Low.</source>
          <target state="translated">그러나 중간 또는 낮음 $ConfirmPreference의 값을 변경 하 여 자동 확인을 활성화할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>EXAMPLES</source>
          <target state="translated">예제</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>This example shows the effect of the default value of $ConfirmPreference.</source>
          <target state="translated">이 예제에서는 기본값인 $ConfirmPreference 결과 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>The High value only confirms high-risk cmdlets and functions.</source>
          <target state="translated">높은 값 위험도 높은 cmdlet 및 함수에만 확인합니다.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>Since most cmdlets and functions are medium risk, they are not automatically confirmed.</source>
          <target state="translated">대부분의 cmdlet 및 함수는 보통 위험을는 이기 때문은 하지 자동으로 확인할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>PS&gt; $confirmpreference              #Get the current value of the High                                 variable</source>
          <target state="translated">PS &gt; $confirmpreference #Get 높은 변수의 현재 값</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>PS&gt; remove-item temp1.txt           #Delete a file PS&gt;                                 #Deleted without confirmation</source>
          <target state="translated">PS &gt; 항목 제거 temp1.txt #Delete 파일 PS &gt; #Deleted 확인 하지 않고</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>PS&gt; remove-item temp2.txt -confirm  #Use the Confirm parameter to request confirmation</source>
          <target state="translated">PS &gt; 항목 제거 temp2.txt-#Use 확인을 요청 하 고 Confirm 매개 변수를 확인 합니다.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>Confirm Are you sure you want to perform this action?</source>
          <target state="translated">확인이 작업을 수행 하 시겠습니까?</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>Performing operation "Remove File" on Target "C:\temp2.txt".</source>
          <target state="translated">대상 "C:\temp2.txt"에서 "파일 제거" 작업을 수행 합니다.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>[Y] Yes  [A] Yes to All  [N] No  [L] No to All  [S] Suspend  [?] Help (default is "Y"):</source>
          <target state="translated">[Y] 예 [A] 예 [n] 모든 모든 [S]에 더 없습니다 [L] 일시 중단 [?] 도움말 (기본값은 "Y"):</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>The following example shows the effect of changing the value of $ConfirmPreference to Medium.</source>
          <target state="translated">다음 예제에서는 값으로 변경 하면 $ConfirmPreference의 중간 결과 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>Because most cmdlets and function are medium-risk, they are automatically confirmed.</source>
          <target state="translated">대부분의 cmdlet 및 함수는 보통 위험을 하기 때문에 자동으로 확인 됩니다.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>To suppress the confirmation prompt for a single command, use the Confirm parameter with a value of $false</source>
          <target state="translated">단일 명령에 대 한 확인 메시지를 표시 하지 않으려면 $false 값 Confirm 매개 변수 사용</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>PS&gt; $confirmpreference = "Medium"  #Change the value of $ConfirmPreference PS&gt; remove-item temp2.txt          #Deleting a file triggers confirmation</source>
          <target state="translated">&gt; $Confirmpreference PS = "보통" #Change $ConfirmPreference PS의 값 &gt; 항목 제거 temp2.txt #Deleting 파일 확인을 트리거합니다</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>Confirm Are you sure you want to perform this action?</source>
          <target state="translated">확인이 작업을 수행 하 시겠습니까?</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>Performing operation "Remove File" on Target "C:\temp2.txt".</source>
          <target state="translated">대상 "C:\temp2.txt"에서 "파일 제거" 작업을 수행 합니다.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>[Y] Yes  [A] Yes to All  [N] No  [L] No to All  [S] Suspend  [?] Help (default is "Y"):</source>
          <target state="translated">[Y] 예 [A] 예 [n] 모든 모든 [S]에 더 없습니다 [L] 일시 중단 [?] 도움말 (기본값은 "Y"):</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>PS&gt; remove-item temp3.txt -confirm:$false   #Use Confirm parameter to suppress confirmation PS&gt;</source>
          <target state="translated">PS &gt; 항목 제거 temp3.txt-확인: $false #Use 확인 매개 변수를 확인 PS를 표시 하지 않는 &gt;</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>$DebugPreference Determines how Windows PowerShell responds to debugging messages generated by a script, cmdlet or provider, or by a Write-Debug command at the command line.</source>
          <target state="translated">$DebugPreference Windows PowerShell 명령줄에서 쓰기 디버그 명령 또는 스크립트, cmdlet 또는 공급자에 의해 생성 되는 메시지의 디버깅에 반응 하는 방법을 결정 합니다.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>Some cmdlets display debugging messages, which are typically very technical messages designed for programmers and technical support professionals.</source>
          <target state="translated">일부 cmdlet은 일반적으로 프로그래머 및 기술 지원 전문가 위한 설계 된 기술적인 측면에서 메시지 디버깅 메시지를 표시 합니다.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>By default, debugging messages are not displayed, but you can display debugging messages by changing the value of $DebugPreference.</source>
          <target state="translated">기본적으로 디버깅 메시지는 표시 되지 않지만 $DebugPreference의 값을 변경 하 여 디버깅 메시지를 표시할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>You can also use the Debug common parameter of a cmdlet to display or hide the debugging messages for a specific command.</source>
          <target state="translated">또한을 표시 하거나 특정 명령에 대 한 디버깅 메시지를 숨기려면 cmdlet의 Debug 일반 매개 변수를 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>For more information, type: "get-help about_commonparameters".</source>
          <target state="translated">자세한 내용을 보려면 입력: "get-help about_commonparameters"입니다.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>Valid values: Stop:               Displays the debug message and stops executing.</source>
          <target state="translated">유효한 값: 중지: 디버그 메시지를 표시 하 고 실행을 중지 합니다.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>Writes an error to the console.</source>
          <target state="translated">콘솔에 오류를 기록 합니다.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>Inquire:            Displays the debug message and asks you whether you want to continue.</source>
          <target state="translated">디버그 메시지를 표시 하 고 계속할 것인지 묻는 문의:.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>Note that adding the Debug common parameter to a command--when the command is configured to generate a debugging message--changes the value of the $DebugPreference variable to Inquire.</source>
          <target state="translated">추가 디버그 일반 매개 변수를 명령-명령-디버깅 메시지를 생성 하도록 구성 된 경우 $DebugPreference 변수의 값으로 변경 Inquire 합니다.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>Continue:           Displays the debug message and continues with execution.</source>
          <target state="translated">계속: 디버그 메시지를 표시 하 고 실행을 계속 합니다.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>SilentlyContinue:   No effect.</source>
          <target state="translated">SilentlyContinue: 영향을 주지 않습니다.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>The debug message is not (Default)           displayed and execution continues without interruption.</source>
          <target state="translated">디버그 메시지가 (기본값)에 표시 되 고 중단 없이 계속 실행 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>EXAMPLES</source>
          <target state="translated">예제</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>The following examples show the effect of changing the values of $DebugPreference when a Write-Debug command is entered at the command line.</source>
          <target state="translated">다음 예제에서는 Write-debug 명령을 명령줄에 입력 되 면 $DebugPreference의 값을 변경 하는 효과 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>The change affects all debugging messages, including those generated by cmdlets and scripts.</source>
          <target state="translated">Cmdlet 및 스크립트에서 생성 된 항목을 포함 하는 모든 디버깅 메시지에 변경 내용이 적용 됩니다.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>The examples also show the use of the Debug common parameter, which displays or hides the debugging messages related to a single command.</source>
          <target state="translated">예는 Debug 일반 매개 변수를 하나의 명령에 관련 된 디버깅 메시지를 숨기 거 나 표시 하는 사용도 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>This example shows the effect of the default value, "SilentlyContinue."</source>
          <target state="translated">이 예에서는 기본값 "SilentlyContinue"로 지정 합니다. 결과 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>The debug message is not displayed and processing continues.</source>
          <target state="translated">디버그 메시지가 표시 되지 않습니다 및 처리가 계속 됩니다.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>The final command uses the Debug parameter to override the preference for a single command.</source>
          <target state="translated">마지막 명령은 단일 명령에 대 한 기본 설정을 재정의 하려면 디버그 매개 변수를 사용 합니다.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>PS&gt; $debugpreference                    # Get the current value of SilentlyContinue                          $DebugPreference</source>
          <target state="translated">&gt; $Debugpreference PS # SilentlyContinue $DebugPreference의 현재 값을 가져오려면</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>PS&gt; write-debug "Hello, World" PS&gt;                                     # The debug message is not displayed.</source>
          <target state="translated">PS &gt; write-debug PS "Hello, World" &gt; # 디버그 메시지가 표시 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>PS&gt; write-debug "Hello, World" -Debug   # Use the Debug parameter DEBUG: Hello, World                     # The debug message is displayed and confirmation is requested.</source>
          <target state="translated">PS &gt; write-debug "Hello, World"-# 디버그 Debug 매개 변수를 사용 하 여 디버그: Hello, World # 디버그 메시지가 표시 되 고 확인을 요청 합니다.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>Confirm Continue with this operation?</source>
          <target state="translated">이 작업을 계속 확인 합니까?</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>[Y] Yes  [A] Yes to All  [H] Halt Command  [S] Suspend  [?] Help (default is "Y"):</source>
          <target state="translated">[Y] 예 [] 예 [H] 중지 명령 [S] 일시 중지 [?] 도움말 (기본값은 "Y"):</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>This example shows the effect of the "Continue" value.</source>
          <target state="translated">이 예제에서는 "Continue" 값의 효과 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>The final command uses the Debug parameter with a value of $false to suppress the message for a single command.</source>
          <target state="translated">마지막 명령은 단일 명령에 대 한 메시지를 표시 하지 않으려면 $false 값 디버그 매개 변수를 사용 합니다.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>PS&gt; $debugpreference = "Continue"   # Change the value to "Continue"</source>
          <target state="translated">&gt; $Debugpreference PS = "Continue" # "continue" 값을 변경</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>PS&gt; write-debug "Hello, World" DEBUG: Hello, World                 # The debug message is displayed PS&gt;                                   and processing continues.</source>
          <target state="translated">PS &gt; write-debug "Hello, World" 디버그: Hello, World 디버그 메시지는 # PS 표시 &gt; 처리를 계속 합니다.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>PS&gt; write-debug "Hello, World" -Debug:$false Use the Debug parameter with false.</source>
          <target state="translated">PS &gt; write-debug "Hello, World"-디버그: $false false 인 디버그 매개 변수를 사용 합니다.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>PS&gt;                                 # The debug message is not displayed.</source>
          <target state="translated">PS &gt; # 디버그 메시지가 표시 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>This example shows the effect of the "Stop" value.</source>
          <target state="translated">이 예제에서는 "Stop" 값의 효과 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>The final command uses the Debug parameter with a value of $false to suppress the message for a single command.</source>
          <target state="translated">마지막 명령은 단일 명령에 대 한 메시지를 표시 하지 않으려면 $false 값 디버그 매개 변수를 사용 합니다.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>PS&gt; $debugpreference = "Stop"       #Change the value to "Stop" PS&gt; write-debug "Hello, World" DEBUG: Hello, World Write-Debug : Command execution stopped because the shell variable "DebugPreference" is set to Stop.</source>
          <target state="translated">PS &gt; $debugpreference를 "Stop" PS "Stop" 값 #Change = &gt; write-debug "Hello, World" 디버그: Hello, World Write-debug: 명령 실행 중지 셸 변수 "DebugPreference"가 Stop으로 설정 합니다.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>At line:1 char:12</source>
          <target state="translated">줄: 1 문자: 12에서</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>write-debug  &lt;&lt;&lt;&lt; "Hello, World"</source>
          <target state="translated">쓰기 디버그 &lt;&lt;&lt;&lt; "Hello, World"</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>PS&gt; write-debug "Hello, World" -Debug:$false Use the Debug parameter with $false PS&gt;                                 # The debug message is not displayed and processing is not stopped.</source>
          <target state="translated">PS &gt; write-debug "Hello, World"-디버그: $false $false PS Debug 매개 변수 사용 &gt; # 디버그 메시지가 표시 되지 않으며 처리 중지 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>This example shows the effect of the "Inquire" value.</source>
          <target state="translated">이 예제에서는 "Inquire" 값의 효과 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>The final command uses the Debug parameter with a value of $false to suppress the message for a single command.</source>
          <target state="translated">마지막 명령은 단일 명령에 대 한 메시지를 표시 하지 않으려면 $false 값 디버그 매개 변수를 사용 합니다.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>PS&gt; $debugpreference = "Inquire" PS&gt; write-debug "Hello, World" DEBUG: Hello, World</source>
          <target state="translated">&gt; $Debugpreference PS "Inquire" PS = &gt; write-debug "Hello, World" 디버그: Hello, World</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>Confirm Continue with this operation?</source>
          <target state="translated">이 작업을 계속 확인 합니까?</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>[Y] Yes  [A] Yes to All  [H] Halt Command  [S] Suspend  [?] Help (default is "Y"):</source>
          <target state="translated">[Y] 예 [] 예 [H] 중지 명령 [S] 일시 중지 [?] 도움말 (기본값은 "Y"):</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>PS&gt; write-debug "Hello, World" -Debug:$false Use the Debug parameter with $false PS&gt;                                 # The debug message is not displayed and processing continues without interruption.</source>
          <target state="translated">PS &gt; write-debug "Hello, World"-디버그: $false $false PS Debug 매개 변수 사용 &gt; # 디버그 메시지가 표시 되지 않으며 중단 없이 계속 처리 합니다.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>$ErrorActionPreference Determines how Windows PowerShell responds to a non-terminating error (an error that does not stop the cmdlet processing) at the command line or in a script, cmdlet, or provider, such as the errors generated by the Write-Error cmdlet.</source>
          <target state="translated">$ErrorActionPreference의 명령줄에서 또는 스크립트, cmdlet, 또는 쓰기 오류 cmdlet에 의해 생성 된 오류와 같은 공급자에서 Windows PowerShell 종료 되지 않는 오류 (cmdlet 처리를 중지 하지 않는 한 오류)에 반응 하는 방법을 결정 합니다.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>You can also use the ErrorAction common parameter of a cmdlet to override the preference for a specific command.</source>
          <target state="translated">또한 특정 명령에 대 한 기본 설정을 재정의 하는 cmdlet의 ErrorAction 일반 매개 변수를 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>Valid values: Stop:               Displays the error message and stops executing.</source>
          <target state="translated">유효한 값: 중지: 오류 메시지를 표시 하 고 실행을 중지 합니다.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>Inquire:            Displays the error message and asks you whether you want to continue.</source>
          <target state="translated">조회: 오류 메시지를 표시 및 계속할 것인지 묻습니다.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>Continue:           Displays the error message and continues (Default)           executing.</source>
          <target state="translated">계속: 오류 메시지를 표시 하 고 (기본값) 실행을 계속 합니다.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>Suspend:            Automatically suspends a workflow job to allow for further investigation.</source>
          <target state="translated">자동으로 일시 중단 합니다: 추가로 조사 하기 위해 수 있도록 워크플로 작업 일시 중단 합니다.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>After investigation, the workflow can be resumed.</source>
          <target state="translated">확인 한 후 워크플로 재개할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>SilentlyContinue:   No effect.</source>
          <target state="translated">SilentlyContinue: 영향을 주지 않습니다.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>The error message is not displayed and execution continues without interruption.</source>
          <target state="translated">오류 메시지가 표시 되지 않습니다 및 실행이 중단 없이 계속 됩니다.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>NOTE: The Ignore value of the ErrorAction common parameter is not a valid value of the $ErrorActionPreference variable.</source>
          <target state="translated">참고: ErrorAction 일반 매개 변수 값 무시는 $ErrorActionPreference 변수의 유효한 값을 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>The Ignore value is intended for per-command use, not for use as saved preference.</source>
          <target state="translated">Ignore 값으로 저장 된 기본 설정으로 사용할 수 없습니다 명령 당 사용 위한 것입니다.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>Neither $ErrorActionPreference nor the ErrorAction common parameter affect how Windows PowerShell responds to terminating errors (those that stop cmdlet processing).</source>
          <target state="translated">$ErrorActionPreference 아니고 ErrorAction 일반 매개 변수 Windows PowerShell (해당 되는 cmdlet 처리를 중지 하는) 종료 오류에 응답 하는 방법에 영향을 줍니다.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>For more information about the ErrorAction common parameter, see about_CommonParameters (http://go.microsoft.com/fwlink/?LinkID=113216).</source>
          <target state="translated">ErrorAction 일반 매개 변수에 대 한 자세한 내용은 about_CommonParameters (http://go.microsoft.com/fwlink/?LinkID=113216)를 참조 합니다.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>EXAMPLES</source>
          <target state="translated">예제</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>These examples show the effect of the different values of $ErrorActionPreference and the use of the ErrorAction common parameter to override the preference for a single command.</source>
          <target state="translated">이러한 예제 ErrorAction 일반 매개 변수는 단일 명령에 대 한 기본 설정을 재정의를 사용 하 여 $ErrorActionPreference의 여러 다른 값의 효과 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>The ErrorAction parameter has the same valid values as the $ErrorActionPreference variable.</source>
          <target state="translated">ErrorAction 매개 변수 $ErrorActionPreference 변수와 같은 유효한 값을 갖습니다.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>This example shows the effect of the Continue value, which is the default.</source>
          <target state="translated">이 예제에서는 기본값 계속 값의 효과 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>PS&gt; $erroractionpreference Continue# Display the value of the preference.</source>
          <target state="translated">PS &gt; $erroractionpreference 계속 # 디스플레이 기본 설정 값입니다.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>PS&gt; write-error "Hello, World" Generate a non-terminating error.</source>
          <target state="translated">PS &gt; "Hello, World"에 대 한 쓰기-오류 종료 되지 않는 오류를 생성 합니다.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>write-error "Hello, World" : Hello, World The error message is displayed and execution continues.</source>
          <target state="translated">"Hello, World" 쓰기-오류: 안녕하세요, 세계 오류 메시지가 표시 되 고 실행이 계속 됩니다.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>PS&gt; write-error "Hello, World" -ErrorAction:SilentlyContinue Use the ErrorAction parameter with a value of "SilentlyContinue".</source>
          <target state="translated">PS &gt; "Hello, World" 쓰기-오류-ErrorAction: SilentlyContinue 값이 "SilentlyContinue" 인 ErrorAction 매개 변수를 사용 합니다.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>PS&gt; The error message is not displayed and execution continues.</source>
          <target state="translated">PS &gt; 실행이 계속 되 고 오류 메시지가 표시 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source>This example shows the effect of the SilentlyContinue value.</source>
          <target state="translated">이 예제에서는 SilentlyContinue 값의 효과 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source>PS&gt; $ErrorActionPreference = "SilentlyContinue" Change the value of the preference.</source>
          <target state="translated">&gt; $ErrorActionPreference PS = "SilentlyContinue" 변경 된 기본 설정의 값입니다.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source>PS&gt; write-error "Hello, World" Generate an error message.</source>
          <target state="translated">PS &gt; 쓰기-오류 "Hello, World" 오류 메시지가 생성 됩니다.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source>PS&gt; Error message is suppressed.</source>
          <target state="translated">PS &gt; 오류 메시지가 표시 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source>PS&gt; write-error "Hello, World" -erroraction:continue Use the ErrorAction parameter with a value of "Continue".</source>
          <target state="translated">PS &gt; 쓰기 오류 "Hello, World"-erroraction: "continue" 값을 가진 ErrorAction 매개 변수를 사용 하 여 계속 합니다.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source>write-error "Hello, World" -erroraction:continue : Hello, World The error message is displayed and execution continues.</source>
          <target state="translated">쓰기 오류 "Hello, World"-erroraction: 계속: Hello, World 오류 메시지가 표시 되 고 실행이 계속 됩니다.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve">
          <source>This example shows the effect of a real error.</source>
          <target state="translated">이 예제는 실제 오류 결과 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source>In this case, the command gets a non-existent file, nofile.txt.</source>
          <target state="translated">이 경우, 명령 가져옵니다 존재 하지 파일, nofile.txt 합니다.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source>The example also uses the ErrorAction common parameter to override the preference.</source>
          <target state="translated">또한 예제에서는 기본 설정을 재정의 하는 ErrorAction 일반 매개 변수를 사용 합니다.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source>PS&gt; $erroractionpreference SilentlyContinue        # Display the value of the preference.</source>
          <target state="translated">PS &gt; $erroractionpreference SilentlyContinue # 환경 설정의 값을 표시 합니다.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve">
          <source>PS&gt; get-childitem -path nofile.txt PS&gt;                     # Error message is suppressed.</source>
          <target state="translated">PS &gt;에서 get-childitem-path nofile.txt PS &gt; # 오류 메시지가 표시 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve">
          <source>PS&gt; $ErrorActionPreference = "Continue" Change the value to Continue.</source>
          <target state="translated">&gt; $ErrorActionPreference PS = "Continue" 변경 값을 계속 합니다.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve">
          <source>PS&gt; get-childitem -path nofile.txt Get-ChildItem : Cannot find path 'C:\nofile.txt' because it does not exist.</source>
          <target state="translated">PS &gt;에서 get-childitem-path nofile.txt Get-childitem: 존재 하지 않으므로 'C:\nofile.txt' 경로 찾을 수 없습니다.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve">
          <source>At line:1 char:4</source>
          <target state="translated">줄: 1 문자: 4에 대 한</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve">
          <source>get-childitem  &lt;&lt;&lt;&lt; nofile.txt</source>
          <target state="translated">get-childitem &lt;&lt;&lt;&lt; nofile.txt</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve">
          <source>PS&gt; get-childitem -path nofile.txt -erroraction SilentlyContinue Use the ErrorAction parameter PS&gt; Error message is suppressed.</source>
          <target state="translated">PS &gt;에서 get-childitem-ErrorAction 매개 변수 PS를 사용 하는 경로 nofile.txt-erroraction SilentlyContinue &gt; 오류 메시지가 표시 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve">
          <source>PS&gt; $ErrorActionPreference = "Inquire" Change the value to Inquire.</source>
          <target state="translated">&gt; $ErrorActionPreference PS = "Inquire" 변경 값 Inquire입니다.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve">
          <source>PS&gt; get-childitem -path nofile.txt</source>
          <target state="translated">PS &gt;에서 get-childitem-path nofile.txt</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve">
          <source>Confirm Cannot find path 'C:\nofile.txt' because it does not exist.</source>
          <target state="translated">확인 존재 하지 않으므로 'C:\nofile.txt' 경로 찾을 수 없습니다.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve">
          <source>[Y] Yes  [A] Yes to All  [H] Halt Command  [S] Suspend  [?] Help (default is "Y"): y</source>
          <target state="translated">[Y] 예 [] 예 [H] 중지 명령 [S] 일시 중지 [?] 도움말 (기본값은 "Y"): y</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve">
          <source>Get-ChildItem : Cannot find path 'C:\nofile.txt' because it does not exist.</source>
          <target state="translated">Get-childitem: 존재 하지 않으므로 'C:\nofile.txt' 경로 찾을 수 없습니다.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve">
          <source>At line:1 char:4</source>
          <target state="translated">줄: 1 문자: 4에 대 한</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve">
          <source>get-childitem  &lt;&lt;&lt;&lt; nofile.txt</source>
          <target state="translated">get-childitem &lt;&lt;&lt;&lt; nofile.txt</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve">
          <source>PS&gt; $ErrorActionPreference = "Continue" Change the value to Continue.</source>
          <target state="translated">&gt; $ErrorActionPreference PS = "Continue" 변경 값을 계속 합니다.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve">
          <source>PS&gt; Get-Childitem nofile.txt -erroraction "Inquire" Use the ErrorAction parameter to override the preference value.</source>
          <target state="translated">PS &gt; Get-childitem nofile.txt-erroraction "Inquire" ErrorAction 매개 변수를 사용 하 여 기본 설정 값을 재정의할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve">
          <source>Confirm Cannot find path 'C:\nofile.txt' because it does not exist.</source>
          <target state="translated">확인 존재 하지 않으므로 'C:\nofile.txt' 경로 찾을 수 없습니다.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve">
          <source>[Y] Yes  [A] Yes to All  [H] Halt Command  [S] Suspend  [?] Help (default is "Y"):</source>
          <target state="translated">[Y] 예 [] 예 [H] 중지 명령 [S] 일시 중지 [?] 도움말 (기본값은 "Y"):</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve">
          <source>$ErrorView Determines the display format of error messages in Windows PowerShell.</source>
          <target state="translated">$ErrorView Windows PowerShell에서 오류 메시지의 표시 형식 결정 합니다.</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve">
          <source>Valid values: NormalView:         A detailed view designed for most users.</source>
          <target state="translated">유효한 값: NormalView: 대부분의 사용자를 위한 세부 정보 보기입니다.</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve">
          <source>(default)           Consists of a description of the error, the name of the object involved in the error, and arrows (&lt;&lt;&lt;&lt;) that point to the words in the command that caused the error.</source>
          <target state="translated">(기본값)           오류 및 화살표에 관련 된 개체의 이름, 오류에 대 한 설명을 구성 됩니다 (&lt;&lt;&lt;&lt;) 오류를 발생 시킨 명령에서 단어를 가리키는 합니다.</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve">
          <source>CategoryView:       A succinct, structured view designed for production environments.</source>
          <target state="translated">CategoryView: 간결 하 고 구조화 된 보기 프로덕션 환경을 위해 설계 되었습니다.</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve">
          <source>The format is: {Category}: ({TargetName}:{TargetType}):[{Activity}], {Reason}</source>
          <target state="translated">형식은: {범주}: ({TargetName}: {TargetType}): [{활동}] {Reason}</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve">
          <source>For more information about the fields in CategoryView, see "ErrorCategoryInfo class" in the Windows PowerShell SDK.</source>
          <target state="translated">CategoryView의 필드에 대 한 자세한 내용은 참조 하십시오. Windows PowerShell SDK의 "ErrorCategoryInfo 클래스"입니다.</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve">
          <source>EXAMPLES</source>
          <target state="translated">예제</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve">
          <source>These example show the effect of the ErrorView values.</source>
          <target state="translated">이 예제에서는 ErrorView 값의 영향을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve">
          <source>This example shows how an error appears when the value of $ErrorView is NormalView.</source>
          <target state="translated">이 예제에서는 $ErrorView의 값은 NormalView 때 오류가 발생 하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve">
          <source>In this case, the Get-ChildItem command is used to find a non-existent file.</source>
          <target state="translated">이 경우 Get-childitem 명령은 존재 하지 않는 파일을 찾기 위해 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve">
          <source>PS&gt; $ErrorView                         # Verify the value.</source>
          <target state="translated">&gt; $ErrorView PS # 값을 확인 합니다.</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve">
          <source>NormalView</source>
          <target state="translated">NormalView</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve">
          <source>PS&gt; get-childitem nofile.txt           # Find a non-existent file.</source>
          <target state="translated">PS &gt; get-childitem nofile.txt # 찾기는 없는 파일입니다.</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve">
          <source>Get-ChildItem : Cannot find path 'C:\nofile.txt' because it does not exist.</source>
          <target state="translated">Get-childitem: 존재 하지 않으므로 'C:\nofile.txt' 경로 찾을 수 없습니다.</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve">
          <source>At line:1 char:14</source>
          <target state="translated">줄: 1 문자: 14에서</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve">
          <source>get-childitem  &lt;&lt;&lt;&lt; nofile.txt</source>
          <target state="translated">get-childitem &lt;&lt;&lt;&lt; nofile.txt</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve">
          <source>This example shows how the same error appears when the value of $ErrorView is CategoryView.</source>
          <target state="translated">이 예제에서는 $ErrorView의 값이 CategoryView 같은 오류가 표시 되는 방식을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve">
          <source>PS&gt; $ErrorView = "CategoryView"        # Change the value to CategoryView</source>
          <target state="translated">&gt; $ErrorView PS = "CategoryView" # CategoryView 값 변경</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve">
          <source>PS&gt; get-childitem nofile.txt ObjectNotFound: (C:\nofile.txt:String) [Get-ChildItem], ItemNotFoundException</source>
          <target state="translated">PS &gt; get-childitem nofile.txt ObjectNotFound: (C:\nofile.txt:String) [Get-childitem] ItemNotFoundException</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve">
          <source>This example demonstrates that the value of ErrorView only affects the error display; it does not change the structure of the error object that is stored in the $error automatic variable.</source>
          <target state="translated">이 예제에서는 ErrorView의 값만 영향을 받는 있다는 오류 표시 합니다. $error 자동 변수에 저장 되는 오류 개체의 구조는 변경 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve">
          <source>For information about the $error automatic variable, see about_automatic_variables.</source>
          <target state="translated">$Error 자동 변수에 대 한 내용은 about_automatic_variables를 참조 합니다.</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve">
          <source>This command takes the ErrorRecord object associated with the most recent error in the error array (element 0) and formats all of the properties of the error object in a list.</source>
          <target state="translated">이 명령은 오류 배열 (요소 0)에 가장 최근의 오류와 관련 된 ErrorRecord 개체를 사용 하 고 모든 속성 목록에 있는 오류 개체의 형식.</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve">
          <source>PS&gt; $error[0] | format-list -property * -force</source>
          <target state="translated">PS &gt; $error [0] | 형식 목록-속성 *-강제로</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve">
          <source>Exception    : System.Management.Automation.ItemNotFoundException: Cannot find path 'C:\nofile.txt' because it does not exist.</source>
          <target state="translated">예외: System.Management.Automation.ItemNotFoundException: 존재 하지 않으므로 'C:\nofile.txt' 경로 찾을 수 없습니다.</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve">
          <source>at System.Management.Automation.SessionStateInternal.GetChildItems(String path, Boolean recurse, CmdletProviderContext context) at System.Management.Automation.ChildItemCmdletProviderIntrinsics.Get(String path, Boolean recurse, CmdletProviderContext context) at Microsoft.PowerShell.Commands.GetChildItemCommand.ProcessRecord() TargetObject          : C:\nofile.txt CategoryInfo          : ObjectNotFound: (C:\nofile.txt:String) [Get-ChildItem], ItemNotFoundException FullyQualifiedErrorId : PathNotFound,Microsoft.PowerShell.Commands.GetChildItemCommand ErrorDetails          : InvocationInfo        : System.Management.Automation.InvocationInfo</source>
          <target state="translated">Microsoft.PowerShell.Commands.GetChildItemCommand.ProcessRecord() TargetObject에 System.Management.Automation.ChildItemCmdletProviderIntrinsics.Get (문자열 경로, 부울 recurse, CmdletProviderContext 컨텍스트)에 System.Management.Automation.SessionStateInternal.GetChildItems (문자열 경로, 부울 recurse, CmdletProviderContext 컨텍스트)에서: C:\nofile.txt CategoryInfo: ObjectNotFound: (C:\nofile.txt:String) [Get-childitem] ItemNotFoundException FullyQualifiedErrorId: PathNotFound,Microsoft.PowerShell.Commands.GetChildItemCommand ErrorDetails: InvocationInfo: System.Management.Automation.InvocationInfo</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve">
          <source>$FormatEnumerationLimit Determines how many enumerated items are included in a display.</source>
          <target state="translated">$FormatEnumerationLimit 디스플레이에 열거 된 항목의 수가 포함 된 것을 결정 합니다.</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve">
          <source>This variable does not affect the underlying objects; just the display.</source>
          <target state="translated">이 변수는 원본 개체; 영향을 주지 않습니다. 만 표시 합니다.</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve">
          <source>When the value of $FormatEnumerationLimit is less than the number of enumerated items, Windows PowerShell adds an ellipsis (...) to indicate items not shown.</source>
          <target state="translated">$FormatEnumerationLimit 값 열거 된 항목 개수 보다 적은 경우 Windows PowerShell 표시 되지 않음 항목을 지정 하려면 줄임표 (...)를 추가 합니다.</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve">
          <source>Valid values: Integers (Int32) Default value: 4</source>
          <target state="translated">유효한 값: 정수 (Int32) 기본값: 4</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve">
          <source>EXAMPLES</source>
          <target state="translated">예제</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve">
          <source>This example shows how to use the $FormatEnumerationLimit variable to improve the display of enumerated items.</source>
          <target state="translated">이 예제에서는 열거 된 항목의 표시를 향상 시키기 $FormatEnumerationLimit 변수를 사용 하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve">
          <source>The command in this example generates a table that lists all of the services running on the computer in two groups; one for running services and one for stopped services.</source>
          <target state="translated">이 예제에서 명령은 두 개의 그룹;에 있는 컴퓨터에서 실행 되는 서비스를 모두 나열 하는 테이블을 생성 서비스의 경우와 중지 된 서비스를 실행 하기 위한 하나입니다.</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve">
          <source>It uses a Get-Service command to get all of the services, and then send the results through the pipeline to the Group-Object cmdlet, which groups the results by the service status.</source>
          <target state="translated">모든 서비스를 가져오고 다음에 서비스 상태에 따라 결과 그룹화 하는 Group-object cmdlet으로 파이프라인을 통해 결과 전송 하는 Get 서비스 명령을 사용 합니다.</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve">
          <source>The resulting display is a table that lists the status in the Name column and the processes with that status in the Group column.</source>
          <target state="translated">결과 디스플레이 그룹 열에서 해당 상태를 사용 하 여 이름 열 및 프로세스 상태를 나열 하는 테이블입니다.</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve">
          <source>(To change the column labels, use a hash table.</source>
          <target state="translated">(열 레이블을 변경 하려면 해시 테이블을 사용 합니다.</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve">
          <source>For more information, see the examples in "get-help format-table -examples".)</source>
          <target state="translated">자세한 내용은의 예제를 참조 하십시오. "-도움말 형식 테이블-예제"입니다.)</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve">
          <source>There are a maximum of 4 services listed in the Group column for each status.</source>
          <target state="translated">각 상태에 대 한 [그룹] 열에 나열 된 4 개의 서비스의 최대가 있습니다.</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve">
          <source>To increase the number of items listed, increase the value of $FormatEnumerationLimit to 1000.</source>
          <target state="translated">나열 된 항목 수를 늘리려면 $FormatEnumerationLimit 1000의 값을 늘립니다.</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve">
          <source>In the resulting display, the list in the Group column is now limited by the line length.</source>
          <target state="translated">결과 디스플레이에 목록 그룹 열에 이제 줄 길이 의해 제한 됩니다.</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve">
          <source>In the final command in the example, use the Wrap parameter of Format-Table to display all of the processes in each Status group.</source>
          <target state="translated">예제의 마지막 명령에서 각 상태 그룹의 모든 프로세스를 표시 하려면 Format-table의 줄 바꿈 매개 변수를 사용 합니다.</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve">
          <source>PS&gt; $formatenumerationlimit         # Find the current value 4</source>
          <target state="translated">&gt; $Formatenumerationlimit PS # 4의 현재 값 찾기</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve">
          <source>PS&gt; get-service | group-object -property status List all services grouped by status</source>
          <target state="translated">PS &gt; get 서비스 | 그룹-개체-속성 상태 상태별으로 그룹화 된 모든 서비스를 나열 합니다.</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve">
          <source>Count Name                      Group</source>
          <target state="translated">그룹 이름 개수</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve">
          <source>60 Running                   {AdtAgent, ALG, Ati HotKey Poller, AudioSrv...}</source>
          <target state="translated">{AdtAgent, ALG, Ati 바로 가기 키 폴 러, AudioSrv...} 60 실행</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve">
          <source>41 Stopped                   {Alerter, AppMgmt, aspnet_state, ATI Smart...}</source>
          <target state="translated">41 {Alerter, AppMgmt, aspnet_state, ATI 스마트...을 (를) 중지 됨</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve">
          <source>The list is truncated after 4 items.</source>
          <target state="translated">목록 4 개 항목이 후 잘립니다.</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve">
          <source>PS&gt; $formatenumerationlimit = 1000 Increase the limit to 1000.</source>
          <target state="translated">PS $formatenumerationlimit &gt; = 1000 증가를 1000 개로 제한 합니다.</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve">
          <source>PS&gt; get-service | group-object -property status Repeat the command.</source>
          <target state="translated">PS &gt; get 서비스 | 그룹-개체-속성 상태 명령을 반복 합니다.</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve">
          <source>Count Name     Group</source>
          <target state="translated">그룹 이름 개수</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve">
          <source>60 Running  {AdtAgent, ALG, Ati HotKey Poller, AudioSrv, BITS, CcmExec... 41 Stopped  {Alerter, AppMgmt, aspnet_state, ATI Smart, Browser, CiSvc...</source>
          <target state="translated">60 실행 {AdtAgent, ALG, Ati 바로 가기 키 폴 러, AudioSrv, BITS, CcmExec... 41 Stopped {Alerter, AppMgmt, aspnet_state, ATI 스마트, 브라우저, CiSvc...</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve">
          <source>PS&gt; get-service | group-object -property status | format-table -wrap Add the Wrap parameter.</source>
          <target state="translated">PS &gt; get 서비스 | -개체-그룹 속성 상태 | 표 서식-추가 Wrap 매개 변수를 래핑합니다.</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve">
          <source>Count Name       Group</source>
          <target state="translated">그룹 이름 개수</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve">
          <source>60 Running    {AdtAgent, ALG, Ati HotKey Poller, AudioSrv, BITS, CcmExec, Client for NFS, CryptSvc, DcomLaunch, Dhcp, dmserver, Dnscache, ERSvc, Eventlog, EventSystem, FwcAgent, helpsvc, HidServ, IISADMIN, InoRPC, InoRT, InoTask, lanmanserver, lanmanworkstation, LmHosts, MDM, Netlogon, Netman, Nla, NtLmSsp, PlugPlay, PolicyAgent, ProtectedStorage, RasMan, RemoteRegistry, RpcSs, SamSs, Schedule, seclogon, SENS, SharedAccess, ShellHWDetection, SMT PSVC, Spooler, srservice, SSDPSRV, stisvc, TapiSrv, TermService, Themes, TrkWks, UMWdf, W32Time, W3SVC, WebClient, winmgmt, wscsvc, wuauserv, WZCSVC, zzInterix}</source>
          <target state="translated">60 실행 {AdtAgent, ALG, Ati 바로 가기 키 폴 러, AudioSrv, BITS, CcmExec, NFS "," CryptSvc "," DcomLaunch "," Dhcp "," dmserver, 클라이언트 누릅니다, ERSvc, 이벤트 로그, 이벤트 시스템, FwcAgent, helpsvc, HidServ, IISADMIN, InoRPC, InoRT, InoTask, lanmanserver, lanmanworkstation, LmHosts, MDM, Netlogon, Netman, Nla, NtLmSsp, PlugPlay, PolicyAgent, ProtectedStorage, RasMan, RemoteRegistry, RpcSs, SamSs, 일정, seclogon, SENS "," SharedAccess "," ShellHWDetection "," SMT PSVC "," 스풀러 srservice, SSDPSRV, stisvc, TapiSrv, TermService, 테마, TrkWks, UMWdf, W32Time, W3SVC WebClient winmgmt, wscsvc, wuauserv, WZCSVC, zzInterix}</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve">
          <source>41 Stopped    {Alerter, AppMgmt, aspnet_state, ATI Smart, Browser, CiSvc, ClipSrv, clr_optimization_v2.0.50727_32, COMSysApp, CronService, dmadmin, FastUserSwitchingCompatibility, HTTPFilter, ImapiService, Mapsvc, Messenger, mnmsrvc, MSDTC, MSIServer, msvsmon80, NetDDE, NetDDEdsdm, NtmsSvc, NVSvc, ose, RasAuto, RDSessMgr, RemoteAccess, RpcLocator, SCardSvr, SwPrv, SysmonLog, TlntSvr, upnphost, UPS, VSS, WmdmPmSN, Wmi, WmiApSrv, xmlprov}</source>
          <target state="translated">41 Stopped {Alerter, AppMgmt, aspnet_state, ATI 스마트, 브라우저, CiSvc, ClipSrv, clr_optimization_v2.0.50727_32, COMSysApp, CronService, dmadmin FastUserSwitchingCompatibility, HTTPFilter, ImapiService, Mapsvc, 메신저, mnmsrvc, MSDTC, MSIServer, msvsmon80, NetDDE, NetDDEdsdm, NtmsSvc, NVSvc, ose, RasAuto, RDSessMgr, 원격 액세스, RpcLocator, SCardSvr, SwPrv, SysmonLog, TlntSvr, upnphost, UPS, VSS, WmdmPmSN, Wmi, WmiApSrv, xmlprov}</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve">
          <source>$InformationPreference The $InformationPreference variable lets you set information stream preferences (specifically, informational messages that you have added to commands or scripts by adding the Write-Information cmdlet, and want displayed to users) for a Windows PowerShell session.</source>
          <target state="translated">$InformationPreference the $InformationPreference 변수 사용 하면 스트림 기본 설정 (특히, 정보 메시지 쓰기 정보 cmdlet를 추가 하 여 명령 또는 스크립트를 추가 하 고 사용자에 게 표시할) 정보를 설정 하는 Windows PowerShell 세션에 대 한 합니다.</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve">
          <source>The value of the -InformationAction parameter, if used, overrides the current value of the $InformationPreference variable.</source>
          <target state="translated">-InformationAction 매개 변수 값을 사용 하는 경우 $InformationPreference 변수의 현재 값을 재정의 합니다.</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve">
          <source>Valid values: Stop:               Stops a command or script at an occurrence of the Write-Information command.</source>
          <target state="translated">유효한 값: 중지: 명령 또는 쓰기 정보 명령이 있는 경우에는 스크립트를 중지 합니다.</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve">
          <source>Inquire:            Displays the informational message that you specify in a Write-Information command, then asks whether you want to continue.</source>
          <target state="translated">문의: 쓰기 정보 명령에 지정 하는 정보 제공 용 이므로 메시지를 표시 한 다음 계속 묻는 합니다.</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve">
          <source>Continue:           Displays the informational message, and continues running.</source>
          <target state="translated">계속: 정보 메시지를 표시 하 고 계속 실행 됩니다.</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve">
          <source>Suspend:            Automatically suspends a workflow job after a Write-Information command is carried out, to allow users to see the messages before continuing.</source>
          <target state="translated">정보 쓰기 명령을 수행 되어, 계속 하기 전에 메시지를 볼 수 있도록 워크플로 작업을 일시 중단 자동으로 일시 중단: 합니다.</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve">
          <source>The workflow can be resumed at the user’s discretion.</source>
          <target state="translated">사용자의 판단에 따라 워크플로 재개할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve">
          <source>SilentlyContinue:   No effect.</source>
          <target state="translated">SilentlyContinue: 영향을 주지 않습니다.</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve">
          <source>The informational messages are not (Default)             displayed, and the script continues without interruption.</source>
          <target state="translated">정보 메시지는 (기본값)이 표시 하 고 스크립트가 중단 없이 계속 실행 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve">
          <source>$Log<bpt id="p1">*</bpt>Event The Log<ept id="p1">*</ept>Event preference variables determine which types of events are written to the Windows PowerShell event log in Event Viewer.</source>
          <target state="translated">$Log<bpt id="p1">*</bpt>이벤트 로그<ept id="p1">*</ept>이벤트 기본 설정 변수 확인 이벤트의 유형을 이벤트 뷰어에서 Windows PowerShell 이벤트 로그에 기록 됩니다.</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve">
          <source>By default, only engine and provider events are logged, but you can use the Log*Event preference variables to customize your log, such as logging events about commands.</source>
          <target state="translated">기본적으로, 엔진 및 공급자 이벤트만 기록 되지만 로그를 사용할 수 있습니다 * 예: 명령에 대 한 로깅 이벤트 로그에 사용자 지정 하려면 기본 설정 변수 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve">
          <source>The Log*Event preference variables are as follows:</source>
          <target state="translated">로그 * 이벤트 기본 설정 변수는 다음과 같습니다.</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve">
          <source>$LogCommandHealthEvent: Logs errors and exceptions in command initialization and processing.</source>
          <target state="translated">$LogCommandHealthEvent: 명령 초기화 및 처리가 오류 및 예외를 기록 합니다.</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve">
          <source>Default = $false (not logged).</source>
          <target state="translated">기본값 = $false (로깅되지 않음).</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve">
          <source>$LogCommandLifecycleEvent: Logs the starting and stopping of commands and command pipelines and security exceptions in command discovery.</source>
          <target state="translated">$LogCommandLifecycleEvent: 명령 검색의 시작 및 중지 명령 및 명령 파이프라인 및 보안 예외를 기록 합니다.</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve">
          <source>Default = $false (not logged).</source>
          <target state="translated">기본값 = $false (로깅되지 않음).</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve">
          <source>$LogEngineHealthEvent: Logs errors and failures of sessions.</source>
          <target state="translated">$LogEngineHealthEvent: 오류 및 세션의 실패를 기록 합니다.</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve">
          <source>Default = $true (logged).</source>
          <target state="translated">기본값 = $true (기록).</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve">
          <source>$LogEngineLifecycleEvent: Logs the opening and closing of sessions.</source>
          <target state="translated">$LogEngineLifecycleEvent: 열기 및 닫기 세션을 기록 합니다.</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve">
          <source>Default = $true (logged).</source>
          <target state="translated">기본값 = $true (기록).</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve">
          <source>$LogProviderHealthEvent: Logs provider errors, such as read and write errors, lookup errors, and invocation errors.</source>
          <target state="translated">$LogProviderHealthEvent:와 같은 읽기 및 쓰기 오류, 조회 오류 및 호출 오류 로그 공급자 오류입니다.</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve">
          <source>Default = $true (logged).</source>
          <target state="translated">기본값 = $true (기록).</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve">
          <source>$LogProviderLifecycleEvent: Logs adding and removing of Windows PowerShell providers.</source>
          <target state="translated">$LogProviderLifecycleEvent: 추가 하 고 Windows PowerShell 공급자의 제거를 기록 합니다.</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve">
          <source>Default = $true (logged).</source>
          <target state="translated">기본값 = $true (기록).</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve">
          <source>(For information about Windows PowerShell providers, type: "get-help about_provider".</source>
          <target state="translated">(Windows PowerShell 공급자에 대 한 정보를 입력: "get-help about_provider"입니다.</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve">
          <source>To enable a Log*Event, type the variable with a value of $true, for example:</source>
          <target state="translated">로그를 사용 하도록 설정 하려면 * 이벤트, 예를 들어 $true의 값으로 변수를 입력 합니다.</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve">
          <source>$LogCommandLifeCycleEvent</source>
          <target state="translated">$LogCommandLifeCycleEvent</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve">
          <source>or -</source>
          <target state="translated">또는-</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve">
          <source>$LogCommandLifeCycleEvent = $true</source>
          <target state="translated">$LogCommandLifeCycleEvent $true =</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve">
          <source>To disable an event type, type the variable with a value of $false, for example:</source>
          <target state="translated">이벤트 종류를 사용 하지 않으려면 예를 들어 $false의 값으로 변수를 입력 합니다.</target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve">
          <source>$LogCommandLifeCycleEvent = $false</source>
          <target state="translated">$LogCommandLifeCycleEvent $false =</target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve">
          <source>The events that you enable are effective only for the current Windows PowerShell console.</source>
          <target state="translated">이벤트를 사용 하도록 설정 하면 현재 Windows PowerShell 콘솔에만 적용 됩니다.</target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve">
          <source>To apply the configuration to all consoles, save the variable settings in your Windows PowerShell profile.</source>
          <target state="translated">모든 콘솔에 구성을 적용 하려면 변수 설정을 Windows PowerShell 프로필에 저장 합니다.</target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve">
          <source>$MaximumAliasCount Determines how many aliases are permitted in a Windows PowerShell session.</source>
          <target state="translated">$MaximumAliasCount 얼마나 많은 별칭 Windows PowerShell 세션에서 허용 되는지 결정 합니다.</target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve">
          <source>The default value, 4096, should be sufficient for most uses, but you can adjust it to meet your needs.</source>
          <target state="translated">기본값인 4096 충분 해야 대부분의 사용 하지만 요구 사항에 맞게 조정할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve">
          <source>Valid values: 1024 - 32768 (Int32) Default: 4096</source>
          <target state="translated">유효한 값: 1024-32768 (Int32) 기본값: 4, 096</target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve">
          <source>To count the aliases on your system, type:</source>
          <target state="translated">시스템에 별칭을 계산 하려면 다음을 입력 합니다.</target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve">
          <source>(get-alias).count</source>
          <target state="translated">(get-별칭).count</target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve">
          <source>$MaximumDriveCount Determines how many Windows PowerShell drives are permitted in a given session.</source>
          <target state="translated">$MaximumDriveCount Windows PowerShell 드라이브 수는 해당된 세션에서 허용 되는지 결정 합니다.</target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve">
          <source>This includes file system drives and data stores that are exposed by Windows PowerShell providers and appear as drives, such as the Alias: and HKLM: drives.</source>
          <target state="translated">파일 시스템 드라이브와 데이터 저장소를 Windows PowerShell 공급자에 의해 노출 되 고 별칭 등 드라이브로 표시 포함: 및 HKLM: 드라이브입니다.</target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve">
          <source>Valid values: 1024 - 32768 (Int32) Default: 4096</source>
          <target state="translated">유효한 값: 1024-32768 (Int32) 기본값: 4, 096</target>       </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve">
          <source>To count the aliases on your system, type:</source>
          <target state="translated">시스템에 별칭을 계산 하려면 다음을 입력 합니다.</target>       </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve">
          <source>(get-psdrive).count</source>
          <target state="translated">(get psdrive).count</target>       </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve">
          <source>$MaximumErrorCount Determines how many errors are saved in the error history for the session.</source>
          <target state="translated">$MaximumErrorCount 결정 오류 수에 저장 됩니다 오류 기록 세션.</target>       </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve">
          <source>Valid values: 256 - 32768 (Int32) Default: 256</source>
          <target state="translated">유효한 값: 256 32768 (Int32) 기본값: 256</target>       </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve">
          <source>Objects that represent each retained error are stored in the $Error automatic variable.</source>
          <target state="translated">보관 된 각 오류를 나타내는 개체를 $Error 자동 변수에 저장 됩니다.</target>       </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve">
          <source>This variable contains an array of error record objects, one for each error.</source>
          <target state="translated">이 변수는 각 오류에 대 한 오류 레코드 개체의 배열을 포함합니다.</target>       </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve">
          <source>The most recent error is the first object in the array ($Error[0]).</source>
          <target state="translated">가장 최근의 오류 ($Error[0]) 배열에서 첫 번째 개체는.</target>       </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve">
          <source>To count the errors on your system, use the Count property of the $Error array.</source>
          <target state="translated">시스템에서 오류를 계산 하는 $Error 배열의 Count 속성을 사용 합니다.</target>       </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve">
          <source>Type:</source>
          <target state="translated">다음을 입력합니다.</target>       </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve">
          <source>$Error.count</source>
          <target state="translated">$Error.count</target>       </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve">
          <source>To display a specific error, use array notation to display the error.</source>
          <target state="translated">특정 오류를 표시 하려면 오류를 표시 하려면 배열 표기법을 사용 합니다.</target>       </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve">
          <source>For example, to see the most recent error, type:</source>
          <target state="translated">예를 들어 가장 최근의 오류를 확인 하려면 다음을 입력 합니다.</target>       </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve">
          <source>$Error[0]</source>
          <target state="translated">$Error [0]</target>       </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve">
          <source>To display the oldest retained error, type:</source>
          <target state="translated">가장 오래 된 보관 된 오류를 표시 하려면 다음을 입력 합니다.</target>       </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve">
          <source>$Error[($Error.Count -1]</source>
          <target state="translated">$Error [($Error.Count-1]</target>       </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve">
          <source>To display the properties of the ErrorRecord object, type:</source>
          <target state="translated">ErrorRecord 개체의 속성을 표시 하려면 다음을 입력 합니다.</target>       </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve">
          <source>$Error[0] | format-list -property * -force</source>
          <target state="translated">[0] $Error | 형식 목록-속성 *-강제로</target>       </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve">
          <source>In this command, the Force parameter overrides the special formatting of ErrorRecord objects and reverts to the conventional format.</source>
          <target state="translated">이 명령은 Force 매개 변수 ErrorRecord 개체의 특수 한 형식 지정을 무시 하 고 기본 형식으로 돌아갑니다.</target>       </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve">
          <source>To delete all errors from the error history, use the Clear method of the error array.</source>
          <target state="translated">오류 기록에서 모든 오류를 삭제 하려면 오류 배열 Clear 메서드를 사용 합니다.</target>       </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve">
          <source>PS&gt; $Error.count 17 PS&gt; $Error.clear() PS&gt; PS&gt; $Error.count 0</source>
          <target state="translated">PS &gt; 17 $Error.count PS &gt; $Error.clear() PS &gt; PS &gt; $Error.count 0</target>       </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve">
          <source>To find all properties and methods of an error array, use the Get-Member cmdlet with its InputObject parameter.</source>
          <target state="translated">모든 속성 및 메서드에 오류 배열를 찾으려면 Get-member cmdlet를 사용 하 여 InputObject 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve">
          <source>When you pipe a collection of objects to Get-Member, Get-Member displays the properties and methods of the objects in the collection.</source>
          <target state="translated">컬렉션의 개체를 Get-member로 파이프 하면 Get-member 컬렉션의 개체의 메서드와 속성을 표시 합니다.</target>       </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve">
          <source>When you use the InputObject parameter of Get-Member, Get-Member displays the properties and methods of the collection.</source>
          <target state="translated">Get-member의 InputObject 매개 변수를 사용 하면 Get-member는 컬렉션의 메서드와 속성을 표시 합니다.</target>       </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve">
          <source>$MaximumFunctionCount Determines how many functions are permitted in a given session.</source>
          <target state="translated">$MaximumFunctionCount 얼마나 많은 기능은 해당된 세션에서 허용 되는지 결정 합니다.</target>       </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve">
          <source>Valid values: 1024 - 32768 (Int32) Default: 4096</source>
          <target state="translated">유효한 값: 1024-32768 (Int32) 기본값: 4, 096</target>       </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve">
          <source>To see the functions in your session, use the Windows PowerShell Function: drive that is exposed by the Windows PowerShell Function provider.</source>
          <target state="translated">세션에서 함수를 보려면 Windows PowerShell 함수를 사용 합니다: Windows PowerShell 함수 공급자에 의해 노출 되는 드라이브.</target>       </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve">
          <source>(For more information about the Function provider, type "get-help function").</source>
          <target state="translated">(함수 공급자에 대 한 자세한 내용은 "get-help 입력 함수").</target>       </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve">
          <source>To list the functions in the current session, type:</source>
          <target state="translated">현재 세션의 함수를 나열 하려면 다음을 입력 합니다.</target>       </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve">
          <source>get-childitem function:</source>
          <target state="translated">get-childitem 함수:</target>       </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve">
          <source>To count the functions in the current session, type:</source>
          <target state="translated">현재 세션의 함수를 계산 하려면 다음을 입력 합니다.</target>       </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve">
          <source>(get-childitem function:).count</source>
          <target state="translated">(get-childitem 함수:).count</target>       </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve">
          <source>$MaximumHistoryCount Determines how many commands are saved in the command history for the current session.</source>
          <target state="translated">$MaximumHistoryCount 결정 얼마나 많은 명령은 저장 됩니다 명령 기록에서 현재 세션에 대 한.</target>       </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve">
          <source>Valid values: 1 - 32768 (Int32) Default: 4096</source>
          <target state="translated">유효한 값: 1-32768 (Int32) 기본값: 4, 096</target>       </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve">
          <source>To determine the number of commands current saved in the command history, type:</source>
          <target state="translated">현재 명령 기록에 저장 된 명령 수를 확인 하려면 다음을 입력 합니다.</target>       </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve">
          <source>(get-history).count</source>
          <target state="translated">(기록 가져오기).count</target>       </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve">
          <source>To see the command saved in your session history, use the Get-History cmdlet.</source>
          <target state="translated">세션 기록에 저장 하는 명령이 표시 Get-history cmdlet을 사용 합니다.</target>       </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve">
          <source>For more information, see about_History (http://go.microsoft.com/fwlink/?LinkID=113233).</source>
          <target state="translated">자세한 내용은 about_History (http://go.microsoft.com/fwlink/?LinkID=113233)를 참조 하십시오.</target>       </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve">
          <source>NOTE: In Windows PowerShell 2.0, the default value of the $MaximumHistoryCount variable is 64.</source>
          <target state="translated">참고: Windows PowerShell 2.0에서 $MaximumHistoryCount 변수의 기본값은 64입니다.</target>       </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve">
          <source>$MaximumVariableCount Determines how many variables are permitted in a given session, including automatic variables, preference variables, and the variables that you create in commands and scripts.</source>
          <target state="translated">$MaximumVariableCount 결정 변수의 개수 자동 변수, 기본 설정 변수 및 명령 및 스크립트에서 만든 변수를 포함 하 여 지정 된 세션에서 허용 됩니다.</target>       </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve">
          <source>Valid values: 1024 - 32768 (Int32) Default: 4096</source>
          <target state="translated">유효한 값: 1024-32768 (Int32) 기본값: 4, 096</target>       </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve">
          <source>To see the variables in your session, use the Get-Variable cmdlet and the features of the Windows PowerShell Variable: drive and the Windows PowerShell Variable provider.</source>
          <target state="translated">세션에서 변수를 보려면 Windows PowerShell 변수의 기능과 Get-variable cmdlet을 사용 하 여: 드라이브와 Windows PowerShell 변수 공급자입니다.</target>       </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve">
          <source>For information about the Variable provider, type "get-help variable".</source>
          <target state="translated">변수 공급자에 대 한 내용은 "get-help 변수"를 입력 합니다.</target>       </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve">
          <source>To find the current number of variables on the system, type:</source>
          <target state="translated">시스템에서 현재 변수 수를 찾으려면 다음을 입력 합니다.</target>       </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve">
          <source>(get-variable).count</source>
          <target state="translated">(get 변수).count</target>       </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve">
          <source>$OFS Output Field Separator.</source>
          <target state="translated">$OFS 출력 필드 구분 기호입니다.</target>       </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve">
          <source>Specifies the character that separates the elements of an array when the array is converted to a string.</source>
          <target state="translated">배열을 문자열로 변환 될 때 배열 요소를 구분 하는 문자를 지정 합니다.</target>       </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve">
          <source>Valid values: Any string.</source>
          <target state="translated">유효한 값: 모든 문자열.</target>       </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve">
          <source>Default: Space</source>
          <target state="translated">기본값: 공간</target>       </trans-unit>
        <trans-unit id="412" translate="yes" xml:space="preserve">
          <source>By default, the $OFS variable does not exist and the output file separator is a space, but you can add this variable and set it to any string.</source>
          <target state="translated">기본적으로 $OFS 변수 및 출력 파일 구분 기호는 공백, 없지만이 변수를 추가 하 고 모든 문자열을 설정할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="413" translate="yes" xml:space="preserve">
          <source>EXAMPLES</source>
          <target state="translated">예제</target>       </trans-unit>
        <trans-unit id="414" translate="yes" xml:space="preserve">
          <source>This example shows that a space is used to separate the values when an array is converted to a string.</source>
          <target state="translated">이 예제에서는 배열을 문자열로 변환 될 때 값을 구분 하는 공간을 사용을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="415" translate="yes" xml:space="preserve">
          <source>In this case, an array of integers is stored in a variable and then the variable is cast as a string.</source>
          <target state="translated">이 경우 정수 배열을 변수에 저장 됩니다 하 고 변수를 문자열로 캐스팅할.</target>       </trans-unit>
        <trans-unit id="416" translate="yes" xml:space="preserve">
          <source>PS&gt; $array = 1,2,3                 # Store an array of integers.</source>
          <target state="translated">&gt; $Array PS = 1,2,3 # Store 정수의 배열입니다.</target>       </trans-unit>
        <trans-unit id="417" translate="yes" xml:space="preserve">
          <source>PS&gt; [string]$array                 # Cast the array to a string.</source>
          <target state="translated">PS &gt; [문자열] $array # 배열을 문자열로 캐스팅 합니다.</target>       </trans-unit>
        <trans-unit id="418" translate="yes" xml:space="preserve">
          <source>1 2 3                              # Spaces separate the elements</source>
          <target state="translated">1 2 3 # 공백으로 구분 된 요소</target>       </trans-unit>
        <trans-unit id="419" translate="yes" xml:space="preserve">
          <source>To change the separator, add the $OFS variable by assigning a value to it.</source>
          <target state="translated">구분 기호를 변경 하려면 값을 할당 하 여 $OFS 변수를 추가 합니다.</target>       </trans-unit>
        <trans-unit id="420" translate="yes" xml:space="preserve">
          <source>To work correctly, the variable must be named $OFS.</source>
          <target state="translated">제대로 작동 하려면 변수 $OFS를 명명 해야 합니다.</target>       </trans-unit>
        <trans-unit id="421" translate="yes" xml:space="preserve">
          <source>PS&gt; $OFS = "+"                     # Create $OFS and assign a "+"</source>
          <target state="translated">&gt; $OFS PS = "+" # $OFS를 만들고 할당는 "+"</target>       </trans-unit>
        <trans-unit id="422" translate="yes" xml:space="preserve">
          <source>PS&gt; [string]$array                 # Repeat the command 1+2+3                              # Plus signs separate the elements</source>
          <target state="translated">PS &gt; [문자열] $array # 명령을 반복 1 + 2 + 3 # 더하기 기호는 요소를 구분 합니다.</target>       </trans-unit>
        <trans-unit id="423" translate="yes" xml:space="preserve">
          <source>To restore the default behavior, you can assign a space (" ") to the value of $OFS or delete the variable.</source>
          <target state="translated">기본 동작을 복원 하는 공간을 할당할 수 있습니다 ("")을 $OFS 또는 삭제는 변수 값입니다.</target>       </trans-unit>
        <trans-unit id="424" translate="yes" xml:space="preserve">
          <source>This command deletes the variable and then verifies that the separator is a space.</source>
          <target state="translated">이 명령은 변수를 삭제 하 고 구분 기호 공간이 있는지를 확인 합니다.</target>       </trans-unit>
        <trans-unit id="425" translate="yes" xml:space="preserve">
          <source>PS&gt; Remove-Variable OFS            # Delete $OFS PS&gt;</source>
          <target state="translated">PS &gt; Remove-variable OFS # 삭제 $OFS PS &gt;</target>       </trans-unit>
        <trans-unit id="426" translate="yes" xml:space="preserve">
          <source>PS&gt; [string]$array                 # Repeat the command 1 2 3                              # Spaces separate the elements</source>
          <target state="translated">PS &gt; [문자열] $array # 반복 명령 1 2 3 # 공간 별도 요소</target>       </trans-unit>
        <trans-unit id="427" translate="yes" xml:space="preserve">
          <source>$OutputEncoding Determines the character encoding method that Windows PowerShell uses when it sends text to other applications.</source>
          <target state="translated">$OutputEncoding 문자 인코딩 다른 응용 프로그램에 텍스트를 보낼 때 Windows PowerShell을 사용 하는 메서드를 결정 합니다.</target>       </trans-unit>
        <trans-unit id="428" translate="yes" xml:space="preserve">
          <source>For example, if an application returns Unicode strings to Windows PowerShell, you might need to change the value to UnicodeEncoding to send the characters correctly.</source>
          <target state="translated">예를 들어, Windows PowerShell에 유니코드 문자열을 반환 하는 응용 프로그램, 문자를 올바르게 보내도록 UnicodeEncoding에 값을 변경 하려면 할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="429" translate="yes" xml:space="preserve">
          <source>Valid values: Objects derived from an Encoding class, such as ASCIIEncoding, SBCSCodePageEncoding, UTF7Encoding, UTF8Encoding, UTF32Encoding, and UnicodeEncoding.</source>
          <target state="translated">유효한 값: ASCIIEncoding, SBCSCodePageEncoding, UTF7Encoding, UTF8Encoding, UTF32Encoding, UnicodeEncoding 등는 Encoding 클래스에서 파생 된 개체입니다.</target>       </trans-unit>
        <trans-unit id="430" translate="yes" xml:space="preserve">
          <source>Default: ASCIIEncoding object (System.Text.ASCIIEncoding)</source>
          <target state="translated">기본값: ASCIIEncoding 개체 (System.Text.ASCIIEncoding)</target>       </trans-unit>
        <trans-unit id="431" translate="yes" xml:space="preserve">
          <source>EXAMPLES</source>
          <target state="translated">예제</target>       </trans-unit>
        <trans-unit id="432" translate="yes" xml:space="preserve">
          <source>This example shows how to make the FINDSTR command in Windows work in Windows PowerShell on a computer that is localized for a language that uses Unicode characters, such as Chinese.</source>
          <target state="translated">이 예제에는 Windows의 FINDSTR 명령과 중국어 등의 유니코드 문자를 사용 하는 언어에 대 한 지역화 된 컴퓨터에서 Windows PowerShell에서 작동 하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="433" translate="yes" xml:space="preserve">
          <source>The first command finds the value of $OutputEncoding.</source>
          <target state="translated">첫 번째 명령은 $OutputEncoding의 값을 찾습니다.</target>       </trans-unit>
        <trans-unit id="434" translate="yes" xml:space="preserve">
          <source>Because the value is an encoding object, display only its EncodingName property.</source>
          <target state="translated">인코딩 개체 값 이므로 해당 EncodingName 속성을 표시 합니다.</target>       </trans-unit>
        <trans-unit id="435" translate="yes" xml:space="preserve">
          <source>PS&gt; $OutputEncoding.EncodingName  # Find the current value US-ASCII</source>
          <target state="translated">PS &gt; $OutputEncoding.EncodingName # US-ASCII 현재 값 찾기</target>       </trans-unit>
        <trans-unit id="436" translate="yes" xml:space="preserve">
          <source>In this example, a FINDSTR command is used to search for two Chinese characters that are present in the Test.txt file.</source>
          <target state="translated">이 예제에서는 Test.txt 파일에 존재 하는 두 중국어 문자를 찾기 위해 FINDSTR 명령을 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="437" translate="yes" xml:space="preserve">
          <source>When this FINDSTR command is run in the Windows Command Prompt (Cmd.exe), FINDSTR finds the characters in the text file.</source>
          <target state="translated">이 FINDSTR 명령을에서 Windows 명령 프롬프트 (Cmd.exe)를 실행 하는 FINDSTR 텍스트 파일에서 문자를 찾습니다.</target>       </trans-unit>
        <trans-unit id="438" translate="yes" xml:space="preserve">
          <source>However, when you run the same FINDSTR command in Windows PowerShell, the characters are not found because the Windows PowerShell sends them to FINDSTR in ASCII text, instead of in Unicode text.</source>
          <target state="translated">그러나 동일한 FINDSTR 명령을 Windows powershell에서을 실행 하면 문자를 찾을 수 없는 Windows PowerShell에 보내 FINDSTR ASCII 텍스트에서 대신 유니코드 텍스트로 때문에 있습니다.</target>       </trans-unit>
        <trans-unit id="439" translate="yes" xml:space="preserve">
          <source>PS&gt; findstr &lt;Unicode-characters&gt;  # Use findstr to search.</source>
          <target state="translated">PS &gt; findstr &lt; 유니코드 문자 &gt; # 사용 findstr을 찾으려고 합니다.</target>       </trans-unit>
        <trans-unit id="440" translate="yes" xml:space="preserve">
          <source>PS&gt;                               # None found.</source>
          <target state="translated">PS &gt; #을 찾을 수 없습니다.</target>       </trans-unit>
        <trans-unit id="441" translate="yes" xml:space="preserve">
          <source>To make the command work in Windows PowerShell, set the value of $OutputEncoding to the value of the OutputEncoding property of the console, which is based on the locale selected for Windows.</source>
          <target state="translated">명령이 Windows PowerShell에서 작동 하는 로캘을 기반으로 Windows에 대해 선택한 콘솔의 OutputEncoding 속성의 값에 $OutputEncoding의 값을 설정 합니다.</target>       </trans-unit>
        <trans-unit id="442" translate="yes" xml:space="preserve">
          <source>Because OutputEncoding is a static property of the console, use double-colons (::) in the command.</source>
          <target state="translated">OutputEncoding 콘솔의 정적 속성 이기 때문에 명령에 이중 콜론 (:)를 사용 합니다.</target>       </trans-unit>
        <trans-unit id="443" translate="yes" xml:space="preserve">
          <source>PS&gt; $OutputEncoding = [console]::outputencoding PS&gt;                               # Set the value equal to the OutputEncoding property of the console.</source>
          <target state="translated">PS $OutputEncoding &gt; = [콘솔]:: outputencoding PS &gt; # 값 설정 콘솔의 OutputEncoding 속성에 있습니다.</target>       </trans-unit>
        <trans-unit id="444" translate="yes" xml:space="preserve">
          <source>PS&gt; $OutputEncoding.EncodingName OEM United States Find the resulting value.</source>
          <target state="translated">PS &gt; $OutputEncoding.EncodingName OEM 미국 결과 값을 찾습니다.</target>       </trans-unit>
        <trans-unit id="445" translate="yes" xml:space="preserve">
          <source>As a result of this change, the FINDSTR command finds the characters.</source>
          <target state="translated">이러한 변경으로 인해 FINDSTR 명령을 문자를 찾습니다.</target>       </trans-unit>
        <trans-unit id="446" translate="yes" xml:space="preserve">
          <source>PS&gt; findstr &lt;Unicode-characters&gt; test.txt:         &lt;Unicode-characters&gt;</source>
          <target state="translated">PS &gt; test.txt findstr &lt; 유니코드 문자 &gt;: &lt; 유니코드 문자 &gt;</target>       </trans-unit>
        <trans-unit id="447" translate="yes" xml:space="preserve">
          <source>Use findstr to search.</source>
          <target state="translated">Findstr을 사용 하 여 검색 합니다.</target>       </trans-unit>
        <trans-unit id="448" translate="yes" xml:space="preserve">
          <source>It find the characters in the text file.</source>
          <target state="translated">텍스트 파일에는 문자를 찾습니다.</target>       </trans-unit>
        <trans-unit id="449" translate="yes" xml:space="preserve">
          <source>$ProgressPreference Determines how Windows PowerShell responds to progress updates generated by a script, cmdlet or provider, such as the progress bars generated by the Write-Progress cmdlet.</source>
          <target state="translated">$ProgressPreference Windows PowerShell 스크립트, cmdlet 또는 Write-progress cmdlet에 의해 생성 된 진행률 표시줄와 같은 공급자에 의해 생성 된 진행 상황 업데이트에 반응 하는 방법을 결정 합니다.</target>       </trans-unit>
        <trans-unit id="450" translate="yes" xml:space="preserve">
          <source>The Write-Progress cmdlet creates progress bars that depict the status of a command.</source>
          <target state="translated">Write-progress cmdlet 명령 상태를 설명 하는 진행률 표시줄을 만듭니다.</target>       </trans-unit>
        <trans-unit id="451" translate="yes" xml:space="preserve">
          <source>Valid values: Stop:               Does not display the progress bar.</source>
          <target state="translated">유효한 값: 중지: 진행률 표시줄이 표시 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="452" translate="yes" xml:space="preserve">
          <source>Instead, it displays an error message and stops executing.</source>
          <target state="translated">대신, 오류 메시지를 표시 하 고 실행을 중지 합니다.</target>       </trans-unit>
        <trans-unit id="453" translate="yes" xml:space="preserve">
          <source>Inquire:            Does not display the progress bar.</source>
          <target state="translated">문의: 진행률 표시줄이 표시 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="454" translate="yes" xml:space="preserve">
          <source>Prompts for permission to continue.</source>
          <target state="translated">계속 하려면 사용 권한이 대 한 메시지를 표시 합니다.</target>       </trans-unit>
        <trans-unit id="455" translate="yes" xml:space="preserve">
          <source>If you reply with Y or A, it displays the progress bar.</source>
          <target state="translated">Y 또는 A 회신 하는 경우에 진행률 표시줄이 표시 됩니다.</target>       </trans-unit>
        <trans-unit id="456" translate="yes" xml:space="preserve">
          <source>Continue:           Displays the progress bar and continues with (Default)           execution.</source>
          <target state="translated">계속: 진행률 표시줄을 표시 하 고 (기본값) 실행을 계속 합니다.</target>       </trans-unit>
        <trans-unit id="457" translate="yes" xml:space="preserve">
          <source>SilentlyContinue:   Executes the command, but does not display the progress bar.</source>
          <target state="translated">SilentlyContinue: 명령을 실행 하지만 진행률 표시줄이 표시 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="458" translate="yes" xml:space="preserve">
          <source>$PSEmailServer Specifies the default e-mail server that is used to send e-mail messages.</source>
          <target state="translated">$PSEmailServer 지정 전자 메일 메시지를 보내는 데 사용 되는 기본 전자 메일 서버입니다.</target>       </trans-unit>
        <trans-unit id="459" translate="yes" xml:space="preserve">
          <source>This preference variable is used by cmdlets that send e-mail, such as the Send-MailMessage cmdlet.</source>
          <target state="translated">이 기본 설정 변수가 Send-mailmessage cmdlet와 같은 전자 메일을 보내는 cmdlet에서 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="460" translate="yes" xml:space="preserve">
          <source>$PSDefaultParameterValues Specifies default values for the parameters of cmdlets and advanced functions.</source>
          <target state="translated">Cmdlet 및 고급 함수의 매개 변수에 대 한 기본 값 $PSDefaultParameterValues 지정 합니다.</target>       </trans-unit>
        <trans-unit id="461" translate="yes" xml:space="preserve">
          <source>The value of $PSDefaultParameterValues is a hash table where the key consists of the cmdlet name and parameter name separated by a colon (:) and the value is a custom default value that you specify.</source>
          <target state="translated">$PSDefaultParameterValues 가치가 cmdlet 이름 및 매개 변수 이름 키를 구성 하는 해시 테이블 사이 콜론 (:)이 고 값이 지정 하는 사용자 지정 기본값입니다.</target>       </trans-unit>
        <trans-unit id="462" translate="yes" xml:space="preserve">
          <source>This variable was introduced in Windows PowerShell 3.0</source>
          <target state="translated">이 변수는 Windows PowerShell 3.0에서 도입 된</target>       </trans-unit>
        <trans-unit id="463" translate="yes" xml:space="preserve">
          <source>For more information about this preference variable, see about_Parameters_Default_Values.</source>
          <target state="translated">이 기본 설정 변수에 대 한 자세한 내용은 about_Parameters_Default_Values를 참조 하십시오.</target>       </trans-unit>
        <trans-unit id="464" translate="yes" xml:space="preserve">
          <source>$PSModuleAutoloadingPreference Enables and disables automatic importing of modules in the session.</source>
          <target state="translated">$PSModuleAutoloadingPreference 있으며 모듈 자동 가져오기를 세션에서 사용 하지 않도록 설정 합니다.</target>       </trans-unit>
        <trans-unit id="465" translate="yes" xml:space="preserve">
          <source>"All" is the default.</source>
          <target state="translated">"All"이 기본값입니다.</target>       </trans-unit>
        <trans-unit id="466" translate="yes" xml:space="preserve">
          <source>Regardless of the value of this variable, you can use the Import-Module cmdlet to import a module.</source>
          <target state="translated">이 변수의 값에 관계 없이 모듈을 가져오려면 Import-module cmdlet을 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="467" translate="yes" xml:space="preserve">
          <source>Valid values are:</source>
          <target state="translated">유효한 값은</target>       </trans-unit>
        <trans-unit id="468" translate="yes" xml:space="preserve">
          <source>All    Modules are imported automatically on first-use.</source>
          <target state="translated">모든 모듈은 처음 사용할 때 자동으로 가져옵니다.</target>       </trans-unit>
        <trans-unit id="469" translate="yes" xml:space="preserve">
          <source>To import a module, get (Get-Command) or use any command in the module.</source>
          <target state="translated">모듈을 가져오려면 (Get-command) 가져오거나 모듈에서 모든 명령을 사용 합니다.</target>       </trans-unit>
        <trans-unit id="470" translate="yes" xml:space="preserve">
          <source>ModuleQualified Modules are imported automatically only when a user uses the module-qualified name of a command in the module.</source>
          <target state="translated">ModuleQualified 모듈 사용자는 모듈에서 명령 모듈의 정규화 된 이름을 사용 하는 경우에 자동으로 가져와집니다.</target>       </trans-unit>
        <trans-unit id="471" translate="yes" xml:space="preserve">
          <source>For example, if the user types "MyModule\MyCommand", Windows PowerShell imports the MyModule module.</source>
          <target state="translated">예를 들어 "MyModule\MyCommand"를 입력 하는 경우 Windows PowerShell MyModule 모듈을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="472" translate="yes" xml:space="preserve">
          <source>None   Automatic importing of modules is disabled in the session.</source>
          <target state="translated">모듈 자동 가져오기를 none은 세션에서 사용할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="473" translate="yes" xml:space="preserve">
          <source>To import a module, use the Import-Module cmdlet.</source>
          <target state="translated">모듈을 가져오려면 Import-module cmdlet을 사용 합니다.</target>       </trans-unit>
        <trans-unit id="474" translate="yes" xml:space="preserve">
          <source>For more information about automatic importing of modules, see about_Modules (http://go.microsoft.com/fwlink/?LinkID=144311).</source>
          <target state="translated">모듈 자동 가져오기를 하는 방법에 대 한 자세한 내용은 about_Modules (http://go.microsoft.com/fwlink/?LinkID=144311)를 참조 하십시오.</target>       </trans-unit>
        <trans-unit id="475" translate="yes" xml:space="preserve">
          <source>$PSSessionApplicationName Specifies the default application name for a remote command that uses WS-Management technology.</source>
          <target state="translated">$PSSessionApplicationName Ws-management 기술을 사용 하는 원격 명령에 대 한 기본 응용 프로그램 이름 지정 합니다.</target>       </trans-unit>
        <trans-unit id="476" translate="yes" xml:space="preserve">
          <source>The system default application name is WSMAN, but you can use this preference variable to change the default.</source>
          <target state="translated">시스템 기본 응용 프로그램 이름은 WSMAN, 이지만이 기본 설정 변수를 사용 하 여 기본값을 변경할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="477" translate="yes" xml:space="preserve">
          <source>The application name is the last node in a connection URI.</source>
          <target state="translated">응용 프로그램 이름이 연결 URI의에서 마지막 노드입니다.</target>       </trans-unit>
        <trans-unit id="478" translate="yes" xml:space="preserve">
          <source>For example, the application name in the following sample URI is WSMAN.</source>
          <target state="translated">예를 들어, 다음 예제 URI의에서 응용 프로그램 이름이 WSMAN입니다.</target>       </trans-unit>
        <trans-unit id="479" translate="yes" xml:space="preserve">
          <source>http://Server01:8080/WSMAN</source>
          <target state="translated">http://Server01:8080/WSMAN</target>       </trans-unit>
        <trans-unit id="480" translate="yes" xml:space="preserve">
          <source>The default application name is used when the remote command does not specify a connection URI or an application name.</source>
          <target state="translated">원격 명령으로 연결 URI 또는 응용 프로그램 이름을 지정 하지 않을 때 기본 응용 프로그램 이름이 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="481" translate="yes" xml:space="preserve">
          <source>The WinRM service uses the application name to select a listener to service the connection request.</source>
          <target state="translated">WinRM 서비스는 응용 프로그램 이름을 사용하여 연결 요청을 제공하는 수신기를 선택합니다.</target>       </trans-unit>
        <trans-unit id="482" translate="yes" xml:space="preserve">
          <source>The value of this parameter should match the value of the URLPrefix property of a listener on the remote computer.</source>
          <target state="translated">이 매개 변수 값은 원격 컴퓨터에 있는 수신기의 URLPrefix 속성 값과 일치해야 합니다.</target>       </trans-unit>
        <trans-unit id="483" translate="yes" xml:space="preserve">
          <source>To override the system default and the value of this variable, and select a different application name for a particular session, use the ConnectionURI or ApplicationName parameters of the New-PSSession, Enter-PSSession or Invoke-Command cmdlets.</source>
          <target state="translated">시스템 기본값 및이 변수의 값을 무시 하 고 특정 세션에 대 한 다른 응용 프로그램 이름을 선택을 New-pssession, Enter-pssession 또는 Invoke-command cmdlet의 ConnectionURI 또는 ApplicationName 매개 변수를 사용 합니다.</target>       </trans-unit>
        <trans-unit id="484" translate="yes" xml:space="preserve">
          <source>This preference variable is set on the local computer, but it specifies a listener on the remote computer.</source>
          <target state="translated">이 기본 설정 변수는 로컬 컴퓨터에서 설정 되지만 원격 컴퓨터에는 수신기를 지정 합니다.</target>       </trans-unit>
        <trans-unit id="485" translate="yes" xml:space="preserve">
          <source>If the application name that you specify does not exist on the remote computer, the command to establish the session fails.</source>
          <target state="translated">응용 프로그램 이름을 지정 하는 원격 컴퓨터에 없는 경우 세션을 설정 하는 명령이 실패 합니다.</target>       </trans-unit>
        <trans-unit id="486" translate="yes" xml:space="preserve">
          <source>$PSSessionConfigurationName Specifies the default session configuration that is used for PSSessions created in the current session.</source>
          <target state="translated">현재 세션에서 Pssession에 사용 되는 기본 세션 구성을 만든 $PSSessionConfigurationName 지정 합니다.</target>       </trans-unit>
        <trans-unit id="487" translate="yes" xml:space="preserve">
          <source>This preference variable is set on the local computer, but it specifies a session configuration that is located on the remote computer.</source>
          <target state="translated">이 기본 설정 변수는 로컬 컴퓨터에서 설정 되지만 원격 컴퓨터에 있는 세션 구성을 지정 합니다.</target>       </trans-unit>
        <trans-unit id="488" translate="yes" xml:space="preserve">
          <source>The value of the $PSSessionConfigurationName variable is a fully qualified resource URI.</source>
          <target state="translated">$PSSessionConfigurationName 변수의 값은 정규화 된 리소스 URI.</target>       </trans-unit>
        <trans-unit id="489" translate="yes" xml:space="preserve">
          <source>The default value:</source>
          <target state="translated">기본값:</target>       </trans-unit>
        <trans-unit id="490" translate="yes" xml:space="preserve">
          <source>http://schemas.microsoft.com/PowerShell/microsoft.PowerShell</source>
          <target state="translated">http://schemas.microsoft.com/PowerShell/microsoft.PowerShell</target>       </trans-unit>
        <trans-unit id="491" translate="yes" xml:space="preserve">
          <source>indicates the Microsoft.PowerShell session configuration on the remote computer.</source>
          <target state="translated">원격 컴퓨터에서 Microsoft.PowerShell 세션 구성을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="492" translate="yes" xml:space="preserve">
          <source>If you specify only a configuration name, the following schema URI is prepended:</source>
          <target state="translated">구성 이름만 지정 하면 다음 스키마 URI가 추가 됩니다.</target>       </trans-unit>
        <trans-unit id="493" translate="yes" xml:space="preserve">
          <source>http://schemas.microsoft.com/PowerShell/</source>
          <target state="translated">http://schemas.microsoft.com/PowerShell/</target>       </trans-unit>
        <trans-unit id="494" translate="yes" xml:space="preserve">
          <source>You can override the default and select a different session configuration for a particular session by using the ConfigurationName parameter of the New-PSSession, Enter-PSSession or Invoke-Command cmdlets.</source>
          <target state="translated">기본값을 무시 하 고 New-pssession, Enter-pssession 또는 Invoke-command cmdlet의 ConfigurationName 매개 변수를 사용 하 여 특정 세션에 대 한 다른 세션 구성을 선택할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="495" translate="yes" xml:space="preserve">
          <source>You can change the value of this variable at any time.</source>
          <target state="translated">언제 든 지가 변수의 값을 변경할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="496" translate="yes" xml:space="preserve">
          <source>When you do, remember that the session configuration that you select must exist on the remote computer.</source>
          <target state="translated">이렇게 하면 세션 구성을 선택 하는 원격 컴퓨터에 있어야 하 기억 합니다.</target>       </trans-unit>
        <trans-unit id="497" translate="yes" xml:space="preserve">
          <source>If it does not, the command to create a session that uses the session configuration fails.</source>
          <target state="translated">그렇지 않으면 세션 구성을 사용 하는 세션을 만드는 명령은 실패 합니다.</target>       </trans-unit>
        <trans-unit id="498" translate="yes" xml:space="preserve">
          <source>This preference variable does not determine which local session configurations are used when remote users create a session that connects to this computer.</source>
          <target state="translated">이 기본 설정 변수는 로컬 세션 구성이 원격 사용자가이 컴퓨터에 연결 하는 세션을 만들 때 사용 되는 확인 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="499" translate="yes" xml:space="preserve">
          <source>However, you can use the permissions for the local session configurations to determine which users may use them.</source>
          <target state="translated">그러나 어떤 사용자가 사용할 수를 확인 하려면 로컬 세션 구성에 대 한 사용 권한을 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="500" translate="yes" xml:space="preserve">
          <source>$PSSessionOption Establishes the default values for advanced user options in a remote session.</source>
          <target state="translated">$PSSessionOption 설정의 기본 값 고급 사용자 옵션에 대 한 원격 세션에서.</target>       </trans-unit>
        <trans-unit id="501" translate="yes" xml:space="preserve">
          <source>These option preferences override the system default values for session options.</source>
          <target state="translated">이러한 옵션 기본 설정 세션 옵션에 대 한 시스템 기본값을 재정의 합니다.</target>       </trans-unit>
        <trans-unit id="502" translate="yes" xml:space="preserve">
          <source>The $PSSessionOption variable contains a PSSessionOption object (System.Management.Automation.Remoting.PSSessionObject).</source>
          <target state="translated">$PSSessionOption 변수 PSSessionOption 개체 (System.Management.Automation.Remoting.PSSessionObject)를 포함합니다.</target>       </trans-unit>
        <trans-unit id="503" translate="yes" xml:space="preserve">
          <source>Each property of the object represents a session option.</source>
          <target state="translated">개체의 각 속성은 세션 옵션을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="504" translate="yes" xml:space="preserve">
          <source>For example, the NoCompression property turns of data compression during the session.</source>
          <target state="translated">예를 들어 세션에서 데이터 압축 NoCompression 속성을 설정합니다.</target>       </trans-unit>
        <trans-unit id="505" translate="yes" xml:space="preserve">
          <source>By default, the $PSSessionOption variable contains a PSSessionOption object with the default values for all options, as shown below.</source>
          <target state="translated">기본적으로 $PSSessionOption 변수 아래와 같이 모든 옵션에 대 한 기본 값으로 PSSessionOption 개체를 포함 합니다.</target>       </trans-unit>
        <trans-unit id="506" translate="yes" xml:space="preserve">
          <source>MaximumConnectionRedirectionCount : 5 NoCompression                     : False NoMachineProfile                  : False ProxyAccessType                   : None ProxyAuthentication               : Negotiate ProxyCredential                   : SkipCACheck                       : False SkipCNCheck                       : False SkipRevocationCheck               : False OperationTimeout                  : 00:03:00 NoEncryption                      : False UseUTF16                          : False IncludePortInSPN                  : False OutputBufferingMode               : None Culture                           : UICulture                         : MaximumReceivedDataSizePerCommand : MaximumReceivedObjectSize         : 209715200 ApplicationArguments              : OpenTimeout                       : 00:03:00 CancelTimeout                     : 00:01:00 IdleTimeout                       : -00:00:00.0010000</source>
          <target state="translated">MaximumConnectionRedirectionCount: 5 NoCompression: False NoMachineProfile: False ProxyAccessType: None ProxyAuthentication: ProxyCredential 협상: SkipCACheck: False SkipCNCheck: False SkipRevocationCheck: False OperationTimeout: 00시 03분: 00 NoEncryption: False UseUTF16: False IncludePortInSPN: False OutputBufferingMode: 문화권 없음: UICulture: MaximumReceivedDataSizePerCommand: MaximumReceivedObjectSize: 209715200 ApplicationArguments: OpenTimeout: CancelTimeout 00시 03분: 00: 00시 01분: 00 IdleTimeout:-00:00:00.0010000</target>       </trans-unit>
        <trans-unit id="507" translate="yes" xml:space="preserve">
          <source>For descriptions of these options, see the help topic for the New-PSSessionOption cmdlet.</source>
          <target state="translated">이러한 옵션의 설명은 New-pssessionoption cmdlet에 대 한 도움말 항목을 참조 하십시오.</target>       </trans-unit>
        <trans-unit id="508" translate="yes" xml:space="preserve">
          <source>To change the value of the $PSSessionOption preference variable, use the New-PSSessionOption cmdlet to create a PSSessionOption object with the option values you prefer.</source>
          <target state="translated">$PSSessionOption 기본 설정 변수 값을 변경 하려면 원하는 옵션 값을 사용 하 여 PSSessionOption 개체를 만들려면 New-pssessionoption cmdlet을 사용 합니다.</target>       </trans-unit>
        <trans-unit id="509" translate="yes" xml:space="preserve">
          <source>Save the output in a variable called $PSSessionOption.</source>
          <target state="translated">출력 $PSSessionOption 이라는 변수에 저장 합니다.</target>       </trans-unit>
        <trans-unit id="510" translate="yes" xml:space="preserve">
          <source>For example,</source>
          <target state="translated">예:</target>       </trans-unit>
        <trans-unit id="511" translate="yes" xml:space="preserve">
          <source>$PSSessionOption = New-PSSessionOption -NoCompression</source>
          <target state="translated">$PSSessionOption New-pssessionoption NoCompression =</target>       </trans-unit>
        <trans-unit id="512" translate="yes" xml:space="preserve">
          <source>To use the $PSSessionOption preference variable in every Windows PowerShell session, add a New-PSSessionOption command that creates the $PSSessionOption variable to your Windows PowerShell profile.</source>
          <target state="translated">모든 Windows PowerShell 세션에서 $PSSessionOption 기본 설정 변수를 사용 하려면 Windows PowerShell 프로필에 $PSSessionOption 변수를 만드는 New-pssessionoption 명령을 추가 합니다.</target>       </trans-unit>
        <trans-unit id="513" translate="yes" xml:space="preserve">
          <source>You can also set custom options for a particular remote session.</source>
          <target state="translated">또한 특정 원격 세션에 대 한 사용자 지정 옵션을 설정할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="514" translate="yes" xml:space="preserve">
          <source>The options that you set take precedence over the system defaults and the value of the $PSSessionOption preference variable.</source>
          <target state="translated">설정 된 옵션 보다 우선 시스템 기본값 및 $PSSessionOption 기본 설정 변수 값입니다.</target>       </trans-unit>
        <trans-unit id="515" translate="yes" xml:space="preserve">
          <source>To set custom session options, use the New-PSSessionOption cmdlet to create a PSSessionOption object.</source>
          <target state="translated">사용자 지정 세션 옵션을 설정 하려면 New-pssessionoption cmdlet를 사용 하 여 PSSessionOption 개체를 만듭니다.</target>       </trans-unit>
        <trans-unit id="516" translate="yes" xml:space="preserve">
          <source>Then, use the PSSessionOption object as the value of the SessionOption parameter in cmdlets that create a session, such as New-PSSession, Enter-PSSession, and Invoke-Command.</source>
          <target state="translated">Invoke-command New-pssession, Enter-pssession 등 세션을 만드는 cmdlet의 SessionOption 매개 변수 값으로 PSSessionOption 개체를 사용 합니다.</target>       </trans-unit>
        <trans-unit id="517" translate="yes" xml:space="preserve">
          <source>For more information about the New-PSSessionOption cmdlet, see the help topic for New-PSSessionOption.</source>
          <target state="translated">New-pssessionoption cmdlet에 대 한 자세한 내용은 New-pssessionoption에 대 한 도움말 항목을 참조 합니다.</target>       </trans-unit>
        <trans-unit id="518" translate="yes" xml:space="preserve">
          <source>For more information about remote commands and sessions, see about_Remote and about_PSSessions.</source>
          <target state="translated">원격 명령 및 세션에 대 한 자세한 내용은 about_Remote 및 about_PSSessions를 참조 하십시오.</target>       </trans-unit>
        <trans-unit id="519" translate="yes" xml:space="preserve">
          <source>For more information about using a profile, see about_Profiles.</source>
          <target state="translated">프로필을 사용 하는 방법에 대 한 자세한 내용은 about_Profiles를 참조 하십시오.</target>       </trans-unit>
        <trans-unit id="520" translate="yes" xml:space="preserve">
          <source>$VerbosePreference Determines how Windows PowerShell responds to verbose messages generated by a script, cmdlet or provider, such as the messages generated by the Write-Verbose cmdlet.</source>
          <target state="translated">$VerbosePreference Windows PowerShell 스크립트, cmdlet 또는 Write-verbose cmdlet에서 생성 된 메시지와 같은 공급자에서 생성 하는 자세한 정보 메시지에 응답 하는 방식을 결정 합니다.</target>       </trans-unit>
        <trans-unit id="521" translate="yes" xml:space="preserve">
          <source>Typically, verbose messages describe the actions performed to execute a command.</source>
          <target state="translated">일반적으로 자세한 정보 메시지는 명령을 실행할 때 수행 되는 작업을 설명 합니다.</target>       </trans-unit>
        <trans-unit id="522" translate="yes" xml:space="preserve">
          <source>By default, verbose messages are not displayed, but you can change this behavior by changing the value of $VerbosePreference.</source>
          <target state="translated">기본적으로 자세한 정보 메시지는 표시 되지 않지만 $VerbosePreference의 값을 변경 하 여이 동작을 변경할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="523" translate="yes" xml:space="preserve">
          <source>You can also use the Verbose common parameter of a cmdlet to display or hide the verbose messages for a specific command.</source>
          <target state="translated">또한을 표시 하거나 특정 명령에 대 한 자세한 정보 메시지를 숨기려면 cmdlet의 Verbose 공통 매개 변수를 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="524" translate="yes" xml:space="preserve">
          <source>For more information, type: "get-help about_commonparameters".</source>
          <target state="translated">자세한 내용을 보려면 입력: "get-help about_commonparameters"입니다.</target>       </trans-unit>
        <trans-unit id="525" translate="yes" xml:space="preserve">
          <source>Valid values: Stop:               Displays the verbose message and an error message and then stops executing.</source>
          <target state="translated">유효한 값: 중지: 자세한 정보 메시지 및 오류 메시지를 표시 하 고 다음 실행을 중지 합니다.</target>       </trans-unit>
        <trans-unit id="526" translate="yes" xml:space="preserve">
          <source>Inquire:            Displays the verbose message and then displays a prompt that asks you whether you want to continue.</source>
          <target state="translated">자세한 정보 메시지를 표시: 조회 하 고 계속할 것인지를 묻는 프롬프트를 표시 합니다.</target>       </trans-unit>
        <trans-unit id="527" translate="yes" xml:space="preserve">
          <source>Continue:           Displays the verbose message and then continues with execution.</source>
          <target state="translated">자세한 정보 메시지를 표시: 계속 하 고 실행을 계속 합니다.</target>       </trans-unit>
        <trans-unit id="528" translate="yes" xml:space="preserve">
          <source>SilentlyContinue:   Does not display the verbose message.</source>
          <target state="translated">SilentlyContinue: 자세한 정보 메시지를 표시 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="529" translate="yes" xml:space="preserve">
          <source>Continues executing.</source>
          <target state="translated">실행을 계속 합니다.</target>       </trans-unit>
        <trans-unit id="530" translate="yes" xml:space="preserve">
          <source>(Default)</source>
          <target state="translated">(기본값)</target>       </trans-unit>
        <trans-unit id="531" translate="yes" xml:space="preserve">
          <source>EXAMPLES</source>
          <target state="translated">예제</target>       </trans-unit>
        <trans-unit id="532" translate="yes" xml:space="preserve">
          <source>These examples show the effect of the different values of $VerbosePreference and the use of the Verbose common parameter to override the preference value.</source>
          <target state="translated">이러한 예제 Verbose 일반 매개 변수 기본 설정 값을 재정의를 사용 하 여 $VerbosePreference의 여러 다른 값의 효과 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="533" translate="yes" xml:space="preserve">
          <source>This example shows the effect of the SilentlyContinue value, which is the default.</source>
          <target state="translated">이 예제에서는 기본값인 SilentlyContinue 값의 효과 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="534" translate="yes" xml:space="preserve">
          <source>PS&gt; $VerbosePreference             # Find the current value.</source>
          <target state="translated">&gt; $VerbosePreference PS # 현재 값을 찾습니다.</target>       </trans-unit>
        <trans-unit id="535" translate="yes" xml:space="preserve">
          <source>SilentlyContinue</source>
          <target state="translated">SilentlyContinue</target>       </trans-unit>
        <trans-unit id="536" translate="yes" xml:space="preserve">
          <source>PS&gt; Write-Verbose "Verbose message test."</source>
          <target state="translated">PS &gt; Write-verbose "자세한 정보 메시지 테스트 합니다."</target>       </trans-unit>
        <trans-unit id="537" translate="yes" xml:space="preserve">
          <source>PS&gt;                                # Write a verbose message.</source>
          <target state="translated">PS &gt; # 자세한 정보 메시지를 작성 합니다.</target>       </trans-unit>
        <trans-unit id="538" translate="yes" xml:space="preserve">
          <source>Message is not displayed.</source>
          <target state="translated">메시지가 표시 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="539" translate="yes" xml:space="preserve">
          <source>PS&gt; Write-Verbose "Verbose message test."</source>
          <target state="translated">PS &gt; Write-verbose "자세한 정보 메시지 테스트 합니다."</target>       </trans-unit>
        <trans-unit id="540" translate="yes" xml:space="preserve">
          <source>-verbose VERBOSE: Verbose message test.</source>
          <target state="translated">-verbose VERBOSE: 자세한 정보 메시지를 테스트 합니다.</target>       </trans-unit>
        <trans-unit id="541" translate="yes" xml:space="preserve">
          <source>Use the Verbose parameter.</source>
          <target state="translated">Verbose 매개 변수를 사용 합니다.</target>       </trans-unit>
        <trans-unit id="542" translate="yes" xml:space="preserve">
          <source>This example shows the effect of the Continue value.</source>
          <target state="translated">이 예제에서는 계속 값의 효과 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="543" translate="yes" xml:space="preserve">
          <source>PS&gt; $VerbosePreference = "Continue" Change the value to Continue.</source>
          <target state="translated">&gt; $VerbosePreference PS = "Continue" 변경 값을 계속 합니다.</target>       </trans-unit>
        <trans-unit id="544" translate="yes" xml:space="preserve">
          <source>PS&gt; Write-Verbose "Verbose message test."</source>
          <target state="translated">PS &gt; Write-verbose "자세한 정보 메시지 테스트 합니다."</target>       </trans-unit>
        <trans-unit id="545" translate="yes" xml:space="preserve">
          <source>Write a verbose message.</source>
          <target state="translated">자세한 정보 메시지를 작성 합니다.</target>       </trans-unit>
        <trans-unit id="546" translate="yes" xml:space="preserve">
          <source>VERBOSE: Verbose message test.</source>
          <target state="translated">자세한 정보: 자세한 정보 메시지 테스트 합니다.</target>       </trans-unit>
        <trans-unit id="547" translate="yes" xml:space="preserve">
          <source>Message is displayed.</source>
          <target state="translated">메시지가 표시 됩니다.</target>       </trans-unit>
        <trans-unit id="548" translate="yes" xml:space="preserve">
          <source>PS&gt; Write-Verbose "Verbose message test."</source>
          <target state="translated">PS &gt; Write-verbose "자세한 정보 메시지 테스트 합니다."</target>       </trans-unit>
        <trans-unit id="549" translate="yes" xml:space="preserve">
          <source>-verbose:$false Use the Verbose parameter with a value of $false.</source>
          <target state="translated">-verbose: $false $false 값 Verbose 매개 변수를 사용 합니다.</target>       </trans-unit>
        <trans-unit id="550" translate="yes" xml:space="preserve">
          <source>PS&gt; Message is not displayed.</source>
          <target state="translated">PS &gt; 메시지가 표시 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="551" translate="yes" xml:space="preserve">
          <source>This example shows the effect of the Stop value.</source>
          <target state="translated">이 예제에서는 중지 값의 효과 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="552" translate="yes" xml:space="preserve">
          <source>PS&gt; $VerbosePreference = "Stop" Change the value to Stop.</source>
          <target state="translated">&gt; $VerbosePreference PS = "Stop" 변경 값을 중지 합니다.</target>       </trans-unit>
        <trans-unit id="553" translate="yes" xml:space="preserve">
          <source>PS&gt; Write-Verbose "Verbose message test."</source>
          <target state="translated">PS &gt; Write-verbose "자세한 정보 메시지 테스트 합니다."</target>       </trans-unit>
        <trans-unit id="554" translate="yes" xml:space="preserve">
          <source>Write a verbose message.</source>
          <target state="translated">자세한 정보 메시지를 작성 합니다.</target>       </trans-unit>
        <trans-unit id="555" translate="yes" xml:space="preserve">
          <source>VERBOSE: Verbose message test.</source>
          <target state="translated">자세한 정보: 자세한 정보 메시지 테스트 합니다.</target>       </trans-unit>
        <trans-unit id="556" translate="yes" xml:space="preserve">
          <source>Write-Verbose : Command execution stopped because the shell variable "VerbosePreference" is set to Stop.</source>
          <target state="translated">쓰기-Verbose: 명령 실행을 중지 셸 변수 "VerbosePreference"가 Stop으로 설정 됩니다.</target>       </trans-unit>
        <trans-unit id="557" translate="yes" xml:space="preserve">
          <source>At line:1 char:14</source>
          <target state="translated">줄: 1 문자: 14에서</target>       </trans-unit>
        <trans-unit id="558" translate="yes" xml:space="preserve">
          <source>Write-Verbose  &lt;&lt;&lt;&lt; "Verbose message test."</source>
          <target state="translated">Write-verbose &lt;&lt;&lt;&lt; "자세한 정보 메시지 테스트 합니다."</target>       </trans-unit>
        <trans-unit id="559" translate="yes" xml:space="preserve">
          <source>PS&gt; Write-Verbose "Verbose message test."</source>
          <target state="translated">PS &gt; Write-verbose "자세한 정보 메시지 테스트 합니다."</target>       </trans-unit>
        <trans-unit id="560" translate="yes" xml:space="preserve">
          <source>-verbose:$false Use the Verbose parameter with a value of $false PS&gt; Message is not displayed.</source>
          <target state="translated">-verbose: $false Verbose 매개 변수를 사용 하 여 $false PS 값 &gt; 메시지가 표시 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="561" translate="yes" xml:space="preserve">
          <source>This example shows the effect of the Inquire value.</source>
          <target state="translated">이 예제에서는 Inquire 값의 효과 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="562" translate="yes" xml:space="preserve">
          <source>PS&gt; $VerbosePreference = "Inquire" Change the value to Inquire.</source>
          <target state="translated">&gt; $VerbosePreference PS = "Inquire" 변경 값 Inquire입니다.</target>       </trans-unit>
        <trans-unit id="563" translate="yes" xml:space="preserve">
          <source>PS&gt; Write-Verbose "Verbose message test."</source>
          <target state="translated">PS &gt; Write-verbose "자세한 정보 메시지 테스트 합니다."</target>       </trans-unit>
        <trans-unit id="564" translate="yes" xml:space="preserve">
          <source>VERBOSE: Verbose message test.</source>
          <target state="translated">자세한 정보: 자세한 정보 메시지 테스트 합니다.</target>       </trans-unit>
        <trans-unit id="565" translate="yes" xml:space="preserve">
          <source>Write a verbose message.</source>
          <target state="translated">자세한 정보 메시지를 작성 합니다.</target>       </trans-unit>
        <trans-unit id="566" translate="yes" xml:space="preserve">
          <source>Confirm Continue with this operation?</source>
          <target state="translated">이 작업을 계속 확인 합니까?</target>       </trans-unit>
        <trans-unit id="567" translate="yes" xml:space="preserve">
          <source>[Y] Yes  [A] Yes to All  [H] Halt Command  [S] Suspend  [?] Help (default is "Y"): y PS&gt;</source>
          <target state="translated">[Y] 예 [] 예 [H] 중지 명령 [S] 일시 중지 [?] 도움말 (기본값은 "Y"): PS y &gt;</target>       </trans-unit>
        <trans-unit id="568" translate="yes" xml:space="preserve">
          <source>PS&gt; Write-Verbose "Verbose message test."</source>
          <target state="translated">PS &gt; Write-verbose "자세한 정보 메시지 테스트 합니다."</target>       </trans-unit>
        <trans-unit id="569" translate="yes" xml:space="preserve">
          <source>-verbose:$false Use the Verbose parameter.</source>
          <target state="translated">-verbose: $false Verbose 매개 변수를 사용 합니다.</target>       </trans-unit>
        <trans-unit id="570" translate="yes" xml:space="preserve">
          <source>PS&gt; Message is not displayed.</source>
          <target state="translated">PS &gt; 메시지가 표시 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="571" translate="yes" xml:space="preserve">
          <source>$WarningPreference Determines how Windows PowerShell responds to warning messages generated by a script, cmdlet or provider, such as the messages generated by the Write-Warning cmdlet.</source>
          <target state="translated">$WarningPreference Windows PowerShell 스크립트, cmdlet 또는 Write-warning cmdlet에 의해 생성 된 메시지와 같은 공급자에 의해 생성 된 경고 메시지에 응답 하는 방식을 결정 합니다.</target>       </trans-unit>
        <trans-unit id="572" translate="yes" xml:space="preserve">
          <source>By default, warning messages are displayed and execution continues, but you can change this behavior by changing the value of $WarningPreference.</source>
          <target state="translated">기본적으로 경고 메시지가 표시 하 고 실행이 계속 되지만 $WarningPreference의 값을 변경 하 여이 동작을 변경할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="573" translate="yes" xml:space="preserve">
          <source>You can also use the WarningAction common parameter of a cmdlet to determine how Windows PowerShell responds to warnings from a particular command.</source>
          <target state="translated">또한 특정 명령에서 Windows PowerShell 경고에 반응 하는 방법을 결정 하는 cmdlet의 WarningAction 일반 매개 변수를 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="574" translate="yes" xml:space="preserve">
          <source>For more information, type: "get-help about_commonparameters".</source>
          <target state="translated">자세한 내용을 보려면 입력: "get-help about_commonparameters"입니다.</target>       </trans-unit>
        <trans-unit id="575" translate="yes" xml:space="preserve">
          <source>Valid values: Stop:               Displays the warning message and an error message and then stops executing.</source>
          <target state="translated">유효한 값: 중지: 경고 메시지와 오류 메시지를 표시 하 고 다음 실행을 중지 합니다.</target>       </trans-unit>
        <trans-unit id="576" translate="yes" xml:space="preserve">
          <source>Inquire:            Displays the warning message and then prompts for permission to continue.</source>
          <target state="translated">문의: 경고 메시지를 표시 하 고 작업을 계속할 권한과 묻습니다.</target>       </trans-unit>
        <trans-unit id="577" translate="yes" xml:space="preserve">
          <source>Continue:           Displays the warning message and then (Default)           continues executing.</source>
          <target state="translated">합니다: 계속 경고 메시지를 표시 하 고 (기본값)를 계속 실행 합니다.</target>       </trans-unit>
        <trans-unit id="578" translate="yes" xml:space="preserve">
          <source>SilentlyContinue:   Does not display the warning message.</source>
          <target state="translated">SilentlyContinue: 경고 메시지를 표시 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="579" translate="yes" xml:space="preserve">
          <source>Continues executing.</source>
          <target state="translated">실행을 계속 합니다.</target>       </trans-unit>
        <trans-unit id="580" translate="yes" xml:space="preserve">
          <source>EXAMPLES</source>
          <target state="translated">예제</target>       </trans-unit>
        <trans-unit id="581" translate="yes" xml:space="preserve">
          <source>These examples show the effect of the different values of $WarningPreference and the use of the WarningAction common parameter to override the preference value.</source>
          <target state="translated">이 예제에서는 WarningAction 일반 매개 변수 기본 설정 값으로 재정의를 사용 하 여 $WarningPreference의 여러 다른 값의 효과 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="582" translate="yes" xml:space="preserve">
          <source>This example shows the effect of the Continue value, which is the default.</source>
          <target state="translated">이 예제에서는 기본값 계속 값의 효과 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="583" translate="yes" xml:space="preserve">
          <source>PS&gt; $WarningPreference    # Find the current value.</source>
          <target state="translated">&gt; $WarningPreference PS # 현재 값을 찾습니다.</target>       </trans-unit>
        <trans-unit id="584" translate="yes" xml:space="preserve">
          <source>Continue</source>
          <target state="translated">계속</target>       </trans-unit>
        <trans-unit id="585" translate="yes" xml:space="preserve">
          <source>Write a warning message.</source>
          <target state="translated">경고 메시지를 작성 합니다.</target>       </trans-unit>
        <trans-unit id="586" translate="yes" xml:space="preserve">
          <source>PS&gt; Write-Warning "This action can delete data."</source>
          <target state="translated">PS &gt; Write-warning "이이 작업에 데이터를 삭제할 수 있습니다."</target>       </trans-unit>
        <trans-unit id="587" translate="yes" xml:space="preserve">
          <source>WARNING: This action can delete data.</source>
          <target state="translated">경고:이 작업 데이터를 삭제할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="588" translate="yes" xml:space="preserve">
          <source>Use the WarningAction parameter to suppress the warning for this command PS&gt; Write-Warning "This action can delete data."</source>
          <target state="translated">이 명령은 PS에 대 한 경고를 표시 하지 않으려면 WarningAction 매개 변수를 사용 하 여 &gt; Write-warning "이이 작업에 데이터를 삭제할 수 있습니다."</target>       </trans-unit>
        <trans-unit id="589" translate="yes" xml:space="preserve">
          <source>-warningaction silentlycontinue</source>
          <target state="translated">-warningaction silentlycontinue</target>       </trans-unit>
        <trans-unit id="590" translate="yes" xml:space="preserve">
          <source>This example shows the effect of the SilentlyContinue value.</source>
          <target state="translated">이 예제에서는 SilentlyContinue 값의 효과 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="591" translate="yes" xml:space="preserve">
          <source>PS&gt; $WarningPreference = "SilentlyContinue" Change the value to SilentlyContinue.</source>
          <target state="translated">&gt; $WarningPreference PS = "SilentlyContinue" 값 SilentlyContinue로 변경 합니다.</target>       </trans-unit>
        <trans-unit id="592" translate="yes" xml:space="preserve">
          <source>PS&gt; Write-Warning "This action can delete data."</source>
          <target state="translated">PS &gt; Write-warning "이이 작업에 데이터를 삭제할 수 있습니다."</target>       </trans-unit>
        <trans-unit id="593" translate="yes" xml:space="preserve">
          <source>PS&gt;                        # Write a warning message.</source>
          <target state="translated">PS &gt; # 경고 메시지를 작성 합니다.</target>       </trans-unit>
        <trans-unit id="594" translate="yes" xml:space="preserve">
          <source>PS&gt; Write-Warning "This action can delete data."</source>
          <target state="translated">PS &gt; Write-warning "이이 작업에 데이터를 삭제할 수 있습니다."</target>       </trans-unit>
        <trans-unit id="595" translate="yes" xml:space="preserve">
          <source>-warningaction stop Use the WarningAction parameter to stop processing when this command generates a warning.</source>
          <target state="translated">이 명령은 경고를 생성 하는 경우 처리를 중지 하려면 WarningAction 매개 변수를 사용 하는-warningaction 중지 합니다.</target>       </trans-unit>
        <trans-unit id="596" translate="yes" xml:space="preserve">
          <source>WARNING: This action can delete data.</source>
          <target state="translated">경고:이 작업 데이터를 삭제할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="597" translate="yes" xml:space="preserve">
          <source>Write-Warning : Command execution stopped because the shell variable "WarningPreference" is set to Stop.</source>
          <target state="translated">쓰기-경고: 명령 실행을 중지 셸 변수 "WarningPreference"가 Stop으로 설정 됩니다.</target>       </trans-unit>
        <trans-unit id="598" translate="yes" xml:space="preserve">
          <source>At line:1 char:14</source>
          <target state="translated">줄: 1 문자: 14에서</target>       </trans-unit>
        <trans-unit id="599" translate="yes" xml:space="preserve">
          <source>Write-Warning &lt;&lt;&lt;&lt;  "This action can delete data."</source>
          <target state="translated">Write-warning &lt;&lt;&lt;&lt; "이이 작업에 데이터를 삭제할 수 있습니다."</target>       </trans-unit>
        <trans-unit id="600" translate="yes" xml:space="preserve">
          <source>-warningaction stop</source>
          <target state="translated">-warningaction 중지</target>       </trans-unit>
        <trans-unit id="601" translate="yes" xml:space="preserve">
          <source>This example shows the effect of the Inquire value.</source>
          <target state="translated">이 예제에서는 Inquire 값의 효과 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="602" translate="yes" xml:space="preserve">
          <source>PS&gt; $WarningPreference = "Inquire" Change the value to Inquire.</source>
          <target state="translated">&gt; $WarningPreference PS = "Inquire" 변경 값 Inquire입니다.</target>       </trans-unit>
        <trans-unit id="603" translate="yes" xml:space="preserve">
          <source>PS&gt; Write-Warning "This action can delete data."</source>
          <target state="translated">PS &gt; Write-warning "이이 작업에 데이터를 삭제할 수 있습니다."</target>       </trans-unit>
        <trans-unit id="604" translate="yes" xml:space="preserve">
          <source>Write a warning message.</source>
          <target state="translated">경고 메시지를 작성 합니다.</target>       </trans-unit>
        <trans-unit id="605" translate="yes" xml:space="preserve">
          <source>WARNING: This action can delete data.</source>
          <target state="translated">경고:이 작업 데이터를 삭제할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="606" translate="yes" xml:space="preserve">
          <source>Confirm Continue with this operation?</source>
          <target state="translated">이 작업을 계속 확인 합니까?</target>       </trans-unit>
        <trans-unit id="607" translate="yes" xml:space="preserve">
          <source>[Y] Yes  [A] Yes to All  [H] Halt Command  [S] Suspend  [?] Help (default is "Y"): y PS&gt;</source>
          <target state="translated">[Y] 예 [] 예 [H] 중지 명령 [S] 일시 중지 [?] 도움말 (기본값은 "Y"): PS y &gt;</target>       </trans-unit>
        <trans-unit id="608" translate="yes" xml:space="preserve">
          <source>PS&gt; Write-Warning "This action can delete data."</source>
          <target state="translated">PS &gt; Write-warning "이이 작업에 데이터를 삭제할 수 있습니다."</target>       </trans-unit>
        <trans-unit id="609" translate="yes" xml:space="preserve">
          <source>-warningaction silentlycontinue PS&gt;                         # Use the WarningAction parameter to change the response to a warning for the current command.</source>
          <target state="translated">-warningaction silentlycontinue PS &gt; # WarningAction 매개 변수를 사용 하 여 현재 명령에 대 한 경고에 대 한 응답을 변경할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="610" translate="yes" xml:space="preserve">
          <source>This example shows the effect of the Stop value.</source>
          <target state="translated">이 예제에서는 중지 값의 효과 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="611" translate="yes" xml:space="preserve">
          <source>PS&gt; $WarningPreference = "Stop" Change the value to Stop.</source>
          <target state="translated">&gt; $WarningPreference PS = "Stop" 변경 값을 중지 합니다.</target>       </trans-unit>
        <trans-unit id="612" translate="yes" xml:space="preserve">
          <source>PS&gt; Write-Warning "This action can delete data."</source>
          <target state="translated">PS &gt; Write-warning "이이 작업에 데이터를 삭제할 수 있습니다."</target>       </trans-unit>
        <trans-unit id="613" translate="yes" xml:space="preserve">
          <source>Write a warning message.</source>
          <target state="translated">경고 메시지를 작성 합니다.</target>       </trans-unit>
        <trans-unit id="614" translate="yes" xml:space="preserve">
          <source>WARNING: This action can delete data.</source>
          <target state="translated">경고:이 작업 데이터를 삭제할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="615" translate="yes" xml:space="preserve">
          <source>Write-Warning : Command execution stopped because the shell variable "WarningPreference" is set to Stop.</source>
          <target state="translated">쓰기-경고: 명령 실행을 중지 셸 변수 "WarningPreference"가 Stop으로 설정 됩니다.</target>       </trans-unit>
        <trans-unit id="616" translate="yes" xml:space="preserve">
          <source>At line:1 char:14</source>
          <target state="translated">줄: 1 문자: 14에서</target>       </trans-unit>
        <trans-unit id="617" translate="yes" xml:space="preserve">
          <source>Write-Warning  &lt;&lt;&lt;&lt; "This action can delete data."</source>
          <target state="translated">Write-warning &lt;&lt;&lt;&lt; "이이 작업에 데이터를 삭제할 수 있습니다."</target>       </trans-unit>
        <trans-unit id="618" translate="yes" xml:space="preserve">
          <source>PS&gt; Write-Warning "This action can delete data."</source>
          <target state="translated">PS &gt; Write-warning "이이 작업에 데이터를 삭제할 수 있습니다."</target>       </trans-unit>
        <trans-unit id="619" translate="yes" xml:space="preserve">
          <source>-warningaction inquire WARNING: This action can delete data.</source>
          <target state="translated">-warningaction 문의 경고:이 작업에서 데이터를 삭제할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="620" translate="yes" xml:space="preserve">
          <source>Confirm Continue with this operation?</source>
          <target state="translated">이 작업을 계속 확인 합니까?</target>       </trans-unit>
        <trans-unit id="621" translate="yes" xml:space="preserve">
          <source>[Y] Yes  [A] Yes to All  [H] Halt Command  [S] Suspend  [?] Help (default is "Y"): Use the WarningAction parameter to change the response to a warning for the current command.</source>
          <target state="translated">[Y] 예 [] 예 [H] 중지 명령 [S] 일시 중지 [?] 도움말 (기본값은 "Y"): WarningAction 매개 변수를 사용 하 여 현재 명령에 대 한 경고에 대 한 응답을 변경 합니다.</target>       </trans-unit>
        <trans-unit id="622" translate="yes" xml:space="preserve">
          <source>$WhatIfPreference Determines whether WhatIf is automatically enabled for every command that supports it.</source>
          <target state="translated">$WhatIfPreference WhatIf 인터페이스를 지 원하는 모든 명령에 자동으로 사용 되는지 여부를 결정 합니다.</target>       </trans-unit>
        <trans-unit id="623" translate="yes" xml:space="preserve">
          <source>When WhatIf is enabled, the cmdlet reports the expected effect of the command, but does not execute the command.</source>
          <target state="translated">WhatIf 사용 하는 경우 cmdlet은 명령의 예상된 결과 보고 하지만, 명령이 실행 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="624" translate="yes" xml:space="preserve">
          <source>Valid values: 0:                  WhatIf is not automatically enabled.</source>
          <target state="translated">유효한 값: 0: WhatIf 자동으로 사용 하도록 설정 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="625" translate="yes" xml:space="preserve">
          <source>To (Default)           enable it manually, use the WhatIf parameter of the command.</source>
          <target state="translated">사용 (기본값)으로 명령의 WhatIf 매개 변수를 직접 사용 합니다.</target>       </trans-unit>
        <trans-unit id="626" translate="yes" xml:space="preserve">
          <source>1:                  WhatIf is automatically enabled on any command that supports it.</source>
          <target state="translated">1: WhatIf 인터페이스를 지 원하는 모든 명령에 자동으로 설정 됩니다.</target>       </trans-unit>
        <trans-unit id="627" translate="yes" xml:space="preserve">
          <source>Users can use the WhatIf command with a value of False to disable it manually (WhatIf:$false).</source>
          <target state="translated">사용자가 수동으로 해제 하려면 False 값 WhatIf 명령을 사용할 수 (WhatIf: $false).</target>       </trans-unit>
        <trans-unit id="628" translate="yes" xml:space="preserve">
          <source>DETAILED EXPLANATION</source>
          <target state="translated">자세한 내용</target>       </trans-unit>
        <trans-unit id="629" translate="yes" xml:space="preserve">
          <source>When a cmdlet supports WhatIf, the cmdlet reports the expected effect of the command, instead of executing the command.</source>
          <target state="translated">Cmdlet은 cmdlet WhatIf를 지 원하는 경우 명령을 실행 하는 대신 명령의 예상된 효과 보고 합니다.</target>       </trans-unit>
        <trans-unit id="630" translate="yes" xml:space="preserve">
          <source>For example, instead of deleting the test.txt file in response to a Remove-Item command, Windows PowerShell reports what it would delete.</source>
          <target state="translated">예를 들어 Remove-item 명령에 응답에서 하 여 test.txt 파일을 삭제 하는 대신 Windows PowerShell 보고는 삭제 합니다.</target>       </trans-unit>
        <trans-unit id="631" translate="yes" xml:space="preserve">
          <source>A subsequent Get-Childitem command confirms that the file was not deleted.</source>
          <target state="translated">후속 Get-childitem 명령 파일이 삭제 되지 않았는지 확인 합니다.</target>       </trans-unit>
        <trans-unit id="632" translate="yes" xml:space="preserve">
          <source>PS&gt; remove-item test.txt What if: Performing operation "Remove-Item" on Target "Item: C:\test.txt PS&gt; get-childitem test.txt</source>
          <target state="translated">PS &gt; 항목 제거 test.txt 경우에 어떻게: 대상에서 "Remove-item" 작업을 수행 "항목: PS C:\test.txt &gt; get-childitem test.txt</target>       </trans-unit>
        <trans-unit id="633" translate="yes" xml:space="preserve">
          <source>Directory: Microsoft.PowerShell.Core\FileSystem::C:</source>
          <target state="translated">디렉터리: Microsoft.PowerShell.Core\FileSystem::C:</target>       </trans-unit>
        <trans-unit id="634" translate="yes" xml:space="preserve">
          <source>Mode                LastWriteTime     Length     Name</source>
          <target state="translated">모드 LastWriteTime 길이 이름</target>       </trans-unit>
        <trans-unit id="635" translate="yes" xml:space="preserve">
          <source>-a---         7/29/2006   7:15 PM         84     test.txt</source>
          <target state="translated">-a---2006 년 7 월 29 일 오후 7시 15분 84 test.txt</target>       </trans-unit>
        <trans-unit id="636" translate="yes" xml:space="preserve">
          <source>EXAMPLES</source>
          <target state="translated">예제</target>       </trans-unit>
        <trans-unit id="637" translate="yes" xml:space="preserve">
          <source>These examples show the effect of the different values of $WhatIfPreference.</source>
          <target state="translated">이러한 예제 $WhatIfPreference의 여러 다른 값의 효과 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="638" translate="yes" xml:space="preserve">
          <source>They also show how to use the WhatIf cmdlet parameter to override the preference value for a specific command.</source>
          <target state="translated">또한 특정 명령에 대 한 기본 설정 값을 재정의 하려면 WhatIf cmdlet 매개 변수를 사용 하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="639" translate="yes" xml:space="preserve">
          <source>This example shows the effect of the 0 (not enabled) value, which is the default.</source>
          <target state="translated">이 예제에서는 기본값인 0 (사용된 안 함) 값의 효과 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="640" translate="yes" xml:space="preserve">
          <source>PS&gt; $whatifpreference 0                         # Check the current value.</source>
          <target state="translated">PS &gt; $whatifpreference 0 # 현재 값을 확인 합니다.</target>       </trans-unit>
        <trans-unit id="641" translate="yes" xml:space="preserve">
          <source>PS&gt; get-childitem test.txt | format-list FullName FullName : C:\test.txt Verify that the file exists.</source>
          <target state="translated">PS &gt; get-childitem test.txt | 형식 목록 FullName FullName: C:\test.txt 파일이 있는지 확인 합니다.</target>       </trans-unit>
        <trans-unit id="642" translate="yes" xml:space="preserve">
          <source>PS&gt; remove-item test.txt PS&gt;                       # Delete the file.</source>
          <target state="translated">PS &gt; 항목 제거 test.txt PS &gt; # 파일을 삭제 합니다.</target>       </trans-unit>
        <trans-unit id="643" translate="yes" xml:space="preserve">
          <source>PS&gt; get-childitem test.txt | format-list -property FullName Verify that the file is deleted.</source>
          <target state="translated">PS &gt; get-childitem test.txt | 형식 목록-FullName 파일은 삭제를 확인 하는 속성입니다.</target>       </trans-unit>
        <trans-unit id="644" translate="yes" xml:space="preserve">
          <source>Get-ChildItem : Cannot find path 'C:\test.txt' because it does not exist.</source>
          <target state="translated">Get-childitem: 존재 하지 않으므로 'C:\test.txt' 경로 찾을 수 없습니다.</target>       </trans-unit>
        <trans-unit id="645" translate="yes" xml:space="preserve">
          <source>At line:1 char:14</source>
          <target state="translated">줄: 1 문자: 14에서</target>       </trans-unit>
        <trans-unit id="646" translate="yes" xml:space="preserve">
          <source>get-childitem  &lt;&lt;&lt;&lt; test.txt | format-list fullname</source>
          <target state="translated">get-childitem &lt;&lt;&lt;&lt; test.txt | fullname 형식 목록</target>       </trans-unit>
        <trans-unit id="647" translate="yes" xml:space="preserve">
          <source>This example shows the effect of using the WhatIf parameter when the value of $WhatIfPreference is 0.</source>
          <target state="translated">이 예제에서는 $WhatIfPreference의 값이 0 WhatIf 매개 변수를 사용 하 여 결과 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="648" translate="yes" xml:space="preserve">
          <source>PS&gt; get-childitem test2.txt | format-list -property FullName FullName : C:\test2.txt Verify that the file exists.</source>
          <target state="translated">PS &gt; get-childitem test2.txt 두 | 형식 목록-FullName FullName 속성: C:\test2.txt 파일이 있는지 확인 합니다.</target>       </trans-unit>
        <trans-unit id="649" translate="yes" xml:space="preserve">
          <source>PS&gt; remove-item test2.txt -whatif What if: Performing operation "Remove File" on Target "C:\test2.txt".</source>
          <target state="translated">PS &gt; 항목 제거 test2.txt 두-whatif 경우에 어떻게: 대상 "C:\test2.txt"에서 "파일 제거" 작업을 수행 합니다.</target>       </trans-unit>
        <trans-unit id="650" translate="yes" xml:space="preserve">
          <source>Use the WhatIf parameter</source>
          <target state="translated">WhatIf 매개 변수를 사용 하 여</target>       </trans-unit>
        <trans-unit id="651" translate="yes" xml:space="preserve">
          <source>PS&gt; get-childitem test2.txt | format-list -property FullName FullName : C:\test2.txt Verify that the file was not deleted</source>
          <target state="translated">PS &gt; get-childitem test2.txt 두 | 형식 목록-FullName FullName 속성: C:\test2.txt이 파일이 삭제 되지 않았는지 확인 하십시오.</target>       </trans-unit>
        <trans-unit id="652" translate="yes" xml:space="preserve">
          <source>This example shows the effect of the 1 (WhatIf enabled) value.</source>
          <target state="translated">이 예제에서는 1 (WhatIf 사용) 값의 효과 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="653" translate="yes" xml:space="preserve">
          <source>When you use Remove-Item to delete a cmdlet, Remove-Item displays the path to the file that it would delete, but it does not delete the file.</source>
          <target state="translated">Remove-item cmdlet 삭제를 사용 하 여 Remove-item을 삭제 하는 파일에 경로 표시 하지만 파일을 삭제 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="654" translate="yes" xml:space="preserve">
          <source>PS&gt; $whatifpreference = 1 PS&gt; $whatifpreference 1                        # Change the value.</source>
          <target state="translated">PS $whatifpreference &gt; = 1 PS &gt; $whatifpreference 1 # 있는 값을 바꿉니다.</target>       </trans-unit>
        <trans-unit id="655" translate="yes" xml:space="preserve">
          <source>PS&gt; remove-item test.txt What if: Performing operation "Remove File" on Target "C:\test.txt".</source>
          <target state="translated">PS &gt; 항목 제거 test.txt 경우에 어떻게: 대상 "C:\test.txt"에서 "파일 제거" 작업을 수행 합니다.</target>       </trans-unit>
        <trans-unit id="656" translate="yes" xml:space="preserve">
          <source>Try to delete a file.</source>
          <target state="translated">파일을 삭제 하려고 합니다.</target>       </trans-unit>
        <trans-unit id="657" translate="yes" xml:space="preserve">
          <source>PS&gt; get-childitem test.txt | format-list FullName FullName : C:\test.txt Verify that the file exists.</source>
          <target state="translated">PS &gt; get-childitem test.txt | 형식 목록 FullName FullName: C:\test.txt 파일이 있는지 확인 합니다.</target>       </trans-unit>
        <trans-unit id="658" translate="yes" xml:space="preserve">
          <source>This example shows how to delete a file when the value of $WhatIfPreference is 1.</source>
          <target state="translated">이 예제에서는 $WhatIfPreference의 값이 1 파일을 삭제 하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="659" translate="yes" xml:space="preserve">
          <source>It uses the WhatIf parameter with a value of $false.</source>
          <target state="translated">값이 $false WhatIf 매개 변수를 사용 합니다.</target>       </trans-unit>
        <trans-unit id="660" translate="yes" xml:space="preserve">
          <source>PS&gt; remove-item test.txt -whatif:$false Use the WhatIf parameter with $false.</source>
          <target state="translated">PS &gt; 항목 제거 test.txt-whatif: $false $false와 함께 WhatIf 매개 변수를 사용 합니다.</target>       </trans-unit>
        <trans-unit id="661" translate="yes" xml:space="preserve">
          <source>This example demonstrates that some cmdlets support WhatIf behavior and others do not.</source>
          <target state="translated">이 예제에는 일부 cmdlet WhatIf 동작을 지원 하 고 일부는 그렇지 않습니다 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="662" translate="yes" xml:space="preserve">
          <source>In this example, in which the value of $WhatIfPreference is 1 (enabled), a Get-Process command, which does not support WhatIf, is executed, but a Stop-Process command performs the WhatIf behavior.</source>
          <target state="translated">이 예제에서는 $WhatIfPreference의 값입니다 (사용) 1, WhatIf 지원 하지 않는 한 Get-process 명령을 실행 하지만 Stop-process 명령 WhatIf 동작을 수행 합니다.</target>       </trans-unit>
        <trans-unit id="663" translate="yes" xml:space="preserve">
          <source>You can override the WhatIf behavior of the Stop-Process command by using the WhatIf parameter with a value of $false.</source>
          <target state="translated">값이 $false WhatIf 매개 변수를 사용 하 여 Stop-process 명령의 WhatIf 동작을 재정의할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="664" translate="yes" xml:space="preserve">
          <source>PS&gt; $whatifpreference = 1 Change the value to 1.</source>
          <target state="translated">PS $whatifpreference &gt; = 1을 1로 값을 변경 합니다.</target>       </trans-unit>
        <trans-unit id="665" translate="yes" xml:space="preserve">
          <source>PS&gt; get-process winword A Get-Process command completes.</source>
          <target state="translated">PS &gt; 가져오기 프로세스 winword A Get-process 명령을 완료 합니다.</target>       </trans-unit>
        <trans-unit id="666" translate="yes" xml:space="preserve">
          <source>Handles  NPM(K)    PM(K)      WS(K) VM(M)   CPU(s)     Id ProcessName</source>
          <target state="translated">NPM(K) PM(K) WS(K) VM(M) CPU(s) Id ProcessName 처리</target>       </trans-unit>
        <trans-unit id="667" translate="yes" xml:space="preserve">
          <source>234       8     6324      15060   154     0.36   2312 WINWORD</source>
          <target state="translated">234 8 6324 15060 154 0.36 2312 WINWORD</target>       </trans-unit>
        <trans-unit id="668" translate="yes" xml:space="preserve">
          <source>PS&gt; stop-process -name winword What if: Performing operation "Stop-Process" on Target "WINWORD (2312)".</source>
          <target state="translated">PS &gt; 중지 프로세스-경우에는 어떻게 winword 이름을: 대상 "WINWORD (2312)"에서 "Stop-process" 작업을 수행 합니다.</target>       </trans-unit>
        <trans-unit id="669" translate="yes" xml:space="preserve">
          <source>A Stop-Process command uses WhatIf.</source>
          <target state="translated">Stop-process 명령 WhatIf를 사용합니다.</target>       </trans-unit>
        <trans-unit id="670" translate="yes" xml:space="preserve">
          <source>PS&gt; stop-process -name winword  -whatif:$false PS&gt;                      # WhatIf:$false overrides the preference.</source>
          <target state="translated">PS &gt; 중지 프로세스-winword-whatif 이름을: $false PS &gt; # WhatIf: $false 기본 설정을 재정의 합니다.</target>       </trans-unit>
        <trans-unit id="671" translate="yes" xml:space="preserve">
          <source>PS&gt; get-process winword Get-Process : Cannot find a process with the name 'winword'.</source>
          <target state="translated">PS &gt; 가져오기 프로세스 winword Get-process: 'winword' 이름으로 프로세스를 찾을 수 없습니다.</target>       </trans-unit>
        <trans-unit id="672" translate="yes" xml:space="preserve">
          <source>Verify the process name and call the cmdlet again.</source>
          <target state="translated">프로세스 이름을 확인 하 고 cmdlet을 다시 호출 합니다.</target>       </trans-unit>
        <trans-unit id="673" translate="yes" xml:space="preserve">
          <source>At line:1 char:12</source>
          <target state="translated">줄: 1 문자: 12에서</target>       </trans-unit>
        <trans-unit id="674" translate="yes" xml:space="preserve">
          <source>get-process  &lt;&lt;&lt;&lt; winword Verify that the process is stopped.</source>
          <target state="translated">가져오기 프로세스 &lt;&lt;&lt;&lt; winword 프로세스가 중지 되 고 있는지 확인 하십시오.</target>       </trans-unit>
        <trans-unit id="675" translate="yes" xml:space="preserve">
          <source>SEE ALSO</source>
          <target state="translated">참고 항목</target>       </trans-unit>
        <trans-unit id="676" translate="yes" xml:space="preserve">
          <source>about_Automatic_Variables about_CommonParameters about_Environment_Variables about_Profiles about_Remote about_Scopes about_Variables</source>
          <target state="translated">about_Automatic_Variables about_CommonParameters about_Environment_Variables about_Profiles about_Remote about_Scopes about_Variables</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>