<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="pt-br">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-1c394fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">099d84de8383cc39abf09c091efd22afb5bb9d09</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">reference\3.0\Microsoft.PowerShell.Core\About\about_Command_Syntax.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions" />
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">930a72eab015dad37963bff4bcc5e5e7d02d5311</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1c96b9be7b0637652b65b752c362b6c889bd55ba</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>about_Command_Syntax</source>
          <target state="translated">about_Command_Syntax</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>powershell, cmdlet</source>
          <target state="translated">PowerShell, cmdlet</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>About Command Syntax</source>
          <target state="translated">Sobre a sintaxe de comando</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>about_Command_Syntax</source>
          <target state="translated">about_Command_Syntax</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>about_Command_Syntax</source>
          <target state="translated">about_Command_Syntax</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>SHORT DESCRIPTION</source>
          <target state="translated">DESCRIÇÃO BREVE</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Describes the syntax diagrams that are used in Windows PowerShell.</source>
          <target state="translated">Descreve os diagramas de sintaxe que são usados no Windows PowerShell.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>LONG DESCRIPTION</source>
          <target state="translated">DESCRIÇÃO LONGA</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>The Get-Help and Get-Command cmdlets display syntax diagrams to help you construct commands correctly.</source>
          <target state="translated">Os cmdlets Get-Help e Get-Command exibir diagramas de sintaxe para ajudá-lo a construir comandos corretamente.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>This topic explains how to interpret the syntax diagrams.</source>
          <target state="translated">Este tópico explica como interpretar os diagramas de sintaxe.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Syntax Diagrams Each paragraph in a command syntax diagram represents a valid form of the command.</source>
          <target state="translated">Diagramas de sintaxe de cada parágrafo em uma sintaxe de comando diagrama representa um formulário válido do comando.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>To construct a command, follow the syntax diagram from left to right.</source>
          <target state="translated">Para construir um comando, execute o diagrama de sintaxe da esquerda para a direita.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Select from among the optional parameters and provide values for the placeholders.</source>
          <target state="translated">Selecione dentre os parâmetros opcionais e forneça valores para os espaços reservados.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Windows PowerShell uses the following notation for syntax diagrams.</source>
          <target state="translated">O Windows PowerShell usa a notação a seguir para diagramas de sintaxe.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>&lt;command-name&gt; -<ph id="ph1">&lt;Required Parameter Name&gt;</ph> <ph id="ph2">&lt;Required Parameter Value&gt;</ph> [-<ph id="ph3">&lt;Optional Parameter Name&gt;</ph> <ph id="ph4">&lt;Optional Parameter Value&gt;</ph>] [-<ph id="ph5">&lt;Optional Switch Parameters&gt;</ph>] [-<ph id="ph6">&lt;Optional Parameter Name&gt;</ph>]</source>
          <target state="translated">&lt; comando-name &gt; -<ph id="ph1">&lt;Required Parameter Name&gt;</ph> <ph id="ph2">&lt;Required Parameter Value&gt;</ph> [-<ph id="ph3">&lt;Optional Parameter Name&gt;</ph> <ph id="ph4">&lt;Optional Parameter Value&gt;</ph>] [-<ph id="ph5">&lt;Optional Switch Parameters&gt;</ph>] [-<ph id="ph6">&lt;Optional Parameter Name&gt;</ph>]</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>The following is the syntax for the New-Alias cmdlet.</source>
          <target state="translated">A seguir está a sintaxe para o cmdlet New-Alias.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>New-Alias [-Name] <ph id="ph1">&lt;string&gt;</ph> [-Value] <ph id="ph2">&lt;string&gt;</ph> [-Description <ph id="ph3">&lt;string&gt;</ph>] [-Force] [-Option {None | ReadOnly | Constant | Private | AllScope}] [-PassThru] [-Scope <ph id="ph4">&lt;string&gt;</ph>] [-Confirm] [-WhatIf] [<ph id="ph5">&lt;CommonParameters&gt;</ph>]</source>
          <target state="translated">Novo Alias [-nome] <ph id="ph1">&lt;string&gt;</ph> [-valor] <ph id="ph2">&lt;string&gt;</ph> [-descrição <ph id="ph3">&lt;string&gt;</ph>] [-Force] [-opção {None | Somente leitura | Constante | Privada | AllScope}] [-PassThru] [-escopo <ph id="ph4">&lt;string&gt;</ph>] [-confirmar] [-WhatIf] [<ph id="ph5">&lt;CommonParameters&gt;</ph>]</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>The syntax is capitalized for readability, but Windows PowerShell is case-insensitive.</source>
          <target state="translated">A sintaxe é em letras maiusculas para facilitar a leitura, mas o Windows PowerShell diferencia maiusculas de minúsculas.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>The syntax diagram has the following elements.</source>
          <target state="translated">O diagrama de sintaxe tem os seguintes elementos.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Command name</source>
          <target state="translated">Nome do comando</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Commands always begin with a command name, such as New-Alias.</source>
          <target state="translated">Comandos sempre começam com um nome de comando, como New-Alias.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Type the command name or its alias, such a "gcm" for Get-Command.</source>
          <target state="translated">Digite o nome do comando ou seu alias, tal um "gcm" para Get-Command.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Parameters</source>
          <target state="translated">Parâmetros</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>The parameters of a command are options that determine what the command does.</source>
          <target state="translated">Os parâmetros de um comando são opções que determinam o que ele faz.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Some parameters take a "value," which is user input to the command.</source>
          <target state="translated">Alguns parâmetros usam um "valor" que é a entrada do usuário para o comando.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>For example, the Get-Help command has a Name parameter that lets you specify the name of the topic for which help is displayed.</source>
          <target state="translated">Por exemplo, o comando Get-Help tem um parâmetro de nome que permite que você especifique o nome do tópico para o qual Ajuda é exibida.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>The topic name is the value of the Name parameter.</source>
          <target state="translated">O nome do tópico é o valor do parâmetro Name.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>In a Windows PowerShell command, parameter names always begin with a hyphen.</source>
          <target state="translated">Em um comando do Windows PowerShell, os nomes de parâmetro sempre começam com um hífen.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>The hyphen tells Windows PowerShell that the item in the command is a parameter name.</source>
          <target state="translated">O hífen informa ao Windows PowerShell que o item no comando é um nome de parâmetro.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>For example, to use the Name parameter of New-Alias, you type the following:</source>
          <target state="translated">Por exemplo, para usar o parâmetro Name do New-Alias, você digita o seguinte:</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>-Name</source>
          <target state="translated">-Name</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Parameters can be mandatory or optional.</source>
          <target state="translated">Parâmetros podem ser obrigatórias ou opcionais.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>In a syntax diagram, optional items are enclosed in brackets ([ ]).</source>
          <target state="translated">Em um diagrama de sintaxe, itens opcionais estão entre colchetes ([]).</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>For more information about parameters, see about_Parameters.</source>
          <target state="translated">Para obter mais informações sobre parâmetros, consulte about_Parameters.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Parameter Values</source>
          <target state="translated">Valores de parâmetro</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>A parameter value is the input that the parameter takes.</source>
          <target state="translated">Um valor de parâmetro é a entrada que usa o parâmetro.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Because Windows PowerShell is based on the Microsoft .NET Framework, parameter values are represented in the syntax diagram by their .NET type.</source>
          <target state="translated">Como o Windows PowerShell é baseado no Microsoft .NET Framework, os valores de parâmetro são representados no diagrama de sintaxe por seu tipo .NET.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>For example, the Name parameter of Get-Help takes a String value, which is a text string, such as a single word or multiple words enclosed in quotation marks.</source>
          <target state="translated">Por exemplo, o parâmetro de nome do Get-Help tem um valor de cadeia de caracteres, que é uma cadeia de caracteres de texto, como uma única palavra ou diversas palavras entre aspas.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>[-Name]</source>
          <target state="translated">[-Nome]</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>The .NET type of a parameter value is enclosed in angle brackets (&lt; &gt;) to indicate that it is placeholder for a value and not a literal that you type in a command.</source>
          <target state="translated">O tipo de .NET de um valor de parâmetro é colocado entre colchetes angulares (&lt;&gt;) para indicar que o espaço reservado para um valor e não um literal que você digite um comando.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>To use the parameter, replace the .NET type placeholder with an object that has the specified .NET type.</source>
          <target state="translated">Para usar o parâmetro, substitua o espaço reservado de tipo do .NET com um objeto que tem o tipo .NET especificado.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>For example, to use the Name parameter, type "-Name" followed by a string, such as the following:</source>
          <target state="translated">Por exemplo, para usar o parâmetro Name, digite "-nome" seguido por uma cadeia de caracteres, como o seguinte:</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>-Name MyAlias</source>
          <target state="translated">-MyAlias nome</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Parameters with no values</source>
          <target state="translated">Parâmetros sem valores</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Some parameters do not accept input, so they do not have a parameter value.</source>
          <target state="translated">Alguns parâmetros não aceitam entrada, para que eles não têm um valor de parâmetro.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Parameters without values are called "switch parameters" because they work like on/off switches.</source>
          <target state="translated">Parâmetros sem valores são chamados "parâmetros de opção" porque elas funcionam como opções de ativar/desativar.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>You include them (on) or you omit them (off) from a command.</source>
          <target state="translated">Incluí-las (ativado) ou você pode omiti-los (off) de um comando.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>To use a switch parameter, just type the parameter name, preceded by a hyphen.</source>
          <target state="translated">Para usar um parâmetro de opção, basta digite o nome do parâmetro, precedido por um hífen.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>For example, to use the WhatIf parameter of the New-Alias cmdlet, type the following:</source>
          <target state="translated">Por exemplo, para usar o parâmetro WhatIf do cmdlet New-Alias, digite o seguinte:</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>-WhatIf</source>
          <target state="translated">-WhatIf</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Parameter Sets</source>
          <target state="translated">Conjuntos de parâmetros</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>The parameters of a command are listed in parameter sets.</source>
          <target state="translated">Os parâmetros de comando estão listados em conjuntos de parâmetros.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Parameter sets look like the paragraphs of a syntax diagram.</source>
          <target state="translated">Parâmetro define a aparência dos parágrafos de um diagrama de sintaxe.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>The New-Alias cmdlet has one parameter set, but many cmdlets have multiple parameter sets.</source>
          <target state="translated">O cmdlet New-Alias tem um parâmetro definido, mas muitos cmdlets têm vários conjuntos de parâmetros.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Some of the cmdlet parameters are unique to a parameter set, and others appear in multiple parameter sets.</source>
          <target state="translated">Alguns dos parâmetros de cmdlet são exclusivos para um conjunto de parâmetros, e os demais aparecem em vários conjuntos de parâmetros.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>Each parameter set represents the format of a valid command.</source>
          <target state="translated">Cada conjunto de parâmetro representa o formato de um comando válido.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>A parameter set includes only parameters that can be used together in a command.</source>
          <target state="translated">Um conjunto de parâmetros inclui somente os parâmetros que podem ser usados juntos em um comando.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>If parameters cannot be used in the same command, they appear in separate parameter sets.</source>
          <target state="translated">Se os parâmetros não podem ser usados no mesmo comando aparecem em conjuntos de parâmetros separados.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>For example, the Get-Random cmdlet has the following parameter sets:</source>
          <target state="translated">Por exemplo, o cmdlet Get-Random tem os seguintes conjuntos de parâmetro:</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>Get-Random [[-Maximum] <ph id="ph1">&lt;Object&gt;</ph>] [-Minimum <ph id="ph2">&lt;Object&gt;</ph>] [-SetSeed <ph id="ph3">&lt;int&gt;</ph>] [<ph id="ph4">&lt;CommonParameters&gt;</ph>]</source>
          <target state="translated">Get-Random [[-máximo] <ph id="ph1">&lt;Object&gt;</ph>] [-mínimo <ph id="ph2">&lt;Object&gt;</ph>] [-SetSeed <ph id="ph3">&lt;int&gt;</ph>] [<ph id="ph4">&lt;CommonParameters&gt;</ph>]</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>Get-Random [-InputObject] &lt;Object[]&gt; [-Count <ph id="ph1">&lt;int&gt;</ph>] [-SetSeed <ph id="ph2">&lt;int&gt;</ph>] [<ph id="ph3">&lt;CommonParameters&gt;</ph>]</source>
          <target state="translated">Get-Random [-InputObject] &lt; objeto [] &gt; [-contagem <ph id="ph1">&lt;int&gt;</ph>] [-SetSeed <ph id="ph2">&lt;int&gt;</ph>] [<ph id="ph3">&lt;CommonParameters&gt;</ph>]</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>The first parameter set, which returns a random number, has the Minimum and Maximum parameters.</source>
          <target state="translated">O primeiro conjunto de parâmetros, que retorna um número aleatório, tem os parâmetros de mínimo e máximo.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>The second parameter set, which returns a randomly selected object from a set of objects, includes the InputObject and Count parameters.</source>
          <target state="translated">O segundo conjunto de parâmetros, que retorna um objeto selecionado aleatoriamente de um conjunto de objetos, inclui os parâmetros InputObject e contagem.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>Both parameter sets have the Set-Seed parameter and the common parameters.</source>
          <target state="translated">Os dois conjuntos de parâmetros têm o parâmetro de conjunto de semente e os parâmetros comuns.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>These parameter sets indicate that you can use the InputObject and Count parameters in the same command, but you cannot use the Maximum and Count parameters in the same command.</source>
          <target state="translated">Esses conjuntos de parâmetros indicam que você pode usar os parâmetros InputObject e contagem no mesmo comando, mas você não pode usar os máximo e a contagem de parâmetros no mesmo comando.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>You indicate which parameter set you want to use by using the parameters in that parameter set.</source>
          <target state="translated">Indique qual conjunto de parâmetros que você deseja usar usando os parâmetros nesse conjunto de parâmetro.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>However, every cmdlet also has a default parameter set.</source>
          <target state="translated">No entanto, cada cmdlet também tem um parâmetro padrão definido.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>The default parameter set is used when you do not specify parameters that are unique to a parameter set.</source>
          <target state="translated">O conjunto de parâmetro padrão é usado quando você não especificar parâmetros que são exclusivos para um conjunto de parâmetros.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>For example, if you use Get-Random without parameters, Windows PowerShell assumes that you are using the Number parameter set and it returns a random number.</source>
          <target state="translated">Por exemplo, se você usar o Get-Random sem parâmetros, o Windows PowerShell pressupõe que você está usando o parâmetro de número conjunto e retorna um número aleatório.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>In each parameter set, the parameters appear in position order.</source>
          <target state="translated">Em cada conjunto de parâmetros, os parâmetros aparecem na ordem de posição.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>The order of parameters in a command matters only when you omit the optional parameter names.</source>
          <target state="translated">A ordem dos parâmetros em um comando importa somente quando você omite os nomes de parâmetro opcional.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>When parameter names are omitted, Windows PowerShell assigns values to parameters by position and type.</source>
          <target state="translated">Quando os nomes de parâmetro forem omitidos, o Windows PowerShell atribui valores a parâmetros por posição e o tipo.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>For more information about parameter position, see about_Parameters.</source>
          <target state="translated">Para obter mais informações sobre a posição de parâmetro, consulte about_Parameters.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>Symbols in Syntax Diagrams The syntax diagram lists the command name, the command parameters, and the parameter values.</source>
          <target state="translated">Símbolos na sintaxe diagramas e as listas de diagrama de sintaxe do nome do comando, os parâmetros de comando e os valores de parâmetro.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>It also uses symbols to show how to construct a valid command.</source>
          <target state="translated">Ele também usa símbolos para mostrar como criar um comando válido.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>The syntax diagrams use the following symbols:</source>
          <target state="translated">Os diagramas de sintaxe usam os símbolos a seguir:</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>-- A hyphen (-) indicates a parameter name.</source>
          <target state="translated">-- Um hífen (-) indica um nome de parâmetro.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>In a command, type the hyphen immediately before the parameter name with no intervening spaces, as shown in the syntax diagram.</source>
          <target state="translated">Em um comando, digite o hífen imediatamente antes do nome de parâmetro sem espaços, conforme mostrado no diagrama de sintaxe.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>For example, to use the Name parameter of New-Alias, type:</source>
          <target state="translated">Por exemplo, para usar o parâmetro Name do New-Alias, digite:</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>-Name</source>
          <target state="translated">-Name</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>-- Angle brackets (&lt;&gt;) indicate placeholder text.</source>
          <target state="translated">– Os colchetes angulares (&lt;&gt;) indicam o texto de espaço reservado.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>You do not type the angle brackets or the placeholder text in a command.</source>
          <target state="translated">Não digite os colchetes angulares ou o texto de espaço reservado em um comando.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>Instead, you replace it with the item that it describes.</source>
          <target state="translated">Em vez disso, você o substitua pelo item que ele descreve.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>Angle brackets are used to identify the .NET type of the value that a parameter takes.</source>
          <target state="translated">Colchetes angulares são usados para identificar o tipo de .NET do valor que leva um parâmetro.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>For example, to use the Name parameter of the New-Alias cmdlet, you replace the <ph id="ph1">&lt;string&gt;</ph> with a string, which is a single word or a group of words that are enclosed in quotation marks.</source>
          <target state="translated">Por exemplo, para usar o parâmetro Name do cmdlet New-Alias, substitua o <ph id="ph1">&lt;string&gt;</ph> com uma cadeia de caracteres, que é uma única palavra ou um grupo de palavras entre aspas.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>-- Brackets ([ ]) indicate optional items.</source>
          <target state="translated">– Colchetes ([]) indicam itens opcionais.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>A parameter and its value can be optional, or the name of a required parameter can be optional.</source>
          <target state="translated">Um parâmetro e seu valor podem ser opcionais, ou o nome de um parâmetro necessário pode ser opcional.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>For example, the Description parameter of New-Alias and its value are enclosed in brackets because they are both optional.</source>
          <target state="translated">Por exemplo, o parâmetro de descrição do novo Alias e seu valor está entre colchetes porque são ambas opcionais.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>[-Description <ph id="ph1">&lt;string&gt;</ph>]</source>
          <target state="translated">[-Descrição <ph id="ph1">&lt;string&gt;</ph>]</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>The brackets also indicate that the Name parameter value (<ph id="ph1">&lt;string&gt;</ph>) is required, but the parameter name, "Name," is optional.</source>
          <target state="translated">Os parênteses indicam que o valor do parâmetro de nome (<ph id="ph1">&lt;string&gt;</ph>) é obrigatório, mas o nome do parâmetro "Name" é opcional.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>[-Name]</source>
          <target state="translated">[-Nome]</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>-- A right and left bracket ([]) appended to a .NET type indicates that the parameter can accept one or multiple values of that type.</source>
          <target state="translated">-- Um direito e esquerdo colchete ([]) anexado a um tipo .NET indica que o parâmetro pode aceitar um ou vários valores do mesmo tipo.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>Enter the values in a comma-separated list.</source>
          <target state="translated">Digite os valores em uma lista separada por vírgulas.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>For example, the Name parameter of the New-Alias cmdlet takes only one string, but the Name parameter of Get-Process can take one or many strings.</source>
          <target state="translated">Por exemplo, o parâmetro Name do cmdlet New-Alias usa apenas uma cadeia de caracteres, mas o parâmetro Name de Get-Process pode levar um ou mais cadeias de caracteres.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>New-Alias [-Name]</source>
          <target state="translated">Novo Alias [-nome]</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>New-Alias -Name MyAlias</source>
          <target state="translated">-Alias - novo nome MyAlias</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>Get-Process [-Name] &lt;string[]&gt;</source>
          <target state="translated">Get-Process [-nome] &lt; string [] &gt;</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>Get-Process -Name Explorer, Winlogon, Services</source>
          <target state="translated">Get-Process - Explorer, Winlogon, serviços de nomes</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>-- Braces ({}) indicate an "enumeration," which is a set of valid values for a parameter.</source>
          <target state="translated">-Chaves ({}) indicam uma "enumeração" que é um conjunto de valores válidos para um parâmetro.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>The values in the braces are separated by vertical bars ( | ).</source>
          <target state="translated">Os valores de chaves são separados por barras verticais (|).</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>These bars indicate an "exclusive or" choice, meaning that you can choose only one value from the set of values that are listed inside the braces.</source>
          <target state="translated">Essas barras de indicam um "exclusivo ou" Escolha, que significa que você pode escolher apenas um valor do conjunto de valores que são listados dentro das chaves.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>For example, the syntax for the New-Alias cmdlet includes the following value enumeration for the Option parameter:</source>
          <target state="translated">Por exemplo, a sintaxe para o cmdlet New-Alias inclui a seguinte enumeração de valor para o parâmetro de opção:</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>-Option {None | ReadOnly | Constant | Private | AllScope}</source>
          <target state="translated">-Opção {None | Somente leitura | Constante | Privada | AllScope}</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>The braces and vertical bars indicate that you can choose any one of the listed values for the Option parameter, such as ReadOnly or AllScope.</source>
          <target state="translated">As chaves e barras verticais indicam que você pode escolher qualquer um dos valores listados para o parâmetro de opção, como somente leitura ou AllScope.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>-Option ReadOnly</source>
          <target state="translated">-Opção ReadOnly</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>Optional Items Brackets ([]) surround optional items.</source>
          <target state="translated">Opcional itens colchetes ([]) envolvem itens opcionais.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>For example, in the New-Alias cmdlet syntax description, the Scope parameter is optional.</source>
          <target state="translated">Por exemplo, na descrição de sintaxe do cmdlet New-Alias, o parâmetro de escopo é opcional.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>This is indicated in the syntax by the brackets around the parameter name and type:</source>
          <target state="translated">Isso é indicado na sintaxe por colchetes em torno do nome do parâmetro e tipo:</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>[-Scope <ph id="ph1">&lt;string&gt;</ph>]</source>
          <target state="translated">[-Escopo <ph id="ph1">&lt;string&gt;</ph>]</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>Both the following examples are correct uses of the New-Alias cmdlet:</source>
          <target state="translated">Ambos os exemplos a seguir são usados corretos do cmdlet New-Alias:</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>New-Alias -Name utd -Value Update-TypeData New-Alias -Name utd -Value Update-TypeData -Scope global</source>
          <target state="translated">New-Alias - utd de nome-valor Update-TypeData New-Alias-utd de nome-valor Update-TypeData-escopo global</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>A parameter name can be optional even if the value for that parameter is required.</source>
          <target state="translated">Um nome de parâmetro pode ser opcional, mesmo se o valor para esse parâmetro é obrigatório.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>This is indicated in the syntax by the brackets around the parameter name but not the parameter type, as in this example from the New-Alias cmdlet:</source>
          <target state="translated">Isso é indicado na sintaxe por colchetes em torno do nome do parâmetro, mas não o tipo de parâmetro, como neste exemplo, o cmdlet New-Alias:</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>[-Name] <ph id="ph1">&lt;string&gt;</ph> [-Value]</source>
          <target state="translated">[-Nome] <ph id="ph1">&lt;string&gt;</ph> [-Valor]</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>The following  commands correctly use the New-Alias cmdlet.</source>
          <target state="translated">Os comandos a seguir usam o cmdlet New-Alias corretamente.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>The commands produce the same result.</source>
          <target state="translated">Os comandos produzem o mesmo resultado.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>New-Alias -Name utd -Value Update-TypeData New-Alias -Name utd Update-TypeData New-Alias utd -Value Update-TypeData New-Alias utd Update-TypeData</source>
          <target state="translated">New-Alias - utd de nome-valor Update-TypeData New-Alias-nome utd Update-TypeData New-Alias utd-valor Update-TypeData New-Alias utd Update-TypeData</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>If the parameter name is not included in the statement as typed, Windows PowerShell tries to use the position of the arguments to assign the values to parameters.</source>
          <target state="translated">Se o nome do parâmetro não estiver incluído na instrução como digitado, o Windows PowerShell tenta usar a posição dos argumentos para atribuir valores aos parâmetros.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>The following example is not complete:</source>
          <target state="translated">O exemplo a seguir não é completo:</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>New-Alias utd</source>
          <target state="translated">Novo Alias utd</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>This cmdlet requires values for both the Name and Value parameters.</source>
          <target state="translated">Esse cmdlet requer valores para parâmetros de nome e o valor.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>In syntax examples, brackets are also used in naming and casting to .NET Framework types.</source>
          <target state="translated">Nos exemplos de sintaxe, colchetes também são usados na nomenclatura e a conversão em tipos do .NET Framework.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>In this context, brackets do not indicate an element is optional.</source>
          <target state="translated">Nesse contexto, colchetes não indicam que um elemento é opcional.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>KEYWORDS</source>
          <target state="translated">PALAVRAS-CHAVE</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>about_Symbols about_Punctuation about_Help_Syntax</source>
          <target state="translated">about_Symbols about_Punctuation about_Help_Syntax</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>SEE ALSO</source>
          <target state="translated">CONSULTE TAMBÉM</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>about_Parameters Get-Command Get-Help</source>
          <target state="translated">Get-Command Get-Help about_Parameters</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>