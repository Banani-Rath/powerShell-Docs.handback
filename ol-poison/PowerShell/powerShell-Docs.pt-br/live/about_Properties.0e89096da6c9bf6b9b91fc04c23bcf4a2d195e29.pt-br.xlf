<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="pt-br">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-1c394fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fed08c56c325108cf466a4a1a9b921a3502b215c</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">reference\5.0\Microsoft.PowerShell.Core\About\about_Properties.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions" />
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">773f76553672d69da0e063f85e8894f32fbdd844</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">34b537130310bfa03e816d350ae66d77ffe5d356</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>about_Properties</source>
          <target state="translated">about_Properties</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>powershell, cmdlet</source>
          <target state="translated">PowerShell, cmdlet</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>About Properties</source>
          <target state="translated">Sobre propriedades</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>about_Properties</source>
          <target state="translated">about_Properties</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>about_Properties</source>
          <target state="translated">about_Properties</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>SHORT DESCRIPTION</source>
          <target state="translated">DESCRIÇÃO BREVE</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Describes how to use object properties in  Windows PowerShell�.</source>
          <target state="translated">Descreve como usar as propriedades de objeto do Windows PowerShell.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>LONG DESCRIPTION</source>
          <target state="translated">DESCRIÇÃO LONGA</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Windows PowerShell uses structured collections of information called objects to represent the items in data stores or the state of the computer.</source>
          <target state="translated">Windows PowerShell usa conjuntos estruturados de informações chamados de objetos para representar os itens em armazenamentos de dados ou o estado do computador.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Typically, you work with object that are part of the Microsoft .NET Framework, but you can also create custom objects in  Windows PowerShell.</source>
          <target state="translated">Normalmente, você trabalha com objetos que fazem parte do Microsoft .NET Framework, mas você também pode criar objetos personalizados no Windows PowerShell.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>The association between an item and its object is very close.</source>
          <target state="translated">A associação entre um item e seu objeto está muito próxima.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>When you change an object, you usually change the item that it represents.</source>
          <target state="translated">Quando você altera um objeto, você geralmente altera o item que ele representa.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>For example, when you get a file in  Windows PowerShell, you do not get the actual file.</source>
          <target state="translated">Por exemplo, quando você receber um arquivo no Windows PowerShell, você não obtiver o arquivo real.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Instead, you get a FileInfo object that represents the file.</source>
          <target state="translated">Em vez disso, você obtém um objeto FileInfo que representa o arquivo.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>When you change the FileInfo object, the file changes too.</source>
          <target state="translated">Quando você altera o objeto FileInfo, o arquivo altera muito.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Most objects have properties.</source>
          <target state="translated">A maioria dos objetos têm propriedades.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Properties are the data that is associated with an object.</source>
          <target state="translated">Propriedades são os dados que está associados um objeto.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Different types of object have different properties.</source>
          <target state="translated">Tipos diferentes de objeto têm propriedades diferentes.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>For example, a FileInfo object, which represents a file, has an IsReadOnly property that contains $True if the file the read-only attribute and $False if it does not.</source>
          <target state="translated">Por exemplo, um objeto FileInfo, que representa um arquivo, tem uma propriedade IsReadOnly que contém $True se o atributo de arquivo somente leitura e $False se não existir.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>A DirectoryInfo object, which represents a file system directory, has a Parent property that contains the path to the parent directory.</source>
          <target state="translated">Um objeto DirectoryInfo, que representa um diretório de sistema de arquivos, tem uma propriedade pai que contém o caminho para o diretório pai.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>OBJECT PROPERTIES</source>
          <target state="translated">PROPRIEDADES DO OBJETO</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>To get the properties of an object, use the Get-Member cmdlet.</source>
          <target state="translated">Para obter as propriedades de um objeto, use o cmdlet Get-Member.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>For example, to get the properties of a FileInfo object, use the Get-ChildItem cmdlet to get the FileInfo object that represents a file.</source>
          <target state="translated">Por exemplo, para obter as propriedades de um objeto FileInfo, use o cmdlet Get-ChildItem para obter o objeto FileInfo que representa um arquivo.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Then, use a pipeline operator (&amp;#124;) to send the FileInfo object to Get-Member.</source>
          <target state="translated">Em seguida, use um operador de pipeline (&amp;#124;) para enviar o objeto FileInfo para Get-Member.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>The following command gets the PowerShell.exe file and sends it to Get-Member.</source>
          <target state="translated">O comando a seguir obtém o arquivo PowerShell.exe e envia para Get-Member.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>The $Pshome automatic variable contains the path of the  Windows PowerShell installation directory.</source>
          <target state="translated">A variável automática $Pshome contém o caminho do diretório de instalação do Windows PowerShell.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>The output of the command lists the members of the FileInfo object.</source>
          <target state="translated">A saída do comando lista os membros do objeto FileInfo.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Members include both properties and methods.</source>
          <target state="translated">Membros incluem propriedades e métodos.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>When you work in  Windows PowerShell, you have access to all the members of the objects.</source>
          <target state="translated">Quando você trabalha no Windows PowerShell, você tem acesso a todos os membros dos objetos.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>To get only the properties of an object and not the methods, use the MemberType parameter of the Get-Member cmdlet with a value of "property", as shown in the following example.</source>
          <target state="translated">Para obter somente as propriedades de um objeto e não os métodos, use o parâmetro MemberType do cmdlet Get-Member com um valor de "propriedade", conforme mostrado no exemplo a seguir.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>After you find the properties, you can use them in your  Windows PowerShell commands.</source>
          <target state="translated">Depois de localizar as propriedades, você pode usá-los em seus comandos do Windows PowerShell.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>PROPERTY VALUES</source>
          <target state="translated">VALORES DE PROPRIEDADE</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Although every object of a specific type has the same properties, the values of those properties describe the particular object.</source>
          <target state="translated">Embora todos os objetos de um tipo específico tem as mesmas propriedades, os valores dessas propriedades descrevem o objeto específico.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>For example, every FileInfo object has a CreationTime property, but the value of that property differs for each file.</source>
          <target state="translated">Por exemplo, cada objeto FileInfo tem uma propriedade CreationTime, mas o valor dessa propriedade é diferente para cada arquivo.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>The most common way to get the values of the properties of an object is to use the dot method.</source>
          <target state="translated">A maneira mais comum para obter os valores das propriedades de um objeto é usar o método de ponto.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Type a reference to the object, such as a variable that contains the object, or a command that gets the object.</source>
          <target state="translated">Digite uma referência ao objeto, como uma variável que contém o objeto ou um comando que obtém o objeto.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Then, type a dot (.) followed by the property name.</source>
          <target state="translated">Em seguida, digite um ponto (.) seguido pelo nome da propriedade.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>For example, the following command displays the value of the CreationTime property of the PowerShell.exe file.</source>
          <target state="translated">Por exemplo, o comando a seguir exibe o valor da propriedade CreationTime do arquivo PowerShell.exe.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>The Get-ChildItem command returns a FileInfo object that represents the PowerShell.exe file.</source>
          <target state="translated">O comando Get-ChildItem retorna um objeto FileInfo que representa o arquivo PowerShell.exe.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>The command is enclosed in parentheses to make sure that it is executed before any properties are accessed.</source>
          <target state="translated">O comando é colocado entre parênteses para certificar-se de que ele é executado antes que todas as propriedades sejam acessadas.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>The Get-ChildItem command is followed by a dot and the name of the CreationTime property, as follows:</source>
          <target state="translated">O comando Get-ChildItem é seguido por um ponto e o nome da propriedade CreationTime, da seguinte maneira:</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>You can also save an object in a variable and then get its properties by using the dot method, as shown in the following example:</source>
          <target state="translated">Você pode também salvar um objeto em uma variável e, em seguida, obter suas propriedades usando o método de ponto, conforme mostrado no exemplo a seguir:</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>You can also use the Select-Object and Format-List cmdlets to display the property values of an object.</source>
          <target state="translated">Você também pode usar os cmdlets Select-Object e Format-List para exibir os valores de propriedade de um objeto.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Select-Object and Format-List each have a Property parameter.</source>
          <target state="translated">Select-Object e Format-List têm um parâmetro de propriedade.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>You can use the Property parameter to specify one or more properties and their values.</source>
          <target state="translated">Você pode usar o parâmetro Property para especificar uma ou mais propriedades e seus valores.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Or, you can use the wildcard character (<ph id="ph1">\*</ph>) to represent all the properties.</source>
          <target state="translated">Ou, você pode usar o caractere curinga (<ph id="ph1">\*</ph>) para representar todas as propriedades.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>For example, the following command displays the values of all the properties of the PowerShell.exe file.</source>
          <target state="translated">Por exemplo, o comando a seguir exibe os valores de todas as propriedades do arquivo PowerShell.exe.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>STATIC PROPERTIES</source>
          <target state="translated">PROPRIEDADES ESTÁTICAS</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>You can use the static properties of .NET classes in  Windows PowerShell.</source>
          <target state="translated">Você pode usar propriedades estáticas de classes do .NET no Windows PowerShell.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Static properties are properties of class, unlike standard properties, which are properties of an object.</source>
          <target state="translated">Propriedades estáticas são propriedades de classe, ao contrário de propriedades padrão, que são propriedades de um objeto.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>To get the static properties of an class, use the Static parameter of the Get-Member cmdlet.</source>
          <target state="translated">Para obter as propriedades estáticas da classe, use o parâmetro Static do cmdlet Get-Member.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>For example, the following command gets the static properties of the System.DateTime class.</source>
          <target state="translated">Por exemplo, o comando a seguir obtém as propriedades estáticas da classe System. DateTime.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>To get the value of a static property, use the following syntax.</source>
          <target state="translated">Para obter o valor de uma propriedade estática, use a sintaxe a seguir.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>For example, the following command gets the value of the UtcNow static property of the System.DateTime class.</source>
          <target state="translated">Por exemplo, o comando a seguir obtém o valor da propriedade UtcNow estático da classe System. DateTime.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>PROPERTIES OF SCALAR OBJECTS AND COLLECTIONS</source>
          <target state="translated">PROPRIEDADES DE OBJETOS ESCALARES E COLEÇÕES</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>The properties of one ("scalar") object of a particular type are often different from the properties of a collection of objects of the same type.</source>
          <target state="translated">As propriedades de um objeto ("escalar") de um tipo específico geralmente são diferentes das propriedades de uma coleção de objetos do mesmo tipo.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>For example, every service has as DisplayName property, but a collection of services does not have a DisplayName property.</source>
          <target state="translated">Por exemplo, cada serviço tem como propriedade DisplayName, mas uma coleção de serviços não tem uma propriedade DisplayName.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Similarly, all collections have a Count property that tells how many objects are in the collection, but individual objects do not have a Count property.</source>
          <target state="translated">Da mesma forma, todas as coleções possuem uma propriedade Count que indica quantos objetos estão na coleção, mas objetos individuais não tem uma propriedade Count.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>Beginning in  Windows PowerShell 3.0,  Windows PowerShell tries to prevent scripting errors that result from the differing properties of scalar objects and collections.</source>
          <target state="translated">Começando no Windows PowerShell 3.0, Windows PowerShell tenta evitar erros de script que resultam das propriedades diferentes de coleções e objetos escalares.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>If you submit a collection, but request a property that exists only on single ("scalar") objects,  Windows PowerShell returns the value of that property for every object in the collection.</source>
          <target state="translated">Se você enviar uma coleção, mas uma propriedade que existe apenas em objetos ("escalares") únicos de solicitação, o Windows PowerShell retorna o valor dessa propriedade para cada objeto na coleção.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>If you request the Count or Length property of zero objects or of one object,  Windows PowerShell returns the correct value.</source>
          <target state="translated">Se você solicitar a propriedade de contagem ou comprimento de zero objetos ou de um objeto, o Windows PowerShell retorna o valor correto.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>If the property exists on the individual objects and on the collection,  Windows PowerShell does not alter the result.</source>
          <target state="translated">Se a propriedade existe em objetos individuais e na coleção, o Windows PowerShell não altera o resultado.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>This feature also works on methods of scalar objects and collections.</source>
          <target state="translated">Esse recurso também funciona em métodos de objetos escalares e coleções.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>For more information, see about_Methods.</source>
          <target state="translated">Para obter mais informações, consulte about_Methods.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>EXAMPLES</source>
          <target state="translated">EXEMPLOS</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>For example, each service has a DisplayName property.</source>
          <target state="translated">Por exemplo, cada serviço tem uma propriedade DisplayName.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>The following command gets the value of the DisplayName property of the Audiosrv service.</source>
          <target state="translated">O comando a seguir obtém o valor da propriedade DisplayName do serviço Audiosrv.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>However, a collection or array of services does not have a DisplayName.</source>
          <target state="translated">No entanto, uma coleção ou matriz de serviços não tem um DisplayName.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>The following command tries to get the DisplayName property of all services in  Windows PowerShell 2.0.</source>
          <target state="translated">O comando a seguir tenta obter a propriedade DisplayName de todos os serviços no Windows PowerShell 2.0.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>Beginning in  Windows PowerShell 3.0, the same command returns the value of the DisplayName property of every service that Get-Service returns.</source>
          <target state="translated">Começando no Windows PowerShell 3.0, o mesmo comando retorna o valor da propriedade DisplayName de cada serviço que Get-Service retorna.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>Conversely, a collection of two or more services has a Count property, which contains the number of objects in the collection.</source>
          <target state="translated">Por outro lado, uma coleção de dois ou mais serviços possui uma propriedade Count, que contém o número de objetos na coleção.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>Individual services do not have a Count or Length property, as shown in this command in  Windows PowerShell 2.0.</source>
          <target state="translated">Serviços individuais não tem uma propriedade Count ou comprimento, conforme mostrado neste comando no Windows PowerShell 2.0.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>Beginning in  Windows PowerShell 3.0, the command returns the correct Count value.</source>
          <target state="translated">Começando no Windows PowerShell 3.0, o comando retorna o valor correto de contagem.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>SEE ALSO</source>
          <target state="translated">CONSULTE TAMBÉM</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>about_Methods</source>
          <target state="translated">about_Methods</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>about_Objects</source>
          <target state="translated">about_Objects</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>Get-Member</source>
          <target state="translated">Get-Member</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>Select-Object</source>
          <target state="translated">Select-Object</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>Format-List</source>
          <target state="translated">Format-List</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>