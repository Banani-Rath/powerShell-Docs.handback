<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="pt-br">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-1c394fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">2627cb51dd92921a3a0c0b680aaa240b54d8e4db</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">reference\4.0\Microsoft.PowerShell.Core\Wait-Job.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions" />
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">aaca506ef91ac162f73a6b7fd2b8362b46dcbfad</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">db92f79caec5742cb861329c6a4937923004ea78</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>powershell, cmdlet</source>
          <target state="translated">PowerShell, cmdlet</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Wait-Job</source>
          <target state="translated">Wait-Job</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Wait-Job</source>
          <target state="translated">Wait-Job</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>SYNOPSIS</source>
          <target state="translated">SINOPSE</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Suppresses the command prompt until one or all of the Windows PowerShell background jobs running in the session are complete.</source>
          <target state="translated">Suprime o prompt de comando até que um ou todos os trabalhos em segundo plano do Windows PowerShell executados na sessão sejam concluídos.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>SYNTAX</source>
          <target state="translated">SINTAXE</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>SessionIdParameterSet (Default)</source>
          <target state="translated">SessionIdParameterSet (padrão)</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>JobParameterSet</source>
          <target state="translated">JobParameterSet</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>NameParameterSet</source>
          <target state="translated">NameParameterSet</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>InstanceIdParameterSet</source>
          <target state="translated">InstanceIdParameterSet</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>StateParameterSet</source>
          <target state="translated">StateParameterSet</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>FilterParameterSet</source>
          <target state="translated">FilterParameterSet</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>DESCRIPTION</source>
          <target state="translated">DESCRIÇÃO</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>Wait-Job<ept id="p1">**</ept> cmdlet waits for Windows PowerShell background jobs to complete before it displays the command prompt.</source>
          <target state="translated">O <bpt id="p1">**</bpt>Wait-Job<ept id="p1">**</ept> cmdlet aguarda os trabalhos de plano de fundo do Windows PowerShell concluir antes de exibir o prompt de comando.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>You can wait until any background job is complete, or until all background jobs are complete, and you can set a maximum wait time for the job.</source>
          <target state="translated">Você pode aguardar até que qualquer trabalho em segundo plano seja concluído, ou até que todos os trabalhos em segundo plano sejam concluídos, e pode definir um tempo de espera máximo para o trabalho.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>When the commands in the job are complete, <bpt id="p1">**</bpt>Wait-Job<ept id="p1">**</ept> displays the command prompt and returns a job object so that you can pipe it to another command.</source>
          <target state="translated">Quando os comandos no trabalho estiverem concluídos, <bpt id="p1">**</bpt>Wait-Job<ept id="p1">**</ept> exibe o prompt de comando e retorna um objeto de trabalho para que você possa redirecioná-lo para outro comando.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>You can use <bpt id="p1">**</bpt>Wait-Job<ept id="p1">**</ept> cmdlet to wait for background jobs, such as those that were started by using the Start-Job cmdlet or the <bpt id="p2">**</bpt>AsJob<ept id="p2">**</ept> parameter of the Invoke-Command cmdlet.</source>
          <target state="translated">Você pode usar <bpt id="p1">**</bpt>Wait-Job<ept id="p1">**</ept> cmdlet aguardar trabalhos em segundo plano, como aqueles que foram iniciados usando o cmdlet Start-Job ou <bpt id="p2">**</bpt>AsJob<ept id="p2">**</ept> parâmetro do cmdlet Invoke-Command.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>For more information about Windows PowerShell background jobs, see about_Jobs.</source>
          <target state="translated">Para obter mais informações sobre trabalhos de plano de fundo do Windows PowerShell, consulte about_Jobs.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Beginning in Windows PowerShell 3.0, the <bpt id="p1">**</bpt>Wait-Job<ept id="p1">**</ept> cmdlet also waits for custom job types, such as workflow jobs and instances of scheduled jobs.</source>
          <target state="translated">Começando no Windows PowerShell 3.0, o <bpt id="p1">**</bpt>Wait-Job<ept id="p1">**</ept> cmdlet também aguarda tipos de trabalho personalizados, como trabalhos do fluxo de trabalho e instâncias dos trabalhos agendados.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>To enable <bpt id="p1">**</bpt>Wait-Job<ept id="p1">**</ept> to wait for jobs of a particular type, import the module that supports the custom job type into the session before running a <bpt id="p2">**</bpt>Get-Job<ept id="p2">**</ept> command, either by using the Import-Module cmdlet or by using or getting a cmdlet in the module.</source>
          <target state="translated">Para habilitar <bpt id="p1">**</bpt>Wait-Job<ept id="p1">**</ept> para aguardar trabalhos de um tipo específico, importe o módulo que suporta o tipo de trabalho personalizado para a sessão antes de executar um <bpt id="p2">**</bpt>Get-Job<ept id="p2">**</ept> comando, usando o cmdlet Import-Module ou usando ou obtendo um cmdlet no módulo.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>For information about a particular custom job type, see the documentation of the custom job type feature.</source>
          <target state="translated">Para obter informações sobre um tipo específico de trabalho personalizado, consulte a documentação do recurso de tipo de trabalho personalizado.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>EXAMPLES</source>
          <target state="translated">EXEMPLOS</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>-------------------------- EXAMPLE 1 --------------------------</source>
          <target state="translated">------------------------- EXEMPLO 1 --------------------------</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>This command waits for all of the background jobs running in the session to complete.</source>
          <target state="translated">Este comando aguardará a conclusão de todos os trabalhos em segundo plano em execução na sessão.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>-------------------------- EXAMPLE 2 --------------------------</source>
          <target state="translated">-------------------------- EXAMPLE 2 --------------------------</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>This example shows how to use the Wait-Job cmdlet with jobs started on remote computers by using the Start-Job cmdlet.</source>
          <target state="translated">Este exemplo mostra como usar o cmdlet Wait-Job com trabalhos iniciados em computadores remotos usando o cmdlet Start-Job.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Both the Start-Job and Wait-Job commands are submitted to the remote computer by using the Invoke-Command cmdlet.</source>
          <target state="translated">Os comandos Start-Job e Wait-Job são enviados ao computador remoto usando o cmdlet Invoke-Command.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>This example uses Wait-Job to determine whether a Get-Date command running as a background job on three different computers is complete.</source>
          <target state="translated">Este exemplo usa Wait-Job para determinar se um comando Get-Date executado como um trabalho em segundo plano em três computadores diferentes foi concluído.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>The first command creates a Windows PowerShell session (PSSession) on each of the three remote computers and stores them in the $s variable.</source>
          <target state="translated">O primeiro comando cria uma sessão do Windows PowerShell (PSSession) em cada um dos três computadores remotos e armazena-a na variável $s.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>The second command uses the Invoke-Command cmdlet to run a Start-Job command in each of the three sessions in $s.</source>
          <target state="translated">O segundo comando usa o cmdlet Invoke-Command para executar um comando Start-Job em cada uma das três sessões em $s.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>All of the jobs are named Date1.</source>
          <target state="translated">Todos os trabalhos são nomeados Data1.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>The third command uses the Invoke-Command cmdlet to run a Wait-Job command.</source>
          <target state="translated">O terceiro comando usa o cmdlet Invoke-Command para executar um comando Wait-Job.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>This command waits for the Date1 jobs on each computer to complete.</source>
          <target state="translated">Esse comando aguarda a conclusão dos trabalhos Data1 em cada computador.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>It stores the resulting collection (array) of job objects in the $done variable.</source>
          <target state="translated">Ele armazena a coleção resultante (matriz) dos objetos de trabalho na variável $done.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>The fourth command uses the Count property of the array of job objects in the $done variable to determine how many of the jobs are complete.</source>
          <target state="translated">O quarto comando usa a propriedade Count da matriz de objetos de trabalho na variável $done para determinar quantos dos trabalhos foram concluídos.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>-------------------------- EXAMPLE 3 --------------------------</source>
          <target state="translated">-------------------------- EXAMPLE 3 --------------------------</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>This example uses the <bpt id="p1">**</bpt>Any<ept id="p1">**</ept> parameter of <bpt id="p2">**</bpt>Wait-Job<ept id="p2">**</ept> to determine when the first of many background jobs running in the current session are complete.</source>
          <target state="translated">Este exemplo usa o <bpt id="p1">**</bpt>qualquer<ept id="p1">**</ept> parâmetro <bpt id="p2">**</bpt>Wait-Job<ept id="p2">**</ept> para determinar quando o primeiro de vários trabalhos em segundo plano em execução na sessão atual forem concluídas.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>It also shows how to use the <bpt id="p1">**</bpt>Wait-Job<ept id="p1">**</ept> cmdlet to wait for remote jobs to complete.</source>
          <target state="translated">Ele também mostra como usar o <bpt id="p1">**</bpt>Wait-Job<ept id="p1">**</ept> cmdlet para aguardar a conclusão de trabalhos remotos.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>The first command creates a PSSession on each of the computers listed in the Machines.txt file and stores the PSSessions in the $s variable.</source>
          <target state="translated">O primeiro comando cria uma PSSession em todos os computadores listados no arquivo Machines.txt e armazena as PSSessions na variável $s.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>The command uses the Get-Content cmdlet to get the contents of the file.</source>
          <target state="translated">O comando usa o cmdlet Get-Content para obter o conteúdo do arquivo.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>Get-Content<ept id="p1">**</ept> command is enclosed in parentheses to ensure that it runs before the New-PSSession command.</source>
          <target state="translated">O <bpt id="p1">**</bpt>Get-Content<ept id="p1">**</ept> comando é colocado entre parênteses para garantir que ele seja executado antes do comando New-PSSession.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>The second command stores a <bpt id="p1">**</bpt>Get-EventLog<ept id="p1">**</ept> command string (in quotation marks) in the $c variable.</source>
          <target state="translated">O segundo comando armazena um <bpt id="p1">**</bpt>Get-EventLog<ept id="p1">**</ept> comando de cadeia de caracteres (entre aspas) na variável $c.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>The third command uses the Invoke-Command cmdlet to run a <bpt id="p1">**</bpt>Start-Job<ept id="p1">**</ept> command in each of the sessions in $s.</source>
          <target state="translated">O terceiro comando usa o cmdlet Invoke-Command para executar um <bpt id="p1">**</bpt>Start-Job<ept id="p1">**</ept> comando em cada uma das sessões em $s.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>Start-Job<ept id="p1">**</ept> command starts a background job that runs the <bpt id="p2">**</bpt>Get-EventLog<ept id="p2">**</ept> command in the $c variable.</source>
          <target state="translated">O <bpt id="p1">**</bpt>Start-Job<ept id="p1">**</ept> comando inicia um trabalho em segundo plano que executa o <bpt id="p2">**</bpt>Get-EventLog<ept id="p2">**</ept> comando na variável $c.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>The command uses the <bpt id="p1">**</bpt>Using<ept id="p1">**</ept> scope modifier to indicate that the $c variable was defined on the local computer.</source>
          <target state="translated">O comando usa o <bpt id="p1">**</bpt>usando<ept id="p1">**</ept> modificador de escopo para indicar que a variável $c foi definida no computador local.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>Using<ept id="p1">**</ept> scope modifier is introduced in Windows PowerShell 3.0.</source>
          <target state="translated">O <bpt id="p1">**</bpt>usando<ept id="p1">**</ept> modificador de escopo é introduzido no Windows PowerShell 3.0.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>For more information about the <bpt id="p1">**</bpt>Using<ept id="p1">**</ept> scope modifier, see about_Remote_Variables (http://go.microsoft.com/fwlink/?LinkID=252653).</source>
          <target state="translated">Para obter mais informações sobre o <bpt id="p1">**</bpt>usando<ept id="p1">**</ept> modificador de escopo, consulte about_Remote_Variables (http://go.microsoft.com/fwlink/?LinkID=252653).</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>The fourth command uses the <bpt id="p1">**</bpt>Invoke-Command<ept id="p1">**</ept> cmdlet to run a <bpt id="p2">**</bpt>Wait-Job<ept id="p2">**</ept> command in the sessions.</source>
          <target state="translated">O quarto comando usa o <bpt id="p1">**</bpt>Invoke-Command<ept id="p1">**</ept> para executar um <bpt id="p2">**</bpt>Wait-Job<ept id="p2">**</ept> comando nas sessões.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>It uses the <bpt id="p1">**</bpt>Any<ept id="p1">**</ept> parameter to wait until the first job on the remote computers is complete.</source>
          <target state="translated">Ele usa o <bpt id="p1">**</bpt>qualquer<ept id="p1">**</ept> parâmetro aguardar até que o primeiro trabalho nos computadores remotos seja concluído.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>-------------------------- EXAMPLE 4 --------------------------</source>
          <target state="translated">-------------------------- EXAMPLE 4 --------------------------</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>This example shows how to use the Timeout parameter of Wait-Job to set a maximum wait time for the jobs running on remote computers.</source>
          <target state="translated">Este exemplo mostra como usar o parâmetro Timeout de Wait-Job para definir um tempo de espera máximo para os trabalhos em execução em computadores remotos.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>The first command creates a PSSession on each of three remote computers (Server01, Server02, and Server03), and it saves the PSSessions in the $s variable.</source>
          <target state="translated">O primeiro comando cria uma PSSession em cada um dos três computadores remotos (Server01, Server02 e Server03) e salva as PSSessions na variável $s.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>The second command uses the Invoke-Command cmdlet to run a Start-Job command in each of the PSSessions in $s.</source>
          <target state="translated">O segundo comando usa o cmdlet Invoke-Command para executar um comando Start-Job em cada pssessions em $s.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>It saves the resulting job objects in the $jobs variable.</source>
          <target state="translated">Ele salva os objetos de trabalho resultante na variável $jobs.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>The third command uses the Invoke-Command cmdlet to run a Wait-Job command in each of the PSSessions in $s.</source>
          <target state="translated">O terceiro comando usa o cmdlet Invoke-Command para executar um comando Wait-Job em cada pssessions em $s.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>The Wait-Job command determines whether all of the commands have completed within 30 seconds.</source>
          <target state="translated">O comando Wait-Job determina se todos os comandos concluiu dentro de 30 segundos.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>It uses the Timeout parameter with a value of 30 (seconds) to establish the maximum wait time and saves the results of the command in the $done variable.</source>
          <target state="translated">Ele usa o parâmetro Timeout com um valor de 30 (segundos) para estabelecer o tempo de espera máximo e salva os resultados do comando na variável $done.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>In this case, after 30 seconds, only the command on the Server02 computer has completed.</source>
          <target state="translated">Nesse caso, após 30 segundos, apenas o comando no computador Server02 foi concluído.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>Wait-Job ends the wait, displays the command prompt, and returns the object that represents the job that was completed.</source>
          <target state="translated">Wait-Job encerra a espera, exibe o prompt de comando e retorna o objeto que representa o trabalho concluído.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>The $done variable contains a job object that represents the job that ran on Server02.</source>
          <target state="translated">A variável $done contém um objeto de trabalho que representa o trabalho executado no Server02.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>-------------------------- EXAMPLE 5 --------------------------</source>
          <target state="translated">-------------------------- EXAMPLE 5 --------------------------</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>This command identifies three jobs by their IDs and waits until any of them are complete.</source>
          <target state="translated">Este comando identifica três trabalhos por suas IDs e aguarda até que algum deles esteja concluído.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>The command prompt returns when the first job completes.</source>
          <target state="translated">O prompt de comando retorna quando o primeiro trabalho é concluído.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>-------------------------- EXAMPLE 6 --------------------------</source>
          <target state="translated">------------------------- EXEMPLO 6 --------------------------</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>This command waits 120 seconds (two minutes) for the DailyLog job to complete.</source>
          <target state="translated">Este comando aguardará 120 segundos (dois minutos) para que o trabalho DailyLog seja concluído.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>If the job does not complete in the next two minutes, the command prompt returns anyway, and the job continues to run in the background.</source>
          <target state="translated">Se o trabalho não for concluído nos dois minutos, o prompt de comando retornará assim mesmo, e o trabalho continua a ser executado em segundo plano.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>-------------------------- EXAMPLE 7 --------------------------</source>
          <target state="translated">-------------------------- EXAMPLE 7 --------------------------</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>This Wait-Job command uses the job name to identify the job to wait for.</source>
          <target state="translated">Este comando Wait-Job usa o nome do trabalho para identificar o trabalho a ser aguardado.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>-------------------------- EXAMPLE 8 --------------------------</source>
          <target state="translated">-------------------------- EXAMPLE 8 --------------------------</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>This example shows how to use the Wait-Job cmdlet with jobs started on the local computer by using the Start-Job cmdlet.</source>
          <target state="translated">Este exemplo mostra como usar o cmdlet Wait-Job com trabalhos iniciados no computador local usando o cmdlet Start-Job.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>These commands start a job that gets the Windows PowerShell script files that were added or updated in the last week.</source>
          <target state="translated">Esses comandos iniciam um trabalho que obtém os arquivos de script do Windows PowerShell que foram adicionados ou atualizados na última semana.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>The first command uses the Start-Job cmdlet to start a background job on the local computer.</source>
          <target state="translated">O primeiro comando usa o cmdlet Start-Job para iniciar um trabalho em segundo plano no computador local.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>The job runs a Get-ChildItem command that gets all of the files with a ".ps1" file name extension that were added or updated in the last week.</source>
          <target state="translated">O trabalho executa um comando Get-ChildItem que obtém todos os arquivos com uma extensão de nome de arquivo ".ps1" que foram adicionados ou atualizados na última semana.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>The third command uses the Wait-Job cmdlet to wait until the job is complete.</source>
          <target state="translated">O terceiro comando usa o cmdlet Wait-Job para aguardar até que o trabalho seja concluído.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>When the job completes, the command displays the job object, which contains information about the job.</source>
          <target state="translated">Quando o trabalho for concluído, o comando exibirá o objeto de trabalho, que contém informações sobre o trabalho.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>-------------------------- EXAMPLE 9 --------------------------</source>
          <target state="translated">-------------------------- EXAMPLE 9 --------------------------</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>This example shows how to use the Wait-Job cmdlet with jobs started on remote computers by using the AsJob parameter of the Invoke-Command cmdlet.</source>
          <target state="translated">Este exemplo mostra como usar o cmdlet Wait-Job com trabalhos iniciados em computadores remotos usando o parâmetro AsJob do cmdlet Invoke-Command.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>When using AsJob, the job is created on the local computer and the results are automatically returned to the local computer, even though the job runs on the remote computers.</source>
          <target state="translated">Ao usar AsJob, o trabalho é criado no computador local, e os resultados são retornados automaticamente para o computador local, mesmo que o trabalho seja executado nos computadores remotos.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>This example uses Wait-Job to determine whether a Get-Process command running in the sessions on three remote computers is complete.</source>
          <target state="translated">Este exemplo usa Wait-Job para determinar se um comando Get-Process executado nas sessões nos três computadores remotos foi concluído.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>The first command creates PSSessions on three computers and stores them in the $s variable.</source>
          <target state="translated">O primeiro comando cria PSSessions em três computadores e as armazena na variável $s.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>The second command uses the Invoke-Command cmdlet to run a Get-Process command in each of the three PSSessions in $s.</source>
          <target state="translated">O segundo comando usa o cmdlet Invoke-Command para executar um comando Get-Process em cada uma das três PSSessions em $s.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>The command uses the AsJob parameter to run the command asynchronously as a background job.</source>
          <target state="translated">O comando usa o parâmetro AsJob para executar o comando de forma assíncrona como um trabalho em segundo plano.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>The command returns a job object, just like the jobs started by using Start-Job, and the job object is stored in the $j variable.</source>
          <target state="translated">O comando retorna um objeto de trabalho, assim como os trabalhos iniciados usando Start-Job, e o objeto de trabalho é armazenado na variável $j.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>The third command uses a pipeline operator (|) to send the job object in $j to the Wait-Job cmdlet.</source>
          <target state="translated">O terceiro comando usa um operador de pipeline (|) para enviar o objeto de trabalho $j para o cmdlet Wait-Job.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>Notice that an Invoke-Command command is not required in this case, because the job resides on the local computer.</source>
          <target state="translated">Observe que um comando de Invoke-Command não é necessário nesse caso, porque o trabalho reside no computador local.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>-------------------------- EXAMPLE 10 --------------------------</source>
          <target state="translated">-------------------------- EXAMPLE 10 --------------------------</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>This command waits for the job with an ID value of 1.</source>
          <target state="translated">Este comando aguarda o trabalho com um valor de ID de 1.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>PARAMETERS</source>
          <target state="translated">PARÂMETROS</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>-Any</source>
          <target state="translated">-Qualquer</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>Displays the command prompt (and returns the job object) when any job completes.</source>
          <target state="translated">Exibe o prompt de comando (e retorna o objeto de trabalho) quando nenhum trabalho for concluído.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>By default, Wait-Job waits until all of the specified jobs are complete before displaying the prompt.</source>
          <target state="translated">Por padrão, Wait-Job aguarda até que todos os trabalhos especificados sejam concluídos antes de exibir o prompt.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>-Filter</source>
          <target state="translated">-Filtro</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>Waits for jobs that satisfy all of the conditions established in the associated hash table.</source>
          <target state="translated">Aguarda os trabalhos que atendem a todas as condições estabelecidas na tabela de hash associada.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>Enter a hash table where the keys are job properties and the values are job property values.</source>
          <target state="translated">Insira uma tabela de hash na qual as chaves são propriedades do trabalho e os valores são valores de propriedade do trabalho.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>This parameter works only on custom job types, such as workflow jobs and scheduled jobs.</source>
          <target state="translated">Este parâmetro funciona somente em tipos de trabalho personalizados, como os de fluxo de trabalho e os trabalhos agendados.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>It does not work on standard background jobs, such as those created by using the Start-Job cmdlet.</source>
          <target state="translated">Ele não funciona em trabalhos em segundo plano padrão, como aqueles criados usando o cmdlet Start-Job.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>For information about support for this parameter, see the help topic for the job type.</source>
          <target state="translated">Para obter informações sobre o suporte para este parâmetro, consulte o tópico da Ajuda para o tipo de trabalho em questão.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>This parameter is introduced in Windows PowerShell 3.0.</source>
          <target state="translated">Este parâmetro é introduzido no Windows PowerShell 3.0.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>-Force</source>
          <target state="translated">-Force</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>Continues waiting if jobs are in the <bpt id="p1">**</bpt>Suspended<ept id="p1">**</ept> or <bpt id="p2">**</bpt>Disconnected<ept id="p2">**</ept> state.</source>
          <target state="translated">Continua a espera se os trabalhos estão no <bpt id="p1">**</bpt>suspenso<ept id="p1">**</ept> ou <bpt id="p2">**</bpt>desconectado<ept id="p2">**</ept> estado.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>By default, <bpt id="p1">**</bpt>Wait-Job<ept id="p1">**</ept> returns (terminates the wait) when jobs are in one of the following states: Completed, Failed, Stopped, Suspended, or Disconnected.</source>
          <target state="translated">Por padrão, <bpt id="p1">**</bpt>Wait-Job<ept id="p1">**</ept> retorna (encerra o tempo de espera) quando os trabalhos estão em um dos seguintes estados: concluído, falhou, parado, Suspended ou desconectado.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>This parameter is introduced in Windows PowerShell 3.0.</source>
          <target state="translated">Este parâmetro é introduzido no Windows PowerShell 3.0.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>-Id</source>
          <target state="translated">-Id</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>Waits for jobs with the specified IDs.</source>
          <target state="translated">Aguarda trabalhos com as IDs especificadas.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>The ID is an integer that uniquely identifies the job within the current session.</source>
          <target state="translated">O identificador é um número inteiro que identifica exclusivamente o trabalho na sessão atual.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>It is easier to remember and type than the InstanceId, but it is unique only within the current session.</source>
          <target state="translated">É mais fácil de lembrar e digitar que a InstanceId, mas é exclusiva somente dentro da sessão atual.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>You can type one or more IDs (separated by commas).</source>
          <target state="translated">Você pode digitar um ou mais identificadores (separados por vírgulas).</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>To find the ID of a job, type "Get-Job" without parameters.</source>
          <target state="translated">Para localizar a ID de um trabalho, digite "Get-Job" sem parâmetros.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>-InstanceId</source>
          <target state="translated">-InstanceId</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>Waits for jobs with the specified instance IDs.</source>
          <target state="translated">Aguarda trabalhos com as IDs de instância especificadas.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>The default is all jobs.</source>
          <target state="translated">O padrão é obter todos os trabalhos.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>An instance ID is a GUID that uniquely identifies the job on the computer.</source>
          <target state="translated">Uma ID de instância é um GUID que identifica exclusivamente o trabalho no computador.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>To find the instance ID of a job, use Get-Job.</source>
          <target state="translated">Para localizar a ID da instância de um trabalho, use Get-Job.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>-Job</source>
          <target state="translated">-Trabalho</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>Waits for the specified jobs.</source>
          <target state="translated">Aguarda os trabalhos especificados.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>Enter a variable that contains the job objects or a command that gets the job objects.</source>
          <target state="translated">Insira uma variável que contém os objetos de trabalho ou um comando que obtém os objetos de trabalho.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>You can also use a pipeline operator to send job objects to the Wait-Job cmdlet.</source>
          <target state="translated">Você também pode usar um operador de pipeline para enviar objetos de trabalho para o cmdlet Wait-Job.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>By default, Wait-Job waits for all jobs created in the current session.</source>
          <target state="translated">Por padrão, Wait-Job aguarda todos os trabalhos criados na sessão atual.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>-Name</source>
          <target state="translated">-Name</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>Waits for jobs with the specified friendly name.</source>
          <target state="translated">Aguarda trabalhos com o nome amigável especificado.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>-State</source>
          <target state="translated">-Estado</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>Waits only for jobs in the specified state.</source>
          <target state="translated">Aguarda somente trabalhos no estado especificado.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>Valid values are NotStarted, Running, Completed, Failed, Stopped, Blocked, Suspended, Disconnected, Suspending, Stopping.</source>
          <target state="translated">Os valores válidos são NotStarted, executando, concluído, falhou, parado, bloqueado, Suspended, Disconnected, suspendendo, parando.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>For more information about job states, see "JobState Enumeration" in MSDN at http://msdn.microsoft.com/library/windows/desktop/system.management.automation.jobstate(v=vs.85).aspxhttp://msdn.microsoft.com/library/windows/desktop/system.management.automation.jobstate(v=vs.85).aspx</source>
          <target state="translated">Para obter mais informações sobre estados de trabalho, consulte "Enumeração de JobState" no MSDN em.aspxhttp://msdn.microsoft.com/library/windows/desktop/system.management.automation.jobstate http://msdn.microsoft.com/library/windows/desktop/system.management.automation.jobstate (v=vs.85) (v=vs.85).aspx</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>-Timeout</source>
          <target state="translated">Tempo-limite</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>Determines the maximum wait time for each background job, in seconds.</source>
          <target state="translated">Determina o tempo de espera máximo para cada trabalho em segundo plano, em segundos.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>The default, -1, waits until the job completes, no matter how long it runs.</source>
          <target state="translated">O padrão, -1, aguarda até que o trabalho seja concluído, não importa quanto tempo ele é executado.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>The timing starts when you submit the Wait-Job command, not the Start-Job command.</source>
          <target state="translated">O controle de tempo inicia quando você envia o comando Wait-Job, não o comando Start-Job.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>If this time is exceeded, the wait ends and the command prompt returns, even if the job is still running.</source>
          <target state="translated">Se esse tempo for excedido, a espera termina, e o comando prompt retorna, mesmo se o trabalho ainda está em execução.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>No error message is displayed.</source>
          <target state="translated">Nenhuma mensagem de erro é exibida.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>CommonParameters</source>
          <target state="translated">CommonParameters</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutVariable, -OutBuffer, -PipelineVariable, -Verbose, -WarningAction, and -WarningVariable.</source>
          <target state="translated">Esse cmdlet oferece suporte aos parâmetros comuns:-Debug, - ErrorAction, - ErrorVariable, - InformationAction, - InformationVariable, - OutVariable,-OutBuffer, - PipelineVariable, - Verbose, - WarningAction e - WarningVariable.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>For more information, see about_CommonParameters (http://go.microsoft.com/fwlink/?LinkID=113216).</source>
          <target state="translated">Para obter mais informações, consulte about_CommonParameters (http://go.microsoft.com/fwlink/?LinkID=113216).</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>INPUTS</source>
          <target state="translated">ENTRADAS</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>System.Management.Automation.RemotingJob</source>
          <target state="translated">Remotingjob</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>You can pipe a job object to Wait-Job.</source>
          <target state="translated">É possível redirecionar um objeto de trabalho para Wait-Job.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>OUTPUTS</source>
          <target state="translated">SAÍDAS</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>System.Management.Automation.PSRemotingJob</source>
          <target state="translated">System.Management.Automation.PSRemotingJob</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>Wait-Job returns job objects that represent the completed jobs.</source>
          <target state="translated">Wait-Job retorna objetos de trabalho que representam os trabalhos concluídos.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>If the wait ends because the value of the Timeout parameter is exceeded, Wait-Job does not return any objects.</source>
          <target state="translated">Se a espera termina porque o valor do parâmetro Timeout foi excedido, Wait-Job não retornará nenhum objeto.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>NOTES</source>
          <target state="translated">ANOTAÇÕES</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source>By default, <bpt id="p1">**</bpt>Wait-Job<ept id="p1">**</ept> returns (terminates the wait) when jobs are in one of the following states: Completed, Failed, Stopped, Suspended, or Disconnected.</source>
          <target state="translated">Por padrão, <bpt id="p1">**</bpt>Wait-Job<ept id="p1">**</ept> retorna (encerra o tempo de espera) quando os trabalhos estão em um dos seguintes estados: concluído, falhou, parado, Suspended ou desconectado.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source>To direct <bpt id="p1">**</bpt>Wait-Job<ept id="p1">**</ept> to continue waiting for <bpt id="p2">**</bpt>Suspended<ept id="p2">**</ept> and <bpt id="p3">**</bpt>Disconnected<ept id="p3">**</ept> jobs, use the <bpt id="p4">**</bpt>Force<ept id="p4">**</ept> parameter.</source>
          <target state="translated">Para direcionar <bpt id="p1">**</bpt>Wait-Job<ept id="p1">**</ept> para continuar esperando <bpt id="p2">**</bpt>suspenso<ept id="p2">**</ept> e <bpt id="p3">**</bpt>desconectado<ept id="p3">**</ept> trabalhos, use o <bpt id="p4">**</bpt>força<ept id="p4">**</ept> parâmetro.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source>RELATED LINKS</source>
          <target state="translated">LINKS RELACIONADOS</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source>Get-Job</source>
          <target state="translated">Get-Job</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source>Invoke-Command</source>
          <target state="translated">Invoke-Command</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source>Receive-Job</source>
          <target state="translated">Trabalho de recebimento</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve">
          <source>Remove-Job</source>
          <target state="translated">Remover trabalho</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source>Resume-Job</source>
          <target state="translated">Resume-Job</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source>Start-Job</source>
          <target state="translated">Iniciar trabalho</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source>Stop-Job</source>
          <target state="translated">Interrupção do trabalho</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve">
          <source>Suspend-Job</source>
          <target state="translated">Suspend-Job</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve">
          <source>about_Jobs</source>
          <target state="translated">about_Jobs</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve">
          <source>about_Job_Details</source>
          <target state="translated">about_Job_Details</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve">
          <source>about_Remote_Jobs</source>
          <target state="translated">about_Remote_Jobs</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve">
          <source>about_Remote_Variables</source>
          <target state="translated">about_Remote_Variables</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>