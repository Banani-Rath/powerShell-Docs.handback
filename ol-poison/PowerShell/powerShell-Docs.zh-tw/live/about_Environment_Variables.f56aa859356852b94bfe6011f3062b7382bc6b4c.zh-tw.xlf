<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-tw">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-1c394fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">0de76a71f2480fc8dc8a42a89f0793659bd1b32f</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">reference\5.0\Microsoft.PowerShell.Core\About\about_Environment_Variables.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions" />
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">9bcc1bb8e8837210d6a023dad34d490dbf406f7f</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">7cd3261c98a26b5673f496a1fa3ec35c6c022a6a</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>about_Environment_Variables</source>
          <target state="translated">about_Environment_Variables</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>powershell, cmdlet</source>
          <target state="translated">powershell 指令程式</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>About Environment Variables</source>
          <target state="translated">環境變數</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>about_Environment_Variables</source>
          <target state="translated">about_Environment_Variables</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>about_Environment_Variables</source>
          <target state="translated">about_Environment_Variables</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>SHORT DESCRIPTION</source>
          <target state="translated">簡短描述</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Describes how to access Windows environment variables in Windows PowerShell.</source>
          <target state="translated">說明如何存取 Windows PowerShell 中的 Windows 環境變數。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>LONG DESCRIPTION</source>
          <target state="translated">詳細描述</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Environment variables store information about the operating system environment.</source>
          <target state="translated">環境變數會儲存作業系統環境的相關資訊。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>This information includes details such as the operating system path, the number of processors used by the operating system, and the location of temporary folders.</source>
          <target state="translated">此資訊包括詳細資料，例如作業系統路徑的作業系統，以及暫存資料夾的位置所使用的處理器數目。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>The environment variables store data that is used by the operating system and other programs.</source>
          <target state="translated">環境變數儲存資料所使用的作業系統和其他程式。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>For example, the WINDIR environment variable contains the location of the Windows installation directory.</source>
          <target state="translated">例如，WINDIR 環境變數包含 Windows 安裝目錄的位置。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Programs can query the value of this variable to determine where Windows operating system files are located.</source>
          <target state="translated">程式可以查詢這個變數，以判斷 Windows 作業系統檔案的所在位置的值。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Windows PowerShell lets you view and change Windows environment variables, including the variables set in the registry, and those set for a particular session.</source>
          <target state="translated">Windows PowerShell 可讓您檢視和變更 Windows 環境變數，包括在登錄中設定的變數和設定特定的工作階段。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>The Windows PowerShell environment provider simplifies this process by making it easy to view and change the environment variables.</source>
          <target state="translated">Windows PowerShell 環境提供者會簡化此程序，讓您輕鬆檢視及變更環境變數。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Unlike other types of variables in Windows PowerShell, environment variables and their values are inherited by child sessions, such as local background jobs and the sessions in which module members run.</source>
          <target state="translated">不同於其他類型的變數，在 Windows PowerShell 中，環境變數，其值會由子工作階段，例如本機背景工作和工作階段中執行模組成員繼承。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>This makes environment variables well suited to storing values that are needed in both parent and child sessions.</source>
          <target state="translated">這可讓環境變數是很適合儲存在父和子工作階段中所需的值。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Windows PowerShell Environment Provider The Windows PowerShell environment provider lets you access Windows environment variables in Windows PowerShell in a Windows PowerShell drive (the Env: drive).</source>
          <target state="translated">Windows PowerShell 環境提供者的 Windows PowerShell 環境提供者可讓您存取 Windows PowerShell 中的 Windows PowerShell 磁碟機中的 Windows 環境變數 (Env︰ 磁碟機)。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>This drive looks much like a file system drive.</source>
          <target state="translated">此磁碟機很像檔案系統磁碟機。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>To go to the Env: drive, type:</source>
          <target state="translated">若要移至 Env︰ 磁碟機，請輸入︰</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Set-Location Env:</source>
          <target state="translated">Set-location Env:</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Then, to display the contents of the Env: drive, type:</source>
          <target state="translated">然後，若要顯示的內容為 Env︰ 磁碟機，請輸入︰</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Get-ChildItem</source>
          <target state="translated">Get-ChildItem</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>You can view the environment variables in the Env: drive from any other Windows PowerShell drive, and you can go into the Env: drive to view and change the environment variables.</source>
          <target state="translated">您可以檢視環境變數在 Env︰ 磁碟機與其他 Windows PowerShell 磁碟機，您可以進入 Env︰ 磁碟機來檢視和變更環境變數。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Environment Variable Objects In Windows PowerShell, each environment variable is represented by an object that is an instance of the System.Collections.DictionaryEntry class.</source>
          <target state="translated">環境變數的物件在 Windows PowerShell 中，每個環境變數是 System.Collections.DictionaryEntry 類別的執行個體的物件所表示。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>In each DictionaryEntry object, the name of the environment variable is the dictionary key.</source>
          <target state="translated">每個 DictionaryEntry 物件，在環境變數的名稱會是字典索引鍵。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>The value of the variable is the dictionary value.</source>
          <target state="translated">變數的值是字典值。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>To display an environment variable in Windows PowerShell, get an object that represents the variable, and then display the values of the object properties.</source>
          <target state="translated">若要在 Windows PowerShell 中顯示的環境變數，取得物件，表示變數，並接著顯示物件屬性的值。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>When you change an environment variable in Windows PowerShell, use the methods that are associated with the DictionaryEntry object.</source>
          <target state="translated">當您變更 Windows PowerShell 中的環境變數時，請使用 DictionaryEntry 物件相關聯的方法。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>To display the properties and methods of the object that represents an environment variable in Windows PowerShell, use the Get-Member cmdlet.</source>
          <target state="translated">若要顯示的屬性和方法的物件，表示 Windows PowerShell 中的環境變數，請使用 Get-member 指令程式。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>For example, to display the methods and properties of all the objects in the Env: drive, type:</source>
          <target state="translated">例如，若要顯示的方法和屬性的所有物件在 Env︰ 磁碟機，請輸入︰</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Get-Item -Path Env:* | Get-Member</source>
          <target state="translated">取得項目-路徑 Env: * |取得成員</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Displaying Environment Variables You can use the cmdlets that contain the Item noun (the Item cmdlets) to display and change the values of environment variables.</source>
          <target state="translated">顯示環境變數您可以使用包含 Item 名詞 (Item cmdlet) 的 cmdlet，來顯示和變更環境變數的值。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Because environment variables do not have child items, the output of Get-Item and Get-ChildItem is the same.</source>
          <target state="translated">環境變數沒有子項目，因為 Get-item，Get-childitem 的輸出會是相同。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>When you refer to an environment variable, type the Env: drive name followed by the name of the variable.</source>
          <target state="translated">當您參考環境變數時，請輸入 Env︰ 磁碟機名稱後面加上變數的名稱。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>For example, to display the value of the COMPUTERNAME environment variable, type:</source>
          <target state="translated">例如，若要顯示電腦名稱環境變數的值，請輸入︰</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Get-Childitem Env:Computername</source>
          <target state="translated">Get-childitem Env:Computername</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>To display the values of all the environment variables, type:</source>
          <target state="translated">若要顯示所有環境變數的值，請輸入︰</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Get-ChildItem Env:</source>
          <target state="translated">Get-childitem Env:</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>By default, Windows PowerShell displays the environment variables in the order in which it retrieves them.</source>
          <target state="translated">根據預設，Windows PowerShell 會顯示環境變數，它擷取的順序。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>To sort the list of environment variables by variable name, pipe the output of a Get-ChildItem command to the Sort-Object cmdlet.</source>
          <target state="translated">若要排序的環境變數清單，以變數名稱，透過管道傳送至 Sort-object cmdlet Get-childitem 命令的輸出。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>For example, from any Windows PowerShell drive, type:</source>
          <target state="translated">例如，從任何 Windows PowerShell 磁碟機，請輸入︰</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Get-ChildItem Env: | Sort Name</source>
          <target state="translated">Get-childitem Env: |排序名稱</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>You can also go into the Env: drive by using the Set-Location cmdlet:</source>
          <target state="translated">您也可以移到 Env︰ 磁碟機使用 Set-location cmdlet:</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Set-Location Env:</source>
          <target state="translated">Set-location Env:</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>When you are in the Env: drive, you can omit the Env: drive name from the path.</source>
          <target state="translated">當您是在 Env︰ 磁碟機中，您可以省略 Env︰ 路徑中的磁碟機名稱。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>For example, to display all the environment variables, type:</source>
          <target state="translated">例如，若要顯示所有環境變數，請輸入︰</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Get-ChildItem</source>
          <target state="translated">Get-ChildItem</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>To display the value of the COMPUTERNAME variable from within the Env: drive, type:</source>
          <target state="translated">若要顯示變數中的電腦名稱 Env 內的值︰ 磁碟機，請輸入︰</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Get-ChildItem ComputerName</source>
          <target state="translated">Get-childitem 電腦名稱</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>You can also display and change the values of environment variables without using a cmdlet by using the expression parser in Windows PowerShell.</source>
          <target state="translated">您也可以顯示和變更環境變數的值，而不需使用指令程式在 Windows PowerShell 中使用的運算式剖析器。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>To display the value of an environment variable, use the following syntax:</source>
          <target state="translated">若要顯示環境變數的值，請使用下列語法︰</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>$Env:&lt;variable-name&gt;</source>
          <target state="translated">$Env: &lt; 變數名稱 &gt;</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>For example, to display the value of the WINDIR environment variable, type the following command at the Windows PowerShell command prompt:</source>
          <target state="translated">比方說，若要顯示 WINDIR 環境變數的值，請在 Windows PowerShell 命令提示字元輸入下列命令︰</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>$Env:windir</source>
          <target state="translated">$Env: windir</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>In this syntax, the dollar sign ($) indicates a variable, and the drive name indicates an environment variable.</source>
          <target state="translated">在這個語法中，貨幣符號 （$） 表示變數，而磁碟機名稱表示環境變數。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Changing Environment Variables To make a persistent change to an environment variable, use System in Control Panel (Advanced tab or the Advanced System Settings item) to store the change in the registry.</source>
          <target state="translated">變更環境變數來持續變更的環境變數，請使用系統控制台 （進階索引標籤或 [進階系統設定]） 儲存在登錄中變更。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>When you change environment variables in Windows PowerShell, the change affects only the current session.</source>
          <target state="translated">當您變更環境變數，在 Windows PowerShell 中的時，變更會影響目前工作階段。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>This behavior resembles the behavior of the Set command in Windows-based environments and the Setenv command in UNIX-based environments.</source>
          <target state="translated">這個行為類似 Windows 環境中的 Set 命令和 Setenv 命令，以 UNIX 為基礎的環境中的行為。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>You must also have permission to change the values of the variables.</source>
          <target state="translated">您也必須變更變數的值的權限。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>If you try to change a value without sufficient permission, the command fails, and Windows PowerShell displays an error.</source>
          <target state="translated">如果您嘗試將沒有足夠的權限的值變更時，命令失敗，並在 Windows PowerShell 會顯示錯誤。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>You can change the values of variables without using a cmdlet by using the following syntax:</source>
          <target state="translated">您可以變更變數的值，而不需使用指令程式可以使用下列語法︰</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>$Env:&lt;variable-name&gt; = "&lt;new-value&gt;"</source>
          <target state="translated">$Env: &lt; 變數名稱 &gt; = 「 &lt; 新值 &gt; 」</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>For example, to append ";c:\temp" to the value of the Path environment variable, use the following syntax:</source>
          <target state="translated">例如，若要附加 」; c:\temp"Path 環境變數的值，請使用下列語法︰</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>$Env:path = $env:path + ";c:\temp"</source>
          <target state="translated">$Env︰ 路徑 = $env︰ 路徑 +"; c:\temp"</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>You can also use the Item cmdlets, such as Set-Item, Remove-Item, and Copy-Item to change the values of environment variables.</source>
          <target state="translated">您也可以使用 Item cmdlet，例如設定項目移除項目，並複製項目變更環境變數的值。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>For example, to use the Set-Item cmdlet to append ";c:\temp" to the value of the Path environment variable, use the following syntax:</source>
          <target state="translated">例如，若要使用 Set-item cmdlet 附加 」; c:\temp"Path 環境變數的值，請使用下列語法︰</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>Set-Item -Path Env:Path -Value ($Env:Path + ";C:\Temp")</source>
          <target state="translated">設定項目-路徑 Env:Path-值 ($Env︰ 路徑 +";C:\Temp")</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>In this command, the value is enclosed in parentheses so that it is interpreted as a unit.</source>
          <target state="translated">這個命令中，值以括號括住，因此它會解譯為一個單位。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>Saving Changes to Environment Variables To create or change the value of an environment variable in every Windows PowerShell session, add the change to your Windows PowerShell profile.</source>
          <target state="translated">將變更儲存到環境變數來建立或變更環境變數的值在每個 Windows PowerShell 工作階段中，新增至您的 Windows PowerShell 設定檔的變更。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>For example, to add the C:\Temp directory to the Path environment variable in every Windows PowerShell session, add the following command to your Windows PowerShell profile.</source>
          <target state="translated">比方說，若要新增至 Path 環境變數的 C:\Temp 目錄中每個 Windows PowerShell 工作階段，將下列命令新增至您的 Windows PowerShell 設定檔。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>$Env:Path = $Env:Path + ";C:\Temp"</source>
          <target state="translated">$Env︰ 路徑 = $Env︰ 路徑 +";C:\Temp"</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>To add the command to an existing profile, such as the CurrentUser,AllHosts profile, type:</source>
          <target state="translated">若要將命令加入至現有的設定檔，例如 CurrentUser，AllHosts 設定檔，請輸入︰</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>Add-Content -Path $Profile.CurrentUserAllHosts -Value '$Env:Path = $Env:Path + ";C:\Temp"'</source>
          <target state="translated">Add-content-路徑 $Profile.CurrentUserAllHosts-值 ' $Env︰ 路徑 = $Env︰ 路徑 +";C:\Temp"'</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>Environment Variables That Store Preferences Windows PowerShell features can use environment variables to store user preferences.</source>
          <target state="translated">環境變數，儲存喜好設定 Windows PowerShell 功能可以使用環境變數來儲存使用者喜好設定。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>These variables work like preference variables, but they are inherited by child sessions of the sessions in which they are created.</source>
          <target state="translated">這些變數一樣喜好設定變數，但工作階段建立所在的子工作階段會繼承。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>For more information about preference variables, see about_preference_variables.</source>
          <target state="translated">如需喜好設定變數的詳細資訊，請參閱 about_preference_variables。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>The environment variables that store preferences include:</source>
          <target state="translated">儲存喜好設定的環境變數包括︰</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>PSExecutionPolicyPreference Stores the execution policy set for the current session.</source>
          <target state="translated">PSExecutionPolicyPreference 存放區的執行原則設為目前的工作階段。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>This environment variable exists only when you set an execution policy for a single session.</source>
          <target state="translated">這個環境變數存在，只有當您為單一工作階段執行原則。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>You can do this in two different ways.</source>
          <target state="translated">您可以在兩個不同的方式。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>-- Use PowerShell.exe to start a session at the command line and use its ExecutionPolicy parameter to set the execution policy for the session.</source>
          <target state="translated">-使用 PowerShell.exe 來啟動工作階段在命令列並使用其 ExecutionPolicy 參數來設定工作階段執行原則。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>-- Use the Set-ExecutionPolicy cmdlet.</source>
          <target state="translated">-使用 Set-executionpolicy 指令程式。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>Use the Scope parameter with a value of "Process".</source>
          <target state="translated">使用範圍參數值是 「 程序 」。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>For more information, see about_Execution_Policies.</source>
          <target state="translated">如需詳細資訊，請參閱 about_Execution_Policies。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>PSModulePath Stores the paths to the default module directories.</source>
          <target state="translated">PSModulePath 會儲存到預設模組目錄的路徑。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>Windows PowerShell looks for modules in the specified directories when you do not specify a full path to a module.</source>
          <target state="translated">如果未指定模組的完整路徑，Windows PowerShell 會尋找指定的目錄中的模組。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>The default value of $Env:PSModulePath is:</source>
          <target state="translated">$Env 的預設值︰ PSModulePath 是︰</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>$home\Documents\WindowsPowerShell\Modules; $pshome\Modules</source>
          <target state="translated">$ home\Documents\WindowsPowerShell\Modules。$ pshome\Modules</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>Windows PowerShell sets the value of "$pshome\Modules" in the registry.</source>
          <target state="translated">Windows PowerShell 登錄中設定 「 $pshome\Modules"的值。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>It sets the value of "$home\Documents\WindowsPowerShell\Modules" each time you start Windows PowerShell.</source>
          <target state="translated">它會在每次啟動 Windows PowerShell 設定"$home\Documents\WindowsPowerShell\Modules"的值。</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>In addition, setup programs that install modules in other directories, such as the Program Files directory, can append their locations to the value of PSModulePath.</source>
          <target state="translated">此外，其他目錄，例如 [Program Files] 目錄中，在安裝模組的安裝程式可以將它們的位置附加至 PSModulePath 的值。</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>To change the default module directories for the current session, use the following command format to change the value of the PSModulePath environment variable.</source>
          <target state="translated">若要變更預設模組目錄的目前工作階段，請使用下列命令格式變更 PSModulePath 環境變數的值。</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>For example, to add the "C:\Program Files\Fabrikam\Modules" directory to the value of the PSModulePath environment variable, type:</source>
          <target state="translated">例如，若要將"C:\Program Files\Fabrikam\Modules 」 目錄加入至 PSModulePath 環境變數的值，請輸入︰</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>$Env:PSModulePath = $Env:PSModulePath + ";C:\Program Files\Fabrikam\Modules"</source>
          <target state="translated">$Env: PSModulePath = $Env: PSModulePath +";C:\Program Files\Fabrikam\Modules 」</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>The semi-colon (;) in the command separates the new path from the path that precedes it in the list.</source>
          <target state="translated">命令中的分號 (;) 會分隔新路徑與清單中該路徑前面的路徑。</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>To change the value of PSModulePath in every session, add the previous command to your Windows PowerShell profile or use the SetEnvironmentVariable method of the Environment class.</source>
          <target state="translated">若要變更 PSModulePath 的值在每個工作階段中，將前一個命令新增至您的 Windows PowerShell 設定檔，或使用環境類別的 SetEnvironmentVariable 方法。</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>The following command uses the GetEnvironmentVariable method to get the machine setting of PSModulePath and the SetEnvironmentVariable method to add the C:\Program Files\Fabrikam\Modules path to the value.</source>
          <target state="translated">下列命令會使用 GetEnvironmentVariable 方法取得 PSModulePath 和 SetEnvironmentVariable 方法，將 C:\Program Files\Fabrikam\Modules 路徑新增到值的電腦上的設定。</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>$path = [System.Environment]::GetEnvironmentVariable("PSModulePath", "Machine") [System.Environment]::SetEnvironmentVariable("PSModulePath", $path + ` ";C:\Program Files\Fabrikam\Modules", "Machine")</source>
          <target state="translated">$path = [System.Environment]::GetEnvironmentVariable (「 PSModulePath 」、 「 電腦 」) [System.Environment]::SetEnvironmentVariable (「 PSModulePath &gt;，$path + '";C:\Program Files\Fabrikam\Modules 」、 「 電腦 」)</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>To add a path to the user setting, change the target value to User.</source>
          <target state="translated">若要新增的使用者設定的路徑，將變更為使用者的目標值。</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>$path = [System.Environment]::GetEnvironmentVariable("PSModulePath", "User") [System.Environment]::SetEnvironmentVariable("PSModulePath", $path + ` ";$home\Documents\Fabrikam\Modules", "User")</source>
          <target state="translated">$path = [System.Environment]::GetEnvironmentVariable （「 PSModulePath 」、 「 使用者 」） [System.Environment]::SetEnvironmentVariable (「 PSModulePath &gt;，$path + ' 」; $home\Documents\Fabrikam\Modules 」，「 使用者 」)</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>For more information about the methods of the System.Environment class, see "Environment Methods" in MSDN at http://go.microsoft.com/fwlink/?LinkId=242783.</source>
          <target state="translated">如 System.Environment 類別的方法的相關詳細資訊，請參閱在 http://go.microsoft.com/fwlink/?LinkId=242783 的 MSDN 中的 「 環境方法 」。</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>You can add also add a command that changes the value to your profile or use System in Control Panel to change the value of the PSModulePath environment variable in the registry.</source>
          <target state="translated">您可以新增也加入的值變更為您的設定檔的命令，或使用系統控制台] 中，若要變更登錄中 PSModulePath 環境變數的值。</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>For more information, see about_Modules.</source>
          <target state="translated">如需詳細資訊，請參閱 about_Modules。</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>SEE ALSO</source>
          <target state="translated">另請參閱</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>Environment (provider) about_Modules</source>
          <target state="translated">環境 （提供者） about_Modules</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>