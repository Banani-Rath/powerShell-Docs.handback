<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-tw">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-1c394fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d28a2260df4056a39f99d42991f40aaaf1cb0c84</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">reference\4.0\Microsoft.PowerShell.Utility\Get-TypeData.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions" />
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">9b063e685c9dd93f1a078a91c7e10f86b3549ea1</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">025015b0fd63591b3fbbfb4582b4df3bde7e7ce1</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>powershell, cmdlet</source>
          <target state="translated">powershell 指令程式</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Get-TypeData</source>
          <target state="translated">Get-TypeData</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Get-TypeData</source>
          <target state="translated">Get-TypeData</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>SYNOPSIS</source>
          <target state="translated">概要</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Gets the extended type data in the current session.</source>
          <target state="translated">取得目前工作階段中的延伸類型資料。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>SYNTAX</source>
          <target state="translated">語法</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>DESCRIPTION</source>
          <target state="translated">描述</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>Get-TypeData<ept id="p1">**</ept> cmdlet gets the extended type data in the current session.</source>
          <target state="translated"> <bpt id="p1">**</bpt>Get-typedata<ept id="p1">**</ept> cmdlet 會取得目前工作階段中的延伸的類型資料。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>This includes type data that was added to the session by Types.ps1xml file and dynamic type data that was added by using the parameter of the Update-TypeData cmdlet.</source>
          <target state="translated">這包括由 Types.ps1xml 檔案新增至工作階段的型別資料和動態型別加入資料，使用 Update-typedata cmdlet 的參數。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>You can use the extended type data that <bpt id="p1">**</bpt>Get-TypeData<ept id="p1">**</ept> returns to examine the type data in the session and send it to the <bpt id="p2">**</bpt>Update-TypeData<ept id="p2">**</ept> and <bpt id="p3">**</bpt>Remove-TypeData<ept id="p3">**</ept> cmdlets.</source>
          <target state="translated">您可以使用的延伸的類型資料的 <bpt id="p1">**</bpt>Get-typedata<ept id="p1">**</ept> 傳回工作階段中檢查的型別資料，並將它傳送到 <bpt id="p2">**</bpt>Update-typedata<ept id="p2">**</ept> 和 <bpt id="p3">**</bpt>Remove-typedata<ept id="p3">**</ept> 指令程式。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Extended type data adds properties and methods to objects in Windows PowerShell.</source>
          <target state="translated">延伸類型資料會將屬性和方法新增到 Windows PowerShell 中的物件。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>You can use the added properties and methods in the same ways that you would use the properties and methods that are defined in the object type.</source>
          <target state="translated">您可以比照使用物件類型中定義之屬性和方法的方式，來使用新增的屬性和方法。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>However, when writing scripts, be aware that the added properties and methods might not be present in every Windows PowerShell session.</source>
          <target state="translated">不過，在撰寫指令碼時，請注意，可能不是每個 Windows PowerShell 工作階段中都會有新增的屬性和方法。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>For more information about Types.ps1xml files, see about_Types.ps1xml (http://go.microsoft.com/fwlink/?LinkID=113274).</source>
          <target state="translated">如需 Types.ps1xml 檔案的詳細資訊，請參閱 about_Types.ps1xml (http://go.microsoft.com/fwlink/?LinkID=113274)。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>For more information about dynamic type data that the <bpt id="p1">**</bpt>Update-TypeData<ept id="p1">**</ept> cmdlet adds, see Update-TypeData.</source>
          <target state="translated">如需動態型別資料的詳細資訊， <bpt id="p1">**</bpt>Update-typedata<ept id="p1">**</ept> 指令程式會加入，請參閱 Update-typedata。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>This cmdlet is introduced in Windows PowerShell 3.0.</source>
          <target state="translated">此 Cmdlet 是在 Windows PowerShell 3.0 引進。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>EXAMPLES</source>
          <target state="translated">範例</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Example 1</source>
          <target state="translated">範例 1</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>This command gets all extended type data in the current session.</source>
          <target state="translated">此命令取得目前工作階段中的所有延伸類型資料。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Example 2</source>
          <target state="translated">範例 2</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>This command gets all types in the current session that have names that contain "Eventing".</source>
          <target state="translated">此命令取得目前工作階段中名稱包含 "Eventing" 的所有類型。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>1:</source>
          <target state="translated">1：</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>This command gets the script block that creates the value of the <bpt id="p1">**</bpt>EventID<ept id="p1">**</ept> property of <bpt id="p2">**</bpt>EventLogEntry<ept id="p2">**</ept> objects.</source>
          <target state="translated">此命令會取得建立值的指令碼區塊 <bpt id="p1">**</bpt>EventID<ept id="p1">**</ept> 屬性 <bpt id="p2">**</bpt>EventLogEntry<ept id="p2">**</ept> 物件。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Example 3</source>
          <target state="translated">範例 3</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>This command gets the script block that defines the <bpt id="p1">**</bpt>DateTime<ept id="p1">**</ept> property of <bpt id="p2">**</bpt>System.DateTime<ept id="p2">**</ept> objects in Windows PowerShell.</source>
          <target state="translated">此命令會取得定義的指令碼區塊 <bpt id="p1">**</bpt>DateTime<ept id="p1">**</ept> 屬性 <bpt id="p2">**</bpt>System.DateTime<ept id="p2">**</ept> Windows PowerShell 中的物件。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>The command uses the <bpt id="p1">**</bpt>Get-TypeData<ept id="p1">**</ept> cmdlet to get the extended type data for the <bpt id="p2">**</bpt>System.DataTime<ept id="p2">**</ept> type.</source>
          <target state="translated">此命令會使用 <bpt id="p1">**</bpt>Get-typedata<ept id="p1">**</ept> cmdlet 來取得延伸的類型資料 <bpt id="p2">**</bpt>System.DataTime<ept id="p2">**</ept> 型別。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>The command gets the <bpt id="p1">**</bpt>Members<ept id="p1">**</ept> property of the <bpt id="p2">**</bpt>TypeData<ept id="p2">**</ept> object.</source>
          <target state="translated">此命令會取得 <bpt id="p1">**</bpt>成員<ept id="p1">**</ept> 屬性 <bpt id="p2">**</bpt>TypeData<ept id="p2">**</ept> 物件。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>Members<ept id="p1">**</ept> property contains  a hash table of properties and methods that are defined by extended type data.</source>
          <target state="translated"> <bpt id="p1">**</bpt>成員<ept id="p1">**</ept> 屬性包含屬性和方法所定義的延伸的類型資料的雜湊表。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Each key in the Members hash table is a property or method name and each value is the definition of the property or method value.</source>
          <target state="translated">Members 雜湊表中的每個索引鍵都是一個屬性或方法的名稱，而每個值則是該屬性或方法值的定義。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>The command gets the <bpt id="p1">**</bpt>DateTime<ept id="p1">**</ept> key in Members and its <bpt id="p2">**</bpt>GetScriptBlock<ept id="p2">**</ept> property value.</source>
          <target state="translated">此命令會取得 <bpt id="p1">**</bpt>DateTime<ept id="p1">**</ept> 中成員的索引鍵和其 <bpt id="p2">**</bpt>GetScriptBlock<ept id="p2">**</ept> 屬性值。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>The output shows the script block that creates the value of the <bpt id="p1">**</bpt>DateTime<ept id="p1">**</ept> property of every <bpt id="p2">**</bpt>System.DateTime<ept id="p2">**</ept> object in Windows PowerShell.</source>
          <target state="translated">輸出會顯示建立值的指令碼區塊 <bpt id="p1">**</bpt>DateTime<ept id="p1">**</ept> 屬性的每個 <bpt id="p2">**</bpt>System.DateTime<ept id="p2">**</ept> Windows PowerShell 中的物件。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Example 4</source>
          <target state="translated">範例 4</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>This command finds the Types.ps1xml file that added extended type data for the <bpt id="p1">**</bpt>EventLogEntry<ept id="p1">**</ept> type to the session.</source>
          <target state="translated">此命令會尋找新增延伸的類型資料的 Types.ps1xml 檔案 <bpt id="p1">**</bpt>EventLogEntry<ept id="p1">**</ept> 工作階段的型別。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>This command uses the <bpt id="p1">**</bpt>Get-ChildItem<ept id="p1">**</ept> cmdlet (alias = "dir") to perform a recursive search for Types.ps1xml files in the Windows PowerShell installation directory ($pshome) and its subdirectories.</source>
          <target state="translated">此命令會使用 <bpt id="p1">**</bpt>Get-childitem<ept id="p1">**</ept> cmdlet （別名 ="dir"） 來執行遞迴搜尋來尋找 Types.ps1xml 檔案 ($pshome) 的 Windows PowerShell 安裝目錄及其子目錄中。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>The command sends the Types.ps1xml files to the Select-String cmdlet, which does a full-text search for the "<bpt id="p1">**</bpt>EventLogEntry<ept id="p1">**</ept>" type name in the files and returns the matches.</source>
          <target state="translated">命令將 Types.ps1xml 檔案傳送至 Select-string cmdlet，哪一個執行全文檢索搜尋 」<bpt id="p1">**</bpt>EventLogEntry<ept id="p1">**</ept>」 中的檔案和傳回相符項目型別名稱。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>PARAMETERS</source>
          <target state="translated">參數</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>-TypeName</source>
          <target state="translated">-TypeName</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Gets type data only for the types with the specified names.</source>
          <target state="translated">只針對具有指定名稱的類型取得類型資料。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>By default, <bpt id="p1">**</bpt>Get-TypeData<ept id="p1">**</ept> gets all types in the session.</source>
          <target state="translated">根據預設， <bpt id="p1">**</bpt>Get-typedata<ept id="p1">**</ept> 取得工作階段中的所有類型。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Enter type names or a name patterns.</source>
          <target state="translated">請輸入類型名稱或名稱模式。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Full names (or name patterns with wildcard characters) are required, even for types in the System namespace.</source>
          <target state="translated">必須使用完整名稱 (或含有萬用字元的名稱模式)，即使是 System 命名空間中的類型也是如此。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Wildcards are supported and the parameter name (-TypeName) is optional.</source>
          <target state="translated">支援使用萬用字元，參數名稱 (-TypeName) 則為選擇性。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>You can also pipe type names to <bpt id="p1">**</bpt>Get-TypeData<ept id="p1">**</ept>.</source>
          <target state="translated">您也可以管線類型名稱傳送至 <bpt id="p1">**</bpt>Get-typedata<ept id="p1">**</ept>。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>CommonParameters</source>
          <target state="translated">CommonParameters</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutVariable, -OutBuffer, -PipelineVariable, -Verbose, -WarningAction, and -WarningVariable.</source>
          <target state="translated">這個 cmdlet 支援一般參數:-偵錯、-ErrorAction、-ErrorVariable、-InformationAction-InformationVariable、-OutVariable、-OutBuffer、-PipelineVariable、-Verbose、-WarningAction 以及-WarningVariable。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>For more information, see about_CommonParameters (http://go.microsoft.com/fwlink/?LinkID=113216).</source>
          <target state="translated">如需詳細資訊，請參閱 about_CommonParameters (http://go.microsoft.com/fwlink/?LinkID=113216)。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>INPUTS</source>
          <target state="translated">輸入</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>System.String</source>
          <target state="translated">System.String</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>You can pipe type names to <bpt id="p1">**</bpt>Get-TypeData<ept id="p1">**</ept>.</source>
          <target state="translated">您可以透過管道傳送至型別名稱 <bpt id="p1">**</bpt>Get-typedata<ept id="p1">**</ept>。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>OUTPUTS</source>
          <target state="translated">輸出</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>System.Management.Automation.Runspaces.TypeData</source>
          <target state="translated">System.Management.Automation.Runspaces.TypeData</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>NOTES</source>
          <target state="translated">附註</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Get-TypeData<ept id="p1">**</ept> gets only the extended type data in the current session.</source>
          <target state="translated"><bpt id="p1">**</bpt>Get-typedata<ept id="p1">**</ept> 取得目前工作階段中的延伸的類型資料。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>It does not get extended type data that is on the computer, but has not been added to the current session, such as extended types that are defined in modules that have not been imported into the current session.</source>
          <target state="translated">它不會取得已在電腦上但尚未新增至目前工作階段的延伸類型資料，例如尚未匯入目前工作階段之模組中定義的延伸類型。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>RELATED LINKS</source>
          <target state="translated">相關的連結</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>about_Types.ps1xml</source>
          <target state="translated">about_Types.ps1xml</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Remove-TypeData</source>
          <target state="translated">Remove-TypeData</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Update-TypeData</source>
          <target state="translated">Update-TypeData</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>