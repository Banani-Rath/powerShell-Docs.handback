<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-tw">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-1c394fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">be04321fef520aab1683c1e62c1c42c7a4180760</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">reference\4.0\Microsoft.PowerShell.Core\About\about_Wildcards.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions" />
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">0ec36ed01d8931ca5ef2dc872741d8878a4c3fc7</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">e5bcad9228269e82926b94e76cd21ac4a9518f8f</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>about_Wildcards</source>
          <target state="translated">about_Wildcards</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>powershell, cmdlet</source>
          <target state="translated">powershell 指令程式</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>About Wildcards</source>
          <target state="translated">有關萬用字元</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>about_Wildcards</source>
          <target state="translated">about_Wildcards</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>TOPIC</source>
          <target state="translated">主題</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>about_Wildcards</source>
          <target state="translated">about_Wildcards</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>SHORT DESCRIPTION</source>
          <target state="translated">簡短描述</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Describes how to use wildcard characters in Windows PowerShell.</source>
          <target state="translated">描述如何在 Windows PowerShell 中使用萬用字元。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>LONG DESCRIPTION</source>
          <target state="translated">詳細描述</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Wildcard characters represent one or many characters.</source>
          <target state="translated">萬用字元表示一或多個字元。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>You can use them to create word patterns in commands.</source>
          <target state="translated">您可以使用它們來建立命令中的文字模式。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>For example, to get all the files in the C:\Techdocs directory that have a .ppt file name extension, type:</source>
          <target state="translated">例如，若要取得目錄中的所有檔案 C:\Techdocs.ppt 檔案名稱副檔名，請輸入︰</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Get-ChildItem c:\techdocs<ph id="ph1">\*</ph>.ppt</source>
          <target state="translated">Get-childitem c:\techdocs<ph id="ph1">\*</ph>.ppt</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>In this case, the asterisk (*) wildcard character represents any characters that appear before the .ppt file name extension.</source>
          <target state="translated">在此情況下，星號 （*） 萬用字元表示.ppt 副檔名之前出現的任何字元。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Windows PowerShell supports the following wildcard characters.</source>
          <target state="translated">Windows PowerShell 支援下列萬用字元。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Wildcard Description        Example  Match             No match</source>
          <target state="translated">萬用字元描述範例符合沒有相符項目</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Matches zero or    aA, ag, Apple      banana more characters</source>
          <target state="translated">比對零或 aA，ag、 Apple banana 多字元</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>?</source>
          <target state="translated">?</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Matches exactly    ?n       an, in, on        ran one character in the specified position</source>
          <target state="translated">完全符合？ n，在中，在其上執行一個字元在指定的位置</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>[ ]      Matches a range    [a-l]ook book, cook, look  took of characters</source>
          <target state="translated">[] 比對範圍 [a-l] 機制本書廚師，查詢所花費的字元</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>[ ]      Matches specified  [bc]ook  book, cook        hook characters</source>
          <target state="translated">[] 符合指定的 [bc] 機制書籍，cook 攔截字元</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>You can include multiple wildcard characters in the same word pattern.</source>
          <target state="translated">您可以在相同的文字模式中包含多個萬用字元。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>For example, to find text files whose names begin with the letters "a" through "l", type:</source>
          <target state="translated">例如，若要尋找名稱開頭為字母"a"到"l"的文字檔案，請輸入︰</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Get-ChildItem c:\techdocs[a-l]*.txt</source>
          <target state="translated">Get-childitem c:\techdocs[a-l]*.txt</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Many cmdlets accept wildcard characters in parameter values.</source>
          <target state="translated">許多 cmdlet 接受參數值中的萬用字元。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>The Help topic for each cmdlet describes which parameters, if any, permit wildcard characters.</source>
          <target state="translated">每個指令程式的 [說明] 主題會說明哪些參數，如果有的話，允許萬用字元。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>For parameters in which wildcard characters are accepted, their use is case-insensitive.</source>
          <target state="translated">在哪一個萬用字元的字元會接受參數，其使用不區分大小寫。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>You can also use wildcard characters in commands and script blocks, such as to create a word pattern that represents property values.</source>
          <target state="translated">您也可以建立 word 模式，表示屬性值，例如使用命令和指令碼區塊中的萬用字元。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>For example, the following command gets services in which the ServiceType property value includes "Interactive".</source>
          <target state="translated">例如，下列命令會取得的服務的 ServiceType 屬性值包含了 「 互動式 」。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Get-Service | Where-Object {$_.ServiceType -like "Interactive"}</source>
          <target state="translated">Get-service |Where-object {$_。ServiceType-像是 「 互動式 」}</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>In the following example, wildcard characters are used to find property values in the conditions of an If statement.</source>
          <target state="translated">在下列範例中，以找出屬性值，If 條件中使用萬用字元陳述式。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>In this command, if the Description of a restore point includes "PowerShell", the command adds the value of the CreationTime property of the restore point to a log file.</source>
          <target state="translated">這個命令中，如果還原點的描述包含"PowerShell"，命令會將還原點將 CreationTime 屬性的值至記錄檔。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>$p = Get-ComputerRestorePoint foreach ($point in $p) {if ($point.description -like "PowerShell") {add-content -path C:\TechDocs\RestoreLog.txt "$($point.CreationTime)"}}</source>
          <target state="translated">$p = Get-computerrestorepoint foreach (在 $p $point) {如果 ($point.description-像是"PowerShell") {新增內容-路徑 C:\TechDocs\RestoreLog.txt"$($point.CreationTime)"}}</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>SEE ALSO</source>
          <target state="translated">另請參閱</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>about_Language_Keywords about_If about_Script_Blocks</source>
          <target state="translated">about_Language_Keywords about_If about_Script_Blocks</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>