<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-tw">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-1c394fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">60af40f1100548229d2e571293b832a23ac852da</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">reference\5.0\Microsoft.PowerShell.Utility\Out-String.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions" />
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">6d36c2ac520544c0e050972d1d754a96f1cfad84</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d09caffddee3a2bfc29f67cd6387c3ca814a29ee</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>powershell, cmdlet</source>
          <target state="translated">powershell 指令程式</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Out-String</source>
          <target state="translated">Out-String</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Out-String</source>
          <target state="translated">Out-String</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>SYNOPSIS</source>
          <target state="translated">概要</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Sends objects to the host as a series of strings.</source>
          <target state="translated">將物件以一系列的字串傳送到主機。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>SYNTAX</source>
          <target state="translated">語法</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>DESCRIPTION</source>
          <target state="translated">描述</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>Out-String<ept id="p1">**</ept> cmdlet converts the objects that Windows PowerShell manages into an array of strings.</source>
          <target state="translated"> <bpt id="p1">**</bpt>Out-string<ept id="p1">**</ept> 指令程式會將 Windows PowerShell 管理的物件轉換成字串陣列。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>By default, <bpt id="p1">**</bpt>Out-String<ept id="p1">**</ept> accumulates the strings and returns them as a single string, but you can use the stream parameter to direct <bpt id="p2">**</bpt>Out-String<ept id="p2">**</ept> to return one string at a time.</source>
          <target state="translated">根據預設， <bpt id="p1">**</bpt>Out-string<ept id="p1">**</ept> 累積字串並傳回它們作為單一字串，但是您可以使用資料流參數來指示 <bpt id="p2">**</bpt>Out-string<ept id="p2">**</ept> 一次傳回一個字串。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>This cmdlet lets you search and manipulate string output as you would in traditional shells when object manipulation is less convenient.</source>
          <target state="translated">此 Cmdlet 可讓您搜尋和操作字串輸出，比在傳統殼層中的物件操作更便利。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>EXAMPLES</source>
          <target state="translated">範例</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Example 1: Output text to the console as a string</source>
          <target state="translated">範例 1︰ 輸出文字，做為字串主控台</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>This command sends the content of the Testfile2.txt file to the console as a single string.</source>
          <target state="translated">此命令將 Testfile2.txt 檔案的內容以單一字串形式傳送至主控台。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>It uses the Get-Content cmdlet to get the content of the file.</source>
          <target state="translated">它使用 Get-content cmdlet 取得檔案的內容。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>The pipeline operator (|) sends the content to <bpt id="p1">**</bpt>Out-String<ept id="p1">**</ept>, which sends the content to the console as a string.</source>
          <target state="translated">管線運算子 (|) 會傳送內容至 <bpt id="p1">**</bpt>Out-string<ept id="p1">**</ept>, ，這將內容傳送至主控台，做為字串。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Example 2: Get the current culture and convert the data to strings.</source>
          <target state="translated">範例 2︰ 取得目前的文化特性，並將資料轉換成字串。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>These commands get the regional settings for the current user and convert the data to strings.</source>
          <target state="translated">這些命令取得目前使用者的區域設定，並將資料轉換成字串。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Example 3: Working with objects</source>
          <target state="translated">範例 3︰ 使用物件</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>This example demonstrates the difference between working with objects and working with strings.</source>
          <target state="translated">此範例示範使用物件和使用字串之間的差異。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>The command displays aliases that include the phrase Get-Command.</source>
          <target state="translated">此命令會顯示包含片語 Get 命令的別名。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>It uses the Get-Alias cmdlet to get a set of <bpt id="p1">**</bpt>AliasInfo<ept id="p1">**</ept> objects (one for each alias in the current session).</source>
          <target state="translated">它使用 Get-alias cmdlet 取得一組 <bpt id="p1">**</bpt>AliasInfo<ept id="p1">**</ept> 物件 （一個目前工作階段中的每個別名）。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>The pipeline operator (|) sends the output of the <bpt id="p1">**</bpt>Get-Alias<ept id="p1">**</ept> cmdlet to the <bpt id="p2">**</bpt>Out-String<ept id="p2">**</ept> cmdlet, which converts the objects to a series of strings.</source>
          <target state="translated">管線運算子 (|) 的輸出傳送 <bpt id="p1">**</bpt>Get-alias<ept id="p1">**</ept> cmdlet <bpt id="p2">**</bpt>Out-string<ept id="p2">**</ept> 指令程式，以將物件轉換成一系列的字串。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>It uses the <bpt id="p1">*</bpt>Stream<ept id="p1">*</ept> parameter of <bpt id="p2">**</bpt>Out-String<ept id="p2">**</ept> to send each string individually, instead of concatenating them into a single string.</source>
          <target state="translated">它會使用 <bpt id="p1">*</bpt>資料流<ept id="p1">*</ept> 參數 <bpt id="p2">**</bpt>Out-string<ept id="p2">**</ept> 會個別傳送每個字串，而不是將它們串連成單一字串。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Another pipeline operator sends the strings to the Select-String cmdlet, which selects the strings that include <bpt id="p1">**</bpt>Get-Command<ept id="p1">**</ept> anywhere in the string.</source>
          <target state="translated">另一個管線運算子會將字串傳送至 Select-string cmdlet，其會選取字串，包含 <bpt id="p1">**</bpt>Get 命令<ept id="p1">**</ept> 字串中的任何位置。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>If you omit the <bpt id="p1">*</bpt>Stream<ept id="p1">*</ept> parameter, the command displays all of the aliases, because <bpt id="p2">**</bpt>Select-String<ept id="p2">**</ept> finds <bpt id="p3">**</bpt>Get-Command<ept id="p3">**</ept> in the single string that <bpt id="p4">**</bpt>Out-String<ept id="p4">**</ept> returns, and the formatter displays the string as a table.</source>
          <target state="translated">如果您省略 <bpt id="p1">*</bpt>資料流<ept id="p1">*</ept> 參數，此命令會顯示所有別名，因為 <bpt id="p2">**</bpt>Select-string<ept id="p2">**</ept> 尋找 <bpt id="p3">**</bpt>Get 命令<ept id="p3">**</ept> 單一字串 <bpt id="p4">**</bpt>Out-string<ept id="p4">**</ept> 傳回，以及為資料表中顯示的字串。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>PARAMETERS</source>
          <target state="translated">參數</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>-InputObject</source>
          <target state="translated">-InputObject</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Specifies the objects to be written to a string.</source>
          <target state="translated">指定要寫入字串的物件。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Enter a variable that contains the objects, or type a command or expression that gets the objects.</source>
          <target state="translated">輸入包含物件的變數，或輸入可取得物件的命令或運算式。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>-Stream</source>
          <target state="translated">資料流</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Indicates that the cmdlet sends the strings for each object separately.</source>
          <target state="translated">表示此指令程式會分別傳送每個物件的字串。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>By default, the strings for each object are accumulated and sent as a single string.</source>
          <target state="translated">根據預設，每個物件的字串會累積，並會以單一字串形式傳送。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>To use the <bpt id="p1">*</bpt>Stream<ept id="p1">*</ept> parameter, type <ph id="ph1">`-Stream`</ph> or its alias, <ph id="ph2">`ost`</ph>.</source>
          <target state="translated">若要使用 <bpt id="p1">*</bpt>資料流<ept id="p1">*</ept> 參數，請輸入 <ph id="ph1">`-Stream`</ph> 或其別名 <ph id="ph2">`ost`</ph>。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>-Width</source>
          <target state="translated">寬度</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Specifies the number of characters in each line of output.</source>
          <target state="translated">指定每一行輸出的字元數目。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Any additional characters are truncated, not wrapped.</source>
          <target state="translated">任何額外的字元都會被截斷，而不會換行顯示。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>If you omit this parameter, the width is determined by the characteristics of the host program.</source>
          <target state="translated">如果您省略這個參數，則寬度取決於主機程式的特性。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>The default value for the Windows PowerShell console is 80 (characters).</source>
          <target state="translated">Windows PowerShell 主控台的預設值為 80 (字元)。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>CommonParameters</source>
          <target state="translated">CommonParameters</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutVariable, -OutBuffer, -PipelineVariable, -Verbose, -WarningAction, and -WarningVariable.</source>
          <target state="translated">這個 cmdlet 支援一般參數:-偵錯、-ErrorAction、-ErrorVariable、-InformationAction-InformationVariable、-OutVariable、-OutBuffer、-PipelineVariable、-Verbose、-WarningAction 以及-WarningVariable。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>For more information, see about_CommonParameters (http://go.microsoft.com/fwlink/?LinkID=113216).</source>
          <target state="translated">如需詳細資訊，請參閱 about_CommonParameters (http://go.microsoft.com/fwlink/?LinkID=113216)。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>INPUTS</source>
          <target state="translated">輸入</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>System.Management.Automation.PSObject</source>
          <target state="translated">System.Management.Automation.PSObject</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>You can pipe objects to <bpt id="p1">**</bpt>Out-String<ept id="p1">**</ept>.</source>
          <target state="translated">您可以透過管道傳送物件至 <bpt id="p1">**</bpt>Out-string<ept id="p1">**</ept>。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>OUTPUTS</source>
          <target state="translated">輸出</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>System.String</source>
          <target state="translated">System.String</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Out-String<ept id="p1">**</ept> returns the string that it creates from the input object.</source>
          <target state="translated"><bpt id="p1">**</bpt>Out-string<ept id="p1">**</ept> 傳回字串，它會建立從輸入物件。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>NOTES</source>
          <target state="translated">附註</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>The cmdlets that contain the <bpt id="p1">**</bpt>Out<ept id="p1">**</ept> verb that do not format objects; they just render them and send them to the specified display destination.</source>
          <target state="translated">包含的 cmdlet <bpt id="p1">**</bpt>出<ept id="p1">**</ept> 動詞命令，不會格式化物件; 它們只會轉譯，並將它們傳送至指定的顯示目的地。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>If you send an unformatted object to an <bpt id="p1">**</bpt>Out<ept id="p1">**</ept> cmdlet, the cmdlet sends it to a formatting cmdlet before rendering it.</source>
          <target state="translated">如果您傳送至未格式化的物件 <bpt id="p1">**</bpt>出<ept id="p1">**</ept> cmdlet，此指令程式將它傳送到格式化 cmdlet 才能呈現。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>Out<ept id="p1">**</ept> cmdlets do not have parameters that take names or file paths.</source>
          <target state="translated"> <bpt id="p1">**</bpt>出<ept id="p1">**</ept> cmdlet 沒有接受名稱或檔案路徑的參數。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>To send data to an <bpt id="p1">**</bpt>Out<ept id="p1">**</ept> cmdlet, use a pipeline operator (|) to send the output of a Windows PowerShell command to the cmdlet.</source>
          <target state="translated">若要將資料傳送給 <bpt id="p1">**</bpt>出<ept id="p1">**</ept> 指令程式，使用管線運算子 (|) 將 Windows PowerShell 命令的輸出傳送至 cmdlet。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>You can also store data in a variable and use the <bpt id="p1">*</bpt>InputObject<ept id="p1">*</ept> parameter to pass the data to the cmdlet.</source>
          <target state="translated">也可以將資料儲存在變數中並使用在 <bpt id="p1">*</bpt>InputObject<ept id="p1">*</ept> 將資料傳遞給 cmdlet 的參數。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>RELATED LINKS</source>
          <target state="translated">相關的連結</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Out-Default</source>
          <target state="translated">Out-Default</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>Out-File</source>
          <target state="translated">Out-file</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Out-GridView</source>
          <target state="translated">Out-GridView</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Out-Host</source>
          <target state="translated">Out-Host</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>Out-Null</source>
          <target state="translated">Out-Null</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>Out-Printer</source>
          <target state="translated">Out-printer</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>