<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-tw">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-1c394fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">748eedd94490fb2c7d9529b1fa0f125ee3a25c01</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">reference\5.0\Microsoft.PowerShell.Core\About\about_Special_Characters.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions" />
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">8d52e73cfc091b7e0a127f33e4aa84328cbefded</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">9d6fa30357ace71c2c591357785833273e70da00</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>about_Special_Characters</source>
          <target state="translated">about_Special_Characters</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>powershell, cmdlet</source>
          <target state="translated">powershell 指令程式</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>About Special Characters</source>
          <target state="translated">特殊字元</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>about_Special_Characters</source>
          <target state="translated">about_Special_Characters</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>TOPIC</source>
          <target state="translated">主題</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>about_Special_Characters</source>
          <target state="translated">about_Special_Characters</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>SHORT DESCRIPTION</source>
          <target state="translated">簡短描述</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Describes the special characters that you can use to control how Windows PowerShell interprets the next character in a command or parameter.</source>
          <target state="translated">描述可用來控制 Windows PowerShell 如何解譯命令或參數中的下一個字元的特殊字元。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>LONG DESCRIPTION</source>
          <target state="translated">詳細描述</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Windows PowerShell supports a set of special character sequences that are used to represent characters that are not part of the standard character set.</source>
          <target state="translated">Windows PowerShell 支援一組特殊的字元序列，用來表示不屬於標準字元集的字元。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>The special characters in Windows PowerShell begin with the backtick character, also known as the grave accent (ASCII 96).</source>
          <target state="translated">Windows PowerShell 中的特殊字元開頭倒單引號字元，也稱為抑音符號 (ASCII 96)。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>The following special characters are recognized by Windows PowerShell:</source>
          <target state="translated">Windows PowerShell 可辨識下列特殊字元︰</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>a    Alert <ph id="ph1">`b    Backspace
`</ph>f    Form feed <ph id="ph2">`n    New line
`</ph>r    Carriage return <ph id="ph3">`t    Horizontal tab
`</ph>v    Vertical tab --%   Stop parsing</source>
          <target state="translated">警示 <ph id="ph1">`b    Backspace
`</ph>f 換 <ph id="ph2">`n    New line
`</ph>r 歸位字元 <ph id="ph3">`t    Horizontal tab
`</ph>v 垂直索引標籤-%停止剖析</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>These characters are case-sensitive.</source>
          <target state="translated">這些字元會區分大小寫。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>NULL (`0)</source>
          <target state="translated">NULL ('0)</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Windows PowerShell recognizes a null special character (`0) and represents it with a character code of 0.</source>
          <target state="translated">Windows PowerShell 會辨識 null 的特殊字元 ('0)，並代表與 0 的字元碼。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>It appears as an empty space in the Windows PowerShell output.</source>
          <target state="translated">它會顯示為 Windows PowerShell 輸出中的空白區域。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>This allows you to use Windows PowerShell to read and process text files that use null characters, such as string termination or record termination indicators.</source>
          <target state="translated">這可讓您使用 Windows PowerShell 來讀取和處理程序使用 null 字元，例如字串結束字元或記錄的結束標記的文字檔案。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>The null special character is not equivalent to the $null variable, which stores a value of NULL.</source>
          <target state="translated">Null 的特殊字元不等於 $null 變數儲存的值是 NULL。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>ALERT (<ph id="ph1">`a)
The alert (`</ph>a) character sends a beep signal to the computer's speaker.</source>
          <target state="translated">警示 (<ph id="ph1">`a)
The alert (`</ph>) 字元將嗶聲訊號傳送到電腦的喇叭。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>You can use this to warn a user about an impending action.</source>
          <target state="translated">您可以使用這個來警告使用者即將發生的動作。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>The following command sends two beep signals to the local computer's speaker:</source>
          <target state="translated">下列命令會將兩個嗶聲訊號傳送給本機電腦的喇叭︰</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>for ($i = 0; $i -le 1; $i++){"`a"}</source>
          <target state="translated">針對 ($i = 0; $i-le 1; $i + +) {"'"}</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>BACKSPACE (<ph id="ph1">`b)
The backspace character (`</ph>b) moves the cursor back one character, but it does not delete any characters.</source>
          <target state="translated">退格鍵 (<ph id="ph1">`b)
The backspace character (`</ph>b) 將游標下移一字元，但不會刪除任何字元。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>The following command writes the word "backup", moves the cursor back twice, and then writes the word "out" (preceded by a space and starting at the new position):</source>
          <target state="translated">下列命令將 word 「 備份 」，將游標移回兩次，並 （加上空格和新的位置開始），然後將文字寫入 「 出 」:</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>"backup<ph id="ph1">`b`</ph>b out"</source>
          <target state="translated">「 備份<ph id="ph1">`b`</ph>出 b 」</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>The output from this command is as follows:</source>
          <target state="translated">此命令的輸出如下所示︰</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>back out</source>
          <target state="translated">將還原</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>FORM FEED (<ph id="ph1">`f)
The form feed character (`</ph>f) is a print instruction that ejects the current page and continues printing on the next page.</source>
          <target state="translated">換頁 (<ph id="ph1">`f)
The form feed character (`</ph>f) 是退出目前的頁面，並繼續下一個頁面上的列印的列印指令。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>This character affects printed documents only; it does not affect screen output.</source>
          <target state="translated">這個字元會影響列印文件它不會影響螢幕輸出。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>NEW LINE (<ph id="ph1">`n)
The new line character (`</ph>n) inserts a line break immediately after the character.</source>
          <target state="translated">新的一行 (<ph id="ph1">`n)
The new line character (`</ph>n) 字元後面插入分行符號。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>The following example shows how to use the new line character in a Write-Host command:</source>
          <target state="translated">下列範例示範如何使用 Write-host 命令中的新行字元︰</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>"There are two line breaks<ph id="ph1">`n`</ph>nhere."</source>
          <target state="translated">「 有兩個分行符號<ph id="ph1">`n`</ph>nhere。 」</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>The output from this command is as follows:</source>
          <target state="translated">此命令的輸出如下所示︰</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>There are two line breaks</source>
          <target state="translated">有兩個換行</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>here.</source>
          <target state="translated">這裡。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>CARRIAGE RETURN (<ph id="ph1">`r)
The carriage return character (`</ph>r) eliminates the entire line prior to the `r character, as though the prior text were on a different line.</source>
          <target state="translated">歸位字元 (<ph id="ph1">`r)
The carriage return character (`</ph>r) 會消除整行之前 ' 字元 r，如同先前的文字已在不同的程式行。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>For example:</source>
          <target state="translated">例如：</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Write-Host "Let's not move`rDelete everything before this point."</source>
          <target state="translated">寫入主機 「 我們不 move'rDelete 這之前的所有項目。 」</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>The output from this command is:</source>
          <target state="translated">此命令的輸出如下︰</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Delete everything before this point.</source>
          <target state="translated">刪除在此之前的所有項目。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>HORIZONTAL TAB (<ph id="ph1">`t)
The horizontal tab character (`</ph>t) advances to the next tab stop and continues writing at that point.</source>
          <target state="translated">水平定位字元 (<ph id="ph1">`t)
The horizontal tab character (`</ph>t) 隨即前進至下一個定位停駐點，並繼續撰寫在該點。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>By default, the Windows PowerShell console has a tab stop at every eighth space.</source>
          <target state="translated">根據預設，Windows PowerShell 主控台中的定位點在每個第八個空間。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>For example, the following command inserts two tabs between each column.</source>
          <target state="translated">例如，下列命令將插入每個資料行之間的兩個索引標籤。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>"Column1<ph id="ph1">`t`</ph>tColumn2<ph id="ph2">`t`</ph>tColumn3"</source>
          <target state="translated">"Column1<ph id="ph1">`t`</ph>tColumn2<ph id="ph2">`t`</ph>tColumn3 」</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>The output from this command is:</source>
          <target state="translated">此命令的輸出如下︰</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Column1         Column2         Column3</source>
          <target state="translated">Column1 Column2 Column3</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>VERTICAL TAB (<ph id="ph1">`v)
The horizontal tab character (`</ph>t) advances to the next vertical tab stop and writes all subsequent output beginning at that point.</source>
          <target state="translated">垂直 TAB (<ph id="ph1">`v)
The horizontal tab character (`</ph>t) 隨即前進至下一步的垂直定位點，並將在該點開始的所有後續輸出。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>This character affects printed documents only.</source>
          <target state="translated">這個字元會影響列印文件。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>It does not affect screen output.</source>
          <target state="translated">它不會影響螢幕輸出。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>STOP PARSING  (--%) The stop-parsing symbol (--%) prevents Windows PowerShell from interpreting arguments in program calls as Windows PowerShell commands and expressions.</source>
          <target state="translated">停止剖析 (-%)停止剖析符號 (-%) 做為 Windows PowerShell 命令與運算式解譯程式呼叫的引數時，防止 Windows PowerShell。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Place the stop-parsing symbol after the program name and before program arguments that might cause errors.</source>
          <target state="translated">之後的程式名稱，以及可能會造成錯誤的程式引數之前的位置停止剖析符號。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>For example, the following Icacls command uses the stop-parsing symbol.</source>
          <target state="translated">例如，下列 Icacls 命令會使用停止剖析符號。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>icacls X:\VMS --% /grant Dom\HVAdmin:(CI)(OI)F</source>
          <target state="translated">icacls X:\VMS-%/grant Dom\HVAdmin:(CI) (OI) F</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Windows PowerShell sends the following command to Icacls.</source>
          <target state="translated">Windows PowerShell 會將下列命令將 Icacls。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>X:\VMS /grant Dom\HVAdmin:(CI)(OI)F</source>
          <target state="translated">X:\VMS /grant Dom\HVAdmin:(CI) (OI) F</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>For more information about the stop-parsing symbol, see about_Parsing.</source>
          <target state="translated">如需停止剖析符號的詳細資訊，請參閱 about_Parsing。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>KEYWORDS</source>
          <target state="translated">關鍵字</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>about_Punctuation about_Symbols</source>
          <target state="translated">about_Punctuation about_Symbols</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>SEE ALSO</source>
          <target state="translated">另請參閱</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>about_Quoting_Rules about_Escape_Characters</source>
          <target state="translated">about_Quoting_Rules about_Escape_Characters</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>