<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-tw">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-1c394fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">5c3c5b7bdd0e478e8ab19cf67260f8f8c174085a</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">reference\5.0\Microsoft.PowerShell.Utility\Select-String.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions" />
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">c358da2d9d9b8479467113a2de169f81a829340f</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">12fc95fed3a6aee8b0a46b7605518170fe283e9b</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>powershell, cmdlet</source>
          <target state="translated">powershell 指令程式</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Select-String</source>
          <target state="translated">選取字串</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Select-String</source>
          <target state="translated">選取字串</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>SYNOPSIS</source>
          <target state="translated">概要</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Finds text in strings and files.</source>
          <target state="translated">尋找字串和檔案中的文字。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>SYNTAX</source>
          <target state="translated">語法</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>File (Default)</source>
          <target state="translated">檔案 （預設值）</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Object</source>
          <target state="translated">物件</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>LiteralFile</source>
          <target state="translated">LiteralFile</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>DESCRIPTION</source>
          <target state="translated">描述</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>Select-String<ept id="p1">**</ept> cmdlet searches for text and text patterns in input strings and files.</source>
          <target state="translated"> <bpt id="p1">**</bpt>Select-string<ept id="p1">**</ept> 指令程式搜尋的文字與輸入的字串和檔案中的文字模式。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>You can use it like Grep in UNIX and Findstr in Windows.</source>
          <target state="translated">您能以像是 UNIX 的 Grep 或 Windows 的 Findstr 的方式來使用它。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>You can type <ph id="ph1">`Select-String`</ph> or its alias, <ph id="ph2">`sls`</ph>.</source>
          <target state="translated">您可以輸入 <ph id="ph1">`Select-String`</ph> 或其別名 <ph id="ph2">`sls`</ph>。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Select-String<ept id="p1">**</ept> is based on lines of text.</source>
          <target state="translated"><bpt id="p1">**</bpt>Select-string<ept id="p1">**</ept> 根據每一行文字。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>By default, <bpt id="p1">**</bpt>Select-String<ept id="p1">**</ept> finds the first match in each line and, for each match, it displays the file name, line number, and all text in the line containing the match.</source>
          <target state="translated">根據預設， <bpt id="p1">**</bpt>Select-string<ept id="p1">**</ept> 發現，在每個第一個相符項目會行，而且每個符合包含比對一行顯示的檔名、 行號和所有文字。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>However, you can direct it to detect multiple matches per line, display text before and after the match, or display only a Boolean value (True or False) that indicates whether a match is found.</source>
          <target state="translated">不過，您可以指示它偵測每行的多個相符項目、 顯示文字之前和之後的相符項目，或顯示 （True 或 False） 的布林值，指出是否找到相符項目。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Select-String<ept id="p1">**</ept> uses regular expression matching, but it can also perform a simple match that searches the input for the text that you specify.</source>
          <target state="translated"><bpt id="p1">**</bpt>Select-string<ept id="p1">**</ept> 使用規則運算式比對，但它也可以執行簡單的比對，以搜尋您所指定文字的輸入。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Select-String<ept id="p1">**</ept> can display all of the text matches or stop after the first match in each input file.</source>
          <target state="translated"><bpt id="p1">**</bpt>Select-string<ept id="p1">**</ept> 可以顯示所有文字相符的項目，或在每個輸入檔中的第一個相符項目之後停止。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>It can also display all text that does not match the specified pattern.</source>
          <target state="translated">它也可以顯示所有不符合指定模式的文字。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>You can also specify that <bpt id="p1">**</bpt>Select-String<ept id="p1">**</ept> should expect a particular character encoding, such as when you are searching files of Unicode text.</source>
          <target state="translated">您也可以指定 <bpt id="p1">**</bpt>Select-string<ept id="p1">**</ept> 應該預期特定字元編碼，例如當您搜尋 Unicode 文字的檔案。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>EXAMPLES</source>
          <target state="translated">範例</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Example 1: Find a case-sensitive match</source>
          <target state="translated">範例 1︰ 尋找區分大小寫的相符項目</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>This command performs a case-sensitive match of the text that was piped to the <bpt id="p1">**</bpt>Select-String<ept id="p1">**</ept> command.</source>
          <target state="translated">此命令會執行區分大小寫的相符項目，經由管道輸出至文字的 <bpt id="p1">**</bpt>Select-string<ept id="p1">**</ept> 命令。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>As a result, <bpt id="p1">**</bpt>Select-String<ept id="p1">**</ept> finds only "HELLO", because "Hello" does not match.</source>
          <target state="translated">如此一來， <bpt id="p1">**</bpt>Select-string<ept id="p1">**</ept> 尋找只"HELLO"，因為"Hello"不相符。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Because each of the quoted strings is treated as a line, without the <bpt id="p1">*</bpt>CaseSensitive<ept id="p1">*</ept> parameter, <bpt id="p2">**</bpt>Select-String<ept id="p2">**</ept> would recognize both of the strings as matches.</source>
          <target state="translated">因為每個引號字串視為線條，無需 <bpt id="p1">*</bpt>CaseSensitive<ept id="p1">*</ept> 參數， <bpt id="p2">**</bpt>Select-string<ept id="p2">**</ept> 會辨認這兩個字串為相符項目。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Example 2: Find matches in XML files only</source>
          <target state="translated">範例 2︰ 在僅限 XML 檔案中尋找相符項目</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>This command searches through all files with the .xml file name extension in the current directory and displays the lines in those files that include the string "the the".</source>
          <target state="translated">此命令會搜尋目前目錄中副檔名為 .xml 的所有檔案，並顯示這些檔案中包含字串 "the the" 的行。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Example 3: Find a pattern match</source>
          <target state="translated">範例 3︰ 尋找模式比對</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>This command searches the Windows PowerShell conceptual Help files (about_*.txt) for information about the use of the at sign (@).</source>
          <target state="translated">此命令會搜尋 Windows PowerShell 概念說明檔 (about_*.txt)，以取得使用 @ 記號的相關資訊。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>To indicate the path, this command uses the value of the $pshome automatic variable, which stores the path to the Windows PowerShell installation directory.</source>
          <target state="translated">如果要指出路徑，此命令會使用 $pshome 自動變數的值，該值會儲存 Windows PowerShell 安裝目錄的路徑。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>In this example, the command searches the en-US subdirectory, which contains the English (US) language Help files for Windows PowerShell.</source>
          <target state="translated">在此範例中，命令會搜尋 en-US 子目錄，其中包含 Windows PowerShell 的英文 (美國) 語言說明檔案。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Example 4: Use Select-String in a function</source>
          <target state="translated">範例 4︰ 使用 Select-string 函式中</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>This simple function uses the <bpt id="p1">**</bpt>Select-String<ept id="p1">**</ept> cmdlet to search the Windows PowerShell Help files for a particular string.</source>
          <target state="translated">這個簡單的函式使用 <bpt id="p1">**</bpt>Select-string<ept id="p1">**</ept> cmdlet 來搜尋特定字串的 Windows PowerShell 說明檔案。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>In this example, the function searches the "en-US" subdirectory for English-United States language files.</source>
          <target state="translated">在此範例中，函式會搜尋 "en-US" 子目錄中的美國英文語言檔案。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>To use the function to find a string, such as "psdrive", type <ph id="ph1">`search-help psdrive`</ph>.</source>
          <target state="translated">若要使用函數來尋找的字串，例如"psdrive"，輸入 <ph id="ph1">`search-help psdrive`</ph>。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>To use this function in any Windows PowerShell console, change the path to point to the Windows PowerShell Help files on your system, and then paste the function in your Windows PowerShell profile.</source>
          <target state="translated">如果要在任何 Windows PowerShell 主控台中使用此函式，請變更路徑以指向您系統上的 Windows PowerShell 說明檔案，然後在您的 Windows PowerShell 設定檔中將函式貼上。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Example 5: Search for a string in the Application log</source>
          <target state="translated">範例 5︰ 搜尋字串中的應用程式記錄檔</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>This example searches for the string "failed" in the 100 newest events in the Application log in Event Viewer.</source>
          <target state="translated">此範例會在事件檢視器應用程式記錄檔最新的 100 個事件中搜尋字串 "failed"。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>The first command uses the Get-EventLog cmdlet to get the 100 most recent events from the Application event log.</source>
          <target state="translated">第一個命令會使用 Get-EventLog Cmdlet，從應用程式事件記錄檔取得 100 個最新的事件。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Then it stores the events in the $Events variable.</source>
          <target state="translated">然後它將事件儲存在 $Events 變數。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>The second command uses a pipeline operator (|) to send the objects in the $Events variable to <bpt id="p1">**</bpt>Select-String<ept id="p1">**</ept>.</source>
          <target state="translated">第二個命令使用管線運算子 (|) $Events 變數中的物件傳送至 <bpt id="p1">**</bpt>Select-string<ept id="p1">**</ept>。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>It uses the <bpt id="p1">*</bpt>InputObject<ept id="p1">*</ept> parameter to represent the input from the $Events variable.</source>
          <target state="translated">它會使用 <bpt id="p1">*</bpt>InputObject<ept id="p1">*</ept> 來代表 $Events 變數從輸入參數。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>The value of the <bpt id="p1">*</bpt>InputObject<ept id="p1">*</ept> parameter is the Message property of each object as it travels through the pipeline.</source>
          <target state="translated">值 <bpt id="p1">*</bpt>InputObject<ept id="p1">*</ept> 參數是每個物件的 Message 屬性，透過管線傳送。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>The current object is represented by the $_ symbol.</source>
          <target state="translated">目前的物件是由 $_ 符號表示。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>As each event arrives in the pipeline, <bpt id="p1">**</bpt>Select-String<ept id="p1">**</ept> searches the value of its Message property for the "failed" string, and then displays any lines that include a match.</source>
          <target state="translated">在管線中的每個事件到達時 <bpt id="p1">**</bpt>Select-string<ept id="p1">**</ept> 搜尋 「 已失敗 」 的字串，其訊息屬性的值，並接著會顯示包含相符的任何程式行。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Example 6: Find a string in subdirectories</source>
          <target state="translated">範例 6︰ 在子目錄中尋找字串</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>This command examines all files in the subdirectories of C:\Windows\System32 with the .txt file name extension and searches for the string "Microsoft".</source>
          <target state="translated">此命令會檢查 C:\Windows\System32 的子目錄中附檔名為 .txt 的所有檔案，並搜尋字串 "Microsoft"。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">*</bpt>CaseSensitive<ept id="p1">*</ept> parameter indicates that the "M" in "Microsoft" must be capitalized and that the rest of the characters must be lowercase for <bpt id="p2">**</bpt>Select-String<ept id="p2">**</ept> to find a match.</source>
          <target state="translated"> <bpt id="p1">*</bpt>CaseSensitive<ept id="p1">*</ept> 參數指示"Microsoft"中的"M"必須大寫，其餘字元必須是小寫 <bpt id="p2">**</bpt>Select-string<ept id="p2">**</ept> 來尋找相符項目。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Example 7: Find strings that do not match a pattern</source>
          <target state="translated">範例 7︰ 尋找不符合模式的字串</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>This command finds lines of text in the Process.txt file that do not include the words "idle" or "svchost".</source>
          <target state="translated">此命令會在 Process.txt 檔案中尋找不包含單字 "idle" 或 "svchost" 的文字行。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Example 8: Find lines before and after a match</source>
          <target state="translated">範例 8︰ 找出幾行之前和之後的相符項目</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>The first command searches the Audit.Log file for the phrase "logon failed."</source>
          <target state="translated">第一個命令會在 Audit.Log 檔案中搜尋片語 "logon failed"。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>It uses the <bpt id="p1">*</bpt>Context<ept id="p1">*</ept> parameter to capture 2 lines before the match and 3 lines after the match.</source>
          <target state="translated">它會使用 <bpt id="p1">*</bpt>內容<ept id="p1">*</ept> 參數擷取相符項目之後的相符項目之前 2 行和 3 行。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>The second command uses the Count property of object arrays to display the number of matches found, in this case, 2.</source>
          <target state="translated">第二個命令會使用物件陣列的 Count 屬性，顯示找到的相符項目數，在本範例中為 2。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>The third command displays the lines stored in the Context property of the first <bpt id="p1">**</bpt>MatchInfo<ept id="p1">**</ept> object.</source>
          <target state="translated">第三個命令會顯示在第一個內容屬性中所儲存的行 <bpt id="p1">**</bpt>MatchInfo<ept id="p1">**</ept> 物件。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>It uses array notation to indicate the first match (match 0 in a zero-based array), and it uses the Format-List cmdlet to display the value of the Context property as a list.</source>
          <target state="translated">它使用陣列標記法表示第一個相符項目 （比對 0 中以零為起始的陣列），並使用 Format-list cmdlet 內容屬性的值顯示為清單。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>The output consists of two MatchInfo objects, one for each match detected.</source>
          <target state="translated">輸出是由兩個 MatchInfo 物件組成，每一個偵測到的相符項目各一個。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>The context lines are stored in the Context property of the <bpt id="p1">**</bpt>MatchInfo<ept id="p1">**</ept> object.</source>
          <target state="translated">上下文行會儲存的內容屬性中 <bpt id="p1">**</bpt>MatchInfo<ept id="p1">**</ept> 物件。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>Example 9: Find all pattern matches</source>
          <target state="translated">範例 9︰ 尋找所有相符的模式</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>This example demonstrates the effect of the <bpt id="p1">*</bpt>AllMatches<ept id="p1">*</ept> parameter of <bpt id="p2">**</bpt>Select-String<ept id="p2">**</ept>.</source>
          <target state="translated">此範例中示範的效果 <bpt id="p1">*</bpt>AllMatches<ept id="p1">*</ept> 參數 <bpt id="p2">**</bpt>Select-string<ept id="p2">**</ept>。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source><bpt id="p1">*</bpt>AllMatches<ept id="p1">*</ept> finds all pattern matches in a line, instead of just finding the first match in each line.</source>
          <target state="translated"><bpt id="p1">*</bpt>AllMatches<ept id="p1">*</ept> 列，而不是只在每一行中尋找第一個相符項目中尋找所有相符的模式。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>The first command in the example searches the Windows PowerShell conceptual Help files ("about" Help) for instances of the word "transcript".</source>
          <target state="translated">範例中的第一個命令搜尋 Windows PowerShell 概念說明檔 ("about" 說明) 中單字 "transcript" 的實例。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>The output of the first command is saved in the $A variable.</source>
          <target state="translated">第一個命令的輸出會儲存在 $A 變數中。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>The second command is identical, except that it uses the <bpt id="p1">*</bpt>AllMatches<ept id="p1">*</ept> parameter.</source>
          <target state="translated">第二個命令是相同的不同之處在於它會使用 <bpt id="p1">*</bpt>AllMatches<ept id="p1">*</ept> 參數。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>The output of the second command is saved in the $B variable.</source>
          <target state="translated">第二個命令的輸出會儲存在 $B 變數。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>When you display the value of the variables, the default display is identical, as shown in the example output.</source>
          <target state="translated">當您顯示變數值時，預設顯示完全相同，如範例輸出中所示。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>However, the fifth and sixth commands display the value of the Matches property of each object.</source>
          <target state="translated">不過，第五個和第六個命令會顯示每個物件的 Matches 屬性值。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>The Matches property of the first command contains just one match (that is, one <bpt id="p1">**</bpt>System.Text.RegularExpressions.Match<ept id="p1">**</ept> object), whereas the Matches property of the second command contains objects for both of the matches in the line.</source>
          <target state="translated">第一個命令的相符項目屬性包含一個相符項目 (也就是 <bpt id="p1">**</bpt>System.Text.RegularExpressions.Match<ept id="p1">**</ept> 物件)，而第二個命令的 Matches 屬性包含相符項目列中的兩個物件。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>PARAMETERS</source>
          <target state="translated">參數</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>-AllMatches</source>
          <target state="translated">-AllMatches</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>Indicates that the cmdlet searches for more than one match in each line of text.</source>
          <target state="translated">表示此指令程式會搜尋每一行文字中的多個相符項目。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>Without this parameter, <bpt id="p1">**</bpt>Select-String<ept id="p1">**</ept> finds only the first match in each line of text.</source>
          <target state="translated">如果沒有這個參數， <bpt id="p1">**</bpt>Select-string<ept id="p1">**</ept> 在每一行文字中尋找第一個比對。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>When <bpt id="p1">**</bpt>Select-String<ept id="p1">**</ept> finds more than one match in a line of text, it still emits only one <bpt id="p2">**</bpt>MatchInfo<ept id="p2">**</ept> object for the line, but the Matches property of the object contains all of the matches.</source>
          <target state="translated">當 <bpt id="p1">**</bpt>Select-string<ept id="p1">**</ept> 找到一個以上符合一行文字中，仍會發出一個 <bpt id="p2">**</bpt>MatchInfo<ept id="p2">**</ept> 列，但是物件的相符項目屬性的物件包含所有相符的項目。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>-CaseSensitive</source>
          <target state="translated">-CaseSensitive</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>Indicates that the cmdlet makes matches case-sensitive.</source>
          <target state="translated">表示此指令程式可讓相符項目區分大小寫。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>By default, matches are not case-sensitive.</source>
          <target state="translated">依預設，相符項目不區分大小寫。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>-Context</source>
          <target state="translated">內容</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>Captures the specified number of lines before and after the line with the match.</source>
          <target state="translated">在包含相符項目的行之前與之後擷取指定的行數。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>This allows you to view the match in context.</source>
          <target state="translated">這可讓您檢視相符項目所在的上下文。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>If you enter one number as the value of this parameter, that number determines the number of lines captured before and after the match.</source>
          <target state="translated">如果您輸入一個數字做為此參數的值，該數字會決定相符項目之前與之後擷取的行數。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>If you enter two numbers as the value, the first number determines the number of lines before the match and the second number determines the number of lines after the match.</source>
          <target state="translated">如果您輸入兩個數字做為該值，第一個數字會決定相符項目之前的行數，而第二個數字會決定相符項目之後的行數。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>In the default display, lines with a match are indicated by a right angle bracket (ASCII 62) in the first column of the display.</source>
          <target state="translated">在預設的顯示中，包含相符項目的行會在顯示的第一欄中以右角括弧 (ASCII 62) 表示。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>Unmarked lines are the context.</source>
          <target state="translated">未標記的行是上下文。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>This parameter does not change the number of objects generated by <bpt id="p1">**</bpt>Select-String<ept id="p1">**</ept>.</source>
          <target state="translated">這個參數不會變更所產生的物件數目 <bpt id="p1">**</bpt>Select-string<ept id="p1">**</ept>。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Select-String<ept id="p1">**</ept> generates one <bpt id="p2">**</bpt>MatchInfo<ept id="p2">**</ept> (<bpt id="p3">**</bpt>Microsoft.PowerShell.Commands.MatchInfo<ept id="p3">**</ept>) object for each match.</source>
          <target state="translated"><bpt id="p1">**</bpt>Select-string<ept id="p1">**</ept> 會產生一個 <bpt id="p2">**</bpt>MatchInfo<ept id="p2">**</ept> (<bpt id="p3">**</bpt>Microsoft.PowerShell.Commands.MatchInfo<ept id="p3">**</ept>) 每個相符的物件。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>The context is stored as an array of strings in the Context property of the object.</source>
          <target state="translated">上下文會在物件的 Context 屬性中儲存為字串陣列。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>When you pipe the output of a <bpt id="p1">**</bpt>Select-String<ept id="p1">**</ept> command to another <bpt id="p2">**</bpt>Select-String<ept id="p2">**</ept> command, the receiving command searches only the text in the matched line (the value of the Line property of the <bpt id="p3">**</bpt>MatchInfo<ept id="p3">**</ept> object), not the text in the context lines.</source>
          <target state="translated">當您使用管線傳送的輸出 <bpt id="p1">**</bpt>Select-string<ept id="p1">**</ept> 命令至另一個 <bpt id="p2">**</bpt>Select-string<ept id="p2">**</ept> 命令時，接收命令只會搜尋相符行 (Line 屬性的值 <bpt id="p3">**</bpt>MatchInfo<ept id="p3">**</ept> 物件)，不是上下文行中的文字。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>As a result, the <bpt id="p1">*</bpt>Context<ept id="p1">*</ept> parameter is not valid on the receiving <bpt id="p2">**</bpt>Select-String<ept id="p2">**</ept> command.</source>
          <target state="translated">如此一來， <bpt id="p1">*</bpt>內容<ept id="p1">*</ept> 參數不是在接收有效 <bpt id="p2">**</bpt>Select-string<ept id="p2">**</ept> 命令。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>When the context includes a match, the <bpt id="p1">**</bpt>MatchInfo<ept id="p1">**</ept> object for each match includes all of the context lines, but the overlapping lines appear only once in the display.</source>
          <target state="translated">當上下文包含相符項目， <bpt id="p1">**</bpt>MatchInfo<ept id="p1">**</ept> 物件的每個相符項目包含所有的上下文行，但是重疊行只出現一次顯示中。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>-Encoding</source>
          <target state="translated">編碼方式</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>Specifies the character encoding that <bpt id="p1">**</bpt>Select-String<ept id="p1">**</ept> should assume when searching the file.</source>
          <target state="translated">指定的字元編碼 <bpt id="p1">**</bpt>Select-string<ept id="p1">**</ept> 搜尋檔案時，應該假設。</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>The default is UTF8.</source>
          <target state="translated">預設值為 UTF8。</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>The acceptable values for this parameter are:</source>
          <target state="translated">此參數接受的值包括：</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>Unicode</source>
          <target state="translated">Unicode</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>UTF7</source>
          <target state="translated">UTF7</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>UTF8</source>
          <target state="translated">UTF8</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>UTF32</source>
          <target state="translated">UTF32</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>ASCII</source>
          <target state="translated">ASCII</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>BigEndianUnicode</source>
          <target state="translated">BigEndianUnicode</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>Default</source>
          <target state="translated">Default</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>OEM</source>
          <target state="translated">OEM</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>Default is the encoding of the system's current ANSI code page.</source>
          <target state="translated">預設值是系統目前的 ANSI 字碼頁的編碼方式。</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>OEM is the current original equipment manufacturer code page identifier for the operating system.</source>
          <target state="translated">OEM 是作業系統目前的原始設備製造商字碼頁識別項。</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>-Exclude</source>
          <target state="translated">-排除</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>Specifies an array of items that the cmdlet excludes from the operation.</source>
          <target state="translated">指定指令程式排除作業的項目的陣列。</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>The value of this parameter qualifies the <bpt id="p1">*</bpt>Path<ept id="p1">*</ept> parameter.</source>
          <target state="translated">此參數的值會限定 <bpt id="p1">*</bpt>路徑<ept id="p1">*</ept> 參數。</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>Enter a path element or pattern, such as *.txt.</source>
          <target state="translated">輸入路徑元素或模式，例如 *.txt。</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>Wildcards are permitted.</source>
          <target state="translated">允許使用萬用字元。</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>-Include</source>
          <target state="translated">-Include</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>Specifies an array of items that the cmdlet uses in the operation.</source>
          <target state="translated">在作業中指定指令程式使用的項目的陣列。</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>The value of this parameter qualifies the <bpt id="p1">*</bpt>Path<ept id="p1">*</ept> parameter.</source>
          <target state="translated">此參數的值會限定 <bpt id="p1">*</bpt>路徑<ept id="p1">*</ept> 參數。</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>Enter a path element or pattern, such as *.txt.</source>
          <target state="translated">輸入路徑元素或模式，例如 *.txt。</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>Wildcards are permitted.</source>
          <target state="translated">允許使用萬用字元。</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>-InputObject</source>
          <target state="translated">-InputObject</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>Specifies the text to be searched.</source>
          <target state="translated">指定要搜尋的文字。</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>Enter a variable that contains the text, or type a command or expression that gets the text.</source>
          <target state="translated">輸入包含文字的變數，或輸入可取得文字的命令或運算式。</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>Using the <bpt id="p1">*</bpt>InputObject<ept id="p1">*</ept> parameter is not the same as piping strings to <bpt id="p2">**</bpt>Select-String<ept id="p2">**</ept>.</source>
          <target state="translated">使用 <bpt id="p1">*</bpt>InputObject<ept id="p1">*</ept> 參數不是使用管線將字串至相同 <bpt id="p2">**</bpt>Select-string<ept id="p2">**</ept>。</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>The differences are as follows:</source>
          <target state="translated">差異如下：</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>When you pipe more than one string (a collection) to <bpt id="p1">**</bpt>Select-String<ept id="p1">**</ept>, <bpt id="p2">**</bpt>Select-String<ept id="p2">**</ept> searches for the specified text in each string and returns each string that contains the search text.</source>
          <target state="translated">將多個字串 （集合） 傳遞至 <bpt id="p1">**</bpt>Select-string<ept id="p1">**</ept>, ，<bpt id="p2">**</bpt>Select-string<ept id="p2">**</ept> 搜尋每個字串中指定的文字，並傳回每個包含搜尋文字的字串。</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>When you use the <bpt id="p1">*</bpt>InputObject<ept id="p1">*</ept> parameter to submit a collection of strings, <bpt id="p2">**</bpt>Select-String<ept id="p2">**</ept> treats the collection as a single combined string and returns the strings as a unit if it finds the search text in any string.</source>
          <target state="translated">當您使用 <bpt id="p1">*</bpt>InputObject<ept id="p1">*</ept> 參數來送出的字串集合 <bpt id="p2">**</bpt>Select-string<ept id="p2">**</ept> 將集合視為單一組合字串，並當做一個單位傳回字串，如果找到搜尋文字中的任何字串。</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>-List</source>
          <target state="translated">清單</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>Indicates that the cmdlet returns only the first match in each input file.</source>
          <target state="translated">指出此 cmdlet 會傳回每個輸入檔案中第一個比對。</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>By default, <bpt id="p1">**</bpt>Select-String<ept id="p1">**</ept> returns a <bpt id="p2">**</bpt>MatchInfo<ept id="p2">**</ept> object for each match it finds.</source>
          <target state="translated">根據預設， <bpt id="p1">**</bpt>Select-string<ept id="p1">**</ept> 傳回 <bpt id="p2">**</bpt>MatchInfo<ept id="p2">**</ept> 物件給每個符合該尋找。</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>-LiteralPath</source>
          <target state="translated">-LiteralPath</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>Specifies the path to the files to be searched.</source>
          <target state="translated">指定要搜尋之檔案的路徑。</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>Unlike <bpt id="p1">**</bpt>Path<ept id="p1">**</ept>, the value of the <bpt id="p2">**</bpt>LiteralPath<ept id="p2">**</ept> parameter is used exactly as it is typed.</source>
          <target state="translated">不同於 <bpt id="p1">**</bpt>路徑<ept id="p1">**</ept>, ，值 <bpt id="p2">**</bpt>LiteralPath<ept id="p2">**</ept> 完全依照其輸入，使用參數。</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>No characters are interpreted as wildcards.</source>
          <target state="translated">沒有字元會被視為萬用字元。</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>If the path includes escape characters, enclose it in single quotation marks.</source>
          <target state="translated">如果路徑包含逸出字元，請將它括在單引號中。</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>Single quotation marks tell Windows PowerShell not to interpret any characters as escape sequences.</source>
          <target state="translated">單引號告知 Windows PowerShell 不要將任何字元視為逸出序列。</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>-NotMatch</source>
          <target state="translated">-Notmatch 會</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>Indicates that the cmdlet finds text that does not match the specified pattern.</source>
          <target state="translated">表示此指令程式尋找不符合指定的模式的文字。</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>-Path</source>
          <target state="translated">-Path</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>Specifies the path to the files to search.</source>
          <target state="translated">指定要搜尋之檔案的路徑。</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>Wildcards are permitted.</source>
          <target state="translated">允許使用萬用字元。</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>The default location is the local directory.</source>
          <target state="translated">預設位置是本機目錄。</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>Specify files in the directory, such as log1.txt, <bpt id="p1">*</bpt>.doc, or <ept id="p1">*</ept>.*.</source>
          <target state="translated">指定檔案在目錄中，例如 log1.txt， <bpt id="p1">*</bpt>.doc 或 <ept id="p1">*</ept>。 *。</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>If you specify only a directory, the command fails.</source>
          <target state="translated">如果您只指定目錄，則命令會失敗。</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>-Pattern</source>
          <target state="translated">模式</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>Specifies the text to find.</source>
          <target state="translated">指定要尋找的文字。</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>Type a string or regular expression.</source>
          <target state="translated">輸入字串或規則運算式。</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>If you type a string, use the <bpt id="p1">*</bpt>SimpleMatch<ept id="p1">*</ept> parameter.</source>
          <target state="translated">如果您輸入字串，使用 <bpt id="p1">*</bpt>SimpleMatch<ept id="p1">*</ept> 參數。</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source>To learn about regular expressions, see about_Regular_Expressions.</source>
          <target state="translated">若要深入了解規則運算式，請參閱 about_Regular_Expressions。</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source>-Quiet</source>
          <target state="translated">-無訊息</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source>Indicates that the cmdlet returns a Boolean value (True or False), instead of a <bpt id="p1">**</bpt>MatchInfo<ept id="p1">**</ept> object.</source>
          <target state="translated">指出此 cmdlet 會傳回布林值 （True 或 False），而不是 <bpt id="p1">**</bpt>MatchInfo<ept id="p1">**</ept> 物件。</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source>The value is True if the pattern is found; otherwise, the value is False.</source>
          <target state="translated">值為 True，如果找到模式;否則，值為 False。</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source>-SimpleMatch</source>
          <target state="translated">-SimpleMatch</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source>Indicates that the cmdlet uses a simple match rather than a regular expression match.</source>
          <target state="translated">指出 cmdlet 會使用簡單的比對，而不是規則運算式比對。</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve">
          <source>In a simple match, <bpt id="p1">**</bpt>Select-String<ept id="p1">**</ept> searches the input for the text in the <bpt id="p2">*</bpt>Pattern<ept id="p2">*</ept> parameter.</source>
          <target state="translated">在簡單的比對， <bpt id="p1">**</bpt>Select-string<ept id="p1">**</ept> 搜尋的文字輸入 <bpt id="p2">*</bpt>模式<ept id="p2">*</ept> 參數。</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source>It does not interpret the value of the <bpt id="p1">*</bpt>Pattern<ept id="p1">*</ept> parameter as a regular expression statement.</source>
          <target state="translated">不會解譯為 <bpt id="p1">*</bpt>模式<ept id="p1">*</ept> 做為規則運算式陳述式的參數。</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source>CommonParameters</source>
          <target state="translated">CommonParameters</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source>This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutVariable, -OutBuffer, -PipelineVariable, -Verbose, -WarningAction, and -WarningVariable.</source>
          <target state="translated">這個 cmdlet 支援一般參數:-偵錯、-ErrorAction、-ErrorVariable、-InformationAction-InformationVariable、-OutVariable、-OutBuffer、-PipelineVariable、-Verbose、-WarningAction 以及-WarningVariable。</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve">
          <source>For more information, see about_CommonParameters (http://go.microsoft.com/fwlink/?LinkID=113216).</source>
          <target state="translated">如需詳細資訊，請參閱 about_CommonParameters (http://go.microsoft.com/fwlink/?LinkID=113216)。</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve">
          <source>INPUTS</source>
          <target state="translated">輸入</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve">
          <source>System.Management.Automation.PSObject</source>
          <target state="translated">System.Management.Automation.PSObject</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve">
          <source>You can pipe any object that has a ToString method to <bpt id="p1">**</bpt>Select-String<ept id="p1">**</ept>.</source>
          <target state="translated">您可以使用管線傳送任何物件，包含的 ToString 方法 <bpt id="p1">**</bpt>Select-string<ept id="p1">**</ept>。</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve">
          <source>OUTPUTS</source>
          <target state="translated">輸出</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve">
          <source>Microsoft.PowerShell.Commands.MatchInfo or System.Boolean</source>
          <target state="translated">Microsoft.PowerShell.Commands.MatchInfo 或 System.Boolean</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve">
          <source>By default, the output is a set of <bpt id="p1">**</bpt>MatchInfo<ept id="p1">**</ept> objects, one for each match found.</source>
          <target state="translated">根據預設，輸出是一組 <bpt id="p1">**</bpt>MatchInfo<ept id="p1">**</ept> 物件、 一個用於每個找到的相符項目。</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve">
          <source>If you use the <bpt id="p1">*</bpt>Quiet<ept id="p1">*</ept> parameter, the output is a Boolean value indicating whether the pattern was found.</source>
          <target state="translated">如果您使用 <bpt id="p1">*</bpt>Quiet<ept id="p1">*</ept> 參數，輸出是布林值，指出是否找到模式。</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve">
          <source>NOTES</source>
          <target state="translated">附註</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Select-String<ept id="p1">**</ept> is like the Grep command in UNIX and the FindStr command in Windows.</source>
          <target state="translated"><bpt id="p1">**</bpt>Select-string<ept id="p1">**</ept> 就像在 UNIX 的 Grep 命令和視窗中的 FindStr 命令。</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>sst<ept id="p1">**</ept> alias for the <bpt id="p2">**</bpt>Select-String<ept id="p2">**</ept> cmdlet was introduced in Windows PowerShell 3.0.</source>
          <target state="translated"> <bpt id="p1">**</bpt>Sst<ept id="p1">**</ept> 別名 <bpt id="p2">**</bpt>Select-string<ept id="p2">**</ept> 指令程式在 Windows PowerShell 3.0 引進。</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve">
          <source>To use <bpt id="p1">**</bpt>Select-String<ept id="p1">**</ept>, type the text that you want to find as the value of the <bpt id="p2">*</bpt>Pattern<ept id="p2">*</ept> parameter.</source>
          <target state="translated">若要使用 <bpt id="p1">**</bpt>Select-string<ept id="p1">**</ept>, ，輸入您想要尋找的值為文字 <bpt id="p2">*</bpt>模式<ept id="p2">*</ept> 參數。</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve">
          <source>To specify the text to be searched, do the following:</source>
          <target state="translated">如果要指定搜尋的文字，請執行下列動作：</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve">
          <source>Type the text in a quoted string, and then pipe it to <bpt id="p1">**</bpt>Select-String<ept id="p1">**</ept>.</source>
          <target state="translated">有引號的字串中輸入文字，然後將它傳送到 <bpt id="p1">**</bpt>Select-string<ept id="p1">**</ept>。</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve">
          <source>Store a text string in a variable, and then specify the variable as the value of the <bpt id="p1">*</bpt>InputObject<ept id="p1">*</ept> parameter.</source>
          <target state="translated">將文字字串儲存在變數中，並指定變數的值為 <bpt id="p1">*</bpt>InputObject<ept id="p1">*</ept> 參數。</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve">
          <source>If the text is stored in files, use the <bpt id="p1">*</bpt>Path<ept id="p1">*</ept> parameter to specify the path to the files.</source>
          <target state="translated">如果文字儲存在檔案中，使用 <bpt id="p1">*</bpt>路徑<ept id="p1">*</ept> 參數來指定檔案的路徑。</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve">
          <source>By default, <bpt id="p1">**</bpt>Select-String<ept id="p1">**</ept> interprets the value of the <bpt id="p2">*</bpt>Pattern<ept id="p2">*</ept> parameter as a regular expression.</source>
          <target state="translated">根據預設， <bpt id="p1">**</bpt>Select-string<ept id="p1">**</ept> 解譯值 <bpt id="p2">*</bpt>模式<ept id="p2">*</ept> 做為規則運算式的參數。</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve">
          <source>(For more information, see about_Regular_Expressions.) However, you can use the <bpt id="p1">*</bpt>SimpleMatch<ept id="p1">*</ept> parameter to override the regular expression matching.</source>
          <target state="translated">(如需詳細資訊，請參閱 about_Regular_Expressions。)不過，您可以使用 <bpt id="p1">*</bpt>SimpleMatch<ept id="p1">*</ept> 參數來覆寫規則運算式比對。</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">*</bpt>SimpleMatch<ept id="p1">*</ept> parameter finds instances of the value of the <bpt id="p2">*</bpt>Pattern<ept id="p2">*</ept> parameter in the input.</source>
          <target state="translated"> <bpt id="p1">*</bpt>SimpleMatch<ept id="p1">*</ept> 參數所尋找的值的執行個體 <bpt id="p2">*</bpt>模式<ept id="p2">*</ept> 輸入中的參數。</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve">
          <source>The default output of <bpt id="p1">**</bpt>Select-String<ept id="p1">**</ept> is a <bpt id="p2">**</bpt>MatchInfo<ept id="p2">**</ept> object, which includes detailed information about the matches.</source>
          <target state="translated">預設輸出 <bpt id="p1">**</bpt>Select-string<ept id="p1">**</ept> 是 <bpt id="p2">**</bpt>MatchInfo<ept id="p2">**</ept> 物件，其中包含相符項目的相關詳細的資訊。</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve">
          <source>The information in the object is useful when you are searching for text in files, because <bpt id="p1">**</bpt>MatchInfo<ept id="p1">**</ept> objects have properties such as Filename and Line.</source>
          <target state="translated">物件中的資訊時，您要搜尋的文字檔案，因為 <bpt id="p1">**</bpt>MatchInfo<ept id="p1">**</ept> 物件具有屬性，例如檔名和行。</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve">
          <source>When the input is not from the file, the value of these parameters is InputStream.</source>
          <target state="translated">當輸入不是從檔案中時，這些參數的值是 InputStream。</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve">
          <source>If you do not need the information in the <bpt id="p1">**</bpt>MatchInfo<ept id="p1">**</ept> object, use the <bpt id="p2">*</bpt>Quiet<ept id="p2">*</ept> parameter, which returns a Boolean value (True or False) to indicate whether it found a match, instead of a <bpt id="p3">**</bpt>MatchInfo<ept id="p3">**</ept> object.</source>
          <target state="translated">如果您不需要的資訊 <bpt id="p1">**</bpt>MatchInfo<ept id="p1">**</ept> 物件，請使用 <bpt id="p2">*</bpt>Quiet<ept id="p2">*</ept> 參數，而不是傳回布林值 （True 或 False） 指出是否找到相符項目， <bpt id="p3">**</bpt>MatchInfo<ept id="p3">**</ept> 物件。</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve">
          <source>When matching phrases, <bpt id="p1">**</bpt>Select-String<ept id="p1">**</ept> uses the current culture that is set for the system.</source>
          <target state="translated">比對片語時 <bpt id="p1">**</bpt>Select-string<ept id="p1">**</ept> 會使用目前文化特性設定的系統。</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve">
          <source>To find the current culture, use the Get-Culture cmdlet.</source>
          <target state="translated">目前的文化特性，請使用 Get-culture cmdlet。</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve">
          <source>To find the properties of a <bpt id="p1">**</bpt>MatchInfo<ept id="p1">**</ept> object, type the following:</source>
          <target state="translated">若要尋找的屬性 <bpt id="p1">**</bpt>MatchInfo<ept id="p1">**</ept> 物件，請輸入下列命令︰</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve">
          <source>RELATED LINKS</source>
          <target state="translated">相關的連結</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve">
          <source>about_Comparison_Operators</source>
          <target state="translated">about_Comparison_Operators</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve">
          <source>about_Regular_Expressions</source>
          <target state="translated">about_Regular_Expressions</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>