<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-tw">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-1c394fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">3f4d6c6e698f636aead229ad01535100b7796fc6</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">reference\3.0\Microsoft.PowerShell.Core\About\about_Type_Operators.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions" />
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ff4e40984083d62c3f648d9f19fe32be23c3be5e</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">410c464fc9702383f4f9a560e9f362d0b9c6d5f9</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>about_Type_Operators</source>
          <target state="translated">about_Type_Operators</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>powershell, cmdlet</source>
          <target state="translated">powershell 指令程式</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>About Type Operators</source>
          <target state="translated">相關型別運算子</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>about_Type_Operators</source>
          <target state="translated">about_Type_Operators</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>about_Type_Operators</source>
          <target state="translated">about_Type_Operators</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>SHORT DESCRIPTION</source>
          <target state="translated">簡短描述</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Describes the operators that work with Microsoft .NET Framework types.</source>
          <target state="translated">描述使用 Microsoft.NET Framework 類型的運算子。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>LONG DESCRIPTION</source>
          <target state="translated">詳細描述</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>The Boolean type operators (-is and -isNot) tell whether an object is an instance of a specified .NET Framework type.</source>
          <target state="translated">布林型別運算子 (-是與-isNot) 告訴物件是指定的.NET Framework 型別的執行個體。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The -is operator returns a value of TRUE if the type matches and a value of FALSE otherwise.</source>
          <target state="translated">-Is 運算子會傳回值為 TRUE，如果類型相符，FALSE 值否則。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>The -isNot operator returns a value of FALSE if the type matches and a value of TRUE otherwise.</source>
          <target state="translated">-IsNot 運算子否則會傳回值為 FALSE，如果類型相符，值為 TRUE。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>The -as operator tries to convert the input object to the specified .NET Framework type.</source>
          <target state="translated">-運算子嘗試將輸入的物件轉換成指定的.NET Framework 型別。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>If it succeeds, it returns the converted object.</source>
          <target state="translated">如果成功，它會傳回已轉換的物件。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>It if fails, it returns nothing.</source>
          <target state="translated">它如果失敗，就會傳回 nothing。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>It does not return an error.</source>
          <target state="translated">它不會傳回錯誤。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>The following table lists the type operators in  Windows PowerShell�.</source>
          <target state="translated">下表列出 Windows PowerShell 中的型別運算子。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>The syntax of the type operators is as follows:</source>
          <target state="translated">型別運算子的語法如下所示︰</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>You can also use the following syntax:</source>
          <target state="translated">您也可以使用下列語法︰</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>To specify the .NET Framework type, enclose the type name in brackets ([ ]), or enter the type as a string, such as [DateTime] or "DateTime" for System.DateTime.</source>
          <target state="translated">若要指定.NET Framework 型別，方括號 ([]) 括住的型別名稱或輸入型別為字串，例如 [日期時間] 或"DateTime"System.DateTime。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>If the type is not at the root of the system namespace, specify the full name of the object type.</source>
          <target state="translated">如果類型不是系統命名空間根目錄中，指定物件類型的完整名稱。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>You can omit "System.".</source>
          <target state="translated">您可以省略 「 System."。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>For example, to specify System.Diagnostics.Process, enter [System.Diagnostics.Process], [Diagnostics.Process], or "diagnostics.process".</source>
          <target state="translated">例如，若要指定 System.Diagnostics.Process，輸入 [System.Diagnostics.Process]，[Diagnostics.Process]，或 「 diagnostics.process 」。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>The type operators always return a Boolean value, even if the input is a collection of objects.</source>
          <target state="translated">型別運算子一律會傳回布林值，即使輸入是物件的集合。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>However, when the input is a collection, the type operators match the .NET Framework type of the collection.</source>
          <target state="translated">不過，當輸入是集合，型別運算子會相符之.NET Framework 型別的集合。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>They do not match the type of each object, even when all of the objects are of the same type.</source>
          <target state="translated">即使所有物件都相同的類型不相符每一個物件的類型。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>To find the .NET Framework type of an object, use the Get-Member cmdlet.</source>
          <target state="translated">物件的.NET Framework 型別，請使用 Get-member 指令程式。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Or, use the GetType method of all the objects together with the FullName property of this method.</source>
          <target state="translated">或者，您也可以使用這個方法的 FullName 屬性以及所有物件的 GetType 方法。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>For example, the following statement gets the type of the return value of a Get-Culture command:</source>
          <target state="translated">例如，下列陳述式取得 Get-culture 命令的傳回值的型別︰</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>EXAMPLES</source>
          <target state="translated">範例</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>The following examples show some uses of the Type operators:</source>
          <target state="translated">下列範例顯示一些型別運算子的用法︰</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>The following example shows that when the input is a collection of objects, the matching type is the .NET Framework type of the collection, not the type of the individual objects in the collection.</source>
          <target state="translated">下列範例顯示當輸入物件的集合，相符的類型是.NET Framework 集合型別，不在集合中個別物件的型別。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>In this example, although both the Get-Culture and Get-UICulture cmdlets return System.Globalization.CultureInfo objects, a collection of these objects is a System.Object array.</source>
          <target state="translated">在此範例中，雖然取得文化特性和 Get-uiculture cmdlet 會傳回 System.Globalization.CultureInfo 物件，但是這些物件的集合會是 System.Object 陣列。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>The following examples show how to use the -as operator.</source>
          <target state="translated">下列範例顯示如何使用的運算子。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>The following example shows that when the -as operator cannot convert the input object to the .NET Framework type, it returns nothing.</source>
          <target state="translated">下列範例會顯示當-運算子無法將輸入的物件轉換為.NET Framework 型別，就會傳回 nothing。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>SEE ALSO</source>
          <target state="translated">另請參閱</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>about_Operators</source>
          <target state="translated">about_Operators</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>