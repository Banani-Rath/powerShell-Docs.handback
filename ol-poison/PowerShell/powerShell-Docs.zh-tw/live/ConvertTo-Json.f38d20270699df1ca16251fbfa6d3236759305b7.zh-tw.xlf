<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-tw">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-1c394fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">11c2baeb16d97fe7b03782d20d1a45190c3ad4ac</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">reference\5.0\Microsoft.PowerShell.Utility\ConvertTo-Json.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions" />
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f5e57a8a7caa7611a38c581d66c8308291ac36d5</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">9d37067d93fcc713ccb184f561cf7248883eec2e</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>powershell, cmdlet</source>
          <target state="translated">powershell 指令程式</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>ConvertTo-Json</source>
          <target state="translated">ConvertTo-Json</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>ConvertTo-Json</source>
          <target state="translated">ConvertTo-Json</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>SYNOPSIS</source>
          <target state="translated">概要</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Converts an object to a JSON-formatted string.</source>
          <target state="translated">將物件轉換成 JSON 格式的字串。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>SYNTAX</source>
          <target state="translated">語法</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>DESCRIPTION</source>
          <target state="translated">描述</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>ConvertTo-Json<ept id="p1">**</ept> cmdlet converts any object to a string in JavaScript Object Notation (JSON) format.</source>
          <target state="translated"> <bpt id="p1">**</bpt>Convertto-json<ept id="p1">**</ept> 指令程式會將任何物件轉換為 JavaScript 物件標記法 (JSON) 格式的字串。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>The properties are converted to field names, the field values are converted to property values, and the methods are removed.</source>
          <target state="translated">屬性會轉換成欄位名稱、欄位值會轉換成屬性值，而方法會被移除。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>You can then use the ConvertFrom-Json cmdlet to convert a JSON-formatted string to a JSON object, which is easily managed in Windows PowerShell.</source>
          <target state="translated">Convertfrom-json cmdlet 則可用來將 JSON 格式的字串轉換成 JSON 物件，輕鬆管理 Windows PowerShell 中。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Many web sites use JSON instead of XML to serialize data for communication between servers and web-based apps.</source>
          <target state="translated">許多網站都使用 JSON 而不是 XML 來將資料序列化，以便在伺服器與 Web 應用程式之間進行通訊。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>This cmdlet was introduced in Windows PowerShell 3.0.</source>
          <target state="translated">此 Cmdlet 是在 Windows PowerShell 3.0 中引進。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>EXAMPLES</source>
          <target state="translated">範例</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Example 1: Convert a Calendar object to a JSON string</source>
          <target state="translated">範例 1︰ 將行事曆物件轉換成 JSON 字串</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>This command uses the <bpt id="p1">**</bpt>ConvertTo-Json<ept id="p1">**</ept> cmdlet to convert a GregorianCalendar object to a JSON-formatted string.</source>
          <target state="translated">此命令會使用 <bpt id="p1">**</bpt>Convertto-json<ept id="p1">**</ept> cmdlet 將 GregorianCalendar 物件轉換成 JSON 格式的字串。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Example 2: Compress the JSON output</source>
          <target state="translated">範例 2︰ 壓縮 JSON 輸出</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>This command shows the effect of using the <bpt id="p1">*</bpt>Compress<ept id="p1">*</ept> parameter of <bpt id="p2">**</bpt>ConvertTo-Json<ept id="p2">**</ept>.</source>
          <target state="translated">此命令會顯示使用的效果 <bpt id="p1">*</bpt>壓縮<ept id="p1">*</ept> 參數 <bpt id="p2">**</bpt>Convertto-json<ept id="p2">**</ept>。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>The compression affects only the appearance of the string, not its validity.</source>
          <target state="translated">壓縮只會影響字串的外觀，不會影響其有效性。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Example 3: Convert an object to a JSON string and JSON object</source>
          <target state="translated">範例 3︰ 將物件轉換成 JSON 字串和 JSON 物件</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>This command shows how to use the <bpt id="p1">**</bpt>ConvertTo-Json<ept id="p1">**</ept> and <bpt id="p2">**</bpt>ConvertFrom-Json<ept id="p2">**</ept> cmdlets to convert an object to a JSON string and a JSON object.</source>
          <target state="translated">此命令會顯示如何使用 <bpt id="p1">**</bpt>Convertto-json<ept id="p1">**</ept> 和 <bpt id="p2">**</bpt>Convertfrom-json<ept id="p2">**</ept> 指令程式來將物件轉換成 JSON 字串和 JSON 物件。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>The first command uses the <bpt id="p1">**</bpt>ConvertTo-Json<ept id="p1">**</ept> cmdlet to convert a <bpt id="p2">**</bpt>System.DateTime<ept id="p2">**</ept> object from the Get-Date cmdlet to a JSON-formatted string.</source>
          <target state="translated">第一個命令使用 <bpt id="p1">**</bpt>Convertto-json<ept id="p1">**</ept> 指令程式將轉換 <bpt id="p2">**</bpt>System.DateTime<ept id="p2">**</ept> 物件從 Get-date 指令程式以 JSON 格式的字串。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>The command uses the Select-Object cmdlet to get all (<bpt id="p1">*</bpt>) of the properties of the <ept id="p1">*</ept><bpt id="p2">*</bpt>DateTime<ept id="p2">*</ept><bpt id="p3">*</bpt> object. The output shows the JSON string that <ept id="p3">*</ept><bpt id="p4">*</bpt>ConvertTo-Json<ept id="p4">*</ept>* returned.</source>
          <target state="translated">命令使用 Select-object cmdlet 取得所有 (<bpt id="p1">*</bpt>) 屬性的 <ept id="p1">*</ept><bpt id="p2">*</bpt>DateTime<ept id="p2">*</ept><bpt id="p3">*</bpt> 物件。輸出顯示的 JSON 字串 <ept id="p3">*</ept><bpt id="p4">*</bpt>Convertto-json<ept id="p4">*</ept>* 傳回。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>The second command uses <bpt id="p1">**</bpt>ConvertFrom-Json<ept id="p1">**</ept> to convert the JSON string to a JSON object.</source>
          <target state="translated">第二個命令會使用 <bpt id="p1">**</bpt>Convertfrom-json<ept id="p1">**</ept> 將 JSON 字串轉換成 JSON 物件。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Example 4: Convert a PowerShell Help file to JSON format</source>
          <target state="translated">範例 4: PowerShell 說明檔案轉換成 JSON 格式</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>This command uses the <bpt id="p1">**</bpt>ConvertTo-Json<ept id="p1">**</ept> cmdlet to convert a Windows PowerShell Help file from XML format to JSON format.</source>
          <target state="translated">此命令會使用 <bpt id="p1">**</bpt>Convertto-json<ept id="p1">**</ept> 指令程式可從 XML 格式的 Windows PowerShell 說明檔案轉換成 JSON 格式。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>You can use a command like this to use the Help topic content in a web service application.</source>
          <target state="translated">您可以使用這類的命令，在 web 服務應用程式中使用說明主題的內容。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>PARAMETERS</source>
          <target state="translated">參數</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>-Compress</source>
          <target state="translated">-壓縮</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Omits white space and indented formatting in the output string.</source>
          <target state="translated">省略輸出字串中的空白字元和縮排格式。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>-Depth</source>
          <target state="translated">深度</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Specifies how many levels of contained objects are included in the JSON representation.</source>
          <target state="translated">指定 JSON 表示法中包含多少層的內含物件。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>The default value is 2.</source>
          <target state="translated">預設值為 2。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>-InputObject</source>
          <target state="translated">-InputObject</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Specifies the objects to convert to JSON format.</source>
          <target state="translated">指定要轉換成 JSON 格式的物件。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Enter a variable that contains the objects, or type a command or expression that gets the objects.</source>
          <target state="translated">輸入包含物件的變數，或輸入可取得物件的命令或運算式。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>You can also pipe an object to <bpt id="p1">**</bpt>ConvertTo-Json<ept id="p1">**</ept>.</source>
          <target state="translated">您也可以使用管線將物件 <bpt id="p1">**</bpt>Convertto-json<ept id="p1">**</ept>。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">*</bpt>InputObject<ept id="p1">*</ept> parameter is required, but its value can be null ($Null) or an empty string.</source>
          <target state="translated"> <bpt id="p1">*</bpt>InputObject<ept id="p1">*</ept> 是必要參數，但其值可以是 null ($Null) 或空字串。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>When the input object is $Null, <bpt id="p1">**</bpt>ConvertTo-Json<ept id="p1">**</ept> does not generate any output.</source>
          <target state="translated">當輸入的物件是 $Null， <bpt id="p1">**</bpt>Convertto-json<ept id="p1">**</ept> 不會產生任何輸出。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>When the input object is an empty string, <bpt id="p1">**</bpt>ConvertTo-Json<ept id="p1">**</ept> returns an empty string.</source>
          <target state="translated">當輸入的物件是空字串， <bpt id="p1">**</bpt>Convertto-json<ept id="p1">**</ept> 會傳回空字串。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>CommonParameters</source>
          <target state="translated">CommonParameters</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutVariable, -OutBuffer, -PipelineVariable, -Verbose, -WarningAction, and -WarningVariable.</source>
          <target state="translated">這個 cmdlet 支援一般參數:-偵錯、-ErrorAction、-ErrorVariable、-InformationAction-InformationVariable、-OutVariable、-OutBuffer、-PipelineVariable、-Verbose、-WarningAction 以及-WarningVariable。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>For more information, see about_CommonParameters (http://go.microsoft.com/fwlink/?LinkID=113216).</source>
          <target state="translated">如需詳細資訊，請參閱 about_CommonParameters (http://go.microsoft.com/fwlink/?LinkID=113216)。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>INPUTS</source>
          <target state="translated">輸入</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>System.Object</source>
          <target state="translated">System.Object</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>You can pipe any object to <bpt id="p1">**</bpt>ConvertTo-Json<ept id="p1">**</ept>.</source>
          <target state="translated">您可以使用管線傳送任何物件至 <bpt id="p1">**</bpt>Convertto-json<ept id="p1">**</ept>。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>OUTPUTS</source>
          <target state="translated">輸出</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>System.String</source>
          <target state="translated">System.String</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>NOTES</source>
          <target state="translated">附註</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>ConvertTo-Json<ept id="p1">**</ept> cmdlet is implemented by using the JavaScriptSerializer classhttp://msdn.microsoft.com/en-us/library/system.web.script.serialization.javascriptserializer(VS.100).aspx (http://msdn.microsoft.com/en-us/library/system.web.script.serialization.javascriptserializer(VS.100).aspx).</source>
          <target state="translated"> <bpt id="p1">**</bpt>Convertto-json<ept id="p1">**</ept> 指令程式透過實作的 JavaScriptSerializer classhttp://msdn.microsoft.com/en-us/library/system.web.script.serialization.javascriptserializer (vs.100).aspx (http://msdn.microsoft.com/en-us/library/system.web.script.serialization.javascriptserializer (vs.100).aspx)。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>RELATED LINKS</source>
          <target state="translated">相關的連結</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>ConvertFrom-Json</source>
          <target state="translated">ConvertFrom-Json</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Get-Content</source>
          <target state="translated">Get-Content</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Get-UICulture</source>
          <target state="translated">Get-uiculture</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Invoke-WebRequest</source>
          <target state="translated">Invoke-WebRequest</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Invoke-RestMethod</source>
          <target state="translated">Invoke-RestMethod</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>