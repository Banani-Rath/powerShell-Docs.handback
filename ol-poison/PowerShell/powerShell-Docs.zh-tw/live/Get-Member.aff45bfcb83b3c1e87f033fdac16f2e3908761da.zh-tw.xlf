<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-tw">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-1c394fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">6b06411909250faddbf13de6546e56e81ac6ae43</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">reference\3.0\Microsoft.PowerShell.Utility\Get-Member.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions" />
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">06672f68c18d04a209d8e0644e4f5de5a130c954</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">0a9eafaee9ae61fea7ff02e0de6650fa2729f6fe</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>powershell, cmdlet</source>
          <target state="translated">powershell 指令程式</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Get-Member</source>
          <target state="translated">Get-Member</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Get-Member</source>
          <target state="translated">Get-Member</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>SYNOPSIS</source>
          <target state="translated">概要</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Gets the properties and methods of objects.</source>
          <target state="translated">取得物件的屬性和方法。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>SYNTAX</source>
          <target state="translated">語法</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>DESCRIPTION</source>
          <target state="translated">描述</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>The Get-Member cmdlet gets the "members" (properties and methods) of objects.</source>
          <target state="translated">Get-Member Cmdlet 會取得物件的「成員」(屬性和方法)。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>To specify the object, use the InputObject parameter or pipe an object to Get-Member.</source>
          <target state="translated">若要指定物件，請使用 InputObject 參數，或使用管道將物件傳送給 Get-Member。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>To retrieve information about static members (members of the class, not of the instance), use the Static parameter.</source>
          <target state="translated">若要抓取靜態成員 (類別的成員，而非執行個體的成員) 的相關資訊，請使用 Static 參數。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>To get only certain types of members, such as NoteProperties, use the MemberType parameter.</source>
          <target state="translated">若只要取得特定類型的成員 (例如 NoteProperties)，請使用 MemberType 參數。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>EXAMPLES</source>
          <target state="translated">範例</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>-------------------------- EXAMPLE 1 --------------------------</source>
          <target state="translated">-------------------------- 範例 1 --------------------------</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>This command displays the properties and methods of the process objects (System.ServiceProcess.ServiceController) that are generated by the Get-Service cmdlet.</source>
          <target state="translated">這個命令會顯示 Get-Service Cmdlet 所產生之處理程序物件 (System.ServiceProcess.ServiceController) 的屬性和方法 。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>The command uses the pipeline operator (|) to send the output of a Get-Service command to Get-Member.</source>
          <target state="translated">此命令會使用管線運算子 (|) 將 Get-Service 的輸出傳送給 Get-Member。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Because the Get-Member part of the command does not have any parameters, it uses all of the default values.</source>
          <target state="translated">因為此命令的 Get-Member 部分並沒有任何參數，所以它會全部使用預設值。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>As such, it gets all member types, but it does not get static members and does not display intrinsic members.</source>
          <target state="translated">因此，它會取得所有成員類型，但是不會取得靜態成員，也不會顯示內建成員。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>-------------------------- EXAMPLE 2 --------------------------</source>
          <target state="translated">-------------------------- EXAMPLE 2 --------------------------</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>This example gets all of the members (properties and methods) of the service objects (System.ServiceProcess.ServiceController) retrieved by the Get-Service cmdlet, including the intrinsic members, such as PSBase and PSObject, and the get_ and set_ methods.</source>
          <target state="translated">這個範例會取得 Get-Service Cmdlet 所抓取之服務物件 (System.ServiceProcess.ServiceController) 的所有成員 (屬性和方法)，包括內建成員 (例如 PSBase 和 PSObject) 和 get_ 和 set_ 方法。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>The first command uses the Get-Service cmdlet to get objects that represent the services on the system.</source>
          <target state="translated">第一個命令使用 Get-Service Cmdlet 來取得代表系統上之服務的物件。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>It uses a pipeline operator (|) to pass the service objects to the Get-Member cmdlet.</source>
          <target state="translated">它使用管線運算子 (|) 將服務物件傳遞給 Get-member Cmdlet。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>The Get-Member command uses the Force parameter to add the intrinsic members and compiler-generated members of the objects to the display.</source>
          <target state="translated">Get-Member 命令使用 Force 參數將物件的內建成員和編譯器產生的成員新增到顯示中。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Get-Member gets these members, but it hides them by default.</source>
          <target state="translated">Get-Member 會取得這些成員，但是預設會隱藏它們。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>You can use these properties and methods in the same way that you would use an adapted method of the object.</source>
          <target state="translated">當您使用這些屬性和方法時，可以比照與您使用物件的已調整方法時相同的方式。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>The second command shows how to display the value of the PSBase property of the Schedule service.</source>
          <target state="translated">第二個命令示範如何顯示 Schedule 服務之 PSBase 屬性的值。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>-------------------------- EXAMPLE 3 --------------------------</source>
          <target state="translated">-------------------------- EXAMPLE 3 --------------------------</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>This command gets the methods and properties of service objects that were extended by using the Types.ps1xml file or the Add-Member cmdlet.</source>
          <target state="translated">這個命令會取得藉由使用 Types.ps1xml 檔案或 Add-Member Cmdlet 擴充之服務物件的方法和屬性。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>The Get-Member command uses the View parameter to get only the extended members of the service objects.</source>
          <target state="translated">Get-Member 命令使用 View 參數以只取得服務物件的擴充成員。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>In this case, the extended member is the Name property, which is an alias property of the ServiceName property.</source>
          <target state="translated">在此情況下，擴充成員即為 Name 屬性，亦即 ServiceName 屬性的別名屬性。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>-------------------------- EXAMPLE 4 --------------------------</source>
          <target state="translated">-------------------------- EXAMPLE 4 --------------------------</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>This command gets the script properties of event log objects in the System log in Event Viewer.</source>
          <target state="translated">這個命令會取得「事件檢視器」內系統記錄檔中事件記錄檔物件的指令碼屬性。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>In this case, the only script property is the EventID.</source>
          <target state="translated">在此情況下，唯一的指令碼屬性是 EventID。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>-------------------------- EXAMPLE 5 --------------------------</source>
          <target state="translated">-------------------------- EXAMPLE 5 --------------------------</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>This command gets the script properties of event log objects in the System log in Event Viewer.</source>
          <target state="translated">這個命令會取得「事件檢視器」內系統記錄檔中事件記錄檔物件的指令碼屬性。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>The command uses the MemberType parameter to get only objects with a value of AliasProperty for their MemberType property.</source>
          <target state="translated">此命令使用 MemberType 參數以只取得其 MemberType 屬性值是 AliasProperty 的物件。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>The command returns the EventID property of the EventLog object.</source>
          <target state="translated">此命令會傳回 EventLog 物件的 EventID 屬性。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>-------------------------- EXAMPLE 6 --------------------------</source>
          <target state="translated">-------------------------- EXAMPLE 6 --------------------------</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>This command gets objects that have a MachineName property from a list of cmdlets.</source>
          <target state="translated">這個命令會從 Cmdlet 清單中取得具有 MachineName 屬性的物件。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>The first command stores the names of several cmdlets in the $a variable.</source>
          <target state="translated">第一個命令會將數個 Cmdlet 的名稱儲存在 $a 變數中。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>The second command uses a ForEach statement to invoke each command, send the results to Get-Member, and limit the results from Get-Member to members that have the name "MachineName."</source>
          <target state="translated">第二個命令使用 ForEach 陳述式來叫用每個命令、將結果傳送給 Get-Member，並將 Get-Member 傳回的結果限制為名稱是 "MachineName" 的成員。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>The results show that only process objects (System.Diagnostics.Process) and service objects (System.ServiceProcess.ServiceController) have a MachineName property.</source>
          <target state="translated">結果顯示只有處理程序物件 (System.Diagnostics.Process) 和服務物件 (System.ServiceProcess.ServiceController) 具有 MachineName 屬性。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>-------------------------- EXAMPLE 7 --------------------------</source>
          <target state="translated">-------------------------- EXAMPLE 7 --------------------------</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>This example demonstrates how to find the properties and methods of an array of objects when you have only one object of the given type.</source>
          <target state="translated">這個範例示範當您只有一個物件屬於指定的類型時，如何尋找物件陣列的屬性和方法。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Because the goal of the command is to find the properties of an array, the first command uses the InputObject parameter.</source>
          <target state="translated">由於此命令的目標是要尋找陣列的屬性，因此第一個命令使用 InputObject 參數。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>It uses the "at" symbol (@) to indicate an array.</source>
          <target state="translated">它使用 "at" 符號 (@) 來指出陣列。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>In this case, the array contains only one object, the integer 1.</source>
          <target state="translated">在此情況下，陣列只包含一個物件，亦即整數 1。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>The third command uses the Get-Member cmdlet to get the properties and methods of an array of integers, and the command saves them in the $a variable.</source>
          <target state="translated">第三個命令使用 Get-Member Cmdlet 來取得整數陣列的屬性和方法，並將它們儲存在 $a 變數中。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>The fourth command uses the Count property of the array to find the number of objects in the $a variable.</source>
          <target state="translated">第四個命令使用陣列的 Count 屬性來尋找 $a 變數中的物件數目。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>-------------------------- EXAMPLE 8 --------------------------</source>
          <target state="translated">-------------------------- EXAMPLE 8 --------------------------</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>This example shows how to determine which properties of an object can be changed.</source>
          <target state="translated">這個範例示範如何判斷物件的哪些屬性可以變更。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>The example uses a file, but you can use this command format to find the changeable properties of any object in Windows PowerShell.</source>
          <target state="translated">此範例使用檔案，但是您可以使用這個命令格式來尋找 Windows PowerShell 中任何物件的可變更屬性。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>The first command uses the Get-Item cmdlet to get a text file, and then it saves the file object in the $file variable.</source>
          <target state="translated">第一個命令使用 Get-Item Cmdlet 來取得文字檔案，然後將該檔案物件儲存在 $file 變數中。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>The second command gets all of the changeable properties of the file object in the $file variable and displays the names of the properties in a table.</source>
          <target state="translated">第二個命令會取得 $file 變數中該檔案物件的所有可變更屬性，並以表格顯示屬性的名稱。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>The third command gets the changeable properties of all objects in your Windows PowerShell session.</source>
          <target state="translated">第三個命令會取得您 Windows PowerShell 工作階段中所有物件的可變更屬性。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>-------------------------- EXAMPLE 9 --------------------------</source>
          <target state="translated">-------------------------- EXAMPLE 9 --------------------------</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>This example shows how the InputObject parameter works in the Get-Member cmdlet.</source>
          <target state="translated">這個範例示範 InputObject 參數在 Get-Member Cmdlet 中的運作方式。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>When you use the InputObject parameter to get the members of a collection, Get-Member gets the members of the collection.</source>
          <target state="translated">當您使用 InputObject 參數來取得某個集合的成員時，Get-Member 會取得該集合的成員。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>When you pipe a collection of objects to Get-Member, Get-Member gets the members of each item in the collection.</source>
          <target state="translated">當您使用管道將某個物件集合傳送給 Get-Member 時，Get-Member 會取得該集合中每個項目的成員。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>The first command gets the services on the local computer and saves the services in the $s variable.</source>
          <target state="translated">第一個命令會取得本機電腦上的服務，並將服務儲存在 $s 變數中。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>The second command pipes the $s variable to the Get-Member cmdlet.</source>
          <target state="translated">第二個命令會使用管道將 $s 變數傳送給 Get-Member Cmdlet。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>Get-Member gets the types of each member of $s and the members of that type.</source>
          <target state="translated">Get-Member 會取得 $s 之每個成員的類型，以及該類型的成員。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>In this case, it gets ServiceController objects and lists the members, such as RequiredServices and Close.</source>
          <target state="translated">在此情況下，它會取得 ServiceController 物件並列出成員 (例如 RequiredServices 和 Close)。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>The third command uses the InputObject parameter of Get-Member to submit the $s variable.</source>
          <target state="translated">第三個命令使用 Get-Member 的 InputObject 參數來送出 $s 變數。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>Get-Member gets the type (System.Object<ph id="ph1">\[\]</ph>) and the members of the collection (or "array") of ServiceController objects, such as Count and Clone.</source>
          <target state="translated">Get-member 會取得型別 (System.Object<ph id="ph1">\[\]</ph>) 和 ServiceController 物件，例如 Count 和 Clone 集合 （或 「 陣列 」） 的成員。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>PARAMETERS</source>
          <target state="translated">參數</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>-Force</source>
          <target state="translated">-Force</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>Adds the intrinsic members (PSBase, PSAdapted, PSObject, PSTypeNames) and the compiler-generated get_ and set_ methods to the display.</source>
          <target state="translated">將內建成員 (PSBase、PSAdapted、PSObject、PSTypeNames) 及編譯器產生的 get_ 和 set_ 方法新增到顯示中。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>By default, Get-Member gets these properties in all views other than "Base" and "Adapted," but it does not display them.</source>
          <target state="translated">根據預設，Get-Member 會在 "Base" 和 "Adapted" 以外的所有檢視中取得這些屬性，但是不會顯示它們。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>The following list describes the properties that are added when you use the Force parameter:</source>
          <target state="translated">下列清單說明當您使用 Force 參數時會新增的屬性：</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>PSBase:  The original properties of the .NET Framework object without extension or adaptation.</source>
          <target state="translated">PSBase: 原始未經擴充或調整的.NET Framework 物件的屬性。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>These are the properties defined for the object class and listed in MSDN.</source>
          <target state="translated">這些是為物件類別定義並在 MSDN 中列出的屬性。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>PSAdapted: The properties and methods defined in the Windows PowerShell extended type system.</source>
          <target state="translated">PSAdapted: 定義屬性和方法在 Windows PowerShell 擴充類型系統中。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>PSExtended: The properties and methods that were added in the Types.ps1xml files or by using the Add-Member cmdlet.</source>
          <target state="translated">PSExtended: 屬性和方法已新增之 Types.ps1xml 檔案中，或藉由使用 Add-member cmdlet。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>PSObject: The adapter that converts the base object to a Windows PowerShell PSObject object.</source>
          <target state="translated">PSObject︰ 配接器可將基底物件轉換成 Windows PowerShell PSObject 物件。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>PSTypeNames: A list of object types that describe the object, in order of specificity.</source>
          <target state="translated">PSTypeNames︰ 描述物件，明確性順序中的物件類型清單。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>When formatting the object, Windows PowerShell searches for the types in the Format.ps1xml files in the Windows PowerShell installation directory ($pshome).</source>
          <target state="translated">將物件格式化時，Windows PowerShell 會在 Windows PowerShell 安裝目錄 ($pshome) 下的 Format.ps1xml 檔案中搜尋類型。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>It uses the formatting definition for the first type that it finds.</source>
          <target state="translated">它會使用所找到的第一個類型的格式定義。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>-InputObject</source>
          <target state="translated">-InputObject</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>Specifies the object whose members are retrieved.</source>
          <target state="translated">指定要供抓取成員的物件。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>Using the InputObject parameter is not the same as piping an object to Get-Member.</source>
          <target state="translated">使用 InputObject 參數與使用管道將物件傳送給 Get-Member 不同。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>The differences are as follows:</source>
          <target state="translated">差異如下：</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>When you pipe a collection of objects to Get-Member, Get-Member gets the members of the individual objects in the collection, such as the properties of each string in an array of strings.</source>
          <target state="translated">當您使用管線傳送至 Get-member 物件的集合時，Get-member 會取得集合，例如字串陣列中每個字串的內容中的個別物件的成員。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>When you use InputObject to submit a collection of objects, Get-Member gets the members of the collection, such as the properties of the array in an array of strings.</source>
          <target state="translated">當您使用 InputObject 送出物件的集合時，Get-member 會取得集合，例如字串陣列中的陣列內容的成員。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>-MemberType</source>
          <target state="translated">-MemberType</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>Gets only members with the specified member type.</source>
          <target state="translated">只取得具有指定之成員類型的成員。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>The default is <bpt id="p1">**</bpt>All<ept id="p1">**</ept>.</source>
          <target state="translated">預設值是 <bpt id="p1">**</bpt>所有<ept id="p1">**</ept>。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>The valid values for this parameter are: <bpt id="p1">**</bpt>AliasProperty<ept id="p1">**</ept>, <bpt id="p2">**</bpt>All<ept id="p2">**</ept>, <bpt id="p3">**</bpt>CodeMethod<ept id="p3">**</ept>, <bpt id="p4">**</bpt>CodeProperty<ept id="p4">**</ept>, <bpt id="p5">**</bpt>Event<ept id="p5">**</ept>, <bpt id="p6">**</bpt>MemberSet<ept id="p6">**</ept>, <bpt id="p7">**</bpt>Method<ept id="p7">**</ept>, <bpt id="p8">**</bpt>Methods<ept id="p8">**</ept>, <bpt id="p9">**</bpt>Noteproperty<ept id="p9">**</ept>, <bpt id="p10">**</bpt>ParameterizedProperty<ept id="p10">**</ept>, <bpt id="p11">**</bpt>Properties<ept id="p11">**</ept>, <bpt id="p12">**</bpt>Property<ept id="p12">**</ept>, <bpt id="p13">**</bpt>PropertySet<ept id="p13">**</ept>, <bpt id="p14">**</bpt>ScriptMethod<ept id="p14">**</ept>, and <bpt id="p15">**</bpt>ScriptProperty<ept id="p15">**</ept>.</source>
          <target state="translated">這個參數的有效值為︰ <bpt id="p1">**</bpt>AliasProperty<ept id="p1">**</ept>, ，<bpt id="p2">**</bpt>所有<ept id="p2">**</ept>, ，<bpt id="p3">**</bpt>CodeMethod<ept id="p3">**</ept>, ，<bpt id="p4">**</bpt>CodeProperty<ept id="p4">**</ept>, ，<bpt id="p5">**</bpt>事件<ept id="p5">**</ept>, ，<bpt id="p6">**</bpt>成員集合<ept id="p6">**</ept>, ，<bpt id="p7">**</bpt>方法<ept id="p7">**</ept>, ，<bpt id="p8">**</bpt>方法<ept id="p8">**</ept>, ，<bpt id="p9">**</bpt>Noteproperty<ept id="p9">**</ept>, ，<bpt id="p10">**</bpt>ParameterizedProperty<ept id="p10">**</ept>, ，<bpt id="p11">**</bpt>屬性<ept id="p11">**</ept>, ，<bpt id="p12">**</bpt>屬性<ept id="p12">**</ept>, ，<bpt id="p13">**</bpt>PropertySet<ept id="p13">**</ept>, ，<bpt id="p14">**</bpt>ScriptMethod<ept id="p14">**</ept>, ，和 <bpt id="p15">**</bpt>ScriptProperty<ept id="p15">**</ept>。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>For information about these values, see "PSMemberTypes Enumeration" in MSDN at http://msdn.microsoft.com/library/windows/desktop/system.management.automation.psmembertypes(v=vs.85).aspx.</source>
          <target state="translated">這些值的相關資訊，請參閱 MSDN 中的 &lt; PSMemberTypes 列舉 &gt;，網址 http://msdn.microsoft.com/library/windows/desktop/system.management.automation.psmembertypes(v=vs.85).aspx.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>Not all objects have every type of member.</source>
          <target state="translated">並非所有物件都有每個類型的成員。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>If you specify a member type that the object does not have, Windows PowerShell returns a null value.</source>
          <target state="translated">若指定物件沒有的成員類型，Windows PowerShell 會傳回 Null 值。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>To get related types of members, such as all extended members, use the <bpt id="p1">**</bpt>View<ept id="p1">**</ept> parameter.</source>
          <target state="translated">若要取得相關的類型的成員，例如所有擴充成員，使用 <bpt id="p1">**</bpt>檢視<ept id="p1">**</ept> 參數。</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>If you use the <bpt id="p1">**</bpt>MemberType<ept id="p1">**</ept> parameter with the <bpt id="p2">**</bpt>Static<ept id="p2">**</ept> or <bpt id="p3">**</bpt>View<ept id="p3">**</ept> parameters, Get-Member gets the members that belong to both sets.</source>
          <target state="translated">如果您使用 <bpt id="p1">**</bpt>MemberType<ept id="p1">**</ept> 參數 <bpt id="p2">**</bpt>靜態<ept id="p2">**</ept> 或 <bpt id="p3">**</bpt>檢視<ept id="p3">**</ept> 參數，Get-member 會取得屬於這兩個集合成員。</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>-Name</source>
          <target state="translated">-Name</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>Specifies the names of one or more properties or methods of the object.</source>
          <target state="translated">指定一個或多個屬性的名稱或物件的方法。</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>Get-Member gets only the specified properties and methods.</source>
          <target state="translated">Get-Member 只會取得指定的屬性和方法。</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>If you use the Name parameter with the MemberType, View, or Static parameters, Get-Member gets only the members that satisfy the criteria of all parameters.</source>
          <target state="translated">如果您使用 Name 參數搭配 MemberType、View 或 Static 參數，Get-Member 便只會取得符合所有參數條件的成員。</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>To get a static member by name, use the Static parameter with the Name parameter.</source>
          <target state="translated">若要依名稱取得靜態成員，請使用 Static 參數搭配 Name 參數。</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>-Static</source>
          <target state="translated">-Static</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>Gets only the static properties and methods of the object.</source>
          <target state="translated">只取得物件的靜態屬性和物件。</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>Static properties and methods are defined on the class of objects, not on any particular instance of the class.</source>
          <target state="translated">靜態屬性和方法是在物件的類別上定義，而非在類別的任何特定執行個體上定義。</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>If you use the Static parameter with the View parameter, the View parameter is ignored.</source>
          <target state="translated">如果您使用 Static 參數搭配 View 參數，則 View 參數會被忽略。</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>If you use the Static parameter with the MemberType parameter, Get-Member gets only the members that belong to both sets.</source>
          <target state="translated">如果您使用 Static 參數搭配 MemberType 參數，Get-Member 便只會取得同時屬於這兩個集合的成員。</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>-View</source>
          <target state="translated">檢視</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>Gets only particular types of members (properties and methods).</source>
          <target state="translated">只取得特定類型的成員 (屬性和方法)。</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>Specify one or more of the values.</source>
          <target state="translated">請指定一個或多個值。</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>The default is "Adapted, Extended".</source>
          <target state="translated">預設值是 "Adapted, Extended"。</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>Valid values are:</source>
          <target state="translated">有效值為：</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>Base:  Gets only the original properties and methods of the .NET Framework object (without extension or adaptation).</source>
          <target state="translated">基底︰ 取得只有原始的屬性和方法的.NET Framework 物件 （不含擴充或調整）。</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>Adapted:  Gets only the properties and methods defined in the Windows PowerShell extended type system.</source>
          <target state="translated">調整︰ 只取得屬性和 Windows PowerShell 擴充類型系統中定義的方法。</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>Extended: Gets only the properties and methods that were added in the Types.ps1xml files or by using the Add-Member cmdlet.</source>
          <target state="translated">擴充︰ 只取得屬性和方法已新增之 Types.ps1xml 檔案中，或藉由使用 Add-member cmdlet。</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>All: Gets the members in the Base, Adapted, and Extended views.</source>
          <target state="translated">All: Base、 Adapted 及 Extended 檢視中取得的成員。</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>The View parameter determines the members retrieved, not just the display of those members.</source>
          <target state="translated">View 參數會決定抓取的成員，而不只是決定顯示這些成員。</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>To get particular member types, such as script properties, use the MemberType parameter.</source>
          <target state="translated">若要取得特定的成員類型 (例如指令碼屬性)，請使用 MemberType 參數。</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>If you use the MemberType and View parameters in the same command, Get-Member gets the members that belong to both sets.</source>
          <target state="translated">如果您在相同的命令中使用 MemberType 和 View 參數，Get-Member 便會取得同時屬於這兩個集合的成員。</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>If you use the Static and View parameters in the same command, the View parameter is ignored.</source>
          <target state="translated">如果您在相同的命令中使用 Static 和 View 參數，則 View 會被忽略。</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>CommonParameters</source>
          <target state="translated">CommonParameters</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutVariable, -OutBuffer, -PipelineVariable, -Verbose, -WarningAction, and -WarningVariable.</source>
          <target state="translated">這個 cmdlet 支援一般參數:-偵錯、-ErrorAction、-ErrorVariable、-InformationAction-InformationVariable、-OutVariable、-OutBuffer、-PipelineVariable、-Verbose、-WarningAction 以及-WarningVariable。</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>For more information, see about_CommonParameters (http://go.microsoft.com/fwlink/?LinkID=113216).</source>
          <target state="translated">如需詳細資訊，請參閱 about_CommonParameters (http://go.microsoft.com/fwlink/?LinkID=113216)。</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>INPUTS</source>
          <target state="translated">輸入</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>System.Management.Automation.PSObject</source>
          <target state="translated">System.Management.Automation.PSObject</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>You can pipe any object to Get-Member</source>
          <target state="translated">您可以使用管線將任何物件傳送至 Get-Member。</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>OUTPUTS</source>
          <target state="translated">輸出</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>Microsoft.PowerShell.Commands.MemberDefinition</source>
          <target state="translated">Microsoft.PowerShell.Commands.MemberDefinition</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>Get-Member returns an object for each property or method that its gets.</source>
          <target state="translated">Get-Member 會為它取得的每個屬性或方法傳回物件。</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>NOTES</source>
          <target state="translated">附註</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>You can get information about a collection object either by using the InputObject parameter or by piping the object, preceded by a comma, to Get-Member.</source>
          <target state="translated">您可以藉由使用 InputObject 參數，或藉由使用管線將物件 (前面加上逗號) 傳送給 Get-Member，來取得集合物件的相關資訊。</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>You can use the $this automatic variable in script blocks that define the values of new properties and methods.</source>
          <target state="translated">您可以在定義新屬性和方法之值的指令碼區塊中使用 $this 自動變數。</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>The $this variable refers to the instance of the object to which the properties and methods are being added.</source>
          <target state="translated">$this 變數會參照新增屬性和方法時的目的地物件執行個體。</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>For more information about the $this variable, see about_Automatic_Variables.</source>
          <target state="translated">如需有關 $this 變數的詳細資訊，請參閱 about_Automatic_Variables。</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>RELATED LINKS</source>
          <target state="translated">相關的連結</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>Add-Member</source>
          <target state="translated">Add-Member</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>Get-Command</source>
          <target state="translated">Get-Command</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>Get-Help</source>
          <target state="translated">Get-Help</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>Get-PSDrive</source>
          <target state="translated">Get-PSDrive</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>about_Automatic_Variables</source>
          <target state="translated">about_Automatic_Variables</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>about_Properties</source>
          <target state="translated">about_Properties</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>about_Methods</source>
          <target state="translated">about_Methods</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>about_Objects</source>
          <target state="translated">about_Objects</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>