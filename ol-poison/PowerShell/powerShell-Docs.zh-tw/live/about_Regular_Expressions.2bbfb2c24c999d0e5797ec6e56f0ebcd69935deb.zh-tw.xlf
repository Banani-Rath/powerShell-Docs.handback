<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-tw">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-1c394fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">4186ca975495fdc88291a3974e14fc1d4374eaf4</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">reference\4.0\Microsoft.PowerShell.Core\About\about_Regular_Expressions.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions" />
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">e74b3ae0194fa2353f71fa61c7ce342c00e4e5bd</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">9bb067fa69bff02fd633e81c157e88e5817715c2</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>about_Regular_Expressions</source>
          <target state="translated">about_Regular_Expressions</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>powershell, cmdlet</source>
          <target state="translated">powershell 指令程式</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>About Regular Expressions</source>
          <target state="translated">關於規則運算式</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>about_Regular_Expressions</source>
          <target state="translated">about_Regular_Expressions</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>TOPIC</source>
          <target state="translated">主題</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>about_Regular_Expressions</source>
          <target state="translated">about_Regular_Expressions</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>SHORT DESCRIPTION</source>
          <target state="translated">簡短描述</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Describes regular expressions in Windows PowerShell.</source>
          <target state="translated">描述在 Windows PowerShell 中的規則運算式。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>LONG DESCRIPTION</source>
          <target state="translated">詳細描述</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Windows PowerShell supports the following regular expression characters.</source>
          <target state="translated">Windows PowerShell 支援下列規則運算式字元。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Format   Logic                            Example</source>
          <target state="translated">格式邏輯範例</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>value    Matches exact characters         "book" -match "oo" anywhere in the original value.</source>
          <target state="translated">值符合確切字元 「 通訊錄 」-比對"oo 」 中的原始值的任何位置。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>.</source>
          <target state="translated">.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Matches any single character.</source>
          <target state="translated">符合任何單一字元。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>"copy" -match "c..y"</source>
          <target state="translated">「 複製 」-比對"c。。y"</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>[value]  Matches at least one of the      "big" -match "b[iou]g" characters in the brackets.</source>
          <target state="translated">[值] 其中一個相符的 「 大型 」-比對括號括住的"b [iou] g"字元。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>[range]  Matches at least one of the      "and" -match "[a-e]nd" characters within the range.</source>
          <target state="translated">[範圍] 符合至少其中一個 「 和 」-請比對"[a-e] nd"字元範圍內。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>The use of a hyphen (–) allows you to specify an adjacent character.</source>
          <target state="translated">使用連字號 （-） 可讓您指定相鄰的字元。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>[^]      Matches any characters except    "and" -match "[^brt]nd" those in brackets.</source>
          <target state="translated">[^]     比對任何字元 except"和"-比對"[^ brt] nd"方括號中。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>^        Matches the beginning            "book" -match "^bo" characters.</source>
          <target state="translated">^ 符合開頭 「 通訊錄 」-比對"^ bo"字元。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>$        Matches the end characters.</source>
          <target state="translated">$ 比對結尾字元。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>"book" -match "ok$"</source>
          <target state="translated">「 通訊錄 」-比對"ok$"</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Matches any instances            "baggy" -match "g" of the preceding character.</source>
          <target state="translated">比對"baggy"-任何執行個體比對"g"的前置字元。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>?</source>
          <target state="translated">?</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Matches zero or one instance     "baggy" -match "g?"</source>
          <target state="translated">比對零個或一個執行個體"baggy"-比對"g"嗎？</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>of the preceding character.</source>
          <target state="translated">前置字元。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>\        Matches the character that       "Try$" -match "Try<ph id="ph1">\$</ph>" follows as an escaped character.</source>
          <target state="translated">\ 比對字元"Try$"-比對 」 嘗試<ph id="ph1">\$</ph>"做為逸出字元後面。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Windows PowerShell supports the character classes available in Microsoft .NET Framework regular expressions.</source>
          <target state="translated">Windows PowerShell 支援的 Microsoft.NET Framework 規則運算式中使用的字元類別。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Format   Logic                            Example</source>
          <target state="translated">格式邏輯範例</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>\p{name} Matches any character in the     "abcd defg" -match "\p{Ll}+" named character class specified by {name}.</source>
          <target state="translated">\p{name} 比對任何字元，在"abcd defg-「 符合 」 \p{Ll}+ 「 名為 {name} 所指定的字元類別。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Supported names are Unicode groups and block ranges such as Ll, Nd, Z, IsGreek, and IsBoxDrawing.</source>
          <target state="translated">支援的名稱是 Unicode 群組和區塊範圍，例如 Ll、 以及 Nd、 Z、 IsGreek，IsBoxDrawing。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>\P{name} Matches text not included in     1234 -match "\P{Ll}+" the groups and block ranges specified in {name}.</source>
          <target state="translated">\P{name} 相符項目中的文字不 1234年-比對"\P{Ll}+ 」 群組，並封鎖 {name} 中指定的範圍。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>\w       Matches any word character.</source>
          <target state="translated">\w 對應任何文字字元。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>"abcd defg" -match "\w+" Equivalent to the Unicode        (this matches abcd) character categories [\p{Ll} \p{Lu}\p{Lt}\p{Lo}\p{Nd}\p{Pc}].</source>
          <target state="translated">"abcd defg 」-比對"\w+ 「 對等項目 （這符合 abcd） 的 unicode 字元分類 [\p{Ll} \p{Lu}\p{Lt}\p{Lo}\p{Nd}\p{Pc}]。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>If ECMAScript-compliant behavior is specified with the ECMAScript option, \w is equivalent to [a-zA-Z_0-9].</source>
          <target state="translated">如果使用 ECMAScript 選項指定了符合 ECMAScript 的行為，\w 等於 [是-Z_0-9]。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>\W       Matches any nonword character.</source>
          <target state="translated">\W 比對任何非文字字元。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>"abcd defg" -match "\W+" Equivalent to the Unicode        (This matches the space) categories [^\p{Ll}\p{Lu}\p{Lt} \p{Lo}\p{Nd}\p{Pc}].</source>
          <target state="translated">"abcd defg 」-比對"\W+"相當於 （這符合空間） 的 Unicode 分類 [^ \p{Ll}\p{Lu}\p{Lt} \p{Lo}\p{Nd}\p{Pc}]。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>\s       Matches any white-space          "abcd defg" -match "\s+" character.</source>
          <target state="translated">\s 對應任何泛空白字元"abcd defg 」-比對"\s+"字元。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Equivalent to the Unicode character categories [\f\n\r\t\v\x85\p{Z}].</source>
          <target state="translated">相當於 Unicode 字元分類 [\f\n\r\t\v\x85\p{Z}]。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>\S       Matches any non-white-space      "abcd defg" -match "\S+" character.</source>
          <target state="translated">\S 比對任何非-泛空白字元"abcd defg 」-比對"\S+"字元。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Equivalent to the Unicode character categories [^\f\n\r\t\v\x85\p{Z}].</source>
          <target state="translated">Unicode 字元分類等於 [^ \f\n\r\t\v\x85\p{Z}]。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>\d       Matches any decimal digit.</source>
          <target state="translated">\d 比對任何十進位數字。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>12345 -match "\d+" Equivalent to \p{Nd} for Unicode and [0-9] for non- Unicode behavior.</source>
          <target state="translated">12345-比對"\d+ 「 對等項目至 \p{Nd} Unicode 和 [0-9] 針對非 Unicode 的行為。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>\D       Matches any nondigit.</source>
          <target state="translated">\D 對應任何非數字。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>"abcd" -match "\D+" Equivalent  to \P{Nd} for Unicode and [^0-9] for non- Unicode behavior.</source>
          <target state="translated">"abcd"-比對"\D+"相當於 \P{Nd} unicode 和 [^0-9] 針對非 Unicode 的行為。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Windows PowerShell supports the quantifiers available in .NET Framework regular expressions.</source>
          <target state="translated">Windows PowerShell 支援.NET Framework 規則運算式中的可用數量詞。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>The following are some examples of quantifiers.</source>
          <target state="translated">以下是一些數量詞的範例。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Format   Logic                            Example</source>
          <target state="translated">格式邏輯範例</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Specifies zero or more matches;  "abc" -match "\w" for example, \wor (abc).</source>
          <target state="translated">指定零或多個相符項目。 "abc"-"\w"，例如 \wor (abc) 比對。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Equivalent to {0,}.</source>
          <target state="translated">相當於 {0，}。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Matches repeating instances of   "xyxyxy" -match "xy+" the preceding characters.</source>
          <target state="translated">相符項目重複執行個體的 「 xyxyxy 」-比對"xy +"之前的字元。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>?</source>
          <target state="translated">?</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Specifies zero or one matches;   "abc" -match "\w?"</source>
          <target state="translated">指定零個或一個相符項目。  "abc"-比對"\w"嗎？</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>for example, \w? or (abc)?.</source>
          <target state="translated">例如，\w 嗎？或者 (abc) 功能。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Equivalent to {0,1}.</source>
          <target state="translated">相當於 {0，1}。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>{n}      Specifies exactly n matches;     "abc" -match "\w{2}" for example, (pizza){2}.</source>
          <target state="translated">{n} 指定 n 個相符項目。    "abc"-比對"\w{2}"，例如 （披薩） \ {2 \}。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>{n,}     Specifies at least n matches;    "abc" -match "\w{2,}" for example, (abc){2,}.</source>
          <target state="translated">{n}    指定至少 n 個相符項目。   "abc"-比對"\w{2，}"，例如 (abc) {2，}。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>{n,m}    Specifies at least n, but no     "abc" -match "\w{2,3}" more than m, matches.</source>
          <target state="translated">{n，m}   至少會指定 n，但沒有"abc"-比對"\w{2,3}"超過 m，相符項目。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>All the comparisons shown in the preceding table evaluate to true.</source>
          <target state="translated">上表所示的所有比較都會評估為 true。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>Notice that the escape character for regular expressions, a backslash (), is different from the escape character for Windows PowerShell.</source>
          <target state="translated">請注意，逸出字元的規則運算式中，反斜線 （），不同於 Windows PowerShell 的逸出字元。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>The escape character for Windows PowerShell is the backtick character (`)</source>
          <target state="translated">Windows PowerShell 的逸出字元是倒單引號字元 （'）</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>(ASCII 96).</source>
          <target state="translated">(ASCII 96)。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>For more information, see the "Regular Expression Language Elements" topic in the Microsoft Developer Network (MSDN) library at http://go.microsoft.com/fwlink/?LinkId=133231.</source>
          <target state="translated">如需詳細資訊，請參閱 http://go.microsoft.com/fwlink/?LinkId=133231 在 Microsoft Developer Network (MSDN) 文件庫中的 「 規則運算式語言項目 」 主題。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>SEE ALSO</source>
          <target state="translated">另請參閱</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>about_Comparison_Operators about_Operators</source>
          <target state="translated">about_Comparison_Operators about_Operators</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>