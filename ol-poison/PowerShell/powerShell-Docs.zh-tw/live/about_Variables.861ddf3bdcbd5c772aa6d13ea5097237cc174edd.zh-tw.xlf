<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-tw">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-1c394fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">4cd8b9cdfbeb77ab2d209c1153091bd8dae5ce4d</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">reference\5.0\Microsoft.PowerShell.Core\About\about_Variables.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions" />
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">a9e9fdfbaa1739df9e4336a538b6835955c40332</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">7622ae399e04da9dadd862070e13e0bf821557b3</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>about_Variables</source>
          <target state="translated">about_Variables</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>powershell, cmdlet</source>
          <target state="translated">powershell 指令程式</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>About Variables</source>
          <target state="translated">關於變數</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>about_Variables</source>
          <target state="translated">about_Variables</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>about_Variables</source>
          <target state="translated">about_Variables</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>SHORT DESCRIPTION</source>
          <target state="translated">簡短描述</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Describes how variables store values that can be used in  Windows PowerShell�.</source>
          <target state="translated">描述如何變數所儲存的值可以使用 Windows PowerShell 中。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>LONG DESCRIPTION</source>
          <target state="translated">詳細描述</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>You can store all types of values in  Windows PowerShell variables.</source>
          <target state="translated">您可以在 Windows PowerShell 變數中儲存所有類型的值。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>They are typically used to store the results of commands and to store elements that are used in commands and expressions, such as names, paths, settings, and values.</source>
          <target state="translated">它們通常用來儲存命令的結果，並將項目，以供儲存在命令與運算式，例如名稱、 路徑、 設定和值。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>A variable is a unit of memory in which values are stored.</source>
          <target state="translated">變數是一個單位的值會儲存的記憶體。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>In  Windows PowerShell, variables are represented by text strings that begin with a dollar sign ($), such as $a, $process, or $my_var.</source>
          <target state="translated">在 Windows PowerShell 中，變數由以貨幣符號 （$），例如 $a $process，開頭的文字字串或 $my_var。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Variable names are not case-sensitive.</source>
          <target state="translated">變數名稱不區分大小寫。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Variable names can include spaces and special characters, but these are difficult to use and should be avoided.</source>
          <target state="translated">變數名稱可以包含空格和特殊字元，但這些很難用，且應予以避免。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>There are several different types of variables in  Windows PowerShell.</source>
          <target state="translated">有許多不同類型的 Windows PowerShell 中的變數。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>-- User-created variables: User-created variables are created and maintained by the user.</source>
          <target state="translated">-使用者所建立的變數︰ 建立和維護使用者的使用者建立的變數。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>By default, the variables that you create at the  Windows PowerShell command line exist only while the  Windows PowerShell window is open, and they are lost when you close the window.</source>
          <target state="translated">根據預設，Windows PowerShell 視窗中開啟，並在您關閉視窗都會遺失時，才有您在 Windows PowerShell 命令列建立變數。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>To save a variable, add it to your  Windows PowerShell profile.</source>
          <target state="translated">若要儲存變數，將它加入您的 Windows PowerShell 設定檔。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>You can also create variables in scripts with global, script, or local scope.-- Automatic variables: Automatic variables store the state of  Windows PowerShell.</source>
          <target state="translated">您也可以建立變數具有通用指令碼、 指令碼，或本機範圍。--自動變數中︰ 自動變數會儲存 Windows PowerShell 的狀態。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>These variables are created by  Windows PowerShell, and  Windows PowerShell changes their values as required to maintain their accuracy.</source>
          <target state="translated">這些變數由 Windows PowerShell 和 Windows PowerShell 變更其值做為需要維護其正確性。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Users cannot change the value of these variables.</source>
          <target state="translated">使用者無法變更這些變數的值。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>For example, the $PSHome variable stores the path to the  Windows PowerShell installation directory.</source>
          <target state="translated">例如，$PSHome 變數儲存 Windows PowerShell 安裝目錄的路徑。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>For more information, a list, and a description of the automatic variables, see about_Automatic_Variables.</source>
          <target state="translated">如需詳細的資訊清單，以及自動變數的描述，請參閱 about_Automatic_Variables。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>-- Preference variables: Preference variables store user preferences for  Windows PowerShell.</source>
          <target state="translated">-喜好設定變數︰ 喜好設定變數會儲存 Windows PowerShell 的使用者喜好設定。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>These variables are created by  Windows PowerShell and are populated with default values.</source>
          <target state="translated">這些變數由 Windows PowerShell 時，會填入預設值。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Users can change the values of these variables.</source>
          <target state="translated">使用者可以變更這些變數的值。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>For example, the $MaximumHistoryCount variable determines the maximum number of entries in the session history.</source>
          <target state="translated">例如，$MaximumHistoryCount 變數決定工作階段歷程記錄中的項目數目上限。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>For more information, a list, and a description of the preference variables, see about_Preference_Variables.</source>
          <target state="translated">如需詳細的資訊清單，以及喜好設定變數的描述，請參閱 about_Preference_Variables。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>WORKING WITH VARIABLES</source>
          <target state="translated">使用變數</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>To create a new variable, use an assignment statement to assign a value to the variable.</source>
          <target state="translated">若要建立新的變數，用於在指派陳述式指派值給變數。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>You do not have to declare the variable  before using it.</source>
          <target state="translated">您不必再使用它來宣告變數。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>The default value of all variables is $null.</source>
          <target state="translated">所有變數的預設值是 $null。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>For example:</source>
          <target state="translated">例如：</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Variables are very useful for storing the results of commands.</source>
          <target state="translated">變數是很適合儲存命令的結果。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>For example:</source>
          <target state="translated">例如：</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>To display the value of a variable, type the variable name, preceded by a dollar sign ($).</source>
          <target state="translated">若要顯示變數的值，請輸入變數的名稱，加上錢幣符號 （$）。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>For example:</source>
          <target state="translated">例如：</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>To change the value of a variable, assign a new value to the variable.</source>
          <target state="translated">若要變更變數的值，將新值指派給變數。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>The following examples displays the value of the $MyVariable variable, changes the value of the variable, and then displays the new value.</source>
          <target state="translated">下列範例顯示 $MyVariable 變數的值、 變更變數的值，然後顯示 [新值。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>To delete the value of a variable, use the Clear-Variable cmdlet or change the value to $null.</source>
          <target state="translated">若要刪除變數的值，使用 Clear-variable 指令程式，或將值變更為 $null。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>To delete the variable, use the Remove-Variable or Remove-Item cmdlets.</source>
          <target state="translated">若要刪除變數，請使用 Remove-variable 或 Remove-item cmdlet。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>(These cmdlets are discussed later in this topic.)</source>
          <target state="translated">（在本主題稍後會討論這些指令程式）。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>To get a list of all of the variables in your  Windows PowerShell session, type:</source>
          <target state="translated">若要取得 Windows PowerShell 工作階段中的所有變數的清單，請輸入︰</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>TYPES OF VARIABLES</source>
          <target state="translated">類型的變數</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>You can store any type of object in a variable, including integers, strings, arrays, hash tables, and objects that represent processes, services, event logs, and computers.</source>
          <target state="translated">您可以在變數中，包括整數、 字串、 陣列、 雜湊表和物件表示處理程序、 服務、 事件記錄檔和電腦中儲存任何類型的物件。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Windows PowerShell variables are "loosely typed," which means that they are not limited to a particular type of object.</source>
          <target state="translated">Windows PowerShell 變數是 「 鬆散型別，「 這表示它們並不限於特定類型的物件。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>A single variable can even contain a collection (an "array") of different types of objects at the same time.</source>
          <target state="translated">單一變數甚至可以包含集合 （「 陣列 」） 的不同類型的物件在相同的時間。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>The data type of a variable, which is a .NET Framework type, is determined by the .NET types of the values of the variable.</source>
          <target state="translated">是.NET Framework 型別，變數的資料類型取決於.NET 類型的變數的值。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>For example:</source>
          <target state="translated">例如：</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>You can use a type attribute and cast notation to ensure that a variable can contain only objects of the specified type or objects that can be converted to that type.</source>
          <target state="translated">您可以使用型別屬性，並轉換以確保只有指定之型別的物件或可以轉換為該類型的物件，可以包含變數的標記法。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>If you try to assign a value of another type,  Windows PowerShell tries to convert the value to its type.</source>
          <target state="translated">如果您嘗試指派另一個類型的值，Windows PowerShell 會嘗試將值轉換為其型別。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>If it cannot, the assignment statement fails.</source>
          <target state="translated">如果它不能指派陳述式將會失敗。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>To use cast notation, enter a type name, enclosed in brackets, before the variable name (on the left side of the assignment statement).</source>
          <target state="translated">若要使用轉型標記法，請輸入型別名稱，變數名稱 （在指派陳述式的左側） 之前方括號括住。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>The following example creates an $number variable that can contain only integers, a $words variable that can contain only strings, and a $dates variable that can contain only DateTime objects.</source>
          <target state="translated">下列範例會建立整數、 $words 變數可能包含只有字串和 $dates 變數可以包含 DateTime 物件只可包含 $number 變數。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>USING VARIABLES IN COMMANDS AND EXPRESSIONS</source>
          <target state="translated">使用命令與運算式中的變數</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>To use a variable in a command or expression, type the variable name, preceded by the dollar sign ($).</source>
          <target state="translated">若要使用的命令或運算式中的變數，請輸入變數名稱前面加上錢幣符號 （$）。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>If the variable name (and dollar sign) are not enclosed in quotation marks, or if they are enclosed in double quotation marks ("), the value of the variable is used in the command or expression.</source>
          <target state="translated">如果變數名稱 （和貨幣符號） 不括在引號中，或如果放在雙引號 （"），變數的值使用中的命令或運算式。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>If the variable name (and dollar sign) are enclosed in single quotation marks, ('), the variable name is used in the expression.</source>
          <target state="translated">如果變數名稱 （和貨幣符號） 括在單引號 （'） 的變數名稱會使用運算式中。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>For example, the first command gets the value of the $profile variable, which is the path to the  Windows PowerShell user profile file in the  Windows PowerShell console.</source>
          <target state="translated">例如，第一個命令會取得 $profile 變數，也就是在 Windows PowerShell 主控台中 Windows PowerShell 使用者設定檔的路徑值。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>The second command opens the file in Notepad, and the  third and fourth commands use the name of the variable in an expression.</source>
          <target state="translated">第二個命令會在記事本中，開啟檔案和第三個和第四個命令的運算式中使用變數的名稱。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>For more information about using quotation marks in  Windows PowerShell, see about_Quoting_Rules.</source>
          <target state="translated">如需有關如何在 Windows PowerShell 中使用引號的詳細資訊，請參閱 about_Quoting_Rules。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>VARIABLE NAMES THAT INCLUDE SPECIAL CHARACTERS</source>
          <target state="translated">包含特殊字元的變數名稱</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>Variable names begin with a dollar sign.</source>
          <target state="translated">變數名稱開頭為貨幣符號。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>They can include alphanumeric characters and special characters.</source>
          <target state="translated">它們可以包含英數字元和特殊字元。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>The length of the variable name is limited only by available memory.</source>
          <target state="translated">變數名稱的長度只受到可用記憶體。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>Whenever possible, variable names should include only alphanumeric characters and the underscore character (_).Variable names that include spaces and other special characters, are difficult to use and should be avoided.</source>
          <target state="translated">可能的話，變數名稱應包含英數字元和底線字元 (_)。變數的名稱包含空格和其他特殊字元，很難用，且應予以避免。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>To create or display a variable name that includes spaces or special characters, enclose the variable name in braces.</source>
          <target state="translated">若要建立或顯示變數的名稱包含空格或特殊字元，變數名稱大括弧括住。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>This directs  Windows PowerShell to interpret the characters in the variable name literally.</source>
          <target state="translated">這會指示 Windows PowerShell 將變數名稱中的字元常值。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>For example, the following command creates and then displays a variable named "save-items".</source>
          <target state="translated">例如，下列命令會建立並接著會顯示名為 「 儲存項目 」 的變數。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>The following command gets the child items in the directory that is represented by the "ProgramFiles(x86)" environment variable.</source>
          <target state="translated">下列命令會取得 「 programfiles （x86） 」 環境變數所代表的目錄中的項目子系。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>To refer to a variable name that includes braces, enclose the variable name in braces, and use the backtick (escape) character to escape the braces.</source>
          <target state="translated">若要參考變數的名稱包含大括號，變數的名稱括在大括號，並使用倒單引號 （逸出） 字元來逸出大括號。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>For example, to create a variable named "this{value}is" with a value of 1, type:</source>
          <target state="translated">例如，若要建立名為 「 這個 {value} 是 」 值為 1 的變數，請輸入︰</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>VARIABLES AND SCOPE</source>
          <target state="translated">變數和範圍</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>By default, variables are available only in the scope in which they are created.</source>
          <target state="translated">根據預設，可使用變數的只能在建立所在的範圍中。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>For example, a variable that you create in a function is available only within the function.</source>
          <target state="translated">例如，您建立的函式中的變數是只能在函式。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>A variable that you create in a script is available only within the script (unless you dot-source the script, which adds it to the current scope).</source>
          <target state="translated">您在指令碼中建立變數，則只有在指令碼中使用 (除非您點原始碼的指令碼，即可將它加入至目前的範圍)。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>You can use a scope modifier to change the default scope of the variable.</source>
          <target state="translated">您可以使用範圍修飾符來變更預設範圍的變數。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>The following expression creates a variable named "Computers".</source>
          <target state="translated">下列運算式會建立名為 「 電腦 」 的變數。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>The variable has a global scope, even when it is created in a script or function.</source>
          <target state="translated">變數具有全域範圍中，即使在建立指令碼或函式中。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>For more information, see about_Scopes.</source>
          <target state="translated">如需詳細資訊，請參閱 about_Scopes。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>SAVING VARIABLES</source>
          <target state="translated">儲存變數</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>Variables that you create are available only in the session in which you create them.</source>
          <target state="translated">您所建立的變數都只在您建立的工作階段。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>They are lost when you close your session.</source>
          <target state="translated">當您關閉您的工作階段時，它們將會遺失。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>To create the in every  Windows PowerShell session that you start, add the variable to your  Windows PowerShell profile.</source>
          <target state="translated">若要建立在您啟動每個 Windows PowerShell 工作階段，將變數加入至您的 Windows PowerShell 設定檔。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>For example, to change the value of the $VerbosePreference variable in every  Windows PowerShell session, add the following command to your  Windows PowerShell profile.</source>
          <target state="translated">比方說，若要變更 $VerbosePreference 變數的值在每個 Windows PowerShell 工作階段中，將下列命令新增至您的 Windows PowerShell 設定檔。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>You can add this command to your profile by opening the profile file in a text editor, such as Notepad.</source>
          <target state="translated">您可以在文字編輯器，例如 [記事本] 中開啟設定檔，您的設定檔新增此命令。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>For more information about  Windows PowerShell profiles, see about_profiles.</source>
          <target state="translated">如需 Windows PowerShell 設定檔的詳細資訊，請參閱 about_profiles。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>THE VARIABLE: DRIVE</source>
          <target state="translated">變數︰ 磁碟機</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>Windows PowerShell Variable provider creates a Variable: drive that looks and acts like a file system drive, but it contains the variables in your session and their values.</source>
          <target state="translated">Windows PowerShell 變數提供者會建立一個變數︰ 磁碟機，看起來的作用就像檔案系統磁碟機，但它包含在您的工作階段和其值的變數。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>To change to the variable: drive, type:</source>
          <target state="translated">若要變更為變數︰ 磁碟機，請輸入︰</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>To list the items (variables) in the Variable: drive, use the Get-Item or Get-ChildItem cmdlets.</source>
          <target state="translated">若要列出變數中的項目 （變數）︰ 磁碟機，請使用 Get-item 或 Get-childitem cmdlet。</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>For example:</source>
          <target state="translated">例如：</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>To get the value of a particular variable, use file system notation to specify the name of the drive and the name of the variable.</source>
          <target state="translated">若要取得特定變數的值，使用檔案系統標記法來指定磁碟機的名稱和變數的名稱。</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>For example, to get the $PSCulture automatic variable, use the following command.</source>
          <target state="translated">例如，若要取得 $PSCulture 自動變數，請使用下列命令。</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>For more information about the Variable: drive and the  Windows PowerShell Variable provider, type "get-help variable".</source>
          <target state="translated">如需有關變數︰ 磁碟機並輸入"get-help 變數 」 的 Windows PowerShell 變數提供者。</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>THE VARIABLE CMDLETS</source>
          <target state="translated">變數的指令程式</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>Windows PowerShell includes a set of cmdlets that are designed to manage variables.</source>
          <target state="translated">Windows PowerShell 包含一組專為管理變數的指令程式。</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>To get help for these cmdlets, type: "Get-Help &lt;cmdlet-hame&gt;".</source>
          <target state="translated">若要取得這些 cmdlet 的說明，請輸入:"Get-help &lt; 指令程式名稱 &gt; 」。</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>SEE ALSO</source>
          <target state="translated">另請參閱</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>about_Automatic_Variables</source>
          <target state="translated">about_Automatic_Variables</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>about_Environment_Variables</source>
          <target state="translated">about_Environment_Variables</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>about_Preference_Variables</source>
          <target state="translated">about_Preference_Variables</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>about_Profiles</source>
          <target state="translated">about_Profiles</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>about_Quoting_Rules</source>
          <target state="translated">about_Quoting_Rules</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>about_Scopes</source>
          <target state="translated">about_Scopes</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>