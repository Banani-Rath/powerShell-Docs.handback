<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-tw">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-1c394fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">4fb5115747a54080566d5799af1fdb7e3f214ae0</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">reference\5.0\Microsoft.PowerShell.Core\About\about_Modules.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions" />
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">4006f52333a2add202aadcb18c563f6326c19fed</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f9126be4df788fc8d45d6a96d585cd1094154506</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>about_Modules</source>
          <target state="translated">about_Modules</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>powershell, cmdlet</source>
          <target state="translated">powershell 指令程式</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>About Modules</source>
          <target state="translated">關於模組</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>about_Modules</source>
          <target state="translated">about_Modules</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>about_Modules</source>
          <target state="translated">about_Modules</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>SHORT DESCRIPTION</source>
          <target state="translated">簡短描述</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Explains how to install, import, and use Windows PowerShell modules.</source>
          <target state="translated">說明如何安裝、匯入，以及使用 Windows PowerShell 模組。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>LONG DESCRIPTION</source>
          <target state="translated">詳細描述</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>A module is a package that contains Windows PowerShell commands, such as cmdlets, providers, functions, workflows, variables, and aliases.</source>
          <target state="translated">模組是包含 Windows PowerShell 命令 (例如 Cmdlet、提供者、函式、工作流程、變數和別名) 的套件。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>People who write commands can use modules to organize their commands and share them with others.</source>
          <target state="translated">撰寫命令者可以使用模組來組織其命令，並與其他人分享。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>People who receive modules can add the commands in the modules to their Windows PowerShell sessions and use them just like the built-in commands.</source>
          <target state="translated">獲得模組者可以將模組中的命令新增至其 Windows PowerShell 工作階段，並以使用內建命令的方式使用它們。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>This topic explains how to use Windows PowerShell modules.</source>
          <target state="translated">此主題說明如何使用 Windows PowerShell 模組。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>For information about how to write Windows PowerShell modules, see "Writing a Windows PowerShell Module" in the MSDN (Microsoft Developer Network) library at http://go.microsoft.com/fwlink/?LinkId=144916.</source>
          <target state="translated">如需如何撰寫 Windows PowerShell 模組的資訊，請參閱 MSDN (Microsoft Developer Network) 文件庫中的「撰寫 Windows PowerShell 模組」，網址是：http://go.microsoft.com/fwlink/?LinkId=144916。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>WHAT IS A MODULE?</source>
          <target state="translated">什麼是模組？</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>A module is a package of commands.</source>
          <target state="translated">模組是命令的套件。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>All cmdlets and providers in your session are added by a module or a snap-in.</source>
          <target state="translated">所有的 cmdlet 和您的工作階段中的提供者會透過模組或嵌入式管理單元。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>WHAT'S NEW IN MODULES: Module Auto-Loading Beginning in Windows PowerShell 3.0, Windows PowerShell imports modules automatically the first time that you run any command in an installed module.</source>
          <target state="translated">什麼是模組的新︰ 在 Windows PowerShell 3.0 中，Windows PowerShell 模組自動載入開始自動匯入模組，您已安裝的模組中執行任何命令的第一次。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>You can now use the commands in a module without any set-up or profile configuration, so there's no need to manage modules after you install them on your computer.</source>
          <target state="translated">您現在可以使用模組中的命令，而不需要任何設定或設定檔設定，因此在電腦上安裝模組之後不需要進行管理。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>The commands in a module are also easier to find.</source>
          <target state="translated">模組中的命令也比較容易找到。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>The Get-Command cmdlet now gets all commands in all installed modules, even if they are not yet in the session, so you can find a command and use it without importing.</source>
          <target state="translated">即使命令還不在工作階段中，Get-Command Cmdlet 現在還是可以取得所有已安裝之模組中的所有命令，因此，您可以尋找某個命令，並在沒有匯入的情況下使用該命令。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Any of the following commands will import a module into your session.</source>
          <target state="translated">以下任何命令會將模組匯入到您的工作階段。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Run the command</source>
          <target state="translated">執行命令</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Get-Mailbox –Identity Chris</source>
          <target state="translated">Get-Mailbox –Identity Chris</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Get the command</source>
          <target state="translated">Get 命令</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Get-Command Get-Mailbox</source>
          <target state="translated">Get-Command Get-Mailbox</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Get help for the command</source>
          <target state="translated">取得命令的說明</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Get-Help Get-Mailbox</source>
          <target state="translated">Get-Help Get-Mailbox</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Get-Command commands that include a wildcard character (*) are considered to be for discovery, not use, and do not import any modules.</source>
          <target state="translated">Get 命令的命令，包括萬用字元 （*） 會被視為探索而非使用中的並不會匯入任何模組。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Only modules that are stored in the location specified by the PSModulePath environment variable are automatically imported.</source>
          <target state="translated">只會儲存在 PSModulePath 環境變數所指定的位置的模組會自動匯入。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Modules in other locations must be imported by running the Import-Module cmdlet.</source>
          <target state="translated">執行匯入模組的 cmdlet，必須在匯入模組中的其他位置。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Also, commands that use Windows PowerShell providers do not automatically import a module.</source>
          <target state="translated">此外，使用 Windows PowerShell 提供者的命令不會自動匯入模組。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>For example, if you use a command that requires the WSMan: drive, such as the Get-PSSessionConfiguration cmdlet, you might need to run the Import-Module cmdlet to import the Microsoft.WSMan.Management module that includes the WSMan: drive.</source>
          <target state="translated">例如，如果您使用的命令需要 WSMan︰ 磁碟機，例如 Get PSSessionConfiguration cmdlet，您可能需要執行匯入模組 cmdlet 來匯入 Microsoft.WSMan.Management 模組包含 WSMan︰ 磁碟機。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>You can still run the Import-Module command to import a module and use the $PSModuleAutoloadingPreference variable to enable, disable and configure automatic importing of modules.</source>
          <target state="translated">您仍然可以執行匯入模組命令，以匯入模組，並使用 $PSModuleAutoloadingPreference 變數來啟用、 停用及設定自動匯入模組。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>For more information, see about_Preference_Variables.</source>
          <target state="translated">如需詳細資訊，請參閱 about_Preference_Variables。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>HOW TO USE A MODULE</source>
          <target state="translated">如何使用模組</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>To use a module, perform the following tasks:</source>
          <target state="translated">若要使用模組，請執行下列工作：</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Install the module.</source>
          <target state="translated">安裝模組</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>(This is often done for you.)</source>
          <target state="translated">(這通常會為您完成)。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Find the commands that the module added.</source>
          <target state="translated">尋找模組所新增的命令。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Use the commands that the module added.</source>
          <target state="translated">使用模組所新增的命令。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>This topic explains how to perform these tasks.</source>
          <target state="translated">此主題說明如何執行這些工作。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>It also includes other useful information about managing modules.</source>
          <target state="translated">它也包含管理模組的其他實用資訊。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>HOW TO INSTALL A MODULE</source>
          <target state="translated">如何安裝模組</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>If you receive a module as a folder with files in it, you need to install it on your computer before you can use it in Windows PowerShell.</source>
          <target state="translated">如果您收到模組做為資料夾與檔案中，您需要將它安裝在您的電腦，才能在 Windows PowerShell 中使用。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Most modules are installed for you.</source>
          <target state="translated">大部分的模組會為您安裝。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Windows PowerShell comes with several preinstalled modules, sometimes called the "core" modules.</source>
          <target state="translated">Windows PowerShell 隨附數個預先安裝的模組，有時也稱為 「 核心 」 模組。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>On Windows-based computers, if features that are included with the operating system have cmdlets to manage them, those modules are preinstalled.</source>
          <target state="translated">Windows 電腦上隨附於作業系統的功能有指令程式來管理它們，這些模組會預先安裝。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>When you install a Windows feature, by using, for example, the Add Roles and Features Wizard in Server Manager, or the Turn Windows features on or off dialog box in Control Panel, any Windows PowerShell modules that are part of the feature are installed.</source>
          <target state="translated">當您使用，例如，[新增角色及功能精靈] 在 [伺服器管理員或 Windows 功能開啟或關閉對話方塊，在控制台中，安裝 Windows 功能，會安裝任何 Windows PowerShell 模組的功能之一。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Many other modules come in an installer or Setup program that installs the module.</source>
          <target state="translated">其他許多模組則包含在安裝模組的安裝程式或 Setup 程式中。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>To install a module folder:</source>
          <target state="translated">安裝模組資料夾：</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Create a Modules directory for the current user if one does not exist.</source>
          <target state="translated">為目前的使用者建立一個 Modules 目錄 (如果不存在)。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>To create a Modules directory, type:</source>
          <target state="translated">若要建立 Modules 目錄，請輸入：</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>New-Item -Type Directory -Path $home\Documents\WindowsPowerShell\Modules</source>
          <target state="translated">New-Item -Type Directory -Path $home\Documents\WindowsPowerShell\Modules</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Copy the entire module folder into the Modules directory.</source>
          <target state="translated">將整個模組資料夾複製到 Modules 目錄中。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>You can use any method to copy the folder, including Windows Explorer and Cmd.exe, as well as Windows PowerShell.</source>
          <target state="translated">您可以使用任何方法複製資料夾，包括 Windows 檔案總管和 Cmd.exe，以及 Windows PowerShell。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>In Windows PowerShell use the Copy-Item cmdlet.</source>
          <target state="translated">在 Windows PowerShell 中，使用 Copy-item Cmdlet。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>For example, to copy the MyModule folder from C:\ps-test\MyModule to the Modules directory, type:</source>
          <target state="translated">例如，若要將 MyModule 資料夾從 C:\ps-test\MyModule 複製到 Modules 目錄中，請輸入：</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Copy-Item -Path c:\ps-test\MyModule -Destination $home\Documents\WindowsPowerShell\Modules</source>
          <target state="translated">Copy-Item -Path c:\ps-test\MyModule -Destination $home\Documents\WindowsPowerShell\Modules</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>You can install a module in any location, but installing your modules in a default module location makes them easier to manage.</source>
          <target state="translated">您可以在任何位置安裝模組，但在預設模組位置安裝模組可讓您更輕鬆地管理模組。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>For more information about the default module locations, see the "MODULE AND DSC RESOURCE LOCATIONS, AND PSMODULEPATH" section.</source>
          <target state="translated">如需預設模組位置的詳細資訊，請參閱 「 模組和 DSC 資源位置和 PSMODULEPATH &gt; 一節。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>HOW TO FIND INSTALLED MODULES</source>
          <target state="translated">如何尋找已安裝的模組</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>To find modules that are installed in a default module location, but not yet imported into your session, type:</source>
          <target state="translated">若要尋找已安裝在預設模組位置，但尚未匯入到您工作階段的模組，請輸入：</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>Get-Module -ListAvailable</source>
          <target state="translated">Get-Module -ListAvailable</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>To find the modules that have already been imported into your session, at the Windows PowerShell prompt, type:</source>
          <target state="translated">若要尋找已經匯入到您工作階段的模組，請在 Windows PowerShell 提示字元中輸入：</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>Get-Module</source>
          <target state="translated">Get-Module</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>For more information about the Get-Module cmdlet, see Get-Module.</source>
          <target state="translated">如需有關 Get-Module Cmdlet 的詳細資訊，請參閱 Get-Module。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>HOW TO FIND THE COMMANDS IN A MODULE</source>
          <target state="translated">如何尋找模組中的命令</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>Use the Get-Command cmdlet to find all available commands.</source>
          <target state="translated">使用 Get-Command Cmdlet 尋找所有可用的命令。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>You can use the parameters of the Get-Command cmdlet to filter commands such as by module, name, and noun.</source>
          <target state="translated">您可以使用 Get-Command Cmdlet 的參數篩選命令，例如依照模組、名稱和名詞尋找。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>To find all commands in a module, type: Get-Command -Module &lt;module-name&gt;</source>
          <target state="translated">若要尋找模組中的所有命令，請輸入︰ Get-command-模組 &lt; 模組名稱 &gt;</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>For example, to find the commands in the BitsTransfer module, type: Get-Command -Module BitsTransfer</source>
          <target state="translated">例如，若要尋找 BitsTransfer 模組中的命令，請輸入︰ Get-command-BitsTransfer 模組</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>For more information about the Get-Command cmdlet, see Get-Command.</source>
          <target state="translated">如需有關 Get-Command Cmdlet 的詳細資訊，請參閱 Get-Command。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>HOW TO GET HELP FOR THE COMMANDS IN A MODULE</source>
          <target state="translated">如何取得模組中之命令的說明</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>If the module contains Help files for the commands that it exports, the Get-Help cmdlet will display the Help topics.</source>
          <target state="translated">如果模組包含所匯出命令的說明檔，Get-Help Cmdlet 將會顯示 [說明] 主題。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>Use the same Get-Help command format that you would use to get help for any command in Windows PowerShell.</source>
          <target state="translated">使用您在 Windows PowerShell 中，用來取得任何命令之說明的相同 Get-Help 命令格式。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>Beginning in Windows PowerShell 3.0, you can download Help files for a module and download updates to the Help files so they are never obsolete.</source>
          <target state="translated">從 Windows PowerShell 3.0 開始，您可以下載模組的說明檔，並下載說明檔的更新，讓它們永遠都不會過時。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>To get help for a commands in a module, type:</source>
          <target state="translated">若要取得模組中之命令的說明，請輸入：</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>Get-Help &lt;command-name&gt;</source>
          <target state="translated">取得說明 &lt; 命令名稱 &gt;</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>To get help online for command in a module, type: Get-Help &lt;command-name&gt; -Online</source>
          <target state="translated">若要命令在模組中取得線上說明，請輸入︰ Get-help &lt; 指令名稱-&gt; 線上</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>To download and install the help files for the commands in a module, type: Update-Help –Module &lt;module-name&gt;</source>
          <target state="translated">若要下載並安裝模組中的所有命令的說明檔，輸入︰ Update-help – 模組 &lt; 模組名稱 &gt;</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>For more information, see Get-Help and Update-Help.</source>
          <target state="translated">如需詳細資訊，請參閱 Get-help 和 Update-help。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>HOW TO IMPORT A MODULE</source>
          <target state="translated">如何匯入模組</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>You might have to import a module or import a module file.</source>
          <target state="translated">您可能必須匯入模組或匯入模組檔案。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>Importing is required when a module is not installed in the locations specified by the PSModulePath environment variable ($env:PSModulePath), or the module consists of file, such as a .dll or .psm1 file, instead of typical module that is delivered as a folder.</source>
          <target state="translated">當模組不是安裝在 PSModulePath 環境變數 ($env:PSModulePath) 指定的位置，或模組是由檔案 (例如 .dll 或 .psm1 檔案) 組成，而非以資料夾形式提供的典型模組時，必須匯入。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>You might also choose to import a module so that you can use the parameters of the Import-Module command, such as the Prefix parameter, which adds a distinctive prefix to the noun names of all imported commands, or the NoClobber parameter, which prevents the module from adding commands that would hide or replace existing commands in the session.</source>
          <target state="translated">您也可能會選擇匯入模組，讓您可以使用 Import-Module 命令的參數，例如 Prefix 參數，將特殊的前置詞加入至所有已匯入命令的名詞名稱，或 NoClobber 參數，以防止模組加入將隱藏或取代工作階段中現有命令的命令。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>To import modules, use the Import-Module cmdlet.</source>
          <target state="translated">若要匯入模組，請使用 Import-Module Cmdlet。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>To import modules in a PSModulePath location into the current session, use the following command format.</source>
          <target state="translated">若要將 PSModulePath 位置中的模組匯入到目前的工作階段，請使用下列命令格式。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>Import-Module &lt;module-name&gt;</source>
          <target state="translated">匯入模組 &lt; 模組名稱 &gt;</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>For example, the following command imports the BitsTransfer module into the current session.</source>
          <target state="translated">例如，下列命令匯入 BitsTransfer 模組目前的工作階段。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>Import-Module BitsTransfer</source>
          <target state="translated">Import-module BitsTransfer</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>To import a module that is not in a default module location, use the fully qualified path to the module folder in the command.</source>
          <target state="translated">若要匯入不在預設模組位置中的模組，請在命令中使用模組資料夾的完整路徑。</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>For example, to add the TestCmdlets module in the C:\ps-test directory to your session, type:</source>
          <target state="translated">例如，若要將 C:\ps-test 目錄中的 TestCmdlets 模組加入到您的工作階段中，請輸入：</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>Import-Module c:\ps-test\TestCmdlets</source>
          <target state="translated">Import-Module c:\ps-test\TestCmdlets</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>To import a module file that is not contained in a module folder, use the fully qualified path to the module file in the command.</source>
          <target state="translated">若要匯入未包含在模組資料夾中的模組檔案，請在命令中使用模組檔案的完整路徑。</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>For example, to add the TestCmdlets.dll module in the C:\ps-test directory to your session, type:</source>
          <target state="translated">例如，若要將 C:\ps-test 目錄中的 TestCmdlets.dll 模組加入到您的工作階段，請輸入：</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>Import-Module c:\ps-test\TestCmdlets.dll</source>
          <target state="translated">Import-Module c:\ps-test\TestCmdlets.dll</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>For more information about adding modules to your session, see Import-Module.</source>
          <target state="translated">如需有關將模組加入至您工作階段的詳細資訊，請參閱 Import-Module。</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>HOW TO IMPORT A MODULE INTO EVERY SESSION</source>
          <target state="translated">如何將模組匯入到每個工作階段</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>The Import-Module command imports modules into your current Windows PowerShell session.</source>
          <target state="translated">Import-Module 命令會將模組匯入到您目前的 Windows PowerShell 工作階段。</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>This command affects only the current session.</source>
          <target state="translated">此命令只會影響目前的工作階段。</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>To import a module into every Windows PowerShell session that you start, add the Import-Module command to your Windows PowerShell profile.</source>
          <target state="translated">若要將模組匯入到您啟動的每個 Windows PowerShell 工作階段，請將 Import-Module 命令加入至您的 Windows PowerShell 設定檔。</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>For more information about profiles, see about_Profiles.</source>
          <target state="translated">如需有關設定檔的詳細資訊，請參閱 about_Profiles。</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>HOW TO REMOVE A MODULE</source>
          <target state="translated">如何移除模組</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>When you remove a module, the commands that the module added are deleted from the session.</source>
          <target state="translated">當您移除模組時，會從工作階段刪除模組所加入的命令。</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>To remove a module from your session, use the following command format.</source>
          <target state="translated">若要從您的工作階段移除模組，請使用下列命令格式。</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>remove-module &lt;module-name&gt;</source>
          <target state="translated">移除模組 &lt; 模組名稱 &gt;</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>For example, the following command removes the BitsTransfer module from the current session.</source>
          <target state="translated">例如，下列命令會從目前的工作階段移除 BitsTransfer 模組。</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>remove-module BitsTransfer</source>
          <target state="translated">移除模組 BitsTransfer</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>Removing a module reverses the operation of importing a module.</source>
          <target state="translated">移除模組會反轉匯入模組的作業。</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>Removing a module does not uninstall the module.</source>
          <target state="translated">移除模組並不會解除安裝模組。</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>For more information about the Remove-Module cmdlet, see Remove-Module.</source>
          <target state="translated">如需有關 Remove-Module Cmdlet 的詳細資訊，請參閱 Remove-Module。</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>MODULE AND DSC RESOURCE LOCATIONS, AND PSMODULEPATH</source>
          <target state="translated">模組和 DSC 資源位置和 PSMODULEPATH</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>The following are default locations for Windows PowerShell modules.</source>
          <target state="translated">以下是 Windows PowerShell 模組的預設位置。</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>Starting in Windows PowerShell 4.0, with the introduction of DSC, a new default module and DSC resource folder was introduced.</source>
          <target state="translated">在 Windows PowerShell 4.0 中，從開始引進的 DSC，新的預設模組和 DSC 資源資料夾已引進了。</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>For more information about DSC, see about_DesiredStateConfiguration.</source>
          <target state="translated">如需 DSC 的詳細資訊，請參閱 about_DesiredStateConfiguration。</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>System:        $pshome\Modules (%windir%\System32\WindowsPowerShell\v1.0\Modules) System modules are those that ship with Windows and Windows PowerShell.</source>
          <target state="translated">System: $pshome\Modules (%windir%\system32\windowspowershell\v1.0\modules) 系統模組是隨附於 Windows 和 Windows PowerShell。</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>Starting in Windows Powershell 4.0, when Windows PowerShell Desired State Configuration (DSC) was introduced, DSC resources that are included with Windows PowerShell are also stored in $pshome\Modules, in the $pshome\Modules\PSDesiredStateConfiguration\DSCResources folder.</source>
          <target state="translated">從 Windows Powershell 4.0 中引進了 Windows PowerShell 期望狀態組態 (DSC) 時開始，隨附於 Windows PowerShell DSC 資源也會儲存在 $pshome\Modules，$pshome\Modules\PSDesiredStateConfiguration\DSCResources 資料夾中。</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>Current user:  $home\Documents\WindowsPowerShell\Modules (%UserProfile%\Documents\WindowsPowerShell\Modules)</source>
          <target state="translated">目前的使用者: $home\Documents\WindowsPowerShell\Modules （UserProfile%\Documents\WindowsPowerShell\Modules %）</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>or -</source>
          <target state="translated">或-</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>$home\My Documents\WindowsPowerShell\Modules (%UserProfile%\My Documents\WindowsPowerShell\Modules) This is the location for user-added modules prior to Windows PowerShell 4.0.</source>
          <target state="translated">$home\My Documents\WindowsPowerShell\Modules (%UserProfile%\My Documents\WindowsPowerShell\Modules) 這是將使用者新增的模組，在 Windows PowerShell 4.0 之前的位置。</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>In Windows PowerShell 4.0 and later releases of Windows PowerShell, user-added modules and DSC resources are stored in C:\Program Files\WindowsPowerShell\Modules.</source>
          <target state="translated">在 Windows PowerShell 4.0 和更新版本的 Windows PowerShell，將使用者新增的模組和 DSC 資源會儲存在 C:\Program Files\WindowsPowerShell\Modules。</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>Modules and DSC resources in this location are accessible by all users of the computer.</source>
          <target state="translated">模組和在此位置的 DSC 資源是由電腦的所有使用者存取。</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>This change was required because the DSC engine runs as local system, and could not access user-specific paths, such as $home\Documents\WindowsPowerShell\Modules.</source>
          <target state="translated">因為 DSC 引擎為本機系統，可以執行，而且無法存取使用者專屬的路徑，例如 $home\Documents\WindowsPowerShell\Modules 需要這項變更。</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>Starting in Windows PowerShell 5.0, with the addition of the PowerShellGet module, and the PowerShell Gallery of community- and Microsoft-created resources (https://www.powershellgallery.com), the Install-Module command installs modules and DSC resources to C:\Program Files\WindowsPowerShell\Modules by default.</source>
          <target state="translated">在 Windows PowerShell 5.0，開頭 PowerShellGet 模組中新增和 PowerShell 組件庫的社群，Microsoft 建立的資源 (https://www.powershellgallery.com)，安裝模組命令預設會安裝模組和 DSC 資源至 C:\Program Files\WindowsPowerShell\Modules。</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>Note: To add or change files in the %Windir%\System32 directory, start Windows PowerShell with the "Run as administrator" option.</source>
          <target state="translated">注意︰ 若要新增或變更 %Windir%\System32 目錄中的檔案，啟動 Windows PowerShell 使用 [以系統管理員身分執行] 選項。</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>You can change the default module locations on your system by changing the value of the PSModulePath environment variable ($Env:PSModulePath).</source>
          <target state="translated">您可以在系統上變更 PSModulePath 環境變數的值 ($Env:PSModulePath) 以變更預設模組位置。</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>The PSModulePath environment variable is modeled on the Path environment variable and has the same format.</source>
          <target state="translated">PSModulePath 環境變數是以 Path 環境變數為模型而產生，並擁有相同的格式。</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>To view the default module locations, type: $env:psmodulepath</source>
          <target state="translated">若要檢視預設模組位置，請輸入︰ $env: psmodulepath</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>To add a default module location, use the following command format.</source>
          <target state="translated">若要新增預設模組位置，請使用下列命令格式。</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>$env:psmodulepath = $env:psmodulepath + ";<ph id="ph1">&lt;path&gt;</ph>"</source>
          <target state="translated">$env:psmodulepath = $env:psmodulepath + ";<ph id="ph1">&lt;path&gt;</ph>"</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>The semi-colon (;) in the command separates the new path from the path that precedes it in the list.</source>
          <target state="translated">命令中的分號 (;) 會分隔新路徑與清單中該路徑前面的路徑。</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>For example, to add the "C:\ps-test\Modules" directory, type: $env:psmodulepath + ";c:\ps-test\Modules"</source>
          <target state="translated">例如，若要新增"C:\ps-test\Modules"目錄，請輸入︰ $env: psmodulepath +"; c:\ps-test\Modules"</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>When you add a path to PSModulePath, Get-Module and Import-Module commands include modules in that path.</source>
          <target state="translated">當您新增 PSModulePath 的路徑時，Get-Module 和 Import-Module 命令會包含該路徑中的模組。</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>The value that you set affects only the current session.</source>
          <target state="translated">您所設定的值只會影響目前的工作階段。</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>To make the change persistent, add the command to your Windows PowerShell profile or use System in Control Panel to change the value of the PSModulePath environment variable in the registry.</source>
          <target state="translated">若要進行永久變更，將命令加入至您的 Windows PowerShell 設定檔，或使用 [控制台] 中的 [系統] 變更登錄中 PSModulePath 環境變數的值。</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>Also, to make the change persistent, you can also use the SetEnvironmentVariable method of the System.Environment class to add a Path to the PSModulePath environment variable.</source>
          <target state="translated">此外，若要進行永久變更，您也可以使用 System.Environment 類別的 SetEnvironmentVariable 方法，將 Path 加入至 PSModulePath 環境變數。</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>For more information about the PSModulePath variable, see about_Environment_Variables.</source>
          <target state="translated">如需有關 PSModulePath 變數的詳細資訊，請參閱 about_Environment_Variables。</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>MODULES AND NAME CONFLICTS</source>
          <target state="translated">模組和名稱衝突</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>Name conflicts occur when more than one command in the session has the same name.</source>
          <target state="translated">工作階段中的多個命令擁有相同名稱時，會發生名稱衝突。</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>Importing a module causes a name conflict when commands in the module have the same names as commands or items in the session.</source>
          <target state="translated">當模組中的命令與工作階段中的命令或項目擁有相同的名稱時，匯入模組會造成名稱衝突。</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>Name conflicts can result in commands being hidden or replaced.</source>
          <target state="translated">名稱衝突可能會導致隱藏或取代命令。</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source>-- Hidden.</source>
          <target state="translated">-- 隱藏。</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source>A command is hidden when it is not the command that runs when you type the command name, but you can run it by using another method, such as by qualifying the command name with the name of the module or snap-in in which it originated.</source>
          <target state="translated">當某個命令不是您輸入命令名稱時執行的命令，但是您可以使用其他方法 (例如，使用起源自該命令之模組或嵌入式管理單元的名稱限定命令名稱) 執行它時，就會隱藏該命令。</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source>-- Replaced.</source>
          <target state="translated">-- 取代。</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source>A command is replaced when you cannot run it because it has been overwritten by a command with the same name.</source>
          <target state="translated">當您因為具有相同名稱的命令覆寫某個命令而無法執行時，會取代該命令。</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source>Even when you remove the module that caused the conflict, you cannot run a replaced command unless you restart the session.</source>
          <target state="translated">即使您移除造成衝突的模組，除非您重新啟動工作階段，否則還是無法執行遭到取代的命令。</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source>Import-Module might add commands that hide and replace commands in the current session.</source>
          <target state="translated">Import-Module 可以加入隱藏和取代目前工作階段中命令的命令。</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve">
          <source>Also, commands in your session can hide commands that the module added.</source>
          <target state="translated">此外，您工作階段中的命令可以隱藏模組所加入的命令。</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source>To detect name conflicts, use the All parameter of the Get-Command cmdlet.</source>
          <target state="translated">若要偵測名稱衝突，請使用 Get-Command Cmdlet 的 All 參數。</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source>Beginning in Windows PowerShell 3.0, Get-Command gets only that commands that run when you type the command name.</source>
          <target state="translated">從 Windows PowerShell 3.0 開始，Get-Command 只會取得您輸入命令名稱時所執行的命令。</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source>The All parameter gets all commands with the specific name in the session.</source>
          <target state="translated">All 參數會取得工作階段中具有特定名稱的所有命令。</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve">
          <source>To prevent name conflicts, use the NoClobber or Prefix parameters of the Import-Module cmdlet.</source>
          <target state="translated">為防止名稱衝突，請使用 Import-Module Cmdlet 的 NoClobber 或 Prefix 參數。</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve">
          <source>The Prefix parameter adds a prefix to the names of imported commands so that they are unique in the session.</source>
          <target state="translated">Prefix 參數會將前置詞加入至已匯入命令的名稱中，使這些命令的名稱在工作階段中是唯一的。</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve">
          <source>The NoClobber parameter does not import any commands that would hide or replace existing commands in the session.</source>
          <target state="translated">NoClobber 參數不會匯入可隱藏或取代工作階段中現有命令的任何命令。</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve">
          <source>You can also use the Alias, Cmdlet, Function, and Variable parameters of Import-Module to select only the commands that you want to import, and you can exclude commands that cause name conflicts in your session.</source>
          <target state="translated">您也可以使用 Import-Module 的 Alias、Cmdlet、Function 和 Variable 參數，只選取您要匯入的命令，而且您可以排除在您的工作階段中造成名稱衝突的命令。</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve">
          <source>Module authors can prevent name conflicts by using the DefaultCommandPrefix property of the module manifest to add a default prefix to all command names.</source>
          <target state="translated">模組作者可以使用模組資訊清單的 DefaultCommandPrefix 屬性，將預設前置詞加入至所有命令名稱，藉以防止名稱衝突。</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve">
          <source>The value of the Prefix parameter takes precedence over the value of DefaultCommandPrefix.</source>
          <target state="translated">Prefix 參數的值優先於 DefaultCommandPrefix 的值。</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve">
          <source>Even if a command is hidden, you can run it by qualifying the command name with the name of the module or snap-in in which it originated.</source>
          <target state="translated">即使隱藏某個命令，您還是可以透過使用起源自該命令之模組或嵌入式管理單元的名稱限定命令名稱來執行。</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve">
          <source>The Windows PowerShell command precedence rules determine which command runs when the session includes commands with the same name.</source>
          <target state="translated">Windows PowerShell 命令優先順序規則可決定工作階段包含具有相同名稱的命令時所執行的命令。</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve">
          <source>For example, when a session includes a function and a cmdlet with the same name, Windows PowerShell runs the function by default.</source>
          <target state="translated">例如，當某個工作階段包含一個具有相同名稱的函式和 Cmdlet 時，Windows PowerShell 預設會執行函式。</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve">
          <source>When the session includes commands of the same type with the same name, such as two cmdlets with the same name, by default, it runs the most recently added command.</source>
          <target state="translated">當工作階段預設包含具有相同名稱之相同類型的命令 (例如，具有相同名稱的兩個 Cmdlet) 時，它會執行最近加入的命令。</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve">
          <source>For more information, including an explanation of the precedence rules and instructions for running hidden commands, see about_Command_Precedence.</source>
          <target state="translated">如需詳細資訊，包括優先順序規則的說明和執行隱藏命令的指示，請參閱 about_Command_Precedence。</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve">
          <source>MODULES AND SNAP-INS</source>
          <target state="translated">模組與嵌入式管理單元</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve">
          <source>You can add commands to your session from modules and snap-ins.</source>
          <target state="translated">您可以從模組與嵌入式管理單元，將命令加入至工作階段。</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve">
          <source>Modules can add all types of commands, including cmdlets, providers, and functions, and items, such as variables, aliases, and Windows PowerShell drives.</source>
          <target state="translated">模組可以加入所有類型的命令，包括 Cmdlet、提供者、函式以及項目，例如變數、別名與 Windows PowerShell 磁碟機。</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve">
          <source>Snap-ins can add only cmdlets and providers.</source>
          <target state="translated">嵌入式管理單元只能加入 Cmdlet 和提供者。</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve">
          <source>Before removing a module or snap-in from your session, use the following commands to determine which commands will be removed.</source>
          <target state="translated">從您的工作階段移除模組或嵌入式管理單元之前，請使用下列命令判斷將會移除哪些命令。</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve">
          <source>To find the source of a cmdlet in your session, use the following command format:</source>
          <target state="translated">若要找出您的工作階段的指令程式的來源，使用下列命令格式︰</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve">
          <source>get-command &lt;cmdlet-name&gt; | format-list -property verb, noun, pssnapin, module</source>
          <target state="translated">get 命令 &lt; 指令程式名稱 &gt; |格式清單-屬性動詞命令、 名詞、 pssnapin、 模組</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve">
          <source>For example, to find the source of the Get-Date cmdlet, type:</source>
          <target state="translated">例如，若要尋找 Get-date 指令程式的來源，請輸入︰</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve">
          <source>get-command get-date | format-list -property verb, noun, pssnapin, module</source>
          <target state="translated">get 命令取得日期 |格式清單-屬性動詞命令、 名詞、 pssnapin、 模組</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve">
          <source>For more information about Windows PowerShell snap-ins, see about_PSSnapins.</source>
          <target state="translated">如需有關 Windows PowerShell 嵌入式管理單元的詳細資訊，請參閱 about_PSSnapins。</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve">
          <source>MODULE-RELATED WARNINGS AND ERRORS</source>
          <target state="translated">模組相關的警告和錯誤</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve">
          <source>The commands that a module exports should follow the Windows PowerShell command naming rules.</source>
          <target state="translated">模組匯出的命令應該遵循 Windows PowerShell 命令命名規則。</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve">
          <source>If the module that you import exports cmdlets or functions that have unapproved verbs in their names, the Import-Module cmdlet displays the following warning message.</source>
          <target state="translated">如果您匯入的模組會匯出其名稱中具有未核准之動詞的 Cmdlet 或函式，Import-Module Cmdlet 會顯示下列警告訊息。</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve">
          <source>WARNING: Some imported command names include unapproved verbs which might make them less discoverable.</source>
          <target state="translated">警告︰ 有些匯入的命令名稱包含未核准的動詞，因此可能不易搜尋。</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve">
          <source>Use the Verbose parameter for more detail or type Get-Verb to see the list of approved verbs.</source>
          <target state="translated">請使用 Verbose 參數取得詳細資訊，或輸入 Get-Verb 查看核准的動詞清單。</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve">
          <source>This message is only a warning.</source>
          <target state="translated">這則訊息只是一個警告。</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve">
          <source>The complete module is still imported, including the non-conforming commands.</source>
          <target state="translated">模組仍然完整匯入，包括不合格的命令。</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve">
          <source>Although the message is displayed to module users, the naming problem should be fixed by the module author.</source>
          <target state="translated">雖然訊息是顯示給模組的使用者，但命名的問題應該由模組作者修正。</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve">
          <source>To suppress the warning message, use the DisableNameChecking parameter of the Import-Module cmdlet.</source>
          <target state="translated">若要隱藏警告訊息，使用 Import-Module Cmdlet 的 DisableNameChecking 參數。</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve">
          <source>BUILT-IN MODULES AND SNAP-INS</source>
          <target state="translated">內建模組和嵌入式管理單元</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve">
          <source>In Windows PowerShell 2.0 and in older-style host programs in Windows PowerShell 3.0 and later, the core commands that are installed with Windows PowerShell are packaged in snap-ins that are added automatically to every Windows PowerShell session.</source>
          <target state="translated">在 Windows PowerShell 2.0 及 Windows PowerShell 3.0 和更新版本中的舊式主機程式中，會將隨著 Windows PowerShell 安裝的核心命令封裝在自動加入至每個 Windows PowerShell 工作階段的嵌入式管理單元。</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve">
          <source>Beginning in Windows PowerShell 3.0, in newer-style host programs -- those that implement the InitialSessionState.CreateDefault2 initial session state API -- the core commands are packaged in modules.</source>
          <target state="translated">從 Windows PowerShell 3.0 開始，在實作 InitialSessionState.CreateDefault2 初始工作階段狀態 API 的較新式的主機程式中，核心命令會封裝在模組中。</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve">
          <source>The default is Microsoft.PowerShell.Core, which is always a snap-in.</source>
          <target state="translated">預設會一律為嵌入式管理單元。</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve">
          <source>The Microsoft.PowerShell.Core snap-in is added to every session by default.</source>
          <target state="translated">Microsoft.PowerShell.Core 嵌入式管理單元預設會加入至每個工作階段。</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve">
          <source>Modules are loaded automatically on first-use.</source>
          <target state="translated">第一次使用時，會自動載入模組。</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve">
          <source>NOTE: Remote sessions, including sessions that are started by using the New-PSSession cmdlet, are older-style sessions in which the built-in commands are packaged in snap-ins.</source>
          <target state="translated">注意︰ 遠端工作階段，包括使用 New-pssession cmdlet 啟動的工作階段是內建命令包裝嵌入式管理單元的舊式工作階段。</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve">
          <source>The following modules (or snap-ins) are installed with Windows PowerShell.</source>
          <target state="translated">下列模組 (或嵌入式管理單元) 會隨著 Windows PowerShell 安裝。</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve">
          <source>Microsoft.PowerShell.Archive Microsoft.PowerShell.Core Microsoft.PowerShell.Diagnostics Microsoft.PowerShell.Host Microsoft.PowerShell.Management Microsoft.PowerShell.ODataUtils Microsoft.PowerShell.Security Microsoft.PowerShell.Utility Microsoft.WSMan.Management OneGet PowerShellGet PSDesiredStateConfiguration PSScheduledJob PSWorkflow PSWorkflowUtility</source>
          <target state="translated">Microsoft.PowerShell.Archive Microsoft.PowerShell.Core Microsoft.PowerShell.Diagnostics Microsoft.PowerShell.Host Microsoft.PowerShell.Management Microsoft.PowerShell.ODataUtils Microsoft.PowerShell.Security Microsoft.PowerShell.Utility Microsoft.WSMan.Management OneGet PowerShellGet PSDesiredStateConfiguration PSScheduledJob PSWorkflow PSWorkflowUtility</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve">
          <source>ISE</source>
          <target state="translated">ISE</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve">
          <source>LOGGING MODULE EVENTS</source>
          <target state="translated">記錄模組事件</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve">
          <source>Beginning in Windows PowerShell 3.0, you can record execution events for the cmdlets and functions in Windows PowerShell modules and snap-ins by setting the LogPipelineExecutionDetails property of modules and snap-ins to $True.</source>
          <target state="translated">從 Windows PowerShell 3.0 開始，您可以將模組和嵌入式管理單元的 LogPipelineExecutionDetails 屬性設定為 $True，以記錄 Windows PowerShell 模組和嵌入式管理單元中之 Cmdlet 和函式的執行事件。</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve">
          <source>You can also use a Group Policy setting, Turn on Module Logging, to enable module logging in all Windows PowerShell sessions.</source>
          <target state="translated">您也可以使用 [開啟模組記錄] 群組原則設定，在所有 Windows PowerShell 工作階段中啟用模組記錄。</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve">
          <source>For more information, see about_EventLogs (http://go.microsoft.com/fwlink/?LinkID=113224) and about_Group_Policy_Settings (http://go.microsoft.com/fwlink/?LinkID=251696).</source>
          <target state="translated">如需詳細資訊，請參閱 about_EventLogs (http://go.microsoft.com/fwlink/?LinkID=113224) 和 about_Group_Policy_Settings (http://go.microsoft.com/fwlink/?LinkID=251696)。</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve">
          <source>SEE ALSO</source>
          <target state="translated">另請參閱</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve">
          <source>about_Command_Precedence about_DesiredStateConfiguration about_EventLogs about_Group_Policy_Settings about_PSSnapins Get-Command Get-Help Get-Module Import-Module Remove-Module</source>
          <target state="translated">about_Command_Precedence about_DesiredStateConfiguration about_EventLogs about_Group_Policy_Settings about_PSSnapins Get-command 取得說明 Get 模組匯入模組移除模組</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>