<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-tw">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-1c394fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">7e8d1cc12d2db4faf292dc510de746479f1ef65f</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">reference\3.0\Microsoft.PowerShell.Core\About\about_While.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions" />
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d5e340e5eedb9ee8d63d5e395cdb37d0abe7923c</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ed345791b02be043b1e1257f9482088076c67ce1</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>about_While</source>
          <target state="translated">about_While</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>powershell, cmdlet</source>
          <target state="translated">powershell 指令程式</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>About While</source>
          <target state="translated">關於 While</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>about_While</source>
          <target state="translated">about_While</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>about_While</source>
          <target state="translated">about_While</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>SHORT DESCRIPTION</source>
          <target state="translated">簡短描述</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Describes a language statement that you can use to run a command block based on the results of a conditional test.</source>
          <target state="translated">描述可用來執行命令區塊的條件式測試的結果為基礎的語言陳述式。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>LONG DESCRIPTION</source>
          <target state="translated">詳細描述</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>The While statement (also known as a While loop) is a language construct for creating a loop that runs commands in a command block as long as a conditional test evaluates to true.</source>
          <target state="translated">While 陳述式 （也稱為 While 迴圈） 建立迴圈命令區塊中執行命令，只要評估為 true 的條件性測試是語言建構。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The While statement is easier to construct than a For statement because its syntax is less complicated.</source>
          <target state="translated">While 陳述式可以更輕鬆地建立比 For 陳述式，因為它的語法就簡單許多。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>In addition, it is more flexible than the Foreach statement because you specify a conditional test in the While statement to control how many times the loop runs.</source>
          <target state="translated">此外，也更有彈性比 Foreach 陳述式因為指定的條件式測試的 while 陳述式來控制多少次迴圈會執行。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>The following shows the While statement syntax:</source>
          <target state="translated">下圖顯示 While 陳述式的語法︰</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>When you run a While statement,  Windows PowerShell� evaluates the <ph id="ph1">&lt;condition&gt;</ph> section of the statement before entering the <ph id="ph2">&lt;statement list&gt;</ph> section.</source>
          <target state="translated">當您執行一段陳述式，Windows PowerShell 會評估 <ph id="ph1">&lt;condition&gt;</ph> 區段的陳述式之前，請先 <ph id="ph2">&lt;statement list&gt;</ph> 一節。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>The condition portion of the statement resolves to either true or false.</source>
          <target state="translated">陳述式的條件部分會解析為 true 或 false。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>As long as the condition remains true,  Windows PowerShell reruns the <ph id="ph1">&lt;statement list&gt;</ph> section.</source>
          <target state="translated">只要條件為真，重新執行 Windows PowerShell <ph id="ph1">&lt;statement list&gt;</ph> 一節。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;statement list&gt;</ph> section of the statement contains one or more commands that are run each time the loop is entered or repeated.</source>
          <target state="translated"> <ph id="ph1">&lt;statement list&gt;</ph> 陳述式的區段包含一或多個輸入或重複迴圈時，每次執行的命令。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>For example, the following While statement displays the numbers 1 through 3 if the $val variable has not been created or if the $val variable has been created and initialized to 0.</source>
          <target state="translated">例如，下列陳述式會顯示數字 1 到 3，如果尚未建立 $val 變數，或如果 $val 變數已建立並初始化為 0。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>In this example, the condition ($val is not equal to 3) is true while $val <ph id="ph1">\=</ph> 0, 1, 2.</source>
          <target state="translated">在此範例中，條件 （$val 不等於 3） 為 true 時 $val <ph id="ph1">\=</ph> 0、 1、 2。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Each time through the loop, $val is incremented by 1 using the <ph id="ph1">\+\+</ph> unary increment operator ($val<ph id="ph2">\+\+</ph>).</source>
          <target state="translated">每次執行迴圈時，$val 就會遞增 1 使用 <ph id="ph1">\+\+</ph> 一元遞增運算子 ($val<ph id="ph2">\+\+</ph>)。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>The last time through the loop, $val <ph id="ph1">\=</ph> 3.</source>
          <target state="translated">最後一次執行迴圈時，$val <ph id="ph1">\=</ph> 3。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>When $val equals 3, the condition statement evaluates to false, and the loop exits.</source>
          <target state="translated">$Val 等於 3，當條件陳述式會評估為 false，並結束迴圈。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>To conveniently write this command at the  Windows PowerShell command prompt, you can enter it in the following way:</source>
          <target state="translated">若要輕鬆地撰寫此命令在 Windows PowerShell 命令提示字元，您可以以下列方式輸入︰</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Notice that the semicolon separates the first command that adds 1 to $val from the second command that writes the value of $val to the console.</source>
          <target state="translated">請注意，以分號分隔，將 $val 增加 1，第二個命令的 $val 值寫入至主控台，從第一個命令。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>SEE ALSO</source>
          <target state="translated">另請參閱</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>about_Comparison_Operators</source>
          <target state="translated">about_Comparison_Operators</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>about_Do</source>
          <target state="translated">about_Do</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>about_Foreach</source>
          <target state="translated">about_Foreach</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>about_For</source>
          <target state="translated">about_For</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>about_Language_Keywords</source>
          <target state="translated">about_Language_Keywords</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>