<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-tw">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-1c394fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">9a7d3f3205e8f6d4bf662dd07bd5e27df4ef93dc</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">reference\4.0\Microsoft.PowerShell.Utility\Import-PSSession.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions" />
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f45435e2cd362e200be93f90f0b8b9137dbf463c</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">24c2c27dc79afba4adecf0a5a26fbeb8fbdbc7d2</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>powershell, cmdlet</source>
          <target state="translated">powershell 指令程式</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Import-PSSession</source>
          <target state="translated">Import-PSSession</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Import-PSSession</source>
          <target state="translated">Import-PSSession</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>SYNOPSIS</source>
          <target state="translated">概要</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Imports commands from another session into the current session.</source>
          <target state="translated">將另一個工作階段的命令匯入目前的工作階段。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>SYNTAX</source>
          <target state="translated">語法</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>DESCRIPTION</source>
          <target state="translated">描述</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>Import-PSSession<ept id="p1">**</ept> cmdlet imports commands (such as cmdlets, functions, and aliases) from a PSSession on a local or remote computer into the current session.</source>
          <target state="translated"> <bpt id="p1">**</bpt>Import-pssession<ept id="p1">**</ept> 指令程式從上到目前的工作階段的本機或遠端電腦的 PSSession 匯入命令 （例如 cmdlet、 函式和別名）。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>You can import any command that the Get-Command cmdlet can find in the PSSession.</source>
          <target state="translated">您可以匯入 Get-command cmdlet 可以在 PSSession 中找到的任何命令。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Use an <bpt id="p1">**</bpt>Import-PSSession<ept id="p1">**</ept> command to import commands from a customized shell, such as a Microsoft Exchange Server shell, or from a session that includes Windows PowerShell modules and snap-ins or other elements that are not in the current session.</source>
          <target state="translated">使用 <bpt id="p1">**</bpt>Import-pssession<ept id="p1">**</ept> 命令匯入命令，從自訂殼層，例如 Microsoft Exchange Server 殼層，或從包含 Windows PowerShell 模組和嵌入式管理單元或其他項目不在目前工作階段的工作階段。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>To import commands, first use the New-PSSession cmdlet to create a PSSession.</source>
          <target state="translated">若要匯入命令，請先使用 New-pssession cmdlet 建立 PSSession。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Then, use the <bpt id="p1">**</bpt>Import-PSSession<ept id="p1">**</ept> cmdlet to import the commands.</source>
          <target state="translated">然後，使用 <bpt id="p1">**</bpt>Import-pssession<ept id="p1">**</ept> cmdlet 來匯入命令。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>By default, <bpt id="p1">**</bpt>Import-PSSession<ept id="p1">**</ept> imports all commands except for commands that have the same names as commands in the current session.</source>
          <target state="translated">根據預設， <bpt id="p1">**</bpt>Import-pssession<ept id="p1">**</ept> 匯入除了目前的工作階段中具有相同命令名稱以外的所有命令。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>To import all the commands, use the <bpt id="p1">**</bpt>AllowClobber<ept id="p1">**</ept> parameter.</source>
          <target state="translated">若要匯入所有命令，請使用 <bpt id="p1">**</bpt>AllowClobber<ept id="p1">**</ept> 參數。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>You can use imported commands just as you would use any command in the session.</source>
          <target state="translated">您可以使用匯入的命令，就像您使用工作階段中的任何命令一樣。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>When you use an imported command, the imported part of the command runs implicitly in the session from which it was imported.</source>
          <target state="translated">當您使用匯入的命令時，匯入的命令部份會隱含地在從匯入的工作階段中執行。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>However, the remote operations are handled entirely by Windows PowerShell.</source>
          <target state="translated">不過，遠端操作則會完全由 Windows PowerShell 處理。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>You need not even be aware of them, except that you must keep the connection to the other session (PSSession) open.</source>
          <target state="translated">您甚至不需要知道這些操作，不過必須讓其他工作階段 (PSSession) 的連線保持開啟。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>If you close it, the imported commands are no longer available.</source>
          <target state="translated">如果您關閉它，匯入的命令就不再可用。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Because imported commands might take longer to run than local commands, Import-PSSession adds an AsJob parameter to every imported command.</source>
          <target state="translated">因為匯入的命令可能會比本機命令需要花費較長的時間，所以 Import-PSSession 會對每個匯入的命令加入 AsJob 參數。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>This parameter allows you to run the command as a Windows PowerShell background job.</source>
          <target state="translated">此參數可讓您以 Windows PowerShell 背景工作方式執行命令。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>For more information, see about_Jobs.</source>
          <target state="translated">如需詳細資訊，請參閱 about_Jobs。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>When you use <bpt id="p1">**</bpt>Import-PSSession<ept id="p1">**</ept>, Windows PowerShell adds the imported commands to a temporary module that exists only in your session and returns an object that represents the module.</source>
          <target state="translated">當您使用 <bpt id="p1">**</bpt>Import-pssession<ept id="p1">**</ept>, ，Windows PowerShell 將匯入的命令新增至暫存模組只存在於您的工作階段，並傳回代表模組的物件。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>To create a persistent module that you can use in future sessions, use the Export-PSSession cmdlet.</source>
          <target state="translated">若要建立持續性的模組可讓您未來的工作階段，請使用 Export-pssession cmdlet。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>Import-PSSession<ept id="p1">**</ept> cmdlet uses the implicit remoting feature of Windows PowerShell.</source>
          <target state="translated"> <bpt id="p1">**</bpt>Import-pssession<ept id="p1">**</ept> 指令程式會使用 Windows PowerShell 的隱含遠端處理功能。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>When you import commands into the current session, they run implicitly in the original session or in a  similar session on the originating computer.</source>
          <target state="translated">當您將命令匯入目前的工作階段時，它們會在原來的工作階段或原始電腦上的相似工作階段中以隱含的方式執行。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Beginning in Windows PowerShell 3.0, you can use the Import-Module cmdlet to import modules from a remote session into the current session.</source>
          <target state="translated">從 Windows PowerShell 3.0 開始，您可以使用 Import-module cmdlet 模組匯入目前工作階段的遠端工作階段。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>This feature uses implicit remoting.</source>
          <target state="translated">這項功能使用隱含的遠端執行功能。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>It is equivalent to using <bpt id="p1">**</bpt>Import-PSSession<ept id="p1">**</ept> to import selected modules from a remote session into the current session.</source>
          <target state="translated">它相當於使用 <bpt id="p1">**</bpt>Import-pssession<ept id="p1">**</ept> 到選取的模組匯入目前工作階段的遠端工作階段。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>EXAMPLES</source>
          <target state="translated">範例</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>-------------------------- EXAMPLE 1 --------------------------</source>
          <target state="translated">-------------------------- 範例 1 --------------------------</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>This command imports all commands from a PSSession on the Server01 computer into the current session, except for commands that have the same names as commands in the current session.</source>
          <target state="translated">此命令將 Server01 電腦上 PSSession 的所有命令 (除了與目前工作階段中具有相同命令名稱的命令) 匯入目前的工作階段。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Because this command does not use the <bpt id="p1">**</bpt>CommandName<ept id="p1">**</ept> parameter, it also imports all of the formatting data required for the imported commands.</source>
          <target state="translated">因為此命令不會使用 <bpt id="p1">**</bpt>CommandName<ept id="p1">**</ept> 參數，它也會匯入所有匯入的命令所需的格式化資料。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>-------------------------- EXAMPLE 2 --------------------------</source>
          <target state="translated">-------------------------- EXAMPLE 2 --------------------------</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>These commands import the commands with names that end in "-test" from a PSSession into the local session, and then they show how to use an imported cmdlet.</source>
          <target state="translated">這些命令會從 PSSession 將名稱結尾為 "-test" 的命令匯入本機工作階段，然後顯示如何使用匯入的 Cmdlet。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>The first command uses the New-PSSession cmdlet to create a PSSession.</source>
          <target state="translated">第一個命令使用 New-pssession cmdlet 建立 PSSession。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>It saves the PSSession in the $s variable.</source>
          <target state="translated">它會將該 PSSession 儲存於 $s 變數中。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>The second command uses the <bpt id="p1">**</bpt>Import-PSSession<ept id="p1">**</ept> cmdlet to import commands from the PSSession in $s into the current session.</source>
          <target state="translated">第二個命令會使用 <bpt id="p1">**</bpt>Import-pssession<ept id="p1">**</ept> cmdlet 從 $s 到目前的工作階段中的 PSSession 匯入命令。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>It uses the <bpt id="p1">**</bpt>CommandName<ept id="p1">**</ept> parameter to specify commands with the Test noun and the <bpt id="p2">**</bpt>FormatTypeName<ept id="p2">**</ept> parameter to import the formatting data for the Test commands.</source>
          <target state="translated">它會使用 <bpt id="p1">**</bpt>CommandName<ept id="p1">**</ept> 參數來指定具有 Test 名詞的命令和 <bpt id="p2">**</bpt>FormatTypeName<ept id="p2">**</ept> 參數來匯入測試命令的格式化資料。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>The third and fourth commands use the imported commands in the current session.</source>
          <target state="translated">第三個和第四個命令在目前的工作階段中使用匯入的命令。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Because imported commands are actually added to the current session, you use the local syntax to run them.</source>
          <target state="translated">因為匯入的命令已經實際新增到目前的工作階段中，所以您要使用本機語法執行它們。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>You do not need to use the Invoke-Command cmdlet to run an imported command.</source>
          <target state="translated">您不需要使用 Invoke-command cmdlet 執行匯入的命令。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>-------------------------- EXAMPLE 3 --------------------------</source>
          <target state="translated">-------------------------- EXAMPLE 3 --------------------------</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>This example shows that you can use imported cmdlets just as you would use local cmdlets.</source>
          <target state="translated">此範例示範使用匯入的 Cmdlet 就如同使用本機 Cmdlet 一樣。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>These commands import the New-Test and Get-Test cmdlets from a PSSession on the Server01 computer and the Set-Test cmdlet from a PSSession on the Server02 computer.</source>
          <target state="translated">這些命令從 Server01 電腦的 PSSession 匯入 New-Test 和 Get-Test Cmdlet，以及從 Server02 電腦的 PSSession 匯入 Set-Test Cmdlet。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Even though the cmdlets were imported from different PSSessions, you can pipe an object from one cmdlet to another without error.</source>
          <target state="translated">即使是從不同的 PSSession 匯入 Cmdlet，您還是可以使用管線將物件從一個 Cmdlet 傳送到另一個 Cmdlet 而不會發生錯誤。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>-------------------------- EXAMPLE 4 --------------------------</source>
          <target state="translated">-------------------------- EXAMPLE 4 --------------------------</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>This example shows how to run an imported command as a background job.</source>
          <target state="translated">此範例示範如何以背景工作的方式執行匯入的命令。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Because imported commands might take longer to run than local commands, <bpt id="p1">**</bpt>Import-PSSession<ept id="p1">**</ept> adds an <bpt id="p2">**</bpt>AsJob<ept id="p2">**</ept> parameter to every imported command.</source>
          <target state="translated">匯入的命令可能需要較長的時間比本機命令，因為 <bpt id="p1">**</bpt>Import-pssession<ept id="p1">**</ept> 新增 <bpt id="p2">**</bpt>AsJob<ept id="p2">**</ept> 對每個匯入命令的參數。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>AsJob<ept id="p1">**</ept> parameter lets you run the command as a background job.</source>
          <target state="translated"> <bpt id="p1">**</bpt>AsJob<ept id="p1">**</ept> 參數可讓您以背景工作執行命令。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>The first command creates a PSSession on the Server01 computer and saves the PSSession object in the $s variable.</source>
          <target state="translated">第一個命令在 Server01 電腦上建立 PSSession，並將該 PSSession 物件儲存在 $s 變數中。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>The second command uses <bpt id="p1">**</bpt>Import-PSSession<ept id="p1">**</ept> to import the Test cmdlets from the PSSession in $s into the current session.</source>
          <target state="translated">第二個命令會使用 <bpt id="p1">**</bpt>Import-pssession<ept id="p1">**</ept> 從 $s 到目前的工作階段中的 PSSession 匯入測試 cmdlet。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>The third command uses the <bpt id="p1">**</bpt>AsJob<ept id="p1">**</ept> parameter of the imported New-Test cmdlet to run a New-Test command as a background job.</source>
          <target state="translated">第三個命令會使用 <bpt id="p1">**</bpt>AsJob<ept id="p1">**</ept> 的背景工作方式執行 New-test 命令匯入的 New-test cmdlet 的參數。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>The command saves the job object that New-Test returns in the $batch variable.</source>
          <target state="translated">命令會將 New-Test 傳回的工作物件儲存在 $batch 變數中。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>The fourth command uses the Receive-Job cmdlet to get the results of the job in the $batch variable.</source>
          <target state="translated">第四個命令使用 Receive-job cmdlet 來取得工作結果 $batch 變數中。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>-------------------------- EXAMPLE 5 --------------------------</source>
          <target state="translated">-------------------------- EXAMPLE 5 --------------------------</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>This example shows how to import the cmdlets and functions from a Windows PowerShell module on a remote computer into the current session.</source>
          <target state="translated">此範例示範如何從遠端電腦的 Windows PowerShell 模組將 Cmdlet 和函式匯入目前的工作階段。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>The first command creates a PSSession on the Server01 computer and saves it in the $s variable.</source>
          <target state="translated">第一個命令在 Server01 電腦上建立 PSSession，並將它儲存在 $s 變數中。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>The second command uses the <bpt id="p1">**</bpt>Invoke-Command<ept id="p1">**</ept> cmdlet to run an Import-Module command in the PSSession in $s.</source>
          <target state="translated">第二個命令會使用 <bpt id="p1">**</bpt>Invoke-command<ept id="p1">**</ept> $s 在 PSSession 中執行匯入模組的命令的指令程式。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>Typically, the module would be added to all sessions by an <bpt id="p1">**</bpt>Import-Module<ept id="p1">**</ept> command in a Windows PowerShell profile, but profiles are not run in PSSessions.</source>
          <target state="translated">一般而言，此模組會加入至所有工作階段 <bpt id="p1">**</bpt>匯入模組<ept id="p1">**</ept> 命令在 Windows PowerShell 設定檔，但是設定檔不會在 Pssession 中執行。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>The third command uses the <bpt id="p1">**</bpt>Module<ept id="p1">**</ept> parameter of <bpt id="p2">**</bpt>Import-PSSession<ept id="p2">**</ept> to import the cmdlets and functions in the module into the current session.</source>
          <target state="translated">第三個命令會使用 <bpt id="p1">**</bpt>模組<ept id="p1">**</ept> 參數 <bpt id="p2">**</bpt>Import-pssession<ept id="p2">**</ept> cmdlet 和模組中的函式匯入目前的工作階段。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>-------------------------- EXAMPLE 6 --------------------------</source>
          <target state="translated">-------------------------- EXAMPLE 6 --------------------------</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>This example shows that <bpt id="p1">**</bpt>Import-PSSession<ept id="p1">**</ept> creates a module in a temporary file on disk.</source>
          <target state="translated">這個範例將示範 <bpt id="p1">**</bpt>Import-pssession<ept id="p1">**</ept> 磁碟上的暫存檔案中建立模組。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>It also shows that all commands are converted into functions before they are imported into the current session.</source>
          <target state="translated">它也會顯示所有命令在匯入目前工作階段之前，都已轉換成函式。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>The command uses the <bpt id="p1">**</bpt>Import-PSSession<ept id="p1">**</ept> cmdlet to import a Get-Date cmdlet and a SearchHelp function into the current session.</source>
          <target state="translated">此命令會使用 <bpt id="p1">**</bpt>Import-pssession<ept id="p1">**</ept> Get-date cmdlet 與 SearchHelp 函式匯入目前工作階段的指令程式。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>Import-PSSession<ept id="p1">**</ept> cmdlet returns a <bpt id="p2">**</bpt>PSModuleInfo<ept id="p2">**</ept> object that represents the temporary module.</source>
          <target state="translated"> <bpt id="p1">**</bpt>Import-pssession<ept id="p1">**</ept> 指令程式會傳回 <bpt id="p2">**</bpt>PSModuleInfo<ept id="p2">**</ept> 代表暫存模組物件。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>The value of the <bpt id="p1">**</bpt>Path<ept id="p1">**</ept> property shows that <bpt id="p2">**</bpt>Import-PSSession<ept id="p2">**</ept> created a script module (.psm1) file in a temporary location.</source>
          <target state="translated">值 <bpt id="p1">**</bpt>路徑<ept id="p1">**</ept> 屬性會顯示 <bpt id="p2">**</bpt>Import-pssession<ept id="p2">**</ept> 暫存位置中建立的指令碼模組 (.psm1) 檔案。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>ExportedFunctions<ept id="p1">**</ept> property shows that the <bpt id="p2">**</bpt>Get-Date<ept id="p2">**</ept> cmdlet and the SearchHelp function were both imported as functions.</source>
          <target state="translated"> <bpt id="p1">**</bpt>ExportedFunctions<ept id="p1">**</ept> 屬性會顯示 <bpt id="p2">**</bpt>Get-date<ept id="p2">**</ept> cmdlet 與 SearchHelp 函式同時匯入做為函式。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>-------------------------- EXAMPLE 7 --------------------------</source>
          <target state="translated">-------------------------- EXAMPLE 7 --------------------------</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>This example shows how to run a command that is hidden by an imported command.</source>
          <target state="translated">此範例示範如何執行被匯入的命令隱藏的命令。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>The first command imports a Get-Date cmdlet from the PSSession in the $s variable.</source>
          <target state="translated">第一個命令會從 $s 變數中的 PSSession，匯入 Get-date 指令程式。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>Because the current session includes a <bpt id="p1">**</bpt>Get-Date<ept id="p1">**</ept> cmdlet, the <bpt id="p2">**</bpt>AllowClobber<ept id="p2">**</ept> parameter is required in the command.</source>
          <target state="translated">因為目前的工作階段包含 <bpt id="p1">**</bpt>Get-date<ept id="p1">**</ept> cmdlet， <bpt id="p2">**</bpt>AllowClobber<ept id="p2">**</ept> 命令中必要參數。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>The second command uses the <bpt id="p1">**</bpt>All<ept id="p1">**</ept> parameter of the Get-Command cmdlet to get all <bpt id="p2">**</bpt>Get-Date<ept id="p2">**</ept> commands in the current session.</source>
          <target state="translated">第二個命令會使用 <bpt id="p1">**</bpt>所有<ept id="p1">**</ept> Get-command cmdlet 來取得所有參數 <bpt id="p2">**</bpt>Get-date<ept id="p2">**</ept> 目前工作階段中的命令。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>The output shows that the session includes the original <bpt id="p1">**</bpt>Get-Date<ept id="p1">**</ept> cmdlet and a <bpt id="p2">**</bpt>Get-Date<ept id="p2">**</ept> function.</source>
          <target state="translated">輸出顯示工作階段包含原始 <bpt id="p1">**</bpt>Get-date<ept id="p1">**</ept> cmdlet 和 <bpt id="p2">**</bpt>Get-date<ept id="p2">**</ept> 函式。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>Get-Date<ept id="p1">**</ept> function runs the imported <bpt id="p2">**</bpt>Get-Date<ept id="p2">**</ept> cmdlet in the PSSession in $s.</source>
          <target state="translated"> <bpt id="p1">**</bpt>Get-date<ept id="p1">**</ept> 函式會執行匯入 <bpt id="p2">**</bpt>Get-date<ept id="p2">**</ept> $s 在 PSSession 中的指令程式。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>The third command runs a <bpt id="p1">**</bpt>Get-Date<ept id="p1">**</ept> command.</source>
          <target state="translated">第三個命令會執行 <bpt id="p1">**</bpt>Get-date<ept id="p1">**</ept> 命令。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>Because functions take precedence over cmdlets, Windows PowerShell runs the imported <bpt id="p1">**</bpt>Get-Date<ept id="p1">**</ept> function, which returns a Julian date.</source>
          <target state="translated">因為函式優先於 cmdlet，Windows PowerShell 執行匯入 <bpt id="p1">**</bpt>Get-date<ept id="p1">**</ept> 函式會傳回凱薩曆日期。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>The fourth and fifth commands show how to use a qualified name to run a command that is hidden by an imported command.</source>
          <target state="translated">第四個和第五個命令示範如何使用限定的名稱執行被匯入的命令隱藏的命令。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>The fourth command gets the name of the Windows PowerShell snap-in that added the original <bpt id="p1">**</bpt>Get-Date<ept id="p1">**</ept> cmdlet to the current session.</source>
          <target state="translated">第四個命令會取得 Windows PowerShell 嵌入式管理單元加入原始名稱 <bpt id="p1">**</bpt>Get-date<ept id="p1">**</ept> 指令程式可在目前工作階段。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>The fifth command uses the snap-in-qualified name of the <bpt id="p1">**</bpt>Get-Date<ept id="p1">**</ept> cmdlet to run a <bpt id="p2">**</bpt>Get-Date<ept id="p2">**</ept> command.</source>
          <target state="translated">第五個命令會使用的嵌入式管理單元限定名稱 <bpt id="p1">**</bpt>Get-date<ept id="p1">**</ept> cmdlet 來執行 <bpt id="p2">**</bpt>Get-date<ept id="p2">**</ept> 命令。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>For more information about command precedence and hidden commands, see about_Command_Precedence.</source>
          <target state="translated">如需有關命令優先順序和隱藏的命令的詳細資訊，請參閱 about_Command_Precedence。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>-------------------------- EXAMPLE 8 --------------------------</source>
          <target state="translated">-------------------------- EXAMPLE 8 --------------------------</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>This command imports commands whose names include "Item" from the PSSession in $s.</source>
          <target state="translated">此命令會匯入其名稱包含"Item"從 PSSession $s 中的命令。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>Because the command includes the <bpt id="p1">**</bpt>CommandName<ept id="p1">**</ept> parameter but not the <bpt id="p2">**</bpt>FormatTypeData<ept id="p2">**</ept> parameter, only the command is imported.</source>
          <target state="translated">因為此命令包含 <bpt id="p1">**</bpt>CommandName<ept id="p1">**</ept> 參數而非 <bpt id="p2">**</bpt>FormatTypeData<ept id="p2">**</ept> 參數，只會匯入。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>Use this command when you are using <bpt id="p1">**</bpt>Import-PSSession<ept id="p1">**</ept> to run a command on a remote computer and you already have the formatting data for the command in the current session.</source>
          <target state="translated">使用此命令，當您使用 <bpt id="p1">**</bpt>Import-pssession<ept id="p1">**</ept> 執行命令，在遠端電腦，而且您已經有命令的格式化資料目前工作階段中。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>-------------------------- EXAMPLE 9 --------------------------</source>
          <target state="translated">-------------------------- EXAMPLE 9 --------------------------</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>This command shows how to use the <bpt id="p1">**</bpt>Module<ept id="p1">**</ept> parameter of <bpt id="p2">**</bpt>Get-Command<ept id="p2">**</ept> to find out which commands were imported into the session by an <bpt id="p3">**</bpt>Import-PSSession<ept id="p3">**</ept> command.</source>
          <target state="translated">此命令會顯示如何使用 <bpt id="p1">**</bpt>模組<ept id="p1">**</ept> 參數 <bpt id="p2">**</bpt>Get 命令<ept id="p2">**</ept> 找出哪些命令匯入工作階段的 <bpt id="p3">**</bpt>Import-pssession<ept id="p3">**</ept> 命令。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>The first command uses the <bpt id="p1">**</bpt>Import-PSSession<ept id="p1">**</ept> cmdlet to import commands whose names include "bits" from the PSSession in the $s variable.</source>
          <target state="translated">第一個命令使用 <bpt id="p1">**</bpt>Import-pssession<ept id="p1">**</ept> cmdlet 來匯入的命令名稱包含"bits"從 PSSession $s 變數中。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>Import-PSSession<ept id="p1">**</ept> command returns a temporary module, and the command saves the module in the $m variable.</source>
          <target state="translated"> <bpt id="p1">**</bpt>Import-pssession<ept id="p1">**</ept> 命令會傳回一個暫存模組，以及命令會將模組儲存在 $m 變數。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>The second command uses the Get-Command cmdlet to get the commands that are exported by the module in the $m variable.</source>
          <target state="translated">第二個命令使用 Get-command cmdlet 取得由 $m 變數中的模組匯出的命令。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>Module<ept id="p1">**</ept> parameter takes a string value, which is designed for the module name.</source>
          <target state="translated"> <bpt id="p1">**</bpt>模組<ept id="p1">**</ept> 參數接受字串值，其設計目的是做為模組名稱。</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>However, when you submit a module object, Windows PowerShell uses the <bpt id="p1">**</bpt>ToString<ept id="p1">**</ept> method on the module object, which returns the module name.</source>
          <target state="translated">不過，當您提交模組物件時，Windows PowerShell 使用 <bpt id="p1">**</bpt>ToString<ept id="p1">**</ept> 模組物件，它會傳回模組名稱的方法。</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>Get-Command<ept id="p1">**</ept> command is the equivalent of <ph id="ph1">`Get-Command $m.Name`</ph>".</source>
          <target state="translated"> <bpt id="p1">**</bpt>Get-command<ept id="p1">**</ept> 命令相當於 <ph id="ph1">`Get-Command $m.Name`</ph>」。</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>PARAMETERS</source>
          <target state="translated">參數</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>-AllowClobber</source>
          <target state="translated">-AllowClobber</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>Imports the specified commands, even if they have the same names as commands in the current session.</source>
          <target state="translated">匯入指定的命令，即使它們的名稱與目前工作階段中的命令相同。</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>If you import a command with the same name as a command in the current session, the imported command hides or replaces the original commands.</source>
          <target state="translated">如果您匯入與目前工作階段中的命令同名的命令，匯入的命令將會隱藏或取代原始命令。</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>For more information, see about_Command_Precedence.</source>
          <target state="translated">如需詳細資訊，請參閱 about_Command_Precedence。</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>By default, <bpt id="p1">**</bpt>Import-PSSession<ept id="p1">**</ept> does not import commands that have the same name as commands in the current session.</source>
          <target state="translated">根據預設， <bpt id="p1">**</bpt>Import-pssession<ept id="p1">**</ept> 不匯入目前工作階段中有同名的命令的命令。</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>-ArgumentList</source>
          <target state="translated">-ArgumentList</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>Imports the variant of the command that results from using the specified arguments (parameter values).</source>
          <target state="translated">匯入因使用指定的引數 (參數值) 而產生之命令的變體。</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>For example, to import the variant of the Get-Item command in the certificate (Cert:) drive in the PSSession in $s, type "Import-PSSession -Session $s -command get-item -argumentlist cert:".</source>
          <target state="translated">例如，若要匯入 $s 變數中 PSSession 的憑證 (Cert:) 磁碟機的 Get-Item 命令變化，請輸入 "Import-PSSession -Session $s -command get-item -argumentlist cert:"。</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>-CommandName</source>
          <target state="translated">-CommandName</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>Imports only the commands with the specified names or name patterns.</source>
          <target state="translated">只匯入具有指定名稱或名稱模式的命令。</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>Wildcards are permitted.</source>
          <target state="translated">允許使用萬用字元。</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>Use "CommandName" or its alias, "Name".</source>
          <target state="translated">使用 "CommandName" 或其別名 "Name"。</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>By default, <bpt id="p1">**</bpt>Import-PSSession<ept id="p1">**</ept> imports all commands from the session, except for commands that have the same names as commands in the current session.</source>
          <target state="translated">根據預設， <bpt id="p1">**</bpt>Import-pssession<ept id="p1">**</ept> 匯入工作階段中，除了目前的工作階段中具有相同命令名稱以外的所有命令。</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>This prevents imported commands from hiding or replacing commands in the session.</source>
          <target state="translated">這可防止匯入的命令隱藏或取代工作階段中的命令。</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>To import all commands, even those that hide or replace other commands, use the <bpt id="p1">**</bpt>AllowClobber<ept id="p1">**</ept> parameter.</source>
          <target state="translated">若要匯入所有命令，即使是隱藏或取代其他命令，使用 <bpt id="p1">**</bpt>AllowClobber<ept id="p1">**</ept> 參數。</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>If you use the <bpt id="p1">**</bpt>CommandName<ept id="p1">**</ept> parameter, the formatting files for the commands are not imported unless you use the <bpt id="p2">**</bpt>FormatTypeName<ept id="p2">**</ept> parameter.</source>
          <target state="translated">如果您使用 <bpt id="p1">**</bpt>CommandName<ept id="p1">**</ept> 參數，命令的格式設定檔案不會匯入除非您使用 <bpt id="p2">**</bpt>FormatTypeName<ept id="p2">**</ept> 參數。</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>Similarly, if you use the <bpt id="p1">**</bpt>FormatTypeName<ept id="p1">**</ept> parameter, no commands are imported unless you use the <bpt id="p2">**</bpt>CommandName<ept id="p2">**</ept> parameter.</source>
          <target state="translated">同樣地，如果您使用 <bpt id="p1">**</bpt>FormatTypeName<ept id="p1">**</ept> 參數，不會匯入命令除非您使用 <bpt id="p2">**</bpt>CommandName<ept id="p2">**</ept> 參數。</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>-CommandType</source>
          <target state="translated">-CommandType</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>Imports only the specified types of command objects.</source>
          <target state="translated">只匯入指定類型的命令物件。</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>The default value is Cmdlet.</source>
          <target state="translated">預設值為 Cmdlet。</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>Use "CommandType" or its alias, "Type".</source>
          <target state="translated">請使用 "CommandType" 或其別名 "Type"。</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>Valid values are:</source>
          <target state="translated">有效值為：</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>Alias: The Windows PowerShell aliases in the remote session.</source>
          <target state="translated">別名︰ 遠端工作階段中的 Windows PowerShell 別名。</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>All: The cmdlets and functions in the remote session.</source>
          <target state="translated">所有︰ Cmdlet 和遠端工作階段中的函式。</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>Application: All the files other than Windows-PowerShell files in the paths that are listed in the Path environment variable ($env:path) in the remote session, including .txt, .exe, and .dll files.</source>
          <target state="translated">應用程式︰ 以外的所有檔案的路徑在 Path 環境變數所列中的 Windows PowerShell 檔案 ($env︰ 路徑) 在遠端工作階段，包括.txt、.exe 和.dll 檔案。</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>Cmdlet: The cmdlets in the remote session.</source>
          <target state="translated">指令程式︰ 遠端工作階段中的 cmdlet。</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>"Cmdlet" is the default.</source>
          <target state="translated">"Cmdlet" 為預設值。</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>ExternalScript: The .ps1 files in the paths listed in the Path environment variable ($env:path) in the remote session.</source>
          <target state="translated">ExternalScript:.ps1 中列出的檔案路徑在 Path 環境變數 ($env︰ 路徑) 在遠端工作階段中。</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>Filter and Function: The Windows PowerShell functions in the remote session.</source>
          <target state="translated">篩選條件與函式︰ Windows PowerShell 遠端工作階段中的函式。</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>Script: The script blocks in the remote session.</source>
          <target state="translated">指令碼︰ 遠端工作階段中的指令碼區塊。</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>-DisableNameChecking</source>
          <target state="translated">-DisableNameChecking</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>Suppresses the message that warns you when you import a cmdlet or function whose name includes an unapproved verb or a prohibited character.</source>
          <target state="translated">抑制當匯入 Cmdlet 或函式的名稱包含未核准的動詞或禁止的字元的警告訊息。</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>By default,  when a module that you import exports cmdlets or functions that have unapproved verbs in their names, the Windows PowerShell displays the following warning message:</source>
          <target state="translated">根據預設，當您匯入的模組匯出 Cmdlet 或函式的名稱有未核准的動詞，Windows PowerShell 會顯示下列警告訊息：</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>"WARNING: Some imported command names include unapproved verbs which might make them less discoverable.</source>
          <target state="translated">「 警告︰ 有些匯入的命令名稱包含未核准的動詞，因此可能不易搜尋。</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>Use the Verbose parameter for more detail or type Get-Verb to see the list of approved verbs."</source>
          <target state="translated">請使用 Verbose 參數取得詳細資訊，或輸入 Get-Verb 查看核准的動詞清單。」</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>This message is only a warning.</source>
          <target state="translated">這則訊息只是一個警告。</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>The complete module is still imported, including the non-conforming commands.</source>
          <target state="translated">模組仍然完整匯入，包括不合格的命令。</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>Although the message is displayed to module users, the naming problem should be fixed by the module author.</source>
          <target state="translated">雖然訊息是顯示給模組的使用者，但命名的問題應該由模組作者修正。</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>-FormatTypeName</source>
          <target state="translated">-FormatTypeName</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>Imports formatting instructions for the specified Microsoft .NET Framework types.</source>
          <target state="translated">匯入指定 Microsoft .NET Framework 類型的格式化指示。</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>Enter the type names.</source>
          <target state="translated">輸入類型名稱。</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>Wildcards are permitted.</source>
          <target state="translated">允許使用萬用字元。</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>The value of this parameter must be the name of a type that is returned by a Get-FormatData command in the session from which the commands are being imported.</source>
          <target state="translated">這個參數的值必須是從中匯入命令之來源工作階段中的 Get-FormatData 命令所傳回之類型的名稱。</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>To get all of the formatting data in the remote session, type *.</source>
          <target state="translated">若要取得遠端工作階段中的所有格式設定資料，請輸入 *。</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>If the command does not include either the <bpt id="p1">**</bpt>CommandName<ept id="p1">**</ept> or <bpt id="p2">**</bpt>FormatTypeName<ept id="p2">**</ept> parameters, <bpt id="p3">**</bpt>Import-PSSession<ept id="p3">**</ept>imports formatting instructions for all .NET Framework types returned by a Get-FormatData command in the remote session.</source>
          <target state="translated">如果命令未包含 <bpt id="p1">**</bpt>CommandName<ept id="p1">**</ept> 或 <bpt id="p2">**</bpt>FormatTypeName<ept id="p2">**</ept> 參數， <bpt id="p3">**</bpt>Import-pssession<ept id="p3">**</ept>遠端工作階段中 Get-formatdata 命令傳回匯入所有.NET Framework 類型的格式化指示。</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>If you use the <bpt id="p1">**</bpt>FormatTypeName<ept id="p1">**</ept> parameter, no commands are imported unless you use the <bpt id="p2">**</bpt>CommandName<ept id="p2">**</ept> parameter.</source>
          <target state="translated">如果您使用 <bpt id="p1">**</bpt>FormatTypeName<ept id="p1">**</ept> 參數，不會匯入命令除非您使用 <bpt id="p2">**</bpt>CommandName<ept id="p2">**</ept> 參數。</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>Similarly, if you use the <bpt id="p1">**</bpt>CommandName<ept id="p1">**</ept> parameter, the formatting files for the commands are not imported unless you use the <bpt id="p2">**</bpt>FormatTypeName<ept id="p2">**</ept> parameter.</source>
          <target state="translated">同樣地，如果您使用 <bpt id="p1">**</bpt>CommandName<ept id="p1">**</ept> 參數，命令的格式設定檔案不會匯入除非您使用 <bpt id="p2">**</bpt>FormatTypeName<ept id="p2">**</ept> 參數。</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source>-Module</source>
          <target state="translated">模組</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source>Imports only the commands in the specified Windows PowerShell snap-ins and modules.</source>
          <target state="translated">只匯入指定的 Windows PowerShell 嵌入式管理單元和模組中的命令。</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source>Enter the snap-in and module names.</source>
          <target state="translated">請輸入嵌入式管理單元和模組名稱。</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source>Wildcards are not permitted.</source>
          <target state="translated">不允許使用萬用字元。</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Import-PSSession<ept id="p1">**</ept> cannot import providers from a snap-in.</source>
          <target state="translated"><bpt id="p1">**</bpt>Import-pssession<ept id="p1">**</ept> 無法從嵌入式管理單元匯入提供者。</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source>For more information, see about_PSSnapins and about_Modules.</source>
          <target state="translated">如需詳細資訊，請參閱 about_PSSnapins 和 about_Modules。</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve">
          <source>-Prefix</source>
          <target state="translated">前置詞</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source>Adds the specified prefix to the nouns in the names of imported commands.</source>
          <target state="translated">將指定的首碼加入匯入命令名稱的名詞。</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source>Use this parameter to avoid name conflicts that might occur when different commands in the session have the same name.</source>
          <target state="translated">使用此參數來避免工作階段中不同命令具有相同名稱時可能會發生的名稱衝突。</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source>For example, if you specify the prefix "Remote" and then import a Get-Date cmdlet, the cmdlet is known in the session as "Get-RemoteDate" and it is not confused with the original <bpt id="p1">**</bpt>Get-Date<ept id="p1">**</ept> cmdlet.</source>
          <target state="translated">比方說，如果您指定首碼"Remote"，然後匯入 Get-date cmdlet，此指令程式即為"Get-remotedate"工作階段中，它將不會混淆與原始 <bpt id="p1">**</bpt>Get-date<ept id="p1">**</ept> 指令程式。</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve">
          <source>-Session</source>
          <target state="translated">工作階段</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve">
          <source>Specifies the PSSession from which the cmdlets are imported.</source>
          <target state="translated">指定要從中匯入 Cmdlet 的 PSSession。</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve">
          <source>Enter a variable that contains a session object or a command that gets a session object, such as a New-PSSession or Get-PSSession command.</source>
          <target state="translated">輸入包含工作階段物件或可取得工作階段物件，例如 New-pssession 或 Get-pssession 命令的命令的變數。</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve">
          <source>You can specify only one session.</source>
          <target state="translated">您只能指定一個工作階段。</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve">
          <source>This parameter is required.</source>
          <target state="translated">此為必要參數。</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve">
          <source>-Certificate</source>
          <target state="translated">憑證</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve">
          <source>Specifies the client certificate that is used to sign the format files (<bpt id="p1">*</bpt>.Format.ps1xml) or script module files (.psm1) in the temporary module that <ept id="p1">*</ept><bpt id="p2">*</bpt>Import-PSSession<ept id="p2">*</ept>* creates.</source>
          <target state="translated">指定用來簽署格式檔案的用戶端憑證 (<bpt id="p1">*</bpt>。Format.ps1xml) 或指令碼模組檔案 (.psm1) 中的暫存模組， <ept id="p1">*</ept><bpt id="p2">*</bpt>Import-pssession<ept id="p2">*</ept>* 建立。</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve">
          <source>Enter a variable that contains a certificate or a command or expression that gets the certificate.</source>
          <target state="translated">輸入包含憑證的變數，或可取得憑證的命令或運算式。</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve">
          <source>To find a certificate, use the Get-PfxCertificate cmdlet or use the Get-ChildItem cmdlet in the Certificate (Cert:) drive.</source>
          <target state="translated">若要尋找憑證，請使用 Get-pfxcertificate cmdlet 或使用 Get-childitem cmdlet 憑證 (Cert:) 磁碟機。</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve">
          <source>If the certificate is not valid or does not have sufficient authority, the command fails.</source>
          <target state="translated">若憑證無效或權限不足，則命令會失敗。</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve">
          <source>CommonParameters</source>
          <target state="translated">CommonParameters</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve">
          <source>This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutVariable, -OutBuffer, -PipelineVariable, -Verbose, -WarningAction, and -WarningVariable.</source>
          <target state="translated">這個 cmdlet 支援一般參數:-偵錯、-ErrorAction、-ErrorVariable、-InformationAction-InformationVariable、-OutVariable、-OutBuffer、-PipelineVariable、-Verbose、-WarningAction 以及-WarningVariable。</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve">
          <source>For more information, see about_CommonParameters (http://go.microsoft.com/fwlink/?LinkID=113216).</source>
          <target state="translated">如需詳細資訊，請參閱 about_CommonParameters (http://go.microsoft.com/fwlink/?LinkID=113216)。</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve">
          <source>INPUTS</source>
          <target state="translated">輸入</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve">
          <source>None</source>
          <target state="translated">無</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve">
          <source>You cannot pipe objects to this cmdlet.</source>
          <target state="translated">您無法使用管線將物件傳送至此 Cmdlet。</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve">
          <source>OUTPUTS</source>
          <target state="translated">輸出</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve">
          <source>System.Management.Automation.PSModuleInfo</source>
          <target state="translated">System.Management.Automation.PSModuleInfo</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Import-PSSession<ept id="p1">**</ept> returns the same module object that New-Module and Get-Module cmdlets return.</source>
          <target state="translated"><bpt id="p1">**</bpt>Import-pssession<ept id="p1">**</ept> 傳回相同的模組物件的新模組和 Get-module cmdlet 傳回。</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve">
          <source>However, the imported module is temporary and exists only in the current session.</source>
          <target state="translated">不過，匯入的模組是暫時性的，而且只存在於目前的工作階段。</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve">
          <source>To create a permanent module on disk, use the Export-PSSession cmdlet.</source>
          <target state="translated">若要在磁碟上建立永久的模組，使用 Export-pssession cmdlet。</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve">
          <source>NOTES</source>
          <target state="translated">附註</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Import-PSSession<ept id="p1">**</ept> relies on the Windows PowerShell remoting infrastructure.</source>
          <target state="translated"><bpt id="p1">**</bpt>Import-pssession<ept id="p1">**</ept> 依賴 Windows PowerShell 遠端處理基礎結構。</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve">
          <source>To use this cmdlet, the computer must be configured for WS-Management remoting.</source>
          <target state="translated">若要使用此 Cmdlet，電腦必須設定 WS-Management 遠端執行功能。</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve">
          <source>For more information, see about_Remote and about_Remote_Requirements.</source>
          <target state="translated">如需詳細資訊，請參閱 about_Remote 和 about_Remote_Requirements。</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Import-PSSession<ept id="p1">**</ept> does not import variables or Windows PowerShell providers.</source>
          <target state="translated"><bpt id="p1">**</bpt>Import-pssession<ept id="p1">**</ept> 不匯入變數或 Windows PowerShell 提供者。</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve">
          <source>When you import commands that have the same names as commands in the current session, the imported commands can hide aliases, functions, and cmdlets in the session and they can replace functions and variables in the session.</source>
          <target state="translated">當您匯入與目前工作階段中具有相同命令名稱的命令時，匯入的命令可以隱藏工作階段中的別名、函式和 Cmdlet，而且可以取代工作階段中的函式和變數。</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve">
          <source>To prevent name conflicts, use the <bpt id="p1">**</bpt>Prefix<ept id="p1">**</ept> parameter.</source>
          <target state="translated">若要避免名稱衝突，請使用 <bpt id="p1">**</bpt>前置詞<ept id="p1">**</ept> 參數。</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve">
          <source>For more information, see about_Command_Precedence.</source>
          <target state="translated">如需詳細資訊，請參閱 about_Command_Precedence。</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Import-PSSession<ept id="p1">**</ept> converts all commands into functions before it imports them.</source>
          <target state="translated"><bpt id="p1">**</bpt>Import-pssession<ept id="p1">**</ept> 之前它匯入所有命令都轉換函式。</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve">
          <source>As a result, imported commands behave a bit differently than they would if they retained their original command type.</source>
          <target state="translated">如此一來，匯入的命令行為會變得與保持其原始命令類型時有點不同。</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve">
          <source>For example, if you import a cmdlet from a PSSession and then import a cmdlet with the same name from a module or snap-in, the cmdlet that is imported from the PSSession always runs by default because functions take precedence over cmdlets.</source>
          <target state="translated">例如，如果您從 PSSession 匯入 Cmdlet，然後從模組或嵌入式管理單元匯入具有相同名稱的 Cmdlet，則從 PSSession 匯入的命令預設一律都會執行，因為函式優先於 Cmdlet。</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve">
          <source>Conversely, if you import an alias into a session that has an alias with the same name, the original alias is always used, because aliases take precedence over functions.</source>
          <target state="translated">相反地，如果您將某個別名匯入具有相同別名名稱的工作階段，則會一律使用原始的別名，因為別名優先於函式。</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve">
          <source>For more information, see about_Command_Precedence.</source>
          <target state="translated">如需詳細資訊，請參閱 about_Command_Precedence。</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Import-PSSession<ept id="p1">**</ept> uses the Write-Progress cmdlet to display the progress of the command.</source>
          <target state="translated"><bpt id="p1">**</bpt>Import-pssession<ept id="p1">**</ept> 使用 Write-progress cmdlet 來顯示命令的進度。</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve">
          <source>You might see the progress bar while the command is running.</source>
          <target state="translated">當命令執行時，您可以看到進度列。</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve">
          <source>To find the commands to import, <bpt id="p1">**</bpt>Import-PSSession<ept id="p1">**</ept> uses the Invoke-Command cmdlet to run a Get-Command command in the PSSession.</source>
          <target state="translated">若要尋找要匯入命令 <bpt id="p1">**</bpt>Import-pssession<ept id="p1">**</ept> 使用 Invoke-command cmdlet 在 PSSession 中執行 Get-command 命令。</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve">
          <source>To get formatting data for the commands, it uses the Get-FormatData cmdlet.</source>
          <target state="translated">若要取得格式化資料的所有命令，它會使用 Get-formatdata cmdlet。</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve">
          <source>You might see error messages from these cmdlets when you run an Import-PSSession command.</source>
          <target state="translated">當您執行 Import-PSSession 命令時，您可能會看到來自這些 Cmdlet 的錯誤訊息。</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve">
          <source>Also, <bpt id="p1">**</bpt>Import-PSSession<ept id="p1">**</ept> cannot import commands from a PSSession that does not include the Get-Command, Get-FormatData, Select-Object, and Get-Help cmdlets.</source>
          <target state="translated">此外， <bpt id="p1">**</bpt>Import-pssession<ept id="p1">**</ept> 無法匯入命令，從 PSSession 不包含 Get-command、 Get-formatdata、 Select-object 及 Get-help cmdlet。</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve">
          <source>Imported commands have the same limitations as other remote commands, including the inability to start a program with a user interface, such as Notepad.</source>
          <target state="translated">匯入的命令與其他遠端命令具有相同的限制，包括無法以使用者介面啟動程式，例如「記事本」。</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve">
          <source>Because Windows PowerShell profiles are not run in PSSessions, the commands that a profile adds to a session are not available to <bpt id="p1">**</bpt>Import-PSSession<ept id="p1">**</ept>.</source>
          <target state="translated">Windows PowerShell 設定檔不會在 Pssession 中執行，因為設定檔新增到工作階段的命令並不適用於 <bpt id="p1">**</bpt>Import-pssession<ept id="p1">**</ept>。</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve">
          <source>To import commands from a profile, use an Invoke-Command command to run the profile in the PSSession manually before importing commands.</source>
          <target state="translated">若要從設定檔匯入命令，請在匯入命令之前，使用 Invoke-Command 命令在 PSSession 中手動執行設定檔。</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve">
          <source>The temporary module that <bpt id="p1">**</bpt>Import-PSSession<ept id="p1">**</ept> creates might include a formatting file, even if the command does not import formatting data.</source>
          <target state="translated">暫存模組， <bpt id="p1">**</bpt>Import-pssession<ept id="p1">**</ept> 可能會建立包含格式化檔案，即使命令不會匯入格式化資料。</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve">
          <source>If the command does not import formatting data, any formatting files that are created will not contain formatting data.</source>
          <target state="translated">如果命令不會匯入格式設定資料，所建立的任何格式檔案都將不會包含格式設定資料。</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve">
          <source>To use <bpt id="p1">**</bpt>Import-PSSession<ept id="p1">**</ept>, the execution policy in the current session cannot be Restricted or AllSigned, because the temporary module that <bpt id="p2">**</bpt>Import-PSSession<ept id="p2">**</ept> creates contains unsigned script files that are prohibited by these policies.</source>
          <target state="translated">若要使用 <bpt id="p1">**</bpt>Import-pssession<ept id="p1">**</ept>, ，目前工作階段中的執行原則不能是 Restricted 或 AllSigned，，因為暫存模組， <bpt id="p2">**</bpt>Import-pssession<ept id="p2">**</ept> 會建立包含這些原則所禁止使用的不帶正負號的指令碼檔案。</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve">
          <source>To use <bpt id="p1">**</bpt>Import-PSSession<ept id="p1">**</ept> without changing the execution policy for the local computer, use the <bpt id="p2">**</bpt>Scope<ept id="p2">**</ept> parameter of Set-ExecutionPolicy to set a less restrictive execution policy for a single process.</source>
          <target state="translated">若要使用 <bpt id="p1">**</bpt>Import-pssession<ept id="p1">**</ept> 不需要變更本機電腦的執行原則，使用 <bpt id="p2">**</bpt>範圍<ept id="p2">**</ept> Set-executionpolicy 設定較不嚴格的執行原則的單一處理序的參數。</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve">
          <source>In Windows PowerShell 2.0, help topics for commands that are imported from another session do not include the prefix that you assign by using the <bpt id="p1">**</bpt>Prefix<ept id="p1">**</ept> parameter.</source>
          <target state="translated">在 Windows PowerShell 2.0 中，從另一個工作階段匯入命令的說明主題不包含您使用指派的前置詞 <bpt id="p1">**</bpt>前置詞<ept id="p1">**</ept> 參數。</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve">
          <source>To get help for an imported command in Windows PowerShell 2.0, use the original (non-prefixed) command name.</source>
          <target state="translated">若要取得在 Windows PowerShell 2.0 中匯入命令的說明，請使用原始 (未加上首碼) 的命令名稱。</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve">
          <source>RELATED LINKS</source>
          <target state="translated">相關的連結</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve">
          <source>Export-PSSession</source>
          <target state="translated">Export-PSSession</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve">
          <source>New-PSSession</source>
          <target state="translated">New-PSSession</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve">
          <source>about_Command_Precedence</source>
          <target state="translated">about_Command_Precedence</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve">
          <source>about_PSSessions</source>
          <target state="translated">about_PSSessions</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve">
          <source>about_Jobs</source>
          <target state="translated">about_Jobs</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>