<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-tw">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-1c394fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">c62096be33934349e749b47d364e35aba1a88996</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">reference\5.0\Microsoft.PowerShell.Utility\Add-Member.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions" />
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">615d3638c4b72d7e0c01d962b04c32320095d8cf</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">82536ac01929e47d38227a2ed9415b0dda476582</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>powershell, cmdlet</source>
          <target state="translated">powershell 指令程式</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Add-Member</source>
          <target state="translated">Add-Member</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Add-Member</source>
          <target state="translated">Add-Member</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>SYNOPSIS</source>
          <target state="translated">概要</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Adds custom properties and methods to an instance of a Windows PowerShell object.</source>
          <target state="translated">將自訂屬性和方法新增至 Windows PowerShell 物件的執行個體。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>SYNTAX</source>
          <target state="translated">語法</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>TypeNameSet (Default)</source>
          <target state="translated">TypeNameSet （預設值）</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>MemberSet</source>
          <target state="translated">成員集合</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>NotePropertySingleMemberSet</source>
          <target state="translated">NotePropertySingleMemberSet</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>NotePropertyMultiMemberSet</source>
          <target state="translated">NotePropertyMultiMemberSet</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>DESCRIPTION</source>
          <target state="translated">描述</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>Add-Member<ept id="p1">**</ept> cmdlet lets you add properties and methods to an instance of a Windows PowerShell object.</source>
          <target state="translated"> <bpt id="p1">**</bpt>Add-member<ept id="p1">**</ept> 指令程式可讓您將屬性和方法新增至 Windows PowerShell 物件的執行個體。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>For instance, you can add a NoteProperty member that contains a description of the object or a ScriptMethod member that runs a script to change the object.</source>
          <target state="translated">比方說，您可以加入包含物件描述的 NoteProperty 成員或執行指令碼，以變更物件的 ScriptMethod 成員。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>To use <bpt id="p1">**</bpt>Add-Member<ept id="p1">**</ept>, pipe the object to <bpt id="p2">**</bpt>Add-Member<ept id="p2">**</ept>, or use the <bpt id="p3">**</bpt>InputObject<ept id="p3">**</ept> parameter to specify the object.</source>
          <target state="translated">若要使用 <bpt id="p1">**</bpt>加入成員<ept id="p1">**</ept>, ，透過管道傳送至物件 <bpt id="p2">**</bpt>加入成員<ept id="p2">**</ept>, ，或使用 <bpt id="p3">**</bpt>InputObject<ept id="p3">**</ept> 參數指定的物件。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Use the <bpt id="p1">*</bpt>MemberType<ept id="p1">*</ept> parameter to specify the type of member that you want to add, use the <bpt id="p2">*</bpt>Name<ept id="p2">*</ept> parameter to assign a name to the new member, and use the <bpt id="p3">*</bpt>Value<ept id="p3">*</ept> parameter to set the value of the member.</source>
          <target state="translated">使用 <bpt id="p1">*</bpt>MemberType<ept id="p1">*</ept> 參數來指定您想要新增，請使用成員的型別 <bpt id="p2">*</bpt>名稱<ept id="p2">*</ept> 參數指派名稱給新的成員，並使用 <bpt id="p3">*</bpt>值<ept id="p3">*</ept> 參數來設定成員的值。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>The properties and methods that you add are added only to the particular instance of the object that you specify.</source>
          <target state="translated">您新增的屬性和方法只會新增到您指定之物件特定的執行個體。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Add-Member<ept id="p1">**</ept> does not change the object type.</source>
          <target state="translated"><bpt id="p1">**</bpt>加入成員<ept id="p1">**</ept> 不會變更物件類型。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>To create a new object type, use the Add-Type cmdlet.</source>
          <target state="translated">若要建立新的物件類型，使用 [加入型別 cmdlet。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>You can also use the Export-Clixml cmdlet to save the instance of the object, including the additional members, in a file.</source>
          <target state="translated">您也可以使用 Export-clixml cmdlet 來儲存在檔案中包含的其他成員，該物件的執行個體。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Then you can use the Import-Clixml cmdlet to re-create the instance of the object from the information that is stored in the exported file.</source>
          <target state="translated">然後您可以使用 Import-clixml cmdlet 來重新建立儲存在匯出檔案中的資訊從物件的執行個體。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Beginning in Windows PowerShell 3.0, <bpt id="p1">**</bpt>Add-Member<ept id="p1">**</ept> has new features that make it easier to add note properties to objects.</source>
          <target state="translated">在 Windows PowerShell 3.0 中，從 <bpt id="p1">**</bpt>Add-member<ept id="p1">**</ept> 有新功能可讓您更輕鬆地將附註屬性新增至物件。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>You can use the <bpt id="p1">**</bpt>NotePropertyName<ept id="p1">**</ept> and <bpt id="p2">**</bpt>NotePropertyValue<ept id="p2">**</ept> parameters to define a note property or use the <bpt id="p3">**</bpt>NotePropertyMembers<ept id="p3">**</ept> parameter, which takes a hash table of note property names and values.</source>
          <target state="translated">您可以使用 <bpt id="p1">**</bpt>NotePropertyName<ept id="p1">**</ept> 和 <bpt id="p2">**</bpt>NotePropertyValue<ept id="p2">**</ept> 參數定義的附註屬性或使用 <bpt id="p3">**</bpt>NotePropertyMembers<ept id="p3">**</ept> 參數以採用附註屬性名稱和值的雜湊表。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Also, beginning in Windows PowerShell 3.0, the <bpt id="p1">*</bpt>PassThru<ept id="p1">*</ept> parameter, which generates an output object, is needed less frequently.</source>
          <target state="translated">此外，在 Windows PowerShell 3.0 中，從 <bpt id="p1">*</bpt>PassThru<ept id="p1">*</ept> 參數，會產生輸出物件，需要較少。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Add-Member<ept id="p1">**</ept> now adds the new members directly to the input object of more types.</source>
          <target state="translated"><bpt id="p1">**</bpt>加入成員<ept id="p1">**</ept> 現在加入新成員直接輸入更多類型的物件。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>For more information, see the <bpt id="p1">*</bpt>PassThru<ept id="p1">*</ept> parameter description.</source>
          <target state="translated">如需詳細資訊，請參閱 <bpt id="p1">*</bpt>PassThru<ept id="p1">*</ept> 參數描述。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>EXAMPLES</source>
          <target state="translated">範例</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Example 1: Add a note property to a PSObject</source>
          <target state="translated">範例 1︰ 將附註屬性新增至 PSObject</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>These commands add the Status note property with a value of "Done" to the FileInfo object that represents the Test.txt file.</source>
          <target state="translated">這些命令會將值為 "Done" 的 Status 附註屬性新增至代表 Test.txt 檔案的 FileInfo 物件。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>The first command uses the Get-ChildItem cmdlet (alias = "dir) to get the Test.txt file.</source>
          <target state="translated">第一個命令會使用 Get-childitem cmdlet （別名 ="dir） 取得 Test.txt 檔案。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>It saves it in the $a variable.</source>
          <target state="translated">它會將檔案儲存在 $a 變數中。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>The second and third commands add the note property to the object in $a.</source>
          <target state="translated">第二個和第三個命令會將附註屬性新增至 $ 中的物件。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>The third command omits the optional parameter names, so the parameter values must be in the correct Name-Value order.</source>
          <target state="translated">第三個命令會省略選擇性參數名稱，因此參數值必須是正確的名稱 / 值順序。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>These commands are equivalent and can be used interchangeably.</source>
          <target state="translated">這些命令是相等的，可以交換使用。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>The fourth command uses dot notation to get the value of the Status property of the object in $a.</source>
          <target state="translated">第四個命令使用點標記法取得 $ 中物件的 [狀態] 屬性的值。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>As the output shows, the value is "Done".</source>
          <target state="translated">如輸出所示，此值是 「 完成 」。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Example 2: Add an alias property to a PSObject</source>
          <target state="translated">範例 2︰ 將別名屬性新增至 PSObject</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>These commands add the FileLength alias property to the object that represents the Test.txt file.</source>
          <target state="translated">這些命令會將 FileLength 別名屬性新增至代表 Test.txt 檔案的物件。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>The new property is an alias for the Length property.</source>
          <target state="translated">新屬性是 Length 屬性的別名。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>The first command use the Get-ChildItem cmdlet (alias = "dir") to get the Test.txt file.</source>
          <target state="translated">第一個命令使用 Get-childitem cmdlet （別名 ="dir"） 來取得 Test.txt 檔案。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>The second command adds the FileLength alias property.</source>
          <target state="translated">第二個命令會新增 FileLength 別名屬性。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>The third command uses dot notation to get the value of the new FileLength property.</source>
          <target state="translated">第三個命令會使用點標記法來取得新的 FileLength 屬性的值。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Example 3: Add a StringUse note property to a string</source>
          <target state="translated">範例 3︰ 將 StringUse 附註屬性新增至字串</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>These commands add the <bpt id="p1">**</bpt>StringUse<ept id="p1">**</ept> note property to a string.</source>
          <target state="translated">這些命令會將新增 <bpt id="p1">**</bpt>StringUse<ept id="p1">**</ept> 附註屬性設為字串。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Because Add-Member cannot add types to String input objects, the command uses the  <bpt id="p1">*</bpt>PassThru<ept id="p1">*</ept> parameter to generate an output object.</source>
          <target state="translated">Add-member 無法新增類型至 String 輸入的物件，因為此命令會使用  <bpt id="p1">*</bpt>PassThru<ept id="p1">*</ept> 參數來產生輸出物件。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>The last command in the example displays the new property.</source>
          <target state="translated">範例中的最後一個命令會顯示新的屬性。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>The command uses the <bpt id="p1">*</bpt>NotePropertyMembers<ept id="p1">*</ept> parameter, but omits the parameter name, which is optional.</source>
          <target state="translated">此命令會使用 <bpt id="p1">*</bpt>NotePropertyMembers<ept id="p1">*</ept> 參數，但會省略參數名稱是選擇性的。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>The value of the <bpt id="p1">*</bpt>NotePropertyMembers<ept id="p1">*</ept> parameter is a hash table.</source>
          <target state="translated">值 <bpt id="p1">*</bpt>NotePropertyMembers<ept id="p1">*</ept> 參數是雜湊表。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>The key is the note property name, StringUse, and the value is the note property value, Display.</source>
          <target state="translated">索引鍵是附註屬性名稱 StringUse，值是附註屬性值 Display。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Example 4: Add a script method to a string object</source>
          <target state="translated">範例 4︰ 將指令碼方法加入至字串物件</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>These commands add the PadBoth script method to a string object.</source>
          <target state="translated">這些命令會將 PadBoth 指令碼方法新增至字串物件。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>The first command creates a string and saves it in the $A variable.</source>
          <target state="translated">第一個命令會建立字串，並將它儲存在 $A 變數中。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>The second command adds the Padboth script method to the object in the $A variable.</source>
          <target state="translated">第二個命令會將 Padboth 指令碼方法加入至 $A 變數中的物件。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">*</bpt>Value<ept id="p1">*</ept> parameter defines the new script method.</source>
          <target state="translated"> <bpt id="p1">*</bpt>值<ept id="p1">*</ept> 參數會定義新的指令碼方法。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>It uses the PadRight and PadLeft methods of a string to add one space the left and one space to the right of the string.</source>
          <target state="translated">它會使用字串的 PadRight 和 PadLeft 方法，在字串的左側和右側各新增一個空格。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">*</bpt>Value<ept id="p1">*</ept> parameter also uses the $This automatic variable, which represents the current object.</source>
          <target state="translated"> <bpt id="p1">*</bpt>值<ept id="p1">*</ept> 參數也會使用 $This 自動變數，代表目前物件。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>The $This variable is valid only in script blocks that define new properties and methods.</source>
          <target state="translated">$This 變數只有在定義新的屬性和方法的指令碼區塊中才有效。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>The command includes the <bpt id="p1">*</bpt>PassThru<ept id="p1">*</ept> parameter, which directs <bpt id="p2">**</bpt>Add-Member<ept id="p2">**</ept> to return an instance of the object that includes the new script property.</source>
          <target state="translated">此命令包含 <bpt id="p1">*</bpt>PassThru<ept id="p1">*</ept> 參數，指示 <bpt id="p2">**</bpt>Add-member<ept id="p2">**</ept> 以傳回包含新的指令碼屬性的物件執行個體。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>By default, <bpt id="p1">**</bpt>Add-Member<ept id="p1">**</ept> adds members to <bpt id="p2">**</bpt>PSObject<ept id="p2">**</ept>s and does not generate any output.</source>
          <target state="translated">根據預設， <bpt id="p1">**</bpt>Add-member<ept id="p1">**</ept> 將成員加入至 <bpt id="p2">**</bpt>PSObject<ept id="p2">**</ept>s 並不會產生任何輸出。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>The third command uses dot notation to call the new PadBoth script method on the object in the $A variable.</source>
          <target state="translated">第三個命令使用點標記法 $A 變數中的物件上呼叫新的 PadBoth 指令碼方法。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>Example 5: Add an alias property to an event</source>
          <target state="translated">範例 5︰ 將別名屬性新增至事件</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>These commands add the When alias property to an event in the System event log.</source>
          <target state="translated">這些命令會將 When 別名屬性系統事件記錄檔中的事件。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>The event is an <bpt id="p1">**</bpt>EventLogEntry<ept id="p1">**</ept> object that is returned by the Get-EventLog cmdlet.</source>
          <target state="translated">事件是 <bpt id="p1">**</bpt>EventLogEntry<ept id="p1">**</ept> Get-eventlog cmdlet 所傳回的物件。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>The When alias property is an alias for the TimeWritten property of the object.</source>
          <target state="translated">When 別名屬性是物件的 TimeWritten 屬性的別名。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">*</bpt>SecondValue<ept id="p1">*</ept> parameter is used to specify that the property value should be converted to type System.String when accessed by using the <bpt id="p2">**</bpt>AliasProperty<ept id="p2">**</ept>.</source>
          <target state="translated"> <bpt id="p1">*</bpt>SecondValue<ept id="p1">*</ept> 參數用來指定屬性的值轉換為使用存取時的 System.String 類型 <bpt id="p2">**</bpt>AliasProperty<ept id="p2">**</ept>。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>The TimeWritten property is a <bpt id="p1">**</bpt>DateTime<ept id="p1">**</ept> object.</source>
          <target state="translated">TimeWritten 屬性是 <bpt id="p1">**</bpt>DateTime<ept id="p1">**</ept> 物件。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>The first command uses the Get-EventLog cmdlet to get the newest event in the System event log.</source>
          <target state="translated">第一個命令會使用 Get-eventlog cmdlet，在系統事件記錄檔中取得最新的事件。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>It stores the event in the $Event variable.</source>
          <target state="translated">它會將事件儲存在 $Event 變數中。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>To demonstrate that the TimeWritten property is a <bpt id="p1">**</bpt>DateTime<ept id="p1">**</ept> type, the second command uses dot notation to get the TimeWritten property of that event and pipes it to the Get-Member cmdlet.</source>
          <target state="translated">為了示範 TimeWritten 屬性是 <bpt id="p1">**</bpt>DateTime<ept id="p1">**</ept> 型別第二個命令使用點標記法來取得該事件的 TimeWritten 屬性和它使用管線傳送至 Get-member 指令程式。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>The third command uses the <bpt id="p1">**</bpt>Add-Member<ept id="p1">**</ept> cmdlet to add the When alias property to the object instance in the $Event variable.</source>
          <target state="translated">第三個命令會使用 <bpt id="p1">**</bpt>Add-member<ept id="p1">**</ept> cmdlet 將 When 別名屬性 $Event 變數中的物件執行個體。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">*</bpt>Name<ept id="p1">*</ept> parameter assigns the name, When, and the <bpt id="p2">*</bpt>Value<ept id="p2">*</ept> parameter specifies that When is an alias for the TimeWritten property.</source>
          <target state="translated"> <bpt id="p1">*</bpt>名稱<ept id="p1">*</ept> 參數會指派名稱、 執行時間、 和 <bpt id="p2">*</bpt>值<ept id="p2">*</ept> 參數會指定當是 TimeWritten 屬性的別名。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">*</bpt>SecondValue<ept id="p1">*</ept> parameter indicates that the value that the When method returns should be cast to a <bpt id="p2">**</bpt>System.String<ept id="p2">**</ept> type.</source>
          <target state="translated"> <bpt id="p1">*</bpt>SecondValue<ept id="p1">*</ept> 參數表示值的 When 方法會傳回轉換為 <bpt id="p2">**</bpt>System.String<ept id="p2">**</ept> 型別。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>The fourth command uses dot notation to call the new When method.</source>
          <target state="translated">第四個命令會使用點標記法來呼叫新的 When 方法。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>The command pipes the method value to the <bpt id="p1">**</bpt>Get-Member<ept id="p1">**</ept> cmdlet to confirm that it has returned a string.</source>
          <target state="translated">命令使用管線傳送方法值 <bpt id="p1">**</bpt>Get-member<ept id="p1">**</ept> cmdlet，以確認它已傳回字串。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>Example 6: Copy all properties of an object to another</source>
          <target state="translated">範例 6︰ 將物件的所有內容都複製到另一個</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>This function copies all of the properties of one object to another object.</source>
          <target state="translated">此函式會將一個物件的所有屬性複製到另一個物件。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>The first command in the function declares the function name and lists its parameters.</source>
          <target state="translated">函式中的第一個命令會宣告函式名稱，並列出其參數。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>The ForEach loop uses the Get-Member cmdlet to get each of the properties of the <bpt id="p1">**</bpt>From<ept id="p1">**</ept> object.</source>
          <target state="translated">ForEach 迴圈使用 Get-member 指令程式來取得每個屬性 <bpt id="p1">**</bpt>從<ept id="p1">**</ept> 物件。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>The commands within the ForEach loop are performed in series on each of the properties.</source>
          <target state="translated">ForEach 迴圈內的命令會在每個屬性上依序執行。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>Add-Member<ept id="p1">**</ept> command adds the property of the <bpt id="p2">**</bpt>From<ept id="p2">**</ept> object to the <bpt id="p3">**</bpt>To<ept id="p3">**</ept> object as a NoteProperty.</source>
          <target state="translated"> <bpt id="p1">**</bpt>Add-member<ept id="p1">**</ept> 命令會將新增的屬性 <bpt id="p2">**</bpt>從<ept id="p2">**</ept> 物件傳遞給 <bpt id="p3">**</bpt>到<ept id="p3">**</ept> 物件做為 NoteProperty。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>It uses the <bpt id="p1">*</bpt>Force<ept id="p1">*</ept> parameter to add members with the same member name.</source>
          <target state="translated">它會使用 <bpt id="p1">*</bpt>Force<ept id="p1">*</ept> 參數來新增成員具有相同的成員名稱。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>The last command in the function gives the new property the same name as the original property.</source>
          <target state="translated">函式中的最後一個命令會提供新屬性與原始屬性相同的名稱。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>Example 7: Create a custom object</source>
          <target state="translated">範例 7︰ 建立自訂物件</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>This example creates the <bpt id="p1">**</bpt>Asset<ept id="p1">**</ept> custom object.</source>
          <target state="translated">這個範例會建立 <bpt id="p1">**</bpt>資產<ept id="p1">**</ept> 自訂物件。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>The first command uses the New-Object cmdlet to create a <bpt id="p1">**</bpt>PSObject<ept id="p1">**</ept>.</source>
          <target state="translated">第一個命令使用 New-object cmdlet 建立 <bpt id="p1">**</bpt>PSObject<ept id="p1">**</ept>。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>The command saves the <bpt id="p1">**</bpt>PSObject<ept id="p1">**</ept> in the $Asset variable.</source>
          <target state="translated">命令會將儲存 <bpt id="p1">**</bpt>PSObject<ept id="p1">**</ept> $Asset 變數中。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>The second command uses the <ph id="ph1">\[</ph>ordered<ph id="ph2">\]</ph> type accelerator to create an ordered dictionary of names and values.</source>
          <target state="translated">第二個命令會使用 <ph id="ph1">\[</ph>排序<ph id="ph2">\]</ph> 類型加速器來建立名稱和值的排序的字典。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>The command saves the result in the $D variable.</source>
          <target state="translated">此命令會將結果儲存在 $D 變數中。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>The third command uses the <bpt id="p1">**</bpt>NotePropertyMembers<ept id="p1">**</ept> parameter of the <bpt id="p2">**</bpt>Add-Member<ept id="p2">**</ept> cmdlet to add the dictionary in the $D variable to the <bpt id="p3">**</bpt>PSObject<ept id="p3">**</ept>.</source>
          <target state="translated">第三個命令會使用 <bpt id="p1">**</bpt>NotePropertyMembers<ept id="p1">**</ept> 參數 <bpt id="p2">**</bpt>Add-member<ept id="p2">**</ept> 指令程式可在 $D 變數，以加入字典 <bpt id="p3">**</bpt>PSObject<ept id="p3">**</ept>。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>It uses the TypeName property to assign a new name, Asset, to the <bpt id="p1">**</bpt>PSObject<ept id="p1">**</ept>.</source>
          <target state="translated">它會使用 TypeName 屬性指派新名稱，而資產，為 <bpt id="p1">**</bpt>PSObject<ept id="p1">**</ept>。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>The fourth command sends the new <bpt id="p1">**</bpt>Asset<ept id="p1">**</ept> object in the $Asset variable to the Get-Member cmdlet.</source>
          <target state="translated">第四個命令會傳送新 <bpt id="p1">**</bpt>資產<ept id="p1">**</ept> $Asset 變數到 Get-member 指令程式中的物件。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>The output shows that the object has a type name of "Asset" and the note properties that we defined in the ordered dictionary.</source>
          <target state="translated">輸出顯示物件具有 "Asset" 的類型名稱，以及我們在排序的字典中定義的附註屬性。</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>PARAMETERS</source>
          <target state="translated">參數</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>-Force</source>
          <target state="translated">-Force</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>Indicates that this cmdlet adds a new member even the object has a custom member with the same name.</source>
          <target state="translated">表示此指令程式會甚至物件的新成員會有具有相同名稱的自訂成員。</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>You cannot use the <bpt id="p1">*</bpt>Force<ept id="p1">*</ept> parameter to replace a standard member of a type.</source>
          <target state="translated">您不能使用 <bpt id="p1">*</bpt>Force<ept id="p1">*</ept> 參數來取代標準的型別成員。</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>-InputObject</source>
          <target state="translated">-InputObject</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>Specifies the object to which the new member is added.</source>
          <target state="translated">指定要新增成員的物件。</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>Enter a variable that contains the objects, or type a command or expression that gets the objects.</source>
          <target state="translated">輸入包含物件的變數，或輸入可取得物件的命令或運算式。</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>-MemberType</source>
          <target state="translated">-MemberType</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>Specifies the type of the member to add.</source>
          <target state="translated">指定要加入的成員類型。</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>This parameter is required.</source>
          <target state="translated">此為必要參數。</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>The acceptable values for this parameter are:</source>
          <target state="translated">此參數接受的值包括：</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>NoteProperty</source>
          <target state="translated">NoteProperty</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>AliasProperty</source>
          <target state="translated">AliasProperty</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>ScriptProperty</source>
          <target state="translated">ScriptProperty</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>CodeProperty</source>
          <target state="translated">CodeProperty</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>ScriptMethod</source>
          <target state="translated">ScriptMethod</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>CopyMethod</source>
          <target state="translated">CopyMethod</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>For information about these values, see PSMemberTypes Enumerationhttp://msdn.microsoft.com/en-us/library/windows/desktop/system.management.automation.psmembertypes(v=vs.85).aspx (http://msdn.microsoft.com/en-us/library/windows/desktop/system.management.automation.psmembertypes(v=vs.85).aspx).</source>
          <target state="translated">這些值的相關資訊，請參閱 PSMemberTypes Enumerationhttp://msdn.microsoft.com/en-us/library/windows/desktop/system.management.automation.psmembertypes (vs.85 (http://msdn.microsoft.com/en-us/library/windows/desktop/system.management.automation.psmembertypes (vs.85)。</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>Not all objects have every type of member.</source>
          <target state="translated">並非所有物件都有每個類型的成員。</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>If you specify a member type that the object does not have, Windows PowerShell returns an error.</source>
          <target state="translated">若指定物件沒有的成員類型，Windows PowerShell 會傳回錯誤。</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>-Name</source>
          <target state="translated">-Name</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>Specifies the name of the member that this cmdlet adds.</source>
          <target state="translated">指定此 cmdlet 會將新增之成員的名稱。</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>-NotePropertyMembers</source>
          <target state="translated">-NotePropertyMembers</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>Specifies a hash table or ordered dictionary of note property names and values.</source>
          <target state="translated">指定內容是附註屬性名稱和值的雜湊表或排序的字典。</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>Type a hash table or dictionary in which the keys are note property names and the values are note property values.</source>
          <target state="translated">輸入其中的索引鍵為附註屬性名稱且值為附註屬性值的雜湊表或字典。</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>For more information about hash tables and ordered dictionaries in Windows PowerShell, see about_Hash_Tables.</source>
          <target state="translated">如需有關雜湊表和排序的字典，Windows PowerShell 中的詳細資訊，請參閱 about_Hash_Tables。</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>This parameter was introduced in Windows PowerShell 3.0.</source>
          <target state="translated">此參數是在 Windows PowerShell 3.0 引進。</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>-NotePropertyName</source>
          <target state="translated">-NotePropertyName</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>Specifies the note property name.</source>
          <target state="translated">指定附註屬性名稱。</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>Use this parameter with the <bpt id="p1">*</bpt>NotePropertyValue<ept id="p1">*</ept> parameter.</source>
          <target state="translated">使用此參數與 <bpt id="p1">*</bpt>NotePropertyValue<ept id="p1">*</ept> 參數。</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>This parameter is optional.</source>
          <target state="translated">此為選擇性參數。</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>This parameter was introduced in Windows PowerShell 3.0.</source>
          <target state="translated">此參數是在 Windows PowerShell 3.0 引進。</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>-NotePropertyValue</source>
          <target state="translated">-NotePropertyValue</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>Specifies the note property value.</source>
          <target state="translated">指定附註屬性值。</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>Use this parameter with the <bpt id="p1">*</bpt>NotePropertyName<ept id="p1">*</ept> parameter.</source>
          <target state="translated">使用此參數與 <bpt id="p1">*</bpt>NotePropertyName<ept id="p1">*</ept> 參數。</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>This parameter is optional.</source>
          <target state="translated">此為選擇性參數。</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>This parameter was introduced in Windows PowerShell 3.0.</source>
          <target state="translated">此參數是在 Windows PowerShell 3.0 引進。</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>-PassThru</source>
          <target state="translated">-PassThru</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>Returns an object representing the item with which you are working.</source>
          <target state="translated">傳回代表您正在使用之項目的物件。</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>By default, this cmdlet does not generate any output.</source>
          <target state="translated">根據預設，此 Cmdlet 不會產生任何輸出。</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>For most objects, <bpt id="p1">**</bpt>Add-Member<ept id="p1">**</ept> adds the new members to the input object.</source>
          <target state="translated">對於大部分的物件， <bpt id="p1">**</bpt>Add-member<ept id="p1">**</ept> 將新成員加入至輸入物件。</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>However, when the input object is a string, <bpt id="p1">**</bpt>Add-Member<ept id="p1">**</ept> cannot add the member to the input object.</source>
          <target state="translated">不過，當輸入的物件是一個字串， <bpt id="p1">**</bpt>Add-member<ept id="p1">**</ept> 無法將成員新增至輸入物件。</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>For these objects, use the <bpt id="p1">*</bpt>PassThru<ept id="p1">*</ept> parameter to create an output object.</source>
          <target state="translated">對於這些物件，使用 <bpt id="p1">*</bpt>PassThru<ept id="p1">*</ept> 參數來建立輸出物件。</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>In Windows PowerShell 2.0, <bpt id="p1">**</bpt>Add-Member<ept id="p1">**</ept> added members only to the PSObject wrapper of objects, not to the object.</source>
          <target state="translated">在 Windows PowerShell 2.0， <bpt id="p1">**</bpt>Add-member<ept id="p1">**</ept> 將成員加入至物件的 PSObject 包裝函式，而非物件。</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>Use the <bpt id="p1">*</bpt>PassThru<ept id="p1">*</ept> parameter to create an output object for any object that has a PSObject wrapper.</source>
          <target state="translated">使用 <bpt id="p1">*</bpt>PassThru<ept id="p1">*</ept> 參數來建立具有 PSObject 包裝函式的任何物件的輸出物件。</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>-SecondValue</source>
          <target state="translated">-SecondValue</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>Specifies optional additional information about <bpt id="p1">**</bpt>AliasProperty<ept id="p1">**</ept>, <bpt id="p2">**</bpt>ScriptProperty<ept id="p2">**</ept>, <bpt id="p3">**</bpt>CodeProperty<ept id="p3">**</ept>, or <bpt id="p4">**</bpt>CodeMethod<ept id="p4">**</ept> members.</source>
          <target state="translated">指定其他選擇性資訊有關 <bpt id="p1">**</bpt>AliasProperty<ept id="p1">**</ept>, ，<bpt id="p2">**</bpt>ScriptProperty<ept id="p2">**</ept>, ，<bpt id="p3">**</bpt>CodeProperty<ept id="p3">**</ept>, ，或 <bpt id="p4">**</bpt>CodeMethod<ept id="p4">**</ept> 成員。</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>If used when adding an AliasProperty, this parameter must be a data type.</source>
          <target state="translated">如果在新增 AliasProperty 時使用，此參數需為資料類型。</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>A conversion to the specified data type is added to the value of the AliasProperty.</source>
          <target state="translated">轉換為指定的資料類型會加入至 AliasProperty 的值。</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>For example, if you add an AliasProperty that provides an alternate name for a string property, you can also specify a SecondValue parameter of System.Int32 to indicate that the value of that string property should be converted to an integer when accessed by using the corresponding AliasProperty.</source>
          <target state="translated">例如，如果您新增為字串屬性提供替代名稱的 AliasProperty，也可以指定 System.Int32 的 SecondValue 參數，以指示使用對應的 AliasProperty 存取時，該字串屬性的值應轉換成整數。</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source>You can use the <bpt id="p1">*</bpt>SecondValue<ept id="p1">*</ept> parameter to specify an additional ScriptBlock when adding a ScriptProperty member.</source>
          <target state="translated">您可以使用 <bpt id="p1">*</bpt>SecondValue<ept id="p1">*</ept> 參數來新增 ScriptProperty 成員時，指定其他的指令碼區塊。</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source>In that case, the first ScriptBlock, specified in the <bpt id="p1">*</bpt>Value<ept id="p1">*</ept> parameter, is used to get the value of a variable.</source>
          <target state="translated">中的第一個指令碼區塊中，指定在此情況下， <bpt id="p1">*</bpt>值<ept id="p1">*</ept> 參數用來取得變數的值。</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source>The second ScriptBlock, specified in the <bpt id="p1">*</bpt>SecondValue<ept id="p1">*</ept> parameter, is used to set the value of a variable.</source>
          <target state="translated">指定在第二個 ScriptBlock <bpt id="p1">*</bpt>SecondValue<ept id="p1">*</ept> 參數，用來設定變數的值。</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source>-TypeName</source>
          <target state="translated">-TypeName</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source>Specifies a name for the type.</source>
          <target state="translated">指定類型的名稱。</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source>When the type is a class in the System namespace or a type that has a type accelerator, you can enter the short name of the type.</source>
          <target state="translated">當類型是 System 命名空間中的類別或具有類型加速器的類型時，可以輸入類型的簡短名稱。</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve">
          <source>Otherwise, the full type name is required.</source>
          <target state="translated">否則，需要完整類型名稱。</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source>This parameter is effective only when the input object is a <bpt id="p1">**</bpt>PSObject<ept id="p1">**</ept>.</source>
          <target state="translated">此參數是輸入的物件時，才會生效 <bpt id="p1">**</bpt>PSObject<ept id="p1">**</ept>。</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source>This parameter was introduced in Windows PowerShell 3.0.</source>
          <target state="translated">此參數是在 Windows PowerShell 3.0 引進。</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source>-Value</source>
          <target state="translated">值</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve">
          <source>Specifies the initial value of the added member.</source>
          <target state="translated">指定已新增成員的初始值。</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve">
          <source>If you add an <bpt id="p1">**</bpt>AliasProperty<ept id="p1">**</ept>, <bpt id="p2">**</bpt>CodeProperty<ept id="p2">**</ept>, <bpt id="p3">**</bpt>ScriptProperty<ept id="p3">**</ept> or <bpt id="p4">**</bpt>CodeMethod<ept id="p4">**</ept> member, you can supply optional, additional information by using the <bpt id="p5">*</bpt>SecondValue<ept id="p5">*</ept> parameter.</source>
          <target state="translated">如果您將加入 <bpt id="p1">**</bpt>AliasProperty<ept id="p1">**</ept>, ，<bpt id="p2">**</bpt>CodeProperty<ept id="p2">**</ept>, ，<bpt id="p3">**</bpt>ScriptProperty<ept id="p3">**</ept> 或 <bpt id="p4">**</bpt>CodeMethod<ept id="p4">**</ept> 成員，您可以藉由提供選擇性的其他資訊 <bpt id="p5">*</bpt>SecondValue<ept id="p5">*</ept> 參數。</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve">
          <source>CommonParameters</source>
          <target state="translated">CommonParameters</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve">
          <source>This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutVariable, -OutBuffer, -PipelineVariable, -Verbose, -WarningAction, and -WarningVariable.</source>
          <target state="translated">這個 cmdlet 支援一般參數:-偵錯、-ErrorAction、-ErrorVariable、-InformationAction-InformationVariable、-OutVariable、-OutBuffer、-PipelineVariable、-Verbose、-WarningAction 以及-WarningVariable。</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve">
          <source>For more information, see about_CommonParameters (http://go.microsoft.com/fwlink/?LinkID=113216).</source>
          <target state="translated">如需詳細資訊，請參閱 about_CommonParameters (http://go.microsoft.com/fwlink/?LinkID=113216)。</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve">
          <source>INPUTS</source>
          <target state="translated">輸入</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve">
          <source>System.Management.Automation.PSObject</source>
          <target state="translated">System.Management.Automation.PSObject</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve">
          <source>You can pipe any object type to this cmdlet.</source>
          <target state="translated">您可以透過管道傳送到此指令程式的任何物件型別。</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve">
          <source>OUTPUTS</source>
          <target state="translated">輸出</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve">
          <source>None or System.Object</source>
          <target state="translated">無或 System.Object</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve">
          <source>When you use the <bpt id="p1">*</bpt>PassThru<ept id="p1">*</ept> parameter, this cmdlet returns the newly-extended object.</source>
          <target state="translated">當您使用 <bpt id="p1">*</bpt>PassThru<ept id="p1">*</ept> 參數，此 cmdlet 會傳回新擴充的物件。</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve">
          <source>Otherwise, this cmdlet does not generate any output.</source>
          <target state="translated">否則，此 Cmdlet 不會產生任何輸出。</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve">
          <source>NOTES</source>
          <target state="translated">附註</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve">
          <source>You can add members only to <bpt id="p1">**</bpt>PSObject<ept id="p1">**</ept> objects.</source>
          <target state="translated">您可以新增成員至 <bpt id="p1">**</bpt>PSObject<ept id="p1">**</ept> 物件。</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve">
          <source>To determine whether an object is a <bpt id="p1">**</bpt>PSObject<ept id="p1">**</ept> object, use the "is" operator.</source>
          <target state="translated">若要判斷物件是否為 <bpt id="p1">**</bpt>PSObject<ept id="p1">**</ept> 物件，請使用 「 是 」 運算子。</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve">
          <source>For instance, to test an object stored in the $obj variable, type <ph id="ph1">`$obj -is \[PSObject\]`</ph>.</source>
          <target state="translated">例如，若要測試 $obj 變數中儲存的物件，請輸入 <ph id="ph1">`$obj -is \[PSObject\]`</ph>。</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve">
          <source>The names of the <bpt id="p1">*</bpt>MemberType<ept id="p1">*</ept>, <bpt id="p2">*</bpt>Name<ept id="p2">*</ept>, <bpt id="p3">*</bpt>Value<ept id="p3">*</ept>, and <bpt id="p4">*</bpt>SecondValue<ept id="p4">*</ept> parameters are optional.</source>
          <target state="translated">名稱 <bpt id="p1">*</bpt>MemberType<ept id="p1">*</ept>, ，<bpt id="p2">*</bpt>名稱<ept id="p2">*</ept>, ，<bpt id="p3">*</bpt>值<ept id="p3">*</ept>, ，和 <bpt id="p4">*</bpt>SecondValue<ept id="p4">*</ept> 參數是選擇性的。</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve">
          <source>If you omit the parameter names, the unnamed parameter values must appear in this order: <bpt id="p1">*</bpt>MemberType<ept id="p1">*</ept>, <bpt id="p2">*</bpt>Name<ept id="p2">*</ept>, <bpt id="p3">*</bpt>Value<ept id="p3">*</ept>, and <bpt id="p4">*</bpt>SecondValue<ept id="p4">*</ept>.</source>
          <target state="translated">如果您省略參數名稱，未命名的參數值必須出現在此順序︰ <bpt id="p1">*</bpt>MemberType<ept id="p1">*</ept>, ，<bpt id="p2">*</bpt>名稱<ept id="p2">*</ept>, ，<bpt id="p3">*</bpt>值<ept id="p3">*</ept>, ，和 <bpt id="p4">*</bpt>SecondValue<ept id="p4">*</ept>。</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve">
          <source>If you include the parameter names, the parameters can appear in any order.</source>
          <target state="translated">如果包含參數名稱，參數可以任何順序顯示。</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve">
          <source>You can use the $this automatic variable in script blocks that define the values of new properties and methods.</source>
          <target state="translated">您可以在定義新屬性和方法之值的指令碼區塊中使用 $this 自動變數。</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve">
          <source>The $this variable refers to the instance of the object to which the properties and methods are being added.</source>
          <target state="translated">$this 變數會參照新增屬性和方法時的目的地物件執行個體。</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve">
          <source>For more information about the $this variable, see about_Automatic_Variables.</source>
          <target state="translated">如需有關 $this 變數的詳細資訊，請參閱 about_Automatic_Variables。</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve">
          <source>RELATED LINKS</source>
          <target state="translated">相關的連結</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve">
          <source>Export-Clixml</source>
          <target state="translated">Export-clixml</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve">
          <source>Get-Member</source>
          <target state="translated">Get-Member</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve">
          <source>Import-Clixml</source>
          <target state="translated">Import-clixml</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve">
          <source>New-Object</source>
          <target state="translated">新物件</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve">
          <source>about_Automatic_Variables</source>
          <target state="translated">about_Automatic_Variables</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>