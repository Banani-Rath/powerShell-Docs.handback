<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-tw">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-1c394fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">b9d9fe88dea0a30af3763d1a9816d12bcd709f88</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">reference\5.0\Microsoft.PowerShell.Core\Get-Module.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions" />
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">65977d9e66583398b8c3a07a4ba14960872f99ce</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">e0893d1dfa91f844acbb388a596e695c5b737e48</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>powershell, cmdlet</source>
          <target state="translated">powershell 指令程式</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Get-Module</source>
          <target state="translated">Get-Module</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Get-Module</source>
          <target state="translated">Get-Module</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>SYNOPSIS</source>
          <target state="translated">概要</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Gets the modules that have been imported or that can be imported into the current session.</source>
          <target state="translated">取得已匯入或可匯入目前工作階段的模組。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>SYNTAX</source>
          <target state="translated">語法</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Loaded (Default)</source>
          <target state="translated">載入 （預設值）</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>CimSession</source>
          <target state="translated">CimSession</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Available</source>
          <target state="translated">可用</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>PsSession</source>
          <target state="translated">PsSession</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>DESCRIPTION</source>
          <target state="translated">描述</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>Get-Module<ept id="p1">**</ept> cmdlet gets the Windows PowerShell modules that have been imported, or that can be imported, into a Windows PowerShell session.</source>
          <target state="translated"> <bpt id="p1">**</bpt>Get-module<ept id="p1">**</ept> cmdlet 會取得之已匯入，或是，可以匯入 Windows PowerShell 工作階段的 Windows PowerShell 模組。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>The module object that <bpt id="p1">**</bpt>Get-Module<ept id="p1">**</ept> returns contains valuable information about the module.</source>
          <target state="translated">模組物件 <bpt id="p1">**</bpt>Get-module<ept id="p1">**</ept> 傳回包含模組的相關重要資訊。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>You can also pipe the module objects to other cmdlets, such as the Import-Module and Remove-Module cmdlets.</source>
          <target state="translated">您也可以使用管線傳送給其他指令程式，例如匯入模組和 Remove-module cmdlet 的模組物件。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Without parameters, <bpt id="p1">**</bpt>Get-Module<ept id="p1">**</ept> gets modules that have been imported into the current session.</source>
          <target state="translated">如果沒有參數， <bpt id="p1">**</bpt>Get-module<ept id="p1">**</ept> 取得已匯入目前的工作階段的模組。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>To get all installed modules, specify the <bpt id="p1">*</bpt>ListAvailable<ept id="p1">*</ept> parameter.</source>
          <target state="translated">若要取得所有已安裝的模組，請指定 <bpt id="p1">*</bpt>ListAvailable<ept id="p1">*</ept> 參數。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Get-Module<ept id="p1">**</ept> gets modules, but it does not import them.</source>
          <target state="translated"><bpt id="p1">**</bpt>Get-module<ept id="p1">**</ept> 取得模組，但不是匯入它們。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Starting in Windows PowerShell 3.0, modules are automatically imported when you use a command in the module, but a <bpt id="p1">**</bpt>Get-Module<ept id="p1">**</ept> command does not trigger an automatic import.</source>
          <target state="translated">從 Windows PowerShell 3.0 開始，會自動匯入模組時您可以使用的命令在模組中，但 <bpt id="p1">**</bpt>Get-module<ept id="p1">**</ept> 命令不會觸發自動匯入。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>You can also import the modules into your session by using the <bpt id="p1">**</bpt>Import-Module<ept id="p1">**</ept> cmdlet.</source>
          <target state="translated">您也可以匯入您的工作階段的模組，利用 <bpt id="p1">**</bpt>匯入模組<ept id="p1">**</ept> 指令程式。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Starting in Windows PowerShell 3.0, you can get and then, import modules from remote sessions into the local session.</source>
          <target state="translated">從 Windows PowerShell 3.0 開始，您可以取得並從到本機工作階段的遠端工作階段，然後匯入模組。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>This strategy uses the Implicit Remoting feature of Windows PowerShell and is equivalent to using the Import-PSSession cmdlet.</source>
          <target state="translated">此策略會使用 Windows PowerShell 的隱含遠端功能，相當於使用 Import-pssession cmdlet。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>When you use commands in modules imported from another session, the commands run implicitly in the remote session.</source>
          <target state="translated">當您從另一個工作階段匯入的模組中使用命令時，命令會執行隱含遠端工作階段中。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>This feature lets you manage the remote computer from the local session.</source>
          <target state="translated">這項功能可讓您從本機工作階段管理遠端電腦。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Also, starting in Windows PowerShell 3.0, you can use <bpt id="p1">**</bpt>Get-Module<ept id="p1">**</ept> and <bpt id="p2">**</bpt>Import-Module<ept id="p2">**</ept> to get and import Common Information Model (CIM) modules, in which the cmdlets are defined in Cmdlet Definition XML (CDXML) files.</source>
          <target state="translated">此外，從 Windows PowerShell 3.0 開始，您可以使用 <bpt id="p1">**</bpt>Get-module<ept id="p1">**</ept> 和 <bpt id="p2">**</bpt>匯入模組<ept id="p2">**</ept> 取得並匯入通用訊息模型 (CIM) 模組、 cmdlet 定義於 「 Cmdlet 定義 XML (CDXML) 」 檔案中。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>This feature lets you use cmdlets that are implemented in non-managed code assemblies, such as those written in C++.</source>
          <target state="translated">這項功能可讓您使用非 managed 程式碼組件，例如以 c + + 中實作的 cmdlet。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>With these new features, the <bpt id="p1">**</bpt>Get-Module<ept id="p1">**</ept> and <bpt id="p2">**</bpt>Import-Module<ept id="p2">**</ept> cmdlets become primary tools for managing heterogeneous enterprises that include computers that run the Windows operating system and computers that run other operating systems.</source>
          <target state="translated">使用這些新功能， <bpt id="p1">**</bpt>Get-module<ept id="p1">**</ept> 和 <bpt id="p2">**</bpt>匯入模組<ept id="p2">**</ept> cmdlet 在包含執行 Windows 作業系統和電腦的電腦的管理異質企業執行其他作業系統，就會變成主要工具。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>To manage remote computers that run the Windows operating system that have Windows PowerShell and Windows PowerShell remoting enabled, create a <bpt id="p1">**</bpt>PSSession<ept id="p1">**</ept> on the remote computer and then use the <bpt id="p2">*</bpt>PSSession<ept id="p2">*</ept> parameter of <bpt id="p3">**</bpt>Get-Module<ept id="p3">**</ept> to get the Windows PowerShell modules in the <bpt id="p4">**</bpt>PSSession<ept id="p4">**</ept>.</source>
          <target state="translated">若要管理遠端電腦執行 Windows 作業系統的 Windows PowerShell 和 Windows PowerShell 遠端功能，建立 <bpt id="p1">**</bpt>PSSession<ept id="p1">**</ept> 在遠端電腦，然後使用 <bpt id="p2">*</bpt>PSSession<ept id="p2">*</ept> 參數 <bpt id="p3">**</bpt>Get-module<ept id="p3">**</ept> 取得 Windows PowerShell 模組中 <bpt id="p4">**</bpt>PSSession<ept id="p4">**</ept>。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>When you import the modules, and then use the imported commands in the current session, the commands run implicitly in the <bpt id="p1">**</bpt>PSSession<ept id="p1">**</ept> on the remote computer.</source>
          <target state="translated">當您匯入模組，然後使用目前的工作階段中的 [匯入的命令，命令會執行隱含地在 <bpt id="p1">**</bpt>PSSession<ept id="p1">**</ept> 遠端電腦上。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>You can use this strategy to manage the remote computer.</source>
          <target state="translated">您可以使用這個策略來管理遠端電腦。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>You can use a similar strategy to manage computers that do not have Windows PowerShell remoting enabled.</source>
          <target state="translated">您可以使用類似的策略來管理未啟用 Windows PowerShell 遠端功能的電腦。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>These include computers that are not running the Windows operating system, and computers that have Windows PowerShell but do not have Windows PowerShell remoting enabled.</source>
          <target state="translated">這些包括不是執行 Windows 作業系統的電腦和 Windows PowerShell 但未啟用 Windows PowerShell 遠端功能的電腦。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Start by creating a CIM session on the remote computer.</source>
          <target state="translated">從遠端電腦上建立 CIM 工作階段開始。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>A CIM session is a connection to Windows Management Instrumentation (WMI) on the remote computer.</source>
          <target state="translated">CIM 工作階段是在遠端電腦上的 Windows Management Instrumentation (WMI) 連線。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Then use the <bpt id="p1">*</bpt>CIMSession<ept id="p1">*</ept> parameter of <bpt id="p2">**</bpt>Get-Module<ept id="p2">**</ept> to get CIM modules from the CIM session.</source>
          <target state="translated">然後使用 <bpt id="p1">*</bpt>CIMSession<ept id="p1">*</ept> 參數 <bpt id="p2">**</bpt>Get-module<ept id="p2">**</ept> 從 CIM 工作階段取得 CIM 模組。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>When you import a CIM module by using the <bpt id="p1">**</bpt>Import-Module<ept id="p1">**</ept> cmdlet and then run the imported commands, the commands run implicitly on the remote computer.</source>
          <target state="translated">當您使用匯入 CIM 模組 <bpt id="p1">**</bpt>匯入模組<ept id="p1">**</ept> 指令程式，然後執行匯入的命令，命令會在遠端電腦隱含地執行。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>You can use this WMI and CIM strategy to manage the remote computer.</source>
          <target state="translated">您可以使用這個 WMI 和 CIM 策略來管理遠端電腦。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>EXAMPLES</source>
          <target state="translated">範例</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Example 1: Get modules imported into the current session</source>
          <target state="translated">範例 1︰ 取得模組匯入目前工作階段</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>This command gets modules that have been imported into the current session.</source>
          <target state="translated">此命令取得已匯入目前工作階段的模組。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Example 2: Get installed modules and available modules</source>
          <target state="translated">範例 2︰ 取得已安裝的模組與可用的模組</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>This command gets the modules that are installed on the computer and can be imported into the current session.</source>
          <target state="translated">此命令取得已安裝於電腦上，且可匯入目前工作階段的模組。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Get-Module<ept id="p1">**</ept> looks for available modules in the path specified by the <bpt id="p2">**</bpt>$env:PSModulePath<ept id="p2">**</ept> environment variable.</source>
          <target state="translated"><bpt id="p1">**</bpt>Get-module<ept id="p1">**</ept> 可用的模組中所指定的路徑看起來 <bpt id="p2">**</bpt>$env: PSModulePath<ept id="p2">**</ept> 環境變數。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>For more information about <bpt id="p1">**</bpt>PSModulePath<ept id="p1">**</ept>, see about_Modules and about_Environment_Variables.</source>
          <target state="translated">如需詳細資訊 <bpt id="p1">**</bpt>PSModulePath<ept id="p1">**</ept>, ，請參閱 about_Modules 和 about_Environment_Variables。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Example 3: Get all exported files</source>
          <target state="translated">範例 3︰ 取得所有匯出的檔案</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>This command gets all of the exported files for all available modules.</source>
          <target state="translated">此命令取得所有可用模組的所有匯出檔案。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Example 4: Get a module by its fully qualified name</source>
          <target state="translated">範例 4︰ 取得模組的完整限定名稱</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>This command gets the <bpt id="p1">**</bpt>Microsoft.PowerShell.Management<ept id="p1">**</ept> module by specifying the fully qualified name of the module by using the <bpt id="p2">*</bpt>FullyQualifiedName<ept id="p2">*</ept> parameter.</source>
          <target state="translated">此命令會取得 <bpt id="p1">**</bpt>Microsoft.PowerShell.Management<ept id="p1">**</ept> 藉由指定模組的完整的名稱所使用的模組 <bpt id="p2">*</bpt>FullyQualifiedName<ept id="p2">*</ept> 參數。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>The command then pipes the results into the Format-Table cmdlet to format the results as a table with Name and Version as the column headings.</source>
          <target state="translated">此命令接著管線將結果傳送至 Format-table cmdlet，將結果格式化為資料表名稱和版本做為資料行標題。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Example 5: Get properties of a module</source>
          <target state="translated">範例 5︰ 取得模組屬性</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>This command gets the properties of the <bpt id="p1">**</bpt>PSModuleInfo<ept id="p1">**</ept> object that <bpt id="p2">**</bpt>Get-Module<ept id="p2">**</ept> returns.</source>
          <target state="translated">此命令會取得的屬性 <bpt id="p1">**</bpt>PSModuleInfo<ept id="p1">**</ept> 物件 <bpt id="p2">**</bpt>Get-module<ept id="p2">**</ept> 傳回。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>There is one object for each module file.</source>
          <target state="translated">每個模組檔案都有一個物件。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>You can use the properties to format and filter the module objects.</source>
          <target state="translated">您可以使用屬性來格式化和篩選模組物件。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>For more information about the properties, see PSModule Propertieshttp://go.microsoft.com/fwlink/?LinkId=143624 (http://go.microsoft.com/fwlink/?LinkId=143624) in the MSDN  library.</source>
          <target state="translated">如需屬性的詳細資訊，請參閱 MSDN library 中的 PSModule Propertieshttp://go.microsoft.com/fwlink/?LinkId=143624 (http://go.microsoft.com/fwlink/?LinkId=143624)。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>The output includes the new properties, such as <bpt id="p1">**</bpt>Author<ept id="p1">**</ept> and <bpt id="p2">**</bpt>CompanyName<ept id="p2">**</ept>, that were introduced in Windows PowerShell 3.0.</source>
          <target state="translated">輸出包含新屬性，例如 <bpt id="p1">**</bpt>作者<ept id="p1">**</ept> 和 <bpt id="p2">**</bpt>CompanyName<ept id="p2">**</ept>, ，所導入的 Windows PowerShell 3.0。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Example 6: Group all modules by name</source>
          <target state="translated">範例 6︰ 依名稱分組的所有模組</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>This command gets all module files, both imported and available, and then groups them by module name.</source>
          <target state="translated">此命令會取得所有模組檔案匯入和使用，並再將它們分組模組名稱。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>This lets you see the module files that each script is exporting.</source>
          <target state="translated">這可讓您查看每個指令碼正在匯出的模組檔案。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Example 7: Display the contents of a module manifest</source>
          <target state="translated">範例 7︰ 顯示模組資訊清單的內容</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>These commands display the contents of the module manifest for the Windows PowerShell<bpt id="p1">**</bpt>BitsTransfer<ept id="p1">**</ept> module.</source>
          <target state="translated">這些命令會顯示適用於 Windows PowerShell 模組資訊清單的內容<bpt id="p1">**</bpt>BitsTransfer<ept id="p1">**</ept> 模組。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>Modules are not required to have manifest files.</source>
          <target state="translated">模組不需要有資訊清單檔案。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>When they do have a manifest file, the manifest file is required only to include a version number.</source>
          <target state="translated">當它們有資訊清單檔案時，資訊清單檔必須只包含版本號碼。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>However, manifest files often provide useful information about a module, its requirements, and its contents.</source>
          <target state="translated">不過，資訊清單檔案通常會提供模組、其需求及其內容的實用資訊。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>Example 8: List files in module directory</source>
          <target state="translated">範例 8︰ 列出模組目錄中的檔案</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>This command lists the files in the directory of the module.</source>
          <target state="translated">此命令會列出模組的目錄中的檔案。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>This is another way to determine what is in a module before you import it.</source>
          <target state="translated">這是在您將模組匯入之前，可用來判斷模組中有哪些內容的另一種方式。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>Some modules might have help files or ReadMe files that describe the module.</source>
          <target state="translated">某些模組可能含有說明檔或描述模組的讀我檔案。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>Example 9: Get modules installed on a computer</source>
          <target state="translated">範例 9︰ 取得電腦上安裝的模組</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>These commands get the modules that are installed on the Server01 computer.</source>
          <target state="translated">這些命令會取得 Server01 電腦上安裝的模組。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>The first command uses the <bpt id="p1">**</bpt>New-PSSession<ept id="p1">**</ept> cmdlet to create a <bpt id="p2">**</bpt>PSSession<ept id="p2">**</ept> on the Server01 computer.</source>
          <target state="translated">第一個命令使用 <bpt id="p1">**</bpt>New-pssession<ept id="p1">**</ept> 指令程式可建立 <bpt id="p2">**</bpt>PSSession<ept id="p2">**</ept> Server01 電腦上。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>The command saves the <bpt id="p1">**</bpt>PSSession<ept id="p1">**</ept> in the $s variable.</source>
          <target state="translated">命令會將儲存 <bpt id="p1">**</bpt>PSSession<ept id="p1">**</ept> $s 變數中。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>The second command uses the <bpt id="p1">*</bpt>PSSession<ept id="p1">*</ept> and <bpt id="p2">*</bpt>ListAvailable<ept id="p2">*</ept> parameters of <bpt id="p3">**</bpt>Get-Module<ept id="p3">**</ept> to get the modules in the <bpt id="p4">**</bpt>PSSession<ept id="p4">**</ept> in the $s variable.</source>
          <target state="translated">第二個命令會使用 <bpt id="p1">*</bpt>PSSession<ept id="p1">*</ept> 和 <bpt id="p2">*</bpt>ListAvailable<ept id="p2">*</ept> 參數 <bpt id="p3">**</bpt>Get-module<ept id="p3">**</ept> 取得模組中 <bpt id="p4">**</bpt>PSSession<ept id="p4">**</ept> $s 變數中。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>If you pipe modules from other sessions to the <bpt id="p1">**</bpt>Import-Module<ept id="p1">**</ept> cmdlet, <bpt id="p2">**</bpt>Import-Module<ept id="p2">**</ept> imports the module into the current session by using the implicit remoting feature.</source>
          <target state="translated">如果您使用管線傳送模組從其他工作階段 <bpt id="p1">**</bpt>匯入模組<ept id="p1">**</ept> cmdlet， <bpt id="p2">**</bpt>匯入模組<ept id="p2">**</ept> 模組匯入到目前工作階段使用的隱含遠端處理功能。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>This is equivalent to using the <bpt id="p1">**</bpt>Import-PSSession<ept id="p1">**</ept> cmdlet.</source>
          <target state="translated">這相當於使用 <bpt id="p1">**</bpt>Import-pssession<ept id="p1">**</ept> 指令程式。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>You can use the cmdlets from the module in the current session, but commands that use these cmdlets actually run the remote session.</source>
          <target state="translated">您可以使用目前工作階段中模組的 Cmdlet，但是，使用這些 Cmdlet 的命令實際上會執行遠端工作階段。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">**</bpt>Import-Module<ept id="p1">**</ept> and <bpt id="p2">**</bpt>Import-PSSession<ept id="p2">**</ept>.</source>
          <target state="translated">如需詳細資訊，請參閱 <bpt id="p1">**</bpt>匯入模組<ept id="p1">**</ept> 和 <bpt id="p2">**</bpt>Import-pssession<ept id="p2">**</ept>。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>Example 10: Manage a computer that does not run the Windows operating system</source>
          <target state="translated">範例 10︰ 管理不會執行 Windows 作業系統的電腦</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>The commands in this example enable you to manage the storage systems of a remote computer that is not running the Windows operating system.</source>
          <target state="translated">此範例中的命令可讓您管理儲存體系統未執行 Windows 作業系統的遠端電腦。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>In this example, because the administrator of the computer has installed the Module Discovery WMI provider, the CIM commands can use the default values, which are designed for the provider.</source>
          <target state="translated">在這個範例中，因為電腦的系統管理員已安裝「模組探索」WMI 提供者，所以 CIM 命令可以使用專為提供者設計的預設值。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>PARAMETERS</source>
          <target state="translated">參數</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>-All</source>
          <target state="translated">-所有</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>Indicates that this cmdlet gets all modules in each module folder, including nested modules, manifest (.psd1) files, script module (.psm1) files, and binary module (.dll) files.</source>
          <target state="translated">指出此 cmdlet 會取得每個模組資料夾，包括巢狀的模組、 資訊清單 (.psd1) 檔案、 指令碼模組 (.psm1) 檔案，以及二進位模組 (.dll) 檔案中所有模組。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>Without this parameter, <bpt id="p1">**</bpt>Get-Module<ept id="p1">**</ept> gets only the default module in each module folder.</source>
          <target state="translated">如果沒有這個參數， <bpt id="p1">**</bpt>Get-module<ept id="p1">**</ept> 取得每個模組資料夾中的預設模組。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>-CimNamespace</source>
          <target state="translated">-CimNamespace</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>Specifies the namespace of an alternate CIM provider that exposes CIM modules.</source>
          <target state="translated">指定公開 CIM 模組的替代 CIM 提供者命名空間。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>The default value is the namespace of the Module Discovery WMI provider.</source>
          <target state="translated">預設值為「模組探索」WMI 提供者的命名空間。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>Use this parameter to get CIM modules from computers and devices that are not running the Windows operating system.</source>
          <target state="translated">您可以使用這個參數來從非 Windows 作業系統的電腦與裝置取得 CIM 模組。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>This parameter was introduced in Windows PowerShell 3.0.</source>
          <target state="translated">此參數是在 Windows PowerShell 3.0 引進。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>-CimResourceUri</source>
          <target state="translated">-CimResourceUri</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>Specifies an alternate location for CIM modules.</source>
          <target state="translated">指定 CIM 模組的替代位置。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>The default value is the resource URI of the Module Discovery WMI provider on the remote computer.</source>
          <target state="translated">預設值是資源的遠端電腦上的模組探索 」 WMI 提供者的 URI。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>Use this parameter to get CIM modules from computers and devices that are not running the Windows operating system.</source>
          <target state="translated">您可以使用這個參數來從非 Windows 作業系統的電腦與裝置取得 CIM 模組。</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>This parameter was introduced in Windows PowerShell 3.0.</source>
          <target state="translated">此參數是在 Windows PowerShell 3.0 引進。</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>-CimSession</source>
          <target state="translated">-CimSession</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>Specifies a CIM session on the remote computer.</source>
          <target state="translated">指定遠端電腦上的 CIM 工作階段。</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>Enter a variable that contains the CIM session or a command that gets the CIM session, such as a Get-CIMSessionhttp://go.microsoft.com/fwlink/?LinkId=227966 command.</source>
          <target state="translated">輸入包含 CIM 工作階段或可取得 CIM 工作階段，例如 Get CIMSessionhttp://go.microsoft.com/fwlink/?LinkId=227966 命令的命令的變數。</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Get-Module<ept id="p1">**</ept> uses the CIM session connection to get modules from the remote computer.</source>
          <target state="translated"><bpt id="p1">**</bpt>Get-module<ept id="p1">**</ept> 使用 CIM 工作階段連線從遠端電腦取得模組。</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>When you import the module by using the <bpt id="p1">**</bpt>Import-Module<ept id="p1">**</ept> cmdlet and use the commands from the imported module in the current session, the commands actually run on the remote computer.</source>
          <target state="translated">當您使用匯入模組 <bpt id="p1">**</bpt>匯入模組<ept id="p1">**</ept> 指令程式並在目前工作階段中使用匯入模組的命令時，命令實際上會在遠端電腦上執行。</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>You can use this parameter to get modules from computers and devices that are not running the Windows operating system, and computers that have Windows PowerShell, but do not have Windows PowerShell remoting enabled.</source>
          <target state="translated">您可以使用這個參數，從電腦和裝置不是執行 Windows 作業系統，以及含有 Windows PowerShell 但未啟用 Windows PowerShell 遠端功能的電腦取得模組。</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">*</bpt>CimSession<ept id="p1">*</ept> parameter gets all modules in the <bpt id="p2">**</bpt>CIMSession<ept id="p2">**</ept>.</source>
          <target state="translated"> <bpt id="p1">*</bpt>CimSession<ept id="p1">*</ept> 參數會取得所有模組中 <bpt id="p2">**</bpt>CIMSession<ept id="p2">**</ept>。</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>However, you can import only CIM-based and Cmdlet Definition XML (CDXML)-based modules.</source>
          <target state="translated">不過，您可以只匯入 CIM 型和「Cmdlet 定義 XML (CDXML)」型模組。</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>-FullyQualifiedName</source>
          <target state="translated">-FullyQualifiedName</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>Specifies names of modules in the form of <bpt id="p1">**</bpt>ModuleSpecification<ept id="p1">**</ept> objects.</source>
          <target state="translated">指定的模組名稱的形式 <bpt id="p1">**</bpt>ModuleSpecification<ept id="p1">**</ept> 物件。</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>These objects are described in the Remarks section of ModuleSpecification Constructor (Hashtable)http://msdn.microsoft.com/library/windows/desktop/jj136290(v=vs.85).aspx (http://msdn.microsoft.com/library/windows/desktop/jj136290(v=vs.85).aspx) in the Microsoft Developer Network (MSDN) library.</source>
          <target state="translated">這些物件 &lt; 備註 &gt; 一節所述的 ModuleSpecification Constructor (Hashtable) http://msdn.microsoft.com/library/windows/desktop/jj136290 (vs.85 (Microsoft Developer Network (MSDN) 文件庫中的 http://msdn.microsoft.com/library/windows/desktop/jj136290 (vs.85)。</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>For example, the <bpt id="p1">*</bpt>FullyQualifiedName<ept id="p1">*</ept> parameter accepts a module name that is specified in the following formats:</source>
          <target state="translated">例如， <bpt id="p1">*</bpt>FullyQualifiedName<ept id="p1">*</ept> 參數接受下列格式指定的模組名稱︰</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>@{ModuleName = "modulename"; ModuleVersion = "version_number"} @{ModuleName = "modulename"; ModuleVersion = "version_number"; Guid = "GUID"}.</source>
          <target state="translated">@{ModuleName ="modulename";ModuleVersion ="version_number"} @{ModuleName ="modulename";ModuleVersion ="version_number";Guid ="GUID"}。</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>ModuleName<ept id="p1">**</ept> and <bpt id="p2">**</bpt>ModuleVersion<ept id="p2">**</ept> are required, but <bpt id="p3">**</bpt>Guid<ept id="p3">**</ept> is optional.</source>
          <target state="translated"><bpt id="p1">**</bpt>ModuleName<ept id="p1">**</ept> 和 <bpt id="p2">**</bpt>ModuleVersion<ept id="p2">**</ept> 是必要的但 <bpt id="p3">**</bpt>Guid<ept id="p3">**</ept> 是選擇性的。</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>You cannot specify the <bpt id="p1">*</bpt>FullyQualifiedName<ept id="p1">*</ept> parameter in the same command as a <bpt id="p2">*</bpt>Name<ept id="p2">*</ept> parameter.</source>
          <target state="translated">您不能指定 <bpt id="p1">*</bpt>FullyQualifiedName<ept id="p1">*</ept> 中一樣的命令參數 <bpt id="p2">*</bpt>名稱<ept id="p2">*</ept> 參數。</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>-ListAvailable</source>
          <target state="translated">-ListAvailable</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>Indicates that this cmdlet gets all installed modules.</source>
          <target state="translated">指出此 cmdlet 會取得所有已安裝的模組。</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Get-Module<ept id="p1">**</ept> gets modules in paths listed in the <bpt id="p2">**</bpt>PSModulePath<ept id="p2">**</ept> environment variable.</source>
          <target state="translated"><bpt id="p1">**</bpt>Get-module<ept id="p1">**</ept> 取得模組中所列路徑 <bpt id="p2">**</bpt>PSModulePath<ept id="p2">**</ept> 環境變數。</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>Without this parameter, <bpt id="p1">**</bpt>Get-Module<ept id="p1">**</ept> gets only the modules that are both listed in the <bpt id="p2">**</bpt>PSModulePath<ept id="p2">**</ept> environment variable, and that are loaded in the current session.</source>
          <target state="translated">如果沒有這個參數， <bpt id="p1">**</bpt>Get-module<ept id="p1">**</ept> 都的模組中列出的取得 <bpt id="p2">**</bpt>PSModulePath<ept id="p2">**</ept> 環境變數，且會載入目前的工作階段中。</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source><bpt id="p1">*</bpt>ListAvailable<ept id="p1">*</ept> does not return information about modules that are not found in the <bpt id="p2">**</bpt>PSModulePath<ept id="p2">**</ept> environment variable, even if those modules are loaded in the current session.</source>
          <target state="translated"><bpt id="p1">*</bpt>ListAvailable<ept id="p1">*</ept> 不會傳回哪些模組中找不到的資訊 <bpt id="p2">**</bpt>PSModulePath<ept id="p2">**</ept> 環境變數，即使這些模組已載入目前的工作階段中。</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>-Name</source>
          <target state="translated">-Name</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>Specifies names or name patterns of modules that this cmdlet gets.</source>
          <target state="translated">指定名稱或模組，此 cmdlet 會取得名稱模式。</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>Wildcard characters are permitted.</source>
          <target state="translated">允許使用萬用字元。</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>You can also pipe the names to <bpt id="p1">**</bpt>Get-Module<ept id="p1">**</ept>.</source>
          <target state="translated">您也可以使用管線將名稱 <bpt id="p1">**</bpt>Get-module<ept id="p1">**</ept>。</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>You cannot specify the <bpt id="p1">*</bpt>FullyQualifiedName<ept id="p1">*</ept> parameter in the same command as a <bpt id="p2">*</bpt>Name<ept id="p2">*</ept> parameter.</source>
          <target state="translated">您不能指定 <bpt id="p1">*</bpt>FullyQualifiedName<ept id="p1">*</ept> 中一樣的命令參數 <bpt id="p2">*</bpt>名稱<ept id="p2">*</ept> 參數。</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source><bpt id="p1">*</bpt>Name<ept id="p1">*</ept> cannot accept a module GUID as a value.</source>
          <target state="translated"><bpt id="p1">*</bpt>名稱<ept id="p1">*</ept> 無法接受模組 GUID 做為值。</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>To return modules by specifying a GUID, use <bpt id="p1">*</bpt>FullyQualifiedName<ept id="p1">*</ept> instead.</source>
          <target state="translated">傳回指定 GUID 的模組，請使用 <bpt id="p1">*</bpt>FullyQualifiedName<ept id="p1">*</ept> 改。</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>-PSSession</source>
          <target state="translated">Export-pssession</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>Gets the modules in the specified user-managed Windows PowerShell session (<bpt id="p1">**</bpt>PSSession<ept id="p1">**</ept>).</source>
          <target state="translated">取得指定的使用者管理 Windows PowerShell 工作階段中的模組 (<bpt id="p1">**</bpt>PSSession<ept id="p1">**</ept>)。</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>Enter a variable that contains the session, a command that gets the session, such as a Get-PSSession command, or a command that creates the session, such as a New-PSSession command.</source>
          <target state="translated">輸入包含工作階段、 命令可取得工作階段，例如 Get-pssession 命令或建立工作階段，例如 New-pssession 命令的命令的變數。</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>When the session is connected to a remote computer, you must specify the <bpt id="p1">*</bpt>ListAvailable<ept id="p1">*</ept> parameter.</source>
          <target state="translated">當工作階段連線到遠端電腦時，您必須指定 <bpt id="p1">*</bpt>ListAvailable<ept id="p1">*</ept> 參數。</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">**</bpt>Get-Module<ept id="p1">**</ept> command that uses the <bpt id="p2">*</bpt>PSSession<ept id="p2">*</ept> parameter is equivalent to using the Invoke-Command cmdlet to run a <ph id="ph1">`Get-Module -ListAvailable`</ph> command in a <bpt id="p3">**</bpt>PSSession<ept id="p3">**</ept>.</source>
          <target state="translated">A <bpt id="p1">**</bpt>Get-module<ept id="p1">**</ept> 命令使用 <bpt id="p2">*</bpt>PSSession<ept id="p2">*</ept> 參數相當於使用 Invoke-command cmdlet 執行 <ph id="ph1">`Get-Module -ListAvailable`</ph> 命令 <bpt id="p3">**</bpt>PSSession<ept id="p3">**</ept>。</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>This parameter was introduced in Windows PowerShell 3.0.</source>
          <target state="translated">此參數是在 Windows PowerShell 3.0 引進。</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>-Refresh</source>
          <target state="translated">重新整理</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>Indicates that this cmdlet refreshes the cache of installed commands.</source>
          <target state="translated">表示此指令程式重新整理快取的已安裝的命令。</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>The command cache is created when the session starts.</source>
          <target state="translated">當工作階段啟動時，即會建立命令快取。</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>It enables the Get-Command cmdlet to get commands from modules that are not imported into the session.</source>
          <target state="translated">它可讓 Get-command cmdlet 取得命令不會匯入工作階段的模組中。</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>This parameter is designed for development and testing scenarios in which the contents of modules have changed since the session started.</source>
          <target state="translated">這個參數是專為開發和測試案例所設計，在這類案例中，模組的內容會在工作階段開始後變更。</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>When you specify the <bpt id="p1">*</bpt>Refresh<ept id="p1">*</ept> parameter in a command, you must specify <bpt id="p2">*</bpt>ListAvailable<ept id="p2">*</ept>.</source>
          <target state="translated">當您指定 <bpt id="p1">*</bpt>重新整理<ept id="p1">*</ept> 參數在命令中的，您必須指定 <bpt id="p2">*</bpt>ListAvailable<ept id="p2">*</ept>。</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>This parameter was introduced in Windows PowerShell 3.0.</source>
          <target state="translated">此參數是在 Windows PowerShell 3.0 引進。</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>CommonParameters</source>
          <target state="translated">CommonParameters</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutVariable, -OutBuffer, -PipelineVariable, -Verbose, -WarningAction, and -WarningVariable.</source>
          <target state="translated">這個 cmdlet 支援一般參數:-偵錯、-ErrorAction、-ErrorVariable、-InformationAction-InformationVariable、-OutVariable、-OutBuffer、-PipelineVariable、-Verbose、-WarningAction 以及-WarningVariable。</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>For more information, see about_CommonParameters (http://go.microsoft.com/fwlink/?LinkID=113216).</source>
          <target state="translated">如需詳細資訊，請參閱 about_CommonParameters (http://go.microsoft.com/fwlink/?LinkID=113216)。</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>INPUTS</source>
          <target state="translated">輸入</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>System.String</source>
          <target state="translated">System.String</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>You can pipe module names to this cmdlet.</source>
          <target state="translated">您可以透過管道傳送到此指令程式的模組名稱。</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>.</source>
          <target state="translated">.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>OUTPUTS</source>
          <target state="translated">輸出</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>System.Management.Automation.PSModuleInfo</source>
          <target state="translated">System.Management.Automation.PSModuleInfo</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source>This cmdlet returns objects that represent modules.</source>
          <target state="translated">此 cmdlet 會傳回代表模組的物件。</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source>When you specify the <bpt id="p1">*</bpt>ListAvailable<ept id="p1">*</ept> parameter, <bpt id="p2">**</bpt>Get-Module<ept id="p2">**</ept> returns a <bpt id="p3">**</bpt>ModuleInfoGrouping<ept id="p3">**</ept> object, which is a type of <bpt id="p4">**</bpt>PSModuleInfo<ept id="p4">**</ept> object that has the same properties and methods.</source>
          <target state="translated">當您指定 <bpt id="p1">*</bpt>ListAvailable<ept id="p1">*</ept> 參數， <bpt id="p2">**</bpt>Get-module<ept id="p2">**</ept> 傳回 <bpt id="p3">**</bpt>ModuleInfoGrouping<ept id="p3">**</ept> 物件，它是一種類型的 <bpt id="p4">**</bpt>PSModuleInfo<ept id="p4">**</ept> 有相同的屬性和方法的物件。</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source>NOTES</source>
          <target state="translated">附註</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source>Beginning in Windows PowerShell 3.0, the core commands that are included in Windows PowerShell are packaged in modules.</source>
          <target state="translated">從 Windows PowerShell 3.0 開始，Windows PowerShell 中包含的核心命令已經封裝成模組。</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source>The exception is <bpt id="p1">**</bpt>Microsoft.PowerShell.Core<ept id="p1">**</ept>, which is a snap-in (<bpt id="p2">**</bpt>PSSnapin<ept id="p2">**</ept>).</source>
          <target state="translated">例外狀況是 <bpt id="p1">**</bpt>Microsoft.PowerShell.Core<ept id="p1">**</ept>, ，這是一個嵌入式管理單元 (<bpt id="p2">**</bpt>PSSnapin<ept id="p2">**</ept>)。</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source>By default, only the <bpt id="p1">**</bpt>Microsoft.PowerShell.Core<ept id="p1">**</ept> snap-in is added to the session.</source>
          <target state="translated">根據預設，只有 <bpt id="p1">**</bpt>Microsoft.PowerShell.Core<ept id="p1">**</ept> 嵌入式管理單元新增至工作階段。</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve">
          <source>Modules are imported automatically on first use and you can use the <bpt id="p1">**</bpt>Import-Module<ept id="p1">**</ept> cmdlet to import them.</source>
          <target state="translated">模組會自動匯入第一次使用，而且您可以使用 <bpt id="p1">**</bpt>匯入模組<ept id="p1">**</ept> cmdlet 來匯入它們。</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source>Starting in Windows PowerShell 3.0, the core commands that are installed with Windows PowerShell are packaged in modules.</source>
          <target state="translated">從 Windows PowerShell 3.0 開始，隨 Windows PowerShell 安裝的核心命令已經封裝成模組。</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source>In Windows PowerShell 2.0, and in host programs that create older-style sessions in later versions of Windows PowerShell, the core commands are packaged in snap-ins (<bpt id="p1">**</bpt>PSSnapins<ept id="p1">**</ept>).</source>
          <target state="translated">在 Windows PowerShell 2.0 中，並在更新版本的 Windows PowerShell 中建立舊式工作階段主機程式中，核心命令封裝在嵌入式管理單元 (<bpt id="p1">**</bpt>PSSnapins<ept id="p1">**</ept>)。</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source>The exception is <bpt id="p1">**</bpt>Microsoft.PowerShell.Core<ept id="p1">**</ept>, which is always a snap-in.</source>
          <target state="translated">例外狀況是 <bpt id="p1">**</bpt>Microsoft.PowerShell.Core<ept id="p1">**</ept>, ，一律為嵌入式管理單元。</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve">
          <source>Also, remote sessions, such as those started by the <bpt id="p1">**</bpt>New-PSSession<ept id="p1">**</ept> cmdlet, are older-style sessions that include core snap-ins.</source>
          <target state="translated">此外，遠端工作階段，例如藉由 <bpt id="p1">**</bpt>New-pssession<ept id="p1">**</ept> 指令程式，會包含核心嵌入式管理單元的舊式工作階段。</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve">
          <source>For information about the <bpt id="p1">**</bpt>CreateDefault2<ept id="p1">**</ept> method that creates newer-style sessions with core modules, see CreateDefault2 Methodhttp://msdn.microsoft.com/en-us/library/windows/desktop/system.management.automation.runspaces.initialsessionstate.createdefault2(v=VS.85).aspx (http://msdn.microsoft.com/en-us/library/windows/desktop/system.management.automation.runspaces.initialsessionstate.createdefault2(v=VS.85).aspx) in the MSDN library.</source>
          <target state="translated">如需有關資訊 <bpt id="p1">**</bpt>CreateDefault2<ept id="p1">**</ept> 方法以建立較新樣式的工作階段使用核心模組，請參閱 &lt; CreateDefault2 Methodhttp://msdn.microsoft.com/en-us/library/windows/desktop/system.management.automation.runspaces.initialsessionstate.createdefault2 (vs.85 (MSDN library 中的 http://msdn.microsoft.com/en-us/library/windows/desktop/system.management.automation.runspaces.initialsessionstate.createdefault2 (vs.85)。</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Get-Module<ept id="p1">**</ept> gets only modules in locations that are stored in the value of the <bpt id="p2">**</bpt>PSModulePath<ept id="p2">**</ept> environment variable ($env:PSModulePath).</source>
          <target state="translated"><bpt id="p1">**</bpt>Get-module<ept id="p1">**</ept> 只會取得模組中的值中儲存的位置 <bpt id="p2">**</bpt>PSModulePath<ept id="p2">**</ept> 環境變數 ($env: PSModulePath)。</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve">
          <source>You can use the <bpt id="p1">*</bpt>Path<ept id="p1">*</ept> parameter of the <bpt id="p2">**</bpt>Import-Module<ept id="p2">**</ept> cmdlet to import modules in other locations, but you cannot use the <bpt id="p3">**</bpt>Get-Module<ept id="p3">**</ept> cmdlet to get them.</source>
          <target state="translated">您可以使用 <bpt id="p1">*</bpt>路徑<ept id="p1">*</ept> 參數 <bpt id="p2">**</bpt>匯入模組<ept id="p2">**</ept> cmdlet 來匯入模組的其他位置，但是您不能使用 <bpt id="p3">**</bpt>Get-module<ept id="p3">**</ept> cmdlet 來取得它們。</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve">
          <source>Also, starting in Windows PowerShell 3.0, new properties have been added to the object that <bpt id="p1">**</bpt>Get-Module<ept id="p1">**</ept> returns that make it easier to learn about modules even before they are imported.</source>
          <target state="translated">而且，從 Windows PowerShell 3.0 開始，新的屬性已新增至物件的 <bpt id="p1">**</bpt>Get-module<ept id="p1">**</ept> 容易瞭解的模組匯入之前傳回。</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve">
          <source>All properties are populated before importing.</source>
          <target state="translated">匯入之前，會填入所有的屬性。</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve">
          <source>These include the <bpt id="p1">**</bpt>ExportedCommands<ept id="p1">**</ept>, <bpt id="p2">**</bpt>ExportedCmdlets<ept id="p2">**</ept> and <bpt id="p3">**</bpt>ExportedFunctions<ept id="p3">**</ept> properties that list the commands that the module exports.</source>
          <target state="translated">這些包括 <bpt id="p1">**</bpt>ExportedCommands<ept id="p1">**</ept>, ，<bpt id="p2">**</bpt>ExportedCmdlets<ept id="p2">**</ept> 和 <bpt id="p3">**</bpt>ExportedFunctions<ept id="p3">**</ept> 列出模組匯出的命令的屬性。</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">*</bpt>ListAvailable<ept id="p1">*</ept> parameter gets only well-formed modules, that is, folders that contain at least one file whose base name is the same as the name of the module folder.</source>
          <target state="translated"> <bpt id="p1">*</bpt>ListAvailable<ept id="p1">*</ept> 參數只會取得語式正確的模組，也就是包含至少一個檔案，其基底名稱會與模組資料夾的名稱相同的資料夾。</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve">
          <source>The base name is the name without the file name extension.</source>
          <target state="translated">基底名稱是不含副檔名的名稱。</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve">
          <source>Folders that contain files that have different names are considered to be containers, but not modules.</source>
          <target state="translated">包含具有不同的名稱的檔案的資料夾會被視為容器，而非模組。</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve">
          <source>To get modules that are implemented as .dll files, but are not enclosed in a module folder, specify both the <bpt id="p1">*</bpt>ListAvailable<ept id="p1">*</ept> and <bpt id="p2">*</bpt>All<ept id="p2">*</ept> parameters.</source>
          <target state="translated">若要取得模組會實作為.dll 檔案，但未包含在模組資料夾中，請同時指定 <bpt id="p1">*</bpt>ListAvailable<ept id="p1">*</ept> 和 <bpt id="p2">*</bpt>所有<ept id="p2">*</ept> 參數。</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve">
          <source>To use the CIM session feature, the remote computer must have WS-Management remoting and Windows Management Instrumentation (WMI), which is the Microsoft implementation of the Common Information Model (CIM) standard.</source>
          <target state="translated">若要使用 CIM 工作階段功能，遠端電腦必須具備 WS-Management 遠端功能和 Windows Management Instrumentation (WMI)，這是 Microsoft 實作的「通用訊息模型 (CIM)」標準。</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve">
          <source>The computer must also have the Module Discovery WMI provider or an alternate WMI provider that has the same basic features.</source>
          <target state="translated">電腦也必須擁有具有相同基本功能的「模組探索」WMI 提供者或替代 WMI 提供者。</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve">
          <source>You can use the CIM session feature on computers that are not running the Windows operating system and on Windows computers that have Windows PowerShell, but do not have Windows PowerShell remoting enabled.</source>
          <target state="translated">未執行 Windows 作業系統的電腦上，並在 Windows PowerShell 但未啟用 Windows PowerShell 遠端功能的 Windows 電腦上，您可以使用 CIM 工作階段功能。</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve">
          <source>You can also use the CIM parameters to get CIM modules from computers that have Windows PowerShell remoting enabled.</source>
          <target state="translated">您也可以使用 CIM 參數，從 Windows PowerShell 遠端功能的電腦取得 CIM 模組。</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve">
          <source>This includes the local computer.</source>
          <target state="translated">這包括在本機電腦。</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve">
          <source>When you create a CIM session on the local computer, Windows PowerShell uses DCOM, instead of WMI, to create the session.</source>
          <target state="translated">當您在本機電腦上建立 CIM 工作階段時，Windows PowerShell 會使用 DCOM (而不是 WMI) 來建立工作階段。</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve">
          <source>RELATED LINKS</source>
          <target state="translated">相關的連結</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve">
          <source>Get-CimSession</source>
          <target state="translated">Get-CimSession</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve">
          <source>New-CimSession</source>
          <target state="translated">New-CimSession</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve">
          <source>about_Modules</source>
          <target state="translated">about_Modules</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve">
          <source>Get-PSSession</source>
          <target state="translated">Get-pssession</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve">
          <source>Import-Module</source>
          <target state="translated">Import-Module</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve">
          <source>Import-PSSession</source>
          <target state="translated">Import-PSSession</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve">
          <source>New-PSSession</source>
          <target state="translated">New-PSSession</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve">
          <source>Remove-Module</source>
          <target state="translated">Remove-Module</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>