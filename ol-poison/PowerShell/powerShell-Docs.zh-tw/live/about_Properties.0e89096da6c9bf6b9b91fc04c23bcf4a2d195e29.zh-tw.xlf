<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-tw">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-1c394fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fed08c56c325108cf466a4a1a9b921a3502b215c</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">reference\5.0\Microsoft.PowerShell.Core\About\about_Properties.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions" />
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">773f76553672d69da0e063f85e8894f32fbdd844</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">34b537130310bfa03e816d350ae66d77ffe5d356</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>about_Properties</source>
          <target state="translated">about_Properties</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>powershell, cmdlet</source>
          <target state="translated">powershell 指令程式</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>About Properties</source>
          <target state="translated">關於屬性</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>about_Properties</source>
          <target state="translated">about_Properties</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>about_Properties</source>
          <target state="translated">about_Properties</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>SHORT DESCRIPTION</source>
          <target state="translated">簡短描述</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Describes how to use object properties in  Windows PowerShell�.</source>
          <target state="translated">描述如何使用 Windows PowerShell 中的物件屬性。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>LONG DESCRIPTION</source>
          <target state="translated">詳細描述</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Windows PowerShell uses structured collections of information called objects to represent the items in data stores or the state of the computer.</source>
          <target state="translated">Windows PowerShell 會使用結構化的資訊稱為物件集合，代表資料存放區或電腦的狀態中的項目。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Typically, you work with object that are part of the Microsoft .NET Framework, but you can also create custom objects in  Windows PowerShell.</source>
          <target state="translated">一般而言，您使用物件屬於 Microsoft.NET Framework 中，但您也可以在 Windows PowerShell 中建立自訂物件。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>The association between an item and its object is very close.</source>
          <target state="translated">項目和它的物件之間的關聯是非常接近。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>When you change an object, you usually change the item that it represents.</source>
          <target state="translated">當您變更物件時，通常會變更它所代表的項目。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>For example, when you get a file in  Windows PowerShell, you do not get the actual file.</source>
          <target state="translated">例如，當您在 Windows PowerShell 中的檔案，您不會收到實際的檔案。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Instead, you get a FileInfo object that represents the file.</source>
          <target state="translated">相反地，您會取得代表檔案的 FileInfo 物件。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>When you change the FileInfo object, the file changes too.</source>
          <target state="translated">當您變更 FileInfo 物件時，變更過的檔案。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Most objects have properties.</source>
          <target state="translated">大部分的物件具有屬性。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Properties are the data that is associated with an object.</source>
          <target state="translated">屬性是與物件相關聯的資料。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Different types of object have different properties.</source>
          <target state="translated">不同類型的物件有不同的屬性。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>For example, a FileInfo object, which represents a file, has an IsReadOnly property that contains $True if the file the read-only attribute and $False if it does not.</source>
          <target state="translated">FileInfo 物件，代表的檔案，例如，有的 IsReadOnly 屬性，如果包含 $True $False 如果沒有與檔案的唯讀屬性。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>A DirectoryInfo object, which represents a file system directory, has a Parent property that contains the path to the parent directory.</source>
          <target state="translated">DirectoryInfo 物件，代表檔案系統目錄，有一個父屬性，其中包含父目錄的路徑。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>OBJECT PROPERTIES</source>
          <target state="translated">物件屬性</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>To get the properties of an object, use the Get-Member cmdlet.</source>
          <target state="translated">若要取得物件的屬性，請使用 Get-member 指令程式。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>For example, to get the properties of a FileInfo object, use the Get-ChildItem cmdlet to get the FileInfo object that represents a file.</source>
          <target state="translated">例如，如果取得 FileInfo 物件的屬性，您可以使用 Get-childitem cmdlet 取得代表檔案的 FileInfo 物件。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Then, use a pipeline operator (&amp;#124;) to send the FileInfo object to Get-Member.</source>
          <target state="translated">然後，使用管線運算子 (&amp;#124;) 的 FileInfo 物件傳送至 Get-member。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>The following command gets the PowerShell.exe file and sends it to Get-Member.</source>
          <target state="translated">下列命令會取得 PowerShell.exe 檔案，並將它傳送至 Get-member。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>The $Pshome automatic variable contains the path of the  Windows PowerShell installation directory.</source>
          <target state="translated">$Pshome 自動變數包含 Windows PowerShell 安裝目錄的路徑。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>The output of the command lists the members of the FileInfo object.</source>
          <target state="translated">命令的輸出會列出 FileInfo 物件的成員。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Members include both properties and methods.</source>
          <target state="translated">成員包含屬性和方法。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>When you work in  Windows PowerShell, you have access to all the members of the objects.</source>
          <target state="translated">當您使用 Windows PowerShell 中時，您可以存取物件的所有成員。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>To get only the properties of an object and not the methods, use the MemberType parameter of the Get-Member cmdlet with a value of "property", as shown in the following example.</source>
          <target state="translated">若要取得的物件及不方法的屬性，使用 Get-member 指令程式的 MemberType 參數值是 「 屬性 」，如下列範例所示。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>After you find the properties, you can use them in your  Windows PowerShell commands.</source>
          <target state="translated">找出的內容之後，您可以使用它們在 Windows PowerShell 命令。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>PROPERTY VALUES</source>
          <target state="translated">屬性值</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Although every object of a specific type has the same properties, the values of those properties describe the particular object.</source>
          <target state="translated">雖然特定類型的每個物件具有相同的屬性，這些屬性的值會描述特定的物件。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>For example, every FileInfo object has a CreationTime property, but the value of that property differs for each file.</source>
          <target state="translated">例如，每個 FileInfo 物件具有 CreationTime 屬性，但該屬性的值不同的每個檔案。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>The most common way to get the values of the properties of an object is to use the dot method.</source>
          <target state="translated">若要取得物件的屬性值的最常見方式是使用點方法。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Type a reference to the object, such as a variable that contains the object, or a command that gets the object.</source>
          <target state="translated">輸入包含物件的變數或可取得物件的命令等物件的參考。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Then, type a dot (.) followed by the property name.</source>
          <target state="translated">接著，輸入點 （.） 後面加上屬性名稱。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>For example, the following command displays the value of the CreationTime property of the PowerShell.exe file.</source>
          <target state="translated">例如，下列命令顯示的 PowerShell.exe 檔案將 CreationTime 屬性的值。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>The Get-ChildItem command returns a FileInfo object that represents the PowerShell.exe file.</source>
          <target state="translated">Get-childitem 命令將傳回 FileInfo 物件，代表的 PowerShell.exe 檔案。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>The command is enclosed in parentheses to make sure that it is executed before any properties are accessed.</source>
          <target state="translated">命令被括在括號，以確定它在執行之前的任何屬性存取。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>The Get-ChildItem command is followed by a dot and the name of the CreationTime property, as follows:</source>
          <target state="translated">Get-childitem 命令後面是一個點和 CreationTime 屬性的名稱，如下所示︰</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>You can also save an object in a variable and then get its properties by using the dot method, as shown in the following example:</source>
          <target state="translated">您可以也儲存在變數中的物件，並取得其屬性然後使用點方法，如下列範例所示︰</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>You can also use the Select-Object and Format-List cmdlets to display the property values of an object.</source>
          <target state="translated">您也可以使用的選取物件和 Format-list cmdlet 來顯示物件的屬性值。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Select-Object and Format-List each have a Property parameter.</source>
          <target state="translated">選取物件和 Format-list 都有一個屬性參數。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>You can use the Property parameter to specify one or more properties and their values.</source>
          <target state="translated">您可以使用 Property 參數來指定一或多個屬性和其值。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Or, you can use the wildcard character (<ph id="ph1">\*</ph>) to represent all the properties.</source>
          <target state="translated">或者，您可以使用萬用字元 (<ph id="ph1">\*</ph>) 來表示所有屬性。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>For example, the following command displays the values of all the properties of the PowerShell.exe file.</source>
          <target state="translated">例如，下列命令會顯示 PowerShell.exe 檔案的所有屬性的值。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>STATIC PROPERTIES</source>
          <target state="translated">靜態屬性</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>You can use the static properties of .NET classes in  Windows PowerShell.</source>
          <target state="translated">您可以在 Windows PowerShell 中使用.NET 類別的靜態屬性。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Static properties are properties of class, unlike standard properties, which are properties of an object.</source>
          <target state="translated">靜態屬性是類別的屬性，不像標準屬性，也就是物件的屬性。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>To get the static properties of an class, use the Static parameter of the Get-Member cmdlet.</source>
          <target state="translated">若要取得類別的靜態屬性，請使用 Get-member 指令程式的靜態參數。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>For example, the following command gets the static properties of the System.DateTime class.</source>
          <target state="translated">例如，下列命令會取得 System.DateTime 類別的靜態屬性。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>To get the value of a static property, use the following syntax.</source>
          <target state="translated">若要取得靜態屬性的值，請使用下列語法。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>For example, the following command gets the value of the UtcNow static property of the System.DateTime class.</source>
          <target state="translated">例如，下列命令會取得 UtcNow System.DateTime 類別的靜態屬性的值。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>PROPERTIES OF SCALAR OBJECTS AND COLLECTIONS</source>
          <target state="translated">純量物件和集合的屬性</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>The properties of one ("scalar") object of a particular type are often different from the properties of a collection of objects of the same type.</source>
          <target state="translated">（「 純量 」） 的特定型別物件的屬性通常是與相同類型的物件集合的屬性不同。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>For example, every service has as DisplayName property, but a collection of services does not have a DisplayName property.</source>
          <target state="translated">比方說，每項服務有作為 DisplayName 屬性，但是服務的集合，並沒有 DisplayName 屬性。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Similarly, all collections have a Count property that tells how many objects are in the collection, but individual objects do not have a Count property.</source>
          <target state="translated">同樣地，所有集合都具有一個 Count 屬性，指出集合中物件數目，但個別物件都沒有一個 Count 屬性。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>Beginning in  Windows PowerShell 3.0,  Windows PowerShell tries to prevent scripting errors that result from the differing properties of scalar objects and collections.</source>
          <target state="translated">從 Windows PowerShell 3.0 開始，Windows PowerShell 會嘗試防止指令碼錯誤所導致的純量物件和集合的不同屬性。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>If you submit a collection, but request a property that exists only on single ("scalar") objects,  Windows PowerShell returns the value of that property for every object in the collection.</source>
          <target state="translated">如果您送出一個集合，但要求只存在於單一 （「 純量 」） 的物件屬性時，Windows PowerShell 會傳回集合中的每個物件，該屬性的值。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>If you request the Count or Length property of zero objects or of one object,  Windows PowerShell returns the correct value.</source>
          <target state="translated">如果您要求的計數或長度屬性為零的物件或某個物件時，Windows PowerShell 會傳回正確的值。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>If the property exists on the individual objects and on the collection,  Windows PowerShell does not alter the result.</source>
          <target state="translated">如果屬性的個別物件和集合上，Windows PowerShell 不會改變結果。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>This feature also works on methods of scalar objects and collections.</source>
          <target state="translated">這項功能也適用於純量物件和集合的方法。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>For more information, see about_Methods.</source>
          <target state="translated">如需詳細資訊，請參閱 about_Methods。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>EXAMPLES</source>
          <target state="translated">範例</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>For example, each service has a DisplayName property.</source>
          <target state="translated">例如，每個服務有 DisplayName 屬性。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>The following command gets the value of the DisplayName property of the Audiosrv service.</source>
          <target state="translated">下列命令會取得 Audiosrv 服務的 DisplayName 屬性的值。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>However, a collection or array of services does not have a DisplayName.</source>
          <target state="translated">不過，集合或陣列的服務並沒有顯示名稱。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>The following command tries to get the DisplayName property of all services in  Windows PowerShell 2.0.</source>
          <target state="translated">下列命令會嘗試取得 Windows PowerShell 2.0 中的所有服務的 DisplayName 屬性。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>Beginning in  Windows PowerShell 3.0, the same command returns the value of the DisplayName property of every service that Get-Service returns.</source>
          <target state="translated">從 Windows PowerShell 3.0 開始，在同一個命令會傳回 Get-service 傳回的每個服務的 DisplayName 屬性的值。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>Conversely, a collection of two or more services has a Count property, which contains the number of objects in the collection.</source>
          <target state="translated">相反地，兩個或多個服務的集合，有一個 Count 屬性，其中包含集合中的物件數目。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>Individual services do not have a Count or Length property, as shown in this command in  Windows PowerShell 2.0.</source>
          <target state="translated">個別服務沒有計數或長度屬性，此命令在 Windows PowerShell 2.0 中所示。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>Beginning in  Windows PowerShell 3.0, the command returns the correct Count value.</source>
          <target state="translated">從 Windows PowerShell 3.0 開始，此命令會傳回正確的計數值。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>SEE ALSO</source>
          <target state="translated">另請參閱</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>about_Methods</source>
          <target state="translated">about_Methods</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>about_Objects</source>
          <target state="translated">about_Objects</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>Get-Member</source>
          <target state="translated">Get-Member</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>Select-Object</source>
          <target state="translated">Select-Object</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>Format-List</source>
          <target state="translated">Format-List</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>