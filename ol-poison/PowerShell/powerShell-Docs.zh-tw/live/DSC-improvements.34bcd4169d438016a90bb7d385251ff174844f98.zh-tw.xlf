<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-tw">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-22243b3" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1f00f2706f3c3ece783590f3a2b0bdb6734402b0</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">wmf\5.1\DSC-improvements.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions" />
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>DSC Improvements in WMF 5.1 (Preview)</source>
          <target state="translated">WMF 5.1 (Preview) 的 DSC 改善</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Improvements in Desired State Configuration (DSC) in WMF 5.1</source>
          <target state="translated">WMF 5.1 的預期狀態設定 (DSC) 改善</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>DSC Class resource improvements</source>
          <target state="translated">DSC 類別資源改善</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>In WMF 5.1, we have fixed the following known issues:</source>
          <target state="translated">WMF 5.1 中已修正下列已知問題︰</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Get-DscConfiguration may return empty values (null) or errors if a complex/hashtable type is returned by Get() function of a class based DSC resource.</source>
          <target state="translated">如果類別型 DSC 資源的 Get() 函式傳回複雜/雜湊表類型，Get-DscConfiguration 可能會傳回空值 (null) 或錯誤。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Get-DscConfiguration returns error if RunAs credential is used in DSC Configuration.</source>
          <target state="translated">當 DSC 設定使用 RunAs 認證時，Get-DscConfiguration 就會傳回錯誤。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Class-based resource cannot be used in a Composite Configuration.</source>
          <target state="translated">類別型資源無法用於複合設定中。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Start-DscConfiguration hangs if Class based resource has a property of its own type.</source>
          <target state="translated">如果類別型資源有其本身類型的屬性，Start-DscConfiguration 會停止回應。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Class-based resource cannot be used as an exclusive resource.</source>
          <target state="translated">類別型資源不能用為獨佔資源。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>DSC resource debugging improvements</source>
          <target state="translated">DSC 資源偵錯改善</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>In WMF 5.0, the PowerShell debugger did not stop at the Class Resource method (Get/Set/Test) directly.</source>
          <target state="translated">在 WMF 5.0 中，PowerShell 偵錯工具並未直接停在類別資源方法 (Get/Set/Test)。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>In WMF 5.1, the debugger will stop at the Class Resource method in the same way as for MOF-based resources methods.</source>
          <target state="translated">在 WMF 5.1 中，偵錯工具會停在類別資源方法，方式一如 MOF 資源方法。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>DSC pull client supports TLS 1.1 and TLS 1.2</source>
          <target state="translated">DSC 提取用戶端支援 TLS1.1 和 TLS1.2</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Previously, the DSC pull client only supported SSL3.0 and TLS1.0 over HTTPS connections.</source>
          <target state="translated">DSC 提取用戶端過去只支援 HTTPS 連線的 SSL3.0 和 TLS1.0。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>When forced to use more secure protocols, the pull client would stop functioning.</source>
          <target state="translated">強制使用更安全的通訊協定時，提取用戶端就會停止運作。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>In WMF 5.1, the DSC pull client no longer supports SSL 3.0 and adds support for the more secure TLS 1.1 and TLS 1.2 protocols.</source>
          <target state="translated">在 WMF 5.1 中，DSC 提取用戶端不再支援 SSL 3.0，卻新增了更安全的 TLS 1.1 和 TLS 1.2 通訊協定支援。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Improved pull server registration</source>
          <target state="translated">改善的提取伺服器登錄</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>In the earlier versions of WMF, simultaneous registrations/reporting requests to a DSC pull perver while using the ESENT database would lead to LCM failing to register and/or report.</source>
          <target state="translated">在舊版的 WMF 中，在使用 ESENT 資料庫時，同時登錄/報告 DSC 提取伺服器的要求，會導致 LCM 無法登錄及/或報告。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>In such cases, the event logs on the pull server will have the error "Instance Name already in use."</source>
          <target state="translated">在這種情況下，提取伺服器的事件記錄檔就會出現「執行個體名稱已在使用中」的錯誤。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>This was due to an incorrect pattern being used to access the ESENT database in a multi-threaded scenario.</source>
          <target state="translated">這是因為在多執行緒案例中使用不正確的模式存取 ESENT 資料庫。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>In WMF 5.1, this issue has been fixed.</source>
          <target state="translated">WMF 5.1 已修正此問題。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Concurrent registrations or reporting (involving ESENT database) will work fine in WMF 5.1.</source>
          <target state="translated">WMF 5.1 中可以正常同時登錄或報告 (包含 ESENT 資料庫)。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>This issue is applicable only to the ESENT database and does not apply to the OLEDB database.</source>
          <target state="translated">只有 ESENT 資料庫會發生這個問題，OLEDB 資料庫無此問題。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Pull partial configuration naming convention</source>
          <target state="translated">提取命名慣例的部分設定</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>In the previous release, the naming convention for a partial configuration was that the MOF file name in the pull server/service should match the partial configuration name specified in the local configuration manager settings that in turn must match the configuration name embedded in the MOF file.</source>
          <target state="translated">在舊版中，提取伺服器/服務的部分設定命名慣例 MOF 檔案名稱，應該符合本機設定管理員設定中指定的部分設定名稱，該本機設定管理員設定必須依次比對 MOF 檔案中內嵌的設定名稱。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>See the snapshots below:- •   Local configuration settings which defines a partial configuration that a node is allowed to receive.</source>
          <target state="translated">請參閱下列快照集：•   本機組態設定，定義允許接收節點的部分設定。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Sample metaconfiguration</source>
          <target state="translated">中繼設定範例</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>•   Sample partial configuration definition</source>
          <target state="translated">•   部分設定定義範例</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>•   ‘ConfigurationName’ embedded in the generated MOF file.</source>
          <target state="translated">•   內嵌在產生之 MOF 檔案中的 'ConfigurationName'。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Sample generated mof file</source>
          <target state="translated">產生的 MOF 檔案範例</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>•   FileName in the pull configuration repository</source>
          <target state="translated">•   提取設定存放庫中的檔案名稱</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>FileName in Configuration Repository</source>
          <target state="translated">設定存放庫中的檔案名稱</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Azure Automation service name generated mof files as <ph id="ph1">&lt;ConfigurationName&gt;</ph>.<ph id="ph2">&lt;NodeName&gt;</ph>.mof.</source>
          <target state="translated">Azure 自動化服務名稱以前產生的 MOF 檔案為 <ph id="ph1">&lt;ConfigurationName&gt;</ph>.<ph id="ph2">&lt;NodeName&gt;</ph>.mof。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>So the configuration below will compile to PartialOne.Localhost.mof.</source>
          <target state="translated">所以下面的設定會編譯為 PartialOne.Localhost.mof。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>This made it impossible to pull one of your partial configuration from Azure automation service.</source>
          <target state="translated">如此即不可能從 Azure 自動化服務提取您其中一項部分設定。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>In WMF 5.1, partial configuration in the pull server/service can be named as <ph id="ph1">&lt;ConfigurationName&gt;</ph>.<ph id="ph2">&lt;NodeName&gt;</ph>.mof.</source>
          <target state="translated">在 WMF 5.1 中，提取伺服器/服務中的部分設定可以命名為 <ph id="ph1">&lt;ConfigurationName&gt;</ph>.<ph id="ph2">&lt;NodeName&gt;</ph>.mof。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Moreover, if a machine is pulling a single configuration from a pull server/service then the configuration file on the pull server configuration repository can have any file name.</source>
          <target state="translated">但若電腦從提取伺服器/服務中提取了單一設定，則提取伺服器存放庫上的設定檔可以有任意的檔案名稱。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>is naming flexibility allow you to manage your nodes are partially by Azure Automation Service, where some configuration for your node is coming from Azure Automation DSC and you have a partial configuration that you wanted to manage locally.</source>
          <target state="translated">命名彈性可讓您管理 Azure 自動化服務部分管理的節點，其中節點的某些設定來自 Azure 自動化 DSC，且某項部分設定是您曾想在本機管理的。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>The metaconfiguration below will set up a node to be managed both locally as well as by Azure Automation Service.</source>
          <target state="translated">下面的中繼設定會設定由本機及 Azure 自動化服務來管理節點。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Using PsDscRunAsCredential with DSC composite resources</source>
          <target state="translated">使用 PsDscRunAsCredential 和 DSC 複合資源</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>We have added support for using <bpt id="p1">[</bpt><bpt id="p2">*</bpt>PsDscRunAsCredential<ept id="p2">*</ept><ept id="p1">](https://msdn.microsoft.com/cs-cz/powershell/dsc/runasuser)</ept> with DSC <bpt id="p3">[</bpt>Composite<ept id="p3">](https://msdn.microsoft.com/en-us/powershell/dsc/authoringresourcecomposite)</ept> resources.</source>
          <target state="translated">我們新增了支援以使用 <bpt id="p1">[</bpt><bpt id="p2">*</bpt>PsDscRunAsCredential<ept id="p2">*</ept><ept id="p1">](https://msdn.microsoft.com/cs-cz/powershell/dsc/runasuser)</ept> 和 DSC <bpt id="p3">[</bpt>複合<ept id="p3">](https://msdn.microsoft.com/en-us/powershell/dsc/authoringresourcecomposite)</ept>資源。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Users can now specify a value for PsDscRunAsCredential when using composite resources inside configurations.</source>
          <target state="translated">在設定內使用複合資源時，使用者現在可以指定一個 PsDscRunAsCredential 值。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>When specified, all resources rin inside a composite resource as a RunAs user.</source>
          <target state="translated">指定後，複合資源內的所有資源都會以 RunAs 使用者身分執行。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>If a composite resource calls another composite resource, all of its resources are also executed as RunAs user.</source>
          <target state="translated">如果複合資源呼叫另一項複合資源，也會以 RunAs 使用者身分執行其所有資源。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>RunAs credentials are propagated to any level of the composite resource hierarchy.</source>
          <target state="translated">RunAs 認證會傳播至複合資源階層的所有層級。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>If any resource inside a composite resource specifies its own value for PsDscRunAsCredential, a merge error will result during configuration compilation.</source>
          <target state="translated">如果複合資源內的任何資源指定自己的 PsDscRunAsCredential 值，則設定編譯期間就會發生合併錯誤。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>This example shows usage with <bpt id="p1">[</bpt>WindowsFeatureSet<ept id="p1">](https://msdn.microsoft.com/en-us/powershell/wmf/dsc_newresources)</ept> composite resource included in PSDesiredStateConfiguration module.</source>
          <target state="translated">本範例示範如何使用包含在 PSDesiredStateConfiguration 模組內的 <bpt id="p1">[</bpt>WindowsFeatureSet<ept id="p1">](https://msdn.microsoft.com/en-us/powershell/wmf/dsc_newresources)</ept> 複合資源。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>DSC module and onfiguration signing validations</source>
          <target state="translated">DSC 模組和設定簽署驗證</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>In DSC, configurations and modules are distributed to managed computers from the pull server.</source>
          <target state="translated">在 DSC 中，設定和模組會從提取伺服器散發到受管理的電腦。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>If the pull server is compromised, an attacker can potentially modify the configurations and modules on the pull server and have it distributed to all managed nodes, compromising all of them.</source>
          <target state="translated">如果提取伺服器遭到入侵，攻擊者可以修改提取伺服器上的設定和模組，將其散發到所有受管理的節點以危害所有節點。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>In WMF 5.1, DSC supports validating the digital signatures on catalog and configuration (.MOF) files.</source>
          <target state="translated">在 WMF 5.1 中，DSC 支援驗證類別目錄和設定 (.MOF) 檔案的數位簽章。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>This feature will prevent nodes from executing configurations or module files which are not signed by a trusted signer or which have been tampered with after they have been signed by trusted signer.</source>
          <target state="translated">這項功能會防止執行未經受信任簽署者簽署的設定或模組檔案，或經受信任簽署者簽署後遭竄改的檔案。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>How to sign configuration and module</source>
          <target state="translated">如何簽署設定和模組</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Configuration Files (.MOFS):- The existing PowerShell cmdlet <bpt id="p1">[</bpt>Set-AuthenticodeSignature<ept id="p1">](https://technet.microsoft.com/library/hh849819.aspx)</ept> is extended to support signing of MOF files.</source>
          <target state="translated">設定檔 (.MOFS)：現有的 PowerShell Cmdlet <bpt id="p1">[</bpt>Set-AuthenticodeSignature<ept id="p1">](https://technet.microsoft.com/library/hh849819.aspx)</ept> 已擴充，可支援簽署 MOF 檔案。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Modules:- Signing of modules is done by signing the corresponding module catalog using the following steps:-</source>
          <target state="translated">模組：已透過簽署對應的模組類別目錄完成模組簽署，使用步驟如下：</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>Create a catalog file: A catalog file contains a collection of cryptographic hashes or thumbprints.</source>
          <target state="translated">建立類別目錄檔案︰類別目錄檔案包含密碼編譯雜湊或指紋的集合。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Each thumbprint corresponds to a file that is included in the module.</source>
          <target state="translated">每個指紋都會對應至模組所包含的檔案。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>The new cmdlet <bpt id="p1">[</bpt>New-FileCatalog<ept id="p1">](https://technet.microsoft.com/library/cc732148.aspx)</ept>, has been added to enable users create a catalog file for their module.</source>
          <target state="translated">已新增新的 <bpt id="p1">[</bpt>New-FileCatalog<ept id="p1">](https://technet.microsoft.com/library/cc732148.aspx)</ept> Cmdlet，讓使用者為其模組建立類別目錄檔案。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>Sign the catalog file: Use <bpt id="p1">[</bpt>Set-AuthenticodeSignature<ept id="p1">](https://technet.microsoft.com/library/hh849819.aspx)</ept> to sign the catalog file.</source>
          <target state="translated">簽署類別目錄檔案︰使用 <bpt id="p1">[</bpt>Set-AuthenticodeSignature<ept id="p1">](https://technet.microsoft.com/library/hh849819.aspx)</ept> 簽署類別目錄檔案。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>Place the catalog file inside the module folder.</source>
          <target state="translated">將類別目錄檔案放在模組資料夾內。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>By convention, Module catalog file should be placed under the module folder with the same name as the module.</source>
          <target state="translated">依照慣例，模組類別目錄檔案應該位於與模組同名的模組資料夾內。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>LocalConfigurationManager settings to enable signing validations</source>
          <target state="translated">啟用簽署驗證的 LocalConfigurationManager 設定</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>Pull</source>
          <target state="translated">提取</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>The LocalConfigurationManager of a node performs signing validation of modules and configurations based on its current settings.</source>
          <target state="translated">節點的 LocalConfigurationManager 會根據其目前的設定，執行模組和設定的簽署驗證。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>By default, signature validation is disabled.</source>
          <target state="translated">預設停用簽章驗證。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>Signature validation can enabled by adding the ‘SignatureValidation’ block to the meta-configuration definition of the node as shown below:-</source>
          <target state="translated">將 'SignatureValidation' 區塊新增至節點的中繼設定定義可啟用簽章驗證，如下所示：</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>Setting the above metaconfiguration on a node enables signature validation on downloaded configurations and modules.</source>
          <target state="translated">在節點上設定上述中繼設定，可在下載的設定和模組上啟用簽章驗證。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>The Local Configuration Manager will perform the following steps to verify the digital signatures.</source>
          <target state="translated">本機設定管理員會執行下列步驟來驗證數位簽章。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>Verify the signature on a configuration file (.MOF) is valid.</source>
          <target state="translated">驗證設定檔 (.MOF) 的簽章是否有效。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>It uses the powershell cmdlet <bpt id="p1">[</bpt>Get-AuthenticodeSignature<ept id="p1">](https://technet.microsoft.com/library/hh849805.aspx)</ept>, which is extended in 5.1 to support MOF sigature validation.</source>
          <target state="translated">它會使用 5.1 中已擴充的 PowerShell Cmdlet <bpt id="p1">[</bpt>Get-AuthenticodeSignature<ept id="p1">](https://technet.microsoft.com/library/hh849805.aspx)</ept>，以支援 MOF 簽章驗證。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>Verify the certificate authority that autherized the signer is trusted.</source>
          <target state="translated">驗證授權簽署者的憑證授權單位是否受信任。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>Download module/resource dependencies of the configuration to a temp location.</source>
          <target state="translated">將設定的模組/資源相依性下載至暫存位置。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>Verify the signature of the catalog included inside the module.</source>
          <target state="translated">驗證模組內是否包含類別目錄簽章。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>Find a <ph id="ph1">&lt;moduleName&gt;</ph>.cat file and verify its signature using the cmdlet  <bpt id="p1">[</bpt>Get-AuthenticodeSignature<ept id="p1">](https://technet.microsoft.com/library/hh849805.aspx)</ept>.</source>
          <target state="translated">尋找 <ph id="ph1">&lt;moduleName&gt;</ph>.cat 檔案，並使用 <bpt id="p1">[</bpt>Get-AuthenticodeSignature<ept id="p1">](https://technet.microsoft.com/library/hh849805.aspx)</ept> Cmdlet 驗證其簽章。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>Verify the certification authority that authenticated the signer is trusted.</source>
          <target state="translated">驗證授權簽署者的憑證授權單位是否受信任。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>Verify the content of the modules has not been tempered using the new cmdlet <bpt id="p1">[</bpt>Test-FileCatalog<ept id="p1">](https://technet.microsoft.com/library/cc732148.aspx)</ept>.</source>
          <target state="translated">驗證是否已使用新的 <bpt id="p1">[</bpt>Test-FileCatalog<ept id="p1">](https://technet.microsoft.com/library/cc732148.aspx)</ept> Cmdlet 來刪減模組內容。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>Install-module to $env:ProgramFiles\WindowsPowerShell\Modules\</source>
          <target state="translated">將模組安裝到 $env:ProgramFiles\WindowsPowerShell\Modules\</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>Process configuration</source>
          <target state="translated">處理設定</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>Note: Signature validation on module-catalog and configuration is only performed when the configuration is applied to the system for the first time or when the module is downloaded and installed.</source>
          <target state="translated">注意︰只有第一次在系統上套用設定時，或下載並安裝模組時，才會執行模組類別目錄和設定上的簽章驗證。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>Consistency runs do not validate the signature of Current.mof or its module dependencies.</source>
          <target state="translated">一致性執行不會驗證 Current.mof 或其模組相依性的簽章。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>If verification has failed at any stage, for instance if the configuration pulled from the pull server is unsigned, then processing of the configuration will terminate with the error shown below and all tempoarary files will be deleted.</source>
          <target state="translated">如果驗證在任何階段失敗，例如從提取伺服器提取的設定未經簽署，則會終止處理設定並顯示下列錯誤，以及刪除所有暫存檔案。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>Sample Error Output Configuration</source>
          <target state="translated">錯誤輸出設定範例</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>Similarily, pulling a module whose catalog is not signed will result in the following error:-</source>
          <target state="translated">同樣地，提取未簽署類別目錄的模組會產生下列錯誤：</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>Sample Error Output Module</source>
          <target state="translated">錯誤輸出模組範例</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>Push</source>
          <target state="translated">推入</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>A configuration delivered via push might be tampered with at its source before it delivered to the node.</source>
          <target state="translated">透過推入傳遞的設定，可能在傳送到節點之前即已在來源遭到竄改。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>The Local Configuration Manager will perform similar signature validation steps for pushed or published configuration(s).</source>
          <target state="translated">本機設定管理員會對已推入或發行的設定，執行類似的簽章驗證步驟。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>Below is a complete example of signature validation for push.</source>
          <target state="translated">以下是推入簽章驗證的完整範例。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>Enable signature validation on the node.</source>
          <target state="translated">在節點上啟用簽章驗證。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>Create a sample configuration file.</source>
          <target state="translated">建立設定檔範例。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>Try pushing the unsigned configuration file in to the node.</source>
          <target state="translated">嘗試將未經簽署的設定檔推入至節點。</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>ErrorUnsignedMofPushed</source>
          <target state="translated">ErrorUnsignedMofPushed</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>Sign the configurtion file using code-signing cert.</source>
          <target state="translated">使用程式碼簽署憑證簽署設定檔。</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>SignMofFile</source>
          <target state="translated">SignMofFile</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>Try pushing the signed mof file.</source>
          <target state="translated">嘗試推入簽署的 MOF 檔案。</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>SignMofFile</source>
          <target state="translated">SignMofFile</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>