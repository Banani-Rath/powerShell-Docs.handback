<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-tw">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-22243b3" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">90d8067c0d3eacf60260da654c2a8b8caeca20a2</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">wmf\5.1\features-scenarios-cache\ps-engine-enhancements.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions" />
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>PowerShell Engine Enhancements</source>
          <target state="translated">PowerShell 引擎增強功能</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>PowerShell Engine Enhancements</source>
          <target state="translated">PowerShell 引擎增強功能</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>The following improvements to the core PowerShell engine have been implemented for PowerShell 5.1:</source>
          <target state="translated">PowerShell 5.1 已實作核心 PowerShell 引擎的下列改善︰</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Performance</source>
          <target state="translated">效能</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Performance has improved in some important areas:</source>
          <target state="translated">某些重要區域的效能已改善︰</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Startup</source>
          <target state="translated">啟動</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Pipelining to cmdlets like ForEach-Object and Where-Object is approximately 50% faster</source>
          <target state="translated">管線到 ForEach-Object 和 Where-Object 等 Cmdlet 大約快了 50%</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Some example improvements (resuls may vary depending your your hardware):</source>
          <target state="translated">一些改善範例 (結果隨硬體而有不同)：</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Scenario</source>
          <target state="translated">案例</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>5.0 Time (ms)</source>
          <target state="translated">5.0 的時間 (毫秒)</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>5.1 Time (ms)</source>
          <target state="translated">5.1 的時間 (毫秒)</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>900</source>
          <target state="translated">900</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>250</source>
          <target state="translated">250</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>First ever PowerShell run:</source>
          <target state="translated">PowerShell 首次執行︰</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>30000</source>
          <target state="translated">30000</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>13000</source>
          <target state="translated">13000</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Command analysis cache built:</source>
          <target state="translated">命令分析快取組建︰</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>7000</source>
          <target state="translated">7000</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>520</source>
          <target state="translated">520</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>`1..1000000</source>
          <target state="translated">`1..1000000</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>% { }`</source>
          <target state="translated">% { }`</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>1400</source>
          <target state="translated">1400</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>750</source>
          <target state="translated">750</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>One change related to startup may impact some (unsupported) scenarios.</source>
          <target state="translated">與啟動相關的一項變更，可能影響到某些 (不受支援) 的案例。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>PowerShell no longer reads the files <ph id="ph1">`$pshome\*.ps1xml`</ph> - these files have been converted to C# to avoid some file and cpu overhead of processing the xml files.</source>
          <target state="translated">PowerShell 不再讀取 <ph id="ph1">`$pshome\*.ps1xml`</ph> 檔案，這些檔案已轉換成 C#，以避免處理 XML 檔案的一些檔案和 CPU 負荷。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>The files still exist to support V2 side-by-side, so if you change the file contents, it will not have any effect to V5, only V2.</source>
          <target state="translated">這些檔案對 V2 的支援仍然不變，因此，若變更檔案內容，對 V5 沒有任何效果，只對 V2 有效果。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Note that changing the contents of these files was never a supported scenario.</source>
          <target state="translated">請注意，變更這些檔案內容向來是不受支援的案例。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Another visible change is how PowerShell caches the exported commands and other information for modules that are installed on a system.</source>
          <target state="translated">另一個明顯的變更，是 PowerShell 如何快取匯出的命令和安裝在系統上的模組其他資訊。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Previous, this cache was stored in the directory <ph id="ph1">`$env:LOCALAPPDATA\Microsoft\Windows\PowerShell\CommandAnalysis`</ph>.</source>
          <target state="translated">以往，此快取儲存於 <ph id="ph1">`$env:LOCALAPPDATA\Microsoft\Windows\PowerShell\CommandAnalysis`</ph> 目錄。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>In WMF 5.1, the cache is a single file <ph id="ph1">`$env:LOCALAPPDATA\Microsoft\Windows\PowerShell\ModuleAnalysisCache`</ph>.</source>
          <target state="translated">在 WMF 5.1，快取是單一的 <ph id="ph1">`$env:LOCALAPPDATA\Microsoft\Windows\PowerShell\ModuleAnalysisCache`</ph> 檔案。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>analysis_cache.md<ept id="p1">]()</ept> for more details.</source>
          <target state="translated">如需詳細資訊，請參閱 <bpt id="p1">[</bpt>analysis_cache.md<ept id="p1">]()</ept>。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Starting with version 5.1, PowerShell is available in different editions which denote varying feature sets and platform compatibility.</source>
          <target state="translated">從 5.1 版開始，PowerShell 提供代表各種功能集及平台相容性的不同版本。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Long Filename Support</source>
          <target state="translated">長檔名支援</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Andrew...</source>
          <target state="translated">Andrew...</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Modules</source>
          <target state="translated">模組</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Chunqing...</source>
          <target state="translated">Chunqing...</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>PSEdition</source>
          <target state="translated">PSEdition</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Mani...</source>
          <target state="translated">Mani...</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Bug Fixes</source>
          <target state="translated">Bug 修正</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>The following notable bugs were fixed:</source>
          <target state="translated">已修正下列重大 Bug︰</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Module auto-discovery fully honors</source>
          <target state="translated">完全接受模組自動探索</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Module auto-discovery (loading modules automatically without an explicit Import-Module when calling a command) was introduced in WMF3.</source>
          <target state="translated">WMF3 中引進了模組自動探索 (呼叫命令時自動載入模組，不需要明確的 Import-Module)。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>When introduced, PowerShell checked for commands in <ph id="ph1">`$PSHome\Modules`</ph> before using <ph id="ph2">`$env:PSModulePath`</ph>.</source>
          <target state="translated">當初引入後，PowerShell 會先檢查 <ph id="ph1">`$PSHome\Modules`</ph> 中有沒有命令，再使用 <ph id="ph2">`$env:PSModulePath`</ph>。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>WMF5.1 changes this behavior to honor <ph id="ph1">`$env:PSModulePath`</ph> completely.</source>
          <target state="translated">WMF 5.1 將此行為變更為完全接受 <ph id="ph1">`$env:PSModulePath`</ph>。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>This allows for a user-authored module that defines commands provided by PowerShell (e.g. <ph id="ph1">`Get-ChildItem`</ph>) to be auto-loaded and correctly overriding the built-in command.</source>
          <target state="translated">這讓使用者撰寫之定義 PowerShell 所提供命令的模組 (例如 <ph id="ph1">`Get-ChildItem`</ph>) 自動載入並正確覆寫內建的命令。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>File redirection no longer hard-codes</source>
          <target state="translated">檔案重新導向不再需要硬式編碼</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>In all previous versions of PowerShell, it was impossible to control the file encoding used by the file redirection operator, e.g. <ph id="ph1">`get-childitem &gt; out.txt`</ph> because PowerShell added <ph id="ph2">`-Encoding Unicode`</ph>.</source>
          <target state="translated">所有舊版的 PowerShell 都不可能控制檔案重新導向運算子所使用的檔案編碼，例如 <ph id="ph1">`get-childitem &gt; out.txt`</ph>，因為 PowerShell 新增了 <ph id="ph2">`-Encoding Unicode`</ph>。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Starting with WMF 5.1, you can now change the file encoding of redirection by setting <ph id="ph1">`$PSDefaultParameterValues`</ph>, e.g.</source>
          <target state="translated">但從 WMF 5.1 開始，您可以設定 <ph id="ph1">`$PSDefaultParameterValues`</ph> 來變更重新導向的檔案編碼方式，例如︰</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Fixed a regression in accessing members of</source>
          <target state="translated">修正存取下列項目成員時的迴歸問題：</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>A regression introduced in WMF5 broke accessing members of <ph id="ph1">`System.Reflection.RuntimeType`</ph>, e.g. <ph id="ph2">`[int].ImplementedInterfaces`</ph>.</source>
          <target state="translated">WMF5 引入的迴歸會中斷存取 <ph id="ph1">`System.Reflection.RuntimeType`</ph> 成員的程序，例如 <ph id="ph2">`[int].ImplementedInterfaces`</ph>。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>This bug has been fixed in WMF5.1.</source>
          <target state="translated">WMF5.1 已修正這個 Bug。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Fixed some issues with COM objects</source>
          <target state="translated">修正 COM 物件的一些問題</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>WMF5 introduced a new COM binder for invoking methods on COM objects and accessing properties of COM objects.</source>
          <target state="translated">WMF5 引入新的 COM 繫結器，可對 COM 物件叫用方法以及存取 COM 物件的屬性。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>This new binder improved performance significantly but also introduced some bugs which have been fixed in WMF5.1.</source>
          <target state="translated">此新的繫結器大幅改善了效能，卻也造成了一些 Bug，WMF5.1 已加以修正。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Argument conversions were not always performed correctly</source>
          <target state="translated">不一定會正確執行引數轉換</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>In the following example:</source>
          <target state="translated">在下例中︰</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>The SendKeys method expects a string, but PowerShell did not convert the char to a string, deferring the conversion to IDispatch::Invoke, which uses VariantChangeType to do the conversion, which in this example resulted in sending the keys '1', '7', and '3' instead of the expected Volume.Mute key.</source>
          <target state="translated">SendKeys 方法預期的是字串，但 PowerShell 並未將字元轉換成字串，將轉換延後至 IDispatch::Invoke，使用 VariantChangeType 進行轉換，以致本例傳送了 '1'、'7' 和 '3' 機碼，而不是預期的 Volume.Mute 機碼。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Enumerable COM objects not always handled correctly</source>
          <target state="translated">不一定會正確處理可列舉的 COM 物件</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>PowerShell normally enumerates most enumerable objects, but a regression introduced in WMF5 prevented the enumeration of COM objects that implement IEnumerable.</source>
          <target state="translated">PowerShell 通常會列舉大部分可列舉的物件，但 WMF5 引入的迴歸卻阻擋了列舉實作 IEnumerable 的 COM 物件。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>For example:</source>
          <target state="translated">例如：</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>In the above example, WMF5 incorrectly wrote the Scripting.Dictionary to the pipeline instead of enumerating the key value pairs.</source>
          <target state="translated">上例中，WMF5 在管線中錯誤寫入 Scripting.Dictionary，卻未列舉機碼值組。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>was not allowed inside classes</source>
          <target state="translated">在類別中不允許</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>WMF5 introduced classes with validation of type literals used in classes.</source>
          <target state="translated">WMF5 引入了類別，其具有類別所用的類型常值驗證。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>looks like a type literal but is not a true .Net type.</source>
          <target state="translated">看起來像類型常值，卻不是真正的 .Net 類型。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>WMF5 incorrectly reported an error on <ph id="ph1">`[ordered]`</ph> inside a class:</source>
          <target state="translated">WMF5 誤報類別內發生 <ph id="ph1">`[ordered]`</ph> 錯誤︰</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>Help on about topics with multiple versions does not work</source>
          <target state="translated">多版本的說明主題無法運作</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>Before WMF5.1, if you had multiple versions of a module installed and they all shared a help topic, e.g. about_PSReadline, <ph id="ph1">`help about_PSReadline`</ph> would return multiple topics with no obvious way to view the real help.</source>
          <target state="translated">在 WMF 5.1 以前，如果安裝了多個版本的模組，而它們都共用一個說明主題，例如，about_PSReadline，則 <ph id="ph1">`help about_PSReadline`</ph> 會傳回多個主題，但沒有明確的方法可以檢視實際的說明。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>WMF5.1 fixes this by returning the help for the latest version of the topic.</source>
          <target state="translated">WMF 5.1 藉由傳回最新版本的說明主題，修正此問題。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>Get-Help does not provide a way to specify which version you want help for, the workaround is to navigate to the modules directory and view the help directly with a tool like your favorite editor.</source>
          <target state="translated">Get-Help 不提供指定所需說明版本的方法，因應措施是瀏覽到模組目錄，直接使用您偏好的編輯器等工具檢視說明。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>