<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-tw">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-1c394fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f5196aa8b6436845cbb5ced502186e9a59e27e1f</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">reference\3.0\Microsoft.PowerShell.Utility\Export-Clixml.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions" />
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f44b69db36b7e63398ffd728e53b9e253471e9a5</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">8fac0bfe7b293d4993b3323a2d29a2ebceca1508</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>powershell, cmdlet</source>
          <target state="translated">powershell 指令程式</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Export-Clixml</source>
          <target state="translated">Export-clixml</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Export-Clixml</source>
          <target state="translated">Export-clixml</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>SYNOPSIS</source>
          <target state="translated">概要</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Creates an XML-based representation of an object or objects and stores it in a file.</source>
          <target state="translated">建立一或多個物件的 XML 表示法，並將它儲存在檔案中。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>SYNTAX</source>
          <target state="translated">語法</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>ByPath (Default)</source>
          <target state="translated">ByPath （預設值）</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>ByLiteralPath</source>
          <target state="translated">ByLiteralPath</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>DESCRIPTION</source>
          <target state="translated">描述</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The Export-Clixml cmdlet creates an XML-based representation of an object or objects and stores it in a file.</source>
          <target state="translated">Export-Clixml Cmdlet 會建立一或多個物件的 XML 表示法，並將它儲存在檔案中。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>You can then use the Import-CLIXML cmdlet to re-create the saved object based on the contents of that file.</source>
          <target state="translated">然後您可以使用 Import-CLIXML Cmdlet，依據檔案內容重新建立儲存的物件。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>This cmdlet is similar to ConvertTo-XML, except that Export-Clixml stores the resulting XML in a file.</source>
          <target state="translated">這個 Cmdlet 類似 ConvertTO-XML，只不過 Export-Clixml 會將產生的 XML 儲存於檔案中。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>ConvertTo-XML returns the XML, so you can continue to process it in Windows PowerShell.</source>
          <target state="translated">ConvertTo-XML 會傳回 XML，讓您可以在 Windows PowerShell 中繼續處理。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>A valuable use of Export-CliXml is to export credentials and secure strings securely as XML.</source>
          <target state="translated">Export-clixml 的重要用法是做為 XML 安全的方式匯出認證及安全的字串。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>For an example of how to do this, see Example 3 in this topic.</source>
          <target state="translated">如需如何執行這項操作的範例，請參閱本主題中的範例 3。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>EXAMPLES</source>
          <target state="translated">範例</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>-------------------------- EXAMPLE 1 --------------------------</source>
          <target state="translated">-------------------------- 範例 1 --------------------------</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>This command creates an XML file that stores a representation of the string, "This is a test".</source>
          <target state="translated">此命令會建立儲存 "This is a test" 字串表示法的 XML 檔案。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>-------------------------- EXAMPLE 2 --------------------------</source>
          <target state="translated">-------------------------- EXAMPLE 2 --------------------------</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>This example shows how to export an object to an XML file and then create an object by importing the XML from the file.</source>
          <target state="translated">此範例會示範如何將物件匯出至 XML 檔案，然後從檔案匯入 XML 來建立物件。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>The first command uses the Get-ACL cmdlet to get the security descriptor of the Test.txt file.</source>
          <target state="translated">第一個命令使用 Get-ACL Cmdlet 取得 Test.txt 檔案的安全性描述元。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>It uses a pipeline operator to pass the security descriptor to Export-Clixml, which stores an XML-based representation of the object in a file named FileACL.xml.</source>
          <target state="translated">它使用管線運算子將安全性描述元傳遞至 Export-Clixml，然後將物件的 XML 表示法儲存在名為 FileACL.xml 的檔案中。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>The second command uses the Import-Clixml cmdlet to create an object from the XML in the FileACL.xml file.</source>
          <target state="translated">第二個命令使用 Import-Clixml Cmdlet 從 FileACL.xml 檔案中的 XML 建立物件。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Then, it saves the object in the $FileAcl variable.</source>
          <target state="translated">然後，它會將物件儲存在 $FileAcl 變數中。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>-------------------------- EXAMPLE 3 --------------------------</source>
          <target state="translated">-------------------------- EXAMPLE 3 --------------------------</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>The Export-CliXml cmdlet encrypts credential objects by using the Windows Data Protection APIhttp://msdn.microsoft.com/library/windows/apps/xaml/hh464970.aspx.</source>
          <target state="translated">Export-clixml cmdlet 會使用 Windows 資料保護 APIhttp://msdn.microsoft.com/library/windows/apps/xaml/hh464970.aspx 加密認證物件。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>This ensures that only your user account can decrypt the contents of the credential object.</source>
          <target state="translated">這可確保只有您的使用者帳戶可以解密認證物件的內容。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>In this example, given a credential that you've stored in the $credential variable by running the Get-Credential cmdlet, you can run the Export-CliXml cmdlet to save the credential to disk.In the example, the file in which the credential is stored is represented by TestScript.ps1.credential.</source>
          <target state="translated">在此範例中，指定的認證儲存在 $credential 變數執行 Get-credential 指令程式，您可以執行 Export-clixml cmdlet，將認證儲存到磁碟。在範例中，認證會儲存在其中的檔案會以 TestScript.ps1.credential。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Replace TestScript with the name of the script with which you are loading the credential.</source>
          <target state="translated">TestScript 取代指令碼與您正在載入認證的名稱。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>In the second command, pipe the credential object to Export-CliXml, and save it to the path, $credxmlpath, that you specified in the first command.</source>
          <target state="translated">在第二個命令中，透過管道傳送至 Export-clixml，認證物件，並將它儲存到 $credxmlpath，您在第一個命令中指定的路徑。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>To import the credential automatically into your script, run the final two commands.</source>
          <target state="translated">若要在指令碼，會自動匯入的認證，執行最後的兩個命令。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>This time, you are running Import-CliXml to import the secured credential object into your script.</source>
          <target state="translated">此時，您執行 Import-clixml 的安全的認證物件匯入您的指令碼。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>This eliminates the risk of exposing plain-text passwords in your script.</source>
          <target state="translated">這會排除暴露在您的指令碼的純文字密碼的風險。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>PARAMETERS</source>
          <target state="translated">參數</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>-Depth</source>
          <target state="translated">深度</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Specifies how many levels of contained objects are included in the XML representation.</source>
          <target state="translated">指定 XML 表示法中包含多少層的內含物件。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>The default value is 2.</source>
          <target state="translated">預設值為 2。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>The default value can be overridden for the object type in the Types.ps1xml files.</source>
          <target state="translated">您可以在 Types.ps1xml 檔案中覆寫物件類型的預設值。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>For more information, see about_Types.ps1xml.</source>
          <target state="translated">如需詳細資訊，請參閱 about_Types.ps1xml。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>-Encoding</source>
          <target state="translated">編碼方式</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Specifies the type of encoding for the target file.</source>
          <target state="translated">指定目標檔案的編碼類型。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Valid values are ASCII, UTF8, UTF7, UTF32, Unicode, BigEndianUnicode, Default, and OEM.</source>
          <target state="translated">有效值為 ASCII、UTF8、UTF7、UTF32、Unicode、BigEndianUnicode、Default 及 OEM。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Unicode is the default.</source>
          <target state="translated">Unicode 為預設值。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>-Force</source>
          <target state="translated">-Force</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Causes the cmdlet to clear the read-only attribute of the output file if necessary.</source>
          <target state="translated">會導致 Cmdlet 清除輸出檔案的唯讀屬性 (如有必要)。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>The cmdlet will attempt to reset the read-only attribute when the command completes.</source>
          <target state="translated">當命令完成時，Cmdlet 將會嘗試重設唯讀屬性。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>-InputObject</source>
          <target state="translated">-InputObject</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Specifies the object to be converted.</source>
          <target state="translated">指定要轉換的物件。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Enter a variable that contains the objects, or type a command or expression that gets the objects.</source>
          <target state="translated">輸入包含物件的變數，或輸入可取得物件的命令或運算式。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>You can also pipe objects to Export-Clixml.</source>
          <target state="translated">您也可以使用管線將物件傳送至 Export-Clixml。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>-NoClobber</source>
          <target state="translated">-NoClobber</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Ensures that the cmdlet does not overwrite the contents of an existing file.</source>
          <target state="translated">可確保 Cmdlet 不會覆寫現有檔案的內容。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>By default, if a file exists in the specified path, Export-Clixml overwrites the file without warning.</source>
          <target state="translated">根據預設，如果檔案存在指定的路徑中，Export-Clixml 會覆寫檔案而不發出警告。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>-Path</source>
          <target state="translated">-Path</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Specifies the path to the file where the XML representation of the object will be stored.</source>
          <target state="translated">指定將儲存物件之 XML 表示法的檔案的路徑。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>-LiteralPath</source>
          <target state="translated">-LiteralPath</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Specifies the path to the file where the XML representation of the object will be stored.</source>
          <target state="translated">指定將儲存物件之 XML 表示法的檔案的路徑。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Unlike <bpt id="p1">**</bpt>Path<ept id="p1">**</ept>, the value of the <bpt id="p2">**</bpt>LiteralPath<ept id="p2">**</ept> parameter is used exactly as it is typed.</source>
          <target state="translated">不同於 <bpt id="p1">**</bpt>路徑<ept id="p1">**</ept>, ，值 <bpt id="p2">**</bpt>LiteralPath<ept id="p2">**</ept> 完全依照其輸入，使用參數。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>No characters are interpreted as wildcards.</source>
          <target state="translated">沒有字元會被視為萬用字元。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>If the path includes escape characters, enclose it in single quotation marks.</source>
          <target state="translated">如果路徑包含逸出字元，請將它括在單引號中。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>Single quotation marks tell Windows PowerShell not to interpret any characters as escape sequences.</source>
          <target state="translated">單引號告知 Windows PowerShell 不要將任何字元視為逸出序列。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>-Confirm</source>
          <target state="translated">-Confirm</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>Prompts you for confirmation before running the cmdlet.Prompts you for confirmation before running the cmdlet.</source>
          <target state="translated">會提示您進行確認，然後再執行此指令程式。會提示您進行確認，然後再執行此指令程式。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>-WhatIf</source>
          <target state="translated">-WhatIf</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>Shows what would happen if the cmdlet runs.</source>
          <target state="translated">顯示執行 Cmdlet 後會發生的情況。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>The cmdlet is not run.Shows what would happen if the cmdlet runs.</source>
          <target state="translated">無法執行此指令程式。顯示執行此指令程式會發生什麼事。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>The cmdlet is not run.</source>
          <target state="translated">未執行 Cmdlet。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>CommonParameters</source>
          <target state="translated">CommonParameters</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutVariable, -OutBuffer, -PipelineVariable, -Verbose, -WarningAction, and -WarningVariable.</source>
          <target state="translated">這個 cmdlet 支援一般參數:-偵錯、-ErrorAction、-ErrorVariable、-InformationAction-InformationVariable、-OutVariable、-OutBuffer、-PipelineVariable、-Verbose、-WarningAction 以及-WarningVariable。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>For more information, see about_CommonParameters (http://go.microsoft.com/fwlink/?LinkID=113216).</source>
          <target state="translated">如需詳細資訊，請參閱 about_CommonParameters (http://go.microsoft.com/fwlink/?LinkID=113216)。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>INPUTS</source>
          <target state="translated">輸入</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>System.Management.Automation.PSObject</source>
          <target state="translated">System.Management.Automation.PSObject</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>You can pipe any object to Export-Clixml.</source>
          <target state="translated">您可以使用管線將任何物件傳送至 Export-Clixml。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>OUTPUTS</source>
          <target state="translated">輸出</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>System.IO.FileInfo</source>
          <target state="translated">System.IO.FileInfo</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>Export-Clixml creates a file that contains the XML.</source>
          <target state="translated">Export-Clixml 會建立包含 XML 的檔案。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>NOTES</source>
          <target state="translated">附註</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>RELATED LINKS</source>
          <target state="translated">相關的連結</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>Use PowerShell to Pass Credentials to Legacy Systems</source>
          <target state="translated">使用 PowerShell 將認證傳遞給舊版系統</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>Securely Store Credentials on Disk</source>
          <target state="translated">安全地儲存在磁碟上的認證</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>ConvertTo-Html</source>
          <target state="translated">ConvertTo-Html</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>ConvertTo-Xml</source>
          <target state="translated">ConvertTo-Xml</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>Export-Csv</source>
          <target state="translated">Export-Csv</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>Import-Clixml</source>
          <target state="translated">Import-clixml</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>