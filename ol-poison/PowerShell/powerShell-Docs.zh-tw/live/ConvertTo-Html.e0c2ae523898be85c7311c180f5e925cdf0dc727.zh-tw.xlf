<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-tw">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-1c394fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">9147b413ef624c56e36336dedd776fdc4419f8fd</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">reference\5.0\Microsoft.PowerShell.Utility\ConvertTo-Html.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions" />
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">52243095a15e13374738f1e83c5c115373473d98</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">db96ab0891a40d282d915f8123be877cd58766b1</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>powershell, cmdlet</source>
          <target state="translated">powershell 指令程式</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>ConvertTo-Html</source>
          <target state="translated">ConvertTo-Html</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>ConvertTo-Html</source>
          <target state="translated">ConvertTo-Html</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>SYNOPSIS</source>
          <target state="translated">概要</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Converts Microsoft .NET Framework objects into HTML that can be displayed in a Web browser.</source>
          <target state="translated">將 Microsoft .NET Framework 物件轉換成可在網頁瀏覽器中顯示的 HTML。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>SYNTAX</source>
          <target state="translated">語法</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Page (Default)</source>
          <target state="translated">頁面 （預設值）</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Fragment</source>
          <target state="translated">片段</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>DESCRIPTION</source>
          <target state="translated">描述</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>ConvertTo-Html<ept id="p1">**</ept> cmdlet converts .NET Framework objects into HTML that can be displayed in a Web browser.</source>
          <target state="translated"> <bpt id="p1">**</bpt>Convertto-html<ept id="p1">**</ept> 指令程式會將.NET Framework 物件轉換成可以在 Web 瀏覽器中顯示的 HTML。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>You can use this cmdlet to display the output of a command in a Web page.</source>
          <target state="translated">您可以使用這個 Cmdlet 在網頁中顯示命令的輸出。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>You can use the parameters of <bpt id="p1">**</bpt>ConvertTo-Html<ept id="p1">**</ept> to select object properties, to specify a table or list format, to specify the HTML page title, to add text before and after the object, and to return only the table or list fragment, instead of a strict DTD page.</source>
          <target state="translated">您可以使用的參數 <bpt id="p1">**</bpt>Convertto-html<ept id="p1">**</ept> 來選取物件屬性，指定資料表或清單格式，以指定 HTML 網頁標題、 物件的前後新增文字，並傳回只會將資料表或清單片段，而不是嚴格 DTD 網頁。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>When you submit multiple objects to <bpt id="p1">**</bpt>ConvertTo-Html<ept id="p1">**</ept>, Windows PowerShell creates the table, or a list, based on the properties of the first object that you submit.</source>
          <target state="translated">當您送出多個物件至 <bpt id="p1">**</bpt>Convertto-html<ept id="p1">**</ept>, ，Windows PowerShell 會建立資料表或清單中，根據您送出之第一個物件的屬性。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>If the remaining objects do not have one of the specified properties, the property value of that object is an empty cell.</source>
          <target state="translated">如果剩餘的物件不具有其中一個指定的屬性，該物件的屬性值將會是空的儲存格。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>If the remaining objects have additional properties, those property values are not included in the file.</source>
          <target state="translated">如果其餘的物件有其他屬性，那些屬性值將不會包含在檔案中。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>EXAMPLES</source>
          <target state="translated">範例</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Example 1: Create a web page to display the date</source>
          <target state="translated">範例 1︰ 建立網頁來顯示日期</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>This command creates an HTML page that displays the properties of the current date.</source>
          <target state="translated">此命令建立一個顯示目前日期之屬性的 HTML 網頁。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>It uses the <bpt id="p1">*</bpt>InputObject<ept id="p1">*</ept> parameter to submit the results of a Get-Date command to the <bpt id="p2">**</bpt>ConvertTo-Html<ept id="p2">**</ept> cmdlet.</source>
          <target state="translated">它會使用 <bpt id="p1">*</bpt>InputObject<ept id="p1">*</ept> 參數來送出至 Get-date 命令的結果 <bpt id="p2">**</bpt>Convertto-html<ept id="p2">**</ept> 指令程式。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Example 2: Create a web page to display PowerShell aliases</source>
          <target state="translated">範例 2︰ 建立 web 網頁，以顯示 PowerShell 別名</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>This command creates an HTML page that lists the Windows PowerShell aliases in the current console.</source>
          <target state="translated">此命令建立一個列出目前主控台中 Windows PowerShell 別名的 HTML 網頁。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>The command uses the Get-Alias cmdlet to get the aliases.</source>
          <target state="translated">命令使用 Get-Alias Cmdlet 取得別名。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>It uses the pipeline operator (|) to send the aliases to the <bpt id="p1">**</bpt>ConvertTo-Html<ept id="p1">**</ept> cmdlet, which creates the HTML page.</source>
          <target state="translated">它使用管線運算子 (|) 將別名傳送至 <bpt id="p1">**</bpt>Convertto-html<ept id="p1">**</ept> 指令程式，以建立 HTML 網頁。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Example 3: Create a web page to display PowerShell events</source>
          <target state="translated">範例 3︰ 建立 web 網頁，以顯示 PowerShell 事件</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>This command creates an HTML page called pslog.htm that displays the events in the Windows PowerShell event log on the local computer.</source>
          <target state="translated">此命令建立一個名為 pslog.htm 的 HTML 網頁，當中會顯示本機電腦上 Windows PowerShell 事件記錄檔中的事件。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>It uses the Get-EventLog cmdlet to get the events in the Windows PowerShell log and then uses the pipeline operator (|) to send the events to the <bpt id="p1">**</bpt>ConvertTo-Html<ept id="p1">**</ept> cmdlet.</source>
          <target state="translated">它會使用 Get-eventlog cmdlet 取得 Windows PowerShell 記錄檔中的事件，然後使用管線運算子 (|) 將事件傳送至 <bpt id="p1">**</bpt>Convertto-html<ept id="p1">**</ept> 指令程式。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>The command also uses the redirection operator (<ph id="ph1">\&gt;</ph>) to send the HTML code to the pslog.htm file.</source>
          <target state="translated">此命令也會使用重新導向運算子 (<ph id="ph1">\&gt;</ph>) 傳送給 pslog.htm 檔案的 HTML 程式碼。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Example 4: Create a web page to display processes</source>
          <target state="translated">範例 4︰ 建立網頁顯示處理序</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>These commands create and open an HTML page that lists the name, path, and company of the processes on the local computer.</source>
          <target state="translated">這些命令建立並開啟一個 HTML 網頁，當中列出本機電腦上處理程序的名稱、路徑及公司。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>The first command uses the Get-Process cmdlet to get objects that represent the processes running on the computer.</source>
          <target state="translated">第一個命令使用 Get-Process Cmdlet 來取得代表在電腦上執行之處理程序的物件。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>The command uses the pipeline operator (|) to send the process objects to the <bpt id="p1">**</bpt>ConvertTo-Html<ept id="p1">**</ept> cmdlet.</source>
          <target state="translated">指令會使用管線運算子 (|) 將處理程序物件傳送 <bpt id="p1">**</bpt>Convertto-html<ept id="p1">**</ept> 指令程式。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>The command uses the <bpt id="p1">*</bpt>Property<ept id="p1">*</ept> parameter to select three properties of the process objects to be included in the table.</source>
          <target state="translated">此命令會使用 <bpt id="p1">*</bpt>屬性<ept id="p1">*</ept> 參數來選取要包含在資料表中的程序物件的三個屬性。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>The command uses the <bpt id="p1">*</bpt>Title<ept id="p1">*</ept> parameter to specify a title for the HTML page.</source>
          <target state="translated">此命令會使用 <bpt id="p1">*</bpt>標題<ept id="p1">*</ept> 參數來指定 HTML 網頁的標題。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>The command also uses the redirection operator (<ph id="ph1">\&gt;</ph>) to send the resulting HTML to a file named Proc.htm.</source>
          <target state="translated">此命令也會使用重新導向運算子 (<ph id="ph1">\&gt;</ph>) 若要將產生的 HTML 傳送至名為 Proc.htm 的檔案。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>The second command uses the Invoke-Item cmdlet (alias = ii) to open the Proc.htm in the default browser.</source>
          <target state="translated">第二個命令使用 Invoke-Item Cmdlet (別名 = ii)，於預設瀏覽器中開啟 Proc.htm。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>The two commands are separated by a semicolon (;).</source>
          <target state="translated">兩個命令會以分號 (;) 分隔。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Example 5: Create a web page to display service objects</source>
          <target state="translated">範例 5︰ 建立 web 網頁，以顯示服務的物件</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>This command creates an HTML page of the service objects that the Get-Service cmdlet returns.</source>
          <target state="translated">此命令建立 Get-Service Cmdlet 所傳回之服務物件的 HTML 網頁。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>The command uses the <bpt id="p1">*</bpt>CssUri<ept id="p1">*</ept> parameter to specify a cascading style sheet for the HTML page.</source>
          <target state="translated">此命令會使用 <bpt id="p1">*</bpt>CssUri<ept id="p1">*</ept> 參數來指定 HTML 網頁的階層式樣式表。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">*</bpt>CssUri<ept id="p1">*</ept> parameter adds an additional <ph id="ph1">\&lt;</ph>link rel="stylesheet" type="text/css"/ href="test.css"<ph id="ph2">\&gt;</ph> tag to the resulting HTML.</source>
          <target state="translated"> <bpt id="p1">*</bpt>CssUri<ept id="p1">*</ept> 參數會將額外 <ph id="ph1">\&lt;</ph>k rel ="stylesheet"type ="text/css"/ href="test.css"<ph id="ph2">\&gt;</ph> 到產生的 HTML 標記。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>The HREF attribute in the tag contains the name of the style sheet.</source>
          <target state="translated">標記中的 HREF 屬性包含樣式表的名稱。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Example 6: Create a web page to display service objects</source>
          <target state="translated">範例 6︰ 建立 web 網頁，以顯示服務的物件</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>This command creates an HTML page of the service objects that the Get-Service cmdlet returns.</source>
          <target state="translated">此命令建立 Get-Service Cmdlet 所傳回之服務物件的 HTML 網頁。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>The command uses the <bpt id="p1">*</bpt>As<ept id="p1">*</ept> parameter to specify a list format.</source>
          <target state="translated">此命令會使用 <bpt id="p1">*</bpt>為<ept id="p1">*</ept> 參數來指定以清單格式。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>The redirection operator (<ph id="ph1">\&gt;</ph>) sends the resulting HTML to the Services.htm file.</source>
          <target state="translated">重新導向運算子 (<ph id="ph1">\&gt;</ph>) 將產生的 HTML 傳送至 Services.htm 檔案。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Example 7: Create a web table for the current date</source>
          <target state="translated">範例 7︰ 建立 web 資料表目前的日期</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>This command uses <bpt id="p1">**</bpt>ConvertTo-Html<ept id="p1">**</ept> to generate an HTML table of the current date.</source>
          <target state="translated">此命令會使用 <bpt id="p1">**</bpt>Convertto-html<ept id="p1">**</ept> 產生 HTML 表格的目前日期。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>The command uses the Get-Date cmdlet to get the current date.</source>
          <target state="translated">命令使用 Get-Date Cmdlet 取得目前的日期。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>It uses a pipeline operator (|) to send the results to the <bpt id="p1">**</bpt>ConvertTo-Html<ept id="p1">**</ept> cmdlet (aliased as <bpt id="p2">**</bpt>cth<ept id="p2">**</ept>).</source>
          <target state="translated">它使用管線運算子 (|) 將結果傳送至 <bpt id="p1">**</bpt>Convertto-html<ept id="p1">**</ept> cmdlet (別名為 <bpt id="p2">**</bpt>cth<ept id="p2">**</ept>)。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>ConvertTo-Html<ept id="p1">**</ept> command includes the <bpt id="p2">*</bpt>Fragment<ept id="p2">*</ept> parameter, which limits the output to an HTML table.</source>
          <target state="translated"> <bpt id="p1">**</bpt>Convertto-html<ept id="p1">**</ept> 命令包含 <bpt id="p2">*</bpt>片段<ept id="p2">*</ept> 參數，將輸出限制為 HTML 表格。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>As a result, the other elements of an HTML page, such as the <ph id="ph1">\&lt;</ph>HEAD<ph id="ph2">\&gt;</ph> and <ph id="ph3">\&lt;</ph>BODY<ph id="ph4">\&gt;</ph> tags, are omitted.</source>
          <target state="translated">如此一來，其他元素的 HTML 頁面，例如 <ph id="ph1">\&lt;</ph>HEAD<ph id="ph2">\&gt;</ph> 和 <ph id="ph3">\&lt;</ph>主體<ph id="ph4">\&gt;</ph> 標記，會省略。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Example 8: Create a web page to display PowerShell events</source>
          <target state="translated">範例 8︰ 建立 web 網頁，以顯示 PowerShell 事件</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>This command uses the Get-EventLog cmdlet to get events from the Windows PowerShell event log.</source>
          <target state="translated">此命令會使用 Get-eventlog cmdlet 從 Windows PowerShell 事件記錄檔取得事件。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>It uses a pipeline operator (|) to send the events to the <bpt id="p1">**</bpt>ConvertTo-Html<ept id="p1">**</ept> cmdlet, which converts the events to HTML format.</source>
          <target state="translated">它使用管線運算子 (|) 將事件傳送至 <bpt id="p1">**</bpt>Convertto-html<ept id="p1">**</ept> 指令程式，以將事件轉換成 HTML 格式。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>ConvertTo-Html<ept id="p1">**</ept> command uses the <bpt id="p2">*</bpt>Property<ept id="p2">*</ept> parameter to select only the ID, Level, and Task properties of the event.</source>
          <target state="translated"> <bpt id="p1">**</bpt>Convertto-html<ept id="p1">**</ept> 命令會使用 <bpt id="p2">*</bpt>屬性<ept id="p2">*</ept> 參數來只選取識別碼、 Level 及 Task 屬性的事件。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>Example 9: Create a web page to display specified services</source>
          <target state="translated">範例 9︰ 建立 web 網頁，以顯示指定的服務</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>This command creates and opens a Web page that displays the services on the computer that begin with A. It uses the <bpt id="p1">*</bpt>Title<ept id="p1">*</ept>, <bpt id="p2">*</bpt>Body<ept id="p2">*</ept>, <bpt id="p3">*</bpt>PreContent<ept id="p3">*</ept>, and <bpt id="p4">*</bpt>PostContent<ept id="p4">*</ept> parameters of <bpt id="p5">**</bpt>ConvertTo-Html<ept id="p5">**</ept> to customize the output.</source>
          <target state="translated">此命令會建立並開啟以 a 開頭的電腦顯示的服務的 Web 網頁它會使用 <bpt id="p1">*</bpt>標題<ept id="p1">*</ept>, ，<bpt id="p2">*</bpt>主體<ept id="p2">*</ept>, ，<bpt id="p3">*</bpt>PreContent<ept id="p3">*</ept>, ，和 <bpt id="p4">*</bpt>PostContent<ept id="p4">*</ept> 參數 <bpt id="p5">**</bpt>Convertto-html<ept id="p5">**</ept> 來自訂輸出。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>The first part of the command uses the Get-Service cmdlet to get the services on the computer that begin with A. The command uses a pipeline operator (|) to send the results to the <bpt id="p1">**</bpt>ConvertTo-Html<ept id="p1">**</ept> cmdlet.</source>
          <target state="translated">命令的第一個部分使用 Get-service cmdlet 取得電腦上以 a 開頭的服務命令使用管線運算子 (|) 將結果傳送至 <bpt id="p1">**</bpt>Convertto-html<ept id="p1">**</ept> 指令程式。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>The command uses a redirection operator (<ph id="ph1">\&gt;</ph>) to send the output to the Services.htm file.</source>
          <target state="translated">此命令會使用重新導向運算子 (<ph id="ph1">\&gt;</ph>) 將輸出傳送至 Services.htm 檔案。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>A semicolon (;) ends the first command and starts a second command, which uses the Invoke-Item cmdlet (alias = "ii") to open the Services.htm file in the default browser.</source>
          <target state="translated">分號 (;) 會結束第一個命令並啟動第二個命令，這會使用 Invoke-Item Cmdlet (別名 ="ii") 在預設瀏覽器中開啟 Services.htm 檔案。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>PARAMETERS</source>
          <target state="translated">參數</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>-As</source>
          <target state="translated">身分</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>Specifies whether the object is formatted as a table or a list.</source>
          <target state="translated">指定是否要將物件格式化為表格或清單。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>The acceptable values for this parameter are: Table and List.</source>
          <target state="translated">這個參數可接受的值如下︰ 資料表和清單。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>The default value is Table.</source>
          <target state="translated">預設值是資料表。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>The Table value generates an HTML table that resembles the Windows PowerShell table format.</source>
          <target state="translated">資料表值會產生類似 Windows PowerShell 表格格式的 HTML 表格。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>The header row displays the property names.</source>
          <target state="translated">標題列會顯示屬性名稱。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>Each table row represents an object and displays the object's values for each property.</source>
          <target state="translated">每個表格列皆代表一個物件，並會顯示該物件每個屬性的值。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>The List value generates a two-column HTML table for each object that resembles the Windows PowerShell list format.</source>
          <target state="translated">清單值會產生兩欄的 HTML 表格，每個物件，類似於 Windows PowerShell 清單格式。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>The first column displays the property name; the second column displays the property value.</source>
          <target state="translated">第一欄顯示屬性名稱；第二欄顯示屬性值。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>-Body</source>
          <target state="translated">內文</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>Specifies the text, as an array, to add after the opening <ph id="ph1">\&lt;</ph>BODY<ph id="ph2">\&gt;</ph> tag.</source>
          <target state="translated">指定的文字，做為陣列，若要開啟之後加入 <ph id="ph1">\&lt;</ph>主體<ph id="ph2">\&gt;</ph> 標記。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>By default, there is no text in that position.</source>
          <target state="translated">該位置預設不會有任何文字。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>-CssUri</source>
          <target state="translated">-CssUri</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>Specifies the Uniform Resource Identifier (URI) of the cascading style sheet (CSS) that is applied to the HTML file.</source>
          <target state="translated">指定套用到 HTML 檔案之階層式樣式表 (CSS) 的統一資源識別項 (URI)。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>The URI is included in a style sheet link in the output.</source>
          <target state="translated">URI 包含在輸出中的樣式表連結內。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>-Fragment</source>
          <target state="translated">片段</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>Indicates that this cmdlet generates only an HTML table.</source>
          <target state="translated">指出此 cmdlet 會產生僅 HTML 表格。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>The HTML, HEAD, TITLE, and BODY tags are omitted.</source>
          <target state="translated">將會省略 HTML、HEAD、TITLE 及 BODY 標記。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>-Head</source>
          <target state="translated">-H e a d</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>Specifies the content of the <ph id="ph1">\&lt;</ph>HEAD<ph id="ph2">\&gt;</ph> tag as an array.</source>
          <target state="translated">指定的內容 <ph id="ph1">\&lt;</ph>HEAD<ph id="ph2">\&gt;</ph> 標記做為陣列。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>The default is <ph id="ph1">\&lt;</ph>title<ph id="ph2">\&gt;</ph>HTML TABLE<ph id="ph3">\&lt;</ph>/title<ph id="ph4">\&gt;</ph>.</source>
          <target state="translated">預設值是 <ph id="ph1">\&lt;</ph>標題<ph id="ph2">\&gt;</ph>HTML 表格<ph id="ph3">\&lt;</ph>/t<ph id="ph4">\&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>If you use the <bpt id="p1">*</bpt>Head<ept id="p1">*</ept> parameter, the <bpt id="p2">*</bpt>Title<ept id="p2">*</ept> parameter is ignored.</source>
          <target state="translated">如果您使用 <bpt id="p1">*</bpt>Head<ept id="p1">*</ept> 參數， <bpt id="p2">*</bpt>標題<ept id="p2">*</ept> 參數會被忽略。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>-InputObject</source>
          <target state="translated">-InputObject</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>Specifies the objects to be represented in HTML.</source>
          <target state="translated">指定要以 HTML 呈現的物件。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>Enter a variable that contains the objects or type a command or expression that gets the objects.</source>
          <target state="translated">輸入包含物件的變數，或輸入可取得物件的命令或運算式。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>If you use this parameter to submit multiple objects, such as all of the services on a computer, <bpt id="p1">**</bpt>ConvertTo-Html<ept id="p1">**</ept> creates a table that displays the properties of a collection or of an array of objects (<bpt id="p2">**</bpt>System.Object<ept id="p2">**</ept><ph id="ph1">\[\]</ph>).</source>
          <target state="translated">如果您使用這個參數來送出多個物件，例如所有的電腦上，服務 <bpt id="p1">**</bpt>Convertto-html<ept id="p1">**</ept> 建立的資料表，會顯示物件的陣列或集合的屬性 (<bpt id="p2">**</bpt>System.Object<ept id="p2">**</ept><ph id="ph1">\[\]</ph>)。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>To create a table of the individual objects, use the pipeline operator to pipe the objects to <bpt id="p1">**</bpt>ConvertTo-Html<ept id="p1">**</ept>.</source>
          <target state="translated">若要建立個別物件的資料表，請使用管線運算子以管線傳送至物件 <bpt id="p1">**</bpt>Convertto-html<ept id="p1">**</ept>。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>-PostContent</source>
          <target state="translated">-PostContent</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>Specifies text to add after the closing <ph id="ph1">\&lt;</ph>/TABLE<ph id="ph2">\&gt;</ph> tag.</source>
          <target state="translated">指定要在關閉後新增文字 <ph id="ph1">\&lt;</ph>/表格<ph id="ph2">\&gt;</ph> 標記。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>By default, there is no text in that position.</source>
          <target state="translated">該位置預設不會有任何文字。</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>-PreContent</source>
          <target state="translated">-PreContent</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>Specifies an array of text to add before the opening <ph id="ph1">\&lt;</ph>TABLE<ph id="ph2">\&gt;</ph> tag.</source>
          <target state="translated">指定的文字開頭之前要加入陣列 <ph id="ph1">\&lt;</ph>資料表<ph id="ph2">\&gt;</ph> 標記。</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>By default, there is no text in that position.</source>
          <target state="translated">該位置預設不會有任何文字。</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>-Property</source>
          <target state="translated">屬性</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>Specifies the properties of the objects in the HTML.</source>
          <target state="translated">在 HTML 中指定之物件的屬性。</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>The value of the <bpt id="p1">*</bpt>Property<ept id="p1">*</ept> parameter can be a new calculated property.</source>
          <target state="translated">值 <bpt id="p1">*</bpt>屬性<ept id="p1">*</ept> 參數可以是新計算的屬性。</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>To create a calculated property, use a hash table.</source>
          <target state="translated">若要建立計算的屬性，請使用雜湊表。</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>Valid keys are:</source>
          <target state="translated">有效索引鍵為：</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>Label <ph id="ph1">\&lt;</ph>string<ph id="ph2">\&gt;</ph> (unlike with Select-Object or Format-Table, the Name key is not supported)</source>
          <target state="translated">標籤 <ph id="ph1">\&lt;</ph>字串<ph id="ph2">\&gt;</ph> （不同於以選取物件或格式化為表格名稱索引鍵不支援）</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>Expression <ph id="ph1">\&lt;</ph>string<ph id="ph2">\&gt;</ph> or <ph id="ph3">\&lt;</ph>script block</source>
          <target state="translated">運算式 <ph id="ph1">\&lt;</ph>字串<ph id="ph2">\&gt;</ph> 或 <ph id="ph3">\&lt;</ph>指令碼區塊</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>-Title</source>
          <target state="translated">標題</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>Specifies a title for the HTML file, that is, the text that appears between the <ph id="ph1">\&lt;</ph>TITLE<ph id="ph2">\&gt;</ph> tags.</source>
          <target state="translated">指定的 HTML 檔案，也就是之間出現的文字標題 <ph id="ph1">\&lt;</ph>標題<ph id="ph2">\&gt;</ph> 標記。</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>CommonParameters</source>
          <target state="translated">CommonParameters</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutVariable, -OutBuffer, -PipelineVariable, -Verbose, -WarningAction, and -WarningVariable.</source>
          <target state="translated">這個 cmdlet 支援一般參數:-偵錯、-ErrorAction、-ErrorVariable、-InformationAction-InformationVariable、-OutVariable、-OutBuffer、-PipelineVariable、-Verbose、-WarningAction 以及-WarningVariable。</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>For more information, see about_CommonParameters (http://go.microsoft.com/fwlink/?LinkID=113216).</source>
          <target state="translated">如需詳細資訊，請參閱 about_CommonParameters (http://go.microsoft.com/fwlink/?LinkID=113216)。</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>INPUTS</source>
          <target state="translated">輸入</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>System.Management.Automation.PSObject</source>
          <target state="translated">System.Management.Automation.PSObject</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>You can pipe any .NET object to <bpt id="p1">**</bpt>ConvertTo-Html<ept id="p1">**</ept>.</source>
          <target state="translated">您可以使用任何.NET 物件至管線 <bpt id="p1">**</bpt>Convertto-html<ept id="p1">**</ept>。</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>OUTPUTS</source>
          <target state="translated">輸出</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>System.String or System.Xml.XmlDocument</source>
          <target state="translated">System.String 或 System.Xml.XmlDocument</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>This cmdlet returns a series of strings that comprise valid HTML.</source>
          <target state="translated">此 cmdlet 會傳回一系列的構成有效 HTML 的字串。</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>NOTES</source>
          <target state="translated">附註</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>To use this cmdlet, pipe one or more objects to the cmdlet or use the <bpt id="p1">*</bpt>InputObject<ept id="p1">*</ept> parameter to specify the object.</source>
          <target state="translated">若要使用這個指令程式，透過管道傳送一個或多個物件的 cmdlet 或使用 <bpt id="p1">*</bpt>InputObject<ept id="p1">*</ept> 參數指定的物件。</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>When the input consists of multiple objects, the output of these two methods is quite different.</source>
          <target state="translated">當輸入是由多個物件組成時，這兩個方法的輸出會非常不一樣。</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>When you pipe multiple objects to a cmdlet, Windows PowerShell sends the objects to the cmdlet one at a time.</source>
          <target state="translated">當您使用管線傳送多個物件的指令程式時，Windows PowerShell 會將物件傳送至其中一個指令程式一次。</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>As a result, <bpt id="p1">**</bpt>ConvertTo-Html<ept id="p1">**</ept> creates a table that displays the individual objects.</source>
          <target state="translated">如此一來， <bpt id="p1">**</bpt>Convertto-html<ept id="p1">**</ept> 建立資料表，其中顯示個別的物件。</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>For example, if you pipe the processes on a computer to <bpt id="p1">**</bpt>ConvertTo-Html<ept id="p1">**</ept>, the resulting table displays all of the processes.</source>
          <target state="translated">例如，如果您在使用電腦上的處理程序管線傳送 <bpt id="p1">**</bpt>Convertto-html<ept id="p1">**</ept>, ，產生的資料表會顯示所有的處理序。</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>When you use the <bpt id="p1">*</bpt>InputObject<ept id="p1">*</ept> parameter to submit multiple objects, <bpt id="p2">**</bpt>ConvertTo-Html<ept id="p2">**</ept> receives these objects as a collection or as an array.</source>
          <target state="translated">當您使用 <bpt id="p1">*</bpt>InputObject<ept id="p1">*</ept> 參數來送出多個物件， <bpt id="p2">**</bpt>Convertto-html<ept id="p2">**</ept> 收到這些物件為集合或陣列。</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>As a result, it creates a table that displays the array and its properties, not the items in the array.</source>
          <target state="translated">因此，它會建立顯示陣列及其屬性 (而非顯示陣列中的項目) 的表格。</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>For example, if you use <bpt id="p1">*</bpt>InputObject<ept id="p1">*</ept> to submit the processes on a computer to <bpt id="p2">**</bpt>ConvertTo-Html<ept id="p2">**</ept>, the resulting table displays an object array (<bpt id="p3">**</bpt>System.Object<ept id="p3">**</ept><ph id="ph1">\[\]</ph>) and its properties.</source>
          <target state="translated">例如，如果您使用 <bpt id="p1">*</bpt>InputObject<ept id="p1">*</ept> 提交到的電腦上的處理程序 <bpt id="p2">**</bpt>Convertto-html<ept id="p2">**</ept>, ，產生的資料表會顯示物件陣列 (<bpt id="p3">**</bpt>System.Object<ept id="p3">**</ept><ph id="ph1">\[\]</ph>) 及其屬性。</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>To comply with the XHTML Strict DTD, the DOCTYPE tag is modified accordingly:</source>
          <target state="translated">若要符合 XHTML 嚴格 DTD，DOCTYPE 標記會跟著修改︰</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>(<ph id="ph1">\&lt;</ph>!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"       "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd"<ph id="ph2">\&gt;</ph>)</source>
          <target state="translated">(<ph id="ph1">\&lt;</ph>!DOCTYPE html PUBLIC"-//W3C//DTD XHTML 1.0 Strict / / EN""http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd"<ph id="ph2">\&gt;</ph>)</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>RELATED LINKS</source>
          <target state="translated">相關的連結</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>ConvertTo-Csv</source>
          <target state="translated">ConvertTo-Csv</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>ConvertTo-Json</source>
          <target state="translated">ConvertTo-Json</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>ConvertTo-Xml</source>
          <target state="translated">ConvertTo-Xml</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>Export-Clixml</source>
          <target state="translated">Export-clixml</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>Import-Clixml</source>
          <target state="translated">Import-clixml</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>