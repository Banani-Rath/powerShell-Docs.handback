<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-tw">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-1c394fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">b2f0dfd56a76e1a0f8efcf6bbb48aa9524e72222</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">reference\5.0\Microsoft.PowerShell.Utility\Update-FormatData.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions" />
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">76d8b1e49693f82f4b1ec22c5c50e26412a622ba</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">638485670ab744932f65f8a03807cfbca7a99f3c</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>powershell, cmdlet</source>
          <target state="translated">powershell 指令程式</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Update-FormatData</source>
          <target state="translated">Update-FormatData</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Update-FormatData</source>
          <target state="translated">Update-FormatData</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>SYNOPSIS</source>
          <target state="translated">概要</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Updates the formatting data in the current session.</source>
          <target state="translated">更新目前工作階段中的格式化資料。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>SYNTAX</source>
          <target state="translated">語法</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>DESCRIPTION</source>
          <target state="translated">描述</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>Update-FormatData<ept id="p1">**</ept> cmdlet reloads the formatting data from formatting files into the current session.</source>
          <target state="translated"> <bpt id="p1">**</bpt>Update-formatdata<ept id="p1">**</ept> 指令程式會重新載入格式化檔案到目前的工作階段的格式化資料。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>This cmdlet lets you update the formatting data without restarting Windows PowerShell.</source>
          <target state="translated">這個 Cmdlet 讓您不需重新啟動 Windows PowerShell 就能更新格式化資料。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Without parameters, <bpt id="p1">**</bpt>Update-FormatData<ept id="p1">**</ept> reloads the formatting files that it loaded previously.</source>
          <target state="translated">如果沒有參數， <bpt id="p1">**</bpt>Update-formatdata<ept id="p1">**</ept> 重新載入它先前載入的格式化檔案。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>You can use the parameters of <bpt id="p1">**</bpt>Update-FormatData<ept id="p1">**</ept> to add new formatting files to the session.</source>
          <target state="translated">您可以使用的參數 <bpt id="p1">**</bpt>Update-formatdata<ept id="p1">**</ept> 將新的格式化檔案新增至工作階段。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Formatting files are text files in XML format with the format.ps1xml file name extension.</source>
          <target state="translated">格式化檔案是 XML 格式的文字檔，且副檔名為 format.ps1xml。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>The formatting data in the files defines the display of Microsoft .NET Framework objects in the session.</source>
          <target state="translated">檔案中的格式化資料會定義工作階段中 Microsoft .NET Framework 物件的顯示方式。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>When Windows PowerShell starts, it loads the format data from the formatting files in the Windows PowerShell installation directory ($pshome) into the session.</source>
          <target state="translated">當 Windows PowerShell 啟動時，會將來自 Windows PowerShell 安裝目錄 ($pshome) 中格式化檔案的格式化資料載入工作階段。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>You can use <bpt id="p1">**</bpt>Update-FormatData<ept id="p1">**</ept> to reload the formatting data into the current session without restarting Windows PowerShell.</source>
          <target state="translated">您可以使用 <bpt id="p1">**</bpt>Update-formatdata<ept id="p1">**</ept> 不需要重新啟動 Windows PowerShell 重新載入到目前的工作階段的格式化資料。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>This is useful when you have added or changed a formatting file, but do not want to interrupt the session.</source>
          <target state="translated">當您已新增或變更格式化檔案，但不想中斷工作階段時，這非常有用。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>For more information about formatting files in Windows PowerShell, see about_Format.ps1xml.</source>
          <target state="translated">如需 Windows PowerShell 中格式化檔案的相關詳細資訊，請參閱 about_Format.ps1xml。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>EXAMPLES</source>
          <target state="translated">範例</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Example 1: Reload previously loaded formatting files</source>
          <target state="translated">範例 1︰ 重新載入先前載入的格式化檔案</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>This command reloads the formatting files that it loaded previously.</source>
          <target state="translated">這個命令會重新載入它先前載入的格式化檔案。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Example 2: Reload formatting files and trace and log formatting files</source>
          <target state="translated">範例 2︰ 重新載入格式化檔案和追蹤和記錄檔格式</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>This command reloads the formatting files into the session, including two new files, Trace.format.ps1xml and Log.format.ps1xml.</source>
          <target state="translated">這個命令會將格式化檔案重新載入工作階段，包括 Trace.format.ps1xml 和 Log.format.ps1xml 這兩個新檔案。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Because the command uses the <bpt id="p1">*</bpt>AppendPath<ept id="p1">*</ept> parameter, the formatting data in the new files is loaded after the formatting data from the built-in files.</source>
          <target state="translated">因為此命令會使用 <bpt id="p1">*</bpt>AppendPath<ept id="p1">*</ept> 之後從內建檔案的格式化資料載入參數，在新的檔案中的格式化資料。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">*</bpt>AppendPath<ept id="p1">*</ept> parameter is used because the new files contain formatting data for objects that are not referenced in the built-in files.</source>
          <target state="translated"> <bpt id="p1">*</bpt>AppendPath<ept id="p1">*</ept> 參數會使用，因為新的檔案包含內建檔案中未參考的物件格式化資料。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Example 3: Edit a formatting file and reload it</source>
          <target state="translated">範例 3︰ 編輯格式化檔案，並重新載入</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>This example shows how to reload a formatting file after you have edited it.</source>
          <target state="translated">這個範例示範如何在編輯格式化檔案之後重新載入它。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>The first command adds the NewFiles.format.ps1xml file to the session.</source>
          <target state="translated">第一個命令將 NewFiles.format.ps1xml 檔案新增至工作階段。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>It uses the <bpt id="p1">*</bpt>PrependPath<ept id="p1">*</ept> parameter because the file contains formatting data for objects that are referenced in the built-in files.</source>
          <target state="translated">它會使用 <bpt id="p1">*</bpt>PrependPath<ept id="p1">*</ept> 參數因為檔案包含內建檔案中所參考的物件格式化資料。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>After adding the NewFiles.format.ps1xml file and testing it in these sessions, the author edits the file.</source>
          <target state="translated">在之後新增 NewFiles.format.ps1xml 檔案並加以測試這些工作階段中，作者編輯檔案。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>The second command uses the <bpt id="p1">**</bpt>Update-FormatData<ept id="p1">**</ept> cmdlet to reload the formatting files.</source>
          <target state="translated">第二個命令會使用 <bpt id="p1">**</bpt>Update-formatdata<ept id="p1">**</ept> 指令程式來重新載入格式化檔案。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Because the NewFiles.format.ps1xml file was previously loaded, <bpt id="p1">**</bpt>Update-FormatData<ept id="p1">**</ept> automatically reloads it without using parameters.</source>
          <target state="translated">因為先前已載入 NewFiles.format.ps1xml 檔案， <bpt id="p1">**</bpt>Update-formatdata<ept id="p1">**</ept> 自動重新載入它，而不使用參數。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>PARAMETERS</source>
          <target state="translated">參數</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>-AppendPath</source>
          <target state="translated">-AppendPath</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Specifies formatting files that this cmdlet adds to the session.</source>
          <target state="translated">指定這個指令程式新增至工作階段的格式化檔案。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>The files are loaded after Windows PowerShell loads the built-in formatting files.</source>
          <target state="translated">檔案會在 Windows PowerShell 載入內建的格式化檔案之後載入。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>When formatting .NET objects, Windows PowerShell uses the first formatting definition that it finds for each .NET type.</source>
          <target state="translated">將 .NET 物件格式化時，Windows PowerShell 會使用它針對每個 .NET 類型所找到的第一個格式化定義。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>If you use the <bpt id="p1">*</bpt>AppendPath<ept id="p1">*</ept> parameter, Windows PowerShell searches the data from the built-in files before it encounters the formatting data that you are adding.</source>
          <target state="translated">如果您使用 <bpt id="p1">*</bpt>AppendPath<ept id="p1">*</ept> 參數，Windows PowerShell 會搜尋內建檔案中的資料之前遇到您要新增的格式化資料。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Use this parameter to add a file that formats a .NET object that is not referenced in the built-in formatting files.</source>
          <target state="translated">使用這個參數來新增格式化 .NET 物件的檔案，而內建的格式化檔案未參考該物件。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>-Confirm</source>
          <target state="translated">-Confirm</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Prompts you for confirmation before running the cmdlet.Prompts you for confirmation before running the cmdlet.</source>
          <target state="translated">會提示您進行確認，然後再執行此指令程式。會提示您進行確認，然後再執行此指令程式。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>-PrependPath</source>
          <target state="translated">-PrependPath</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Specifies formatting files that this cmdlet adds to the session.</source>
          <target state="translated">指定這個指令程式新增至工作階段的格式化檔案。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>The files are loaded before Windows PowerShell loads the built-in formatting files.</source>
          <target state="translated">檔案會在 Windows PowerShell 載入內建的格式化檔案之前載入。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>When formatting .NET objects, Windows PowerShell uses the first formatting definition that it finds for each .NET type.</source>
          <target state="translated">將 .NET 物件格式化時，Windows PowerShell 會使用它針對每個 .NET 類型所找到的第一個格式化定義。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>If you use the <bpt id="p1">*</bpt>PrependPath<ept id="p1">*</ept> parameter, Windows PowerShell searches the data from the files that you are adding before it encounters the formatting data from the built-in files.</source>
          <target state="translated">如果您使用 <bpt id="p1">*</bpt>PrependPath<ept id="p1">*</ept> 參數，Windows PowerShell 會搜尋您要新增的檔案中的資料之前遇到來自內建檔案的格式化資料。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Use this parameter to add a file that formats a .NET object that is also referenced in the built-in formatting files.</source>
          <target state="translated">使用這個參數來新增格式化 .NET 物件的檔案，而內建的格式化檔案亦參考該物件。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>-WhatIf</source>
          <target state="translated">-WhatIf</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Shows what would happen if the cmdlet runs.</source>
          <target state="translated">顯示執行 Cmdlet 後會發生的情況。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>The cmdlet is not run.Shows what would happen if the cmdlet runs.</source>
          <target state="translated">無法執行此指令程式。顯示執行此指令程式會發生什麼事。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>The cmdlet is not run.</source>
          <target state="translated">未執行 Cmdlet。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>CommonParameters</source>
          <target state="translated">CommonParameters</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutVariable, -OutBuffer, -PipelineVariable, -Verbose, -WarningAction, and -WarningVariable.</source>
          <target state="translated">這個 cmdlet 支援一般參數:-偵錯、-ErrorAction、-ErrorVariable、-InformationAction-InformationVariable、-OutVariable、-OutBuffer、-PipelineVariable、-Verbose、-WarningAction 以及-WarningVariable。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>For more information, see about_CommonParameters (http://go.microsoft.com/fwlink/?LinkID=113216).</source>
          <target state="translated">如需詳細資訊，請參閱 about_CommonParameters (http://go.microsoft.com/fwlink/?LinkID=113216)。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>INPUTS</source>
          <target state="translated">輸入</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>System.String</source>
          <target state="translated">System.String</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>You can pipe a string that contains the append path to <bpt id="p1">**</bpt>Update-FormatData<ept id="p1">**</ept>.</source>
          <target state="translated">您可以透過管道傳送字串，包含附加路徑 <bpt id="p1">**</bpt>Update-formatdata<ept id="p1">**</ept>。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>OUTPUTS</source>
          <target state="translated">輸出</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>None</source>
          <target state="translated">無</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>The cmdlet does not return any output.</source>
          <target state="translated">此 Cmdlet 不會傳回任何輸出。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>NOTES</source>
          <target state="translated">附註</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Update-FormatData<ept id="p1">**</ept> also updates the formatting data for commands in the session that were imported from modules.</source>
          <target state="translated"><bpt id="p1">**</bpt>Update-formatdata<ept id="p1">**</ept> 也會更新從模組匯入工作階段中命令的格式化資料。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>If the formatting file for a module changes, you can run an <bpt id="p1">**</bpt>Update-FormatData<ept id="p1">**</ept> command to update the formatting data for imported commands.</source>
          <target state="translated">如果變更模組的格式化檔案，您可以執行 <bpt id="p1">**</bpt>Update-formatdata<ept id="p1">**</ept> 命令更新格式化資料匯入命令。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>You do not need to import the module again.</source>
          <target state="translated">您不需要再次匯入模組。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>RELATED LINKS</source>
          <target state="translated">相關的連結</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>Get-FormatData</source>
          <target state="translated">Get-FormatData</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>Export-FormatData</source>
          <target state="translated">Export-formatdata</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>