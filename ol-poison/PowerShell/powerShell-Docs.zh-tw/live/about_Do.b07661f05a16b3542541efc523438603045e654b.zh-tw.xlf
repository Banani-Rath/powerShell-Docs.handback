<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-tw">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-1c394fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ed207553dc22bef71c72db3991bfe8ed1153091b</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">reference\3.0\Microsoft.PowerShell.Core\About\about_Do.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions" />
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">a7b8985b2459127bc3328901ddeccb6e2f6aaef3</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">2e51fedd9bb3d053e606597427984b25d12cc7b6</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>about_Do</source>
          <target state="translated">about_Do</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>powershell, cmdlet</source>
          <target state="translated">powershell 指令程式</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>About Do</source>
          <target state="translated">有關執行</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>about_Do</source>
          <target state="translated">about_Do</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>TOPIC</source>
          <target state="translated">主題</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>about_Do</source>
          <target state="translated">about_Do</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>SHORT DESCRIPTION</source>
          <target state="translated">簡短描述</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Runs a statement list one or more times, subject to a While or Until condition.</source>
          <target state="translated">會執行一或多次，根據 While 或 Until 條件陳述式清單。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>LONG DESCRIPTION</source>
          <target state="translated">詳細描述</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The Do keyword works with the While keyword or the Until keyword to run the statements in a script block, subject to a condition.</source>
          <target state="translated">Do 關鍵字搭配 While 關鍵字或 Until 關鍵字，在指令碼區塊中，有條件執行的陳述式。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Unlike the related While loop, the script block in a Do loop always runs at least once.</source>
          <target state="translated">不同於相關迴圈，指令碼區塊中執行迴圈，一定會在執行時至少一次。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>A Do-While loop is a variety of the While loop.</source>
          <target state="translated">重複執行相同動作-迴圈時的各種不同的 While 迴圈。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>In a Do-While loop, the condition is evaluated after the script block has run.</source>
          <target state="translated">在執行中的 While 迴圈，指令碼區塊執行之後，會評估條件。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>As in a While loop, the script block is repeated as long as the condition evaluates to true.</source>
          <target state="translated">例如在 While 迴圈，指令碼區塊會重複，只要在條件評估為 true。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Like a Do-While loop, a Do-Until loop always runs at least once before the condition is evaluated.</source>
          <target state="translated">要重複執行相同動作的 While 迴圈，重複執行相同動作-直到迴圈一律至少一次執行之前執行評估條件。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>However, the script block runs only while the condition is false.</source>
          <target state="translated">不過，只有當條件為 false 時，才會執行指令碼區塊。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>The Continue and Break flow control keywords can be used in a Do-While loop or in a Do-Until loop.</source>
          <target state="translated">繼續和中斷的流程控制關鍵字可用於執行-While 迴圈或重複執行相同動作的迴圈。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Syntax The following shows the syntax of the Do-While statement:</source>
          <target state="translated">下列語法顯示的 [不要語法-While 陳述式︰</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>do {<ph id="ph1">&lt;statement list&gt;</ph>} while (<ph id="ph2">&lt;condition&gt;</ph>)</source>
          <target state="translated">請勿 {<ph id="ph1">&lt;statement list&gt;</ph>} 時 (<ph id="ph2">&lt;condition&gt;</ph>)</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>The following shows the syntax of the Do-Until statement:</source>
          <target state="translated">下圖顯示的 [不要語法的陳述式︰</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>do {<ph id="ph1">&lt;statement list&gt;</ph>} until (<ph id="ph2">&lt;condition&gt;</ph>)</source>
          <target state="translated">請勿 {<ph id="ph1">&lt;statement list&gt;</ph>} 直到 (<ph id="ph2">&lt;condition&gt;</ph>)</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>The statment list contains one or more statements that run each time the loop is entered or repeated.</source>
          <target state="translated">陳述式清單包含一或多個陳述式，每次執行迴圈沒有輸入，或重複。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>The condition portion of the statement resolves to true or false.</source>
          <target state="translated">陳述式的條件部分會解析為 true 或 false。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Example The following example of a Do statement counts the items in an array until it reaches an item with a value of 0.</source>
          <target state="translated">範例執行陳述式的下列範例計算陣列中的項目，直到達到的值為 0 的項目。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>C:\PS&gt; $x = 1,2,78,0 C:\PS&gt; do { $count++; $a++; } while ($x[$a] -ne 0) C:\PS&gt; $count</source>
          <target state="translated">C:\PS&amp;GT; &gt; $x = 1,2,78,0 C:\PS&amp;GT; &gt; 請勿 {$count + +，$ + +;} 時 ($x [$]-ne 0) $count C:\PS&amp;GT; &gt;</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>3</source>
          <target state="translated">3</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>The following example uses the Until keyword.</source>
          <target state="translated">下列範例會使用到關鍵字。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Notice that the not equal to operator (-ne) is replaced by the equal to operator (-eq).</source>
          <target state="translated">請注意，不等於運算子 (-ne) 取代等於運算子 (-eq)。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>C:\PS&gt; $x = 1,2,78,0 C:\PS&gt; do { $count++; $a++; } until ($x[$a] -eq 0) C:\PS&gt; $count</source>
          <target state="translated">C:\PS&amp;GT; &gt; $x = 1,2,78,0 C:\PS&amp;GT; &gt; 請勿 {$count + +，$ + +;} 直到 ($x [$]-eq 0) $count C:\PS&amp;GT; &gt;</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>3</source>
          <target state="translated">3</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>The following example writes all the values of an array, skipping any value that is less than zero.</source>
          <target state="translated">下列範例會將所有值的陣列，略過是任何值小於零。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>do { if ($x[$a] -lt 0) { continue } Write-Host $x[$a] } while (++$a -lt 10)</source>
          <target state="translated">請勿 {如果 ($x [$]-lt 0) {繼續} Write-host $x [$]} 時 (+ + $a-lt 10)</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>SEE ALSO</source>
          <target state="translated">另請參閱</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>about_While about_Operators about_Assignment_Operators about_Comparison_Operators about_Break about_Continue</source>
          <target state="translated">about_While about_Operators about_Assignment_Operators about_Comparison_Operators about_Break about_Continue</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>