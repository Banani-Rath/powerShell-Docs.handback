<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="fr-fr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-1c394fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">89ac7fe6044c2aa5fba883a7dfa39012fb8b0f3d</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">reference\4.0\Microsoft.PowerShell.Core\About\about_Jobs.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions" />
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1249c4963181b5502d417e56333b6670cf9cd227</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">7148fd6a31045bc405e21fb68c7a8c1241c2030f</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>about_Jobs</source>
          <target state="translated">about_Jobs</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>powershell, cmdlet</source>
          <target state="translated">applet de commande PowerShell</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>About Jobs</source>
          <target state="translated">À propos des travaux</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>about_Jobs</source>
          <target state="translated">about_Jobs</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>about_Jobs</source>
          <target state="translated">about_Jobs</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>SHORT DESCRIPTION</source>
          <target state="translated">DESCRIPTION COURTE</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Provides information about how Windows PowerShell background jobs run a command or expression in the background without interacting with the current session.</source>
          <target state="translated">Fournit des informations sur comment des tâches en arrière-plan Windows PowerShell exécuter une commande ou une expression en arrière-plan sans interaction avec la session active.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>LONG DESCRIPTION</source>
          <target state="translated">DESCRIPTION DÉTAILLÉE</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>This topic explains how to run background jobs in Windows PowerShell on a local computer.</source>
          <target state="translated">Cette rubrique explique comment exécuter des tâches en arrière-plan dans Windows PowerShell sur un ordinateur local.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>For information about running background jobs on remote computers, see about_Remote_Jobs.</source>
          <target state="translated">Pour plus d’informations sur l’exécution des tâches en arrière-plan sur des ordinateurs distants, consultez about_Remote_Jobs.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>When you start a background job, the command prompt returns immediately, even if the job takes an extended time to complete.</source>
          <target state="translated">Lorsque vous démarrez une tâche en arrière-plan, l’invite de commande retourne immédiatement, même si la tâche prend plus de temps pour terminer.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>You can continue to work in the session without interruption while the job runs.</source>
          <target state="translated">Vous pouvez continuer à travailler dans la session sans interruption pendant l'exécution de la tâche.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>THE JOB CMDLETS</source>
          <target state="translated">LES APPLETS DE COMMANDE DE TRAVAIL</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Start-Job        Starts a background job on a local computer.</source>
          <target state="translated">Start-Job démarre un arrière-plan de travail sur un ordinateur local.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Get-Job          Gets the background jobs that were started in the current session.</source>
          <target state="translated">Get-Job Obtient les tâches en arrière-plan qui ont été démarrées dans la session active.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Receive-Job      Gets the results of background jobs.</source>
          <target state="translated">Tâche de recevoir les résultats des travaux en arrière-plan.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Stop-Job         Stops a background job.</source>
          <target state="translated">Stop-Job arrête une tâche en arrière-plan.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Wait-Job         Suppresses the command prompt until one or all jobs are complete.</source>
          <target state="translated">Wait-Job supprime l’invite de commandes jusqu'à ce qu’une ou toutes les tâches sont terminées.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Remove-Job       Deletes a background job.</source>
          <target state="translated">Remove-Job supprime une tâche en arrière-plan.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Invoke-Command   The AsJob parameter runs any command as a background job on a remote computer.</source>
          <target state="translated">Paramètre AsJob le Invoke-Command exécute une commande comme une tâche en arrière-plan sur un ordinateur distant.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>You can also use Invoke-Command to run any job command remotely, including a Start-Job command.</source>
          <target state="translated">Vous pouvez également utiliser Invoke-Command pour exécuter des commandes de travail à distance, y compris une commande Start-Job.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>HOW TO START A JOB ON THE LOCAL COMPUTER</source>
          <target state="translated">COMMENT DÉMARRER UNE TÂCHE SUR L’ORDINATEUR LOCAL</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>To start a background job on the local computer, use the Start-Job cmdlet.</source>
          <target state="translated">Pour démarrer une tâche en arrière-plan sur l’ordinateur local, utilisez l’applet de commande Start-Job.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>To write a Start-Job command, enclose the command that the job runs in braces ( { } ).</source>
          <target state="translated">Pour écrire une commande Start-Job, placez la commande que la tâche s’exécute entre accolades ({}).</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Use the ScriptBlock parameter to specify the command.</source>
          <target state="translated">Utilisez le paramètre ScriptBlock pour spécifier la commande.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>The following command starts a background job that runs a Get-Process command on the local computer.</source>
          <target state="translated">La commande suivante démarre une tâche en arrière-plan qui exécute une commande Get-Process sur l’ordinateur local.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Start-Job -ScriptBlock {Get-Process}</source>
          <target state="translated">Start-Job - ScriptBlock {Get-Process}</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>The Start-Job command returns an object that represents the job.</source>
          <target state="translated">La commande Start-Job retourne un objet qui représente la tâche.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>The job object contains useful information about the job, but it does not contain the job results.</source>
          <target state="translated">L'objet de traitement retourné par Get-Job contient des informations utiles sur la tâche, mais ne contient pas les résultats de la tâche.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Save the job object in a variable, and then use it with the other Job cmdlets to manage the background job.</source>
          <target state="translated">Enregistrer l’objet de traitement dans une variable, puis l’utiliser avec les autres applets de commande de travail pour gérer la tâche en arrière-plan.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>The following command starts a job object and saves the resulting job object in the $job variable.</source>
          <target state="translated">La commande suivante démarre un objet de travail et enregistre l’objet résultant dans la variable $job.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>$job = Start-Job -ScriptBlock {Get-Process}</source>
          <target state="translated">$job = start-Job - ScriptBlock {Get-Process}</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>You can also use the Get-Job cmdlet to get objects that represent the jobs started in the current session.</source>
          <target state="translated">Vous pouvez également utiliser l’applet de commande Get-Job pour obtenir les objets qui représentent les tâches démarrées dans la session active.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Get-Job returns the same job object that Start-Job returns.</source>
          <target state="translated">Get-Job retourne le même objet de travail qui ne retourne Start-Job.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>GETTING JOB OBJECTS</source>
          <target state="translated">OBTENIR DES OBJETS DE TRAVAIL</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>To get object that represent the background jobs that were started in the current session, use the Get-Job cmdlet.</source>
          <target state="translated">Pour obtenir les objets qui représentent les tâches en arrière-plan qui ont été démarrées dans la session active, utilisez l’applet de commande Get-Job.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Without parameters, Get-Job returns all of the jobs that were started in the current session.</source>
          <target state="translated">Sans paramètres, Get-Job retourne toutes les tâches qui ont été démarrées dans la session active.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>For example, the following command gets the jobs in the current session.</source>
          <target state="translated">Par exemple, la commande suivante obtient les tâches dans la session active.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>PS C:&gt;Get-Job</source>
          <target state="translated">C: &gt; Get-Job</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Id  Name  PSJobTypeName State      HasMoreData  Location   Command</source>
          <target state="translated">ID nom PSJobTypeName état HasMoreData emplacement commande</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>1   Job1  BackgroundJob Running    True         localhost  Get-Process</source>
          <target state="translated">1 localhost True Job1 BackgroundJob exécuter Get-Process</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>You can also save the job object in a variable and use it to represent the job in a later command.</source>
          <target state="translated">Vous pouvez également enregistrer l’objet de traitement dans une variable et l’utiliser pour représenter la tâche dans une commande ultérieure.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>The following command gets the job with ID 1 and saves it in the $job variable.</source>
          <target state="translated">La commande suivante obtient la tâche avec l’ID 1 et l’enregistre dans la variable $job.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>$job = Get-Job -Id 1</source>
          <target state="translated">$job = get-Job-Id 1</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>The job object contains the state of the job, which indicates whether the job has finished.</source>
          <target state="translated">L’objet de tâche contient l’état de la tâche, qui indique si la tâche est terminée.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>A finished job has a state of "Complete" or "Failed".</source>
          <target state="translated">Une tâche terminée a un état « Terminé » ou « Échec ».</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>A job might also be blocked or running.</source>
          <target state="translated">Une tâche peut également être bloqués ou en cours d’exécution.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Get-Job</source>
          <target state="translated">Get-Job</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Id  Name  PSJobTypeName State      HasMoreData  Location   Command</source>
          <target state="translated">ID nom PSJobTypeName état HasMoreData emplacement commande</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>1   Job1  BackgroundJob Complete   True         localhost  Get-Process</source>
          <target state="translated">1 Job1 BackgroundJob complète True localhost Get-Process</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>GETTING THE RESULTS OF A JOB</source>
          <target state="translated">OBTENTION DES RÉSULTATS D'UNE TÂCHE</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>When you run a background job, the results do not appear immediately.</source>
          <target state="translated">Lorsque vous exécutez une tâche en arrière-plan, les résultats n’apparaissent pas immédiatement.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Instead, the Start-Job cmdlet returns a job object that represents the job, but it does not contain the results.</source>
          <target state="translated">Au lieu de cela, l’applet de commande Start-Job retourne un objet de travail qui représente la tâche, mais il ne contient pas les résultats.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>To get the results of a background job, use the Receive-Job cmdlet.</source>
          <target state="translated">Pour obtenir les résultats d’une tâche en arrière-plan, utilisez l’applet de commande Receive-Job.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>The following command uses the Receive-Job cmdlet to get the results of the job.</source>
          <target state="translated">La commande suivante utilise l’applet de commande Receive-Job pour obtenir les résultats de la tâche.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>It uses a job object saved in the $job variable to identify the job.</source>
          <target state="translated">Il utilise un objet de tâche enregistré dans la variable $job pour identifier la tâche.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Receive-Job -Job $job</source>
          <target state="translated">Receive-Job-$job de travail</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>The Receive-Job cmdlet returns the results of the job.</source>
          <target state="translated">L’applet de commande Receive-Job retourne les résultats de la tâche.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>Handles  NPM(K)    PM(K)      WS(K) VM(M)   CPU(s)    Id ProcessName</source>
          <target state="translated">Gère les VM (m) Id d’UC ProcessName de npm (k) PM (k) WS (k)</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>103       4    11328       9692    56           1176 audiodg 804      14    12228      14108   100   101.74  1740 CcmExec 668       7     2672       6168   104    32.26   488 csrss</source>
          <target state="translated">103 4 11328 9692 56 1176 audiodg 804 14 12228 14108 100 101.74 1740 CcmExec 668 7 2672 6168 104 32.26 488 csrss</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>...</source>
          <target state="translated">...</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>You can also save the results of a job in a variable.</source>
          <target state="translated">Vous pouvez également enregistrer les résultats d’une tâche dans une variable.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>The following command saves the results of the job in the $job variable to the $results variable.</source>
          <target state="translated">La commande suivante enregistre les résultats de la tâche dans la variable $job à la variable $results.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>$results = Receive-Job -Job $job</source>
          <target state="translated">$results = Receive-Job-$job de travail</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>And, you can save the results of the job in a file by using the redirection operator (&gt;) or the Out-File cmdlet.</source>
          <target state="translated">Et bien, vous pouvez enregistrer les résultats de la tâche dans un fichier à l’aide de l’opérateur de redirection (&gt;) ou la cmdlet Out-File.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>The following command uses the redirection operator to save the results of the job in the $job variable in the Results.txt file.</source>
          <target state="translated">La commande suivante utilise l’opérateur de redirection pour enregistrer les résultats de la tâche dans la variable $job dans le fichier Results.txt.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>Receive-Job -Job $job &gt; results.txt</source>
          <target state="translated">Receive-Job-travail $job &gt; results.txt</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>GETTING AND KEEPING PARTIAL JOB RESULTS</source>
          <target state="translated">RÉSULTATS DE LA TÂCHE MISE EN ROUTE ET CONSERVATION PARTIELLE</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>The Receive-Job cmdlet gets the results of a background job.</source>
          <target state="translated">L’applet de commande Receive-Job Obtient les résultats d’une tâche en arrière-plan.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>If the job is complete, Receive-Job gets all job results.</source>
          <target state="translated">Si la tâche est terminée, Receive-Job Obtient tous les résultats de la tâche.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>If the job is still running, Receive-Job gets the results that have been generated thus far.</source>
          <target state="translated">Si la tâche est en cours d’exécution, Receive-Job Obtient les résultats qui ont été générées jusqu'à présent.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>You can run Receive-Job commands again to get the remaining results.</source>
          <target state="translated">Vous pouvez exécuter des commandes Receive-Job pour obtenir les résultats restants.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>When Receive-Job returns results, by default, it deletes those results from the cache where job results are stored.</source>
          <target state="translated">Receive-Job retourne des résultats, par défaut, il supprime ces résultats à partir du cache où sont stockés les résultats de la tâche.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>If you run another Receive-Job command, you get only the results that are not yet received.</source>
          <target state="translated">Si vous exécutez une autre commande Receive-Job, vous obtenez uniquement les résultats qui n’ont pas encore été reçus.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>The following commands show the results of Receive-Job commands run before the job is complete.</source>
          <target state="translated">Les commandes suivantes montrent que les résultats des commandes de Receive-Job s’exécuter avant que la tâche soit terminée.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>C:\PS&gt; Receive-Job -Job $job</source>
          <target state="translated">C:\PS &gt; Receive-Job-$job de travail</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>Handles  NPM(K)    PM(K)      WS(K) VM(M)   CPU(s)     Id ProcessName</source>
          <target state="translated">Gère les VM (m) Id d’UC ProcessName de npm (k) PM (k) WS (k)</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>103       4    11328       9692    56            1176 audiodg 804      14    12228      14108   100   101.74   1740 CcmExec</source>
          <target state="translated">103 4 11328 9692 56 1176 audiodg 804 14 12228 14108 100 101.74 1740 CcmExec</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>C:\PS&gt; Receive-Job -Job $job</source>
          <target state="translated">C:\PS &gt; Receive-Job-$job de travail</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>Handles  NPM(K)    PM(K)      WS(K) VM(M)   CPU(s)     Id ProcessName</source>
          <target state="translated">Gère les VM (m) Id d’UC ProcessName de npm (k) PM (k) WS (k)</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>68       3     2632        664    29     0.36   1388 ccmsetup 749      22    21468      19940   203   122.13   3644 communicator 905       7     2980       2628    34   197.97    424 csrss 1121      25    28408      32940   174   430.14   3048 explorer</source>
          <target state="translated">68 3 2632 664 29 1388 0,36 ccmsetup 749 22 21468 19940 203 122.13 csrss de 424 197.97 3644 communicator 905 7 2980 2628 34 1121 25 28408 32940 174 430.14 3048 explorer</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>To prevent Receive-Job from deleting the job results that it has returned, use the Keep parameter.</source>
          <target state="translated">Pour empêcher Receive-Job de supprimer les résultats de la tâche a renvoyé, utilisez le paramètre Keep.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>As a result, Receive-Job returns all of the results that have been generated until that time.</source>
          <target state="translated">Par conséquent, Receive-Job retourne tous les résultats qui ont été générées qu’à ce moment-là.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>The following commands show the effect of using the Keep parameter on a job that is not yet complete.</source>
          <target state="translated">Les commandes suivantes affichent l’effet de l’utilisation du paramètre conserver sur une tâche qui n’est pas encore terminée.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>C:\PS&gt; Receive-Job -Job $job -Keep</source>
          <target state="translated">C:\PS &gt; Receive-Job-travail $job-conserver</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>Handles  NPM(K)    PM(K)      WS(K) VM(M)   CPU(s)     Id ProcessName</source>
          <target state="translated">Gère les VM (m) Id d’UC ProcessName de npm (k) PM (k) WS (k)</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>103       4    11328       9692    56            1176 audiodg 804      14    12228      14108   100   101.74   1740 CcmExec</source>
          <target state="translated">103 4 11328 9692 56 1176 audiodg 804 14 12228 14108 100 101.74 1740 CcmExec</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>C:\PS&gt; Receive-Job -Job $job -Keep</source>
          <target state="translated">C:\PS &gt; Receive-Job-travail $job-conserver</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>Handles  NPM(K)    PM(K)      WS(K) VM(M)   CPU(s)     Id ProcessName</source>
          <target state="translated">Gère les VM (m) Id d’UC ProcessName de npm (k) PM (k) WS (k)</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>103       4    11328       9692    56            1176 audiodg 804      14    12228      14108   100   101.74   1740 CcmExec 68       3     2632        664    29     0.36   1388 ccmsetup 749      22    21468      19940   203   122.13   3644 communicator 905       7     2980       2628    34   197.97    424 csrss 1121      25    28408      32940   174   430.14   3048 explorer</source>
          <target state="translated">103 4 11328 9692 56 1176 audiodg 804 14 12228 14108 100 101.74 1740 CcmExec 68 3 2632 664 29 1388 0,36 ccmsetup 749 22 21468 19940 203 122.13 csrss de 424 197.97 3644 communicator 905 7 2980 2628 34 1121 25 28408 32940 174 430.14 3048 explorer</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>WAITING FOR THE RESULTS</source>
          <target state="translated">ATTENDRE LES RÉSULTATS</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>If you run a command that takes a long time to complete, you can use the properties of the job object to determine when the job is complete.</source>
          <target state="translated">Si vous exécutez une commande qui prend un certain temps, vous pouvez utiliser les propriétés de l’objet de travail pour déterminer quand la tâche est terminée.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>The following command uses the Get-Job object to get all of the background jobs in the current session.</source>
          <target state="translated">La commande suivante utilise l’objet de Get-Job pour obtenir toutes les tâches en arrière-plan dans la session active.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>Get-Job</source>
          <target state="translated">Get-Job</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>The results appear in a table.</source>
          <target state="translated">Les résultats s’affichent dans une table.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>The status of the job appears in the State column.</source>
          <target state="translated">L’état de la tâche s’affiche dans la colonne d’état.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>Id  Name  PSJobTypeName State      HasMoreData  Location   Command</source>
          <target state="translated">ID nom PSJobTypeName état HasMoreData emplacement commande</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>1   Job1  BackgroundJob Complete    True         localhost  Get-Process 2   Job2  BackgroundJob Running     True         localhost  Get-EventLog -Log Syst... 3   Job3  BackgroundJob Complete    True         localhost  dir -Path C:<ph id="ph1">\*</ph> -Recurse</source>
          <target state="translated">1 Job1 BackgroundJob complète True localhost Get-Process 2 Job2 BackgroundJob en cours d’exécution True localhost Get-EventLog-syst. journal... 3 dir localhost Job3 BackgroundJob complète True-Path C:<ph id="ph1">\*</ph> -Recurse</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>In this case, the State property reveals that Job 2 is still running.</source>
          <target state="translated">Dans ce cas, la propriété State révèle que 2 de la tâche est en cours d’exécution.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>If you were to use the Receive-Job cmdlet to get the job results now, the results would be incomplete.</source>
          <target state="translated">Si vous deviez utiliser l’applet de commande Receive-Job pour obtenir les résultats de la tâche maintenant, le résultat serait incomplète.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>You can use the Receive-Job cmdlet repeatedly to get all of the results.</source>
          <target state="translated">Vous pouvez utiliser l’applet de commande Receive-Job à plusieurs reprises pour obtenir tous les résultats.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>By default, each time you use it, you get only the results that were not already received, but you can use the Keep parameter of the Receive-Job cmdlet to retain the results, even though they were already received.</source>
          <target state="translated">Par défaut, chaque fois que vous utilisez, vous obtenez uniquement les résultats qui n’ont pas été déjà reçus, mais vous pouvez utiliser le paramètre de conservation de l’applet de commande Receive-Job pour conserver les résultats, même s’ils ont été déjà reçus.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>You can write the partial results to a file and then append newer results as they arrive or you can wait and check the state of the job later.</source>
          <target state="translated">Vous pouvez écrire les résultats partiels dans un fichier et puis ajoutez les résultats de la plus récente qu’ils arrivent, ou bien attendre et vérifier l’état de la tâche plus tard.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>You can use the Wait parameter of the Receive-Job cmdlet, which does not return the command prompt until the job is complete and all results are available.</source>
          <target state="translated">Vous pouvez utiliser le paramètre d’attente de l’applet de commande Receive-Job, qui ne retourne pas l’invite de commandes jusqu'à ce que la tâche est terminée et tous les résultats sont disponibles.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>You can also use the Wait-Job cmdlet to wait for any or all of the results of the job.</source>
          <target state="translated">Vous pouvez également utiliser l’applet de commande Wait-Job pour attendre tout ou partie des résultats de la tâche.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>Wait-Job lets you wait for a particular job, for all jobs, or for any of the jobs to be completed.</source>
          <target state="translated">Wait-Job vous permet d’attendre pour une tâche particulière, pour toutes les tâches ou pour toutes les tâches à effectuer.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>The following command uses the Wait-Job cmdlet to wait for a job with</source>
          <target state="translated">La commande suivante utilise l’applet de commande Wait-Job pour attendre une tâche avec</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>ID 10.</source>
          <target state="translated">ID 10.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>Wait-Job -ID 10</source>
          <target state="translated">Wait-Job - ID 10</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>As a result, the Windows PowerShell prompt is suppressed until the job is completed.</source>
          <target state="translated">Par conséquent, l’invite est supprimée avant la fin de la tâche de Windows PowerShell.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>You can also wait for a predetermined period of time.</source>
          <target state="translated">Vous pouvez également attendre pendant une période prédéterminée.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>This command uses the Timeout parameter to limit the wait to 120 seconds.</source>
          <target state="translated">Cette commande utilise le paramètre de délai d’attente pour limiter l’attente sur 120 secondes.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>When the time expires, the command prompt returns, but the job continues to run in the background.</source>
          <target state="translated">Lorsque le délai expire, à l’invite de commande, mais la tâche continue de s’exécuter en arrière-plan.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>Wait-Job -ID 10 -Timeout 120</source>
          <target state="translated">Wait-Job - ID 10 - Timeout 120</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>STOPPING A JOB</source>
          <target state="translated">ARRÊT D’UNE TÂCHE</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>To stop a background job, use the Stop-Job cmdlet.</source>
          <target state="translated">Pour arrêter une tâche en arrière-plan, utilisez l’applet de commande Stop-Job.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>The following command starts a job to get every entry in the System event log.</source>
          <target state="translated">La commande suivante démarre une tâche pour obtenir toutes les entrées dans le journal des événements système.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>It saves the job object in the $job variable.</source>
          <target state="translated">Elle enregistre l’objet de traitement dans la variable $job.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>$job = Start-Job -ScriptBlock {Get-EventLog -Log System}</source>
          <target state="translated">$job = start-Job - ScriptBlock {Get-EventLog-système de journal}</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>The following command stops the job.</source>
          <target state="translated">La commande suivante arrête la tâche.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>It uses a pipeline operator (|) to send the job in the $job variable to Stop-Job.</source>
          <target state="translated">Il utilise un opérateur de pipeline (|) pour envoyer la tâche dans la variable $job à Stop-Job.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>$job | Stop-Job</source>
          <target state="translated">$job | Tâche d’arrêt</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>DELETING A JOB</source>
          <target state="translated">SUPPRESSION D’UN TRAVAIL</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>To delete a background job, use the Remove-Job cmdlet.</source>
          <target state="translated">Pour supprimer une tâche en arrière-plan, utilisez l’applet de commande Remove-Job.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>The following command deletes the job in the $job variable.</source>
          <target state="translated">La commande suivante supprime la tâche dans la variable $job.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>Remove-Job -Job $job</source>
          <target state="translated">Remove-Job-$job de travail</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>INVESTIGATING A FAILED JOB</source>
          <target state="translated">ENQUÊTE SUR UNE TÂCHE AYANT ÉCHOUÉ</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>To find out why a job failed, use the Reason subproperty of the job object.</source>
          <target state="translated">Pour savoir pourquoi une Échec de la tâche, utilisez les sous-propriétés de la raison de l’objet de travail.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>The following command starts a job without the required credentials.</source>
          <target state="translated">La commande suivante démarre une tâche sans les informations d’identification requises.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>It saves the job object in the $job variable.</source>
          <target state="translated">Elle enregistre l’objet de traitement dans la variable $job.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>$job = Start-Job -ScriptBlock {New-Item -Path HKLM:\Software\MyCompany}</source>
          <target state="translated">$job = start-Job - ScriptBlock {New-Item - Path HKLM:\Software\MyCompany}</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>Id   Name  PSJobTypeName State    HasMoreData  Location   Command</source>
          <target state="translated">ID nom PSJobTypeName état HasMoreData emplacement commande</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>1    Job1  BackgroundJob Failed   False        localhost  New-Item -Path HKLM:\S...</source>
          <target state="translated">1 localhost n’a pas pu False BackgroundJob Job1 New-Item - Path HKLM:\S...</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>The following command uses the Reason property to find the error that caused the job to fail.</source>
          <target state="translated">La commande suivante utilise la propriété Reason pour rechercher l’erreur qui a provoqué l’échec du travail.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>$job.ChildJobs[0].JobStateInfo.Reason</source>
          <target state="translated">$job. ChildJobs [0]. JobStateInfo.Reason</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>In this case, the job failed because the remote computer required explicit credentials to run the command.</source>
          <target state="translated">Dans ce cas, la tâche a échoué car l’ordinateur distant nécessitait des informations d’identification explicites pour exécuter la commande.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>The value of the Reason property is:</source>
          <target state="translated">La valeur de la propriété raison est la suivante :</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>Connecting to remote server failed with the following error message : Access is denied.</source>
          <target state="translated">Connexion au serveur distant a échoué avec le message d’erreur suivant : l’accès est refusé.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>SEE ALSO</source>
          <target state="translated">VOIR AUSSI</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>about_Remote_Jobs about_Job_Details about_Remote about_PSSessions Start-Job Get-Job Receive-Job Stop-Job Wait-Job Remove-Job Invoke-Command</source>
          <target state="translated">about_Remote_Jobs about_Job_Details about_Remote about_PSSessions Start-Job Get-Job Receive-Job Stop-Job Wait-Job Remove-Job Invoke-Command</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>