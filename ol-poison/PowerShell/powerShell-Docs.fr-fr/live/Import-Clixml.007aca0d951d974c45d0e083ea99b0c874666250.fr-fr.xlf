<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="fr-fr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-1c394fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">0ff7448deee9ed3ca146ab33c78736cf40693535</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">reference\4.0\Microsoft.PowerShell.Utility\Import-Clixml.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions" />
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">2d35fb31a5eca6720027e4c61404e3bbc177ef3e</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">cdba758bf53c11a3af8c1b3e972df3c22131f02c</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>powershell, cmdlet</source>
          <target state="translated">applet de commande PowerShell</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Import-Clixml</source>
          <target state="translated">Import-Clixml</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Import-Clixml</source>
          <target state="translated">Import-Clixml</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>SYNOPSIS</source>
          <target state="translated">SYNOPSIS</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Imports a CLIXML file and creates corresponding objects within Windows PowerShell.</source>
          <target state="translated">Importe un fichier CLIXML et crée des objets correspondants dans Windows PowerShell.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>SYNTAX</source>
          <target state="translated">SYNTAXE</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>ByPath (Default)</source>
          <target state="translated">ByPath (valeur par défaut)</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>ByLiteralPath</source>
          <target state="translated">ByLiteralPath</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>DESCRIPTION</source>
          <target state="translated">DESCRIPTION</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The Import-Clixml cmdlet imports a CLIXML file with data that represents Microsoft .NET Framework objects and creates the objects in Windows PowerShell.</source>
          <target state="translated">L'applet de commande Import-Clixml importe un fichier CLIXML avec des données qui représentent des objets Microsoft .NET Framework et crée les objets dans Windows PowerShell.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>A valuable use of Import-CliXml is to import credentials and secure strings that have been exported as secure XML by running the Export-CliXml cmdlet.</source>
          <target state="translated">Une utilisation précieuse d’Import-CliXml consiste à importer des informations d’identification et des chaînes sécurisées qui ont été exportées au format XML sécurisé en exécutant l’applet de commande Export-CliXml.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>For an example of how to do this, see Example 2 in this topic.</source>
          <target state="translated">Pour obtenir un exemple de procédure à suivre, voir l’exemple 2 dans cette rubrique.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>EXAMPLES</source>
          <target state="translated">EXEMPLES</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>-------------------------- EXAMPLE 1 --------------------------</source>
          <target state="translated">-------------------------- EXEMPLE 1 -------------------------</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>This command uses the Export-Clixml cmdlet to save a serialized copy of the process information returned by Get-Process.</source>
          <target state="translated">Cette commande utilise l'applet de commande Export-Clixml pour enregistrer une copie sérialisée des informations de processus retournées par Get-Process.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>It then uses Import-Clixml to retrieve the contents of the serialized file and re-create an object that is stored in the $processes variable.</source>
          <target state="translated">Elle utilise ensuite Import-Clixml pour récupérer le contenu du fichier sérialisé et pour recréer un objet qui est stocké dans la variable $processes.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>-------------------------- EXAMPLE 2 --------------------------</source>
          <target state="translated">-------------------------- EXAMPLE 2 --------------------------</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>The Export-CliXml cmdlet encrypts credential objects by using the Windows Data Protection APIhttp://msdn.microsoft.com/library/windows/apps/xaml/hh464970.aspx.</source>
          <target state="translated">L’applet de commande Export-CliXml chiffre objets informations d’identification à l’aide du Windows Data Protection APIhttp://msdn.microsoft.com/library/windows/apps/xaml/hh464970.aspx.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>This ensures that only your user account can decrypt the contents of the credential object.</source>
          <target state="translated">Cela garantit que votre compte d’utilisateur peut déchiffrer le contenu de l’objet d’informations d’identification.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>In this example, given a credential that you've stored in the $credential variable by running the Get-Credential cmdlet, you can run the Export-CliXml cmdlet to save the credential to disk.In the example, the file in which the credential is stored is represented by TestScript.ps1.credential.</source>
          <target state="translated">Dans cet exemple, étant donné les informations d’identification que vous avez stockés dans la variable $credential en exécutant l’applet de commande Get-Credential, vous pouvez exécuter l’applet de commande Export-CliXml pour enregistrer les informations d’identification sur le disque. Dans l’exemple, le fichier dans lequel sont stockées les informations d’identification est représenté par TestScript.ps1.credential.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Replace TestScript with the name of the script with which you are loading the credential.</source>
          <target state="translated">Remplacez TestScript par le nom du script avec lequel vous chargez les informations d’identification.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>In the second command, you pipe the credential object to Export-CliXml, and save it to the path, $credxmlpath, that you specified in the first command.</source>
          <target state="translated">Dans la deuxième commande, vous dirigez l’objet d’informations d’identification à Export-CliXml et enregistrez dans le chemin d’accès, $credxmlpath, que vous avez spécifié dans la première commande.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>To import the credential automatically into your script, run the final two commands.</source>
          <target state="translated">Pour importer les informations d’identification automatiquement dans votre script, exécutez les deux commandes finales.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>This time, you are running Import-CliXml to import the secured credential object into your script.</source>
          <target state="translated">Cette fois, vous utilisez Import-CliXml pour importer l’objet d’informations d’identification sécurisées dans votre script.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>This eliminates the risk of exposing plain-text passwords in your script.</source>
          <target state="translated">Cela élimine le risque d’exposition des mots de passe en texte brut dans votre script.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>PARAMETERS</source>
          <target state="translated">PARAMÈTRES</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>-Path</source>
          <target state="translated">-Path</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Specifies the XML files.</source>
          <target state="translated">Spécifie les fichiers XML.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>-LiteralPath</source>
          <target state="translated">-LiteralPath</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Specifies the XML files.</source>
          <target state="translated">Spécifie les fichiers XML.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Unlike <bpt id="p1">**</bpt>Path<ept id="p1">**</ept>, the value of the <bpt id="p2">**</bpt>LiteralPath<ept id="p2">**</ept> parameter is used exactly as it is typed.</source>
          <target state="translated">Contrairement aux <bpt id="p1">**</bpt>chemin d’accès<ept id="p1">**</ept>, la valeur de la <bpt id="p2">**</bpt>LiteralPath<ept id="p2">**</ept> paramètre est utilisé exactement telle qu’elle est tapée.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>No characters are interpreted as wildcards.</source>
          <target state="translated">Aucun caractère n’est interprété en tant que caractère générique.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>If the path includes escape characters, enclose it in single quotation marks.</source>
          <target state="translated">Si le chemin d’accès inclut des caractères d’échappement, mettez-le entre des guillemets simples.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Single quotation marks tell Windows PowerShell not to interpret any characters as escape sequences.</source>
          <target state="translated">Les guillemets simples indiquent à Windows PowerShell qu’aucun caractère ne doit être interprété en tant que séquence d’échappement.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>-First</source>
          <target state="translated">-Premier</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Gets only the specified number of objects.</source>
          <target state="translated">Obtient uniquement le nombre d’objets spécifié.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Enter the number of objects to get.</source>
          <target state="translated">Entrez le nombre d’objets à obtenir.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>-Skip</source>
          <target state="translated">-Skip</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Ignores the specified number of objects and then gets the remaining objects.</source>
          <target state="translated">Ignore le nombre spécifié d’objets, puis obtient les objets restants.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Enter the number of objects to skip.</source>
          <target state="translated">Entrez le nombre d’objets à ignorer.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>-IncludeTotalCount</source>
          <target state="translated">-IncludeTotalCount</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Reports the total number of objects in the data set (an integer) followed by the selected objects.</source>
          <target state="translated">Indique le nombre total d’objets dans le jeu de données (un entier) suivi des objets sélectionnés.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>If the cmdlet cannot determine the total count, it displays "Unknown total count."</source>
          <target state="translated">Si l’applet de commande ne parvient pas à déterminer le nombre total, « Nombre total inconnu » s’affiche.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>The integer has an Accuracy property that indicates the reliability of the total count value.</source>
          <target state="translated">L’entier possède une propriété Accuracy qui indique la fiabilité de la valeur du nombre total.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>The value of Accuracy ranges from 0.0 to 1.0 where 0.0 means that the cmdlet could not count the objects, 1.0 means that the count is exact, and a value between 0.0 and 1.0 indicates an increasingly reliable estimate.</source>
          <target state="translated">La valeur de la propriété Accuracy va de 0,0 à 1,0, où 0,0 signifie que l’applet de commande n’a pas pu compter les objets, 1,0 signifie que le nombre est exact et une valeur comprise entre 0,0 et 1,0 reflète une estimation de plus en plus fiable.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>CommonParameters</source>
          <target state="translated">CommonParameters</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutVariable, -OutBuffer, -PipelineVariable, -Verbose, -WarningAction, and -WarningVariable.</source>
          <target state="translated">Cette applet de commande prend en charge les paramètres courants :-Debug, - ErrorAction, - ErrorVariable, - InformationAction, - InformationVariable, - OutVariable,-OutBuffer, - PipelineVariable, - Verbose, - WarningAction et - WarningVariable.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>For more information, see about_CommonParameters (http://go.microsoft.com/fwlink/?LinkID=113216).</source>
          <target state="translated">Pour plus d’informations, consultez about_CommonParameters (http://go.microsoft.com/fwlink/?LinkID=113216).</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>INPUTS</source>
          <target state="translated">ENTRÉES</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>System.String</source>
          <target state="translated">System.String</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>You can pipe a string that contains a path to Import-Clixml.</source>
          <target state="translated">Vous pouvez diriger une chaîne qui contient un chemin d'accès vers Import-Clixml.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>OUTPUTS</source>
          <target state="translated">SORTIES</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>PSObject</source>
          <target state="translated">PSObject</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Import-Clixml returns objects that have been deserialized from the stored XML files.</source>
          <target state="translated">Import-Clixml retourne des objets qui ont été désérialisés à partir de fichiers XML stockés.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>NOTES</source>
          <target state="translated">NOTES DE PUBLICATION</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>When specifying multiple values for a parameter, use commas to separate the values.</source>
          <target state="translated">Quand vous spécifiez plusieurs valeurs pour un paramètre, séparez-les par des virgules.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>For example, "<ph id="ph1">\&lt;</ph>parameter-name<ph id="ph2">\&gt;</ph> <ph id="ph3">\&lt;</ph>value1<ph id="ph4">\&gt;</ph>, <ph id="ph5">\&lt;</ph>value2<ph id="ph6">\&gt;</ph>".</source>
          <target state="translated">Par exemple, «<ph id="ph1">\&lt;</ph>-nom du paramètre<ph id="ph2">\&gt;</ph> <ph id="ph3">\&lt;</ph>value1<ph id="ph4">\&gt;</ph>, <ph id="ph5">\&lt;</ph>value2<ph id="ph6">\&gt;</ph>».</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>RELATED LINKS</source>
          <target state="translated">LIENS CONNEXES</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>Use PowerShell to Pass Credentials to Legacy Systems</source>
          <target state="translated">Utilisation de PowerShell pour transmettre des informations d’identification pour les systèmes hérités</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>Securely Store Credentials on Disk</source>
          <target state="translated">Stocker en toute sécurité les informations d’identification sur le disque</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>Export-Clixml</source>
          <target state="translated">Export-Clixml</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>