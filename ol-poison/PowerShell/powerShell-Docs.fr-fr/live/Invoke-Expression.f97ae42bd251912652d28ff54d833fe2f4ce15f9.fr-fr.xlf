<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="fr-fr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-1c394fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">a1cd21b0dc35874d947a0167d4442162d67ee428</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">reference\5.0\Microsoft.PowerShell.Utility\Invoke-Expression.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions" />
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f92192fd2d7446dcfd5cf67e63ff87dc8bb86db0</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">70437a5a81cd1458d4a33638620a044880e20b97</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>powershell, cmdlet</source>
          <target state="translated">applet de commande PowerShell</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Invoke-Expression</source>
          <target state="translated">Invoke-Expression</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Invoke-Expression</source>
          <target state="translated">Invoke-Expression</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>SYNOPSIS</source>
          <target state="translated">SYNOPSIS</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Runs commands or expressions on the local computer.</source>
          <target state="translated">Exécute des commandes ou des expressions sur l'ordinateur local.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>SYNTAX</source>
          <target state="translated">SYNTAXE</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>DESCRIPTION</source>
          <target state="translated">DESCRIPTION</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>Invoke-Expression<ept id="p1">**</ept> cmdlet evaluates or runs a specified string as a command and returns the results of the expression or command.</source>
          <target state="translated">Le <bpt id="p1">**</bpt>Invoke-Expression<ept id="p1">**</ept> applet de commande évalue ou exécute une chaîne spécifiée en tant que commande et retourne les résultats de l’expression ou la commande.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Without <bpt id="p1">**</bpt>Invoke-Expression<ept id="p1">**</ept>, a string submitted at the command line would be returned (echoed) unchanged.</source>
          <target state="translated">Sans <bpt id="p1">**</bpt>Invoke-Expression<ept id="p1">**</ept>, une chaîne envoyée à la ligne de commande serait retournée (répercutée) inchangée.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>EXAMPLES</source>
          <target state="translated">EXEMPLES</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Example 1: Evaluate an expression</source>
          <target state="translated">Exemple 1 : Évaluer une expression</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>This example demonstrates the use of <bpt id="p1">**</bpt>Invoke-Expression<ept id="p1">**</ept> to evaluate an expression.</source>
          <target state="translated">Cet exemple illustre l’utilisation de <bpt id="p1">**</bpt>Invoke-Expression<ept id="p1">**</ept> pour évaluer une expression.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Without <bpt id="p1">**</bpt>Invoke-Expression<ept id="p1">**</ept>, the expression is printed, but not evaluated.</source>
          <target state="translated">Sans <bpt id="p1">**</bpt>Invoke-Expression<ept id="p1">**</ept>, l’expression est imprimée, mais pas évaluée.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>The first command assigns a value of Get-Process (a string) to the $Command variable.</source>
          <target state="translated">La première commande attribue une valeur de Get-Process (une chaîne) à la variable $Command.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>The second command shows the effect of typing the variable name at the command line.</source>
          <target state="translated">La deuxième commande illustre le résultat de l'entrée du nom de la variable sur la ligne de commande.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Windows PowerShell echoes the string.</source>
          <target state="translated">Windows PowerShell répercute la chaîne.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>The third command uses <bpt id="p1">**</bpt>Invoke-Expression<ept id="p1">**</ept> to evaluate the string.</source>
          <target state="translated">La troisième commande utilise <bpt id="p1">**</bpt>Invoke-Expression<ept id="p1">**</ept> pour évaluer la chaîne.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Example 2: Run a script on the local computer</source>
          <target state="translated">Exemple 2 : Exécuter un script sur l’ordinateur local</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>These commands use <bpt id="p1">**</bpt>Invoke-Expression<ept id="p1">**</ept> to run a script, TestScript.ps1, on the local computer.</source>
          <target state="translated">Ces commandes utilisent <bpt id="p1">**</bpt>Invoke-Expression<ept id="p1">**</ept> pour exécuter un script, TestScript.ps1, sur l’ordinateur local.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>The two commands are equivalent.</source>
          <target state="translated">Les deux commandes sont équivalentes.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>The first uses the <bpt id="p1">*</bpt>Command<ept id="p1">*</ept> parameter to specify the command to run.</source>
          <target state="translated">La première utilise le <bpt id="p1">*</bpt>commande<ept id="p1">*</ept> paramètre pour spécifier la commande à exécuter.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>The second uses a pipeline operator (|) to send the command string to <bpt id="p1">**</bpt>Invoke-Expression<ept id="p1">**</ept>.</source>
          <target state="translated">La seconde utilise un opérateur de pipeline (|) pour envoyer la chaîne de commande pour <bpt id="p1">**</bpt>Invoke-Expression<ept id="p1">**</ept>.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Example 3: Run a command in a variable</source>
          <target state="translated">Exemple 3 : Exécuter une commande dans une variable</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>This example runs a command string that is saved in the $Command variable.</source>
          <target state="translated">Cet exemple exécute une chaîne de commande enregistrée dans la variable $Command.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>The command string is enclosed in single quotation marks because it includes a variable, $<bpt id="p1">_</bpt>, which represents the current object. If it were enclosed in double quotation marks, the $<ept id="p1">_</ept> variable would be replaced by its value before it was saved in the $Command variable.</source>
          <target state="translated">La chaîne de commande est placé entre guillemets simples, car il inclut une variable, $<bpt id="p1">_</bpt>, qui représente l’objet actuel. Si elle est placée entre guillemets doubles, la $<ept id="p1">_</ept> variable serait remplacée par sa valeur avant de l’enregistrer dans la variable $Command.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Example 4: Get and run a cmdlet Help example</source>
          <target state="translated">Exemple 4 : Obtenir et exécuter un exemple de l’applet de commande aide</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>This command retrieves and runs the first example in the Get-EventLog cmdlet Help topic.</source>
          <target state="translated">Cette commande récupère et exécute le premier exemple dans la rubrique d’aide applet de commande Get-EventLog.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>To run an example of a different cmdlet, change the value of the $Cmdlet_name variable to the name of the cmdlet.</source>
          <target state="translated">Pour exécuter un exemple d’une autre applet de commande, modifiez la valeur de la variable $cmdlet_name sur le nom de l’applet de commande.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>And, change the $Example_number variable to the example number you want to run.</source>
          <target state="translated">Et modifier la variable $example_number pour le nombre d’exemple que vous souhaitez exécuter.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>The command will fail if the example number is not valid.</source>
          <target state="translated">La commande échoue si le numéro de l'exemple n'est pas valide.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>PARAMETERS</source>
          <target state="translated">PARAMÈTRES</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>-Command</source>
          <target state="translated">-Command</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Specifies the command or expression to run.</source>
          <target state="translated">Spécifie la commande ou l'expression à exécuter.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Type the command or expression or enter a variable that contains the command or expression.</source>
          <target state="translated">Tapez la commande ou l'expression, ou entrez une variable qui contient la commande ou l'expression.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">*</bpt>Command<ept id="p1">*</ept> parameter is required.</source>
          <target state="translated">Le <bpt id="p1">*</bpt>commande<ept id="p1">*</ept> paramètre est obligatoire.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>CommonParameters</source>
          <target state="translated">CommonParameters</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutVariable, -OutBuffer, -PipelineVariable, -Verbose, -WarningAction, and -WarningVariable.</source>
          <target state="translated">Cette applet de commande prend en charge les paramètres courants :-Debug, - ErrorAction, - ErrorVariable, - InformationAction, - InformationVariable, - OutVariable,-OutBuffer, - PipelineVariable, - Verbose, - WarningAction et - WarningVariable.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>For more information, see about_CommonParameters (http://go.microsoft.com/fwlink/?LinkID=113216).</source>
          <target state="translated">Pour plus d’informations, consultez about_CommonParameters (http://go.microsoft.com/fwlink/?LinkID=113216).</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>INPUTS</source>
          <target state="translated">ENTRÉES</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>System.String or PSObject</source>
          <target state="translated">System.String ou PSObject</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>You can pipe an object that represents the command to <bpt id="p1">**</bpt>Invoke-Expression<ept id="p1">**</ept>.</source>
          <target state="translated">Vous pouvez diriger un objet qui représente la commande à <bpt id="p1">**</bpt>Invoke-Expression<ept id="p1">**</ept>.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Use the $Input automatic variable to represent the input objects in the command.</source>
          <target state="translated">Utilisez la variable automatique $Input pour représenter les objets d’entrée dans la commande.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>OUTPUTS</source>
          <target state="translated">SORTIES</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>PSObject</source>
          <target state="translated">PSObject</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Returns the output that is generated by the invoked command (the value of the <bpt id="p1">*</bpt>Command<ept id="p1">*</ept> parameter).</source>
          <target state="translated">Retourne la sortie générée par la commande appelée (la valeur de la <bpt id="p1">*</bpt>commande<ept id="p1">*</ept> paramètre).</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>NOTES</source>
          <target state="translated">NOTES DE PUBLICATION</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>An expression is a statement that can be evaluated and produces a result, such as a Windows PowerShell command.</source>
          <target state="translated">Une expression est une instruction qui peut être évaluée et produit un résultat, telle qu’une commande Windows PowerShell.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Take reasonable precautions when using the <bpt id="p1">**</bpt>Invoke-Expression<ept id="p1">**</ept> cmdlet in scripts.</source>
          <target state="translated">Prenez les précautions lorsque vous utilisez la <bpt id="p1">**</bpt>Invoke-Expression<ept id="p1">**</ept> applet de commande dans les scripts.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>When using <bpt id="p1">**</bpt>Invoke-Expression<ept id="p1">**</ept> to run a command that the user enters, verify that the command is safe to run before running it.</source>
          <target state="translated">Lorsque vous utilisez <bpt id="p1">**</bpt>Invoke-Expression<ept id="p1">**</ept> pour exécuter une commande entrée par l’utilisateur, vérifiez que la commande est sécurisée pour s’exécuter avant son exécution.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>In general, it is best to design your script with predefined input options, rather than allowing freeform input.</source>
          <target state="translated">En général, il est préférable de concevoir votre script avec des options d'entrée prédéfinies, plutôt que d'autoriser des entrées libres.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>RELATED LINKS</source>
          <target state="translated">LIENS CONNEXES</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Invoke-Command</source>
          <target state="translated">Invoke-Command</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Where-Object</source>
          <target state="translated">Where-Object</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>