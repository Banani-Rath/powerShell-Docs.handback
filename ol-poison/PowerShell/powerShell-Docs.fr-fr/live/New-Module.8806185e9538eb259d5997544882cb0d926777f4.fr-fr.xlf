<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="fr-fr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-1c394fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">a05e4c942ee70d02675c5dcffc9acfdb9e898df9</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">reference\5.0\Microsoft.PowerShell.Core\New-Module.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions" />
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">de57bdcd7976db6d1375067ed2ea0bdee1c8431b</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">857478771e86fbb3f381f716b6d53d57e2f2bd5f</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>powershell, cmdlet</source>
          <target state="translated">applet de commande PowerShell</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>New-Module</source>
          <target state="translated">New-Module</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>New-Module</source>
          <target state="translated">New-Module</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>SYNOPSIS</source>
          <target state="translated">SYNOPSIS</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Creates a new dynamic module that exists only in memory.</source>
          <target state="translated">Crée un module dynamique qui existe uniquement en mémoire.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>SYNTAX</source>
          <target state="translated">SYNTAXE</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>ScriptBlock (Default)</source>
          <target state="translated">ScriptBlock (par défaut)</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Name</source>
          <target state="translated">Nom</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>DESCRIPTION</source>
          <target state="translated">DESCRIPTION</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>New-Module<ept id="p1">**</ept> cmdlet creates a dynamic module from a script block.</source>
          <target state="translated">Le <bpt id="p1">**</bpt>New-Module<ept id="p1">**</ept> applet de commande crée un module dynamique à partir d’un bloc de script.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>The members of the dynamic module, such as functions and variables, are immediately available in the session and remain available until you close the session.</source>
          <target state="translated">Les membres du module dynamique, tels des fonctions et des variables, sont immédiatement disponibles dans la session et restent disponibles jusqu'à la fermeture de la session.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Like static modules, by default, the cmdlets and functions in a dynamic module are exported and the variables and aliases are not.</source>
          <target state="translated">Comme des modules statiques, les applets de commande et les fonctions figurant dans un module dynamique sont exportées par défaut, alors que les variables et les alias ne le sont pas.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>However, you can use the Export-ModuleMember cmdlet and the parameters of <bpt id="p1">**</bpt>New-Module<ept id="p1">**</ept> to override the defaults.</source>
          <target state="translated">Toutefois, vous pouvez utiliser l’applet de commande Export-ModuleMember et les paramètres de <bpt id="p1">**</bpt>New-Module<ept id="p1">**</ept> pour remplacer les valeurs par défaut.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>You can also use the <bpt id="p1">*</bpt>AsCustomObject<ept id="p1">*</ept> parameter of <bpt id="p2">**</bpt>New-Module<ept id="p2">**</ept> to return the dynamic module as a custom object.</source>
          <target state="translated">Vous pouvez également utiliser le <bpt id="p1">*</bpt>AsCustomObject<ept id="p1">*</ept> paramètre de <bpt id="p2">**</bpt>New-Module<ept id="p2">**</ept> pour renvoyer le module dynamique comme un objet personnalisé.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>The members of the modules, such as functions, are implemented as script methods of the custom object instead of being imported into the session.</source>
          <target state="translated">Les membres des modules, tels que les fonctions, sont implémentés en tant que méthodes de script de l'objet personnalisé au lieu d'être importés dans la session.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Dynamic modules exist only in memory, not on disk.</source>
          <target state="translated">Les modules dynamiques existent uniquement en mémoire, pas sur le disque.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Like all modules, the members of dynamic modules run in a private module scope that is a child of the global scope.</source>
          <target state="translated">Comme tous les modules, les membres des modules dynamiques s'exécutent dans une étendue de module privée qui est un enfant de l'étendue globale.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Get-Module cannot get a dynamic module, but Get-Command can get the exported members.</source>
          <target state="translated">Get-Module ne peut pas obtenir un module dynamique, mais Get-Command peut obtenir les membres exportés.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>To make a dynamic module available to <bpt id="p1">**</bpt>Get-Module<ept id="p1">**</ept>, pipe a <bpt id="p2">**</bpt>New-Module<ept id="p2">**</ept> command to Import-Module, or pipe the module object that <bpt id="p3">**</bpt>New-Module<ept id="p3">**</ept> returns to <bpt id="p4">**</bpt>Import-Module<ept id="p4">**</ept>.</source>
          <target state="translated">Pour libérer un module dynamique à <bpt id="p1">**</bpt>Get-Module<ept id="p1">**</ept>, canal un <bpt id="p2">**</bpt>New-Module<ept id="p2">**</ept> commande Import-Module ou le module de canal que l’objet <bpt id="p3">**</bpt>New-Module<ept id="p3">**</ept> renvoie à <bpt id="p4">**</bpt>Import-Module<ept id="p4">**</ept>.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>This action adds the dynamic module to the <bpt id="p1">**</bpt>Get-Module<ept id="p1">**</ept> list, but it does not save the module to disk or make it persistent.</source>
          <target state="translated">Cette action ajoute le module dynamique vers le <bpt id="p1">**</bpt>Get-Module<ept id="p1">**</ept> liste, mais il n’enregistre pas le module de disque ou de rendre persistant.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>EXAMPLES</source>
          <target state="translated">EXEMPLES</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Example 1: Create a dynamic module</source>
          <target state="translated">Exemple 1 : Créer un module dynamique</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>This command creates a new dynamic module with a function called Hello.</source>
          <target state="translated">Cette commande crée un module dynamique avec une fonction appelée Hello.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>The command returns a module object that represents the new dynamic module.</source>
          <target state="translated">La commande retourne un objet de module qui représente le nouveau module dynamique.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Example 2: Working with dynamic modules and Get-Module and Get-Command</source>
          <target state="translated">Exemple 2 : Utilisation des modules dynamiques et Get-Module et Get-Command</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>This example demonstrates that dynamic modules are not returned by the <bpt id="p1">**</bpt>Get-Module<ept id="p1">**</ept> cmdlet.</source>
          <target state="translated">Cet exemple montre que les modules dynamiques ne sont pas renvoyées par le <bpt id="p1">**</bpt>Get-Module<ept id="p1">**</ept> applet de commande.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>The members that they export are returned by the <bpt id="p1">**</bpt>Get-Command<ept id="p1">**</ept> cmdlet.</source>
          <target state="translated">Les membres qu’ils exportent sont retournés par la <bpt id="p1">**</bpt>Get-Command<ept id="p1">**</ept> applet de commande.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Example 3: Export a variable into the current session</source>
          <target state="translated">Exemple 3 : Exporter une variable dans la session active</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>This command uses the <bpt id="p1">**</bpt>Export-ModuleMember<ept id="p1">**</ept> cmdlet to export a variable into the current session.</source>
          <target state="translated">Cette commande utilise le <bpt id="p1">**</bpt>Export-ModuleMember<ept id="p1">**</ept> pour exporter une variable dans la session active.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Without the <bpt id="p1">**</bpt>Export-ModuleMember<ept id="p1">**</ept> command, only the function is exported.</source>
          <target state="translated">Sans le <bpt id="p1">**</bpt>Export-ModuleMember<ept id="p1">**</ept> commande, seule la fonction est exportée.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>The output shows that both the variable and the function were exported into the session.</source>
          <target state="translated">La sortie indique que la variable et la fonction ont été exportées dans la session.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Example 4: Make a dynamic module available to Get-Module</source>
          <target state="translated">Exemple 4 : Créer un module dynamique disponible vers Get-Module</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>This command demonstrates that you can make a dynamic module available to <bpt id="p1">**</bpt>Get-Module<ept id="p1">**</ept> by piping the dynamic module to <bpt id="p2">**</bpt>Import-Module<ept id="p2">**</ept>.</source>
          <target state="translated">Cette commande montre que vous pouvez effectuer un module dynamique disponible à <bpt id="p1">**</bpt>Get-Module<ept id="p1">**</ept> en dirigeant le module dynamique <bpt id="p2">**</bpt>Import-Module<ept id="p2">**</ept>.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>The first command uses a pipeline operator (|) to send the module object that <bpt id="p1">**</bpt>New-Module<ept id="p1">**</ept> generates to the <bpt id="p2">**</bpt>Import-Module<ept id="p2">**</ept> cmdlet.</source>
          <target state="translated">La première commande utilise un pipeline de l’opérateur (|) pour envoyer le module objet <bpt id="p1">**</bpt>New-Module<ept id="p1">**</ept> génère à la <bpt id="p2">**</bpt>Import-Module<ept id="p2">**</ept> applet de commande.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>The command uses the <bpt id="p1">*</bpt>Name<ept id="p1">*</ept> parameter of <bpt id="p2">**</bpt>New-Module<ept id="p2">**</ept> to assign a friendly name to the module.</source>
          <target state="translated">La commande utilise le <bpt id="p1">*</bpt>nom<ept id="p1">*</ept> paramètre de <bpt id="p2">**</bpt>New-Module<ept id="p2">**</ept> pour attribuer un nom convivial pour le module.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Because <bpt id="p1">**</bpt>Import-Module<ept id="p1">**</ept> does not return any objects by default, there is no output from this command.</source>
          <target state="translated">Étant donné que <bpt id="p1">**</bpt>Import-Module<ept id="p1">**</ept> ne retourne pas les objets par défaut, l’absence de sortie de cette commande.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>The second command uses <bpt id="p1">**</bpt>Get-Module<ept id="p1">**</ept> to get the modules in the session.</source>
          <target state="translated">La deuxième commande utilise <bpt id="p1">**</bpt>Get-Module<ept id="p1">**</ept> pour obtenir les modules dans la session.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>The result shows that <bpt id="p1">**</bpt>Get-Module<ept id="p1">**</ept> can get the new dynamic module.</source>
          <target state="translated">Le résultat montre que <bpt id="p1">**</bpt>Get-Module<ept id="p1">**</ept> peuvent obtenir le nouveau module dynamique.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>The third command uses the <bpt id="p1">**</bpt>Get-Command<ept id="p1">**</ept> cmdlet to get the Hello function that the dynamic module exports.</source>
          <target state="translated">La troisième commande utilise le <bpt id="p1">**</bpt>Get-Command<ept id="p1">**</ept> pour obtenir la fonction Hello exportées par le module dynamique.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Example 5: Generate a custom object that has exported functions</source>
          <target state="translated">Exemple 5 : Générer un objet personnalisé qui a des fonctions exportées</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>This example shows how to use the <bpt id="p1">*</bpt>AsCustomObject<ept id="p1">*</ept> parameter of <bpt id="p2">**</bpt>New-Module<ept id="p2">**</ept> to generate a custom object that has script methods that represent the exported functions.</source>
          <target state="translated">Cet exemple montre comment utiliser le <bpt id="p1">*</bpt>AsCustomObject<ept id="p1">*</ept> paramètre de <bpt id="p2">**</bpt>New-Module<ept id="p2">**</ept> pour générer un objet personnalisé qui a des méthodes de script qui représentent les fonctions exportées.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>The first command uses the <bpt id="p1">**</bpt>New-Module<ept id="p1">**</ept> cmdlet to generate a dynamic module with two functions, Hello and Goodbye.</source>
          <target state="translated">La première commande utilise le <bpt id="p1">**</bpt>New-Module<ept id="p1">**</ept> applet de commande pour générer un module dynamique avec deux fonctions, Hello et Goodbye.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>The command uses the <bpt id="p1">*</bpt>AsCustomObject<ept id="p1">*</ept> parameter to generate a custom object instead of the PSModuleInfo object that <bpt id="p2">**</bpt>New-Module<ept id="p2">**</ept> generates by default.</source>
          <target state="translated">La commande utilise le <bpt id="p1">*</bpt>AsCustomObject<ept id="p1">*</ept> objet paramètre pour générer un objet personnalisé au lieu du PSModuleInfo <bpt id="p2">**</bpt>New-Module<ept id="p2">**</ept> génère par défaut.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>The command saves the custom object in the $m variable.</source>
          <target state="translated">La commande enregistre l'objet personnalisé dans la variable $m.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>The second command attempts to display the value of the $m variable.</source>
          <target state="translated">La deuxième commande tente d'afficher la valeur de la variable $m.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>No content appears.</source>
          <target state="translated">Aucun contenu ne s'affiche.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>The third command uses a pipeline operator to send the custom object to the <bpt id="p1">**</bpt>Get-Member<ept id="p1">**</ept> cmdlet, which displays the properties and methods of the custom object.</source>
          <target state="translated">La troisième commande utilise un opérateur de pipeline pour envoyer l’objet personnalisé à la <bpt id="p1">**</bpt>Get-Member<ept id="p1">**</ept> cmdlet, qui affiche les propriétés et méthodes de l’objet personnalisé.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>The output shows that the object has script methods that represent the Hello and Goodbye functions.</source>
          <target state="translated">La sortie indique que l'objet possède des méthodes de script qui représentent les fonctions Hello et Goodbye.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>The fourth and fifth commands use the script method format to call the Hello and Goodbye functions.</source>
          <target state="translated">Les quatrième et cinquième commandes utilisent le format de méthode de script pour appeler les fonctions Hello et Goodbye.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Example 6: Get the results of the script block</source>
          <target state="translated">Exemple 6 : Obtenir les résultats du bloc de script</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>This command uses the <bpt id="p1">*</bpt>ReturnResult<ept id="p1">*</ept> parameter to request the results of running the script block instead of requesting a module object.</source>
          <target state="translated">Cette commande utilise le <bpt id="p1">*</bpt>ReturnResult<ept id="p1">*</ept> paramètre pour demander les résultats de l’exécution du bloc de script au lieu de demander un objet de module.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>The script block in the new module defines the SayHello function and then calls the function.</source>
          <target state="translated">Le bloc de script dans le nouveau module définit la fonction SayHello, puis appelle cette fonction.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>PARAMETERS</source>
          <target state="translated">PARAMÈTRES</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>-ArgumentList</source>
          <target state="translated">-ArgumentList</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Specifies an array of arguments which are parameter values that are passed to the script block.</source>
          <target state="translated">Spécifie un tableau d’arguments qui sont des valeurs de paramètre qui sont passés au bloc de script.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>-AsCustomObject</source>
          <target state="translated">-AsCustomObject</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Indicates that this cmdlet returns a custom object that represents the dynamic module.</source>
          <target state="translated">Indique que cette applet de commande retourne un objet personnalisé qui représente le module dynamique.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>The module members are implemented as script methods of the custom object, but they are not imported into the session.</source>
          <target state="translated">Les membres de module sont implémentés en tant que méthodes de script de l'objet personnalisé, mais ils ne sont pas importés dans la session.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>You can save the custom object in a variable and use dot notation to invoke the members.</source>
          <target state="translated">Vous pouvez enregistrer l'objet personnalisé dans une variable et utiliser la notation par points pour appeler les membres.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>If the module has multiple members with the same name, such as a function and a variable that are both named A, only one member with each name can be accessed from the custom object.</source>
          <target state="translated">Si le module possède plusieurs membres avec le même nom, comme une fonction et une variable que toutes deux nommées A, qu’un seul membre de chaque nom est accessible à partir de l’objet personnalisé.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>-Cmdlet</source>
          <target state="translated">L’applet de commande :</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>Specifies an array of cmdlets that this cmdlet exports from the module into the current session.</source>
          <target state="translated">Spécifie un tableau des applets de commande qui exporte de cette applet de commande à partir du module dans la session active.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>Enter a comma-separated list of cmdlets.</source>
          <target state="translated">Entrez la liste des applets de commandes, séparées par des virgules.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>Wildcard characters are permitted.</source>
          <target state="translated">Les caractères génériques sont autorisés.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>By default, all cmdlets in the module are exported.</source>
          <target state="translated">Par défaut, toutes les applets de commande du module sont exportées.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>You cannot define cmdlets in a script block, but a dynamic module can include cmdlets if it imports the cmdlets from a binary module.</source>
          <target state="translated">Vous ne pouvez pas définir des applets de commande dans un bloc de script, mais un module dynamique peut inclure des applets de commande s'il importe les applets de commande à partir d'un module binaire.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>-Function</source>
          <target state="translated">-(Fonction)</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>Specifies an array of functions that this cmdlet exports from the module into the current session.</source>
          <target state="translated">Spécifie un tableau de fonctions que cette applet de commande exporte du module dans la session active.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>Enter a comma-separated list of functions.</source>
          <target state="translated">Entrez la liste des fonctions, séparées par des virgules.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>Wildcard characters are permitted.</source>
          <target state="translated">Les caractères génériques sont autorisés.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>By default, all functions defined in a module are exported.</source>
          <target state="translated">Par défaut, toutes les fonctions définies dans un module sont exportées.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>-Name</source>
          <target state="translated">-Name</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>Specifies a name for the new module.</source>
          <target state="translated">Spécifie un nom pour le nouveau module.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>You can also pipe a module name to New-Module.</source>
          <target state="translated">Vous pouvez également diriger un nom de module vers New-Module.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>The default value is an autogenerated name that starts with <ph id="ph1">`__DynamicModule_`</ph> and is followed by a GUID that specifies the path of the dynamic module.</source>
          <target state="translated">La valeur par défaut est un nom généré automatiquement qui commence par <ph id="ph1">`__DynamicModule_`</ph> et est suivi d’un GUID qui spécifie le chemin d’accès du module dynamique.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>-ReturnResult</source>
          <target state="translated">-ReturnResult</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>Indicates that this cmdlet runs the script block and returns the script block results instead of returning a module object.</source>
          <target state="translated">Indique que cette applet de commande exécute le bloc de script et retourne les résultats de bloc de script au lieu de retourner un objet de module.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>-ScriptBlock</source>
          <target state="translated">-ScriptBlock</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>Specifies the contents of the dynamic module.</source>
          <target state="translated">Spécifie le contenu du module dynamique.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>Enclose the contents in braces ( { } ) to create a script block.</source>
          <target state="translated">Placez le contenu entre accolades ( { } ) pour créer un bloc de script.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>This parameter is required.</source>
          <target state="translated">Ce paramètre est obligatoire.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>CommonParameters</source>
          <target state="translated">CommonParameters</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutVariable, -OutBuffer, -PipelineVariable, -Verbose, -WarningAction, and -WarningVariable.</source>
          <target state="translated">Cette applet de commande prend en charge les paramètres courants :-Debug, - ErrorAction, - ErrorVariable, - InformationAction, - InformationVariable, - OutVariable,-OutBuffer, - PipelineVariable, - Verbose, - WarningAction et - WarningVariable.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>For more information, see about_CommonParameters (http://go.microsoft.com/fwlink/?LinkID=113216).</source>
          <target state="translated">Pour plus d’informations, consultez about_CommonParameters (http://go.microsoft.com/fwlink/?LinkID=113216).</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>INPUTS</source>
          <target state="translated">ENTRÉES</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>System.String</source>
          <target state="translated">System.String</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>You can pipe a module name to this cmdlet.</source>
          <target state="translated">Vous pouvez diriger un nom de module pour cette applet de commande.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>OUTPUTS</source>
          <target state="translated">SORTIES</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>System.Management.Automation.PSModuleInfo, System.Management.Automation.PSCustomObject, or None</source>
          <target state="translated">System.Management.Automation.PSModuleInfo, System.Management.Automation.PSCustomObject ou None</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>This cmdlet generates a <bpt id="p1">**</bpt>PSModuleInfo<ept id="p1">**</ept> object, by default.</source>
          <target state="translated">Cette applet de commande génère une <bpt id="p1">**</bpt>PSModuleInfo<ept id="p1">**</ept> objet, par défaut.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>If you use the <bpt id="p1">*</bpt>AsCustomObject<ept id="p1">*</ept> parameter, it generates a <bpt id="p2">**</bpt>PSCustomObject<ept id="p2">**</ept> object.</source>
          <target state="translated">Si vous utilisez la <bpt id="p1">*</bpt>AsCustomObject<ept id="p1">*</ept> paramètre, il génère une <bpt id="p2">**</bpt>PSCustomObject<ept id="p2">**</ept> objet.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>If you use the <bpt id="p1">*</bpt>ReturnResult<ept id="p1">*</ept> parameter, it returns the result of evaluating the script block in the dynamic module.</source>
          <target state="translated">Si vous utilisez la <bpt id="p1">*</bpt>ReturnResult<ept id="p1">*</ept> elle retourne le résultat de l’évaluation du bloc de script dans le module dynamique.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>NOTES</source>
          <target state="translated">NOTES DE PUBLICATION</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>You can also refer to <bpt id="p1">**</bpt>New-Module<ept id="p1">**</ept> by its alias, <bpt id="p2">**</bpt>nmo<ept id="p2">**</ept>.</source>
          <target state="translated">Vous pouvez également faire référence à <bpt id="p1">**</bpt>New-Module<ept id="p1">**</ept> par son alias, <bpt id="p2">**</bpt>nmo<ept id="p2">**</ept>.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>For more information, see about_Aliases.</source>
          <target state="translated">Pour plus d'informations, consultez about_Aliases.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>RELATED LINKS</source>
          <target state="translated">LIENS CONNEXES</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>Export-ModuleMember</source>
          <target state="translated">Export-ModuleMember</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>Get-Module</source>
          <target state="translated">Get-Module</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>Import-Module</source>
          <target state="translated">Import-Module</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>Remove-Module</source>
          <target state="translated">Remove-Module</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>about_Modules</source>
          <target state="translated">about_Modules</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>