<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="fr-fr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-1c394fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">5de5a1f33325d98e9f44c3a2a3e9d041e83336e9</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">reference\3.0\Microsoft.PowerShell.Utility\ConvertFrom-StringData.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions" />
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">82c1121d046363426ecb095720f4408fef26796b</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">60e789b41d54d3ae64a91319235aed8459d53a2e</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>powershell, cmdlet</source>
          <target state="translated">applet de commande PowerShell</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>ConvertFrom-StringData</source>
          <target state="translated">ConvertFrom-StringData</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>ConvertFrom-StringData</source>
          <target state="translated">ConvertFrom-StringData</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>SYNOPSIS</source>
          <target state="translated">SYNOPSIS</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Converts a string containing one or more key/value pairs to a hash table.</source>
          <target state="translated">Convertit une chaîne contenant une ou plusieurs paires clé/valeur à une table de hachage.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>SYNTAX</source>
          <target state="translated">SYNTAXE</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>DESCRIPTION</source>
          <target state="translated">DESCRIPTION</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>The ConvertFrom-StringData cmdlet converts a string that contains one or more key/value pairs into a hash table.</source>
          <target state="translated">L’applet de commande ConvertFrom-StringData convertit une chaîne qui contient une ou plusieurs paires clé/valeur dans une table de hachage.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Because each key/value pair must be on a separate line, here-strings are often used as the input format.</source>
          <target state="translated">Comme chaque paire clé/valeur doit être sur une ligne distincte, des chaînes « ici-même » sont souvent utilisées comme format d'entrée.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The ConvertFrom-StringData cmdlet is considered to be a safe cmdlet that can be used in the DATA section of a script or function.</source>
          <target state="translated">L'applet de commande ConvertFrom-StringData est considérée comme une applet de commande sécurisée, qui peut être utilisée dans la section DATA d'un script ou d'une fonction.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>When used in a DATA section, the contents of the string must conform to the rules for a DATA section.</source>
          <target state="translated">Quand il est utilisé dans une section DATA, le contenu de la chaîne doit être conforme aux règles applicables à une section DATA.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>For more information, see about_Data_Sections.</source>
          <target state="translated">Pour plus d'informations, consultez about_Automatic_Variables.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>ConvertFrom-StringData supports escape character sequences that are allowed by conventional machine translation tools.</source>
          <target state="translated">ConvertFrom-StringData prend en charge les séquences de caractères d'échappement qui sont autorisées par les outils de traduction classiques des ordinateurs.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>That is, the cmdlet can interpret backslashes (<ph id="ph1">\\</ph>) as escape characters in the string data by using the Regex.Unescape Methodhttp://msdn.microsoft.com/library/vstudio/system.text.regularexpressions.regex.unescape(v=vs.100).aspx, instead of the Windows PowerShell backtick character (<ph id="ph2">\`</ph>) that would normally signal the end of a line in a script.</source>
          <target state="translated">Autrement dit, l’applet de commande peut interpréter les barres obliques inverses (<ph id="ph1">\\</ph>) comme caractères d’échappement dans la chaîne de données à l’aide de la Methodhttp://msdn.microsoft.com/library/vstudio/system.text.regularexpressions.regex.unescape(v=vs.100).aspx, instead of the Windows PowerShell backtick character (<ph id="ph2">\`</ph>) Regex.Unescape qui signale normalement la fin d’une ligne dans un script.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Inside the here-string, the backtick character does not work.</source>
          <target state="translated">À l'intérieur de la chaîne « ici-même », le caractère de guillemet inversé ne fonctionne pas.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>You can also preserve a literal backslash in your results by escaping it with a preceding backslash, like this:  <ph id="ph1">\\\\</ph>.</source>
          <target state="translated">Vous pouvez également conserver une barre oblique inverse littérale dans vos résultats par échappement avec une barre oblique inverse, comme suit :  <ph id="ph1">\\\\</ph>.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Unescaped backslash characters, such as those that are commonly used in file paths, can render as illegal escape sequences in your results.</source>
          <target state="translated">Les caractères de barre oblique inverse sans séquence d'échappement, comme celles qui sont couramment utilisées dans les chemins d'accès, peuvent apparaître comme des séquences d'échappement non autorisées dans vos résultats.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>EXAMPLES</source>
          <target state="translated">EXEMPLES</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>-------------------------- EXAMPLE 1 --------------------------</source>
          <target state="translated">-------------------------- EXEMPLE 1 -------------------------</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>These commands convert a single-quoted here-string of user messages into a hash table.</source>
          <target state="translated">Ces commandes convertissent une chaîne « ici-même » entre guillemets simples de messages utilisateur en une table de hachage.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>In a single-quoted string, values are not substituted for variables and expressions are not evaluated.</source>
          <target state="translated">Dans une chaîne entre guillemets simples, les variables ne sont pas remplacées par les valeurs et les expressions ne sont pas évaluées.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>The first command creates a here-string and saves it in the $here variable.</source>
          <target state="translated">La première commande crée une chaîne « ici-même » et l'enregistre dans la variable $here.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>The second command uses the ConvertFrom-StringData cmdlet to convert the here-string in the $here variable to a hash table.</source>
          <target state="translated">La deuxième commande utilise l'applet de commande ConvertFrom-StringData pour convertir la chaîne « ici-même » de la variable $here en une table de hachage.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>-------------------------- EXAMPLE 2 --------------------------</source>
          <target state="translated">-------------------------- EXAMPLE 2 --------------------------</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>These commands demonstrate that ConvertFrom-StringData actually converts a here-string to a hash table.</source>
          <target state="translated">Ces commandes montrent que ConvertFrom-StringData convertit effectivement une chaîne « ici-même » en une table de hachage.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>The first command creates a double-quoted here-string that includes one key/value" pair and saves it in the $p variable.</source>
          <target state="translated">Paire de la première commande crée une ici-chaîne entre guillemets qui inclut une clé/valeur » et l’enregistre dans la variable $p.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>The second command uses a pipeline operator (|) to send the $p variable to the Get-Member cmdlet.</source>
          <target state="translated">La deuxième commande utilise un opérateur de pipeline (|) pour envoyer la variable $p à l'applet de commande Get-Member.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>The result shows that $p is a string (System.String).</source>
          <target state="translated">Le résultat montre que $p est une chaîne (System.String).</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>The third command uses the ConvertFrom-StringData cmdlet to convert the here-string in $p to a hash table.</source>
          <target state="translated">La troisième commande utilise l'applet de commande ConvertFrom-StringData pour convertir la chaîne « ici-même » de $p en une table de hachage.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>The command stores the result in the $hash variable.</source>
          <target state="translated">La commande stocke le résultat dans la variable $hash.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>The final command uses a pipeline operator (|) to send the $hash variable to the Get-Member cmdlet.</source>
          <target state="translated">La dernière commande utilise un opérateur de pipeline (|) pour envoyer la variable $hash à l'applet de commande Get-Member.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>The result shows that the content of the $hash variable is a hash table (System.Collections.Hashtable).</source>
          <target state="translated">Le résultat montre que le contenu de la variable $hash est une table de hachage (System.Collections.Hashtable).</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>-------------------------- EXAMPLE 3 --------------------------</source>
          <target state="translated">-------------------------- EXAMPLE 3 --------------------------</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>This command converts a single-quoted here-string that contains multiple key/value pairs into a hash table.</source>
          <target state="translated">Cette commande convertit une chaîne « ici-même » entre guillemets simples qui contient plusieurs paires clé/valeur en une table de hachage.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>In this command, the value of the StringData parameter is a here-string, instead of a variable that contains a here-string.</source>
          <target state="translated">Dans cette commande, la valeur du paramètre StringData est une chaîne « ici-même », au lieu d'une variable contenant une chaîne « ici-même ».</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Either format is valid.</source>
          <target state="translated">Les deux formats sont valides.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>The here-string includes a comment about one of the strings.</source>
          <target state="translated">La chaîne « ici-même » contient un commentaire sur une des chaînes.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Comments are valid in strings, provided that the comment is on a different line than a key/value pair.</source>
          <target state="translated">Les commentaires sont valides dans les chaînes, à condition que le commentaire se trouve sur une autre ligne qu'une paire clé/valeur.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>-------------------------- EXAMPLE 4 --------------------------</source>
          <target state="translated">-------------------------- EXAMPLE 4 --------------------------</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>This example converts a regular double-quoted string (not a here-string) into a hash table and saves it in the $a variable.</source>
          <target state="translated">Cet exemple convertit une chaîne entre guillemets doubles normale (pas une chaîne « ici-même ») en une table de hachage et l'enregistre dans la variable $a.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>To satisfy the condition that each key/value pair must be on a separate line, it uses the Windows PowerShell newline character (<ph id="ph1">\`</ph>n) to separate the pairs.</source>
          <target state="translated">Pour satisfaire à la condition que chaque paire clé/valeur doit être sur une ligne distincte, il utilise le caractère de saut de ligne Windows PowerShell (<ph id="ph1">\`</ph>n) pour séparer les paires.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>The result is a hash table of the input.</source>
          <target state="translated">Le résultat est une table de hachage de l'entrée.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>The remaining commands display the output.</source>
          <target state="translated">Les commandes restantes affichent la sortie.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>-------------------------- EXAMPLE 5 --------------------------</source>
          <target state="translated">-------------------------- EXAMPLE 5 --------------------------</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>This example shows a ConvertFrom-StringData command used in the DATA section of a script.</source>
          <target state="translated">Cet exemple montre une commande ConvertFrom-StringData utilisée dans la section DATA d'un script.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>The statements below the DATA section display the text to the user.</source>
          <target state="translated">Les instructions sous la section DATA affichent le texte à l'utilisateur.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Because the text includes variable names, it must be enclosed in a single-quoted string so that the variables are interpreted literally and not expanded.</source>
          <target state="translated">Comme le texte comprend des noms de variables, il doit figurer dans une chaîne entre guillemets simples pour que les variables soient interprétées littéralement et non pas développées.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Variables are not permitted in the DATA section.</source>
          <target state="translated">Les variables ne sont pas autorisées dans la section DATA.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>-------------------------- EXAMPLE 6 --------------------------</source>
          <target state="translated">-------------------------- EXAMPLE 6 --------------------------</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>This example shows that you can use a pipeline operator (|) to send a string to ConvertFrom-StringData.</source>
          <target state="translated">Cet exemple montre que vous pouvez utiliser un opérateur de pipeline (|) pour envoyer une chaîne à ConvertFrom-StringData.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>The first command saves a here-string in the $here variable.</source>
          <target state="translated">La première commande enregistre une chaîne « ici-même » dans la variable $here.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>The second command uses a pipeline operator (|) to send the $here variable to ConvertFrom-StringData.</source>
          <target state="translated">La deuxième commande utilise un opérateur de pipeline (|) pour envoyer la variable $here à ConvertFrom-StringData.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>The command saves the result in the $hash variable.</source>
          <target state="translated">La commande enregistre le résultat dans la variable $hash.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>The final command displays the contents of the $hash variable.</source>
          <target state="translated">La dernière commande affiche le contenu de la variable $hash.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>-------------------------- EXAMPLE 7 --------------------------</source>
          <target state="translated">-------------------------- EXAMPLE 7 --------------------------</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>This example shows the use of escape characters to create new lines and return characters in ConvertFrom-StringData.</source>
          <target state="translated">Cet exemple montre l'utilisation des caractères d'échappement pour créer des caractères de nouvelle ligne et de retour chariot dans ConvertFrom-StringData.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>In this example, the escape sequence <bpt id="p1">**</bpt>\n<ept id="p1">**</ept> is used to create new lines within a block of text (the value, in the resulting hash table) that is associated with a name or item (the name, in the resulting hash table).</source>
          <target state="translated">Dans cet exemple, la séquence d’échappement <bpt id="p1">**</bpt>\n<ept id="p1">**</ept> est utilisé pour créer des lignes dans un bloc de texte (la valeur dans la table de hachage résultante) qui est associé à un nom ou un élément (le nom de la table de hachage résultante).</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>-------------------------- EXAMPLE 8 --------------------------</source>
          <target state="translated">-------------------------- EXAMPLE 8 --------------------------</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>This example shows how to use of the backslash escape character in the string data to allow a file path to render correctly in the resulting ConvertFrom-StringData hash table.</source>
          <target state="translated">Cet exemple montre comment utiliser le caractère d'échappement barre oblique inverse (/) dans la chaîne de données pour permettre l'affichage correct d'un chemin d'accès de fichier dans la table de hachage ConvertFrom-StringData résultante.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>The double backslash ensures that the literal backslash characters render correctly in the hash table output.</source>
          <target state="translated">La double barre oblique inverse fait que les caractères de barre oblique inverse littérale s'affichent correctement dans la sortie de table de hachage.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>PARAMETERS</source>
          <target state="translated">PARAMÈTRES</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>-StringData</source>
          <target state="translated">-StringData</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>Specifies the string to be converted.</source>
          <target state="translated">Spécifie la chaîne à convertir.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>You can use this parameter or pipe a string to ConvertFrom-StringData.</source>
          <target state="translated">Vous pouvez utiliser ce paramètre ou diriger une chaîne vers ConvertFrom-StringData.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>The parameter name is optional.</source>
          <target state="translated">Le nom de paramètre est facultatif.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>The value of this parameter must be a string that is enclosed in single quotation marks (a single-quoted string) or a string that is enclosed in double quotation marks (a double-quoted string) or a here-string containing one or more key/value pairs.</source>
          <target state="translated">La valeur de ce paramètre doit être une chaîne entre des guillemets simples ou une chaîne entre des guillemets doubles, ou encore une chaîne « ici-même » contenant une ou plusieurs paires clé/valeur.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>Each key/value pair must be on a separate line, or each pair must be separated by newline characters (<ph id="ph1">\`</ph>n).</source>
          <target state="translated">Chaque paire clé/valeur doit être sur une ligne distincte ou chaque paire doit être séparé par des caractères de saut de ligne (<ph id="ph1">\`</ph>n).</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>You can include comments in the string, but the comments cannot be on the same line as a key/value pair.</source>
          <target state="translated">Vous pouvez inclure des commentaires dans la chaîne, mais les commentaires ne peuvent pas se trouver sur la même ligne qu'une paire clé/valeur.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>The comments are not included in the hash table.</source>
          <target state="translated">Les commentaires ne sont pas inclus dans la table de hachage.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>A here-string is a string consisting of one or more lines within which quotation marks are interpreted literally.</source>
          <target state="translated">Une chaîne « ici-même » est une chaîne composée d'une ou plusieurs lignes, dans laquelle les guillemets sont interprétés littéralement.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>For more information, see about_Quoting_Rules.</source>
          <target state="translated">Pour plus d'informations, consultez about_Quoting_Rules.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>CommonParameters</source>
          <target state="translated">CommonParameters</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutVariable, -OutBuffer, -PipelineVariable, -Verbose, -WarningAction, and -WarningVariable.</source>
          <target state="translated">Cette applet de commande prend en charge les paramètres courants :-Debug, - ErrorAction, - ErrorVariable, - InformationAction, - InformationVariable, - OutVariable,-OutBuffer, - PipelineVariable, - Verbose, - WarningAction et - WarningVariable.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>For more information, see about_CommonParameters (http://go.microsoft.com/fwlink/?LinkID=113216).</source>
          <target state="translated">Pour plus d’informations, consultez about_CommonParameters (http://go.microsoft.com/fwlink/?LinkID=113216).</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>INPUTS</source>
          <target state="translated">ENTRÉES</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>System.String</source>
          <target state="translated">System.String</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>You can pipe a string containing a key/value pair to ConvertFrom-StringData.</source>
          <target state="translated">Vous pouvez diriger une chaîne contenant une paire clé/valeur vers ConvertFrom-StringData.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>OUTPUTS</source>
          <target state="translated">SORTIES</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>System.Collections.Hashtable</source>
          <target state="translated">System.Collections.Hashtable</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>ConvertFrom-StringData returns a hash table that it creates from the key/value pairs.</source>
          <target state="translated">ConvertFrom-StringData retourne une table de hachage qu'elle crée à partir des paires clé/valeur.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>NOTES</source>
          <target state="translated">NOTES DE PUBLICATION</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>A here-string is a string consisting of one or more lines within which quotation marks are interpreted literally.</source>
          <target state="translated">Une chaîne « ici-même » est une chaîne composée d'une ou plusieurs lignes, dans laquelle les guillemets sont interprétés littéralement.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>For more information, see about_Quoting_Rules.</source>
          <target state="translated">Pour plus d'informations, consultez about_Quoting_Rules.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>ConvertFrom-StringData can be useful in scripts that display user messages in multiple spoken languages.</source>
          <target state="translated">ConvertFrom-StringData peut être utile dans les scripts qui affichent des messages utilisateur dans plusieurs langues.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>You can use the dictionary-style hash tables to isolate text strings from code, such as in resource files, and to format the text strings for use in translation tools.</source>
          <target state="translated">Vous pouvez utiliser les tables de hachage de type dictionnaire pour isoler les chaînes de texte du code, comme dans des fichiers de ressources, et pour mettre en forme les chaînes de texte pour qu'elles soient utilisables dans des outils de traduction.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>RELATED LINKS</source>
          <target state="translated">LIENS CONNEXES</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>about_Quoting_Rules</source>
          <target state="translated">about_Quoting_Rules</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>about_Script_Internationalization</source>
          <target state="translated">about_Script_Internationalization</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>about_Data_Sections</source>
          <target state="translated">about_Data_Sections</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>