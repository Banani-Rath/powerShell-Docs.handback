<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="fr-fr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-1c394fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">7ab9631646d772b752570785a53e3403aaec8ee7</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">reference\4.0\Microsoft.PowerShell.Core\About\about_Special_Characters.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions" />
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">79fc7d65c36aee7fcb30a86379a5e923869c2415</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">9d6fa30357ace71c2c591357785833273e70da00</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>about_Special_Characters</source>
          <target state="translated">about_Special_Characters</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>powershell, cmdlet</source>
          <target state="translated">applet de commande PowerShell</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>About Special Characters</source>
          <target state="translated">À propos des caractères spéciaux</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>about_Special_Characters</source>
          <target state="translated">about_Special_Characters</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>TOPIC</source>
          <target state="translated">RUBRIQUE</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>about_Special_Characters</source>
          <target state="translated">about_Special_Characters</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>SHORT DESCRIPTION</source>
          <target state="translated">DESCRIPTION COURTE</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Describes the special characters that you can use to control how Windows PowerShell interprets the next character in a command or parameter.</source>
          <target state="translated">Décrit les caractères spéciaux que vous pouvez utiliser pour contrôler comment Windows PowerShell interprète le caractère suivant dans une commande ou un paramètre.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>LONG DESCRIPTION</source>
          <target state="translated">DESCRIPTION DÉTAILLÉE</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Windows PowerShell supports a set of special character sequences that are used to represent characters that are not part of the standard character set.</source>
          <target state="translated">Windows PowerShell prend en charge un ensemble de séquences de caractères spéciaux qui sont utilisés pour représenter des caractères qui ne font pas partie du jeu de caractères standard.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>The special characters in Windows PowerShell begin with the backtick character, also known as the grave accent (ASCII 96).</source>
          <target state="translated">Les caractères spéciaux dans Windows PowerShell commencent par le caractère d’accent grave, également appelé l’accent grave (96 ASCII).</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>The following special characters are recognized by Windows PowerShell:</source>
          <target state="translated">Les caractères spéciaux suivants sont reconnus par Windows PowerShell :</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>a    Alert <ph id="ph1">`b    Backspace
`</ph>f    Form feed <ph id="ph2">`n    New line
`</ph>r    Carriage return <ph id="ph3">`t    Horizontal tab
`</ph>v    Vertical tab --%   Stop parsing</source>
          <target state="translated">une alerte <ph id="ph1">`b    Backspace
`</ph>f saut <ph id="ph2">`n    New line
`</ph>r retour chariot <ph id="ph3">`t    Horizontal tab
`</ph>v tabulation verticale--% arrêter l’analyse</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>These characters are case-sensitive.</source>
          <target state="translated">Ces caractères sont sensibles à la casse.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>NULL (`0)</source>
          <target state="translated">NULL ('0)</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Windows PowerShell recognizes a null special character (`0) and represents it with a character code of 0.</source>
          <target state="translated">Windows PowerShell reconnaît un caractère spécial null ('0) et il représente un code de caractère de 0.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>It appears as an empty space in the Windows PowerShell output.</source>
          <target state="translated">Il apparaît comme un espace vide dans la sortie de Windows PowerShell.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>This allows you to use Windows PowerShell to read and process text files that use null characters, such as string termination or record termination indicators.</source>
          <target state="translated">Cela permet d’utiliser Windows PowerShell pour lire et traiter les fichiers texte qui utilisent des caractères null, telles que les indicateurs de fin d’enregistrement ou de fin de chaîne.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>The null special character is not equivalent to the $null variable, which stores a value of NULL.</source>
          <target state="translated">Le caractère spécial null n’est pas équivalent à la variable $null, qui stocke une valeur null.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>ALERT (<ph id="ph1">`a)
The alert (`</ph>a) character sends a beep signal to the computer's speaker.</source>
          <target state="translated">ALERTE (<ph id="ph1">`a)
The alert (`</ph>un) caractère envoie un signal sonore à haut-parleur de l’ordinateur.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>You can use this to warn a user about an impending action.</source>
          <target state="translated">Vous pouvez utiliser cela pour avertir un utilisateur sur une action imminent.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>The following command sends two beep signals to the local computer's speaker:</source>
          <target state="translated">La commande suivante envoie deux signaux sonores de haut-parleur de l’ordinateur local :</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>for ($i = 0; $i -le 1; $i++){"`a"}</source>
          <target state="translated">pour ($i = 0 ; $i-le 1 ; $i ++) { » « un »}</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>BACKSPACE (<ph id="ph1">`b)
The backspace character (`</ph>b) moves the cursor back one character, but it does not delete any characters.</source>
          <target state="translated">RETOUR ARRIÈRE (<ph id="ph1">`b)
The backspace character (`</ph>b) déplace le curseur d’un caractère, mais elle ne supprime pas tous les caractères.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>The following command writes the word "backup", moves the cursor back twice, and then writes the word "out" (preceded by a space and starting at the new position):</source>
          <target state="translated">La commande suivante écrit la mot « sauvegarde », déplace le curseur à deux reprises, puis écrit le mot « » (précédé d’un espace et commençant à la nouvelle position) :</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>"backup<ph id="ph1">`b`</ph>b out"</source>
          <target state="translated">« sauvegarde<ph id="ph1">`b`</ph>b out »</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>The output from this command is as follows:</source>
          <target state="translated">La sortie de cette commande est la suivante :</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>back out</source>
          <target state="translated">arrière</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>FORM FEED (<ph id="ph1">`f)
The form feed character (`</ph>f) is a print instruction that ejects the current page and continues printing on the next page.</source>
          <target state="translated">SAUT de page (<ph id="ph1">`f)
The form feed character (`</ph>f) est une instruction d’impression qui éjecte la page actuelle et continue l’impression sur la page suivante.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>This character affects printed documents only; it does not affect screen output.</source>
          <target state="translated">Ce caractère a une incidence sur les documents imprimés. Il n’affecte pas la sortie écran.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>NEW LINE (<ph id="ph1">`n)
The new line character (`</ph>n) inserts a line break immediately after the character.</source>
          <target state="translated">NOUVELLE LIGNE (<ph id="ph1">`n)
The new line character (`</ph>n) insère un saut de ligne immédiatement après le caractère.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>The following example shows how to use the new line character in a Write-Host command:</source>
          <target state="translated">L’exemple suivant montre comment utiliser le caractère de nouvelle ligne dans une commande Write-Host :</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>"There are two line breaks<ph id="ph1">`n`</ph>nhere."</source>
          <target state="translated">« Il existe deux sauts de ligne<ph id="ph1">`n`</ph>nhere. »</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>The output from this command is as follows:</source>
          <target state="translated">La sortie de cette commande est la suivante :</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>There are two line breaks</source>
          <target state="translated">Il existe deux sauts de ligne</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>here.</source>
          <target state="translated">ici.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>CARRIAGE RETURN (<ph id="ph1">`r)
The carriage return character (`</ph>r) eliminates the entire line prior to the `r character, as though the prior text were on a different line.</source>
          <target state="translated">RETOUR CHARIOT (<ph id="ph1">`r)
The carriage return character (`</ph>r) supprime la ligne entière avant le « caractère r, comme si le texte précédent était sur une autre ligne.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>For example:</source>
          <target state="translated">Par exemple :</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Write-Host "Let's not move`rDelete everything before this point."</source>
          <target state="translated">Write-Host « nous allons move'rDelete pas tout avant ce point. »</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>The output from this command is:</source>
          <target state="translated">La sortie de cette commande est :</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Delete everything before this point.</source>
          <target state="translated">Supprimez tout avant ce point.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>HORIZONTAL TAB (<ph id="ph1">`t)
The horizontal tab character (`</ph>t) advances to the next tab stop and continues writing at that point.</source>
          <target state="translated">TABULATION HORIZONTALE (<ph id="ph1">`t)
The horizontal tab character (`</ph>t) avance jusqu’au taquet de tabulation suivant et continue à écrire à ce stade.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>By default, the Windows PowerShell console has a tab stop at every eighth space.</source>
          <target state="translated">Par défaut, la console Windows PowerShell comporte un onglet arrêter à chaque espace huitième.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>For example, the following command inserts two tabs between each column.</source>
          <target state="translated">Par exemple, la commande suivante insère deux onglets entre chaque colonne.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>"Column1<ph id="ph1">`t`</ph>tColumn2<ph id="ph2">`t`</ph>tColumn3"</source>
          <target state="translated">« Column1<ph id="ph1">`t`</ph>tColumn2<ph id="ph2">`t`</ph>tColumn3 »</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>The output from this command is:</source>
          <target state="translated">La sortie de cette commande est :</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Column1         Column2         Column3</source>
          <target state="translated">Colonne1 Column2 Column3</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>VERTICAL TAB (<ph id="ph1">`v)
The horizontal tab character (`</ph>t) advances to the next vertical tab stop and writes all subsequent output beginning at that point.</source>
          <target state="translated">TABULATION VERTICALE (<ph id="ph1">`v)
The horizontal tab character (`</ph>t) avance jusqu’au prochain taquet de tabulation verticale et écrit toutes les sorties suivantes commençant à ce stade.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>This character affects printed documents only.</source>
          <target state="translated">Ce caractère a une incidence sur les documents imprimés.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>It does not affect screen output.</source>
          <target state="translated">Il n’affecte pas la sortie écran.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>STOP PARSING  (--%) The stop-parsing symbol (--%) prevents Windows PowerShell from interpreting arguments in program calls as Windows PowerShell commands and expressions.</source>
          <target state="translated">ARRÊTER L’ANALYSE (--%) Le symbole de l’analyse des mots vides (--%) empêche l’interprétation des arguments dans les appels du programme en tant qu’expressions et les commandes Windows PowerShell de Windows PowerShell.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Place the stop-parsing symbol after the program name and before program arguments that might cause errors.</source>
          <target state="translated">Placer le symbole de l’analyse des mots vides après le nom du programme et avant les arguments de programme qui peuvent provoquer des erreurs.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>For example, the following Icacls command uses the stop-parsing symbol.</source>
          <target state="translated">Par exemple, la commande Icacls suivante utilise le symbole de l’analyse des mots vides.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>icacls X:\VMS --% /grant Dom\HVAdmin:(CI)(OI)F</source>
          <target state="translated">/ de Grant icacls X:\VMS--% Dom\HVAdmin:(CI) (OI) F</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Windows PowerShell sends the following command to Icacls.</source>
          <target state="translated">Windows PowerShell envoie la commande suivante pour Icacls.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>X:\VMS /grant Dom\HVAdmin:(CI)(OI)F</source>
          <target state="translated">X:\VMS/Grant Dom\HVAdmin:(CI) (OI) F</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>For more information about the stop-parsing symbol, see about_Parsing.</source>
          <target state="translated">Pour plus d’informations sur le symbole de l’analyse de l’arrêt, voir about_Parsing.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>KEYWORDS</source>
          <target state="translated">MOTS CLÉS</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>about_Punctuation about_Symbols</source>
          <target state="translated">about_Punctuation about_Symbols</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>SEE ALSO</source>
          <target state="translated">VOIR AUSSI</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>about_Quoting_Rules about_Escape_Characters</source>
          <target state="translated">about_Quoting_Rules about_Escape_Characters</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>