<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="es-es">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-1c394fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">92fc6355c344b3c8e9d1085a2b3f91bbcb0d1119</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">reference\4.0\Microsoft.PowerShell.Core\About\about_Types.ps1xml.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions" />
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">58b5b4fe53107821e75a4b260e2d08ba805312db</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">90e5515bb689451a5de53796b1b5711c9215c1fd</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>about_Types.ps1xml</source>
          <target state="translated">about_Types.ps1xml</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>powershell, cmdlet</source>
          <target state="translated">cmdlet de PowerShell</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>About Types.ps1xml</source>
          <target state="translated">Acerca de Types.ps1xml</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>about_Types.ps1xml</source>
          <target state="translated">about_Types.ps1xml</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>about_Types.ps1xml</source>
          <target state="translated">about_Types.ps1xml</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>SHORT DESCRIPTION</source>
          <target state="translated">DESCRIPCIÓN BREVE</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Explains how to use Types.ps1xml files to extend the types of objects that are used in Windows PowerShell.</source>
          <target state="translated">Explica cómo utilizar archivos Types.ps1xml para extender los tipos de objetos que se usan en Windows PowerShell.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>LONG DESCRIPTION</source>
          <target state="translated">DESCRIPCIÓN LARGA</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Extended type data defines additional properties and methods ("members") of object types in Windows PowerShell.</source>
          <target state="translated">Datos de tipo extendido definen propiedades y métodos ("miembros") de los tipos de objeto adicionales en Windows PowerShell.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>There are two techniques for adding extended type data to a Windows PowerShell session.</source>
          <target state="translated">Hay dos técnicas para agregar datos de tipo extendido a una sesión de Windows PowerShell.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>-- Types.ps1xml file: An XML file that defines extended type data.</source>
          <target state="translated">--Archivo Types.ps1xml: archivo XML que define los datos de tipo extendido.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>-- Update-TypeData: A cmdlet that reloads Types.ps1xml files and defines extended data for types in the current session.</source>
          <target state="translated">--Update-TypeData: archivos de un cmdlet que vuelve a cargar Types.ps1xml y define los datos extendidos para los tipos en la sesión actual.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>This topic describes Types.ps1xml files.</source>
          <target state="translated">Este tema describe los archivos Types.ps1xml.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>For more information about using the Update-TypeData cmdlet to add dynamic extended type data to the current session see Update-TypeData (http://go.microsoft.com/fwlink/?LinkID=113421).</source>
          <target state="translated">Para obtener más información acerca de cómo utilizar el cmdlet Update-TypeData para agregar el tipo extendido dinámica datos a la sesión actual consulte Update-TypeData (http://go.microsoft.com/fwlink/?LinkID=113421).</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>About Extended Type Data</source>
          <target state="translated">Acerca de los datos de tipo extendido</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Extended type data defines additional properties and methods ("members") of object types in Windows PowerShell.</source>
          <target state="translated">Datos de tipo extendido definen propiedades y métodos ("miembros") de los tipos de objeto adicionales en Windows PowerShell.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>You can extend any type that is supported by Windows PowerShell and use the added properties and methods in the same way that you use the properties that are defined on the object types.</source>
          <target state="translated">Puede extender cualquier tipo que es compatible con Windows PowerShell y use las propiedades agregadas y los métodos de la misma manera que use las propiedades que se definen en los tipos de objeto.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>For example, Windows PowerShell adds a DateTime property to all System.DateTime objects, such as the ones that the Get-Date cmdlet returns.</source>
          <target state="translated">Por ejemplo, Windows PowerShell agrega una propiedad DateTime para todos los objetos de System.DateTime, como las que el cmdlet Get-Date devuelve.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>PS C:&gt; (Get-Date).DateTime Sunday, January 29, 2012 9:43:57 AM</source>
          <target state="translated">PS C: &gt; (Get-Date). Fecha y hora el domingo, 29 de enero de 2012 09:43:57 A.M.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>You won't find the DateTime property in the description of the System.DateTime structure (http://msdn.microsoft.com/library/system.datetime.aspx), because Windows PowerShell adds the property and it is visible only in Windows PowerShell.</source>
          <target state="translated">No encontrará la propiedad DateTime en la descripción de la estructura System.DateTime (http://msdn.microsoft.com/library/system.datetime.aspx), ya que Windows PowerShell agrega la propiedad y es visible solo en Windows PowerShell.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>To add the DateTime property to all Windows PowerShell sessions, Windows PowerShell defines the DateTime property in the Types.ps1xml file in the Windows PowerShell installation directory ($pshome).</source>
          <target state="translated">Para agregar la propiedad de fecha y hora a todas las sesiones de Windows PowerShell, Windows PowerShell define la propiedad de fecha y hora en el archivo Types.ps1xml en el directorio de instalación de Windows PowerShell ($pshome).</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Adding Extended Type Data to Windows PowerShell.</source>
          <target state="translated">Agregar datos de tipo extendido a Windows PowerShell.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>There are three sources of extended type data in Windows PowerShell sessions.</source>
          <target state="translated">Hay tres orígenes de datos de tipo extendido en sesiones de Windows PowerShell.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>--  The Types.ps1xml files in the Windows PowerShell installation directory are loaded automatically into every Windows PowerShell session.</source>
          <target state="translated">--Los archivos Types.ps1xml en el directorio de instalación de Windows PowerShell se cargan automáticamente en cada sesión de Windows PowerShell.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>--  The Types.ps1xml files that modules export are loaded when the module is imported into the current session.</source>
          <target state="translated">--Los archivos Types.ps1xml que exportar los módulos se cargan cuando se importa el módulo en la sesión actual.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>--  Extended type data that is defined by using the Update-TypeData cmdlet is added only to the current session.</source>
          <target state="translated">--Datos de tipo extendido que se definen mediante el cmdlet Update-TypeData sólo se agregan a la sesión actual.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>It is not saved in a file.</source>
          <target state="translated">No se guarda en un archivo.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>In the session, the extended type data from the three sources is applied to objects in the same way and is available on all objects of the specified types.</source>
          <target state="translated">En la sesión, los datos de tipo extendido de los tres orígenes se aplican a los objetos de la misma manera y está disponibles en todos los objetos de los tipos especificados.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>The TypeData Cmdlets</source>
          <target state="translated">Los TypeData Cmdlets</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>The following TypeData cmdlets are included in the Microsoft.PowerShell.Utility module in Windows PowerShell 3.0 and later versions of Windows PowerShell.</source>
          <target state="translated">Se incluyen los siguientes cmdlets de TypeData en el módulo Microsoft.PowerShell.Utility en Windows PowerShell 3.0 y versiones posteriores de Windows PowerShell.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Get-TypeData:     Gets extended type data in the current session.</source>
          <target state="translated">Get-TypeData: Obtiene datos de tipos extendidos en la sesión actual.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Update-TypeData:  Reloads Types.ps1xml files.</source>
          <target state="translated">Update-TypeData: Types.ps1xml vuelve a cargar los archivos.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Adds extended type data to the current session.</source>
          <target state="translated">Agrega datos de tipo extendido a la sesión actual.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Remove-TypeData:  Removes extended type data from the current session.</source>
          <target state="translated">Remove-TypeData: Elimina datos de tipos extendidos de la sesión actual.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>For more information about these cmdlets, see the help topic for each cmdlet.</source>
          <target state="translated">Para obtener más información acerca de estos cmdlets, vea el tema de ayuda para cada cmdlet.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Built-in Types.ps1xml Files</source>
          <target state="translated">Archivos Types.ps1xml integrados</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>The Types.ps1xml files in the $pshome directory are added automatically to every session.</source>
          <target state="translated">Los archivos Types.ps1xml en el directorio $pshome se agregan automáticamente a todas las sesiones.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>The Types.ps1xml file in the Windows PowerShell installation directory ($pshome) is an XML-based text file that lets you add properties and methods to the objects that are used in Windows PowerShell.</source>
          <target state="translated">El archivo Types.ps1xml en el directorio de instalación de Windows PowerShell ($pshome) es un archivo de texto basado en XML que le permite agregar propiedades y métodos a los objetos que se usan en Windows PowerShell.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Windows PowerShell has built-in Types.ps1xml files that add several elements to the .NET Framework types, but you can create additional Types.ps1xml files to further extend the types.</source>
          <target state="translated">Windows PowerShell tiene archivos Types.ps1xml integrados que agregar varios elementos a los tipos de .NET Framework, pero puede crear archivos Types.ps1xml adicionales para extender aún más los tipos.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>For example, by default, array objects (System.Array) have a Length property that lists the number of objects in the array.</source>
          <target state="translated">Por ejemplo, de forma predeterminada, los objetos array (System.Array) tienen una propiedad Length que muestra el número de objetos de la matriz.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>However, because the name "length" does not clearly describe the property, Windows PowerShell adds an alias property named "Count" that displays the same value.</source>
          <target state="translated">Sin embargo, dado el nombre "longitud" describir claramente la propiedad, Windows PowerShell agrega una propiedad de alias denominada "Count" que muestra el mismo valor.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>The following XML adds the Count property to the System.Array type.</source>
          <target state="translated">El código XML siguiente agrega la propiedad de recuento para el tipo System.Array.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>System.Array<ph id="ph1">&lt;/Name&gt;
&lt;Members&gt;
&lt;AliasProperty&gt;
&lt;Name&gt;</ph>Count<ph id="ph2">&lt;/Name&gt;
&lt;ReferencedMemberName&gt;</ph> Length</source>
          <target state="translated">System.Array<ph id="ph1">&lt;/Name&gt;
&lt;Members&gt;
&lt;AliasProperty&gt;
&lt;Name&gt;</ph>recuento<ph id="ph2">&lt;/Name&gt;
&lt;ReferencedMemberName&gt;</ph> longitud</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>To get the new AliasProperty, use a Get-Member command on any array, as shown in the following example.</source>
          <target state="translated">Para obtener el nuevo AliasProperty, utilice un comando Get-Member en cualquier matriz, tal como se muestra en el ejemplo siguiente.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Get-Member -inputobject (1,2,3,4)</source>
          <target state="translated">Get-Member - inputobject (1,2,3,4)</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>The command returns the following results.</source>
          <target state="translated">El comando devuelve los resultados siguientes.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Name           MemberType    Definition</source>
          <target state="translated">Nombre MemberType definición</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Count          AliasProperty Count = Length Address        Method        System.Object&amp; Address(Int32 ) Clone          Method        System.Object Clone() CopyTo         Method        System.Void CopyTo(Array array, Int32 index): Equals         Method        System.Boolean Equals(Object obj) Get            Method        System.Object Get(Int32 )</source>
          <target state="translated">Recuento de AliasProperty = longitud dirección método System.Object &amp; dirección (Int32) clon método System.Object Clone() CopyTo método System.Void CopyTo(Array array, Int32 index): es igual a método System.Boolean Equals(Object obj) Get método System.Object Get (Int32)</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>...</source>
          <target state="translated">...</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>As a result, you can use either the Count property or the Length property of arrays in Windows PowerShell.</source>
          <target state="translated">Como resultado, puede utilizar la propiedad Count o la propiedad de longitud de las matrices en Windows PowerShell.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>For example:</source>
          <target state="translated">Por ejemplo:</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>C:\PS&gt; (1, 2, 3, 4).count</source>
          <target state="translated">C:\PS &gt; (1, 2, 3, 4) .count</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>4</source>
          <target state="translated">4</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>C:\PS&gt; (1, 2, 3, 4).length</source>
          <target state="translated">C:\PS &gt; (1, 2, 3, 4) .length</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>4</source>
          <target state="translated">4</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>Creating New Types.ps1xml Files</source>
          <target state="translated">Creación de nuevos archivos Types.ps1xml</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>The .ps1xml files that are installed with Windows PowerShell are digitally signed to prevent tampering because the formatting can include script blocks.</source>
          <target state="translated">Los archivos ps1xml que se instalan con Windows PowerShell están firmados digitalmente para evitar la manipulación porque el formato puede incluir los bloques de script.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Therefore, to add a property or method to a .NET Framework type, create your own Types.ps1xml files, and then add them to your Windows PowerShell session.</source>
          <target state="translated">Por lo tanto, para agregar una propiedad o método en un tipo de .NET Framework, crear sus propios archivos Types.ps1xml y, a continuación, agregarlos a la sesión de Windows PowerShell.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>To create a new file, start by copying an existing Types.ps1xml file.</source>
          <target state="translated">Para crear un nuevo archivo, inicie copiando un archivo Types.ps1xml existente.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>The new file can have any name, but it must have a .ps1xml file name extension.</source>
          <target state="translated">El nuevo archivo puede tener cualquier nombre, pero debe tener una extensión de nombre de archivo ps1xml.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>You can place the new file in any directory that is accessible to Windows PowerShell, but it is useful to place the files in the Windows PowerShell installation directory ($pshome) or in a subdirectory of the installation directory.</source>
          <target state="translated">Puede colocar el nuevo archivo en cualquier directorio accesible a Windows PowerShell, pero resulta útil para colocar los archivos en el directorio de instalación de Windows PowerShell ($pshome) o en un subdirectorio del directorio de instalación.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>When you have saved the new file, use the Update-TypeData cmdlet to add the new file to your Windows PowerShell session.</source>
          <target state="translated">Una vez guardado el nuevo archivo, utilice el cmdlet Update-TypeData para agregar el nuevo archivo a la sesión de Windows PowerShell.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>If you want your types to take precedence over the types that are defined in the built-in file, use the PrependData parameter of the Update-TypeData cmdlet.</source>
          <target state="translated">Si desea que los tipos tienen prioridad sobre los tipos que se definen en el archivo integrado, use el parámetro PrependData del cmdlet Update-TypeData.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>Update-TypeData affects only the current session.</source>
          <target state="translated">Update-TypeData afecta sólo a la sesión actual.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>To make the change to all future sessions, export the console, or add the Update-TypeData command to your Windows PowerShell profile.</source>
          <target state="translated">Para realizar el cambio en todas las sesiones futuras, exportar la consola o agregue el comando Update-TypeData a su perfil de Windows PowerShell.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>Types.ps1xml and Add-Member</source>
          <target state="translated">Types.ps1xml y agregar miembro</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>The Types.ps1xml files add properties and methods to all the instances of the objects of the specified .NET Framework type in the affected Windows PowerShell session.</source>
          <target state="translated">Los archivos Types.ps1xml agregan propiedades y métodos a todas las instancias de los objetos del tipo especificado de .NET Framework en la sesión de Windows PowerShell afectada.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>However, if you need to add properties or methods only to one instance of an object, use the Add-Member cmdlet.</source>
          <target state="translated">Sin embargo, si necesita agregar propiedades o métodos sólo a una instancia de un objeto, utilice el cmdlet Add-Member.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>For more information,see Add-Member.</source>
          <target state="translated">Para obtener más información, consulte a Add-Member.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>Example: Adding an Age Member to FileInfo Objects</source>
          <target state="translated">Ejemplo: Agregar a un miembro de edad a objetos FileInfo</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>This example shows how to add an Age property to file objects (System.IO.FileInfo).</source>
          <target state="translated">Este ejemplo muestra cómo agregar una propiedad Age a objetos de archivo (System.IO.FileInfo).</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>The age of a file is the difference between its creation time and the current time in days.</source>
          <target state="translated">La antigüedad de un archivo es la diferencia entre la hora de creación y la hora actual en días.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>It is easiest to use the original Types.ps1xml file as a template for the new file.</source>
          <target state="translated">Es más fácil de utilizar el archivo Types.ps1xml original como plantilla para el nuevo archivo.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>The following command copies the original file to a file called MyTypes.ps1xml in the $pshome directory.</source>
          <target state="translated">El siguiente comando copia el archivo original en un archivo denominado MyTypes.ps1xml en el directorio $pshome.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>copy-item Types.ps1xml MyTypes.ps1xml</source>
          <target state="translated">Copiar elemento Types.ps1xml MyTypes.ps1xml</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>Next, open the Types.ps1xml file in any XML or text editor, such as Notepad.</source>
          <target state="translated">A continuación, abra el archivo Types.ps1xml en cualquier editor de texto o XML, como el Bloc de notas.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>Because the Age property is calculated by using a script block, find a <ph id="ph1">&lt;ScriptProperty&gt;</ph> tag to use as a model for the new Age property.</source>
          <target state="translated">Dado que la propiedad Age se calcula mediante el uso de un bloque de script, busque un <ph id="ph1">&lt;ScriptProperty&gt;</ph> etiqueta que se va a utilizar como modelo para la nueva propiedad de edad.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>Copy the XML between the <ph id="ph1">&lt;Type&gt;</ph> and <ph id="ph2">&lt;/Type&gt;</ph> tags of the code to create the script property.</source>
          <target state="translated">Copie el código XML entre el <ph id="ph1">&lt;Type&gt;</ph> y <ph id="ph2">&lt;/Type&gt;</ph> etiquetas de código para crear la propiedad de secuencia de comandos.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>Then, delete the remainder of the file, except for the opening &lt;?xml&gt; and <ph id="ph1">&lt;Types&gt;</ph> tags and the closing <ph id="ph2">&lt;/Types&gt;</ph> tag.</source>
          <target state="translated">A continuación, elimine el resto del archivo, excepto la apertura &lt;? xml &gt; y <ph id="ph1">&lt;Types&gt;</ph> etiquetas y el cierre <ph id="ph2">&lt;/Types&gt;</ph> etiqueta.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>You must also delete the digital signature to prevent errors.</source>
          <target state="translated">También debe eliminar la firma digital para evitar errores.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>Begin with the model script property, such as the following script property, which was copied from the original Types.ps1xml file.</source>
          <target state="translated">Comenzar con la propiedad de secuencia de comandos de modelo, como la siguiente propiedad de secuencia de comandos, que se ha copiado el archivo Types.ps1xml original.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>System.Guid<ph id="ph1">&lt;/Name&gt;
&lt;Members&gt;
&lt;ScriptProperty&gt;
&lt;Name&gt;</ph>Guid<ph id="ph2">&lt;/Name&gt;
&lt;GetScriptBlock&gt;</ph>$this.ToString()</source>
          <target state="translated">System.Guid<ph id="ph1">&lt;/Name&gt;
&lt;Members&gt;
&lt;ScriptProperty&gt;
&lt;Name&gt;</ph>Guid<ph id="ph2">&lt;/Name&gt;
&lt;GetScriptBlock&gt;</ph>$esto. ToString()</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>Then, change the name of the .NET Framework type, the name of the property, and the value of the script block to create an Age property for file objects.</source>
          <target state="translated">A continuación, cambie el nombre del tipo de .NET Framework, el nombre de la propiedad y el valor del bloque de script para crear una propiedad Age para objetos de archivo.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>System.IO.FileInfo<ph id="ph1">&lt;/Name&gt;
&lt;Members&gt;
&lt;ScriptProperty&gt;
&lt;Name&gt;</ph>Age<ph id="ph2">&lt;/Name&gt;
&lt;GetScriptBlock&gt;</ph> ((get-date) - ($this.creationtime)).days</source>
          <target state="translated">System.IO.FileInfo<ph id="ph1">&lt;/Name&gt;
&lt;Members&gt;
&lt;ScriptProperty&gt;
&lt;Name&gt;</ph>edad<ph id="ph2">&lt;/Name&gt;
&lt;GetScriptBlock&gt;</ph> ((get-date)-($this.creationtime)).days</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>After you save the file and close it, run an Update-TypeData command, such as the following command, to add the new Types.ps1xml file to the current session.</source>
          <target state="translated">Después de guardar el archivo y ciérrelo, ejecute un comando Update-TypeData, por ejemplo, el comando siguiente, para agregar el nuevo archivo Types.ps1xml a la sesión actual.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>The command uses the PrependData parameter to place the new file in a higher precedence order than the original file.</source>
          <target state="translated">El comando utiliza el parámetro PrependData para colocar el nuevo archivo en un orden de prioridad más alto que el archivo original.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>(For more information about Update-TypeData, see Update-TypeData.)</source>
          <target state="translated">(Para obtener más información acerca de Update-TypeData, consulte Update-TypeData).</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>update-typedata -prependpath $pshome\MyTypes.ps1xml</source>
          <target state="translated">Update-typedata - prependpath $pshome\MyTypes.ps1xml</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>To test the change, run a Get-ChildItem command to get the PowerShell.exe file in the $pshome directory, and then pipe the file to the Format-List cmdlet to list all of the properties of the file.</source>
          <target state="translated">Para probar el cambio, ejecutar un comando Get-ChildItem para obtener el archivo PowerShell.exe en el directorio $pshome y, a continuación, canalice el archivo al cmdlet Format-List para enumerar todas las propiedades del archivo.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>As a result of the change, the Age property appears in the list.</source>
          <target state="translated">Como resultado del cambio, la propiedad Age aparece en la lista.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>get-childitem $pshome\PowerShell.exe | format-list -property *</source>
          <target state="translated">get-childitem $pshome\PowerShell.exe | formato de lista-propiedad *</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>PSPath            : Microsoft.PowerShell.Core\FileSystem::C:\WINDOWS... PSParentPath      : Microsoft.PowerShell.Core\FileSystem::C:\WINDOWS... PSChildName       : PowerShell.exe PSDrive           : C PSProvider        : Microsoft.PowerShell.Core\FileSystem PSIsContainer     : False Age               : 16 VersionInfo       : File:             C:\WINDOWS\system32\WindowsPow... InternalName:     POWERSHELL OriginalFilename: PowerShell.EXE</source>
          <target state="translated">PSPath: Microsoft.PowerShell.Core\FileSystem::C:\WINDOWS... PSParentPath: Microsoft.PowerShell.Core\FileSystem::C:\WINDOWS... PSChildName: PowerShell.exe PSDrive: C PSProvider: Microsoft.PowerShell.Core\FileSystem PSIsContainer: False edad: VersionInfo 16: archivo: C:\WINDOWS\system32\WindowsPow... Nombreinterno: Nombre archivo original POWERSHELL: PowerShell.EXE</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>...</source>
          <target state="translated">...</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>You can also display the Age property of the file by using the following command.</source>
          <target state="translated">También puede mostrar la propiedad Age del archivo mediante el comando siguiente.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>(get-childitem $pshome\PowerShell.exe).age</source>
          <target state="translated">(get-childitem $pshome\PowerShell.exe).age</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>16</source>
          <target state="translated">16</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>The XML in Types.ps1xml Files</source>
          <target state="translated">El XML en archivos Types.ps1xml</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;Types&gt;</ph> tag encloses all of the types that are defined in the file.</source>
          <target state="translated">La <ph id="ph1">&lt;Types&gt;</ph> etiqueta incluye todos los tipos que se definen en el archivo.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>There should be only one pair of <ph id="ph1">&lt;Types&gt;</ph> tags.</source>
          <target state="translated">Debe haber sólo un par de <ph id="ph1">&lt;Types&gt;</ph> etiquetas.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>Each .NET Framework type mentioned in the file should be represented by a pair of <ph id="ph1">&lt;Type&gt;</ph> tags.</source>
          <target state="translated">Cada tipo de .NET Framework mencionado en el archivo se debe representar con un par de <ph id="ph1">&lt;Type&gt;</ph> etiquetas.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>The type tags must contain the following tags:</source>
          <target state="translated">Las etiquetas de tipo deben contener las siguientes etiquetas:</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>: A pair of <ph id="ph1">&lt;Name&gt;</ph> tags that enclose the name of the affected .NET Framework type.</source>
          <target state="translated">: Un par de <ph id="ph1">&lt;Name&gt;</ph> etiquetas que incluya el nombre del tipo de .NET Framework afectado.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>: A pair of <ph id="ph1">&lt;Members&gt;</ph> tags that enclose the tags for the new properties and methods that are defined for the .NET Framework type.</source>
          <target state="translated">: Un par de <ph id="ph1">&lt;Members&gt;</ph> etiquetas que incluya las etiquetas de las nuevas propiedades y métodos que se definen para el tipo de .NET Framework.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>Any of the following member tags can be inside the <ph id="ph1">&lt;Members&gt;</ph> tags.</source>
          <target state="translated">Cualquiera de las siguientes etiquetas de miembro pueden ser dentro de la <ph id="ph1">&lt;Members&gt;</ph> etiquetas.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>: Defines a new name for an existing property.</source>
          <target state="translated">: Define un nombre nuevo para una propiedad existente.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;AliasProperty&gt;</ph> tag must have a pair of <ph id="ph2">&lt;Name&gt;</ph> tags that specify the name of the new property and a pair of <ph id="ph3">&lt;ReferencedMemberName&gt;</ph> tags that specify the existing property.</source>
          <target state="translated">La <ph id="ph1">&lt;AliasProperty&gt;</ph> etiqueta debe tener un par de <ph id="ph2">&lt;Name&gt;</ph> etiquetas que especifican el nombre de la nueva propiedad y un par de <ph id="ph3">&lt;ReferencedMemberName&gt;</ph> etiquetas que especifique la propiedad existente.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>For example, the Count alias property is an alias for the Length property of array objects.</source>
          <target state="translated">Por ejemplo, la propiedad de recuento de alias es un alias para la propiedad de longitud de los objetos de la matriz.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>System.Array<ph id="ph1">&lt;/Name&gt;
&lt;Members&gt;
&lt;AliasProperty&gt;
&lt;Name&gt;</ph>Count<ph id="ph2">&lt;/Name&gt;
&lt;ReferencedMemberName&gt;</ph>Length</source>
          <target state="translated">System.Array<ph id="ph1">&lt;/Name&gt;
&lt;Members&gt;
&lt;AliasProperty&gt;
&lt;Name&gt;</ph>recuento<ph id="ph2">&lt;/Name&gt;
&lt;ReferencedMemberName&gt;</ph>longitud</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>:  References a static method of a .NET Framework class.</source>
          <target state="translated">: Hace referencia a un método estático de una clase de .NET Framework.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;CodeMethod&gt;</ph> tag must have a pair of <ph id="ph2">&lt;Name&gt;</ph> tags that specify the name of the new method and a pair of <ph id="ph3">&lt;GetCodeReference&gt;</ph> tags that specify the code in which the method is defined.</source>
          <target state="translated">La <ph id="ph1">&lt;CodeMethod&gt;</ph> etiqueta debe tener un par de <ph id="ph2">&lt;Name&gt;</ph> etiquetas que especifican el nombre del nuevo método y un par de <ph id="ph3">&lt;GetCodeReference&gt;</ph> etiquetas que especifique el código en el que se define el método.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>For example, the Mode property of directories (System.IO.DirectoryInfo objects) is a code property defined in the Windows PowerShell FileSystem provider.</source>
          <target state="translated">Por ejemplo, la propiedad del modo de directorios (objetos System.IO.DirectoryInfo) es una propiedad de código definida en el proveedor FileSystem de Windows PowerShell.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>System.IO.DirectoryInfo<ph id="ph1">&lt;/Name&gt;
&lt;Members&gt;
&lt;CodeProperty&gt;
&lt;Name&gt;</ph>Mode<ph id="ph2">&lt;/Name&gt;
&lt;GetCodeReference&gt;
&lt;TypeName&gt;</ph>Microsoft.PowerShell.Commands.FileSystemProvider<ph id="ph3">&lt;/TypeName&gt;
&lt;MethodName&gt;</ph>Mode</source>
          <target state="translated">System.IO.DirectoryInfo<ph id="ph1">&lt;/Name&gt;
&lt;Members&gt;
&lt;CodeProperty&gt;
&lt;Name&gt;</ph>modo<ph id="ph2">&lt;/Name&gt;
&lt;GetCodeReference&gt;
&lt;TypeName&gt;</ph>Microsoft.PowerShell.Commands.FileSystemProvider<ph id="ph3">&lt;/TypeName&gt;
&lt;MethodName&gt;</ph>modo</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>: References a static method of a .NET Framework class.</source>
          <target state="translated">: Hace referencia a un método estático de una clase de .NET Framework.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;CodeProperty&gt;</ph> tag must have a pair of <ph id="ph2">&lt;Name&gt;</ph> tags that specify the name of the new property and a pair of <ph id="ph3">&lt;GetCodeReference&gt;</ph> tags that specify the code in which the property is defined.</source>
          <target state="translated">La <ph id="ph1">&lt;CodeProperty&gt;</ph> etiqueta debe tener un par de <ph id="ph2">&lt;Name&gt;</ph> etiquetas que especifican el nombre de la nueva propiedad y un par de <ph id="ph3">&lt;GetCodeReference&gt;</ph> etiquetas que especifique el código en el que se define la propiedad.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>For example, the Mode property of directories (System.IO.DirectoryInfo objects) is a code property defined in the Windows PowerShell FileSystem provider.</source>
          <target state="translated">Por ejemplo, la propiedad del modo de directorios (objetos System.IO.DirectoryInfo) es una propiedad de código definida en el proveedor FileSystem de Windows PowerShell.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>System.IO.DirectoryInfo<ph id="ph1">&lt;/Name&gt;
&lt;Members&gt;
&lt;CodeProperty&gt;
&lt;Name&gt;</ph>Mode<ph id="ph2">&lt;/Name&gt;
&lt;GetCodeReference&gt;
&lt;TypeName&gt;</ph>Microsoft.PowerShell.Commands.FileSystemProvider<ph id="ph3">&lt;/TypeName&gt;
&lt;MethodName&gt;</ph>Mode</source>
          <target state="translated">System.IO.DirectoryInfo<ph id="ph1">&lt;/Name&gt;
&lt;Members&gt;
&lt;CodeProperty&gt;
&lt;Name&gt;</ph>modo<ph id="ph2">&lt;/Name&gt;
&lt;GetCodeReference&gt;
&lt;TypeName&gt;</ph>Microsoft.PowerShell.Commands.FileSystemProvider<ph id="ph3">&lt;/TypeName&gt;
&lt;MethodName&gt;</ph>modo</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>: Defines a collection of members (properties and methods).</source>
          <target state="translated">: Define una colección de miembros (propiedades y métodos).</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;MemberSet&gt;</ph> tags appear within the primary <ph id="ph2">&lt;Members&gt;</ph> tags.</source>
          <target state="translated">El <ph id="ph1">&lt;MemberSet&gt;</ph> aparecen etiquetas en el principal <ph id="ph2">&lt;Members&gt;</ph> etiquetas.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>The tags must enclose a pair of <ph id="ph1">&lt;Name&gt;</ph> tags surrounding the name of the member set and a pair of secondary <ph id="ph2">&lt;Members&gt;</ph> tags that surround the members (properties and methods) in the set.</source>
          <target state="translated">Las etiquetas deben incluir un par de <ph id="ph1">&lt;Name&gt;</ph> etiquetas que rodean el nombre del conjunto de miembros y un par de base de datos secundaria <ph id="ph2">&lt;Members&gt;</ph> etiquetas que rodean los miembros (propiedades y métodos) en el conjunto.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>Any of the tags that create a property (such as <ph id="ph1">&lt;NoteProperty&gt;</ph> or <ph id="ph2">&lt;ScriptProperty&gt;</ph>) or a method (such as <ph id="ph3">&lt;Method&gt;</ph> or <ph id="ph4">&lt;ScriptMethod&gt;</ph>) can be members of the set.</source>
          <target state="translated">Cualquiera de las etiquetas que se creación una propiedad (como <ph id="ph1">&lt;NoteProperty&gt;</ph> o <ph id="ph2">&lt;ScriptProperty&gt;</ph>) o un método (como <ph id="ph3">&lt;Method&gt;</ph> o <ph id="ph4">&lt;ScriptMethod&gt;</ph>) pueden ser miembros del conjunto.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>In Types.ps1xml files, the <ph id="ph1">&lt;MemberSet&gt;</ph> tag is used to define the default views of the .NET Framework objects in Windows PowerShell.</source>
          <target state="translated">En los archivos Types.ps1xml, la <ph id="ph1">&lt;MemberSet&gt;</ph> etiqueta se utiliza para definir las vistas predeterminadas de los objetos de .NET Framework en Windows PowerShell.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>In this case, the name of the member set (the value within the <ph id="ph1">&lt;Name&gt;</ph> tags) is always "PsStandardMembers", and the names of the properties (the value of the <ph id="ph2">&lt;Name&gt;</ph> tag) are one of the following:</source>
          <target state="translated">En este caso, establezca el nombre del miembro (el valor dentro de la <ph id="ph1">&lt;Name&gt;</ph> etiquetas) siempre es "PsStandardMembers" y los nombres de las propiedades (el valor de la <ph id="ph2">&lt;Name&gt;</ph> etiqueta) son una de las siguientes acciones:</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>DefaultDisplayProperty: A single property of an object.</source>
          <target state="translated">DefaultDisplayProperty: Una sola propiedad de un objeto.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>DefaultDisplayPropertySet: One or more properties of an object.</source>
          <target state="translated">DefaultDisplayPropertySet: Una o más propiedades de un objeto.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>DefaultKeyPropertySet: One or more key properties of an object.</source>
          <target state="translated">DefaultKeyPropertySet: Uno o más propiedades de clave de un objeto.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>A key property identifies instances of property values, such as the ID number of items in a session history.</source>
          <target state="translated">Una propiedad clave identifica las instancias de los valores de propiedad, como el número de identificación de los elementos de historial de la sesión.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>For example, the following XML defines the default display of services (System.ServiceProcess.ServiceController objects) that are returned by the Get-Service cmdlet.</source>
          <target state="translated">Por ejemplo, el código XML siguiente define la visualización predeterminada de los servicios (System.ServiceProcess.ServiceController objetos) que se devuelven mediante el cmdlet Get-Service.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>It defines a member set named "PsStandardMembers" that consists of a default property set with the Status, Name, and DisplayName properties.</source>
          <target state="translated">Define un conjunto de miembros con el nombre "PsStandardMembers" que consta de una propiedad predeterminada que se establecen con las propiedades de estado, Name y DisplayName.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>System.ServiceProcess.ServiceController<ph id="ph1">&lt;/Name&gt;
&lt;Members&gt;
&lt;MemberSet&gt;
&lt;Name&gt;</ph>PSStandardMembers<ph id="ph2">&lt;/Name&gt;
&lt;Members&gt;
&lt;PropertySet&gt;
&lt;Name&gt;</ph>DefaultDisplayPropertySet<ph id="ph3">&lt;/Name&gt;
&lt;ReferencedProperties&gt;
&lt;Name&gt;</ph>Status<ph id="ph4">&lt;/Name&gt;
&lt;Name&gt;</ph>Name<ph id="ph5">&lt;/Name&gt;
&lt;Name&gt;</ph>DisplayName</source>
          <target state="translated">System.ServiceProcess.ServiceController<ph id="ph1">&lt;/Name&gt;
&lt;Members&gt;
&lt;MemberSet&gt;
&lt;Name&gt;</ph>PSStandardMembers<ph id="ph2">&lt;/Name&gt;
&lt;Members&gt;
&lt;PropertySet&gt;
&lt;Name&gt;</ph>DefaultDisplayPropertySet<ph id="ph3">&lt;/Name&gt;
&lt;ReferencedProperties&gt;
&lt;Name&gt;</ph>estado<ph id="ph4">&lt;/Name&gt;
&lt;Name&gt;</ph>nombre<ph id="ph5">&lt;/Name&gt;
&lt;Name&gt;</ph>DisplayName</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>: References a native method of the underlying object.</source>
          <target state="translated">: Hace referencia a un método nativo del objeto subyacente.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>: A collection of the methods of the object.</source>
          <target state="translated">: Una colección de los métodos del objeto.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>: Defines a property with a static value.</source>
          <target state="translated">: Define una propiedad con un valor estático.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;NoteProperty&gt;</ph> tag must have a pair of <ph id="ph2">&lt;Name&gt;</ph> tags that specify the name of the new property and a pair of <ph id="ph3">&lt;Value&gt;</ph> tags that specify the value of the property.</source>
          <target state="translated">La <ph id="ph1">&lt;NoteProperty&gt;</ph> etiqueta debe tener un par de <ph id="ph2">&lt;Name&gt;</ph> etiquetas que especifican el nombre de la nueva propiedad y un par de <ph id="ph3">&lt;Value&gt;</ph> etiquetas que especifican el valor de la propiedad.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>For example, the following XML creates a Status property for directories (System.IO.DirectoryInfo objects).</source>
          <target state="translated">Por ejemplo, el código XML siguiente crea una propiedad de estado para los directorios (System.IO.DirectoryInfo objetos).</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>The value of the Status property is always "Success".</source>
          <target state="translated">El valor de la propiedad Status siempre es "Correcto".</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>System.IO.DirectoryInfo<ph id="ph1">&lt;/Name&gt;
&lt;Members&gt;
&lt;NoteProperty&gt;
&lt;Name&gt;</ph>Status<ph id="ph2">&lt;/Name&gt;
&lt;Value&gt;</ph>Success</source>
          <target state="translated">System.IO.DirectoryInfo<ph id="ph1">&lt;/Name&gt;
&lt;Members&gt;
&lt;NoteProperty&gt;
&lt;Name&gt;</ph>estado<ph id="ph2">&lt;/Name&gt;
&lt;Value&gt;</ph>correcto</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>: Properties that take arguments and return a value.</source>
          <target state="translated">: Propiedades que toman argumentos y devuelven un valor.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>: A collection of the properties of the object.</source>
          <target state="translated">: Una colección de las propiedades del objeto.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>: A property of the base object.</source>
          <target state="translated">: Una propiedad del objeto base.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>: Defines a collection of properties of the object.</source>
          <target state="translated">: Define una colección de propiedades del objeto.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;PropertySet&gt;</ph> tag must have a pair of <ph id="ph2">&lt;Name&gt;</ph> tags that specify the name of the property set and a pair of <ph id="ph3">&lt;ReferencedProperty&gt;</ph> tags that specify the properties.</source>
          <target state="translated">La <ph id="ph1">&lt;PropertySet&gt;</ph> etiqueta debe tener un par de <ph id="ph2">&lt;Name&gt;</ph> etiquetas que especifican el nombre del conjunto de propiedades y un par de <ph id="ph3">&lt;ReferencedProperty&gt;</ph> etiquetas que especifican las propiedades.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source>The names of the properties are enclosed in <ph id="ph1">&lt;Name&gt;</ph> tag pairs.</source>
          <target state="translated">Los nombres de las propiedades se incluyen en <ph id="ph1">&lt;Name&gt;</ph> pares de etiqueta.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source>In Types.ps1xml, <ph id="ph1">&lt;PropertySet&gt;</ph> tags are used to define sets of properties for the default display of an object.</source>
          <target state="translated">En Types.ps1xml, <ph id="ph1">&lt;PropertySet&gt;</ph> etiquetas se usan para definir conjuntos de propiedades para la visualización predeterminada de un objeto.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source>You can identify the default displays by the value "PsStandardMembers" in the <ph id="ph1">&lt;Name&gt;</ph> tag of a <ph id="ph2">&lt;MemberSet&gt;</ph> tag.</source>
          <target state="translated">Puede identificar la muestra de forma predeterminada el valor "PsStandardMembers" en la <ph id="ph1">&lt;Name&gt;</ph> etiqueta de un <ph id="ph2">&lt;MemberSet&gt;</ph> etiqueta.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source>For example, the following XML creates a Status property for directories (System.IO.DirectoryInfo objects).</source>
          <target state="translated">Por ejemplo, el código XML siguiente crea una propiedad de estado para los directorios (System.IO.DirectoryInfo objetos).</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source>The value of the Status property is always "Success".</source>
          <target state="translated">El valor de la propiedad Status siempre es "Correcto".</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source>System.ServiceProcess.ServiceController<ph id="ph1">&lt;/Name&gt;
&lt;Members&gt;
&lt;MemberSet&gt;
&lt;Name&gt;</ph>PSStandardMembers<ph id="ph2">&lt;/Name&gt;
&lt;Members&gt;
&lt;PropertySet&gt;
&lt;Name&gt;</ph>DefaultDisplayPropertySet<ph id="ph3">&lt;/Name&gt;
&lt;ReferencedProperties&gt;
&lt;Name&gt;</ph>Status&lt;/Name <ph id="ph4">&lt;Name&gt;</ph>Name<ph id="ph5">&lt;/Name&gt;
&lt;Name&gt;</ph>DisplayName</source>
          <target state="translated">System.ServiceProcess.ServiceController<ph id="ph1">&lt;/Name&gt;
&lt;Members&gt;
&lt;MemberSet&gt;
&lt;Name&gt;</ph>PSStandardMembers<ph id="ph2">&lt;/Name&gt;
&lt;Members&gt;
&lt;PropertySet&gt;
&lt;Name&gt;</ph>DefaultDisplayPropertySet<ph id="ph3">&lt;/Name&gt;
&lt;ReferencedProperties&gt;
&lt;Name&gt;</ph>Estado &lt; /name <ph id="ph4">&lt;Name&gt;</ph>nombre<ph id="ph5">&lt;/Name&gt;
&lt;Name&gt;</ph>DisplayName</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve">
          <source>: Defines a method whose value is the output of a script.</source>
          <target state="translated">: Define un método cuyo valor es el resultado de una secuencia de comandos.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;ScriptMethod&gt;</ph> tag must have a pair of <ph id="ph2">&lt;Name&gt;</ph> tags that specify the name of the new method and a pair of <ph id="ph3">&lt;Script&gt;</ph> tags that enclose the script block that returns the method result.</source>
          <target state="translated">La <ph id="ph1">&lt;ScriptMethod&gt;</ph> etiqueta debe tener un par de <ph id="ph2">&lt;Name&gt;</ph> etiquetas que especifican el nombre del nuevo método y un par de <ph id="ph3">&lt;Script&gt;</ph> etiquetas que incluir el bloque de secuencia de comandos que devuelve el resultado del método.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source>For example, the ConvertToDateTime and ConvertFromDateTime methods of management objects (System.System.Management.ManagementObject) are script methods that use the ToDateTime and ToDmtfDateTime static methods of the System.Management.ManagementDateTimeConverter class.</source>
          <target state="translated">Por ejemplo, los métodos ConvertToDateTime y ConvertFromDateTime de objetos de administración (System.System.Management.ManagementObject) son métodos de secuencia de comandos que utilizan el ToDateTime y ToDmtfDateTime métodos estáticos de la clase System.Management.ManagementDateTimeConverter.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source>System.Management.ManagementObject<ph id="ph1">&lt;/Name&gt;
&lt;Members&gt;
&lt;ScriptMethod&gt;
&lt;Name&gt;</ph>ConvertToDateTime</source>
          <target state="translated">System.Management.ManagementObject<ph id="ph1">&lt;/Name&gt;
&lt;Members&gt;
&lt;ScriptMethod&gt;
&lt;Name&gt;</ph>ConvertToDateTime</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve">
          <source>ConvertFromDateTime<ph id="ph1">&lt;/Name&gt;
&lt;Script&gt;
[System.Management.ManagementDateTimeConverter]::ToDmtfDateTime($args[0])
&lt;/Script&gt;
&lt;/ScriptMethod&gt;
&lt;/Members&gt;
&lt;/Type&gt;

&lt;ScriptProperty&gt;</ph>: Defines a property whose value is the output of a script.</source>
          <target state="translated">ConvertFromDateTime<ph id="ph1">&lt;/Name&gt;
&lt;Script&gt;
[System.Management.ManagementDateTimeConverter]::ToDmtfDateTime($args[0])
&lt;/Script&gt;
&lt;/ScriptMethod&gt;
&lt;/Members&gt;
&lt;/Type&gt;

&lt;ScriptProperty&gt;</ph>: define una propiedad cuyo valor es el resultado de una secuencia de comandos.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;ScriptProperty&gt;</ph> tag must have a pair of <ph id="ph2">&lt;Name&gt;</ph> tags that specify the name of the new property and a pair of <ph id="ph3">&lt;GetScriptBlock&gt;</ph> tags that enclose the script block that returns the property value.</source>
          <target state="translated">La <ph id="ph1">&lt;ScriptProperty&gt;</ph> etiqueta debe tener un par de <ph id="ph2">&lt;Name&gt;</ph> etiquetas que especifican el nombre de la nueva propiedad y un par de <ph id="ph3">&lt;GetScriptBlock&gt;</ph> etiquetas que incluir el bloque de secuencia de comandos que devuelve el valor de propiedad.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve">
          <source>For example, the VersionInfo property of files (System.IO.FileInfo objects) is a script property that results from using the FullName property of the GetVersionInfo static method of System.Diagnostics.FileVersionInfo objects.</source>
          <target state="translated">Por ejemplo, la propiedad VersionInfo de archivos (objetos System.IO.FileInfo) es una propiedad de secuencia de comandos que resulta de usar la propiedad FullName del método estático GetVersionInfo de objetos System.Diagnostics.FileVersionInfo.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve">
          <source>System.IO.FileInfo<ph id="ph1">&lt;/Name&gt;
&lt;Members&gt;
&lt;ScriptProperty&gt;
&lt;Name&gt;</ph>VersionInfo</source>
          <target state="translated">System.IO.FileInfo<ph id="ph1">&lt;/Name&gt;
&lt;Members&gt;
&lt;ScriptProperty&gt;
&lt;Name&gt;</ph>VersionInfo</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve">
          <source>System.Diagnostics.FileVersionInfo</source>
          <target state="translated">System.Diagnostics.FileVersionInfo</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve">
          <source>For more information, see the Windows PowerShell Software Development Kit (SDK) in the MSDN (Microsoft Developer Network )library at http://go.microsoft.com/fwlink/?LinkId=144538.</source>
          <target state="translated">Para obtener más información, consulte el Kit de desarrollo de Software (SDK) de Windows PowerShell en la biblioteca MSDN (Microsoft Developer Network) en http://go.microsoft.com/fwlink/?LinkId=144538.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve">
          <source>Update-TypeData</source>
          <target state="translated">Update-TypeData</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve">
          <source>To load your Types.ps1xml files into a Windows PowerShell session, run the Update-TypeData cmdlet.</source>
          <target state="translated">Para cargar los archivos Types.ps1xml en una sesión de Windows PowerShell, ejecute el cmdlet Update-TypeData.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve">
          <source>If you want the types in your file to take precedence over types in the built-in Types.ps1xml file, add the PrependData parameter of Update-TypeData.</source>
          <target state="translated">Si desea que los tipos en el archivo tendrá prioridad sobre los tipos en el archivo Types.ps1xml integrado, agregue el parámetro PrependData de Update-TypeData.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve">
          <source>Update-TypeData affects only the current session.</source>
          <target state="translated">Update-TypeData afecta sólo a la sesión actual.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve">
          <source>To make the change to all future sessions, export the session, or add the Update-TypeData command to your Windows PowerShell profile.</source>
          <target state="translated">Para realizar el cambio en todas las sesiones futuras, exportar la sesión o agregue el comando Update-TypeData a su perfil de Windows PowerShell.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve">
          <source>Exceptions that occur in properties, or from adding properties to an Update-TypeData command, do not report errors to StdErr.</source>
          <target state="translated">Las excepciones que se producen en las propiedades o agregar propiedades a un comando Update-TypeData, no notifican errores a StdErr.</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve">
          <source>This is to suppress exceptions that would occur in many common types during formatting and outputting.</source>
          <target state="translated">Esto es para suprimir las excepciones que se producirían en muchos tipos comunes durante la aplicación del formato y la generación del resultado.</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve">
          <source>If you are getting .NET Framework properties, you can work around the suppression of exceptions by using method syntax instead, as shown in the following example:</source>
          <target state="translated">Si va a obtener las propiedades de .NET Framework, puede evitar la supresión de las excepciones utilizando la sintaxis de método en su lugar, como se muestra en el ejemplo siguiente:</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve">
          <source>"hello".get_Length()</source>
          <target state="translated">"hello".get_Length()</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve">
          <source>Note that method syntax can only be used with .NET Framework properties.</source>
          <target state="translated">Tenga en cuenta que la sintaxis de método solo puede utilizarse con las propiedades de .NET Framework.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve">
          <source>Properties that are added by running the Update-TypeData cmdlet cannot use method syntax.</source>
          <target state="translated">Las propiedades que se agregan al ejecutar el cmdlet Update-TypeData no pueden utilizar la sintaxis de método.</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve">
          <source>Signing a Types.ps1xml File</source>
          <target state="translated">Firmar un archivo Types.ps1xml</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve">
          <source>To protect users of your Types.ps1xml file, you can sign the file using a digital signature.</source>
          <target state="translated">Para proteger a los usuarios de su archivo Types.ps1xml, puede firmar el archivo con una firma digital.</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve">
          <source>For more information, see about_Signing.</source>
          <target state="translated">Para obtener más información, consulte about_Signing.</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve">
          <source>SEE ALSO</source>
          <target state="translated">VEA TAMBIÉN</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve">
          <source>about_Signing (http://go.microsoft.com/fwlink/?LinkID=113268) Copy-Item (http://go.microsoft.com/fwlink/?LinkID=113292) Copy-ItemProperty (http://go.microsoft.com/fwlink/?LinkID=113293) Get-Member (http://go.microsoft.com/fwlink/?LinkID=113322) Get-TypeData (http://go.microsoft.com/fwlink/?LinkID=217033) Remove-TypeData (http://go.microsoft.com/fwlink/?LinkID=217038) Update-TypeData (http://go.microsoft.com/fwlink/?LinkID=113421)</source>
          <target state="translated">about_Signing Copy-Item, Copy-ItemProperty Get-Member, Get-TypeData (http://go.microsoft.com/fwlink/?LinkID=217033) Remove-TypeData (http://go.microsoft.com/fwlink/?LinkID=217038) Update-TypeData (http://go.microsoft.com/fwlink/?LinkID=113421) (http://go.microsoft.com/fwlink/?LinkID=113322) (http://go.microsoft.com/fwlink/?LinkID=113293) (http://go.microsoft.com/fwlink/?LinkID=113292) (http://go.microsoft.com/fwlink/?LinkID=113268)</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>