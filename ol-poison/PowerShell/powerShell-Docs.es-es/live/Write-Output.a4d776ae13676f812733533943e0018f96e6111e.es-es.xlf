<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="es-es">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-1c394fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">3127617f8a2a4ebd5188dada4d5a6f149a6d9f70</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">reference\3.0\Microsoft.PowerShell.Utility\Write-Output.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions" />
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">2e1874c42b672a599d15d7b7fb3a4079980526d9</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">cdd73e9b041a47a4c9776af12e8c9a18f48665cb</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>powershell, cmdlet</source>
          <target state="translated">cmdlet de PowerShell</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Write-Output</source>
          <target state="translated">Write-Output</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Write-Output</source>
          <target state="translated">Write-Output</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>SYNOPSIS</source>
          <target state="translated">SINOPSIS</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Sends the specified objects to the next command in the pipeline.</source>
          <target state="translated">Envía los objetos especificados al siguiente comando en la canalización.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>If the command is the last command in the pipeline, the objects are displayed in the console.</source>
          <target state="translated">Si el comando es el último comando en la canalización, los objetos se muestran en la consola.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>SYNTAX</source>
          <target state="translated">SINTAXIS</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>DESCRIPTION</source>
          <target state="translated">DESCRIPCIÓN</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>The Write-Output cmdlet sends the specified object down the pipeline to the next command.</source>
          <target state="translated">El cmdlet Write-Output envía el objeto especificado a través de la canalización hasta el siguiente comando.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>If the command is the last command in the pipeline, the object is displayed in the console.</source>
          <target state="translated">Si el comando es el último comando en la canalización, el objeto se muestra en la consola.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Write-Output sends objects down the primary pipeline, also known as the "output stream" or the "success pipeline."</source>
          <target state="translated">Write-Output envía objetos a través de la canalización principal, también llamada "flujo de salida" o "canalización correcta".</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>To send error objects down the error pipeline, use Write-Error.</source>
          <target state="translated">Para enviar objetos de error a través de la canalización de error, use Write-Error.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>This cmdlet is typically used in scripts to display strings and other objects on the console.</source>
          <target state="translated">Este cmdlet se usa normalmente en scripts para mostrar cadenas y otros objetos en la consola.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>However, because the default behavior is to display the objects at the end of a pipeline, it is generally not necessary to use the cmdlet.</source>
          <target state="translated">Sin embargo, dado que es el comportamiento predeterminado es mostrar los objetos al final de una canalización, generalmente no es necesario usar el cmdlet.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>For example, "get-process | write-output" is equivalent to "get-process".</source>
          <target state="translated">Por ejemplo, "get-process | write-output" es equivalente a "get-process".</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>EXAMPLES</source>
          <target state="translated">EJEMPLOS</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>-------------------------- EXAMPLE 1 --------------------------</source>
          <target state="translated">-------------------------- EJEMPLO 1 --------------------------</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>These commands get objects representing the processes running on the computer and display the objects on the console.</source>
          <target state="translated">Estos comandos obtienen objetos que representan los procesos ejecutados en el equipo y muestran los objetos en la consola.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>-------------------------- EXAMPLE 2 --------------------------</source>
          <target state="translated">-------------------------- EXAMPLE 2 --------------------------</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>This command pipes the "test output" string to the Get-Member cmdlet, which displays the members of the String class, demonstrating that the string was passed along the pipeline.</source>
          <target state="translated">Este comando canaliza la cadena "test output" al cmdlet Get-Member, que muestra los miembros de la clase String, lo que demuestra que la cadena pasó a lo largo de la canalización.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>PARAMETERS</source>
          <target state="translated">PARÁMETROS</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>-InputObject</source>
          <target state="translated">-InputObject</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Specifies the objects to send down the pipeline.</source>
          <target state="translated">Especifica los objetos que se van a enviar a través de la canalización.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Enter a variable that contains the objects, or type a command or expression that gets the objects.</source>
          <target state="translated">Especifique una variable que contenga los objetos o escriba un comando o una expresión que obtenga los objetos.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>CommonParameters</source>
          <target state="translated">CommonParameters</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutVariable, -OutBuffer, -PipelineVariable, -Verbose, -WarningAction, and -WarningVariable.</source>
          <target state="translated">Este cmdlet admite los parámetros comunes:-Debug, - ErrorAction, - ErrorVariable, - InformationAction, - InformationVariable, - OutVariable,-OutBuffer, - PipelineVariable, - Verbose, - WarningAction y - WarningVariable.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>For more information, see about_CommonParameters (http://go.microsoft.com/fwlink/?LinkID=113216).</source>
          <target state="translated">Para obtener más información, consulte about_CommonParameters (http://go.microsoft.com/fwlink/?LinkID=113216).</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>INPUTS</source>
          <target state="translated">ENTRADAS</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>System.Management.Automation.PSObject</source>
          <target state="translated">System.Management.Automation.PSObject</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>You can pipe objects to Write-Output.</source>
          <target state="translated">Se pueden canalizar objetos a Write-Output.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>OUTPUTS</source>
          <target state="translated">SALIDAS</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>System.Management.Automation.PSObject</source>
          <target state="translated">System.Management.Automation.PSObject</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Write-Output returns the objects that are submitted as input.</source>
          <target state="translated">Write-Output devuelve los objetos que se envían como entrada.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>NOTES</source>
          <target state="translated">NOTAS</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>RELATED LINKS</source>
          <target state="translated">VÍNCULOS RELACIONADOS</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Tee-Object</source>
          <target state="translated">Tee-Object</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Write-Debug</source>
          <target state="translated">Write-Debug</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Write-Error</source>
          <target state="translated">Write-Error</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Write-Host</source>
          <target state="translated">Write-Host</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Write-Progress</source>
          <target state="translated">Write-Progress</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Write-Verbose</source>
          <target state="translated">Write-Verbose</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Write-Warning</source>
          <target state="translated">Write-Warning</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>