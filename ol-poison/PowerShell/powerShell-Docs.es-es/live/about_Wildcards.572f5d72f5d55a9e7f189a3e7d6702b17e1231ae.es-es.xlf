<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="es-es">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-1c394fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">be04321fef520aab1683c1e62c1c42c7a4180760</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">reference\4.0\Microsoft.PowerShell.Core\About\about_Wildcards.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions" />
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">0ec36ed01d8931ca5ef2dc872741d8878a4c3fc7</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">e5bcad9228269e82926b94e76cd21ac4a9518f8f</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>about_Wildcards</source>
          <target state="translated">about_Wildcards</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>powershell, cmdlet</source>
          <target state="translated">cmdlet de PowerShell</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>About Wildcards</source>
          <target state="translated">Acerca de caracteres comodín</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>about_Wildcards</source>
          <target state="translated">about_Wildcards</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>TOPIC</source>
          <target state="translated">TEMA</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>about_Wildcards</source>
          <target state="translated">about_Wildcards</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>SHORT DESCRIPTION</source>
          <target state="translated">DESCRIPCIÓN BREVE</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Describes how to use wildcard characters in Windows PowerShell.</source>
          <target state="translated">Describe cómo utilizar caracteres comodín en Windows PowerShell.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>LONG DESCRIPTION</source>
          <target state="translated">DESCRIPCIÓN LARGA</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Wildcard characters represent one or many characters.</source>
          <target state="translated">Caracteres comodín representan uno o varios caracteres.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>You can use them to create word patterns in commands.</source>
          <target state="translated">Puede usarlas para crear patrones de word en los comandos.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>For example, to get all the files in the C:\Techdocs directory that have a .ppt file name extension, type:</source>
          <target state="translated">Por ejemplo, para obtener todos los archivos en el directorio C:\Techdocs que tienen una extensión de nombre de archivo .ppt, escriba:</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Get-ChildItem c:\techdocs<ph id="ph1">\*</ph>.ppt</source>
          <target state="translated">Get-ChildItem c:\techdocs<ph id="ph1">\*</ph>.ppt</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>In this case, the asterisk (*) wildcard character represents any characters that appear before the .ppt file name extension.</source>
          <target state="translated">En este caso, el carácter comodín asterisco (*) representa los caracteres que aparecen antes de la extensión de nombre de archivo .ppt.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Windows PowerShell supports the following wildcard characters.</source>
          <target state="translated">Windows PowerShell admite los siguientes caracteres comodín.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Wildcard Description        Example  Match             No match</source>
          <target state="translated">Coincidencia de caracteres comodín descripción ejemplo coincide con n</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Matches zero or    aA, ag, Apple      banana more characters</source>
          <target state="translated">Coincide con cero o aA, ag, más caracteres manzana plátano</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>?</source>
          <target state="translated">?</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Matches exactly    ?n       an, in, on        ran one character in the specified position</source>
          <target state="translated">Coincide exactamente? n una, en, en ejecutarse un carácter en la posición especificada</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>[ ]      Matches a range    [a-l]ook book, cook, look  took of characters</source>
          <target state="translated">[] Coincide con un libro ook del intervalo [a-l], cook, aspecto tardó de caracteres</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>[ ]      Matches specified  [bc]ook  book, cook        hook characters</source>
          <target state="translated">[] Coincide con la especificada [bc] ook libro cook gancho caracteres</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>You can include multiple wildcard characters in the same word pattern.</source>
          <target state="translated">Puede incluir varios caracteres comodín en el mismo patrón de word.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>For example, to find text files whose names begin with the letters "a" through "l", type:</source>
          <target state="translated">Por ejemplo, para buscar archivos de texto cuyos nombres comienzan con las letras "a" a "l", escriba:</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Get-ChildItem c:\techdocs[a-l]*.txt</source>
          <target state="translated">Get-ChildItem c:\techdocs[a-l]*.txt</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Many cmdlets accept wildcard characters in parameter values.</source>
          <target state="translated">Muchos cmdlets aceptan caracteres comodín en los valores de parámetro.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>The Help topic for each cmdlet describes which parameters, if any, permit wildcard characters.</source>
          <target state="translated">El tema de ayuda para cada cmdlet describe qué parámetros si los hay, permiten caracteres comodín.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>For parameters in which wildcard characters are accepted, their use is case-insensitive.</source>
          <target state="translated">Para los parámetros de lo caracteres comodín se aceptan caracteres, su uso distingue mayúsculas de minúsculas.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>You can also use wildcard characters in commands and script blocks, such as to create a word pattern that represents property values.</source>
          <target state="translated">También puede utilizar caracteres comodín en los comandos y bloques de scripts, como para crear un patrón de word que representa los valores de propiedad.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>For example, the following command gets services in which the ServiceType property value includes "Interactive".</source>
          <target state="translated">Por ejemplo, el comando siguiente obtiene los servicios en la que el valor de la propiedad ServiceType incluye "Interactivo".</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Get-Service | Where-Object {$_.ServiceType -like "Interactive"}</source>
          <target state="translated">Get-Service | Where-Object {$_. ServiceType-como "Interactiva"}</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>In the following example, wildcard characters are used to find property values in the conditions of an If statement.</source>
          <target state="translated">En el ejemplo siguiente, se utilizan caracteres comodín para buscar valores de propiedad en las condiciones de If instrucción.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>In this command, if the Description of a restore point includes "PowerShell", the command adds the value of the CreationTime property of the restore point to a log file.</source>
          <target state="translated">En este comando, si la descripción de un punto de restauración incluye "PowerShell", el comando agrega el valor de la propiedad CreationTime de punto de restauración a un archivo de registro.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>$p = Get-ComputerRestorePoint foreach ($point in $p) {if ($point.description -like "PowerShell") {add-content -path C:\TechDocs\RestoreLog.txt "$($point.CreationTime)"}}</source>
          <target state="translated">$p = get-ComputerRestorePoint foreach ($point en $p) {si ($point.description-como "PowerShell") {agregar-content - path C:\TechDocs\RestoreLog.txt "$($point. CreationTime) "}}</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>SEE ALSO</source>
          <target state="translated">VEA TAMBIÉN</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>about_Language_Keywords about_If about_Script_Blocks</source>
          <target state="translated">about_Language_Keywords about_If about_Script_Blocks</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>