<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="es-es">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-56a7a5e" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">8a3ae5fdf5d70de999ca6b992efb14533408c305</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">dsc\configData.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions" />
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ec3ee6b6f223ac48e1c9aca1dc8d8b6d8c04cc15</xliffext:olskeletonhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Separating Configuration and Environment Data</source>
          <target state="translated">Separación de los datos de entorno y configuración</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>powershell,DSC</source>
          <target state="translated">powershell,DSC</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Separating Configuration and Environment Data</source>
          <target state="translated">Separación de los datos de entorno y configuración</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Applies To: Windows PowerShell 4.0, Windows PowerShell 5.0</source>
          <target state="translated">Se aplica a: Windows PowerShell 4.0, Windows PowerShell 5.0</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>In Windows PowerShell Desired State Configuration (DSC), it is possible to separate configuration data from the logic of your configuration.</source>
          <target state="translated">En la configuración de estado deseado (DSC) de Windows PowerShell, es posible separar los datos de configuración de la lógica de la configuración.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Another way to look at this is to consider the structural configuration (for example, a configuration might require that IIS be installed) as separate from the environmental configuration (that is, whether the situation is a test environment vs. a production one—the node names would be different, but the configuration applied to them would be the same).</source>
          <target state="translated">Otra manera de enfocar todo esto es considerar que la configuración estructural (por ejemplo, una configuración que podría requerir que IIS esté instalado) es independiente de la configuración del entorno (es decir, si la situación es un entorno de pruebas frente a uno de producción, los nombres de los nodos serían distintos, pero la configuración que se les aplicaría sería la misma).</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>This has the following advantages:</source>
          <target state="translated">Esto tiene las ventajas siguientes:</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>It allows you to reuse your configuration data for different resources, nodes, and configurations.</source>
          <target state="translated">Permite reutilizar los datos de configuración para los diferentes recursos, nodos y configuraciones.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Configuration logic is more reusable if it does not contain hard-coded data.</source>
          <target state="translated">La lógica de configuración es más reutilizable si no contiene datos codificados de forma rígida.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>This is similar to good scripting guidelines for functions.</source>
          <target state="translated">Esto es similar a unas buenas directrices de creación de scripts para funciones.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>If some of the data needs to change, you can make the changes in one location, thereby saving time and reducing errors.</source>
          <target state="translated">Si algunos de los datos deben cambiar, puede realizar los cambios en una ubicación, con lo que se ahorraría tiempo y se reducirían los errores.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Basic concepts and examples</source>
          <target state="translated">Conceptos básicos y ejemplos</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>To specify the environmental part of the configuration, DSC uses the <bpt id="p1">**</bpt>ConfigurationData<ept id="p1">**</ept> parameter, which is a hash table (or it can take a .psd1 file which contains the hash table).</source>
          <target state="translated">Para especificar la parte del entorno de la configuración, DSC utiliza el parámetro <bpt id="p1">**</bpt>ConfigurationData<ept id="p1">**</ept>, que es una tabla hash (o puede tomar un archivo .psd1 que contiene la tabla hash).</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>This hash table must have at least one key <bpt id="p1">**</bpt>AllNodes<ept id="p1">**</ept>, which has a structured value.</source>
          <target state="translated">Esta tabla hash debe tener al menos una clave <bpt id="p1">**</bpt>AllNodes<ept id="p1">**</ept>, que tiene un valor estructurado.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>For example:</source>
          <target state="translated">Por ejemplo:</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Note the AllNodes key, whose value is an array.</source>
          <target state="translated">Observe la clave AllNodes, cuyo valor es una matriz.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Each element of this array is also a hash table, which requires NodeName as a key:</source>
          <target state="translated">Cada elemento de esta matriz también es una tabla hash, que requiere NodeName como una clave:</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Each hash table entry in AllNodes corresponds to configuration data to a node in the configuration.</source>
          <target state="translated">Cada entrada de la tabla hash de AllNodes corresponde a los datos de configuración de un nodo de la configuración.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>In addition to the required NodeName key, you can add other keys to the hash table as well, for example:</source>
          <target state="translated">Además de la clave NodeName necesaria, puede agregar otras claves a la tabla hash; por ejemplo:</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>DSC offers three special variables to use in the configuration script:</source>
          <target state="translated">DSC ofrece tres variables especiales para usarlas en el script de configuración:</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>$AllNodes<ept id="p1">**</ept>: Refers to all of the nodes.</source>
          <target state="translated"><bpt id="p1">**</bpt>$AllNodes<ept id="p1">**</ept>: hace referencia a todos los nodos.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>You can use filtering with <bpt id="p1">**</bpt>.Where()<ept id="p1">**</ept> and <bpt id="p2">**</bpt>.ForEach()<ept id="p2">**</ept>, so instead of hard-coding node names to select particular nodes for action, you could write something like this to select VM-1 and VM-3 in the above example:</source>
          <target state="translated">Puede usar el filtrado <bpt id="p1">**</bpt>.Where()<ept id="p1">**</ept> y <bpt id="p2">**</bpt>.ForEach()<ept id="p2">**</ept>, de forma que en lugar de codificar de forma rígida los nombres de nodos para seleccionar nodos concretos para la acción, podría escribir algo parecido a esto para seleccionar VM-1 y VM-3 en el ejemplo anterior:</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>$Node<ept id="p1">**</ept>: Once the set of nodes is filtered, you can use $Node to refer to the particular entry.</source>
          <target state="translated"><bpt id="p1">**</bpt>$Node<ept id="p1">**</ept>: cuando se filtra el conjunto de nodos, puede usar $Node para hacer referencia a la entrada determinada.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>For example:</source>
          <target state="translated">Por ejemplo:</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>To apply a property to all nodes, you can set NodeName = “*”.</source>
          <target state="translated">Para aplicar una propiedad a todos los nodos, puede establecer NodeName = "*".</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>For example, to give every node the LogPath property, you could do this:</source>
          <target state="translated">Por ejemplo, para aplicar a todos los nodos la propiedad LogPath, se podría hacer lo siguiente:</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>$ConfigurationData<ept id="p1">**</ept>: You can use this variable inside a configuration to access the configuration data hash table passed as a parameter.</source>
          <target state="translated"><bpt id="p1">**</bpt>$ConfigurationData<ept id="p1">**</ept>: puede usar esta variable dentro de una configuración para acceder a la tabla hash de los datos de configuración pasada como un parámetro.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>For example:</source>
          <target state="translated">Por ejemplo:</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>You can find a full example included in the <bpt id="p1">[</bpt>xWebAdministration module<ept id="p1">](https://powershellgallery.com/packages/xWebAdministration)</ept>.</source>
          <target state="translated">Puede encontrar un ejemplo completo incluido en el <bpt id="p1">[</bpt>módulo xWebAdministration<ept id="p1">](https://powershellgallery.com/packages/xWebAdministration)</ept>.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>