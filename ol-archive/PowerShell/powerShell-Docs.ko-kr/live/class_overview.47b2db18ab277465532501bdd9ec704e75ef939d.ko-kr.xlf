<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ko-kr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-56a7a5e" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">3010b1ce497d8a5e45ada003587d9e104eddd8b1</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">wmf\5.0\class_overview.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions" />
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">c9e180190d0e5b3fa853883744f88bc4b3bf525a</xliffext:olskeletonhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Creating Custom Types using PowerShell Classes</source>
          <target state="translated">PowerShell 클래스를 사용하여 사용자 지정 형식 만들기</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>We’ve improved the PowerShell language for defining classes and other user-defined types by using formal syntax and semantics that are similar to other object-oriented programming languages.</source>
          <target state="translated">다른 개체 지향 프로그래밍 언어와 유사한 의미 체계 및 정식 구문을 사용하여 클래스 및 기타 사용자 정의 형식을 정의하는 PowerShell 언어를 개선했습니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>The goal is to enable developers and IT professionals to embrace PowerShell for a wider range of use cases, simplify development of PowerShell artifacts (such as DSC resources), and accelerate coverage of management surfaces.</source>
          <target state="translated">목표는 개발자 및 IT 전문가가 보다 광범위한 사용 사례에 PowerShell을 적용하고, PowerShell 아티팩트(예: DSC 리소스)의 개발을 간소화하며, 관리 화면의 적용을 가속화할 수 있도록 하는 것입니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Supported scenarios in this release</source>
          <target state="translated">이 릴리스에서 지원되는 시나리오</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Define DSC resources and their associated types by using the PowerShell language</source>
          <target state="translated">PowerShell 언어를 사용하여 DSC 리소스 및 관련 형식 정의</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Define custom types in PowerShell by using familiar object-oriented programming constructs, such as classes, properties, methods, etc.</source>
          <target state="translated">클래스, 속성, 메서드 등 친숙한 개체 지향 프로그래밍 구문을 사용하여 PowerShell에서 사용자 지정 형식 정의</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Inheritance support with class in PowerShell and class base DSC resource</source>
          <target state="translated">PowerShell 및 클래스 기본 DSC 리소스에서 클래스로 상속 지원</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Debug types by using the PowerShell language</source>
          <target state="translated">PowerShell 언어를 사용하여 형식 디버그</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Generate and handle exceptions by using formal mechanisms, and at the right level</source>
          <target state="translated">적절한 수준에서 정식 메커니즘을 사용하여 예외 생성 및 처리</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>