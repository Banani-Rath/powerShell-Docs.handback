<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ko-kr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-56a7a5e" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">e1922008a92f00c9ddab28598735839c25219d24</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">dsc\debugResource.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions" />
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">076b4f2e8f232c31b15d4e5d3f8befab3b13cb98</xliffext:olskeletonhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Debugging DSC resources</source>
          <target state="translated">DSC 리소스 디버그</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>powershell,DSC</source>
          <target state="translated">powershell,DSC</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Debugging DSC resources</source>
          <target state="translated">DSC 리소스 디버그</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Applies To: Windows PowerShell 5.0</source>
          <target state="translated">적용 대상: Windows PowerShell 5.0</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>In PowerShell 5.0, a new feature was introduced in Desired State Configuraiton (DSC) that allows you to debug a DSC resource as a configuration is being applied.</source>
          <target state="translated">PowerShell 5.0에서는 구성이 적용됨에 따라 DSC 리소스를 디버그할 수 있도록 해주는 새로운 기능이 DSC(필요한 상태 구성)에 도입되었습니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Enabling DSC debugging</source>
          <target state="translated">DSC 디버그 사용</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Before you can debug a resource, you have to enable debugging by calling the <bpt id="p1">[</bpt>Enable-DscDebug<ept id="p1">](https://technet.microsoft.com/en-us/library/mt517870.aspx)</ept> cmdlet.</source>
          <target state="translated">리소스를 디버그할 수 있으려면 먼저, <bpt id="p1">[</bpt>Enable-DscDebug<ept id="p1">](https://technet.microsoft.com/en-us/library/mt517870.aspx)</ept> cmdlet을 호출하여 디버그할 수 있도록 해야 합니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>This cmdlet takes a mandatory parameter, <bpt id="p1">**</bpt>BreakAll<ept id="p1">**</ept>.</source>
          <target state="translated">이 cmdlet은 필수 매개 변수인 <bpt id="p1">**</bpt>BreakAll<ept id="p1">**</ept>을 사용합니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>You can verify that debugging has been enabled by looking at the result of a call to <bpt id="p1">[</bpt>Get-DscLocalConfigurationManager<ept id="p1">](https://technet.microsoft.com/en-us/library/dn407378.aspx)</ept>.</source>
          <target state="translated"><bpt id="p1">[</bpt>Get-DscLocalConfigurationManager<ept id="p1">](https://technet.microsoft.com/en-us/library/dn407378.aspx)</ept>를 호출한 결과를 보면 디버그할 수 있도록 되어 있는지 확인할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The following PowerShell output shows the result of enabling debugging:</source>
          <target state="translated">다음의 PowerShell 출력은 디버그 사용의 결과를 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Starting a configuration with debug enabled</source>
          <target state="translated">디버그를 사용하도록 설정된 구성 시작</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>To debug a DSC resource, you start a configuration that calls that resource.</source>
          <target state="translated">DSC 리소스를 디버그하려면 해당 리소스를 호출하는 구성을 시작합니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>For this example, we'll look at a simple configuration that calls the <bpt id="p1">[</bpt>WindowsFeature<ept id="p1">](windowsfeatureResource.md)</ept> resource to ensure that the "WindowsPowerShellWebAccess" feature is installed:</source>
          <target state="translated">예를 들어 <bpt id="p1">[</bpt>WindowsFeature<ept id="p1">](windowsfeatureResource.md)</ept>를 호출하여 "WindowsPowerShellWebAccess" 기능이 설치되어 있는지 확인하는 간단한 구성을 살펴보겠습니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>After compiling the configuration, start it by calling <bpt id="p1">[</bpt>Start-DscConfiguration<ept id="p1">](https://technet.microsoft.com/en-us/library/dn521623.aspx)</ept>.</source>
          <target state="translated">구성을 컴파일한 후에는 <bpt id="p1">[</bpt>Start-DscConfiguration<ept id="p1">](https://technet.microsoft.com/en-us/library/dn521623.aspx)</ept>을 호출하여 구성을 시작합니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>The configuration will stop when the Local Configuration Manager (LCM) calls into the first resource in the configuration.</source>
          <target state="translated">이 구성은 LCM(로컬 구성 관리자)이 구성의 첫 번째 리소스를 호출하면 중지됩니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>If you use the <ph id="ph1">`-Verbose`</ph> and <ph id="ph2">`-Wait`</ph> parameters, the output displays the lines you need to enter to start debugging.</source>
          <target state="translated"><ph id="ph1">`-Verbose`</ph> 및 <ph id="ph2">`-Wait`</ph> 매개 변수를 사용하는 경우, 출력에 디버그를 시작하려면 입력해야 하는 줄이 표시됩니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>At this point, the LCM has called the resource, and come to the first break point.</source>
          <target state="translated">이 시점에서 LCM은 리소스를 호출하고 첫 번째 중단점으로 이동했습니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>The last three lines in the output show you how to attach to the process and start debugging the resource script.</source>
          <target state="translated">출력의 마지막 세 줄에는 프로세스에 연결하여 리소스 스크립트의 디버그를 시작하는 방법이 나옵니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Debugging the resource script</source>
          <target state="translated">리소스 스크립트 디버그</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Start a new instance of the PowerShell ISE.</source>
          <target state="translated">PowerShell ISE의 새 인스턴스를 시작합니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>In the console pane, enter the last three lines of output from the <ph id="ph1">`Start-DscConfiguration`</ph> output as commands, replacing <ph id="ph2">`&lt;credentials&gt;`</ph> with valid user credentials.</source>
          <target state="translated">콘솔 창에서 <ph id="ph1">`Start-DscConfiguration`</ph> 출력으로부터 나온 결과의 마지막 세 줄을 명령으로 입력하여 <ph id="ph2">`&lt;credentials&gt;`</ph>를 올바른 사용자 자격 증명으로 바꿉니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>You should now see a prompt that looks similar to:</source>
          <target state="translated">이제 다음과 유사한 프롬프트가 표시됩니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>The resource script will open in the script pane, and the debugger is stopped at the first line of the <bpt id="p1">**</bpt>Test-TargetResource<ept id="p1">**</ept> function (the <bpt id="p2">**</bpt>Test()<ept id="p2">**</ept> method of a class-based resource).</source>
          <target state="translated">리소스 스크립트가 스크립트 창에 열리고 디버거가 <bpt id="p1">**</bpt>Test-TargetResource<ept id="p1">**</ept> 함수(클래스 기반 리소스의 <bpt id="p2">**</bpt>Test()<ept id="p2">**</ept> 메서드)의 첫째 줄에서 중지됩니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Now you can use the debug commands in the ISE to step through the resource script, look at variable values, view the call stack, and so on.</source>
          <target state="translated">이제 ISE에서 디버그 명령을 사용하여 리소스 스크립트 단계별 실행, 변수 값 확인, 호출 스택 보기 등을 할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>For information about debugging in the PowerShell ISE, see <bpt id="p1">[</bpt>How to Debug Scripts in Windows PowerShell ISE<ept id="p1">](https://technet.microsoft.com/en-us/library/dd819480.aspx)</ept>.</source>
          <target state="translated">PowerShell ISE에서 디버그하는 방법에 대한 자세한 내용은 <bpt id="p1">[</bpt>How to Debug Scripts in Windows PowerShell ISE(Windows PowerShell ISE에서 스크립트를 디버그하는 방법)<ept id="p1">](https://technet.microsoft.com/en-us/library/dd819480.aspx)</ept>를 참조하세요.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Remember that every line in the resource script (or class) is set as a break point.</source>
          <target state="translated">리소스 스크립트 (또는 클래스)의 모든 줄은 중단점으로 설정된다는 점을 기억하세요.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Disabling DSC debugging</source>
          <target state="translated">DSC 디버그 사용 안 함</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>After calling <bpt id="p1">[</bpt>Enable-DscDebug<ept id="p1">](https://technet.microsoft.com/en-us/library/mt517870.aspx)</ept>, all calls to <bpt id="p2">[</bpt>Start-DscConfiguration<ept id="p2">](https://technet.microsoft.com/en-us/library/dn521623.aspx)</ept> will result in the configuration breaking into the debugger.</source>
          <target state="translated"><bpt id="p1">[</bpt>Enable-DscDebug<ept id="p1">](https://technet.microsoft.com/en-us/library/mt517870.aspx)</ept>를 호출한 후 <bpt id="p2">[</bpt>Start-DscConfiguration<ept id="p2">](https://technet.microsoft.com/en-us/library/dn521623.aspx)</ept>을 호출하면 항상 구성으로 인해 디버거가 중단됩니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>To allow configurations to run normally, you must disable debugging by calling the <bpt id="p1">[</bpt>Disable-DscDebug<ept id="p1">](https://technet.microsoft.com/en-us/library/mt517872.aspx)</ept> cmdlet.</source>
          <target state="translated">구성이 정상적으로 실행되도록 하려면 <bpt id="p1">[</bpt>Disable-DscDebug<ept id="p1">](https://technet.microsoft.com/en-us/library/mt517872.aspx)</ept> cmdlet을 호출하여 디버깅을 사용하지 않도록 설정해야 합니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Note:<ept id="p1">**</ept> Rebooting does not change the debug state of the LCM.</source>
          <target state="translated"><bpt id="p1">**</bpt>참고:<ept id="p1">**</ept> 재부팅해도 LCM의 디버그 상태가 변경되지 않습니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>If debugging is enabled, starting a configuration will still break into the debugger after a reboot.</source>
          <target state="translated">디버깅을 사용하도록 설정하는 경우 재부팅 후 구성을 시작하면 여전히 디버거가 중단됩니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>See Also</source>
          <target state="translated">참고 항목</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Writing a custom DSC resource with MOF</source>
          <target state="translated">MOF를 사용하여 사용자 지정 DSC 리소스 작성</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Writing a custom DSC resource with PowerShell classes</source>
          <target state="translated">PowerShell 클래스를 사용하여 사용자 지정 DSC 리소스 작성</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>