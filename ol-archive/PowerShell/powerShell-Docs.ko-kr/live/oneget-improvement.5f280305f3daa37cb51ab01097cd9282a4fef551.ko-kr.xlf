<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ko-kr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-56a7a5e" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">bb1129e6aa20b64e94ddb6d7b7cf7b51b1df9ca3</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">wmf\5.1\features-scenarios-cache\oneget-improvement.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions" />
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f9766eca51ea294632e1417294f8f5dd49d133f0</xliffext:olskeletonhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>PackageManagement (aka.</source>
          <target state="translated">향상된 PackageManagement(OneGet이라고도</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>OneGet) Improvements</source>
          <target state="translated">함)</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Note: provide a proposed descriptive title and a brief description</source>
          <target state="translated">참고: 제안된 설명이 포함된 제목과 간단한 설명을 제공합니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>PackageManagement (aka.</source>
          <target state="translated">향상된 PackageManagement(OneGet이라고도</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>OneGet) Improvements</source>
          <target state="translated">함)</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>The following are the fixes made in the WMF 5.1 to address some of the user experience gaps in the WMF 5.0 release.</source>
          <target state="translated">다음은 WMF 5.0의 일부 사용자 환경 차이를 해결하기 위해 WMF 5.1에서 만든 수정입니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>1 <bpt id="p1">**</bpt>Version Alias<ept id="p1">**</ept></source>
          <target state="translated">1 <bpt id="p1">**</bpt>버전 별칭<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Scenario<ept id="p1">**</ept>: Assuming you have version 1.0 and 2.0 of a package, P1, installed on your system, and now you want to uninstall version 1.0, so you run "uninstall-package -name P1 -version 1.0".</source>
          <target state="translated"><bpt id="p1">**</bpt>시나리오<ept id="p1">**</ept>: 시스템에 P1 패키지의 버전 1.0 및 2.0이 설치되어 있고 이제 버전 1.0을 제거하려고 "uninstall-package -name P1 -version 1.0"을 실행한다고 가정합니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>You expect version 1.0 to be uninstalled after running the cmdlet.</source>
          <target state="translated">이 cmdlet을 실행하면 버전 1.0이 제거되어야 합니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>However the result is that version 2.0 gets uninstalled.</source>
          <target state="translated">그러나 결과로 버전 2.0이 제거됩니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>The cause of the issue is that the "-version" parameter is an alias of the "-minimumversion" parameter.</source>
          <target state="translated">이 문제의 원인은 "-version" 매개 변수가 "-minimumversion" 매개 변수의 별칭이기 때문입니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>When OneGet is looking for a qualitied package with the minimum version of 1.0, it returns the latest version.</source>
          <target state="translated">OneGet에서 최소 버전이 1.0인 정규화된 패키지를 찾을 경우 최신 버전을 반환합니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>This behavior is expected under normal cases because finding the latest version is what most people want.</source>
          <target state="translated">대부분의 사용자는 최신 버전을 찾기 원하므로 일반적인 경우 이 동작이 필요합니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>However, it should not apply to the uninstall-package case.</source>
          <target state="translated">그러나 uninstall-package 사례에는 적용하지 않아야 합니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Solution<ept id="p1">**</ept>:removed -version alias entirely in OneGet and PowerShellGet.</source>
          <target state="translated"><bpt id="p1">**</bpt>해결 방법<ept id="p1">**</ept>: OneGet 및 PowerShellGet에서 -version 별칭을 완전히 제거했습니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>2 <bpt id="p1">**</bpt>Multiple Prompts for Bootstrapping NuGet Provider<ept id="p1">**</ept></source>
          <target state="translated">2 <bpt id="p1">**</bpt>NuGet 공급자를 부트스트래핑할지 묻는 메시지 여러 번 표시<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Scenario<ept id="p1">**</ept>: When you run Find-Module or install-module or other OneGet cmdlets on your machine for the first time, OneGet is trying to bootstrap the NuGet provider.</source>
          <target state="translated"><bpt id="p1">**</bpt>시나리오<ept id="p1">**</ept>: 컴퓨터에서 Find-Module, install-module 또는 기타 OneGet cmdlet을 처음으로 실행할 경우 OneGet에서 NuGet 공급자를 부트스트래핑하려고 합니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>That's because the PowershellGet provider also uses the NuGet provider to download PowerShell modules.</source>
          <target state="translated">PowershellGet 공급자도 NuGet 공급자를 사용하여 PowerShell 모듈을 다운로드하기 때문입니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>OneGet then prompts the user for permission to install the NuGet provider.</source>
          <target state="translated">그런 다음 OneGet에서는 NuGet 공급자 설치를 허용할지 묻는 메시지를 표시합니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>After the user selects "yes" for the bootstrapping, the latest version of the NuGet provider will be installed.</source>
          <target state="translated">사용자가 부트스트래핑에 대해 “예"를 선택하면 NuGet 공급자의 최신 버전이 설치됩니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>However there is a case when you have an old version of NuGet provider installed on your machine, the older version of NuGet sometimes gets loaded first into the PowerShell session(that's the race condition in OneGet).</source>
          <target state="translated">그러나 컴퓨터에 이전 버전의 NuGet 공급자가 설치된 경우 이전 버전의 NuGet이 PowerShell 세션에 먼저 로드되는 경우가 있습니다. 즉, OneGet에서 경합 상태가 발생합니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>However PowerShellGet requires the later version of Nuget provider to work, so PowerShellGet asks the OneGet for bootstrapping the NuGet provider again.</source>
          <target state="translated">그러나 PowerShellGet이 작동하려면 최신 버전의 NuGet 공급자가 필요하므로 PowerShellGet에서는 OneGet에 Nuget 공급자를 다시 부트스트래핑하도록 요청합니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>That's why you see the mulitple prompts for bootstrapping the NuGet provider.</source>
          <target state="translated">이 때문에 NuGet 공급자를 부트스트래핑하라는 메시지가 여러 번 표시될 수 있습니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Solution<ept id="p1">**</ept>: OneGet now loads the latest version of the NuGet provider to avoid multiple prompts for bootstrapping the NuGet provider.</source>
          <target state="translated"><bpt id="p1">**</bpt>해결 방법<ept id="p1">**</ept>: 이제 OneGet에서는 NuGet 공급자를 부트스트래핑하라는 메시지가 여러 번 표시되지 않도록 최신 버전의 NuGet 공급자를 로드합니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>A workaround also exists, i.e. manually delete the old version of the NuGet provider (NuGet-Anycpu.exe) if exists from $env:ProgramFiles\PackageManagement\ProviderAssemblies $env:LOCALAPPDATA\PackageManagement\ProviderAssemblies</source>
          <target state="translated">$env:ProgramFiles\PackageManagement\ProviderAssemblies 또는 $env:LOCALAPPDATA\PackageManagement\ProviderAssemblies에 있는 경우 NuGet 공급자(NuGet-Anycpu.exe)의 이전 버전을 수동으로 삭제하는 방법도 있습니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>3 <bpt id="p1">**</bpt>Machine with Intranet only<ept id="p1">**</ept></source>
          <target state="translated">3 <bpt id="p1">**</bpt>인트라넷만 사용하는 컴퓨터<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Scenario<ept id="p1">**</ept>: For the enterprise scenario, people are working under an environment where there is no internet access but Intranet only.</source>
          <target state="translated"><bpt id="p1">**</bpt>시나리오<ept id="p1">**</ept>: 기업 시나리오로 사용자가 인터넷에 연결되어 있지 않고 인트라넷만 있는 환경에서 작업하는 사례가 있습니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>OneGet did not support this case in WMF 5.0.</source>
          <target state="translated">WMF 5.0에서 OneGet은 이 사례를 지원하지 않습니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Solution<ept id="p1">**</ept>:</source>
          <target state="translated"><bpt id="p1">**</bpt>해결 방법<ept id="p1">**</ept>:</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>You can download the NuGet provider on another machine with Internet connection by using the command "Install-PackageProvider -Name NuGet".</source>
          <target state="translated">인터넷에 연결된 다른 컴퓨터에서 "Install-PackageProvider -Name NuGet" 명령으로 NuGet 공급자를 다운로드할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Find the NuGet provider you just installed under either  $env:ProgramFiles\PackageManagement\ProviderAssemblies\nuget  or  $env:LOCALAPPDATA\PackageManagement\ProviderAssemblies\nuget.</source>
          <target state="translated">$env:ProgramFiles\PackageManagement\ProviderAssemblies\nuget 또는 $env:LOCALAPPDATA\PackageManagement\ProviderAssemblies\nuget에서 방금 설치한 NuGet 공급자를 찾습니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Copy the binaries over to a folder or network share location that your machine (the one without Internet) have access too and install NuGet provider with "Install-PackageProvider NuGet -Source <ph id="ph1">&lt;Path to folder&gt;</ph>".</source>
          <target state="translated">이 이진 파일을 컴퓨터(인터넷에 연결되지 않은 컴퓨터)에서 액세스할 수 있는 폴더 또는 네트워크 공유 위치에 복사하고 "Install-PackageProvider NuGet -Source <ph id="ph1">&lt;Path to folder&gt;</ph>"로 NuGet 공급자를 설치합니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>4 <bpt id="p1">**</bpt>Event log<ept id="p1">**</ept></source>
          <target state="translated">4 <bpt id="p1">**</bpt>이벤트 로그<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>When you install packages, you are changing the state of your machine.</source>
          <target state="translated">패키지를 설치하면 컴퓨터 상태가 변경됩니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>For diagnosis purpose, OneGet now logs events to the Windows event log for install, uninstall, and save-package.</source>
          <target state="translated">진단을 위해 이제 OneGet에서는 패키지 설치, 제거 및 저장에 대한 이벤트를 Windows 이벤트 로그에 기록합니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>The Event channel is the same as PowerShell, that is, Microsoft-Windows-PowerShell, Operational.</source>
          <target state="translated">이벤트 채널은 PowerShell과 동일한 Microsoft Windows PowerShell, Operational입니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>5 <bpt id="p1">**</bpt>Authentication Support<ept id="p1">**</ept> OneGet now supports finding and installing packages from a repository that requires basic authentication.</source>
          <target state="translated">5 <bpt id="p1">**</bpt>인증 지원<ept id="p1">**</ept> 이제 OneGet에서는 기본 인증이 필요한 리포지토리에서 패키지를 찾고 설치할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>You can supply your credential to the Find-Package and Install-Package cmdlet.</source>
          <target state="translated">Find-Package 및 Install-Package cmdlet에 자격 증명을 제공할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>For example:</source>
          <target state="translated">예:</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>6 <bpt id="p1">**</bpt>Using OneGet Behind a Proxy<ept id="p1">**</ept></source>
          <target state="translated">6 <bpt id="p1">**</bpt>프록시 뒤에서 OneGet 사용<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>OneGet now takes proxy parameters: -ProxyCredential and -Proxy.</source>
          <target state="translated">이제 OneGet에서 프록시 매개 변수 -ProxyCredential 및 -Proxy를 사용합니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Using these parameters, you can specify proxy url and proxy credential to OneGet cmdlets (by default, we use the system proxy settings).</source>
          <target state="translated">이러한 매개 변수를 사용하면 OneGet cmdlet에 프록시 URL과 프록시 자격 증명을 지정할 수 있습니다(기본적으로 시스템 프록시 설정 사용).</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>For example:</source>
          <target state="translated">예:</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>