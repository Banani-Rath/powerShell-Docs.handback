<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ko-kr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-22243b3" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f864850128f118704d7545b09110835ab1d51b8e</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">wmf\5.1\features-scenarios-cache\ps-engine-enhancements.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions" />
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>PowerShell Engine Enhancements</source>
          <target state="translated">PowerShell 엔진 향상된 기능</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>PowerShell Engine Enhancements</source>
          <target state="translated">PowerShell 엔진 향상된 기능</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>The following improvements to the core PowerShell engine have been implemented for PowerShell 5.1:</source>
          <target state="translated">PowerShell 5.1에서는 핵심 PowerShell 엔진에 대한 다음과 같은 개선 사항이 구현되었습니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Performance</source>
          <target state="translated">성능</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Performance has improved in some important areas:</source>
          <target state="translated">몇 가지 중요한 영역에서 성능이 향상되었습니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Startup</source>
          <target state="translated">시작</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Pipelining to cmdlets like ForEach-Object and Where-Object is approximately 50% faster</source>
          <target state="translated">ForEach-Object 및 Where-Object와 같은 cmdlet에 대한 파이프라이닝이 약 50% 더 빠릅니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Some example improvements (resuls may vary depending your your hardware):</source>
          <target state="translated">몇 가지 예제 개선 사항(하드웨어에 따라 결과가 달라질 수 있음):</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Scenario</source>
          <target state="translated">시나리오</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>5.0 Time (ms)</source>
          <target state="translated">5.0 시간(밀리초)</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>5.1 Time (ms)</source>
          <target state="translated">5.1 시간(밀리초)</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>900</source>
          <target state="translated">900</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>250</source>
          <target state="translated">250</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>First ever PowerShell run:</source>
          <target state="translated">처음 PowerShell 실행:</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>30000</source>
          <target state="translated">30000</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>13000</source>
          <target state="translated">13000</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Command analysis cache built:</source>
          <target state="translated">빌드된 명령 분석 캐시:</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>7000</source>
          <target state="translated">7000</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>520</source>
          <target state="translated">520</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>1400</source>
          <target state="translated">1400</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>750</source>
          <target state="translated">750</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>One change related to startup may impact some (unsupported) scenarios.</source>
          <target state="translated">시작과 관련된 한 가지 변경이 몇 가지(지원되지 않는) 시나리오에 영향을 줄 수 있습니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>PowerShell no longer reads the files <ph id="ph1">`$pshome\*.ps1xml`</ph> - these files have been converted to C# to avoid some file and cpu overhead of processing the xml files.</source>
          <target state="translated">PowerShell은 더 이상 <ph id="ph1">`$pshome\*.ps1xml`</ph> 파일을 읽지 않습니다. xml 파일 처리의 일부 파일 및 cpu 오버헤드를 방지하기 위해 이러한 파일이 C#으로 변환되었습니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>The files still exist to support V2 side-by-side, so if you change the file contents, it will not have any effect to V5, only V2.</source>
          <target state="translated">이러한 파일은 V2를 나란히 지원하기 위해 여전이 있으므로 파일 콘텐츠를 변경하는 경우 V5에는 아무 영향이 없고 V2에만 영향을 줍니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Note that changing the contents of these files was never a supported scenario.</source>
          <target state="translated">이러한 파일의 콘텐츠를 변경하는 시나리오는 지원되지 않았습니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Another visible change is how PowerShell caches the exported commands and other information for modules that are installed on a system.</source>
          <target state="translated">또 하나의 뚜렷한 변경 사항은 PowerShell이 시스템에 설치된 모듈에 대해 내보낸 명령 및 기타 정보를 캐시하는 방법입니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Previous, this cache was stored in the directory <ph id="ph1">`$env:LOCALAPPDATA\Microsoft\Windows\PowerShell\CommandAnalysis`</ph>.</source>
          <target state="translated">이전이 이 캐시는 <ph id="ph1">`$env:LOCALAPPDATA\Microsoft\Windows\PowerShell\CommandAnalysis`</ph> 디렉터리에 저장되었습니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>In WMF 5.1, the cache is a single file <ph id="ph1">`$env:LOCALAPPDATA\Microsoft\Windows\PowerShell\ModuleAnalysisCache`</ph>.</source>
          <target state="translated">WMF 5.1에서 이 캐시는 단일 파일 <ph id="ph1">`$env:LOCALAPPDATA\Microsoft\Windows\PowerShell\ModuleAnalysisCache`</ph>입니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>analysis_cache.md<ept id="p1">]()</ept> for more details.</source>
          <target state="translated">자세한 내용은 <bpt id="p1">[</bpt>analysis_cache.md<ept id="p1">]()</ept>를 참조하세요.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Starting with version 5.1, PowerShell is available in different editions which denote varying feature sets and platform compatibility.</source>
          <target state="translated">PowerShell은 버전 5.1부터 기능 집합 및 플랫폼 호환성이 다른 여러 버전으로 제공됩니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Bug Fixes</source>
          <target state="translated">버그 수정</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>The following notable bugs were fixed:</source>
          <target state="translated">다음과 같은 주목할 만한 버그가 수정되었습니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Module auto-discovery fully honors</source>
          <target state="translated">모듈 자동 검색에서 완전히 적용함</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Module auto-discovery (loading modules automatically without an explicit Import-Module when calling a command) was introduced in WMF3.</source>
          <target state="translated">모듈 자동 검색(명령을 호출할 때 명시적 Import-Module 없이 모듈을 자동으로 로드)이 WMF3에 도입되었습니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>When introduced, PowerShell checked for commands in <ph id="ph1">`$PSHome\Modules`</ph> before using <ph id="ph2">`$env:PSModulePath`</ph>.</source>
          <target state="translated">도입될 때 PowerShell에서는 <ph id="ph2">`$env:PSModulePath`</ph>를 사용하기 전에 <ph id="ph1">`$PSHome\Modules`</ph>에 있는 명령을 확인했습니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>WMF5.1 changes this behavior to honor <ph id="ph1">`$env:PSModulePath`</ph> completely.</source>
          <target state="translated">WMF5.1에서는 <ph id="ph1">`$env:PSModulePath`</ph>를 완전히 적용하도록 이 동작을 변경합니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>This allows for a user-authored module that defines commands provided by PowerShell (e.g. <ph id="ph1">`Get-ChildItem`</ph>) to be auto-loaded and correctly overriding the built-in command.</source>
          <target state="translated">따라서 PowerShell에서 제공하는 명령(예: <ph id="ph1">`Get-ChildItem`</ph>)을 정의하는 사용자 작업 모듈이 자동으로 로드되고 기본 제공 명령을 올바로 재정의할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>File redirection no longer hard-codes</source>
          <target state="translated">파일 리디렉션에서 더 이상 하드 코드하지 않음</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>In all previous versions of PowerShell, it was impossible to control the file encoding used by the file redirection operator, e.g. <ph id="ph1">`get-childitem &gt; out.txt`</ph> because PowerShell added <ph id="ph2">`-Encoding Unicode`</ph>.</source>
          <target state="translated">PowerShell의 모든 이전 버전에서는 PowerShell에서 <ph id="ph2">`-Encoding Unicode`</ph>를 추가했으므로 파일 리디렉션 연산자(예: <ph id="ph1">`get-childitem &gt; out.txt`</ph>)를 사용하여 파일 인코딩을 제어할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Starting with WMF 5.1, you can now change the file encoding of redirection by setting <ph id="ph1">`$PSDefaultParameterValues`</ph>, e.g.</source>
          <target state="translated">WMF 5.1부터 이제 <ph id="ph1">`$PSDefaultParameterValues`</ph>를 설정하여 리디렉션의 파일 인코딩을 변경할 수 있습니다. 예를 들면 다음과 같습니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Fixed a regression in accessing members of</source>
          <target state="translated">구성원 액세스에서의 회귀 수정</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>A regression introduced in WMF5 broke accessing members of <ph id="ph1">`System.Reflection.RuntimeType`</ph>, e.g. <ph id="ph2">`[int].ImplementedInterfaces`</ph>.</source>
          <target state="translated">WMF5에 도입된 회귀가 <ph id="ph1">`System.Reflection.RuntimeType`</ph>의 구성원(예: <ph id="ph2">`[int].ImplementedInterfaces`</ph>) 액세스를 중단시켰습니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>This bug has been fixed in WMF5.1.</source>
          <target state="translated">이 버그는 WMF5.1에서 수정되었습니다.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Fixed some issues with COM objects</source>
          <target state="translated">COM 개체의 몇 가지 문제 수정</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>WMF5 introduced a new COM binder for invoking methods on COM objects and accessing properties of COM objects.</source>
          <target state="translated">WMF5에서는 COM 개체에 대한 메서드를 호출하고 COM 개체의 속성에 액세스하는 새로운 COM 바인더를 도입했습니다.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>This new binder improved performance significantly but also introduced some bugs which have been fixed in WMF5.1.</source>
          <target state="translated">이 새 바인더는 성능을 크게 향상했지만 몇 가지 버그도 도입했습니다. 이 버그는 WMF5.1에서 수정되었습니다.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Argument conversions were not always performed correctly</source>
          <target state="translated">인수 변환이 올바로 수행되지 않을 수도 있었음</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>In the following example:</source>
          <target state="translated">다음 예제에서,</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>The SendKeys method expects a string, but PowerShell did not convert the char to a string, deferring the conversion to IDispatch::Invoke, which uses VariantChangeType to do the conversion, which in this example resulted in sending the keys '1', '7', and '3' instead of the expected Volume.Mute key.</source>
          <target state="translated">SendKeys 메서드에는 문자열이 필요하지만 PowerShell은 문자를 문자열로 변환하지 않고 IDispatch::Invoke에서 변환을 수행하게 했습니다. IDispatch::Invoke는 VariantChangeType을 사용하여 변환을 수행하므로 이 예에서는 Volume.Mute 키 대신 '1', '7' 및 '3' 키가 보내졌습니다.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Enumerable COM objects not always handled correctly</source>
          <target state="translated">열거 가능 COM 개체가 올바로 처리되지 않을 수도 있음</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>PowerShell normally enumerates most enumerable objects, but a regression introduced in WMF5 prevented the enumeration of COM objects that implement IEnumerable.</source>
          <target state="translated">PowerShell에서는 대부분의 열거 가능 개체를 정상적으로 열거하지만 WMF5에 도입된 회귀로 인해 IEnumerable을 구현하는 COM 개체가 열거되지 못했습니다.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>For example:</source>
          <target state="translated">예:</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>In the above example, WMF5 incorrectly wrote the Scripting.Dictionary to the pipeline instead of enumerating the key value pairs.</source>
          <target state="translated">위의 예에서 WMF5는 키 값 쌍을 열거하지 않고 Scripting.Dictionary를 파이프라인에 잘못 썼습니다.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>was not allowed inside classes</source>
          <target state="translated">는 클래스 내에서 허용되지 않았음</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>WMF5 introduced classes with validation of type literals used in classes.</source>
          <target state="translated">WMF5에서는 클래스에 사용된 형식 리터럴의 유효성을 검사하는 클래스를 도입했습니다.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>looks like a type literal but is not a true .Net type.</source>
          <target state="translated">는 형식 리터럴로 보이지만 실제 .Net 형식이 아닙니다.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>WMF5 incorrectly reported an error on <ph id="ph1">`[ordered]`</ph> inside a class:</source>
          <target state="translated">WMF5에서는 클래스 내에 있는 <ph id="ph1">`[ordered]`</ph>에 대해 오류를 잘못 보고했습니다.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Help on about topics with multiple versions does not work</source>
          <target state="translated">여러 버전이 있는 정보 항목에 대한 도움말이 작동하지 않음</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>Before WMF5.1, if you had multiple versions of a module installed and they all shared a help topic, e.g. about_PSReadline, <ph id="ph1">`help about_PSReadline`</ph> would return multiple topics with no obvious way to view the real help.</source>
          <target state="translated">WMF5.1 이전에는 모듈의 여러 버전이 설치되어 있고 이들 버전이 모두 about_PSReadline과 같은 하나의 도움말 항목을 공유한 경우 <ph id="ph1">`help about_PSReadline`</ph>에서 여러 항목을 반환하므로 실제 도움말을 볼 수 있는 방법이 명확히 없었습니다.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>WMF5.1 fixes this by returning the help for the latest version of the topic.</source>
          <target state="translated">WMF5.1에서는 항목의 최신 버전에 대한 도움말을 반환하여 이 문제를 수정합니다.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>Get-Help does not provide a way to specify which version you want help for, the workaround is to navigate to the modules directory and view the help directly with a tool like your favorite editor.</source>
          <target state="translated">Get-Help에는 도움말이 필요한 버전을 지정하는 방법이 없으므로 모듈 디렉터리로 이동하고 즐겨 사용하는 편집기와 같은 도구에서 직접 도움말을 보는 것이 해결 방법입니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>