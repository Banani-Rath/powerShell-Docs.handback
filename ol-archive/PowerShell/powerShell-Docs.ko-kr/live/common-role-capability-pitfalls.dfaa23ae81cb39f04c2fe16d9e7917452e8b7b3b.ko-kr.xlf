<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ko-kr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-4bd6fc0" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">2b2dfd9c39fe5d7bf4a52032653108729715e6bf</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">jea\common-role-capability-pitfalls.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions" />
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">255cd0a7e474eb4e2d095f980c549cf26bc248ae</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">12b3f0375942dd9d33017daf109f6705b66040c7</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>powershell,cmdlet,jea</source>
          <target state="translated">powershell,cmdlet,jea</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>common role capability pitfalls</source>
          <target state="translated">일반적인 역할 기능 문제</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Common Role Capability Pitfalls</source>
          <target state="translated">일반적인 역할 기능 문제</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>You may run into a few common pitfalls if you go through this process yourself.</source>
          <target state="translated">이 프로세스를 직접 진행할 때 몇 가지 일반적인 문제가 발생할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Here is a quick guide explaining how to identify and remediate these issues when modifying or creating a new endpoint:</source>
          <target state="translated">새 끝점을 수정하거나 만들 때 이러한 문제를 식별하고 수정하는 방법을 설명하는 간단한 지침은 다음과 같습니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Functions vs. Cmdlets</source>
          <target state="translated">함수와 Cmdlet</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>PowerShell commands written in PowerShell are PowerShell functions.</source>
          <target state="translated">PowerShell에서 작성된 PowerShell 명령이 PowerShell 함수이고,</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>PowerShell commands written as specialized .NET classes are PowerShell cmdlets.</source>
          <target state="translated">특수화된 .NET 클래스로 작성된 PowerShell 명령이 PowerShell cmdlet입니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>You can check the command type by running <ph id="ph1">`Get-Command`</ph>.</source>
          <target state="translated"><ph id="ph1">`Get-Command`</ph>를 실행하여 명령 유형을 확인할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>VisibleProviders</source>
          <target state="translated">VisibleProviders</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>You will need to expose any providers your commands need.</source>
          <target state="translated">명령에 필요한 공급자를 노출해야 합니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>The most common is the FileSystem provider, but you may also need to expose others, like the Registry provider.</source>
          <target state="translated">가장 일반적인 공급자는 FileSystem 공급자이지만 레지스트리 공급자 등의 다른 공급자도 노출해야 할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>For an introduction to providers, check out this <bpt id="p1">[</bpt>Hey, Scripting Guy blog post<ept id="p1">](http://blogs.technet.com/b/heyscriptingguy/archive/2015/04/20/find-and-use-windows-powershell-providers.aspx)</ept>.</source>
          <target state="translated">공급자에 대한 소개는 <bpt id="p1">[</bpt>Hey, Scripting Guy 블로그 게시물<ept id="p1">](http://blogs.technet.com/b/heyscriptingguy/archive/2015/04/20/find-and-use-windows-powershell-providers.aspx)</ept>을 참조하세요.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Be careful when exposing providers -- often, it is better to define your own function that works with the underlying providers than to directly expose the provider in a JEA session.</source>
          <target state="translated">공급자를 노출할 때 JEA 세션에서 공급자를 직접 노출하는 대신 기본 공급자와 작동하는 함수를 직접 정의하는 것이 효과적인 경우가 많습니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>This way, you can still allow users to work with files, registry keys, etc. but retain control over <bpt id="p1">**</bpt>which<ept id="p1">**</ept> files and registry keys they can work with using custom validation logic.</source>
          <target state="translated">이러한 방식으로 사용자가 파일, 레지스트리 키 등을 사용하여 작업하도록 계속 허용할 수 있지만 사용자 지정 유효성 검사 논리를 사용하여 작업할 수 있는 파일 및 레지스트리 키 <bpt id="p1">**</bpt>항목<ept id="p1">**</ept>에 대한 제어를 유지할 수 있습니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>