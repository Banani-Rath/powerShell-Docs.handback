<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-tw">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-db30baf" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">8a3ae5fdf5d70de999ca6b992efb14533408c305</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">dsc\configData.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions" />
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Separating Configuration and Environment Data</source>
          <target state="translated">分離設定和環境資料</target>         
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Separating Configuration and Environment Data</source>
          <target state="translated">分離設定和環境資料</target>         
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Applies To: Windows PowerShell 4.0, Windows PowerShell 5.0</source>
          <target state="translated">適用於：Windows PowerShell 4.0、Windows PowerShell 5.0</target>         
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>In Windows PowerShell Desired State Configuration (DSC), it is possible to separate configuration data from the logic of your configuration.</source>
          <target state="translated">在 Windows PowerShell 預期狀態設定 (DSC) 中，設定資料和設定邏輯是可以分離的。</target>         
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Another way to look at this is to consider the structural configuration (for example, a configuration might require that IIS be installed) as separate from the environmental configuration (that is, whether the situation is a test environment vs. a production one—the node names would be different, but the configuration applied to them would be the same).</source>
          <target state="translated">另一個查看方式是將結構化設定 (例如，設定可能需要安裝 IIS) 和環境設定視為分開的 (也就是說，無論情況是測試環境或生產環境，節點名稱可能不同，但它們套用的設定都是一樣的)。</target>         
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>This has the following advantages:</source>
          <target state="translated">這有下列優點：</target>         
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>It allows you to reuse your configuration data for different resources, nodes, and configurations.</source>
          <target state="translated">設定資料可重複使用於不同的資源、節點和設定。</target>         
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Configuration logic is more reusable if it does not contain hard-coded data.</source>
          <target state="translated">如果設定邏輯不含硬式編碼資料，會增加重複使用性。</target>         
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>This is similar to good scripting guidelines for functions.</source>
          <target state="translated">這類似很好的函式指令碼處理指導方針。</target>         
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>If some of the data needs to change, you can make the changes in one location, thereby saving time and reducing errors.</source>
          <target state="translated">如有某些資料需要變更，您只要在一個位置變更資料，省時並減少錯誤。</target>         
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Basic concepts and examples</source>
          <target state="translated">基本概念和範例</target>         
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>To specify the environmental part of the configuration, DSC uses the <bpt id="p1">**</bpt>ConfigurationData<ept id="p1">**</ept> parameter, which is a hash table (or it can take a .psd1 file which contains the hash table).</source>
          <target state="translated">DSC 使用 <bpt id="p1">**</bpt>ConfigurationData<ept id="p1">**</ept> 參數指定設定的環境部分，它是雜湊表 (或使用包含雜湊表的 .psd1 檔案)。</target>         
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>This hash table must have at least one key <bpt id="p1">**</bpt>AllNodes<ept id="p1">**</ept>, which has a structured value.</source>
          <target state="translated">這個雜湊表至少要有一個具有結構化值的索引鍵 <bpt id="p1">**</bpt>AllNodes<ept id="p1">**</ept>。</target>         
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>For example:</source>
          <target state="translated">例如：</target>         
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Note the AllNodes key, whose value is an array.</source>
          <target state="translated">請注意，AllNodes 索引鍵的值是陣列。</target>         
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Each element of this array is also a hash table, which requires NodeName as a key:</source>
          <target state="translated">這個陣列的每個元素也是雜湊表，需要 NodeName 作為索引鍵：</target>         
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Each hash table entry in AllNodes corresponds to configuration data to a node in the configuration.</source>
          <target state="translated">AllNodes 中的每個雜湊表項目都會對應到設定節點的設定資料。</target>         
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>In addition to the required NodeName key, you can add other keys to the hash table as well, for example:</source>
          <target state="translated">除了必要的 NodeName 索引鍵，雜湊表中也可以加入其他索引鍵，例如：</target>         
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>DSC offers three special variables to use in the configuration script:</source>
          <target state="translated">DSC 提供三個特殊變數，在設定指令碼中使用：</target>         
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>$AllNodes<ept id="p1">**</ept>: Refers to all of the nodes.</source>
          <target state="translated"><bpt id="p1">**</bpt>$AllNodes<ept id="p1">**</ept>：指是所有的節點。</target>         
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>You can use filtering with <bpt id="p1">**</bpt>.Where()<ept id="p1">**</ept> and <bpt id="p2">**</bpt>.ForEach()<ept id="p2">**</ept>, so instead of hard-coding node names to select particular nodes for action, you could write something like this to select VM-1 and VM-3 in the above example:</source>
          <target state="translated">您可以使用篩選搭配 <bpt id="p1">**</bpt>.Where()<ept id="p1">**</ept> 和 <bpt id="p2">**</bpt>.ForEach()<ept id="p2">**</ept>，不使用硬式編碼節點名稱為動作選取特定的節點，您可以撰寫類似下面的內容，在上例中選取 VM-1 和 VM-3：</target>         
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>$Node<ept id="p1">**</ept>: Once the set of nodes is filtered, you can use $Node to refer to the particular entry.</source>
          <target state="translated"><bpt id="p1">**</bpt>$Node<ept id="p1">**</ept>：只要篩選過節點集，您就可以使用 $Node 參考特定的項目。</target>         
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>For example:</source>
          <target state="translated">例如：</target>         
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>To apply a property to all nodes, you can set NodeName = “*”.</source>
          <target state="translated">若要將屬性套用至所有節點，您可以設定 NodeName = “*”。</target>         
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>For example, to give every node the LogPath property, you could do this:</source>
          <target state="translated">例如，您可以如下為每個節點提供 LogPath 屬性：</target>         
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>$ConfigurationData<ept id="p1">**</ept>: You can use this variable inside a configuration to access the configuration data hash table passed as a parameter.</source>
          <target state="translated"><bpt id="p1">**</bpt>$ConfigurationData<ept id="p1">**</ept>：您可以在設定內使用這個變數，存取當做參數傳遞的設定資料雜湊表。</target>         
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>For example:</source>
          <target state="translated">例如：</target>         
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>You can find a full example included in the <bpt id="p1">[</bpt>xWebAdministration module<ept id="p1">](https://powershellgallery.com/packages/xWebAdministration)</ept>.</source>
          <target state="translated">完整範例請參閱 <bpt id="p1">[</bpt>xWebAdministration 模組<ept id="p1">](https://powershellgallery.com/packages/xWebAdministration)</ept>。</target>         
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>