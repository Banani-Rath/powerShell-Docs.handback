<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-tw">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-56a7a5e" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">991a324945289b2eff0b706d093b2d345352fb15</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">dsc\authoringResourceMofCS.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions" />
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">79476d1d24e53292ef18c84074442fd4a46d7e59</xliffext:olskeletonhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Authoring a DSC resource in C`</source>
          <target state="translated">用 C` 撰寫 DSC 資源</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>powershell,DSC</source>
          <target state="translated">PowerShell，DSC</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Authoring a DSC resource in C</source>
          <target state="translated">用 C 撰寫 DSC 資源</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Applies To: Windows PowerShell 4.0, Windows PowerShell 5.0</source>
          <target state="translated">適用於：Windows PowerShell 4.0、Windows PowerShell 5.0</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Typically, a Windows PowerShell Desired State Configuration (DSC) custom resource is implemented in a PowerShell script.</source>
          <target state="translated">一般而言，Windows PowerShell 預期狀態設定 (DSC) 自訂資源是在 PowerShell 指令碼中實作。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>However, you can also implement the functionality of a DSC custom resource by writing cmdlets in C#.</source>
          <target state="translated">但您也可以用 C# 撰寫 Cmdlet 來實作 DSC 自訂資源的功能。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>For an introduction on writing cmdlets in C#, see <bpt id="p1">[</bpt>Writing a Windows PowerShell Cmdlet<ept id="p1">](https://technet.microsoft.com/en-us/library/dd878294.aspx)</ept>.</source>
          <target state="translated">如需以 C# 撰寫 Cmdlet 的簡介，請參閱<bpt id="p1">[</bpt>撰寫 Windows PowerShell Cmdlet<ept id="p1">](https://technet.microsoft.com/en-us/library/dd878294.aspx)</ept>。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Aside from implementing the resource in C# as cmdlets, the process of creating the MOF schema, creating the folder structure, importing and using your custom DSC resource are the same as described in <bpt id="p1">[</bpt>Writing a custom DSC resource with MOF<ept id="p1">](authoringResourceMOF.md)</ept>.</source>
          <target state="translated">除了用 C# 將資源當做 Cmdlet 實作，建立 MOF 結構描述、建立資料夾結構、匯入和使用自訂之 DSC 資源的程序，一如<bpt id="p1">[</bpt>撰寫自訂的 DSC 資源與 MOF<ept id="p1">](authoringResourceMOF.md)</ept> 中所述。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Writing a cmdlet-based resource</source>
          <target state="translated">撰寫 Cmdlet 式的資源</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>For this example, we will implement a simple resource that manages a text file and its contents.</source>
          <target state="translated">本例中，我們會實作簡單的資源，管理文字檔案及其內容。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Writing the MOF schema</source>
          <target state="translated">撰寫 MOF 結構描述</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>The following is the MOF resource definition.</source>
          <target state="translated">以下是 MOF 資源定義。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Setting up the Visual Studio project</source>
          <target state="translated">設定 Visual Studio 專案</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Setting up a cmdlet project</source>
          <target state="translated">設定 Cmdlet 專案</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Open Visual Studio.</source>
          <target state="translated">開啟 Visual Studio。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Create a C# project and provide the name.</source>
          <target state="translated">建立 C# 專案並提供名稱。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Select <bpt id="p1">**</bpt>Class Library<ept id="p1">**</ept> from the available project templates.</source>
          <target state="translated">從可用的專案範本中選取 <bpt id="p1">**</bpt>[類別庫]<ept id="p1">**</ept>。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Click <bpt id="p1">**</bpt>Ok<ept id="p1">**</ept>.</source>
          <target state="translated">按一下 <bpt id="p1">**</bpt>[確定]<ept id="p1">**</ept>。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Add an assembly reference to System.Automation.Management.dll to your project.</source>
          <target state="translated">在專案中加入 System.Automation.Management.dll 的組件參考。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Change the assembly name to match the resource name.</source>
          <target state="translated">變更組件名稱使符合資源名稱。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>In this case, the assembly should be named <bpt id="p1">**</bpt>MSFT_XDemoFile<ept id="p1">**</ept>.</source>
          <target state="translated">如此，組件應命名為 <bpt id="p1">**</bpt>MSFT_XDemoFile<ept id="p1">**</ept>。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Writing the cmdlet code</source>
          <target state="translated">撰寫 Cmdlet 程式碼</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>The following C# code implements the <bpt id="p1">**</bpt>Get-TargetResource<ept id="p1">**</ept>, <bpt id="p2">**</bpt>Set-TargetResource<ept id="p2">**</ept>, and <bpt id="p3">**</bpt>Test-TargetResource<ept id="p3">**</ept> cmdlets.</source>
          <target state="translated">下列 C# 程式碼會實作 <bpt id="p1">**</bpt>Get-TargetResource<ept id="p1">**</ept>、<bpt id="p2">**</bpt>Set-TargetResource<ept id="p2">**</ept> 和 <bpt id="p3">**</bpt>Test-TargetResource<ept id="p3">**</ept> Cmdlet。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Deploying the resource</source>
          <target state="translated">部署資源</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>The compiled dll file should be saved in a file structure similar to a script-based resource.</source>
          <target state="translated">已編譯的 DLL 檔案應該儲存在類似於指令碼式資源的檔案結構中。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>The following is the folder structure for this resource.</source>
          <target state="translated">以下是這項資源的資料夾結構。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>See Also</source>
          <target state="translated">另請參閱</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Concepts</source>
          <target state="translated">概念</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Writing a custom DSC resource with MOF</source>
          <target state="translated">撰寫自訂的 DSC 資源與 MOF</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Other Resources</source>
          <target state="translated">其他資源</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Writing a Windows PowerShell Cmdlet</source>
          <target state="translated">撰寫 Windows PowerShell Cmdlet</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>