<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-tw">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-4bd6fc0" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">30cc1671518fe5f134556443dca7ae46e9be3fea</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">scripting\core-powershell\ise\How-to-Debug-Scripts-in-Windows-PowerShell-ISE.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions" />
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">4741254086aef4e92a4b184cca854e83a11e2579</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">c071a590a65978e7c43c79db93402730e9a0d9d8</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>How to Debug Scripts in Windows PowerShell ISE</source>
          <target state="translated">如何在 Windows PowerShell ISE 中偵錯指令碼</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>powershell,cmdlet</source>
          <target state="translated">powershell,cmdlet</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>How to Debug Scripts in Windows PowerShell ISE</source>
          <target state="translated">如何在 Windows PowerShell ISE 中偵錯指令碼</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>This topic describes how to debug scripts on a local computer by using the Windows PowerShell® Integrated Scripting Environment (ISE) visual debugging features.</source>
          <target state="translated">本主題說明如何使用 Windows PowerShell® 整合式指令碼環境 (ISE) 視覺化偵錯功能，對本機電腦上的指令碼執行偵錯。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>How to manage breakpoints<ept id="p1">](#bkmk_1)</ept><ph id="ph1">
</ph><bpt id="p2">[</bpt>How to manage a debugging session<ept id="p2">](#bkmk_2)</ept><ph id="ph2">
</ph><bpt id="p3">[</bpt>How to step over, step into, and step out while debugging<ept id="p3">](#bkmk_3)</ept><ph id="ph3">
</ph><bpt id="p4">[</bpt>How to display the values of variables while debugging<ept id="p4">](#bkmk_4)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>如何管理中斷點<ept id="p1">](#bkmk_1)</ept><ph id="ph1">
</ph><bpt id="p2">[</bpt>如何管理偵錯工作階段<ept id="p2">](#bkmk_2)</ept><ph id="ph2">
</ph><bpt id="p3">[</bpt>如何在偵錯時逐程序、逐步執行及跳出<ept id="p3">](#bkmk_3)</ept><ph id="ph3">
</ph><bpt id="p4">[</bpt>如何在偵錯時顯示變數的值<ept id="p4">](#bkmk_4)</ept></target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>How to manage breakpoints</source>
          <target state="translated">如何管理中斷點</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>A breakpoint is a designated spot in a script where you would like operation to pause so that you can examine the current state of the variables and the environment in which your script is running.</source>
          <target state="translated">中斷點是您要在指令碼中暫停作業的指定位置，以便您可以檢查變數及指令碼執行所在之環境的目前狀態。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Once your script is paused by a breakpoint, you can run commands in the Console Pane to examine the state of your script.</source>
          <target state="translated">在中斷點暫停指令碼之後，您可以在主控台窗格中執行命令，以檢查指令碼的狀態。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>You can output variables or run other commands.</source>
          <target state="translated">您可以輸出變數或執行其他命令。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>You can even modify the value of any variables that are visible to the context of the currently running script.</source>
          <target state="translated">您甚至可以修改目前執行中指令碼內容所顯示的任何變數值。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>After you have examined what you want to see, you can resume operation of the script.</source>
          <target state="translated">檢查您要查看的項目之後，您可以繼續指令碼作業。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>You can set three types of breakpoints in the Windows PowerShell debugging environment:</source>
          <target state="translated">您可以在 Windows PowerShell 偵錯環境中，設定三種中斷點類型︰</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Line breakpoint<ept id="p1">**</ept>.</source>
          <target state="translated"><bpt id="p1">**</bpt>行中斷點<ept id="p1">**</ept>：</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>The script pauses when the designated line is reached during the operation of the script</source>
          <target state="translated">在指令碼作業期間，當到達指定的行時，就會暫停指令碼</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Variable breakpoint.</source>
          <target state="translated">變數中斷點：</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>The script pauses whenever the designated variable’s value changes.</source>
          <target state="translated">當指定的變數值變更時，就會暫停指令碼。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Command breakpoint.</source>
          <target state="translated">命令中斷點：</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>The script pauses whenever the designated command is about to be run during the operation of the script.</source>
          <target state="translated">在指令碼作業期間，當指定的命令即將執行時，就會暫停指令碼。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>It can include parameters to further filter the breakpoint to only the operation you want.</source>
          <target state="translated">它可以包含參數，以進一步將中斷點篩選到您需要的唯一作業。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>The command can also be a function you created.</source>
          <target state="translated">此命令也可以是您已建立的函式。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Of these, in the Windows PowerShell ISE debugging environment, only line breakpoints can be set by using the menu or the keyboard shortcuts.</source>
          <target state="translated">在 Windows PowerShell ISE 偵錯環境中，只有行中斷點可以使用功能表或鍵盤快速鍵來設定。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>The other two types of breakpoints can be set, but they are set from the Console Pane by using the <bpt id="p1">[</bpt>Set-PSBreakpoint<ept id="p1">](https://technet.microsoft.com/library/88d2d9ad-17dc-44ae-99aa-f841125b9dc8)</ept> cmdlet.</source>
          <target state="translated">另有其他兩種中斷點類型可供設定，但必須使用 <bpt id="p1">[</bpt>Set-PSBreakpoint<ept id="p1">](https://technet.microsoft.com/library/88d2d9ad-17dc-44ae-99aa-f841125b9dc8)</ept> Cmdlet 從 [主控台] 設定。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>This section describes how you can perform debugging tasks in Windows PowerShell ISE by using the menus where available, and perform a wider range of commands from the Console Pane by using scripting.</source>
          <target state="translated">本節說明如何使用功能表 (可用時) 在 Windows PowerShell ISE 中執行偵錯工作，並從主控台窗格中使用指令碼執行更廣泛的命令。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>To set a breakpoint</source>
          <target state="translated">設定中斷點</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>A breakpoint can be set in a script only after it has been saved.</source>
          <target state="translated">只有在儲存指令碼之後，才能在其中設定中斷點。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Right-click the line where you want to set a line breakpoint, and then click <bpt id="p1">**</bpt>Toggle Breakpoint<ept id="p1">**</ept>.</source>
          <target state="translated">以滑鼠右鍵按一下您要設定行中斷點的行，然後按一下 [切換中斷點]。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Or, click the line where you want to set a line breakpoint, and press <bpt id="p1">**</bpt>F9<ept id="p1">**</ept> or, on the <bpt id="p2">**</bpt>Debug<ept id="p2">**</ept> menu, click <bpt id="p3">**</bpt>Toggle Breakpoint<ept id="p3">**</ept>.</source>
          <target state="translated">或者，按一下您要設定行中斷點的行，然後按 <bpt id="p1">**</bpt>F9<ept id="p1">**</ept> 鍵，或在 <bpt id="p2">**</bpt>[偵錯]<ept id="p2">**</ept> 功能表上，按一下 <bpt id="p3">**</bpt>[切換中斷點]<ept id="p3">**</ept>。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>The following script is an example of how you can set a variable breakpoint from the Console Pane by using the <bpt id="p1">[</bpt>Set-PSBreakpoint<ept id="p1">](https://technet.microsoft.com/library/6afd5d2c-a285-4796-8607-3cbf49471420)</ept> cmdlet.</source>
          <target state="translated">下列指令碼示範如何從主控台窗格使用 <bpt id="p1">[</bpt>Set-PSBreakpoint<ept id="p1">](https://technet.microsoft.com/library/6afd5d2c-a285-4796-8607-3cbf49471420)</ept> Cmdlet 設定變數中斷點。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>List all breakpoints</source>
          <target state="translated">列出所有中斷點</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Displays all breakpoints in the current Windows PowerShell® session.</source>
          <target state="translated">顯示目前 Windows PowerShell® 工作階段中的所有中斷點。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>On the <bpt id="p1">**</bpt>Debug<ept id="p1">**</ept> menu, click <bpt id="p2">**</bpt>List Breakpoints<ept id="p2">**</ept>.</source>
          <target state="translated">在 <bpt id="p1">**</bpt>[偵錯]<ept id="p1">**</ept> 功能表上，按一下 <bpt id="p2">**</bpt>[列出中斷點]<ept id="p2">**</ept>。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>The following script is an example of how you can list all breakpoints from the Console Pane by using the <bpt id="p1">[</bpt>Get-PSBreakpoint<ept id="p1">](https://technet.microsoft.com/library/0bf48936-00ab-411c-b5e0-9b10a812a3c6)</ept> cmdlet.</source>
          <target state="translated">下列指令碼示範如何從主控台窗格使用 <bpt id="p1">[</bpt>Get-PSBreakpoint<ept id="p1">](https://technet.microsoft.com/library/0bf48936-00ab-411c-b5e0-9b10a812a3c6)</ept> Cmdlet 列出所有中斷點。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Remove a breakpoint</source>
          <target state="translated">移除中斷點</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Removing a breakpoint deletes it.</source>
          <target state="translated">移除中斷點會將它刪除。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>If you think you might want to use it again later, consider <bpt id="p1">[</bpt>disabling<ept id="p1">](#bkmk_disable)</ept> it instead.</source>
          <target state="translated">如果您認為稍後可能需要重複使用，請考慮改為將它<bpt id="p1">[</bpt>停用<ept id="p1">](#bkmk_disable)</ept>。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Right-click the line where you want to remove a breakpoint, and then click <bpt id="p1">**</bpt>Toggle Breakpoint<ept id="p1">**</ept>.</source>
          <target state="translated">以滑鼠右鍵按一下您要移除中斷點的行，然後按一下 [切換中斷點]。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Or, click the line where you want to remove a breakpoint, and on the <bpt id="p1">**</bpt>Debug<ept id="p1">**</ept> menu, click <bpt id="p2">**</bpt>Toggle Breakpoint<ept id="p2">**</ept>.</source>
          <target state="translated">或者，按一下您要移除中斷點的行，然後在 <bpt id="p1">**</bpt>[偵錯]<ept id="p1">**</ept> 功能表上，按一下 <bpt id="p2">**</bpt>[切換中斷點]<ept id="p2">**</ept>。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>The following script is an example of how to remove a breakpoint with a specified ID from the Console Pane by using the <bpt id="p1">[</bpt>Remove-PSBreakpoint<ept id="p1">](https://technet.microsoft.com/library/4c877a80-0ea0-4790-9281-88c08ef0ddd6)</ept> cmdlet.</source>
          <target state="translated">下列指令碼示範如何從主控台窗格使用 <bpt id="p1">[</bpt>Remove-PSBreakpoint<ept id="p1">](https://technet.microsoft.com/library/4c877a80-0ea0-4790-9281-88c08ef0ddd6)</ept> Cmdlet 移除具有指定識別碼的中斷點。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Remove All Breakpoints</source>
          <target state="translated">移除所有中斷點</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>To remove all breakpoints defined in the current session, on the <bpt id="p1">**</bpt>Debug<ept id="p1">**</ept> menu, click <bpt id="p2">**</bpt>Remove All Breakpoints<ept id="p2">**</ept>.</source>
          <target state="translated">若要移除目前工作階段中定義的所有中斷點，請在 <bpt id="p1">**</bpt>[偵錯]<ept id="p1">**</ept> 功能表上，按一下 <bpt id="p2">**</bpt>[移除所有中斷點]<ept id="p2">**</ept>。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>The following script is an example of how to remove all breakpoints from the Console Pane by using the <bpt id="p1">[</bpt>Remove-PSBreakpoint<ept id="p1">](https://technet.microsoft.com/library/4c877a80-0ea0-4790-9281-88c08ef0ddd6)</ept> cmdlet.</source>
          <target state="translated">下列指令碼示範如何從主控台窗格使用 <bpt id="p1">[</bpt>Remove-PSBreakpoint<ept id="p1">](https://technet.microsoft.com/library/4c877a80-0ea0-4790-9281-88c08ef0ddd6)</ept> Cmdlet 移除所有中斷點。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Disable a Breakpoint</source>
          <target state="translated">停用中斷點</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Disabling a breakpoint does not remove it; it turns it off until it is enabled.</source>
          <target state="translated">停用中斷點不會將它移除，而是將它關閉直到再次啟用為止。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>To disable a specific line breakpoint, right-click the line where you want to disable a breakpoint, and then click <bpt id="p1">**</bpt>Disable Breakpoint<ept id="p1">**</ept>.</source>
          <target state="translated">若要停用特定行中斷點，請以滑鼠右鍵按一下您要停用中斷點的行，然後按一下 [停用中斷點]。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Or, click the line where you want to disable a breakpoint, and press <bpt id="p1">**</bpt>F9<ept id="p1">**</ept> or, on the <bpt id="p2">**</bpt>Debug<ept id="p2">**</ept> menu, click <bpt id="p3">**</bpt>Disable Breakpoint<ept id="p3">**</ept>.</source>
          <target state="translated">或者，按一下您要停用中斷點的行，然後按 <bpt id="p1">**</bpt>F9<ept id="p1">**</ept> 鍵，或在 <bpt id="p2">**</bpt>[偵錯]<ept id="p2">**</ept> 功能表上，按一下 <bpt id="p3">**</bpt>[停用中斷點]<ept id="p3">**</ept>。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>The following script is an example of how you can remove a breakpoint with a specified ID from the Console Pane by using the <bpt id="p1">[</bpt>Disable-PSBreakpoint<ept id="p1">](https://technet.microsoft.com/library/d4974e9b-0aaa-4e20-b87f-f599a413e4e8)</ept> cmdlet.</source>
          <target state="translated">下列指令碼示範如何從主控台窗格使用 <bpt id="p1">[</bpt>Disable-PSBreakpoint<ept id="p1">](https://technet.microsoft.com/library/d4974e9b-0aaa-4e20-b87f-f599a413e4e8)</ept> Cmdlet 移除具有指定識別碼的中斷點。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Disable All Breakpoints</source>
          <target state="translated">停用所有中斷點</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Disabling a breakpoint does not remove it; it turns it off until it is enabled.</source>
          <target state="translated">停用中斷點不會將它移除，而是將它關閉直到再次啟用為止。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>To disable all breakpoints in the current session, on the <bpt id="p1">**</bpt>Debug<ept id="p1">**</ept> menu, click <bpt id="p2">**</bpt>Disable all Breakpoints<ept id="p2">**</ept>.</source>
          <target state="translated">若要停用目前工作階段中的所有中斷點，請在 <bpt id="p1">**</bpt>[偵錯]<ept id="p1">**</ept> 功能表上，按一下 <bpt id="p2">**</bpt>[停用所有中斷點]<ept id="p2">**</ept>。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>The following script is an example of how you can disable all breakpoints from the Console Pane by using the <bpt id="p1">[</bpt>Disable-PSBreakpoint<ept id="p1">](https://technet.microsoft.com/library/d4974e9b-0aaa-4e20-b87f-f599a413e4e8)</ept> cmdlet.</source>
          <target state="translated">下列指令碼示範如何從主控台窗格使用 <bpt id="p1">[</bpt>Disable-PSBreakpoint<ept id="p1">](https://technet.microsoft.com/library/d4974e9b-0aaa-4e20-b87f-f599a413e4e8)</ept> Cmdlet 來停用所有中斷點。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Enable a Breakpoint</source>
          <target state="translated">啟用中斷點</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>To enable a specific breakpoint, right-click the line where you want to enable a breakpoint, and then click <bpt id="p1">**</bpt>Enable Breakpoint<ept id="p1">**</ept>.</source>
          <target state="translated">若要啟用特定中斷點，請以滑鼠右鍵按一下您要啟用中斷點的行，然後按一下 [啟用中斷點]。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Or, click the line where you want to enable a breakpoint, and then press <bpt id="p1">**</bpt>F9<ept id="p1">**</ept> or, on the <bpt id="p2">**</bpt>Debug<ept id="p2">**</ept> menu, click <bpt id="p3">**</bpt>Enable Breakpoint<ept id="p3">**</ept>.</source>
          <target state="translated">或者，按一下您要啟用中斷點的行，然後按 <bpt id="p1">**</bpt>F9<ept id="p1">**</ept> 鍵，或在 <bpt id="p2">**</bpt>[偵錯]<ept id="p2">**</ept> 功能表上，按一下 <bpt id="p3">**</bpt>[啟用中斷點]<ept id="p3">**</ept>。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>The following script is an example of how you can enable specific breakpoints from the Console Pane by using the <bpt id="p1">[</bpt>Enable-PSBreakpoint<ept id="p1">](https://technet.microsoft.com/library/739e1091-3b3f-405f-a428-bec7543e5df0)</ept> cmdlet.</source>
          <target state="translated">下列指令碼示範如何從主控台窗格使用 <bpt id="p1">[</bpt>Enable-PSBreakpoint<ept id="p1">](https://technet.microsoft.com/library/739e1091-3b3f-405f-a428-bec7543e5df0)</ept> Cmdlet 來啟用特定中斷點。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Enable All Breakpoints</source>
          <target state="translated">啟用所有中斷點</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>To enable all breakpoints defined in the current session, on the <bpt id="p1">**</bpt>Debug<ept id="p1">**</ept> menu, click <bpt id="p2">**</bpt>Enable all Breakpoints<ept id="p2">**</ept>.</source>
          <target state="translated">若要啟用目前工作階段中定義的所有中斷點，請在 <bpt id="p1">**</bpt>[偵錯]<ept id="p1">**</ept> 功能表上，按一下 <bpt id="p2">**</bpt>[啟用所有中斷點]<ept id="p2">**</ept>。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>The following script is an example of how you can enable all breakpoints from the Console Pane by using the <bpt id="p1">[</bpt>Enable-PSBreakpoint<ept id="p1">](https://technet.microsoft.com/library/739e1091-3b3f-405f-a428-bec7543e5df0)</ept> cmdlet.</source>
          <target state="translated">下列指令碼示範如何從主控台窗格使用 <bpt id="p1">[</bpt>Enable-PSBreakpoint<ept id="p1">](https://technet.microsoft.com/library/739e1091-3b3f-405f-a428-bec7543e5df0)</ept> Cmdlet 啟用所有中斷點。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>How to manage a debugging session</source>
          <target state="translated">如何管理偵錯工作階段</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>Before you start debugging, you must set one or more breakpoints.</source>
          <target state="translated">開始偵錯之前，您必須設定一或多個中斷點。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>You cannot set a breakpoint unless the script that you want to debug is saved.</source>
          <target state="translated">您必須儲存要偵錯的指令碼，才能設定中斷點。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>For directions on of how to set a breakpoint, see <bpt id="p1">[</bpt>How to manage breakpoints<ept id="p1">](#bkmk_1)</ept> or <bpt id="p2">[</bpt>Set-PSBreakpoint<ept id="p2">](https://technet.microsoft.com/library/6afd5d2c-a285-4796-8607-3cbf49471420)</ept>.</source>
          <target state="translated">如需如何設定中斷點的指示，請參閱<bpt id="p1">[</bpt>如何管理中斷點<ept id="p1">](#bkmk_1)</ept>或 <bpt id="p2">[</bpt>Set-PSBreakpoint<ept id="p2">](https://technet.microsoft.com/library/6afd5d2c-a285-4796-8607-3cbf49471420)</ept>。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>After you start debugging, you cannot edit a script until you stop debugging.</source>
          <target state="translated">開始偵錯之後，直到停止偵錯為止，都無法編輯指令碼。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>A script that has one or more breakpoints set is automatically saved before it is run.</source>
          <target state="translated">已設定一或多個中斷點的指令碼會自動儲存後再執行。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>To start debugging</source>
          <target state="translated">開始偵錯</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>Press <bpt id="p1">**</bpt>F5<ept id="p1">**</ept> or, on the toolbar, click the <bpt id="p2">**</bpt>Run Script<ept id="p2">**</ept> icon, or on the <bpt id="p3">**</bpt>Debug<ept id="p3">**</ept> menu click <bpt id="p4">**</bpt>Run/Continue<ept id="p4">**</ept>.</source>
          <target state="translated">按 <bpt id="p1">**</bpt>F5<ept id="p1">**</ept> 鍵；按一下工具列中的<bpt id="p2">**</bpt>執行指令碼<ept id="p2">**</ept>圖示；或在 [偵錯] 功能表上，按一下 [執行/繼續]。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>The script runs until it encounters the first breakpoint.</source>
          <target state="translated">指令碼會執行，直到它遇到第一個中斷點為止。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>It pauses operation there and highlights the line on which it paused.</source>
          <target state="translated">然後它會在此暫停作業，並反白暫停的行。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>To continue debugging</source>
          <target state="translated">繼續偵錯</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>Press <bpt id="p1">**</bpt>F5<ept id="p1">**</ept> or, on the toolbar, click the <bpt id="p2">**</bpt>Run Script<ept id="p2">**</ept> icon, or on the <bpt id="p3">**</bpt>Debug<ept id="p3">**</ept> menu, click <bpt id="p4">**</bpt>Run/Continue<ept id="p4">**</ept> or, in the Console Pane, type <bpt id="p5">**</bpt>C<ept id="p5">**</ept> and then press <bpt id="p6">**</bpt>ENTER<ept id="p6">**</ept>.</source>
          <target state="translated">請執行下列其中一個動作：按 <bpt id="p1">**</bpt>F5<ept id="p1">**</ept> 鍵、按一下工具列中的<bpt id="p2">**</bpt>執行指令碼<ept id="p2">**</ept>圖示、在 [偵錯] 功能表上，按一下 [執行/繼續]、在主控台窗格中輸入 <bpt id="p5">**</bpt>C<ept id="p5">**</ept>，然後按 <bpt id="p6">**</bpt>ENTER<ept id="p6">**</ept> 鍵。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>This causes the script to continue running to the next breakpoint or to the end of the script if no further breakpoints are encountered.</source>
          <target state="translated">這會使指令碼繼續執行到下一個中斷點，或到指令碼結尾 (如果未遇到任何其他中斷點)。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>To view the call stack</source>
          <target state="translated">檢視呼叫堆疊</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>The call stack displays the current run location in the script.</source>
          <target state="translated">呼叫堆疊會顯示指令碼中的目前執行位置。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>If the script is running in a function that was called by a different function, then that is represented in the display by additional rows in the output.</source>
          <target state="translated">如果指令碼在由其他函式呼叫的函式中執行，則會在顯示中以輸出的其他資料列來表示其他函式。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>The bottom-most row displays the original script and the line in it in which a function was called.</source>
          <target state="translated">最底端的資料列顯示原始指令碼及其中用來呼叫函式的行。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>The next line up shows that function and the line in it in which another function might have been called.</source>
          <target state="translated">上一行顯示該函式及其中可能用來呼叫其他函式的行。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>The top-most row shows the current context of the current line on which the breakpoint is set.</source>
          <target state="translated">最頂端的資料列顯示設定中斷點之目前行的目前內容。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>While paused, to see the current call stack, press <bpt id="p1">**</bpt>CTRL+SHIFT+D<ept id="p1">**</ept> or, on the <bpt id="p2">**</bpt>Debug<ept id="p2">**</ept> menu, click <bpt id="p3">**</bpt>Display Call Stack<ept id="p3">**</ept> or, in the Console Pane, type <bpt id="p4">**</bpt>K<ept id="p4">**</ept> and then press <bpt id="p5">**</bpt>ENTER<ept id="p5">**</ept>.</source>
          <target state="translated">若要在暫停期間查看目前的呼叫堆疊，請執行下列其中一個動作：按 <bpt id="p1">**</bpt>CTRL+SHIFT+D<ept id="p1">**</ept>、在 [偵錯] 功能表上，按一下 [顯示呼叫堆疊]、在主控台窗格中輸入 <bpt id="p4">**</bpt>K<ept id="p4">**</ept>，然後按 <bpt id="p5">**</bpt>ENTER<ept id="p5">**</ept> 鍵。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>To stop debugging</source>
          <target state="translated">停止偵錯</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>Press <bpt id="p1">**</bpt>SHIFT-F5<ept id="p1">**</ept> or, on the <bpt id="p2">**</bpt>Debug<ept id="p2">**</ept> menu, click <bpt id="p3">**</bpt>Stop Debugger<ept id="p3">**</ept>, or, in the Console Pane, type <bpt id="p4">**</bpt>Q<ept id="p4">**</ept> and then press <bpt id="p5">**</bpt>ENTER<ept id="p5">**</ept>.</source>
          <target state="translated">按 <bpt id="p1">**</bpt>SHIFT-F5<ept id="p1">**</ept>；在 [偵錯] 功能表上，按一下 [停止偵錯工具]；或者，在主控台窗格中輸入 <bpt id="p4">**</bpt>Q<ept id="p4">**</ept>，然後按 <bpt id="p5">**</bpt>ENTER<ept id="p5">**</ept> 鍵。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>How to step over, step into, and step out while debugging</source>
          <target state="translated">如何在偵錯時逐程序、逐步執行及跳出</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>Stepping is the process of running one statement at a time.</source>
          <target state="translated">逐步執行是一次執行一個陳述式的程序。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>You can stop on a line of code, and examine the values of variables and the state of the system.</source>
          <target state="translated">您可以在某行程式碼停止，然後檢查變數值和系統狀態。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>The following table describes common debugging tasks such as stepping over, stepping into, and stepping out.</source>
          <target state="translated">下表說明常見的偵錯工作，例如逐程序、逐步執行及跳出。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>Debugging Task</source>
          <target state="translated">偵錯工作</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>Description</source>
          <target state="translated">描述</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>How to accomplish it in PowerShell ISE</source>
          <target state="translated">如何在 PowerShell ISE 中完成</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>Step Into</source>
          <target state="translated">逐步執行</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>Executes the current statement and then stops at the next statement.</source>
          <target state="translated">執行目前的陳述式，然後在下一個陳述式停止。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>If the current statement is a function or script call, then the debugger steps into that function or script, otherwise it stops at the next statement.</source>
          <target state="translated">如果目前的陳述式是函式或指令碼呼叫，則偵錯工具會逐步執行該函式或指令碼，否則會在下一個陳述式停止。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>Press <bpt id="p1">**</bpt>F11<ept id="p1">**</ept> or, on the <bpt id="p2">**</bpt>Debug<ept id="p2">**</ept> menu, click <bpt id="p3">**</bpt>Step Into<ept id="p3">**</ept>, or in the Console Pane, type <bpt id="p4">**</bpt>S<ept id="p4">**</ept> and press <bpt id="p5">**</bpt>ENTER<ept id="p5">**</ept>.</source>
          <target state="translated">請執行下列其中一個動作：按 <bpt id="p1">**</bpt>F11<ept id="p1">**</ept>、在 <bpt id="p2">**</bpt>[偵錯]<ept id="p2">**</ept> 功能表上，按一下 <bpt id="p3">**</bpt>[逐步執行]<ept id="p3">**</ept>、在主控台窗格中輸入 <bpt id="p4">**</bpt>S<ept id="p4">**</ept>，然後按 <bpt id="p5">**</bpt>ENTER<ept id="p5">**</ept> 鍵。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>Step Over</source>
          <target state="translated">逐程序</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>Executes the current statement and then stops at the next statement.</source>
          <target state="translated">執行目前的陳述式，然後在下一個陳述式停止。</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>If the current statement is a function or script call then the debugger executes the whole function or script, and it stops at the next statement after the function call.</source>
          <target state="translated">如果目前的陳述式是函式或指令碼呼叫，則偵錯工具會執行整個函式或指令碼，並在函式呼叫後於下一個陳述式停止。</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>Press <bpt id="p1">**</bpt>F10<ept id="p1">**</ept> or, on the <bpt id="p2">**</bpt>Debug<ept id="p2">**</ept> menu, click <bpt id="p3">**</bpt>Step Over<ept id="p3">**</ept>, or in the Console Pane, type <bpt id="p4">**</bpt>V<ept id="p4">**</ept> and press <bpt id="p5">**</bpt>ENTER<ept id="p5">**</ept>.</source>
          <target state="translated">請執行下列其中一個動作：按 <bpt id="p1">**</bpt>F10<ept id="p1">**</ept>、在 <bpt id="p2">**</bpt>[偵錯]<ept id="p2">**</ept> 功能表上，按一下 <bpt id="p3">**</bpt>[逐程序]<ept id="p3">**</ept>、在主控台窗格中輸入 <bpt id="p4">**</bpt>V<ept id="p4">**</ept>，然後按 <bpt id="p5">**</bpt>ENTER<ept id="p5">**</ept> 鍵。</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>Step Out</source>
          <target state="translated">跳出</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>Steps out of the current function and up one level if the function is nested.</source>
          <target state="translated">移離目前的函式，並在函式為巢狀時移到上一層。</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>If in the main body, the script is executed to the end, or to the next breakpoint.</source>
          <target state="translated">如果在主體中，指令碼會執行到結尾，或到下一個中斷點。</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>The skipped statements are executed, but not stepped through.</source>
          <target state="translated">這會執行已跳過的陳述式，但不會逐步執行。</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>Press <bpt id="p1">**</bpt>SHIFT+F11<ept id="p1">**</ept>, or on the <bpt id="p2">**</bpt>Debug<ept id="p2">**</ept> menu, click <bpt id="p3">**</bpt>Step Out<ept id="p3">**</ept>, or in the Console Pane, type <bpt id="p4">**</bpt>O<ept id="p4">**</ept> and press <bpt id="p5">**</bpt>ENTER<ept id="p5">**</ept>.</source>
          <target state="translated">請執行下列其中一個動作：按 <bpt id="p1">**</bpt>SHIFT+F11<ept id="p1">**</ept>、在 [偵錯] 功能表上，按一下 [跳出]、在主控台窗格中輸入 <bpt id="p4">**</bpt>O<ept id="p4">**</ept>，然後按 <bpt id="p5">**</bpt>ENTER<ept id="p5">**</ept> 鍵。</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>Continue</source>
          <target state="translated">繼續</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>Continues execution to the end, or to the next breakpoint.</source>
          <target state="translated">繼續執行到結尾，或到下一個中斷點。</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>The skipped functions and invocations are executed, but not stepped through.</source>
          <target state="translated">這會執行已跳過的函式和引動過程，但不會逐步執行。</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>Press <bpt id="p1">**</bpt>F5<ept id="p1">**</ept> or, on the <bpt id="p2">**</bpt>Debug<ept id="p2">**</ept> menu, click <bpt id="p3">**</bpt>Run/Continue<ept id="p3">**</ept>, or in the Console Pane, type <bpt id="p4">**</bpt>C<ept id="p4">**</ept> and press <bpt id="p5">**</bpt>ENTER<ept id="p5">**</ept>.</source>
          <target state="translated">請執行下列其中一個動作：按 <bpt id="p1">**</bpt>F5<ept id="p1">**</ept>、在 [偵錯] 功能表上，按一下 [執行/繼續]、在主控台窗格中輸入 <bpt id="p4">**</bpt>C<ept id="p4">**</ept>，然後按 <bpt id="p5">**</bpt>ENTER<ept id="p5">**</ept> 鍵。</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>How to display the values of variables while debugging</source>
          <target state="translated">如何在偵錯時顯示變數的值</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>You can display the current values of variables in the script as you step through the code.</source>
          <target state="translated">當您逐步執行程式碼時，您可以顯示指令碼中變數的目前值。</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>To display the values of standard variables</source>
          <target state="translated">顯示標準變數的值</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>Use one of the following methods:</source>
          <target state="translated">使用下列其中一個方法：</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>In the Script Pane, hover over the variable to display its value as a tool tip.</source>
          <target state="translated">在指令碼窗格中，將游標移到變數上，以工具提示顯示其值。</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>In the Console Pane, type the variable name and press <bpt id="p1">**</bpt>ENTER<ept id="p1">**</ept>.</source>
          <target state="translated">在主控台窗格中輸入變數名稱，然後按 <bpt id="p1">**</bpt>ENTER<ept id="p1">**</ept> 鍵。</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>All panes in ISE are always in the same scope.</source>
          <target state="translated">ISE 中的所有窗格一律會在相同範圍內。</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>Therefore, while you are debugging a script, the commands that you type in the Console Pane run in script scope.</source>
          <target state="translated">因此，當您對指令碼進行偵錯時，您在主控台窗格中輸入的命令會在指令碼範圍內執行。</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>This allows you to use the Console Pane to find the values of variables and call functions that are defined only in the script.</source>
          <target state="translated">這可讓您使用主控台窗格尋找變數的值，然後只呼叫指令碼中定義的函式。</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>To display the values of automatic variables</source>
          <target state="translated">顯示自動變數的值</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>You can use the preceding method to display the value of almost all variables while you are debugging a script.</source>
          <target state="translated">您可以使用上述方法，在對指令碼進行偵錯時顯示幾乎所有變數的值。</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>However, these methods do not work for the following automatic variables.</source>
          <target state="translated">不過，這些方法不適用於下列自動變數。</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>$_</source>
          <target state="translated">$_</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>$Input</source>
          <target state="translated">$Input</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>$MyInvocation</source>
          <target state="translated">$MyInvocation</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>$PSBoundParameters</source>
          <target state="translated">$PSBoundParameters</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>$Args</source>
          <target state="translated">$Args</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>If you try to display the value of any of these variables, you get the value of that variable for in an internal pipeline the debugger uses, not the value of the variable in the script.</source>
          <target state="translated">如果您嘗試顯示上述任何變數的值，您會取得偵錯工具所使用之內部管線中的變數值，而不是指令碼中的變數值。</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>You can work around this for a few variables ($_, $Input, $MyInvocation, $PSBoundParameters, and $Args) by using the following method:</source>
          <target state="translated">您可以對一些變數 ($_、$Input、$MyInvocation、$PSBoundParameters 和 $Args) 使用下列方法，來解決此問題：</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>In the script, assign the value of the automatic variable to a new variable.</source>
          <target state="translated">在指令碼中，將自動變數的值指派給新變數。</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>Display the value of the new variable, either by hovering over the new variable in the Script Pane, or by typing the new variable in the Console Pane.</source>
          <target state="translated">將游標移到指令碼窗格中的新變數上，或在主控台窗格中輸入新變數，以顯示新變數的值。</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>For example, to display the value of the $MyInvocation variable, in the script, assign the value to a new variable, such as $scriptname, and then hover over or type the $scriptname variable to display its value.</source>
          <target state="translated">例如，若要顯示指令碼中的 $MyInvocation 變數值，請將該值指派給新變數 (例如 $scriptname)，然後將游標移到 $scriptname 變數上或輸入 $scriptname 變數，以顯示其值。</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>See Also</source>
          <target state="translated">另請參閱</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>Using the Windows PowerShell ISE</source>
          <target state="translated">使用 Windows PowerShell ISE</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>