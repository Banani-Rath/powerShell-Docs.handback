<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-tw">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-56a7a5e" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">3010b1ce497d8a5e45ada003587d9e104eddd8b1</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">wmf\5.0\class_overview.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions" />
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">c9e180190d0e5b3fa853883744f88bc4b3bf525a</xliffext:olskeletonhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Creating Custom Types using PowerShell Classes</source>
          <target state="translated">使用 PowerShell 類別建立自訂類型</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>We’ve improved the PowerShell language for defining classes and other user-defined types by using formal syntax and semantics that are similar to other object-oriented programming languages.</source>
          <target state="translated">我們使用類似其他物件導向程式設計語言的正式語法和語意，改善了 PowerShell 語言對類別和其他使用者定義類型的定義。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>The goal is to enable developers and IT professionals to embrace PowerShell for a wider range of use cases, simplify development of PowerShell artifacts (such as DSC resources), and accelerate coverage of management surfaces.</source>
          <target state="translated">目標是要讓開發人員和 IT 專業人員能夠掌握更多面向的 PowerShell 使用案例、簡化 PowerShell 成品的開發 (例如 DSC 資源)，並擴大管理介面的涵蓋範圍。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Supported scenarios in this release</source>
          <target state="translated">本版的支援案例</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Define DSC resources and their associated types by using the PowerShell language</source>
          <target state="translated">使用 PowerShell 語言定義 DSC 資源及其相關聯類型</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Define custom types in PowerShell by using familiar object-oriented programming constructs, such as classes, properties, methods, etc.</source>
          <target state="translated">使用熟悉的物件導向程式設計建構，例如類別、屬性、方法等等，在 PowerShell 中定義自訂的類型。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Inheritance support with class in PowerShell and class base DSC resource</source>
          <target state="translated">具有 PowerShell 類別和類別基底 DSC 資源的繼承支援</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Debug types by using the PowerShell language</source>
          <target state="translated">使用 PowerShell 語言偵錯類型</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Generate and handle exceptions by using formal mechanisms, and at the right level</source>
          <target state="translated">使用正式的機制在正確的層級產生和處理例外狀況</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>