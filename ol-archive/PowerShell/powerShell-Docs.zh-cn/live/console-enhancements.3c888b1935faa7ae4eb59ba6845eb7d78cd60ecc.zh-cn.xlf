<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-cn">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-56a7a5e" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">e6653a02421e3aec3910a70c64f7cf7cecd696ab</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">wmf\5.1\features-scenarios-cache\console-enhancements.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions" />
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f3276095d515754e446148a709b21b0d36a17e65</xliffext:olskeletonhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Enhancements to the console experience</source>
          <target state="translated">针对控制台体验的增强功能</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Note: provide a proposed descriptive title and a brief description</source>
          <target state="translated">注意：提供建议的描述性标题和简短说明</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>PowerShell Console Enhancements</source>
          <target state="translated">PowerShell 控制台增强功能</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>The following changes have been made to powershell.exe to improve the console experience:</source>
          <target state="translated">对 powershell.exe 进行了以下更改以改进控制台体验：</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>VT100 support</source>
          <target state="translated">VT100 支持</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Windows 10 added support for <bpt id="p1">[</bpt>VT100 escape sequences<ept id="p1">](https://msdn.microsoft.com/en-us/library/windows/desktop/mt638032(v=vs.85).aspx)</ept>.</source>
          <target state="translated">Windows 10 添加了对 <bpt id="p1">[</bpt>VT100 转义序列<ept id="p1">](https://msdn.microsoft.com/en-us/library/windows/desktop/mt638032(v=vs.85).aspx)</ept>的支持。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>PowerShell will ignore certain VT100 formatting escape sequences when calculating table widths.</source>
          <target state="translated">计算表宽度时，PowerShell 会忽略某些 VT100 格式设置转义序列。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>PowerShell also added a new api that can be used in formatting code to determine if VT100 is supported.</source>
          <target state="translated">PowerShell 还添加了一个新 api，它可以在格式设置代码中用于确定是否支持 VT100。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>For example:</source>
          <target state="translated">例如：</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Here is a complete <bpt id="p1">[</bpt>example<ept id="p1">](https://gist.github.com/lzybkr/dcb973dccd54900b67783c48083c28f7)</ept> that can be used to highlight matches from Select-String.</source>
          <target state="translated">下面是一个完整<bpt id="p1">[</bpt>示例<ept id="p1">](https://gist.github.com/lzybkr/dcb973dccd54900b67783c48083c28f7)</ept>，可以用于突出显示来自 Select-String 的匹配项。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Save the example in a file named <ph id="ph1">`MatchInfo.format.ps1xml`</ph>, the to use it, in your profile or elsewhere, run <ph id="ph2">`Update-FormatData -Prepend MatchInfo.format.ps1xml`</ph>.</source>
          <target state="translated">将该示例保存在名为 <ph id="ph1">`MatchInfo.format.ps1xml`</ph> 的文件中，若要在配置文件或其他位置使用它，请运行 <ph id="ph2">`Update-FormatData -Prepend MatchInfo.format.ps1xml`</ph>。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Note that VT100 escape sequences are only supported starting with the Aniversary update to Windows 10, they are not supported on earlier systems.</source>
          <target state="translated">请注意，VT100 转义序列仅从针对 Windows 10 的 Aniversary 更新开始受支持，它们在早期系统上不受支持。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Vi mode support in PSReadline</source>
          <target state="translated">PSReadline 中的 Vi 模式支持</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>PSReadline<ept id="p1">](https://github.com/lzybkr/PSReadLine)</ept> adds support for vi mode.</source>
          <target state="translated"><bpt id="p1">[</bpt>PSReadline<ept id="p1">](https://github.com/lzybkr/PSReadLine)</ept> 添加了对 vi 模式的支持。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>To use vi mode, run <ph id="ph1">`Set-PSReadline -EditMode vi`</ph>.</source>
          <target state="translated">若要使用 vi 模式，请运行 <ph id="ph1">`Set-PSReadline -EditMode vi`</ph>。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Redirected stdin w/ interactive input</source>
          <target state="translated">带交互式输入的重定向 stdin</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>In earlier versions, starting PowerShell with <ph id="ph1">`powershell -File -`</ph> was required when stdin was redirected and you wanted to enter commands interactively.</source>
          <target state="translated">在早期版本中，重定向 stdin 以及你要以交互方式输入命令时，需要使用 <ph id="ph1">`powershell -File -`</ph> 启动 PowerShell。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>With WMF 5.1, this hard to discover option is no longer necessary, you can start powershell without any options, e.g. <ph id="ph1">`powershell`</ph>.</source>
          <target state="translated">借助 WMF 5.1，不再需要这一难以发现的选项，你可以在不使用任何选项的情况下启动 powershell，例如 <ph id="ph1">`powershell`</ph>。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Note that PSReadline does not currently supported redirected stdin, and the builtin commanding line editing experience with redirected stdin is extremely limited, e.g. arrow keys don't work.</source>
          <target state="translated">请注意，PSReadline 当前不支持重定向 stdin，使用重定向 stdin 的内置命令行编辑体验极其有限，例如箭头键不起作用。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>A future release of PSReadline should address this issue.</source>
          <target state="translated">PSReadline 的未来版本应该会解决此问题。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>