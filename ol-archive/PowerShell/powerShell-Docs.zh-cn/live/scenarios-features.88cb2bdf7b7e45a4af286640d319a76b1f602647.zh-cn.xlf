<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-cn">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-22243b3" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">01d7ac9815a8650f36150e36b4f6942f451dc368</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">wmf\5.1\scenarios-features.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions" />
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>New Scenarios and Features in WMF 5.1 (Preview)</source>
          <target state="translated">WMF 5.1 中的新方案和功能（预览版）</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>New Scenarios and Features in WMF 5.1 (Preview)</source>
          <target state="translated">WMF 5.1 中的新方案和功能（预览版）</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Note: This information is preliminary and subject to change.</source>
          <target state="translated">注意：此信息是预发布版本，可能会进行更改。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>PowerShell Editions</source>
          <target state="translated">PowerShell 版本</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Starting with version 5.1, PowerShell is available in different editions which denote varying feature sets and platform compatibility.</source>
          <target state="translated">从版本 5.1 开始，PowerShell 以表现出不同功能集和平台兼容性的不同版本提供。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Desktop Edition:<ept id="p1">**</ept> Built on .NET Framework and provides compatibility with scripts and modules targeting versions of PowerShell running on full footprint editions of Windows such as Server Core and Windows Desktop.</source>
          <target state="translated"><bpt id="p1">**</bpt>桌面版：<ept id="p1">**</ept>以 .NET Framework 为基础构建，提供与面向在完整功能 Windows 版本（如服务器核心和 Windows 桌面）上运行的 PowerShell 版本的脚本和模块的兼容性。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Core Edition:<ept id="p1">**</ept> Built on .NET Core and provides compatibility with scripts and modules targeting versions of PowerShell running on reduced footprint editions of Windows such as Nano Server and Windows IoT.</source>
          <target state="translated"><bpt id="p1">**</bpt>核心版：<ept id="p1">**</ept>以 .NET Core 为基础构建，提供与面向在缩减功能 Windows 版本（如 Nano Server 和 Windows IoT）上运行的 PowerShell 版本的脚本和模块的兼容性。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Learn more about using PowerShell Editions</source>
          <target state="translated">详细了解如何使用 PowerShell 版本</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Determine running edition of PowerShell</source>
          <target state="translated">确定正在运行的 PowerShell 版本</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Declare a module's compatibility to specific PowerShell versions</source>
          <target state="translated">声明模块与特定 PowerShell 版本的兼容性</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Filter Get-Module results by CompatiblePSEditions</source>
          <target state="translated">按 CompatiblePSEditions 筛选 Get-Module 结果</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Prevent script execution unless run on a comaptible edition of PowerShell</source>
          <target state="translated">阻止脚本执行，除非在 PowerShell 的兼容版本上运行</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Catalog Cmdlets</source>
          <target state="translated">目录 Cmdlet</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Two new cmdlets have been added in the <bpt id="p1">[</bpt>Microsoft.Powershell.Secuity<ept id="p1">](https://technet.microsoft.com/en-us/library/hh847877.aspx)</ept> module; these generate and validate windows catalog files.</source>
          <target state="translated">在 <bpt id="p1">[</bpt>Microsoft.Powershell.Secuity<ept id="p1">](https://technet.microsoft.com/en-us/library/hh847877.aspx)</ept> 模块中新增了两个新 cmdlet；这两个 cmdlet 可用于生成和验证 windows 目录文件。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>New-FileCatalog</source>
          <target state="translated">New-FileCatalog</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>New File catalog creates a Windows catalog file for set of folders and files.</source>
          <target state="translated">New File 目录用于为文件夹和文件集合创建 windows 目录文件。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>This catalog file contains hashes for all files in specified paths.</source>
          <target state="translated">该目录文件包含指定路径中的所有文件的哈希值。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Users can distribute the set of folders along with corresponding catalog file representing those folders.</source>
          <target state="translated">用户可以分发文件夹集合以及代表这些文件夹的对应的目录文件。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>This information is useful to validate whether any changes have been made to the folders since catalog creation time.</source>
          <target state="translated">该信息对于验证自目录创建以来是否对文件夹进行了任何更改很有用。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Catalog versions 1 and 2 are supported.</source>
          <target state="translated">支持目录版本 1 和 2。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Version 1 uses the SHA1 hashing algorithm to create file hashes; version 2 uses SHA256.</source>
          <target state="translated">版本 1 使用 SHA1 哈希算法来创建文件哈希值；版本 2 则使用 SHA256。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Catalog version 2 is not supported on <bpt id="p1">*</bpt>Windows Server 2008 R2<ept id="p1">*</ept> or <bpt id="p2">*</bpt>Windows 7<ept id="p2">*</ept>.</source>
          <target state="translated">Windows Server 2008 R2 或 Windows 7 不支持目录版本 2。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>You should use catalog version 2 on <bpt id="p1">*</bpt>Windows 8<ept id="p1">*</ept>, <bpt id="p2">*</bpt>Windows Server 2012<ept id="p2">*</ept>, and later operating systems.</source>
          <target state="translated">你应在 Windows 8、Windows Server 2012 及更高版本的操作系统上使用目录版本 2。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>This creates the catalog file.</source>
          <target state="translated">这将创建目录文件。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>To verify the integrity of catalog file (Pester.cat in above exmaple), sign it using <bpt id="p1">[</bpt>Set-AuthenticodeSignature<ept id="p1">](https://technet.microsoft.com/library/hh849819.aspx)</ept> cmdlet.</source>
          <target state="translated">若要验证目录文件（上面示例中的 Pester.cat 文件）的完整性，应使用 <bpt id="p1">[</bpt>Set-AuthenticodeSignature<ept id="p1">](https://technet.microsoft.com/library/hh849819.aspx)</ept> cmdlet 对其进行签名。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Test-FileCatalog</source>
          <target state="translated">Test-FileCatalog</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Test File catalog validates the catalog representing a set of folders.</source>
          <target state="translated">Test File 目录用于验证代表一组文件夹的目录。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>This cmdlet compares all the files hashes and their relative paths found in <bpt id="p1">*</bpt>catalog<ept id="p1">*</ept> with ones on <bpt id="p2">*</bpt>disk<ept id="p2">*</ept>.</source>
          <target state="translated">此 cmdlet 将目录中找到的所有文件的哈希值及其相对路径与磁盘中的进行比较。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>If it detects any mismatch between file hashes and paths it returns the status as <bpt id="p1">*</bpt>ValidationFailed<ept id="p1">*</ept>.</source>
          <target state="translated">如果它检测到文件哈希值和路径之间存在任何不匹配，将返回状态 ValidationFailed。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Users can retrieve all this information by using the <bpt id="p1">*</bpt>-Detailed<ept id="p1">*</ept> flag.</source>
          <target state="translated">用户可以使用 -Detailed 标志检索所有该信息。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>It also displays signing status of catalog in <bpt id="p1">*</bpt>Signature<ept id="p1">*</ept> filed which is equivalent to calling <bpt id="p2">[</bpt>Get-AuthenticodeSignature<ept id="p2">](https://technet.microsoft.com/en-us/library/hh849805.aspx)</ept> cmdlet on the catalog file.</source>
          <target state="translated">它还在“签名”字段中显示目录的签名状态，该结果与针对目录文件调用 <bpt id="p2">[</bpt>Get-AuthenticodeSignature<ept id="p2">](https://technet.microsoft.com/en-us/library/hh849805.aspx)</ept> cmdlet 的结果相同。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Users can also skip any file during validation by using the <bpt id="p1">*</bpt>-FilesToSkip<ept id="p1">*</ept> parameter.</source>
          <target state="translated">用户也可以使用 -FilesToSkip 参数在验证过程中跳过任何文件。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Module Analysis Cache</source>
          <target state="translated">模块分析缓存</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Starting with WMF 5.1, PowerShell provides control over the file that is used to cache data about a module, such as the commands it exports.</source>
          <target state="translated">从 WMF 5.1 开始，PowerShell 针对用于缓存有关模块的数据（如它导出的命令）的文件提供了控制。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>By default, this cache is stored in the file <ph id="ph1">`${env:LOCALAPPDATA}\Microsoft\Windows\PowerShell\ModuleAnalysisCache`</ph>.</source>
          <target state="translated">默认情况下，此缓存存储在文件 <ph id="ph1">`${env:LOCALAPPDATA}\Microsoft\Windows\PowerShell\ModuleAnalysisCache`</ph> 中。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>The cache is typically read at startup while searching for a command and is written on a background thread sometime after a module is imported.</source>
          <target state="translated">缓存通常在启动时进行读取（同时搜索命令），在模块导入一段时间之后在后台线程上进行写入。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>To change the default location of the cache, set the environment variable PSModuleAnalysisCachePath before starting PowerShell.</source>
          <target state="translated">若要更改缓存的默认位置，请在启动 PowerShell 之前设置环境变量 PSModuleAnalysisCachePath。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Changes to this environment variable will only affect children processes.</source>
          <target state="translated">对此环境变量进行的更改只影响子进程。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>The value should name a full path (including filename) that PowerShell has permission to create and write files.</source>
          <target state="translated">值应指定 PowerShell 有权创建和写入文件的完整路径（包括文件名）。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>To disable the file cache, set this value to an invalid location, for example:</source>
          <target state="translated">若要禁用文件缓存，请将此值设置为无效位置，例如：</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>This sets the path to an invalid device.</source>
          <target state="translated">这会将路径设置为无效设备。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Iff PowerShell can't write to the path, no error is returned, but you can see error reporting via a tracer:</source>
          <target state="translated">如果 PowerShell 无法写入路径，则不会返回任何错误，不过你可能会看到通过跟踪器进行报告的错误：</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>When writing out the cache, PowerShell will check for modules that no longer exist to avoid an unnecessarily large cache.</source>
          <target state="translated">从缓存写出时，PowerShell 会检查不再存在的模块以避免进行不必要的大型缓存。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Sometimes these checks are not desirable, in which case you can turn them off by setting</source>
          <target state="translated">有时不需要这些检查，在这种情况下可以通过设置关闭它们</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Setting this environment variable will take effect immediately in the current process.</source>
          <target state="translated">此环境变量的设置会在当前进程中立即生效。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Specifying module version</source>
          <target state="translated">指定模块版本</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>In WMF 5.1, <ph id="ph1">`using module`</ph> behaves the same way as other module-related constructions in PowerShell.</source>
          <target state="translated">在 WMF 5.1 中，<ph id="ph1">`using module`</ph> 的行为方式与 PowerShell 中其他与模块相关的构造相同。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Previously, you had no way to specify a particular module version; if there were multiple versions present, this resulted in an error.</source>
          <target state="translated">以前无法指定特定模块版本；如果有多个版本存在，则这会导致错误。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>In WMF 5.1:</source>
          <target state="translated">在 WMF 5.1 中：</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>You can use <ph id="ph1">`ModuleSpecification`</ph> <bpt id="p1">[</bpt>hashtable<ept id="p1">](https://msdn.microsoft.com/en-us/library/jj136290(v=vs.85).aspx)</ept>.</source>
          <target state="translated">可以使用 <ph id="ph1">`ModuleSpecification`</ph> <bpt id="p1">[</bpt>哈希表<ept id="p1">](https://msdn.microsoft.com/en-us/library/jj136290(v=vs.85).aspx)</ept>。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>This hashtable has the same format as <ph id="ph1">`Get-Module -FullyQualifiedName`</ph>.</source>
          <target state="translated">此哈希表具有与 <ph id="ph1">`Get-Module -FullyQualifiedName`</ph> 相同的格式。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Example:</source>
          <target state="translated">例如：</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>If there are multiple versions of the module, PowerShell uses the <bpt id="p1">**</bpt>same resolution logic<ept id="p1">**</ept> as <ph id="ph1">`Import-Module`</ph> and doesn't return an error--the same behavior as <ph id="ph2">`Import-Module`</ph> and <ph id="ph3">`Import-DscResource`</ph>.</source>
          <target state="translated">如果有多个版本的模块，则 PowerShell 会使用与 <ph id="ph1">`Import-Module`</ph> <bpt id="p1">**</bpt>相同的解析逻辑<ept id="p1">**</ept>，不会返回错误 - - 行为与 <ph id="ph2">`Import-Module`</ph> 和 <ph id="ph3">`Import-DscResource`</ph> 相同。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Improvements to Pester</source>
          <target state="translated">针对 Pester 的改进</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>In WMF 5.1, the version of Pester that ships with PowerShell has been updated from 3.3.5 to 3.4.0, with the addition of commit https://github.com/pester/Pester/pull/484/commits/3854ae8a1f215b39697ac6c2607baf42257b102e, which enables better behavior for Pester on Nano.</source>
          <target state="translated">在 WMF 5.1 中，PowerShell 随附的 Pester 版本从 3.3.5 更新到 3.4.0，并且添加了一个提交：https://github.com/pester/Pester/pull/484/commits/3854ae8a1f215b39697ac6c2607baf42257b102e，从而改善了 Nano 上的 Pester 的行为。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>You can review the changes in versions 3.3.5 to 3.4.0 by inspecting the ChangeLog.md file at: https://github.com/pester/Pester/blob/master/CHANGELOG.md</source>
          <target state="translated">你可以通过检查 https://github.com/pester/Pester/blob/master/CHANGELOG.md 上的 ChangeLog.md 文件查看从版本 3.3.5 到 3.4.0 的更改</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>