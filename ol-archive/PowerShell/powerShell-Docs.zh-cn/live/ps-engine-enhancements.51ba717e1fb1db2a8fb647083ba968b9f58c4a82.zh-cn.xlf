<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-cn">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-4bd6fc0" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1b35a25312b44d14ec8771be9e17aaa43e270b61</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">wmf\5.1\features-scenarios-cache\ps-engine-enhancements.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions" />
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">053dd0510b5394003df383d6b0689e0f158b3898</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">597120c728c2652f0003fa53ca65d3c20b8078e5</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>PowerShell Engine Enhancements</source>
          <target state="translated">PowerShell 引擎增强功能</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>PowerShell Engine Enhancements</source>
          <target state="translated">PowerShell 引擎增强功能</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>The following improvements to the core PowerShell engine have been implemented for PowerShell 5.1:</source>
          <target state="translated">对于 PowerShell 5.1，实现了针对核心 PowerShell 引擎的以下改进：</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Performance</source>
          <target state="translated">性能</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Performance has improved in some important areas:</source>
          <target state="translated">性能在一些重要方面得到了改进：</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Startup</source>
          <target state="translated">启动</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Pipelining to cmdlets like ForEach-Object and Where-Object is approximately 50% faster</source>
          <target state="translated">向 ForEach-Object 和 Where-Object 这类 cmdlet 进行管道传递的速度大约提供了 50%</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Some example improvements (results may vary depending on your hardware):</source>
          <target state="translated">一些示例改进（结果可能因你的硬件而异）：</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Scenario</source>
          <target state="translated">方案</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>5.0 Time (ms)</source>
          <target state="translated">5.0 时间（毫秒）</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>5.1 Time (ms)</source>
          <target state="translated">5.1 时间（毫秒）</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>900</source>
          <target state="translated">900</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>250</source>
          <target state="translated">250</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>First ever PowerShell run:</source>
          <target state="translated">PowerShell 首次运行：</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>30000</source>
          <target state="translated">30000</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>13000</source>
          <target state="translated">13000</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Command analysis cache built:</source>
          <target state="translated">构建的命令分析缓存：</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>7000</source>
          <target state="translated">7000</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>520</source>
          <target state="translated">520</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>1400</source>
          <target state="translated">1400</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>750</source>
          <target state="translated">750</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>One change related to startup may impact some (unsupported) scenarios.</source>
          <target state="translated">与启动相关的一个更改可能会影响某些（不支持的）方案。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>PowerShell no longer reads the files <ph id="ph1">`$pshome\*.ps1xml`</ph> - these files have been converted to C# to avoid some file and CPU overhead of processing the XML files.</source>
          <target state="translated">PowerShell 不再读取文件 <ph id="ph1">`$pshome\*.ps1xml`</ph> - 这些文件已转换为 C#，以避免处理 XML 文件的某些文件和 CPU 开销。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>The files still exist to support V2 side-by-side, so if you change the file contents, it will not have any effect to V5, only V2.</source>
          <target state="translated">这些文件仍存在，以同时支持 V2，因此如果更改文件内容，则不会对 V5 产生任何影响，只会影响 V2。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Note that changing the contents of these files was never a supported scenario.</source>
          <target state="translated">请注意，更改这些文件的内容从来都不是受支持的方案。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Another visible change is how PowerShell caches the exported commands and other information for modules that are installed on a system.</source>
          <target state="translated">另一个显著更改是 PowerShell 如何为系统上安装的模块缓存导出的命令和其他信息。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Previous, this cache was stored in the directory <ph id="ph1">`$env:LOCALAPPDATA\Microsoft\Windows\PowerShell\CommandAnalysis`</ph>.</source>
          <target state="translated">以前，此缓存存储在目录 <ph id="ph1">`$env:LOCALAPPDATA\Microsoft\Windows\PowerShell\CommandAnalysis`</ph> 中。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>In WMF 5.1, the cache is a single file <ph id="ph1">`$env:LOCALAPPDATA\Microsoft\Windows\PowerShell\ModuleAnalysisCache`</ph>.</source>
          <target state="translated">在 WMF 5.1 中，此缓存是单个文件 <ph id="ph1">`$env:LOCALAPPDATA\Microsoft\Windows\PowerShell\ModuleAnalysisCache`</ph>。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>analysis_cache.md<ept id="p1">]()</ept> for more details.</source>
          <target state="translated">有关详细信息，请参阅 <bpt id="p1">[</bpt>analysis_cache.md<ept id="p1">]()</ept>。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Starting with version 5.1, PowerShell is available in different editions which denote varying feature sets and platform compatibility.</source>
          <target state="translated">从版本 5.1 开始，PowerShell 以表现出不同功能集和平台兼容性的不同版本提供。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Bug Fixes</source>
          <target state="translated">Bug 修复</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>The following notable bugs were fixed:</source>
          <target state="translated">修复了以下值得注意的 bug：</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Module auto-discovery fully honors</source>
          <target state="translated">模块自动发现完全遵循</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Module auto-discovery (loading modules automatically without an explicit Import-Module when calling a command) was introduced in WMF3.</source>
          <target state="translated">WMF3 中引入了模块自动发现（调用命令时自动加载模块而无需使用显式 Import-Module）。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>When introduced, PowerShell checked for commands in <ph id="ph1">`$PSHome\Modules`</ph> before using <ph id="ph2">`$env:PSModulePath`</ph>.</source>
          <target state="translated">引入时，PowerShell 会在使用 <ph id="ph2">`$env:PSModulePath`</ph> 之前检查 <ph id="ph1">`$PSHome\Modules`</ph> 中的命令。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>WMF5.1 changes this behavior to honor <ph id="ph1">`$env:PSModulePath`</ph> completely.</source>
          <target state="translated">WMF5.1 将此行为更改为完全遵循 <ph id="ph1">`$env:PSModulePath`</ph>。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>This allows for a user-authored module that defines commands provided by PowerShell (e.g. <ph id="ph1">`Get-ChildItem`</ph>) to be auto-loaded and correctly overriding the built-in command.</source>
          <target state="translated">这允许定义 PowerShell 提供的命令（例如 <ph id="ph1">`Get-ChildItem`</ph>）的用户创作模块自动加载并正确重写内置命令。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>File redirection no longer hard-codes</source>
          <target state="translated">文件重定向不再硬编码</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>In all previous versions of PowerShell, it was impossible to control the file encoding used by the file redirection operator, e.g. <ph id="ph1">`Get-ChildItem &gt; out.txt`</ph> because PowerShell added <ph id="ph2">`-Encoding Unicode`</ph>.</source>
          <target state="translated">在所有以前版本的 PowerShell 中，无法控制文件重定向运算符使用的文件编码（例如 <ph id="ph1">`Get-ChildItem &gt; out.txt`</ph>），因为 PowerShell 添加了 <ph id="ph2">`-Encoding Unicode`</ph>。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Starting with WMF 5.1, you can now change the file encoding of redirection by setting <ph id="ph1">`$PSDefaultParameterValues`</ph>, e.g.</source>
          <target state="translated">从 WMF 5.1 开始，现在可以通过设置 <ph id="ph1">`$PSDefaultParameterValues`</ph> 来更改重定向的文件编码，例如</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Fixed a regression in accessing members of</source>
          <target state="translated">修复了成员访问中的回归</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>A regression introduced in WMF5 broke accessing members of <ph id="ph1">`System.Reflection.RuntimeType`</ph>, e.g. <ph id="ph2">`[int].ImplementedInterfaces`</ph>.</source>
          <target state="translated">WMF5 中引入的回归会破坏 <ph id="ph1">`System.Reflection.RuntimeType`</ph> 的成员访问（例如 <ph id="ph2">`[int].ImplementedInterfaces`</ph>）。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>This bug has been fixed in WMF 5.1.</source>
          <target state="translated">WMF 5.1 中已修复了此 bug。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Fixed some issues with COM objects</source>
          <target state="translated">修复了与 COM 对象相关的一些问题</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>WMF5 introduced a new COM binder for invoking methods on COM objects and accessing properties of COM objects.</source>
          <target state="translated">WMF5 引入了一个新 COM 绑定器，用于对 COM 对象调用方法和访问 COM 对象的属性。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>This new binder improved performance significantly but also introduced some bugs which have been fixed in WMF 5.1.</source>
          <target state="translated">这一新绑定器显著提高了性能，但是同样引入了一些 bug，在 WMF 5.1 中已修复了它们。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Argument conversions were not always performed correctly</source>
          <target state="translated">参数转换并不总是正确执行</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>In the following example:</source>
          <target state="translated">在以下示例中：</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>The SendKeys method expects a string, but PowerShell did not convert the char to a string, deferring the conversion to IDispatch::Invoke, which uses VariantChangeType to do the conversion, which in this example resulted in sending the keys '1', '7', and '3' instead of the expected Volume.Mute key.</source>
          <target state="translated">SendKeys 方法需要一个字符串，但是 PowerShell 未将字符转换为字符串，而是将转换延迟到 IDispatch::Invoke，后者使用 VariantChangeType 进行转换，在此示例中，这导致发送键“1”、“7”和“3”而不是预期的 Volume.Mute 键。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Enumerable COM objects not always handled correctly</source>
          <target state="translated">可枚举 COM 对象并不总是正确处理</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>PowerShell normally enumerates most enumerable objects, but a regression introduced in WMF5 prevented the enumeration of COM objects that implement IEnumerable.</source>
          <target state="translated">PowerShell 通常可枚举大多数可枚举对象，但是在 WMF5 中引入的回归会阻止实现 IEnumerable 的 COM 对象的枚举。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>For example:</source>
          <target state="translated">例如：</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>In the above example, WMF5 incorrectly wrote the Scripting.Dictionary to the pipeline instead of enumerating the key value pairs.</source>
          <target state="translated">在上面的示例中，WMF5 错误地将 Scripting.Dictionary 写入管道，而不是枚举键值对。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>was not allowed inside classes</source>
          <target state="translated">不允许在类中使用</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>WMF5 introduced classes with validation of type literals used in classes.</source>
          <target state="translated">WMF5 引入了会对类中使用的类型文本进行验证的类。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>looks like a type literal but is not a true .NET type.</source>
          <target state="translated">类似于类型文本，但不是成为真正的 .NET 类型。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>WMF5 incorrectly reported an error on <ph id="ph1">`[ordered]`</ph> inside a class:</source>
          <target state="translated">WMF5 错误地对类中的 <ph id="ph1">`[ordered]`</ph> 报告错误：</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Help on about topics with multiple versions does not work</source>
          <target state="translated">有关涉及多个版本的主题的帮助不起作用</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>Before WMF5.1, if you had multiple versions of a module installed and they all shared a help topic, e.g. about_PSReadline, <ph id="ph1">`help about_PSReadline`</ph> would return multiple topics with no obvious way to view the real help.</source>
          <target state="translated">在 WMF5.1 之前，如果安装了模块的多个版本，并且它们都共享帮助主题（例如 about_PSReadline），则 <ph id="ph1">`help about_PSReadline`</ph> 会返回多个主题，没有明确的方法来查看实际帮助。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>WMF5.1 fixes this by returning the help for the latest version of the topic.</source>
          <target state="translated">WMF5.1 通过返回有关最新版本主题的帮助来解决此问题。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>Get-Help does not provide a way to specify which version you want help for, the workaround is to navigate to the modules directory and view the help directly with a tool like your favorite editor.</source>
          <target state="translated">Get-Help 未提供用于指定你希望获取相关帮助的版本的方法，解决方法是导航到模块目录，然后使用工具（如自己喜爱的编辑器）来直接查看帮助。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>