<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-cn">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-56a7a5e" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">0660867e6e7c7a93a8ca80d76f22db7fd86f8826</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">wmf\5.0\debug_overview.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions" />
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">2cbcfe51a3d4ba522af10d8c661354924be413a2</xliffext:olskeletonhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Improvements in PowerShell Script Debugging</source>
          <target state="translated">PowerShell 脚本调试中的改进</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>A number of improvements were made in PowerShell 5.0 to enhance the debugging experience:</source>
          <target state="translated">在 PowerShell 5.0 中已进行了大量改进来增强调试体验：</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Break All</source>
          <target state="translated">全部中断</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>The PowerShell console and Windows PowerShell ISE now allow you to break into the debugger for running scripts.</source>
          <target state="translated">PowerShell 控制台和 Windows PowerShell ISE 现在可以中断调试器，而运行脚本。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>This works in both local and remote sessions.</source>
          <target state="translated">这在本地和远程会话中很有效。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>In the console, press <bpt id="p1">**</bpt>Ctrl+Break<ept id="p1">**</ept>.</source>
          <target state="translated">在控制台中，按 <bpt id="p1">**</bpt>Ctrl+Break<ept id="p1">**</ept>。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>In ISE, press <bpt id="p1">**</bpt>Ctrl+B<ept id="p1">**</ept>, or use the <bpt id="p2">**</bpt>Debug -&gt; Break All<ept id="p2">**</ept> menu command.</source>
          <target state="translated">在 ISE 中，按 <bpt id="p1">**</bpt>Ctrl+B<ept id="p1">**</ept>，或使用“调试”-&gt;“全部中断”菜单命令。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Remote debugging and remote file editing in Windows PowerShell ISE</source>
          <target state="translated">Windows PowerShell ISE 中的远程调试和远程文件编辑</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Windows PowerShell ISE now lets you open and edit files in a remote session by running the PSEdit command.</source>
          <target state="translated">Windows PowerShell ISE 现在可以通过运行 PSEdit 命令，在远程会话中打开并编辑文件。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>For example, you can open a file for editing from the command line in a remote session as follows:</source>
          <target state="translated">例如，你可以在远程会话中打开文件并从命令行进行编辑，如下所示：</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>In addition, you can now edit and save changes in a remote file that is automatically opened in Windows PowerShell ISE when you hit a breakpoint.</source>
          <target state="translated">此外，你现在还可以在远程文件中编辑并保存更改，远程文件是你命中断点时在 Windows PowerShell ISE 中自动打开的文件。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Now, you can debug a script file that is running on a remote computer, edit the file to fix an error, and then rerun the modified script.</source>
          <target state="translated">现在，你可以调试在远程计算机上运行的脚本文件，编辑该文件以修复错误，然后重新运行修改后的脚本。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Advanced Script Debugging</source>
          <target state="translated">高级脚本调试</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>There are new, advanced debugging features that let you attach to any local computer process that has loaded Windows PowerShell, and debug arbitrary runspaces in that process.</source>
          <target state="translated">新的高级调试功能使你能够附加到已加载 Windows PowerShell 的任何本地计算机进程，并在该进程中调试任意运行空间。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Runspace Debugging</source>
          <target state="translated">运行空间调试</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>New cmdlets have been added that let you list current runspaces in a process, and attach the Windows PowerShell console or ISE debugger to that runspace for script debugging:</source>
          <target state="translated">已添加的新 cmdlet 使你能够列出某个进程中的当前运行空间，并将 Windows PowerShell 控制台或 ISE 调试器附加到该运行空间进行脚本调试：</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Get-Runspace</source>
          <target state="translated">Get-Runspace</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Debug-Runspace</source>
          <target state="translated">Debug-Runspace</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Enable-RunspaceDebug</source>
          <target state="translated">Enable-RunspaceDebug</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Disable-RunspaceDebug</source>
          <target state="translated">Disable-RunspaceDebug</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Get-RunspaceDebug</source>
          <target state="translated">Get-RunspaceDebug</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Attach to Process hosting PowerShell</source>
          <target state="translated">附加到承载 PowerShell 的进程</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>You can now attach to any computer process that has Windows PowerShell loaded.</source>
          <target state="translated">你现在可以附加到已加载 Windows PowerShell 的任何计算机进程。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>You do this by entering into an interactive session with the process, similarly to how you enter into an interactive remote session by running the Enter-PSSession cmdlet:</source>
          <target state="translated">可通过输入与该进程交互的会话执行此操作，类似于你通过运行 Enter-PSSession cmdlet 输入交互式远程会话的操作方式。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Enter-PSHostProcess</source>
          <target state="translated">Enter-PSHostProcess</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Exit-PSHostProcess</source>
          <target state="translated">Exit-PSHostProcess</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>