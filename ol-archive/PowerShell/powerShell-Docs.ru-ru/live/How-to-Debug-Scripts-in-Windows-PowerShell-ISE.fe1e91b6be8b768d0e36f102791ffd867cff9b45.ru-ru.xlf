<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ru-ru">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-22243b3" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">080cbfd63838472d9d5405e4b232cda1cc1d028a</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">scripting\core-powershell\ise\How-to-Debug-Scripts-in-Windows-PowerShell-ISE.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions" />
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>How to Debug Scripts in Windows PowerShell ISE</source>
          <target state="translated">Отладка сценариев в интегрированной среде сценариев Windows PowerShell</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>How to Debug Scripts in Windows PowerShell ISE</source>
          <target state="translated">Отладка сценариев в интегрированной среде сценариев Windows PowerShell</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>This topic describes how to debug scripts on a local computer by using the Windows PowerShellÂ® Integrated Scripting Environment (ISE) visual debugging features.</source>
          <target state="translated">В этой статье описано, как выполнять отладку сценариев на локальном компьютере с помощью визуальных средств отладки интегрированной среды сценариев Windows PowerShell® (ISE).</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>How to manage breakpoints<ept id="p1">](#bkmk_1)</ept><ph id="ph1">
</ph><bpt id="p2">[</bpt>How to manage a debugging session<ept id="p2">](#bkmk_2)</ept><ph id="ph2">
</ph><bpt id="p3">[</bpt>How to step over, step into, and step out while debugging<ept id="p3">](#bkmk_3)</ept><ph id="ph3">
</ph><bpt id="p4">[</bpt>How to display the values of variables while debugging<ept id="p4">](#bkmk_4)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Управление точками останова<ept id="p1">](#bkmk_1)</ept><ph id="ph1">
</ph><bpt id="p2">[</bpt>Управление сеансом отладки<ept id="p2">](#bkmk_2)</ept><ph id="ph2">
</ph><bpt id="p3">[</bpt>Выполнение шагов с обходом, заходом и выходом во время отладки<ept id="p3">](#bkmk_3)</ept><ph id="ph3">
</ph><bpt id="p4">[</bpt>Отображение значений переменных при отладке<ept id="p4">](#bkmk_4)</ept></target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>How to manage breakpoints</source>
          <target state="translated">Управление точками останова</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>A breakpoint is a designated spot in a script where you would like operation to pause so that you can examine the current state of the variables and the environment in which your script is running.</source>
          <target state="translated">Точка останова — это назначенная точка в сценарии, на которой выполнение временно останавливается, чтобы можно было проверить текущее состояние переменных и среды, в которой выполняется сценарий.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Once your script is paused by a breakpoint, you can run commands in the Console Pane to examine the state of your script.</source>
          <target state="translated">После приостановки сценария в точке останова можно выполнить команды в области консоли для проверки его состояния.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>You can output variables or run other commands.</source>
          <target state="translated">Можно выводить переменные и выполнять другие команды.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>You can even modify the value of any variables that are visible to the context of the currently running script.</source>
          <target state="translated">Можно даже изменять значения любых переменных, видимых в контексте текущего выполняемого сценария.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>After you have examined what you want to see, you can resume operation of the script.</source>
          <target state="translated">После получения нужных сведений можно продолжить выполнение сценария.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>You can set three types of breakpoints in the Windows PowerShell debugging environment:</source>
          <target state="translated">В среде отладки Windows PowerShell можно установить три вида точек останова:</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Line breakpoint<ept id="p1">**</ept>.</source>
          <target state="translated"><bpt id="p1">**</bpt>Точка останова по строке<ept id="p1">**</ept>.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>The script pauses when the designated line is reached during the operation of the script</source>
          <target state="translated">Сценарий приостанавливается при достижении назначенной строки.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Variable breakpoint.</source>
          <target state="translated">Точка останова по переменной.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>The script pauses whenever the designated variable’s value changes.</source>
          <target state="translated">Сценарий приостанавливается при изменении значения, назначенного переменной.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Command breakpoint.</source>
          <target state="translated">Точка останова по команде.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>The script pauses whenever the designated command is about to be run during the operation of the script.</source>
          <target state="translated">Сценарий приостанавливается перед выполнением назначенной команды.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>It can include parameters to further filter the breakpoint to only the operation you want.</source>
          <target state="translated">Можно указать параметры, чтобы отфильтровать для точки останова только нужную операцию.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>The command can also be a function you created.</source>
          <target state="translated">Команда также может быть созданной вами функцией.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Of these, in the Windows PowerShell ISE debugging environment, only line breakpoints can be set by using the menu or the keyboard shortcuts.</source>
          <target state="translated">В среде отладки интегрированной среды сценариев Windows PowerShell только точки останова по строке можно задать с помощью меню или сочетаний клавиш.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>The other two types of breakpoints can be set, but they are set from the Console Pane by using the <bpt id="p1">[</bpt>Set-PSBreakpoint [m2]<ept id="p1">](https://technet.microsoft.com/en-us/library/88d2d9ad-17dc-44ae-99aa-f841125b9dc8)</ept> cmdlet.</source>
          <target state="translated">Точки останова двух других типов также можно задать, но в области консоли, используя командлет <bpt id="p1">[</bpt>Set-PSBreakpoint [m2]<ept id="p1">](https://technet.microsoft.com/en-us/library/88d2d9ad-17dc-44ae-99aa-f841125b9dc8)</ept>.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>This section describes how you can perform debugging tasks in Windows PowerShell ISE by using the menus where available, and perform a wider range of commands from the Console Pane by using scripting.</source>
          <target state="translated">В этом разделе описано, как выполнять задачи отладки в интегрированной среде сценариев Windows PowerShell, по возможности используя меню, и выполнять более широкий набор команд из области консоли, используя сценарии.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>To set a breakpoint</source>
          <target state="translated">Задание точки останова</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>A breakpoint can be set in a script only after it has been saved.</source>
          <target state="translated">Точку останова можно задать в сценарии только после его сохранения.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Right<ph id="ph1">\-</ph>click the line where you want to set a line breakpoint, and then click <bpt id="p1">**</bpt>Toggle Breakpoint<ept id="p1">**</ept>.</source>
          <target state="translated">Щелкните правой кнопкой мыши строку, в которой нужно установить точку останова, и выберите пункт <bpt id="p1">**</bpt>Точка останова<ept id="p1">**</ept>.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Or, click the line where you want to set a line breakpoint, and press <bpt id="p1">**</bpt>F9<ept id="p1">**</ept> or, on the <bpt id="p2">**</bpt>Debug<ept id="p2">**</ept> menu, click <bpt id="p3">**</bpt>Toggle Breakpoint<ept id="p3">**</ept>.</source>
          <target state="translated">Другой вариант: щелкните строку, где нужно задать точку останова, и нажмите клавишу <bpt id="p1">**</bpt>F9<ept id="p1">**</ept> либо выберите <bpt id="p3">**</bpt>Точка останова<ept id="p3">**</ept> в меню <bpt id="p2">**</bpt>Отладка<ept id="p2">**</ept>.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>The following script is an example of how you can set a variable breakpoint from the Console Pane by using the <bpt id="p1">[</bpt>Set-PSBreakpoint<ept id="p1">](https://technet.microsoft.com/en-us/library/6afd5d2c-a285-4796-8607-3cbf49471420)</ept> cmdlet.</source>
          <target state="translated">Следующий сценарий — пример создания точки останова по переменной из области консоли с помощью командлета <bpt id="p1">[</bpt>Set-PSBreakpoint<ept id="p1">](https://technet.microsoft.com/en-us/library/6afd5d2c-a285-4796-8607-3cbf49471420)</ept>:</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>List all breakpoints</source>
          <target state="translated">Перечисление всех точек останова</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Displays all breakpoints in the current Windows PowerShellÂ® session.</source>
          <target state="translated">Отображает все точки останова в текущем сеансе Windows PowerShell®.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>On the <bpt id="p1">**</bpt>Debug<ept id="p1">**</ept> menu, click <bpt id="p2">**</bpt>List Breakpoints<ept id="p2">**</ept>.</source>
          <target state="translated">В меню <bpt id="p1">**</bpt>Отладка<ept id="p1">**</ept> выберите пункт <bpt id="p2">**</bpt>Вывести список точек останова<ept id="p2">**</ept>.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>The following script is an example of how you can list all breakpoints from the Console Pane by using the <bpt id="p1">[</bpt>Get-PSBreakpoint<ept id="p1">](https://technet.microsoft.com/en-us/library/0bf48936-00ab-411c-b5e0-9b10a812a3c6)</ept> cmdlet.</source>
          <target state="translated">Следующий сценарий — пример перечисления всех точек останова из области консоли с помощью командлета <bpt id="p1">[</bpt>Get-PSBreakpoint<ept id="p1">](https://technet.microsoft.com/en-us/library/0bf48936-00ab-411c-b5e0-9b10a812a3c6)</ept>:</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Remove a breakpoint</source>
          <target state="translated">Удаление точки останова</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Removing a breakpoint deletes it.</source>
          <target state="translated">Удаляет указанную точку останова.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>If you think you might want to use it again later, consider <bpt id="p1">[</bpt>disabling<ept id="p1">](#bkmk_disable)</ept> it instead.</source>
          <target state="translated">Если вы считаете, что точка останова может понадобиться в будущем, лучше <bpt id="p1">[</bpt>отключите<ept id="p1">](#bkmk_disable)</ept> ее.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Right<ph id="ph1">\-</ph>click the line where you want to remove a breakpoint, and then click <bpt id="p1">**</bpt>Toggle Breakpoint<ept id="p1">**</ept>.</source>
          <target state="translated">Щелкните правой кнопкой мыши строку, в которой нужно удалить точку останова, и выберите пункт <bpt id="p1">**</bpt>Точка останова<ept id="p1">**</ept>.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Or, click the line where you want to remove a breakpoint, and on the <bpt id="p1">**</bpt>Debug<ept id="p1">**</ept> menu, click <bpt id="p2">**</bpt>Toggle Breakpoint<ept id="p2">**</ept>.</source>
          <target state="translated">Другой вариант: щелкните строку, где нужно удалить точку останова, и выберите пункт <bpt id="p2">**</bpt>Точка останова<ept id="p2">**</ept> в меню <bpt id="p1">**</bpt>Отладка<ept id="p1">**</ept>.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>The following script is an example of how to remove a breakpoint with a specified ID from the Console Pane by using the <bpt id="p1">[</bpt>Remove-PSBreakpoint<ept id="p1">](https://technet.microsoft.com/en-us/library/4c877a80-0ea0-4790-9281-88c08ef0ddd6)</ept> cmdlet.</source>
          <target state="translated">Следующий сценарий — пример удаления точки останова с указанным идентификатором из области консоли с помощью командлета <bpt id="p1">[</bpt>Remove-PSBreakpoint<ept id="p1">](https://technet.microsoft.com/en-us/library/4c877a80-0ea0-4790-9281-88c08ef0ddd6)</ept>:</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Remove All Breakpoints</source>
          <target state="translated">Удаление всех точек останова</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>To remove all breakpoints defined in the current session, on the <bpt id="p1">**</bpt>Debug<ept id="p1">**</ept> menu, click <bpt id="p2">**</bpt>Remove All Breakpoints<ept id="p2">**</ept>.</source>
          <target state="translated">Чтобы удалить все точки останова, определенные в текущем сеансе, выберите команду <bpt id="p2">**</bpt>Удалить все точки останова<ept id="p2">**</ept> в меню <bpt id="p1">**</bpt>Отладка<ept id="p1">**</ept>.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>The following script is an example of how to remove all breakpoints from the Console Pane by using the <bpt id="p1">[</bpt>Remove-PSBreakpoint<ept id="p1">](https://technet.microsoft.com/en-us/library/4c877a80-0ea0-4790-9281-88c08ef0ddd6)</ept> cmdlet.</source>
          <target state="translated">Следующий сценарий — пример удаления всех точек останова из области консоли с помощью командлета <bpt id="p1">[</bpt>Remove-PSBreakpoint<ept id="p1">](https://technet.microsoft.com/en-us/library/4c877a80-0ea0-4790-9281-88c08ef0ddd6)</ept>:</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Disable a Breakpoint</source>
          <target state="translated">Отключение точки останова</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Disabling a breakpoint does not remove it; it turns it off until it is enabled.</source>
          <target state="translated">Отключение точки не приводит к ее удалению; она просто остается неактивной, пока не будет включена.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>To disable a specific line breakpoint, right<ph id="ph1">\-</ph>click the line where you want to disable a breakpoint, and then click <bpt id="p1">**</bpt>Disable Breakpoint<ept id="p1">**</ept>.</source>
          <target state="translated">Чтобы отключить точку останова в определенной строке, щелкните эту строку правой кнопкой мыши и выберите команду <bpt id="p1">**</bpt>Отключить точку останова<ept id="p1">**</ept>.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Or, click the line where you want to disable a breakpoint, and press <bpt id="p1">**</bpt>F9<ept id="p1">**</ept> or, on the <bpt id="p2">**</bpt>Debug<ept id="p2">**</ept> menu, click <bpt id="p3">**</bpt>Disable Breakpoint<ept id="p3">**</ept>.</source>
          <target state="translated">Другой вариант: щелкните строку, где нужно отключить точку останова, и нажмите клавишу <bpt id="p1">**</bpt>F9<ept id="p1">**</ept> либо выберите <bpt id="p3">**</bpt>Отключить точку останова<ept id="p3">**</ept> в меню <bpt id="p2">**</bpt>Отладка<ept id="p2">**</ept>.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>The following script is an example of how you can remove a breakpoint with a specified ID from the Console Pane by using the <bpt id="p1">[</bpt>Disable-PSBreakpoint<ept id="p1">](https://technet.microsoft.com/en-us/library/d4974e9b-0aaa-4e20-b87f-f599a413e4e8)</ept> cmdlet.</source>
          <target state="translated">Следующий сценарий — пример отключения точки останова с указанным идентификатором из области консоли с помощью командлета <bpt id="p1">[</bpt>Disable-PSBreakpoint<ept id="p1">](https://technet.microsoft.com/en-us/library/d4974e9b-0aaa-4e20-b87f-f599a413e4e8)</ept>:</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Disable All Breakpoints</source>
          <target state="translated">Отключение всех точек останова</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Disabling a breakpoint does not remove it; it turns it off until it is enabled.</source>
          <target state="translated">Отключение точки не приводит к ее удалению; она просто остается неактивной, пока не будет включена.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>To disable all breakpoints in the current session, on the <bpt id="p1">**</bpt>Debug<ept id="p1">**</ept> menu, click <bpt id="p2">**</bpt>Disable all Breakpoints<ept id="p2">**</ept>.</source>
          <target state="translated">Чтобы отключить все точки останова в текущем сеансе, выберите команду <bpt id="p2">**</bpt>Отключить все точки останова<ept id="p2">**</ept> в меню <bpt id="p1">**</bpt>Отладка<ept id="p1">**</ept>.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>The following script is an example of how you can disable all breakpoints from the Console Pane by using the <bpt id="p1">[</bpt>Disable-PSBreakpoint<ept id="p1">](https://technet.microsoft.com/en-us/library/d4974e9b-0aaa-4e20-b87f-f599a413e4e8)</ept> cmdlet.</source>
          <target state="translated">Следующий сценарий — пример отключения всех точек останова из области консоли с помощью командлета <bpt id="p1">[</bpt>Disable-PSBreakpoint<ept id="p1">](https://technet.microsoft.com/en-us/library/d4974e9b-0aaa-4e20-b87f-f599a413e4e8)</ept>:</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Enable a Breakpoint</source>
          <target state="translated">Включение точки останова</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>To enable a specific breakpoint, right<ph id="ph1">\-</ph>click the line where you want to enable a breakpoint, and then click <bpt id="p1">**</bpt>Enable Breakpoint<ept id="p1">**</ept>.</source>
          <target state="translated">Чтобы включить точку останова в определенной строке, щелкните эту строку правой кнопкой мыши и выберите команду <bpt id="p1">**</bpt>Включить точку останова<ept id="p1">**</ept>.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Or, click the line where you want to enable a breakpoint, and then press <bpt id="p1">**</bpt>F9<ept id="p1">**</ept> or, on the <bpt id="p2">**</bpt>Debug<ept id="p2">**</ept> menu, click <bpt id="p3">**</bpt>Enable Breakpoint<ept id="p3">**</ept>.</source>
          <target state="translated">Другой вариант: щелкните строку, где нужно включить точку останова, и нажмите клавишу <bpt id="p1">**</bpt>F9<ept id="p1">**</ept> либо выберите <bpt id="p3">**</bpt>Включить точку останова<ept id="p3">**</ept> в меню <bpt id="p2">**</bpt>Отладка<ept id="p2">**</ept>.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>The following script is an example of how you can enable specific breakpoints from the Console Pane by using the <bpt id="p1">[</bpt>Enable-PSBreakpoint<ept id="p1">](https://technet.microsoft.com/en-us/library/739e1091-3b3f-405f-a428-bec7543e5df0)</ept> cmdlet.</source>
          <target state="translated">Следующий сценарий — пример включения отдельных точек останова из области консоли с помощью командлета <bpt id="p1">[</bpt>Enable-PSBreakpoint<ept id="p1">](https://technet.microsoft.com/en-us/library/739e1091-3b3f-405f-a428-bec7543e5df0)</ept>:</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Enable All Breakpoints</source>
          <target state="translated">Включение всех точек останова</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>To enable all breakpoints defined in the current session, on the <bpt id="p1">**</bpt>Debug<ept id="p1">**</ept> menu, click <bpt id="p2">**</bpt>Enable all Breakpoints<ept id="p2">**</ept>.</source>
          <target state="translated">Чтобы включить все точки останова, определенные в текущем сеансе, выберите команду <bpt id="p2">**</bpt>Включить все точки останова<ept id="p2">**</ept> в меню <bpt id="p1">**</bpt>Отладка<ept id="p1">**</ept>.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>The following script is an example of how you can enable all breakpoints from the Console Pane by using the <bpt id="p1">[</bpt>Enable-PSBreakpoint<ept id="p1">](https://technet.microsoft.com/en-us/library/739e1091-3b3f-405f-a428-bec7543e5df0)</ept> cmdlet.</source>
          <target state="translated">Следующий сценарий — пример включения всех точек останова из области консоли с помощью командлета <bpt id="p1">[</bpt>Enable-PSBreakpoint<ept id="p1">](https://technet.microsoft.com/en-us/library/739e1091-3b3f-405f-a428-bec7543e5df0)</ept>:</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>How to manage a debugging session</source>
          <target state="translated">Управление сеансом отладки</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Before you start debugging, you must set one or more breakpoints.</source>
          <target state="translated">Перед запуском отладки нужно задать одну или несколько точек останова.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>You cannot set a breakpoint unless the script that you want to debug is saved.</source>
          <target state="translated">Точки останова нельзя задавать, если отлаживаемый сценарий не сохранен.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>For directions on of how to set a breakpoint, see <bpt id="p1">[</bpt>How to manage breakpoints<ept id="p1">](#bkmk_1)</ept> or <bpt id="p2">[</bpt>Set-PSBreakpoint<ept id="p2">](https://technet.microsoft.com/en-us/library/6afd5d2c-a285-4796-8607-3cbf49471420)</ept>.</source>
          <target state="translated">Инструкции по заданию точек останова см. в статье <bpt id="p1">[</bpt>Управление точками останова<ept id="p1">](#bkmk_1)</ept> или <bpt id="p2">[</bpt>Set-PSBreakpoint<ept id="p2">](https://technet.microsoft.com/en-us/library/6afd5d2c-a285-4796-8607-3cbf49471420)</ept>.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>After you start debugging, you cannot edit a script until you stop debugging.</source>
          <target state="translated">После начала отладки сценарий нельзя редактировать до ее окончания.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>A script that has one or more breakpoints set is automatically saved before it is run.</source>
          <target state="translated">Сценарий, содержащий одну или несколько точек останова, автоматически сохраняется перед запуском.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>To start debugging</source>
          <target state="translated">Начало отладки</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>Press <bpt id="p1">**</bpt>F5<ept id="p1">**</ept> or, on the toolbar, click the <bpt id="p2">**</bpt>Run Script<ept id="p2">**</ept> icon, or on the <bpt id="p3">**</bpt>Debug<ept id="p3">**</ept> menu click <bpt id="p4">**</bpt>Run<ph id="ph1">\/</ph>Continue<ept id="p4">**</ept>.</source>
          <target state="translated">Нажмите клавишу <bpt id="p1">**</bpt>F5<ept id="p1">**</ept>, щелкните значок <bpt id="p2">**</bpt>Выполнить сценарий<ept id="p2">**</ept> на панели инструментов или выберите команду <bpt id="p4">**</bpt>Выполнить и продолжить<ept id="p4">**</ept> в меню <bpt id="p3">**</bpt>Отладка<ept id="p3">**</ept>.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>The script runs until it encounters the first breakpoint.</source>
          <target state="translated">Сценарий выполняется до первой точки останова.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>It pauses operation there and highlights the line on which it paused.</source>
          <target state="translated">В ней он приостанавливается и выделяет соответствующую строку.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>To continue debugging</source>
          <target state="translated">Продолжение отладки</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>Press <bpt id="p1">**</bpt>F5<ept id="p1">**</ept> or, on the toolbar, click the <bpt id="p2">**</bpt>Run Script<ept id="p2">**</ept> icon, or on the <bpt id="p3">**</bpt>Debug<ept id="p3">**</ept> menu, click <bpt id="p4">**</bpt>Run<ph id="ph1">\/</ph>Continue<ept id="p4">**</ept> or, in the Console Pane, type <bpt id="p5">**</bpt>C<ept id="p5">**</ept> and then press <bpt id="p6">**</bpt>ENTER<ept id="p6">**</ept>.</source>
          <target state="translated">Нажмите клавишу <bpt id="p1">**</bpt>F5<ept id="p1">**</ept>, щелкните значок <bpt id="p2">**</bpt>Выполнить сценарий<ept id="p2">**</ept> на панели инструментов и выберите команду <bpt id="p4">**</bpt>Выполнить и продолжить<ept id="p4">**</ept> в меню <bpt id="p3">**</bpt>Отладка<ept id="p3">**</ept> или введите <bpt id="p5">**</bpt>C<ept id="p5">**</ept> в области консоли и нажмите клавишу <bpt id="p6">**</bpt>ВВОД<ept id="p6">**</ept>.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>This causes the script to continue running to the next breakpoint or to the end of the script if no further breakpoints are encountered.</source>
          <target state="translated">В результате выполнение продолжается до следующей точки останова, а при ее отсутствии — до конца сценария.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>To view the call stack</source>
          <target state="translated">Просмотр стека вызовов</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>The call stack displays the current run location in the script.</source>
          <target state="translated">Стек вызовов отображает текущее расположение выполнения в сценарии.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>If the script is running in a function that was called by a different function, then that is represented in the display by additional rows in the output.</source>
          <target state="translated">Если сценарий выполняется в функции, вызванной другой функцией, это отражается путем добавления строк в выходные данные.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>The bottom<ph id="ph1">\-</ph>most row displays the original script and the line in it in which a function was called.</source>
          <target state="translated">В самой нижней строке отображается исходный сценарий и его строка, в которой была вызвана функция.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>The next line up shows that function and the line in it in which another function might have been called.</source>
          <target state="translated">Предыдущая строка показывает эту функцию и ее строку, в которой могла быть вызвана другая функция.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>The top<ph id="ph1">\-</ph>most row shows the current context of the current line on which the breakpoint is set.</source>
          <target state="translated">В самой верхней строке отображается текущий контекст для текущей строки, в которой задана точка останова.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>While paused, to see the current call stack, press <bpt id="p1">**</bpt>CTRL<ph id="ph1">\+</ph>SHIFT<ph id="ph2">\+</ph>D<ept id="p1">**</ept> or, on the <bpt id="p2">**</bpt>Debug<ept id="p2">**</ept> menu, click <bpt id="p3">**</bpt>Display Call Stack<ept id="p3">**</ept> or, in the Console Pane, type <bpt id="p4">**</bpt>K<ept id="p4">**</ept> and then press <bpt id="p5">**</bpt>ENTER<ept id="p5">**</ept>.</source>
          <target state="translated">Чтобы просмотреть текущий стек вызовов, пока выполнение приостановлено, нажмите сочетание клавиш <bpt id="p1">**</bpt>CTRL<ph id="ph1">\+</ph>SHIFT<ph id="ph2">\+</ph>D<ept id="p1">**</ept>, выберите команду <bpt id="p3">**</bpt>Отображение стека вызова<ept id="p3">**</ept> в меню <bpt id="p2">**</bpt>Отладка<ept id="p2">**</ept> или введите <bpt id="p4">**</bpt>K<ept id="p4">**</ept> в области консоли и нажмите клавишу <bpt id="p5">**</bpt>ВВОД<ept id="p5">**</ept>.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>To stop debugging</source>
          <target state="translated">Остановка отладки</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>Press <bpt id="p1">**</bpt>SHIFT<ph id="ph1">\-</ph>F5<ept id="p1">**</ept> or, on the <bpt id="p2">**</bpt>Debug<ept id="p2">**</ept> menu, click <bpt id="p3">**</bpt>Stop Debugger<ept id="p3">**</ept>, or, in the Console Pane, type <bpt id="p4">**</bpt>Q<ept id="p4">**</ept> and then press <bpt id="p5">**</bpt>ENTER<ept id="p5">**</ept>.</source>
          <target state="translated">Нажмите сочетание клавиш <bpt id="p1">**</bpt>SHIFT<ph id="ph1">\-</ph>F5<ept id="p1">**</ept>, выберите команду <bpt id="p3">**</bpt>Остановить отладчик<ept id="p3">**</ept> в меню <bpt id="p2">**</bpt>Отладка<ept id="p2">**</ept> или введите <bpt id="p4">**</bpt>Q<ept id="p4">**</ept> в области консоли и нажмите клавишу <bpt id="p5">**</bpt>ВВОД<ept id="p5">**</ept>.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>How to step over, step into, and step out while debugging</source>
          <target state="translated">Выполнение шагов с обходом, заходом и выходом во время отладки</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>Stepping is the process of running one statement at a time.</source>
          <target state="translated">Пошаговое выполнение сценария — это поочередное выполнение его операторов.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>You can stop on a line of code, and examine the values of variables and the state of the system.</source>
          <target state="translated">Выполнение можно остановить на любой строке кода, чтобы проверить значения переменных и состояние системы.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>The following table describes common debugging tasks such as stepping over, stepping into, and stepping out.</source>
          <target state="translated">В следующей таблице описаны задачи, часто выполняемые при отладке, такие как шаги с обходом, заходом и выходом:</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>Debugging Task</source>
          <target state="translated">Задача отладки</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>Description</source>
          <target state="translated">Описание</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>How to accomplish it in PowerShell ISE</source>
          <target state="translated">Способ выполнения в интегрированной среде сценариев PowerShell</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>Step Into</source>
          <target state="translated">Шаг с заходом</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>Executes the current statement and then stops at the next statement.</source>
          <target state="translated">Выполняет текущий оператор и останавливается на следующем операторе.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>If the current statement is a function or script call, then the debugger steps into that function or script, otherwise it stops at the next statement.</source>
          <target state="translated">Если текущий оператор является вызовом функции или сценария, отладчик выполняет их по шагам. В противном случае он останавливается на следующем операторе.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>Press <bpt id="p1">**</bpt>F11<ept id="p1">**</ept> or, on the <bpt id="p2">**</bpt>Debug<ept id="p2">**</ept> menu, click <bpt id="p3">**</bpt>Step Into<ept id="p3">**</ept>, or in the Console Pane, type <bpt id="p4">**</bpt>S<ept id="p4">**</ept> and press <bpt id="p5">**</bpt>ENTER<ept id="p5">**</ept>.</source>
          <target state="translated">Нажмите клавишу <bpt id="p1">**</bpt>F11<ept id="p1">**</ept>, выберите <bpt id="p3">**</bpt>Шаг с заходом<ept id="p3">**</ept> в меню <bpt id="p2">**</bpt>Отладка<ept id="p2">**</ept> или введите <bpt id="p4">**</bpt>S<ept id="p4">**</ept> в области консоли и нажмите клавишу <bpt id="p5">**</bpt>ВВОД<ept id="p5">**</ept>.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>Step Over</source>
          <target state="translated">Шаг с обходом</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>Executes the current statement and then stops at the next statement.</source>
          <target state="translated">Выполняет текущий оператор и останавливается на следующем операторе.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>If the current statement is a function or script call then the debugger executes the whole function or script, and it stops at the next statement after the function call.</source>
          <target state="translated">Если текущий оператор является вызовом функции или сценария, отладчик их полностью и останавливается на операторе, следующем после этого вызова.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>Press <bpt id="p1">**</bpt>F10<ept id="p1">**</ept> or, on the <bpt id="p2">**</bpt>Debug<ept id="p2">**</ept> menu, click <bpt id="p3">**</bpt>Step Over<ept id="p3">**</ept>, or in the Console Pane, type <bpt id="p4">**</bpt>V<ept id="p4">**</ept> and press <bpt id="p5">**</bpt>ENTER<ept id="p5">**</ept>.</source>
          <target state="translated">Нажмите клавишу <bpt id="p1">**</bpt>F10<ept id="p1">**</ept>, выберите <bpt id="p3">**</bpt>Шаг с обходом<ept id="p3">**</ept> в меню <bpt id="p2">**</bpt>Отладка<ept id="p2">**</ept> или введите <bpt id="p4">**</bpt>V<ept id="p4">**</ept> в области консоли и нажмите клавишу <bpt id="p5">**</bpt>ВВОД<ept id="p5">**</ept>.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>Step Out</source>
          <target state="translated">Шаг с выходом</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>Steps out of the current function and up one level if the function is nested.</source>
          <target state="translated">Выходит из текущей функции и переходит на один уровень выше, если функция является вложенной.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>If in the main body, the script is executed to the end, or to the next breakpoint.</source>
          <target state="translated">Если выполняется тело главной функции, сценарий выполняется до конца или до следующей точки останова.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>The skipped statements are executed, but not stepped through.</source>
          <target state="translated">Пропущенные операторы выполняются, но в них отладчик не останавливается.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>Press <bpt id="p1">**</bpt>SHIFT<ph id="ph1">\+</ph>F11<ept id="p1">**</ept>, or on the <bpt id="p2">**</bpt>Debug<ept id="p2">**</ept> menu, click <bpt id="p3">**</bpt>Step Out<ept id="p3">**</ept>, or in the Console Pane, type <bpt id="p4">**</bpt>O<ept id="p4">**</ept> and press <bpt id="p5">**</bpt>ENTER<ept id="p5">**</ept>.</source>
          <target state="translated">Нажмите сочетание клавиш <bpt id="p1">**</bpt>SHIFT<ph id="ph1">\+</ph>F11<ept id="p1">**</ept>, выберите команду <bpt id="p3">**</bpt>Шаг с выходом<ept id="p3">**</ept> в меню <bpt id="p2">**</bpt>Отладка<ept id="p2">**</ept> или введите <bpt id="p4">**</bpt>O<ept id="p4">**</ept> в области консоли и нажмите клавишу <bpt id="p5">**</bpt>ВВОД<ept id="p5">**</ept>.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>Continue</source>
          <target state="translated">Продолжение</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>Continues execution to the end, or to the next breakpoint.</source>
          <target state="translated">Продолжает выполнение до конца или до следующей точки останова.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>The skipped functions and invocations are executed, but not stepped through.</source>
          <target state="translated">Пропущенные функции и вызовы выполняются, но в них отладчик не останавливается.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>Press <bpt id="p1">**</bpt>F5<ept id="p1">**</ept> or, on the <bpt id="p2">**</bpt>Debug<ept id="p2">**</ept> menu, click <bpt id="p3">**</bpt>Run<ph id="ph1">\/</ph>Continue<ept id="p3">**</ept>, or in the Console Pane, type <bpt id="p4">**</bpt>C<ept id="p4">**</ept> and press <bpt id="p5">**</bpt>ENTER<ept id="p5">**</ept>.</source>
          <target state="translated">Нажмите клавишу <bpt id="p1">**</bpt>F5<ept id="p1">**</ept>, выберите команду <bpt id="p3">**</bpt>Выполнить и продолжить<ept id="p3">**</ept> в меню <bpt id="p2">**</bpt>Отладка<ept id="p2">**</ept> или введите <bpt id="p4">**</bpt>C<ept id="p4">**</ept> в области консоли и нажмите клавишу <bpt id="p5">**</bpt>ВВОД<ept id="p5">**</ept>.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>How to display the values of variables while debugging</source>
          <target state="translated">Отображение значений переменных при отладке</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>You can display the current values of variables in the script as you step through the code.</source>
          <target state="translated">При пошаговом выполнении кода можно отобразить текущие значения переменных в сценарии.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>To display the values of standard variables</source>
          <target state="translated">Отображение значений стандартных переменных</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>Use one of the following methods:</source>
          <target state="translated">Используйте один из следующих методов.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>In the Script Pane, hover over the variable to display its value as a tool tip.</source>
          <target state="translated">В области сценариев наведите указатель на переменную, чтобы отобразить ее значение в подсказке.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>In the Console Pane, type the variable name and press <bpt id="p1">**</bpt>ENTER<ept id="p1">**</ept>.</source>
          <target state="translated">В области консоли введите имя переменной и нажмите клавишу <bpt id="p1">**</bpt>ВВОД<ept id="p1">**</ept>.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>All panes in ISE are always in the same scope.</source>
          <target state="translated">Все области в интегрированной среде сценариев всегда относятся к одной области действия.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>Therefore, while you are debugging a script, the commands that you type in the Console Pane run in script scope.</source>
          <target state="translated">Таким образом, при отладке сценария команды, вводимые в области консоли, выполняются в области сценариев.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>This allows you to use the Console Pane to find the values of variables and call functions that are defined only in the script.</source>
          <target state="translated">Это позволяет использовать область консоли для поиска значений переменных и вызова функций, которые определены только в сценарии.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>To display the values of automatic variables</source>
          <target state="translated">Отображение значений автоматических переменных</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>You can use the preceding method to display the value of almost all variables while you are debugging a script.</source>
          <target state="translated">Описанный выше метод позволяет отобразить значения почти всех переменных при отладке сценария.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>However, these methods do not work for the following automatic variables.</source>
          <target state="translated">Однако он не работает для следующих автоматических переменных:</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>$Input</source>
          <target state="translated">$Input</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>$MyInvocation</source>
          <target state="translated">$MyInvocation</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>$PSBoundParameters</source>
          <target state="translated">$PSBoundParameters</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>$Args</source>
          <target state="translated">$Args</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>If you try to display the value of any of these variables, you get the value of that variable for in an internal pipeline the debugger uses, not the value of the variable in the script.</source>
          <target state="translated">При попытке отобразить значение любой из этих переменных отображается значение переменной из внутреннего конвейера отладчика, а не переменной в сценарии.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>You can work around this for a few variables ($<ph id="ph1">\_</ph>, $Input, $MyInvocation, $PSBoundParameters, and $Args) by using the following method:</source>
          <target state="translated">Для некоторых переменных ($<ph id="ph1">\_</ph>, $Input, $MyInvocation, $PSBoundParameters и $Args) это можно обойти с помощью следующего метода.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>In the script, assign the value of the automatic variable to a new variable.</source>
          <target state="translated">Присвойте значение автоматической переменной в сценарии новой переменной.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>Display the value of the new variable, either by hovering over the new variable in the Script Pane, or by typing the new variable in the Console Pane.</source>
          <target state="translated">Отобразите значение новой переменной, наведя на нее указатель мыши в области сценариев или введя ее имя в области консоли.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>For example, to display the value of the $MyInvocation variable, in the script, assign the value to a new variable, such as $scriptname, and then hover over or type the $scriptname variable to display its value.</source>
          <target state="translated">Например, чтобы отобразить значение переменной $MyInvocation в сценарии, присвойте ее значение новой переменной, например $scriptname, а затем наведите указатель мыши на переменную $scriptname или введите ее для отображения значения.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>See Also</source>
          <target state="translated">См. также</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>Using the Windows PowerShell ISE</source>
          <target state="translated">Использование интегрированной среды сценариев Windows PowerShell</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>