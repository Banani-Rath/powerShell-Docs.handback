<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="it-it">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-4fb33c9" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">6216f3e1a766c57a7549a3e3b4fbe76d043a8a41</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">scripting\getting-started\fundamental\Using-Variables-to-Store-Objects.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions" />
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">759072b966b448b4da5468e5855d1bbc7a9ca1c8</xliffext:olskeletonhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Using Variables to Store Objects</source>
          <target state="translated">Uso di variabili per l'archiviazione di oggetti</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>powershell,cmdlet</source>
          <target state="translated">powershell,cmdlet</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Using Variables to Store Objects</source>
          <target state="translated">Uso di variabili per l'archiviazione di oggetti</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Windows PowerShell works with objects.</source>
          <target state="translated">Windows PowerShell opera sugli oggetti.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Windows PowerShell lets you create variables - essentially named objects - to preserve output to use later.</source>
          <target state="translated">Windows PowerShell consente di creare variabili, fondamentalmente oggetti denominati, per salvare l'output in modo da portelo usare in seguito.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>If you are used to working with variables in other shells, remember that Windows PowerShell variables are objects, not text.</source>
          <target state="translated">Se si è abituati a usare le variabili in altre shell, tenere presente che le variabili di Windows PowerShell sono oggetti e non testo.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Variables are always specified with the initial character $, and can include any alphanumeric characters or the underscore in their names.</source>
          <target state="translated">Le variabili vengono sempre specificate con il carattere iniziale $ e possono includere qualsiasi carattere alfanumerico o carattere di sottolineatura nei nomi.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Creating a Variable</source>
          <target state="translated">Creazione di una variabile</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>You can create a variable by typing a valid variable name:</source>
          <target state="translated">È possibile creare una variabile digitando un nome di variabile valido:</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>This returns no result because <bpt id="p1">**</bpt>$loc<ept id="p1">**</ept> does not have a value.</source>
          <target state="translated">Non verrà restituito alcun risultato perché <bpt id="p1">**</bpt>$loc<ept id="p1">**</ept> non ha un valore.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>You can create a variable and assign it a value in the same step.</source>
          <target state="translated">È possibile creare una variabile e assegnarle un valore nello stesso passaggio.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Windows PowerShell only creates the variable if it does not exist; otherwise, it assigns the specified value to the existing variable.</source>
          <target state="translated">Windows PowerShell crea la variabile solo se non esiste. In caso contrario, assegna il valore specificato alla variabile esistente.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>To store your current location in the variable <bpt id="p1">**</bpt>$loc<ept id="p1">**</ept>, type:</source>
          <target state="translated">Per archiviare la posizione corrente nella variabile <bpt id="p1">**</bpt>$loc<ept id="p1">**</ept>, digitare:</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>There is no output displayed when you type this command because the output is sent to $loc.</source>
          <target state="translated">Non viene visualizzato alcun output quando si digita il comando perché l'output viene inviato a $loc.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>In Windows PowerShell, displayed output is a side effect of the fact that data which is not otherwise directed always gets sent to the screen.</source>
          <target state="translated">In Windows PowerShell, l'output visualizzato è un effetto collaterale del fatto che i dati non indirizzati diversamente vengono sempre inviati allo schermo.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Typing $loc will show your current location:</source>
          <target state="translated">Digitando $loc verrà visualizzata la posizione corrente:</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>You can use <bpt id="p1">**</bpt>Get-Member<ept id="p1">**</ept> to display information about the contents of variables.</source>
          <target state="translated">È possibile usare <bpt id="p1">**</bpt>Get-Member<ept id="p1">**</ept> per visualizzare informazioni sul contenuto delle variabili.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Piping $loc to Get-Member will show you that it is a <bpt id="p1">**</bpt>PathInfo<ept id="p1">**</ept> object, just like the output from Get-Location:</source>
          <target state="translated">L'invio attraverso la pipe di $loc a Get-Member indicherà che si tratta di un oggetto <bpt id="p1">**</bpt>PathInfo<ept id="p1">**</ept>, proprio come l'output da Get-Location:</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Manipulating Variables</source>
          <target state="translated">Manipolazione delle variabili</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Windows PowerShell provides several commands to manipulate variables.</source>
          <target state="translated">Windows PowerShell include diversi comandi per la manipolazione delle variabili.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>You can see a complete listing in a readable form by typing:</source>
          <target state="translated">È possibile visualizzare un elenco completo in un formato leggibile digitando:</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>In addition to the variables you create in your current Windows PowerShell session, there are several system-defined variables.</source>
          <target state="translated">Oltre alle variabili create nella sessione corrente di Windows PowerShell, esistono diverse variabili definite dal sistema.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>You can use the <bpt id="p1">**</bpt>Remove-Variable<ept id="p1">**</ept> cmdlet to clear out all of the variables which are not controlled by Windows PowerShell.</source>
          <target state="translated">È possibile usare il cmdlet <bpt id="p1">**</bpt>Remove-Variable<ept id="p1">**</ept> per cancellare tutte le variabili non controllate da Windows PowerShell.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Type the following command to clear all variables:</source>
          <target state="translated">Digitare il comando seguente per cancellare tutte le variabili:</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>This will produce the confirmation prompt you see below.</source>
          <target state="translated">Verrà restituito il prompt di conferma visualizzato di seguito.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>If you then run the <bpt id="p1">**</bpt>Get-Variable<ept id="p1">**</ept> cmdlet, you will see the remaining Windows PowerShell variables.</source>
          <target state="translated">Se si esegue poi il cmdlet <bpt id="p1">**</bpt>Get-Variable<ept id="p1">**</ept>, verranno visualizzate le variabili di Windows PowerShell rimanenti.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Since there is also a variable Windows PowerShell drive, you can also display all Windows PowerShell variables by typing:</source>
          <target state="translated">Dato che esiste anche un'unità di Windows PowerShell per le variabili, è possibile visualizzare tutte le variabili di Windows PowerShell anche digitando:</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Using Cmd.exe Variables</source>
          <target state="translated">Uso delle variabili di Cmd.exe</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Although Windows PowerShell is not Cmd.exe, it runs in a command shell environment and can use the same variables available in any environment in Windows.</source>
          <target state="translated">Anche se Windows PowerShell non è Cmd.exe, viene eseguito in un ambiente della shell di comando e può usare le stesse variabili disponibili in qualsiasi ambiente in Windows.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>These variables are exposed through a drive named <bpt id="p1">**</bpt>env<ept id="p1">**</ept>:.</source>
          <target state="translated">Queste variabili vengono esposte tramite un'unità denominata <bpt id="p1">**</bpt>env:<ept id="p1">**</ept>.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>You can view these variables by typing:</source>
          <target state="translated">È possibile visualizzare queste variabili digitando:</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Although the standard variable cmdlets are not designed to work with <bpt id="p1">**</bpt>env:<ept id="p1">**</ept> variables, you can still use them by specifying the <bpt id="p2">**</bpt>env:<ept id="p2">**</ept> prefix.</source>
          <target state="translated">Sebbene i cmdlet per le variabili standard non siano progettati per l'utilizzo con le variabili <bpt id="p1">**</bpt>env:<ept id="p1">**</ept>, è comunque possibile usarle specificando il prefisso <bpt id="p2">**</bpt>env:<ept id="p2">**</ept>.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>For example, to see the operating system root directory, you can use the command-shell <bpt id="p1">**</bpt>%SystemRoot%<ept id="p1">**</ept> variable from within Windows PowerShell by typing:</source>
          <target state="translated">Per visualizzare la directory radice del sistema operativo, ad esempio, è possibile usare la variabile <bpt id="p1">**</bpt>%SystemRoot%<ept id="p1">**</ept> della shell dei comandi da Windows PowerShell digitando:</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>You can also create and modify environment variables from within Windows PowerShell.</source>
          <target state="translated">È anche possibile creare e modificare le variabili di ambiente da Windows PowerShell.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Environment variables accessed from Windows PowerShell conform to the normal rules for environment variables elsewhere in Windows.</source>
          <target state="translated">Le variabili di ambiente a cui si accede da Windows PowerShell rispettano le normali regole per le variabili di ambiente valide in altre posizioni in Windows.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>